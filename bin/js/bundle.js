(function () {
    'use strict';

    /**This class is automatically generated by LayaAirIDE, please do not make any modifications. */


    class GameConfig {
        static init() {
            //注册Script或者Runtime引用
        }
    }
    GameConfig.width = 1280;
    GameConfig.height = 720;
    GameConfig.scaleMode ="fixedheight";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "test/TestScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;

    GameConfig.init();

    class GameVersion$1 {
    	constructor()
    	{
    		
    	}
    }
    	GameVersion$1.QUDAO=0;
    		//0官方，1uc，2_91，3当乐
    		GameVersion$1.bDebugMode=true;
    	
    		GameVersion$1.bAutoUpdateAPK=true;//自动更新APK客户端，渠道的置false;

    class BaseClass{
        constructor()
        {
            this.iStatType=0;
        }

    	Draw() {
    	}

    	ProcTouch( msg,  x,  y) {
    		return false;
    	}

    	CallBack( type, p)
    	{
    		
    	}
    }

    class GameData$1
    {
        constructor()
        {

        }     
    }

    GameData$1.GV=2;//游戏版本号
    GameData$1.bGm=false;
    GameData$1.bFromSD=true;
    GameData$1.sSDTo="url" + "/7gol/";
    GameData$1.sDSURL="www.honglajiao-qiguo.cn";
    GameData$1.sLGURL="www.hlj-qiguo.cn";

    GameData$1.sUpdateSeverList=["http://www.honglajiao-qiguo.cn:7999/7gol/",
        "http://www.honglajiao-qiguo.cn:7998/7gol/",
        "http://www.hlj-qiguo.cn:7999/7gol/",
        "http://www.hlj-qiguo.cn:7998/7gol/",
        "http://www.honglajiao-qiguo.cn:7999/7gol_test/",
        "http://192.168.1.102:7998/7gol_test/"];

        GameData$1.sUpdateClientList=["http://www.honglajiao-qiguo.cn:7999/clients/",
        "http://www.honglajiao-qiguo.cn:7998/clients/",
        "http://www.hlj-qiguo.cn:7999/clients/",
        "http://www.hlj-qiguo.cn:7998/clients/",
        "http://www.honglajiao-qiguo.cn:7999/clients/"];
    //	public final static String sUpdateSever="http://115.28.16.199:7999/7gol/";
    //	public final static String sUpdateClient="http://115.28.16.199:7999/clients/";//+QUDAO+"/7gol.apk";
    GameData$1.APKVersion=83;//19

    GameData$1.bAutoGetInForDebug=false;//自动进入到游戏中，方便测试

    //人物升级经验
    //宠物升级经验为 人物升级经验/3
    //技能升级经验为 人物升级经验/6
    //技能升级金钱为 人物升级经验/9/2
    GameData$1.iUpgradeExp=
    [50,82,118,162,223,309,437,625,900,1299,//0-10
    1865,2655,3737,5190,7108,9602,12797,16839,21892,28143,//10-20
    35800,45097,56291,69673,85554,104286,126244,151847,181542,215822,//20-30
    255210,300282,351648,409973,475959,550369,634007,727740,832483,949217,//30-40
    1078972,1222853,1382018,1557702,1751196,1963878,2197181,2452633,2731820,3036427,//40-50
    3368205,3729006,4120752,4545473,5005273,5502370,6039058,6617754,7240952,7911277,//50-60
    8631436,9404270,10232709,11119824,12068777,13082876,14165527,15320290,16550824,17860949,//60-70
    38753380,44123118,50086102,56692039,63993533,72046195,80908733,90643061,101314396,112991366,//70-80
    125746113,139654396,154795703,171253353,189114611,208470792,229417375,252054113,276485149,302819125,//80-90
    331075927,361085709,392955657,426797546,462727854,500867876,541343848,584287057,629618890,677400453,//90-100
    727767957,780862910,836699467,895022208,955969897];

    GameData$1.iUpgradeMoney=[50,82,118,162,223,309,437,625,900,1299,//0-10
        1865,2655,3737,5190,7108,9602,12797,16839,21892,28143,//10-20
        35800,45097,56291,69673,85554,104286,126244,151847,181542,215822,//20-30
        255210,300282,351648,409973,475959,550369,634007,727740,832483,949217,//30-40
        1078972,1222853,1382018,1557702,1751196,1963878,2197181,2452633,2731820,3036427,//40-50
        3368205,3729006,4120752,4545473,5005273,5502370,6039058,6617754,7240952,7911277,//50-60
        8631436,9404270,10232709,11119824,12068777,13082876,14165527,15320290,16550824,17860949,//60-70
        38753380,39648336,40642166,41743155,42960070,44302180,45779269,47401657,49180212,51126373,//70-80
        53252164,55570211,58093762,60836703,63813579,67039609,70530706,74303495,78375334,82764330,//80-90
        87473797,92475427,97787085,103427399,109415783,115772453,122518448,129675649,137230954,145194547,//90-100
        153589131,162438289,171744381,181464837,191622785];

        GameData$1.sZhenName=["普通阵","天罡阵","八卦阵","疾风阵","飞龙阵","聚星阵"];

        GameData$1.sWXK=     ["火","金","土","水","木"];
        GameData$1.sWuXing=["金","木","水","火","土"];
        GameData$1.sWXS=    ["土","水","金","木","火"];

        GameData$1._sWXK=   ["木","土","火","金","水"];
        GameData$1._sWXS=   ["水","火","木","土","金"];

        GameData$1.sWeek=["日","一","二","三","四","五","六","日","八","九","十"];
        GameData$1.sBigNum=["零","一","二","三","四","五","六","七","八","九","十","十一","十二","十三","十四","十五","十六","十七","十八","十九","二十"];

        GameData$1.iBaseAttAdd=[
        [10,10,10,10,10],
        [12,5,11,12,10],
        [12,11,11,8,8]];

        GameData$1.iMasterids=[75,5,6,7,21,22,23,24,25,26];
        GameData$1.sSchools=["无","剑侠居","茅蓬坞","庐医崖","武安阁","溶洞","鬼谷","封神台","仙人洞","神女峰"];
        GameData$1.iSchoolMapIds=[0,5,6,7,10,8,9,11,12,13];
        GameData$1.iSchoolSkillId=[[1,2,3,4,5,12],

                                          [1,2,3,4,5,12],//剑侠居
                                          [14,15,16,17,18,19],//茅蓬坞
                                          [27,28,29,30,31,32],//卢医崖
                                          
                                          [40,41,42,43,44,45],
                                          [53,54,55,56,57,58],
                                          [66,67,68,69,70,71],
                                          
                                          [79,80,81,82,83,84],
                                          [92,93,94,95,96,97],
                                          [105,106,107,108,109,110]];
                                          GameData$1.iGovSkillId=[118,119,120,121,122,123,124,125];
                                          GameData$1.iGovXiuId=[126,127,128,129,130,131,197,198,199,200];

                                          GameData$1.EXTCOLOR="#c00ff00";
                                          GameData$1.VOICETIMEOUT=300;

    class GmConfig$1
    {
        constructor()
        {

        }
    }

    GmConfig$1.SCRW = 800;//参与计算的尺寸
    GmConfig$1.SCRH = 480;

    GmConfig$1.OFFX=0;//真实屏幕偏移量
    GmConfig$1.OFFY=0;
    	
    GmConfig$1.REALW=1024;//拉伸目标分辨率尺寸
    GmConfig$1.REALH=768;
    	
    GmConfig$1.SYSW=2048;//系统分辨率
    GmConfig$1.SYSH=1440;
    	
    GmConfig$1.bDebug=false;
    	
    GmConfig$1.bBigUI=false;
    GmConfig$1.BUW=960;
    GmConfig$1.BUH=540;

    class _ImageList
    {
        constructor(i)
        {
            this.bUseing=false;
            this.bLoaded=false;
            this.iImageId=i;
            this.blocks=new Array();
            this.iBlockCount=0;
        }
        GetBlock(x,y,w,h)
        {
            var i;
            for(i=0;i<this.iBlockCount;i++)
            {
                if(this.blocks[i].x==x && 
                    this.blocks[i].y==y && 
                    this.blocks[i].w==w && 
                    this.blocks[i].h==h)
                {
                    return this.blocks[i].image;
                }
            }
            return this.CreateBlock(x,y,w,h).image;
        }
        CreateBlock(x,y,w,h)
        {
            this.blocks[this.iBlockCount]=new Object();
            this.blocks[this.iBlockCount].x=x;
            this.blocks[this.iBlockCount].y=y;
            this.blocks[this.iBlockCount].w=w;
            this.blocks[this.iBlockCount].h=h;
            //this.image.scaleRate=1;
            this.blocks[this.iBlockCount].image=Laya.Texture.createFromTexture(this.image,x,y,w,h);
        //    this.blocks[this.iBlockCount].image.bitmap.filterMode=0;
            this.iBlockCount++;
            return this.blocks[this.iBlockCount-1];
        }
    }
    class _TextBuffer
    {
        constructor()
        {
            this._txts=new Array(_TextBuffer.SIZE);
            for(var i=0;i<_TextBuffer.SIZE;i++)
            {
                this._txts[i]=new Object();
                this._txts[i].bUseing=false;
                this._txts[i].bUsed=false;
                this._txts[i].txt=new Laya.Text();
                this._txts[i].iTimeOut=0;
                this._txts[i].s="";
                this._txts[i].c=0;
                this._txts[i].size=0;
                this._txts[i].ab=0;
                this._txts[i].sw=0;
                this._txts[i].sh=0;
                this._txts[i].ra=0;
                this._txts[i].ratx=0;
                this._txts[i].raty=0;
                this._txts[i].x=0;
                this._txts[i].y=0;
            }
            this.iMaxPoint=0;
        }
        Find(s,c,size,ab,sw,sh,ra,ratx,raty)
        {
            for(var i=0;i<this.iMaxPoint;i++)
            {
                if(!this._txts[i].bUseing)continue;
                if(this._txts[i].bUsed)continue;
                if(this._txts[i].s!=s)continue;
                if(this._txts[i].c!=c)continue;
                if(this._txts[i].size!=size)continue;
                if(this._txts[i].ab!=ab)continue;
                if(this._txts[i].sw!=sw)continue;
                if(this._txts[i].sh!=sh)continue;
                if(this._txts[i].ra!=ra)continue;
                if(this._txts[i].ratx!=ratx)continue;
                if(this._txts[i].raty!=raty)continue;
                this._txts[i].iTimeOut=_TextBuffer.iTick+30;
                this._txts[i].bUsed=true;
                return this._txts[i];
            }
            return null;
        }
        Get(s,c,size,ab,sw,sh,ra,ratx,raty)
        {
            for(var i=0;i<_TextBuffer.SIZE;i++)
            {
                if(!this._txts[i].bUseing)
                {
                    this._txts[i].bUseing=true;
                    this._txts[i].s=s;
                    this._txts[i].c=c;
                    this._txts[i].size=size;
                    this._txts[i].ab=ab;
                    this._txts[i].sw=sw;
                    this._txts[i].sh=sh;
                    this._txts[i].ra=ra;
                    this._txts[i].ratx=ratx;
                    this._txts[i].raty=raty;
                    this._txts[i].iTimeOut=_TextBuffer.iTick+30;
                    this._txts[i].bUsed=true;
                    return this._txts[i];
                }
            }
            return null;
        }
        Clear()
        {
            this.iCount=0;
            this.iMaxPoint=0;
            for(var i=0;i<_TextBuffer.SIZE;i++)
            {
                if(this._txts[i].bUseing)
                {
                    if(this._txts[i].iTimeOut<_TextBuffer.iTick)this._txts[i].bUseing=false;
                    else
                    {
                        this._txts[i].bUsed=false;
                        this.iCount++;
                        this.iMaxPoint=i;
                    }
                }
            }
            this.iMaxPoint++;
        }
    }
    _TextBuffer.SIZE=1024;
    _TextBuffer.iTick=0;

    class _SpanBuffer
    {
        constructor()
        {
            this._spans=new Array(_SpanBuffer.SIZE);
            for(var i=0;i<_SpanBuffer.SIZE;i++)
            {
                this._spans[i]=new Object();
                this._spans[i].bUseing=false;
                this._spans[i].bUsed=false;
                this._spans[i].span=new Laya.HTMLDivElement();
                this._spans[i].iTimeOut=0;
                this._spans[i].s="";
                this._spans[i].x=0;
                this._spans[i].y=0;
            }
            this.iMaxPoint=0;
        }
        Find(s)
        {
            for(var i=0;i<this.iMaxPoint;i++)
            {
                if(!this._spans[i].bUseing)continue;
                if(this._spans[i].bUsed)continue;
                if(this._spans[i].s!=s)continue;
                this._spans[i].iTimeOut=_TextBuffer.iTick+30;
                this._spans[i].bUsed=true;
                return this._spans[i];
            }
            return null;
        }
        Get(s)
        {
            for(var i=0;i<_SpanBuffer.SIZE;i++)
            {
                if(!this._spans[i].bUseing)
                {
                    this._spans[i].bUseing=true;
                    this._spans[i].span.innerHTML=s;
                    this._spans[i].s=s;
                    this._spans[i].iTimeOut=_TextBuffer.iTick+30;
                    this._spans[i].bUsed=true;
                    return this._spans[i];
                }
            }
            return null;
        }
        Clear()
        {
            this.iCount=0;
            this.iMaxPoint=0;
            for(var i=0;i<_SpanBuffer.SIZE;i++)
            {
                if(this._spans[i].bUseing)
                {
                    if(this._spans[i].iTimeOut<_TextBuffer.iTick)
                    {
                        this._spans[i].bUseing=false;
                    }
                    else
                    {
                        this._spans[i].bUsed=false;
                        this.iCount++;
                        this.iMaxPoint=i;
                    }
                }
            }
            this.iMaxPoint++;
        }
    }
    _SpanBuffer.SIZE=16;

    class M2DFast$1
    {
        constructor()
        {
            this.tb=new _TextBuffer();
            this.sb=new _SpanBuffer();

            this.m_ImageList=new Array(M2DFast$1.MAXIMAGECOUNT);
            for(var i=0;i<M2DFast$1.MAXIMAGECOUNT;i++)
            {
                this.m_ImageList[i]=new _ImageList(i);
            }
            this.view_sprite = new Laya.Sprite();
            Laya.stage.addChild(this.view_sprite);
            this.view_sprite.graphics.clear();
            this.Clear();

            this.block_sprites=new Array();
            this.iSpritePoint=0;
            this.iSpriteCount=0;

            this.block_texts=new Array();
            this.iTextPoint=0;
            this.iTextCount=0;

            this.iClipSpriteCount=0;
            this.clip_sprites=new Array();

            this.bClip=false;
            this.iFlashDelay=0;//震动屏幕延迟

            this.iTextWidth=-1;//宽度限制，超过换行

            this.txt_w=new Laya.Text();

            // this.div.appendHTML("asdf");
            // this.div.layout();
            this.drawrect=new Int32Array(4);
        }
        _SpanText(s,c,size)
        {
            return "<span style='font-size:"+size+"px;color:"+this.c_to_c(c)+"'>"+s+"</span>";
        }
        _DrawSpanText(x,y,s,width)
        {
            var tt=this.sb.Find(s);
            if(tt==null)
            {
                tt=this.sb.Get(s);
                if(tt==null)return;
            }
            // var s=this._MakeTextEx("testaaatestaaatests",0x00ff00,30)+
            //     this._MakeTextEx("testaaatestaaatests",0xff0000,20);
            // this.div=new Laya.HTMLDivElement();
            // this.div.innerHTML=s;

            // this.div.pos(x,y);
            // this.div.style.wordWrap=true;
            // this.div.style.width=width;

            // this.view_sprite.addChild(this.div);
            tt.span.pos(x,y);
            tt.span.style.wordWrap=true;
            tt.span.style.width=width;

            this.view_sprite.addChild(tt.span);
        }
        FindFreeText()
        {
            if(this.iTextPoint>=this.iTextCount)
            {
                this.block_texts[this.iTextCount]=new Laya.Text();
                this.iTextCount++;
            }
            this.iTextPoint++;
            return this.block_texts[this.iTextPoint-1];
        }
        FindFreeSprite()
        {
            if(this.iSpritePoint>=this.iSpriteCount)
            {
                this.block_sprites[this.iSpriteCount]=new Laya.Sprite();
                this.iSpriteCount++;
            }
            this.iSpritePoint++;
            return this.block_sprites[this.iSpritePoint-1];
        }
        Clear()
        {
            var i;
            // for(i=0;i<this.iSpritePoint;i++)
            // {
            //     this.block_sprites[i].removeChildren();
            // }
            // for(i=0;i<this.iTextCount;i++)
            // {
            //     this.block_texts[i].removeChildren();
            // }
            this.view_sprite.removeChildren();
            this.iSpritePoint=0;
            this.iTextPoint=0;

            for(i=0;i<this.iClipSpriteCount;i++)
            {
                this.clip_sprites[i].scrollRect=null;
                this.clip_sprites[i].removeChildren();
            }
            this.iClipSpriteCount=0;

            if(this.iFlashDelay>0)
            {
                this.iFlashDelay--;
                this.view_sprite.pos(XDefine$1.grnd(-5,5),XDefine$1.grnd(-5,5));
            }
            else
            {
                this.view_sprite.pos(0,0);
            }
            _TextBuffer.iTick++;
            this.tb.Clear();
            this.sb.Clear();
        }

        FindFreeImage()
        {
            for(var i=0;i<M2DFast$1.MAXIMAGECOUNT;i++)
            {
                if(!this.m_ImageList[i].bUseing)return this.m_ImageList[i];
            }
            return null;
        }
        FindImage(i)
        {
            if(this.m_ImageList[i].bUseing && this.m_ImageList[i].bLoaded)return this.m_ImageList[i];
            return null;
        }
        LoadedImage(pm2f,fn,blocal,pimage,img)
        {

           

            if(img==null)
            {
                if(fn.indexOf('spirit')>0){
                    XDefine$1.addLoadMask(1);
                }
                Laya.loader.load((blocal?"":XDefine$1.BASE_URL)+fn, Laya.Handler.create(pm2f, pm2f.LoadedImage,[pm2f,fn,blocal,pimage]),null,Laya.Loader.IMAGE);
                return;
            }
            if(fn.indexOf('spirit')>0){
                XDefine$1.addLoadMask(2);
            }
            //XDefine.sop("Loaded "+fn,img);
            pimage.image = img;
            pimage.bLoaded = true;
            pimage.fn = fn;
        }

        LoadImage(fn,blocal,cb)
        {
            if(blocal==null)blocal=false;
            blocal=false;
            var pimage=this.FindFreeImage();
            if(pimage==null)return -1;
            pimage.bUseing=true;
            this.LoadedImage(this,fn,blocal,pimage);
            return pimage.iImageId;
        }
        _SetViewClip(x,y,w,h)
        {
            this.bClip=true;
            this.iClipX=x;
            this.iClipY=y;
            this.iClipW=w;
            this.iClipH=h;
        }
        NoClip()
        {
            this.bClip=false;
        }
        _DrawImageEx(x,y,index,sx,sy,w,h,ab,sw,sh,ra,ratx,raty,turn)
        {
            if(w>2048 || h>2048)return;
            turn=turn||false;
            var pimage=this.FindImage(index);
            if(pimage==null)return;
            if(w==-1)w=pimage.image.width;
            if(h==-1)h=pimage.image.height;

           

            // if(x>640)return;
            // if(y>Laya.stage.height)return;
            // if(x+w*sw<0)return;
            // if(y+h*sh<0)return;
            if(this.bClip)
            {
                // if(x>this.iClipX+this.iClipW)return;
                // if(y>this.iClipY+this.iClipH)return;
                // if(x+w*sw<this.iClipX)return;
                // if(y+h*sh<this.iClipY)return;
            }
            var ape = this.FindFreeSprite();

            if(this.bClip)
            {
                var ape2 = this.FindFreeSprite();
                ape2.graphics.clear();
                ape2.pos(this.iClipX,this.iClipY);
                ape2.rotation=0;
                ape2.alpha=1;
                ape2.scale(1,1);
                ape2.scrollRect=new Laya.Rectangle(this.iClipX,this.iClipY,this.iClipW,this.iClipH);
                this.view_sprite.addChild(ape2);
                ape2.addChild(ape);
                this.clip_sprites[this.iClipSpriteCount++]=ape2;
            }
            else this.view_sprite.addChild(ape);
            ape.graphics.clear();

            // if(w%2!=0)w++;
            // if(h%2!=0)h++;
            // var t1=x+w/2;
            // var t2=y+h/2;
            // if(t1==429.5 && t2==450)
            // {
            //     ratx=t1;
            //     raty=t2;
            // }

            if(ratx==-1)ratx=x;
            else if(ratx==-2)ratx=x+w/2;
            else if(ratx==-3)ratx=x+w;

            if(raty==-1)raty=y;
            else if(raty==-2)raty=y+h/2;
            else if(raty==-3)raty=y+h;

            var nt=pimage.GetBlock(sx,sy,w,h);

            //if(this.bClip)

            //this._setuv(pimage.image,sx,sy,w,h);
            ape.graphics.drawImage(nt,x-ratx, y-raty,w,h);
            // ape.pivot(x+w/2,y+h/2);
            ape.pos(ratx,raty);
            ape.alpha=ab/100;
            ape.rotation=ra;
            ape.scale(turn?-sw:sw,sh);
        }
        c_to_c(c)
        {
            var ret=c.toString(16);
            while(ret.length<6)ret="0"+ret;
            return "#"+ret;
        }
        TextWidth(s,size)
        {
            this.txt_w.text=s;
            this.txt_w.fontSize=size;
            this.iTextHeight=this.txt_w.textHeight;
            return this.txt_w.textWidth;
        }

        _DrawTextEx(x,y,s,c,size,ab,sw,sh,ra,ratx,raty)
        {
            if(s==null)return;

            // s="asdf";


            // if(x>640)return;
            if(y>Laya.stage.height)return;
        
            var text;

            var tt=this.tb.Find(s,c,size,ab,sw,sh,ra,ratx,raty);
            if(tt==null)
            {
                tt=this.tb.Get(s,c,size,ab,sw,sh,ra,ratx,raty);
                if(tt==null)return;
                text=tt.txt;
                text.text=s;
                text.color=this.c_to_c(c);
                text.fontSize=size;
                text.width = text.textWidth;//设置宽度后超过自动换行
                text.height = text.textHeight;
                if(this.iTextWidth>0)
                {
                    text.wordWrap=true;//自动换行
                    text.width=this.iTextWidth;
                }
                else text.wordWrap=false;
                text.alpha=ab/100;
                text.rotation=ra;
                text.scale(sw,sh);

                tt.x=-1;
                tt.y=-1;
            }
            else text=tt.txt;
            this.drawrect[0]=x;
            this.drawrect[1]=y;
            this.drawrect[2]=x+text.textWidth;
            this.drawrect[3]=y+text.textHeight;
            
            if(tt.x!=x || tt.y!=y)
            {
                var px,py;
                if(ratx==0 || ratx==-1)px=0;
                else if(ratx==-2)px=text.textWidth/2;
                else if(ratx==-3)px=text.textWidth;
                else px=ratx-x;
                if(raty==0 || raty==-1)py=0;
                else if(raty==-2)py=text.textHeight/2;
                else if(raty==-3)py=text.textHeight;
                else py=raty-y;
                text.pivot(px,py);
        
                text.x=x;
                text.y=y;

                tt.x=x;
                tt.y=y;
            }

            if(this.bClip)
            {
                var ape2 = this.FindFreeSprite();
                ape2.graphics.clear();
                ape2.pos(this.iClipX,this.iClipY);
                ape2.rotation=0;
                ape2.alpha=1;
                ape2.scale(1,1);
                ape2.scrollRect=new Laya.Rectangle(this.iClipX,this.iClipY,this.iClipW,this.iClipH);
                this.view_sprite.addChild(ape2);
                ape2.addChild(text);
                this.clip_sprites[this.iClipSpriteCount++]=ape2;
            }
            else this.view_sprite.addChild(text);
            // this.view_sprite.addChild(text);

            return text.textWidth;
        }
        DrawTextEx22(x,y,s,c,size,ab,sw,sh,ra,ratx,raty)
        {
            if(s==null)return;

            if(x>640)return;
            if(y>Laya.stage.height)return;

            var text=this.FindFreeText();

            // if(x+text.textWidth<0)return;
            // if(y+text.textHeight<0)return;
            // if(this.bClip)
            // {
            //     if(x>this.iClipX+this.iClipW)return;
            //     if(y>this.iClipY+this.iClipH)return;
            //     if(x+text.textWidth<this.iClipX)return;
            //     if(y+text.textHeight<this.iClipY)return;
            // }

            if(this.bClip)
            {
                var ape2 = this.FindFreeSprite();
                ape2.graphics.clear();
                ape2.pos(this.iClipX,this.iClipY);
                ape2.rotation=0;
                ape2.alpha=1;
                ape2.scale(1,1);
                ape2.scrollRect=new Laya.Rectangle(this.iClipX,this.iClipY,this.iClipW,this.iClipH);
                this.view_sprite.addChild(ape2);
                ape2.addChild(text);
                this.clip_sprites[this.iClipSpriteCount++]=ape2;
            }
            else this.view_sprite.addChild(text);
            // this.view_sprite.addChild(text);


            text.text=s;
            text.color=this.c_to_c(c);
            text.fontSize=size;
            // if(ratx==-1)text.align="left";
            // else if(ratx==-2)text.align="center";
            // else if(ratx==-3)text.align="right";
            // if(raty==-1)text.valign="top";
            // else if(raty==-2)text.valign="middle";
            // else if(raty==-3)text.valign="bottom";
            
            //text.bgColor="#ffffff";//背景色
            //text.bold=true;//粗体
            //borderColor;//边框背景色
            
            //text.font="Arial";
            
            //text.isComplexText=false;//拆分文字渲染
            //text.italic=true;//斜体

            //leading//垂直行间距
            //overflow//超出范围后"hidden"、"visible"和"scroll"
            //padding边距
            //RightToLeft
            //stroke描边宽度
            //strokeColor描边颜色
            text.width = text.textWidth;//设置宽度后超过自动换行
            text.height = text.textHeight;

            if(this.iTextWidth>0)
            {
                text.wordWrap=true;//自动换行
                text.width=this.iTextWidth;
            }
            else text.wordWrap=false;

            var px,py;
            if(ratx==-1)px=0;
            else if(ratx==-2)px=text.textWidth/2;
            else if(ratx==-3)px=text.textWidth;
            else px=ratx-x;
            if(raty==-1)py=0;
            else if(raty==-2)py=text.textHeight/2;
            else if(raty==-3)py=text.textHeight;
            else py=raty-y;
            text.pivot(px,py);
            text.alpha=ab/100;
            text.rotation=ra;
            text.scale(sw,sh);

            text.x=x;
            text.y=y;
        }
        DrawCircle(x,y,radius,color,linew)
        {
            if(linew==null)linew=1;
            var sp=this.FindFreeSprite();
            this.view_sprite.addChild(sp);
            sp.graphics.clear();
            sp.graphics.drawCircle(x,y,radius,null,this.c_to_c(color),linew);

            sp.pivot(0,0);
            sp.rotation=0;
            sp.alpha=100;
            sp.scale(1,1);
            sp.pos(0,0);
        }
        FillCircle(x,y,radius,color,linew)
        {
            if(x-radius>640)return;
            if(y-radius>Laya.stage.height)return;
            if(x+radius<0)return;
            if(y+radius<0)return;
            if(this.bClip)
            {
                if(x-radius>this.iClipX+this.iClipW)return;
                if(y-radius>this.iClipY+this.iClipH)return;
                if(x+radius<this.iClipX)return;
                if(y+radius<this.iClipY)return;
            }

            if(linew==null)linew=1;
            var sp=this.FindFreeSprite();
            this.view_sprite.addChild(sp);
            sp.graphics.clear();
            sp.graphics.drawCircle(x,y,radius,this.c_to_c(color),null,linew);

            sp.pivot(0,0);
            sp.rotation=0;
            sp.alpha=100;
            sp.scale(1,1);
            sp.pos(0,0);
        }

        DrawRect(x1,y1,w,h,color,linew)
        {
            if(linew==null)linew=1;
            var sp=this.FindFreeSprite();

            if(this.bClip)
            {
                var ape2 = this.FindFreeSprite();
                ape2.graphics.clear();
                ape2.pos(this.iClipX,this.iClipY);
                ape2.rotation=0;
                ape2.alpha=1;
                ape2.scale(1,1);
                ape2.scrollRect=new Laya.Rectangle(this.iClipX,this.iClipY,this.iClipW,this.iClipH);
                this.view_sprite.addChild(ape2);
                ape2.addChild(sp);
                this.clip_sprites[this.iClipSpriteCount++]=ape2;
            }
            else this.view_sprite.addChild(sp);
            // this.view_sprite.addChild(sp);
            sp.graphics.clear();
            sp.graphics.drawRect(x1,y1,w,h,null,this.c_to_c(color),linew);

            sp.pivot(0,0);
            sp.rotation=0;
            sp.alpha=100;
            sp.scale(1,1);
            sp.pos(0,0);
        }
        FillRect(x1,y1,w,h,color,linew,alpha)
        {
            if(w<=0)return;
            if(h<=0)return;
            if(linew==null)linew=1;
            if(alpha==null)alpha=100;
            var sp=this.FindFreeSprite();
            if(this.bClip)
            {
                var ape2 = this.FindFreeSprite();
                ape2.graphics.clear();
                ape2.pos(this.iClipX,this.iClipY);
                ape2.rotation=0;
                ape2.alpha=1;
                ape2.scale(1,1);
                ape2.scrollRect=new Laya.Rectangle(this.iClipX,this.iClipY,this.iClipW,this.iClipH);
                this.view_sprite.addChild(ape2);
                ape2.addChild(sp);
                this.clip_sprites[this.iClipSpriteCount++]=ape2;
            }
            else this.view_sprite.addChild(sp);
            sp.graphics.clear();
            sp.graphics.drawRect(x1,y1,w,h,this.c_to_c(color),this.c_to_c(color),linew);

            sp.pivot(0,0);
            sp.rotation=0;
            sp.alpha=alpha/100;
            sp.scale(1,1);
            sp.pos(0,0);
        }
        DrawLine(x1,y1,x2,y2,color,linew)
        {
            if(linew==null)linew=1;
            var sp=this.FindFreeSprite();
            this.view_sprite.addChild(sp);
            sp.graphics.clear();
            sp.graphics.drawLine(x1,y1,x2,y2,color,linew);

            sp.pivot(0,0);
            sp.rotation=0;
            sp.alpha=1;
            sp.scale(1,1);
            sp.pos(0,0);

        }
    }

    M2DFast$1.pm2f=null;
    M2DFast$1.xm3f=null;
    M2DFast$1.gi=function()
    {
        if(M2DFast$1.pm2f==null)
        {
            M2DFast$1.pm2f=new M2DFast$1();
            M2DFast$1.xm3f=M2DFast$1.pm2f;
        }
        return M2DFast$1.pm2f;
    };

    M2DFast$1.MAXIMAGECOUNT=2500;

    class M3DFast$1 extends M2DFast$1
    {
        constructor()
        {
            super();
        }
        LoadFromFile(fn,rid,blocal,cb){
            return this.LoadImage("res/"+fn,blocal,cb);
        }
        
        DrawImageEx(dest,x,y,index,sx,sy,w,h,ab,sw,sh,ra,ratx,raty)
        {
            this._DrawImageEx(x,y,index,sx,sy,w,h,ab,sw,sh,ra,ratx,raty);
        }
        SetViewClip(x1,y1,x2,y2)
        {
            this._SetViewClip(x1,y1,x2-x1,y2-y1);
        }
        FillRect_2D(x,y,x2,y2,c)
        {
    //        if(c<0)c=c+0x100000000;
            var a=(c&0xff000000)>>24;
            if(a<0)a=a+0x100;
            this.FillRect(x,y,x2-x,y2-y,c&0xffffff,1,a/2.55);
        }
        DrawTextEx(x,y,s,c,size,ab,sw,sh,ra,ratx,raty)
        {
            this._DrawTextEx(x,y,s,c&0xffffff,size,ab,sw,sh,ra,ratx,raty);
        }
        DrawText( dx, dy, s, c)
    	{
    		this.DrawTextEx(dx, dy, s, c, 30, 101, 1, 1, 0, 0, 0);
        }
        DrawText_2( dx, dy, s, c, size, ab, sw, sh, ra, ratx, raty, type, c2)
        {
            //this.DrawTextEx(dx+2,dy+2,s,c2,size,ab,sw,sh,ra,ratx,raty);

            this.DrawTextEx(dx,dy,s,c,size,ab,sw,sh,ra,ratx,raty);
        }
        DrawRect_2D(x,y,x2,y2,c)
        {
            this.DrawRect(x,y,x2-x,y2-y,c&0xffffff,1);
        }
        GetTextWidth(s,size)
        {
            return this.TextWidth(s,size);
        }
        GetTextHeight()
        {
            return this.iTextHeight;
        }
        CheckImageLoaded()
        {
            var c1=0,c2=0;
            for(var i=0;i<M2DFast$1.MAXIMAGECOUNT;i++)
            {
                if(this.m_ImageList[i].bUseing)
                {
                    c1++;
                    if(this.m_ImageList[i].bLoaded)c2++;
                }
            }
            if(c1==c2)return;
            this.DrawTextEx22(Laya.stage.width/2,Laya.stage.height,c1+"/"+c2,0xffffffff,30,101,1,1,0,-2,-3);
        }
    }
    M3DFast$1.pm3f=null;
    M3DFast$1.gi=function()
    {
        if(M3DFast$1.pm3f==null)M3DFast$1.pm3f=new M3DFast$1();
        return M3DFast$1.pm3f;
    };

    // import AnimaAction from "./AnimaAction"

    class AnimaAction
    {

        constructor(fromaa)
        {
            this.iAnimaPoint=-1,
            this.iDelay=-1,
            this.iFrame=-1,
            this.pani=null,
            this.iRect=[0,0,0,0];
            if(fromaa!=null)this.copyfrom(fromaa);
        }
        copyfrom(a)
        {
            this.iAnimaPoint=a.iAnimaPoint;
            this.iDelay=a.iDelay;
            this.iFrame=a.iFrame;
            this.pani=a.pani;
            this.iRect[0]=a.iRect[0];
            this.iRect[1]=a.iRect[1];
            this.iRect[2]=a.iRect[2];
            this.iRect[3]=a.iRect[3];
        }
        Reset()
        {
            this.iFrame=0;
            this.iDelay=0;
        }
    /*    Draw(x,y)
        {
            this.pani.DrawAnimaEx_ByOffset(x,y,this.iAnimaPoint,this.iFrame,101,1,1,0,-2,-2);
        }*/
        Draw(x,y,frameoffset)
        {
            if(frameoffset==null)frameoffset=this.iFrame;
            this.pani.DrawAnimaEx_ByOffset(x,y,this.iAnimaPoint,frameoffset,101,1,1,0,0,0);
        }
        DrawEx1(x,y,frameoffset,alpha,sw,sh,ra,ratx,raty,turn)
        {
            this.pani.DrawAnimaEx_ByOffset(x,y,this.iAnimaPoint,frameoffset,alpha,sw,sh,ra,ratx,raty,turn);
        }
        DrawEx(x, y,alpha,sw,sh,ra,ratx,raty,turn,ex)
        {
            if(sw==101)
            {
                this.DrawEx1(x, y,alpha,sw,sh,ra,ratx,raty,turn,ex);
                return;
            }
    //        ratx=-2;
    //        raty=-2;
            this.pani.DrawAnimaEx_ByOffset(x,y,this.iAnimaPoint,this.iFrame,alpha,sw,sh,ra,ratx,raty,turn);
        }
        NextFrame()
        {
            if (this.pani == null) return false;
            return this.pani.NextFrame(this);
        }

        bIn( ax, ay, mx, my)
    	{
    		if(this.pani==null)return false;
    		return this.pani.bInAnima(this, ax, ay, mx, my);
        }
        SetFrame( tick)
    	{
    		if(this.pani==null)return;
    		this.pani.SetFrame(this, tick);
    	}
    }

    class XAdjust
    {
        constructor(ani)
        {
    /*        XAnima pani;
            int iX,iY;
            int iW,iH;
            int iMin,iMax;
            public int iPos;
            
            AnimaAction aa_line,aa_btn;
            boolean bInited;*/
            this.pani=ani;
    		this.iPos=0;
            this.bInited=false;
            this.bLock=false;
        }
        InitAdjust( an)
    	{//
    		this.pani.InitAnimaWithName(an,GmPlay$1.aaa);
    		this.aa_line=new AnimaAction();
    		this.aa_btn=new AnimaAction();
    		GmPlay$1.aaa.iFrame=0;this.aa_line.copyfrom(GmPlay$1.aaa);
    		GmPlay$1.aaa.iFrame=1;this.aa_btn.copyfrom(GmPlay$1.aaa);
    		this.bInited=true;
        }
        SetPos( min, max, pos)
    	{
    		this.iMin=min;
    		this.iMax=max;
    		this.iPos=pos;
        }
        Move( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
        }
        Draw()
    	{//min,max,iH;
    		var w=this.iH;
    		var offx=this.iX-w/2+(this.iPos-this.iMin)*this.iW/(this.iMax-this.iMin);
    		
    		if(this.bInited)
    		{
    			w=48;
    			offx=this.iX-w/2+(this.iPos-this.iMin)*this.iW/(this.iMax-this.iMin);
    			this.aa_line.DrawEx(this.iX,this.iY+this.iH/2, 101, 1.0*this.iW/387, 1, 0, 0, 0);
    			this.aa_btn.Draw(offx, this.iY+this.iH/2);
    			
    //			M3DFast.gi().DrawTextEx(offx+w/2, iY+iH/2, ""+iPos, 0xff00ff00, 20, 101, 1, 1, 0, -2, -2);
    		}
    		else
    		{
    			w=this.iH;
    			offx=iX-w/2+(this.iPos-this.iMin)*this.iW/(this.iMax-this.iMin);
    			M3DFast$1.gi().DrawLine(this.iX, this.iY+this.iH/2, this.iX+this.iW, this.iY+this.iH/2, 0xffffffff);
    			M3DFast$1.gi().FillRect_2D(offx, this.iY, offx+w, this.iY+w, 0xffffffff);
    			
    			M3DFast$1.gi().DrawTextEx((this.iX-40+offx)/2, this.iY+w/2, ""+this.iPos, 0xff00ff00, 20, 101, 1, 1, 0, -2, -2);
    		}
        }
        ProcTouch( msg, x, y)
    	{
    		if(msg==3 && this.bLock)
    		{
    			this.bLock=false;
    			return true;
    		}
    		if(XDefine$1.bInRect(x, y, this.iX-this.iH/2, this.iY, this.iW+this.iH, this.iH) && msg==1)
    		{
                this.iPos=(x-this.iX)*(this.iMax-this.iMin)/this.iW+this.iMin;
    				if(this.iPos<this.iMin)this.iPos=this.iMin;
    				if(this.iPos>this.iMax)this.iPos=this.iMax;
    				this.bLock=true;
    				return true;
    		}
    		if(this.bLock && msg==2)
    		{
    			this.iPos=(x-this.iX)*(this.iMax-this.iMin)/this.iW+this.iMin;
    			if(this.iPos<this.iMin)this.iPos=this.iMin;
    			if(this.iPos>this.iMax)this.iPos=this.iMax;
    			return true;
    		}
    		return false;
    	}
    }

    class LoadAnimaRes
    {
        constructor()
        {
            this.ani_list=new Array();
            this.bLoadFinished=false;
        }
        /**
         * 
         * @param {XAnima} pani 
         */
        PushAnima(pani)
        {
            this.ani_list[this.ani_list.length]=pani;
        }
        LoadInitRes()
        {
            LoadAnimaRes.iLoadingCount=0;
            LoadAnimaRes.iLoadedResCount=0;
            for(var i=0;i<this.ani_list.length;i++)
            {
                LoadAnimaRes.iLoadedResCount+=this.ani_list[i].LoadInitRes(LoadAnimaRes._init_res);
            }
            if(LoadAnimaRes.iLoadedResCount>=LoadAnimaRes.iMaxResCount)
            {
                XDefine$1.sop("=========load init finished=========");
            }
        }
        LoadOtherRes()
        {
            if(this.bLoadFinished)return;
            LoadAnimaRes.iLoadingCount=0;
            this.bLoadFinished=true;
            for(var i=0;i<this.ani_list.length;i++)
            {
                if(this.ani_list[i].IsResLoadedFinish())continue;
                this.ani_list[i].LoadRes();
                this.bLoadFinished=false;
            }
            if(this.bLoadFinished)
            {
                XDefine$1.sop("=========load other finished=========");
            }
        }
    }
    LoadAnimaRes.iMaxLoadThread=4096;
    LoadAnimaRes.iLoadingCount=0;
    LoadAnimaRes.pp=null;
    LoadAnimaRes.gi=function()
    {
        if(LoadAnimaRes.pp==null)LoadAnimaRes.pp=new LoadAnimaRes();
        return LoadAnimaRes.pp;
    };

    LoadAnimaRes._init_res=[
    ];

    LoadAnimaRes.iMaxResCount=LoadAnimaRes._init_res.length;
    LoadAnimaRes.iLoadedResCount=0;

    /**//**//**//**//**//**//*  
    **  ==================================================================================================  
    **  类名：J.gbk
    **	版本：1.0
    **  功能：URLEncode,URLDecode
    **  示例：  
        ---------------------------------------------------------------------------------------------------  
    	
    		用法：参见组件地址
    		
        ---------------------------------------------------------------------------------------------------  
    **  作者：zjfeihu
    **  邮件：zjfeihu@126.com 
    **  创建：2011/09/15
    **  更新：2011/09/16
    **	组件地址：http://www.1kjs.com/lib/widget/gbk/
    **  ==================================================================================================  
    **/
    /*
    var _GU=function()
    {

    	function isAscii(unicode) {
    		return ((unicode == 0x20AC) || (unicode <= 0x007F && unicode >= 0x0000));
    	}
    	return{
    		g_t_u:function(s)
    		{
    			
    		},
    		encode:function(str){	
    			return str.replace(/./g,function(a){
    				var code=a.charCodeAt(0);
    				if(isAscii(code)){
    					return encodeURIComponent(a);
    				}else{
    					var key=code.toString(16);
    					if(key.length!=4)key=('000'+key).match(/....$/)[0];
    					return U2Ghash[key]||a;
    				}
    			});
    		},
    		decode:function(str){/*
    			return str.replace(/%[0-9A-F]{2}%[0-9A-F]{2}/g,function(a){
    				if(a in G2Uhash){
    					return String.fromCharCode('0x'+G2Uhash[a]);
    				}else{
    					return a;
    				}
    			}).replace(/%[\w]{2}/g,function(a){
    				return decodeURIComponent(a);
    			
    			});*//*
    			str=str.replace(/%[0-9A-F]{2}%[0-9A-F]{2}/g,function(a){
    				if(a in G2Uhash){
    					return String.fromCharCode('0x'+G2Uhash[a]);
    				}else{
    					return a;
    				}
    			});
    			str=str.replace(/%[\w]{2}/g,function(a){
    				return decodeURIComponent(a);
    			
    			});
    			return str;
    		}
    	};
    }();*/
    class GU
    {
    	constructor()
    	{
    	}
    }

    GU.U2Ghash={};
    GU.G2Uhash={};
    GU.zipData='4e:020405060f12171f20212326292e2f313335373c40414244464a5155575a5b6263646567686a6b6c6d6e6f727475767778797a7b7c7d7f808182838485878a#909697999c9d9ea3aaafb0b1b4b6b7b8b9bcbdbec8cccfd0d2dadbdce0e2e6e7e9edeeeff1f4f8f9fafcfe,4f:00020304050607080b0c12131415161c1d212328292c2d2e31333537393b3e3f40414244454748494a4b4c525456616266686a6b6d6e7172757778797a7d8081828586878a8c8e909293959698999a9c9e9fa1a2a4abadb0b1b2b3b4b6b7b8b9babbbcbdbec0c1c2c6c7c8c9cbcccdd2d3d4d5d6d9dbe0e2e4e5e7ebecf0f2f4f5f6f7f9fbfcfdff,50:000102030405060708090a#0b0e1011131516171b1d1e20222324272b2f303132333435363738393b3d3f404142444546494a4b4d5051525354565758595b5d5e5f6061626364666768696a6b6d6e6f70717273747578797a7c7d818283848687898a8b8c8e8f909192939495969798999a9b9c9d9e9fa0a1a2a4a6aaabadaeafb0b1b3b4b5b6b7b8b9bcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdced0d1d2d3d4d5d7d8d9dbdcdddedfe0e1e2e3e4e5e8e9eaebeff0f1f2f4f6f7f8f9fafcfdfeff,51:00010203040508#090a0c0d0e0f1011131415161718191a1b1c1d1e1f2022232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e42474a4c4e4f5052535758595b5d5e5f606163646667696a6f727a7e7f838486878a8b8e8f90919394989a9d9e9fa1a3a6a7a8a9aaadaeb4b8b9babebfc1c2c3c5c8cacdced0d2d3d4d5d6d7d8d9dadcdedfe2e3e5e6e7e8e9eaeceef1f2f4f7fe,52:0405090b0c0f101314151c1e1f2122232526272a2c2f313234353c3e4445464748494b4e4f5253555758#595a5b5d5f6062636466686b6c6d6e7071737475767778797a7b7c7e808384858687898a8b8c8d8e8f91929495969798999a9ca4a5a6a7aeafb0b4b5b6b7b8b9babbbcbdc0c1c2c4c5c6c8cacccdcecfd1d3d4d5d7d9dadbdcdddee0e1e2e3e5e6e7e8e9eaebecedeeeff1f2f3f4f5f6f7f8fbfcfd,53:0102030407090a0b0c0e11121314181b1c1e1f2224252728292b2c2d2f3031323334353637383c3d404244464b4c4d505458595b5d65686a6c6d7276797b7c7d7e80818387888a8e8f#90919293949697999b9c9ea0a1a4a7aaabacadafb0b1b2b3b4b5b7b8b9babcbdbec0c3c4c5c6c7cecfd0d2d3d5dadcdddee1e2e7f4fafeff,54:000205070b1418191a1c2224252a303336373a3d3f4142444547494c4d4e4f515a5d5e5f6061636567696a6b6c6d6e6f7074797a7e7f8183858788898a8d919397989c9e9fa0a1a2a5aeb0b2b5b6b7b9babcbec3c5cacbd6d8dbe0e1e2e3e4ebeceff0f1f4f5f6f7f8f9fbfe,55:0002030405080a0b0c0d0e121315161718191a1c1d1e1f212526#28292b2d3234353638393a3b3d40424547484b4c4d4e4f515253545758595a5b5d5e5f60626368696b6f7071727374797a7d7f85868c8d8e9092939596979a9b9ea0a1a2a3a4a5a6a8a9aaabacadaeafb0b2b4b6b8babcbfc0c1c2c3c6c7c8cacbcecfd0d5d7d8d9dadbdee0e2e7e9edeef0f1f4f6f8f9fafbfcff,56:0203040506070a0b0d1011121314151617191a1c1d202122252628292a2b2e2f30333537383a3c3d3e404142434445464748494a4b4f5051525355565a5b5d5e5f6061#636566676d6e6f70727374757778797a7d7e7f80818283848788898a8b8c8d9091929495969798999a9b9c9d9e9fa0a1a2a4a5a6a7a8a9aaabacadaeb0b1b2b3b4b5b6b8b9babbbdbebfc0c1c2c3c4c5c6c7c8c9cbcccdcecfd0d1d2d3d5d6d8d9dce3e5e6e7e8e9eaeceeeff2f3f6f7f8fbfc,57:00010205070b0c0d0e0f101112131415161718191a1b1d1e202122242526272b313234353637383c3d3f414344454648494b52535455565859626365676c6e707172747578797a7d7e7f80#818788898a8d8e8f90919495969798999a9c9d9e9fa5a8aaacafb0b1b3b5b6b7b9babbbcbdbebfc0c1c4c5c6c7c8c9cacccdd0d1d3d6d7dbdcdee1e2e3e5e6e7e8e9eaebeceef0f1f2f3f5f6f7fbfcfeff,58:0103040508090a0c0e0f101213141617181a1b1c1d1f222325262728292b2c2d2e2f31323334363738393a3b3c3d3e3f4041424345464748494a4b4e4f505253555657595a5b5c5d5f6061626364666768696a6d6e6f707172737475767778797a7b7c7d7f82848687888a8b8c#8d8e8f909194959697989b9c9da0a1a2a3a4a5a6a7aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbdbebfc0c2c3c4c6c7c8c9cacbcccdcecfd0d2d3d4d6d7d8d9dadbdcdddedfe0e1e2e3e5e6e7e8e9eaedeff1f2f4f5f7f8fafbfcfdfeff,59:000103050608090a0b0c0e1011121317181b1d1e2021222326282c30323335363b3d3e3f404345464a4c4d505253595b5c5d5e5f616364666768696a6b6c6d6e6f70717275777a7b7c7e7f8085898b8c8e8f90919495989a9b9c9d9fa0a1a2a6#a7acadb0b1b3b4b5b6b7b8babcbdbfc0c1c2c3c4c5c7c8c9cccdcecfd5d6d9dbdedfe0e1e2e4e6e7e9eaebedeeeff0f1f2f3f4f5f6f7f8fafcfdfe,5a:00020a0b0d0e0f101214151617191a1b1d1e2122242627282a2b2c2d2e2f3033353738393a3b3d3e3f414243444547484b4c4d4e4f5051525354565758595b5c5d5e5f60616364656668696b6c6d6e6f7071727378797b7c7d7e808182838485868788898a8b8c8d8e8f9091939495969798999c9d9e9fa0a1a2a3a4a5a6a7a8a9abac#adaeafb0b1b4b6b7b9babbbcbdbfc0c3c4c5c6c7c8cacbcdcecfd0d1d3d5d7d9dadbdddedfe2e4e5e7e8eaecedeeeff0f2f3f4f5f6f7f8f9fafbfcfdfeff,5b:0001020304050607080a0b0c0d0e0f10111213141518191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303133353638393a3b3c3d3e3f4142434445464748494a4b4c4d4e4f52565e606167686b6d6e6f7274767778797b7c7e7f82868a8d8e90919294969fa7a8a9acadaeafb1b2b7babbbcc0c1c3c8c9cacbcdcecf#d1d4d5d6d7d8d9dadbdce0e2e3e6e7e9eaebecedeff1f2f3f4f5f6f7fdfe,5c:0002030507080b0c0d0e10121317191b1e1f2021232628292a2b2d2e2f303233353637434446474c4d5253545657585a5b5c5d5f62646768696a6b6c6d70727374757677787b7c7d7e808384858687898a8b8e8f9293959d9e9fa0a1a4a5a6a7a8aaaeafb0b2b4b6b9babbbcbec0c2c3c5c6c7c8c9cacccdcecfd0d1d3d4d5d6d7d8dadbdcdddedfe0e2e3e7e9ebeceeeff1f2f3f4f5f6f7f8f9fafcfdfeff,5d:00#01040508090a0b0c0d0f10111213151718191a1c1d1f2021222325282a2b2c2f3031323335363738393a3b3c3f4041424344454648494d4e4f5051525354555657595a5c5e5f6061626364656667686a6d6e7071727375767778797a7b7c7d7e7f8081838485868788898a8b8c8d8e8f9091929394959697989a9b9c9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b8b9babbbcbdbebfc0c1c2c3c4c6c7c8c9cacbcccecfd0d1d2d3d4d5d6d7d8d9dadcdfe0e3e4eaeced#f0f5f6f8f9fafbfcff,5e:000407090a0b0d0e1213171e1f20212223242528292a2b2c2f303233343536393a3e3f404143464748494a4b4d4e4f50515253565758595a5c5d5f60636465666768696a6b6c6d6e6f70717577797e8182838588898c8d8e92989b9da1a2a3a4a8a9aaabacaeafb0b1b2b4babbbcbdbfc0c1c2c3c4c5c6c7c8cbcccdcecfd0d4d5d7d8d9dadcdddedfe0e1e2e3e4e5e6e7e9ebecedeeeff0f1f2f3f5f8f9fbfcfd,5f:050607090c0d0e10121416191a1c1d1e21222324#282b2c2e30323334353637383b3d3e3f4142434445464748494a4b4c4d4e4f5154595a5b5c5e5f60636567686b6e6f72747576787a7d7e7f83868d8e8f919394969a9b9d9e9fa0a2a3a4a5a6a7a9abacafb0b1b2b3b4b6b8b9babbbebfc0c1c2c7c8cacbced3d4d5dadbdcdedfe2e3e5e6e8e9eceff0f2f3f4f6f7f9fafc,60:0708090b0c10111317181a1e1f2223242c2d2e3031323334363738393a3d3e404445464748494a4c4e4f5153545657585b5c5e5f606165666e71727475777e80#8182858687888a8b8e8f909193959798999c9ea1a2a4a5a7a9aaaeb0b3b5b6b7b9babdbebfc0c1c2c3c4c7c8c9cccdcecfd0d2d3d4d6d7d9dbdee1e2e3e4e5eaf1f2f5f7f8fbfcfdfeff,61:02030405070a0b0c1011121314161718191b1c1d1e21222528292a2c2d2e2f303132333435363738393a3b3c3d3e4041424344454647494b4d4f50525354565758595a5b5c5e5f606163646566696a6b6c6d6e6f717273747678797a7b7c7d7e7f808182838485868788898a8c8d8f9091929395#969798999a9b9c9e9fa0a1a2a3a4a5a6aaabadaeafb0b1b2b3b4b5b6b8b9babbbcbdbfc0c1c3c4c5c6c7c9cccdcecfd0d3d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e7e8e9eaebecedeeeff0f1f2f3f4f6f7f8f9fafbfcfdfe,62:00010203040507091314191c1d1e2023262728292b2d2f303132353638393a3b3c424445464a4f50555657595a5c5d5e5f6061626465687172747577787a7b7d818283858687888b8c8d8e8f9094999c9d9ea3a6a7a9aaadaeafb0b2b3b4b6b7b8babec0c1#c3cbcfd1d5dddee0e1e4eaebf0f2f5f8f9fafb,63:00030405060a0b0c0d0f10121314151718191c2627292c2d2e30313334353637383b3c3e3f40414447484a51525354565758595a5b5c5d60646566686a6b6c6f707273747578797c7d7e7f81838485868b8d9193949597999a9b9c9d9e9fa1a4a6abafb1b2b5b6b9bbbdbfc0c1c2c3c5c7c8cacbccd1d3d4d5d7d8d9dadbdcdddfe2e4e5e6e7e8ebeceeeff0f1f3f5f7f9fafbfcfe,64:0304060708090a0d0e111215161718191a1d1f222324#252728292b2e2f3031323335363738393b3c3e404243494b4c4d4e4f505153555657595a5b5c5d5f60616263646566686a6b6c6e6f70717273747576777b7c7d7e7f8081838688898a8b8c8d8e8f90939497989a9b9c9d9fa0a1a2a3a5a6a7a8aaabafb1b2b3b4b6b9bbbdbebfc1c3c4c6c7c8c9cacbcccfd1d3d4d5d6d9dadbdcdddfe0e1e3e5e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,65:01020304050607080a0b0c0d0e0f10111314151617191a1b1c1d1e1f2021#222324262728292a2c2d30313233373a3c3d404142434446474a4b4d4e5052535457585a5c5f606164656768696a6d6e6f7173757678797a7b7c7d7e7f8081828384858688898a8d8e8f92949596989a9d9ea0a2a3a6a8aaacaeb1b2b3b4b5b6b7b8babbbebfc0c2c7c8c9cacdd0d1d3d4d5d8d9dadbdcdddedfe1e3e4eaebf2f3f4f5f8f9fbfcfdfeff,66:0104050708090b0d1011121617181a1b1c1e2122232426292a2b2c2e3032333738393a3b3d3f40424445464748494a4d4e505158#595b5c5d5e6062636567696a6b6c6d7172737578797b7c7d7f808183858688898a8b8d8e8f909293949598999a9b9c9e9fa0a1a2a3a4a5a6a9aaabacadafb0b1b2b3b5b6b7b8babbbcbdbfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8dadedfe0e1e2e3e4e5e7e8eaebecedeeeff1f5f6f8fafbfd,67:010203040506070c0e0f1112131618191a1c1e20212223242527292e303233363738393b3c3e3f414445474a4b4d5254555758595a5b5d62636466676b6c6e717476#78797a7b7d8082838586888a8c8d8e8f9192939496999b9fa0a1a4a6a9acaeb1b2b4b9babbbcbdbebfc0c2c5c6c7c8c9cacbcccdced5d6d7dbdfe1e3e4e6e7e8eaebedeef2f5f6f7f8f9fafbfcfe,68:01020304060d1012141518191a1b1c1e1f20222324252627282b2c2d2e2f30313435363a3b3f474b4d4f52565758595a5b5c5d5e5f6a6c6d6e6f707172737578797a7b7c7d7e7f8082848788898a8b8c8d8e90919294959698999a9b9c9d9e9fa0a1a3a4a5a9aaabacaeb1b2b4b6b7b8#b9babbbcbdbebfc1c3c4c5c6c7c8cacccecfd0d1d3d4d6d7d9dbdcdddedfe1e2e4e5e6e7e8e9eaebecedeff2f3f4f6f7f8fbfdfeff,69:00020304060708090a0c0f11131415161718191a1b1c1d1e21222325262728292a2b2c2e2f313233353637383a3b3c3e4041434445464748494a4b4c4d4e4f50515253555658595b5c5f616264656768696a6c6d6f7072737475767a7b7d7e7f8183858a8b8c8e8f909192939697999a9d9e9fa0a1a2a3a4a5a6a9aaacaeafb0b2b3b5b6b8b9babcbd#bebfc0c2c3c4c5c6c7c8c9cbcdcfd1d2d3d5d6d7d8d9dadcdddee1e2e3e4e5e6e7e8e9eaebeceeeff0f1f3f4f5f6f7f8f9fafbfcfe,6a:000102030405060708090b0c0d0e0f10111213141516191a1b1c1d1e20222324252627292b2c2d2e30323334363738393a3b3c3f40414243454648494a4b4c4d4e4f515253545556575a5c5d5e5f60626364666768696a6b6c6d6e6f70727374757677787a7b7d7e7f81828385868788898a8b8c8d8f929394959698999a9b9c9d9e9fa1a2a3a4a5a6#a7a8aaadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,6b:000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f252628292a2b2c2d2e2f303133343536383b3c3d3f4041424445484a4b4d4e4f5051525354555657585a5b5c5d5e5f606168696b6c6d6e6f7071727374757677787a7d7e7f808588#8c8e8f909194959798999c9d9e9fa0a2a3a4a5a6a7a8a9abacadaeafb0b1b2b6b8b9babbbcbdbec0c3c4c6c7c8c9caccced0d1d8dadcdddedfe0e2e3e4e5e6e7e8e9ecedeef0f1f2f4f6f7f8fafbfcfeff,6c:000102030408090a0b0c0e12171c1d1e2023252b2c2d31333637393a3b3c3e3f434445484b4c4d4e4f5152535658595a62636566676b6c6d6e6f71737577787a7b7c7f8084878a8b8d8e9192959697989a9c9d9ea0a2a8acafb0b4b5b6b7bac0c1c2c3c6c7c8cbcdcecfd1d2d8#d9dadcdddfe4e6e7e9ecedf2f4f9ff,6d:000203050608090a0d0f101113141516181c1d1f20212223242628292c2d2f30343637383a3f404244494c50555657585b5d5f6162646567686b6c6d707172737576797a7b7d7e7f8081838486878a8b8d8f9092969798999a9ca2a5acadb0b1b3b4b6b7b9babbbcbdbec1c2c3c8c9cacdcecfd0d2d3d4d5d7dadbdcdfe2e3e5e7e8e9eaedeff0f2f4f5f6f8fafdfeff,6e:0001020304060708090b0f12131518191b1c1e1f222627282a2c2e30313335#3637393b3c3d3e3f40414245464748494a4b4c4f5051525557595a5c5d5e606162636465666768696a6c6d6f707172737475767778797a7b7c7d8081828487888a8b8c8d8e91929394959697999a9b9d9ea0a1a3a4a6a8a9abacadaeb0b3b5b8b9bcbebfc0c3c4c5c6c8c9cacccdced0d2d6d8d9dbdcdde3e7eaebecedeeeff0f1f2f3f5f6f7f8fafbfcfdfeff,6f:000103040507080a0b0c0d0e101112161718191a1b1c1d1e1f212223252627282c2e303234353738393a3b3c3d3f404142#43444548494a4c4e4f5051525354555657595a5b5d5f60616364656768696a6b6c6f707173757677797b7d7e7f808182838586878a8b8f909192939495969798999a9b9d9e9fa0a2a3a4a5a6a8a9aaabacadaeafb0b1b2b4b5b7b8babbbcbdbebfc1c3c4c5c6c7c8cacbcccdcecfd0d3d4d5d6d7d8d9dadbdcdddfe2e3e4e5e6e7e8e9eaebecedf0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,70:000102030405060708090a0b0c0d0e0f1012131415161718191c1d1e1f2021222425262728292a#2b2c2d2e2f30313233343637383a3b3c3d3e3f404142434445464748494a4b4d4e505152535455565758595a5b5c5d5f606162636465666768696a6e7172737477797a7b7d818283848687888b8c8d8f90919397989a9b9e9fa0a1a2a3a4a5a6a7a8a9aab0b2b4b5b6babebfc4c5c6c7c9cbcccdcecfd0d1d2d3d4d5d6d7dadcdddee0e1e2e3e5eaeef0f1f2f3f4f5f6f8fafbfcfeff,71:0001020304050607080b0c0d0e0f111214171b1c1d1e1f2021222324252728292a2b2c2d2e323334#353738393a3b3c3d3e3f4041424344464748494b4d4f505152535455565758595a5b5d5f6061626365696a6b6c6d6f707174757677797b7c7e7f8081828385868788898b8c8d8e909192939596979a9b9c9d9ea1a2a3a4a5a6a7a9aaabadaeafb0b1b2b4b6b7b8babbbcbdbebfc0c1c2c4c5c6c7c8c9cacbcccdcfd0d1d2d3d6d7d8d9dadbdcdddedfe1e2e3e4e6e8e9eaebecedeff0f1f2f3f4f5f6f7f8fafbfcfdfeff,72:0001020304050708090a0b0c0d0e0f101112131415161718191a#1b1c1e1f2021222324252627292b2d2e2f3233343a3c3e40414243444546494a4b4e4f505153545557585a5c5e60636465686a6b6c6d707173747677787b7c7d828385868788898c8e9091939495969798999a9b9c9d9ea0a1a2a3a4a5a6a7a8a9aaabaeb1b2b3b5babbbcbdbebfc0c5c6c7c9cacbcccfd1d3d4d5d6d8dadb#95$,30:000102,00b702:c9c7,00a830:0305,2014ff5e20:162618191c1d,30:141508090a0b0c0d0e0f16171011,00:b1d7f7,22:362728110f2a2908371aa52520,231222:992b2e614c483d1d606e6f64651e3534,26:4240,00b020:3233,2103ff0400a4ff:e0e1,203000a7211626:0605,25:cbcfcec7c6a1a0b3b2,203b21:92909193,30:13#95$,21:70717273747576777879#4$,24:88898a8b8c8d8e8f909192939495969798999a9b7475767778797a7b7c7d7e7f808182838485868760616263646566676869##,32:20212223242526272829##,21:606162636465666768696a6b#97$,ff:010203e505060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5de3#95$,30:4142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f90919293#106$a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6#103$,03:9192939495969798999a9b9c9d9e9fa0a1a3a4a5a6a7a8a9#6$b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c3c4c5c6c7c8c9#5$,fe:3536393a3f403d3e41424344##3b3c373831#3334#104$,04:10111213141501161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f#13$30313233343551363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f#11$,02:cacbd9,20:13152535,21:050996979899,22:151f23526667bf,25:505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f7071727381828384858687#88898a8b8c8d8e8f939495bcbde2e3e4e5,2609229530:121d1e#9$,010100e101ce00e0011300e9011b00e8012b00ed01d000ec014d00f301d200f2016b00fa01d400f901:d6d8dadc,00:fcea,0251e7c701:4448,e7c802:61#2$,31:05060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20212223242526272829#19$,30:212223242526272829,32a333:8e8f9c9d9ea1c4ced1d2d5,fe30ff:e2e4#,212132:31#,20:10#1$,30:fc9b9cfdfe069d9e,fe:494a4b4c4d4e4f50515254555657595a5b5c5d5e5f6061#626364656668696a6b,e7:e7e8e9eaebecedeeeff0f1f2f3,30:07#11$,25:000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b#13$,72:dcdddfe2e3e4e5e6e7eaebf5f6f9fdfeff,73:00020405060708090b0c0d0f1011121418191a1f2023242627282d2f30323335363a3b3c3d404142434445464748#494a4b4c4e4f515354555658595a5b5c5d5e5f6162636465666768696a6b6e7071#92$72737475767778797a7b7c7d7f808182838586888a8c8d8f90929394959798999a9c9d9ea0a1a3a4a5a6a7a8aaacadb1b4b5b6b8b9bcbdbebfc1c3c4c5c6c7#cbccced2d3d4d5d6d7d8dadbdcdddfe1e2e3e4e6e8eaebeceeeff0f1f3f4f5f6f7#92$f8f9fafbfcfdfeff,74:0001020407080b0c0d0e1112131415161718191c1d1e1f2021232427292b2d2f31323738393a3b3d3e3f4042434445464748494a4b4c4d#4e4f505152535456585d606162636465666768696a6b6c6e6f717273747578797a#92$7b7c7d7f8284858688898a8c8d8f9192939495969798999a9b9d9fa0a1a2a3a4a5a6aaabacadaeafb0b1b2b3b4b5b6b7b8b9bbbcbdbebfc0c1c2c3c4c5c6c7#c8c9cacbcccdcecfd0d1d3d4d5d6d7d8d9dadbdddfe1e5e7e8e9eaebecedf0f1f2#92$f3f5f8f9fafbfcfdfe,75:0001020305060708090a0b0c0e1012141516171b1d1e202122232426272a2e3436393c3d3f414243444647494a4d5051525355565758#5d5e5f60616263646768696b6c6d6e6f7071737576777a7b7c7d7e808182848587#92$88898a8c8d8e909395989b9c9ea2a6a7a8a9aaadb6b7babbbfc0c1c6cbcccecfd0d1d3d7d9dadcdddfe0e1e5e9ecedeeeff2f3f5f6f7f8fafbfdfe,76:02040607#08090b0d0e0f11121314161a1c1d1e212327282c2e2f31323637393a3b3d414244#92$45464748494a4b4e4f50515253555758595a5b5d5f6061626465666768696a6c6d6e7071727374757677797a7c7f80818385898a8c8d8f9092949597989a9b#9c9d9e9fa0a1a2a3a5a6a7a8a9aaabacadafb0b3b5b6b7b8b9babbbcbdbec0c1c3,554a963f57c3632854ce550954c076:914c,853c77ee827e788d72319698978d6c285b894ffa630966975cb880fa684880ae660276ce51f9655671ac7ff1888450b2596561ca6fb382ad634c625253ed54277b06516b75a45df462d48dcb9776628a8019575d97387f627238767d67cf767e64464f708d2562dc7a17659173ed642c6273822c9881677f724862:6ecc,4f3474e3534a529e7eca90a65e2e6886699c81807ed168d278c5868c9551508d8c2482de80de53058912526576:c4c7c9cbccd3d5d9dadcdddee0e1e2e3e4e6e7e8e9eaebecedf0f3f5f6f7fafbfdff,77:00020305060a0c0e0f1011121314151617181b1c1d1e21232425272a2b#2c2e3031323334393b3d3e3f4244454648494a4b4c4d4e4f52535455565758595c,858496f94fdd582199715b9d62:b1a5,66b48c799c8d7206676f789160b253:5117,8f8880cc8d1d94a1500d72c8590760eb711988ab595482ef672c7b285d297ef7752d6cf58e668ff8903c9f3b6bd491197b145f7c78a784d6853d6b:d5d9d6,5e:0187,75f995ed655d5f:0ac5,8f9f58c181c2907f965b97ad8fb97f168d2c62414fbf53:d85e,8f:a8a9ab,904d68075f6a819888689cd6618b522b762a5f6c658c6fd26ee85bbe644851:75b0,67c44e1979c9997c70b377:5d5e5f606467696a6d6e6f7071727374757677787a7b7c818283868788898a8b8f90939495969798999a9b9c9d9ea1a3a4a6a8abadaeafb1b2b4b6b7b8b9ba#bcbec0c1c2c3c4c5c6c7c8c9cacbcccecfd0d1d2d3d4d5d6d8d9dadddedfe0e1e4,75c55e7673bb83e064ad62e894b56ce2535a52c3640f94c27b944f2f5e1b823681:168a,6e246cca9a736355535c54fa886557e04e0d5e036b657c3f90e8601664e6731c88c16750624d8d22776c8e2991c75f6983dc8521991053c286956b8b60:ede8,707f82:cd31,4ed36ca785cf64cd7cd969fd66f9834953957b564fa7518c6d4b5c428e6d63d253c983:2c36,67e578b4643d5bdf5c945dee8be762c667f48c7a640063ba8749998b8c177f2094f24ea7961098a4660c731677:e6e8eaeff0f1f2f4f5f7f9fafbfc,78:0304050607080a0b0e0f101315191b1e20212224282a2b2e2f31323335363d3f414243444648494a4b4d4f51535458595a#5b5c5e5f606162636465666768696f7071727374757678797a7b7d7e7f80818283,573a5c1d5e38957f507f80a05382655e7545553150218d856284949e671d56326f6e5de2543570928f66626f64a463a35f7b6f8890f481e38fb05c1866685ff16c8996488d81886c649179f057ce6a59621054484e587a0b60e96f848bda627f901e9a8b79e4540375f4630153196c608fdf5f1b9a70803b9f7f4f885c3a8d647fc565a570bd51:45b2,866b5d075ba062bd916c75748e0c7a2061017b794ec77ef877854e1181ed521d51fa6a7153a88e87950496cf6ec19664695a78:848586888a8b8f9092949596999d9ea0a2a4a6a8a9aaabacadaeafb5b6b7b8babbbcbdbfc0c2c3c4c6c7c8cccdcecfd1d2d3d6d7d8dadbdcdddedfe0e1e2e3#e4e5e6e7e9eaebedeeeff0f1f3f5f6f8f9fbfcfdfeff,79:00020304060708090a0b0c,784050a877d7641089e6590463e35ddd7a7f693d4f20823955984e3275ae7a975e:628a,95ef521b5439708a6376952457826625693f918755076df37eaf882262337ef075b5832878c196cc8f9e614874f78bcd6b64523a8d506b21806a847156f153064e:ce1b,51d17c97918b7c074fc38e7f7be17a9c64675d1450ac810676017cb96dec7fe067515b:58f8,78cb64:ae13,63:aa2b,9519642d8fbe7b5476296253592754466b7950a362345e266b864ee38d37888b5f85902e79:0d0e0f1011121415161718191a1b1c1d1f2021222325262728292a2b2c2d2e2f3031323335363738393d3f42434445474a4b4c4d4e4f505152545558596163#6466696a6b6c6e70717273747576797b7c7d7e7f8283868788898b8c8d8e909192,6020803d62c54e39535590f863b880c665e66c2e4f4660ee6de18bde5f3986cb5f536321515a83616863520063638e4850125c9b79775bfc52307a3b60bc905376d75f:b797,76848e6c706f767b7b4977aa51f3909358244f4e6ef48fea654c7b1b72c46da47fdf5ae162b55e95573084827b2c5e1d5f1f90127f1498a063826ec7789870b95178975b57ab75354f4375385e9760e659606dc06bbf788953fc96d551cb52016389540a94938c038dcc7239789f87768fed8c0d53e079:939495969798999b9c9d9e9fa0a1a2a3a4a5a6a8a9aaabacadaeafb0b1b2b4b5b6b7b8bcbfc2c4c5c7c8cacccecfd0d3d4d6d7d9dadbdcdddee0e1e2e5e8ea#eceef1f2f3f4f5f6f7f9fafcfeff,7a:0104050708090a0c0f10111213151618191b1c,4e0176ef53ee948998769f0e952d5b9a8ba24e:221c,51ac846361c252a8680b4f97606b51bb6d1e515c6296659796618c46901775d890fd77636bd272:8aec,8bfb583577798d4c675c9540809a5ea66e2159927aef77ed953b6bb565ad7f0e58065151961f5bf958a954288e726566987f56e4949d76fe9041638754c659:1a3a,579b8eb267358dfa8235524160f0581586fe5ce89e454fc4989d8bb95a2560765384627c904f9102997f6069800c513f80335c1499756d314e8c7a:1d1f21222425262728292a2b2c2d2e2f303132343536383a3e4041424344454748494a4b4c4d4e4f50525354555658595a5b5c5d5e5f606162636465666768#696a6b6c6d6e6f717273757b7c7d7e828587898a8b8c8e8f909394999a9b9ea1a2,8d3053d17f5a7b4f4f104e4f96006cd573d085e95e06756a7ffb6a0a77fe94927e4151e170e653cd8fd483038d2972af996d6cdb574a82b365b980aa623f963259a84eff8bbf7eba653e83f2975e556198de80a5532a8bfd542080ba5e9f6cb88d3982ac915a54296c1b52067eb7575f711a6c7e7c89594b4efd5fff61247caa4e305c0167ab87025cf0950b98ce75af70fd902251af7f1d8bbd594951e44f5b5426592b657780a45b7562:76c2,8f905e456c1f7b264f:0fd8,670d7a:a3a4a7a9aaabaeafb0b1b2b4b5b6b7b8b9babbbcbdbec0c1c2c3c4c5c6c7c8c9cacccdcecfd0d1d2d3d4d5d7d8dadbdcdde1e2e4e7e8e9eaebeceef0f1f2f3#f4f5f6f7f8fbfcfe,7b:0001020507090c0d0e1012131617181a1c1d1f21222327292d,6d:6eaa,798f88b15f17752b629a8f854fef91dc65a781:2f51,5e9c81508d74526f89868d4b590d50854ed8961c723681798d1f5bcc8ba3964459877f1a549056:760e,8be565396982949976d66e895e72751867:46d1,7aff809d8d76611f79c665628d635188521a94a27f38809b7eb25c976e2f67607bd9768b9ad8818f7f947cd5641e95507a3f54:4ae5,6b4c640162089e3d80f3759952729769845b683c86e496:0194,94ec4e2a54047ed968398ddf801566f45e9a7fb97b:2f303234353637393b3d3f404142434446484a4d4e535557595c5e5f61636465666768696a6b6c6d6f70737476787a7c7d7f81828384868788898a8b8c8e8f#9192939698999a9b9e9fa0a3a4a5aeafb0b2b3b5b6b7b9babbbcbdbebfc0c2c3c4,57c2803f68975de5653b529f606d9f9a4f9b8eac516c5bab5f135de96c5e62f18d21517194a952fe6c9f82df72d757a267848d2d591f8f9c83c754957b8d4f306cbd5b6459d19f1353e486ca9aa88c3780a16545987e56fa96c7522e74dc52505be1630289024e5662d0602a68fa51735b9851a089c27ba199867f5060ef704c8d2f51495e7f901b747089c4572d78455f529f9f95fa8f689b3c8be17678684267dc8d:ea35,523d8f8a6eda68cd950590ed56fd679c88f98fc754c87b:c5c8c9cacbcdcecfd0d2d4d5d6d7d8dbdcdedfe0e2e3e4e7e8e9ebecedeff0f2f3f4f5f6f8f9fafbfdff,7c:0001020304050608090a0d0e101112131415171819#1a1b1c1d1e20212223242528292b2c2d2e2f3031323334353637393a3b3c3d3e42,9ab85b696d776c264ea55bb39a87916361a890af97e9542b6db55bd251fd558a7f:55f0,64bc634d65f161be608d710a6c:5749,592f676d822a58d5568e8c6a6beb90dd597d801753f76d695475559d83:77cf,683879be548c4f55540876d28c8996026cb36db88d6b89109e648d3a563f9ed175d55f8872e0606854fc4ea86a2a886160528f7054c470d886799e3f6d2a5b8f5f187ea255894faf7334543c539a501954:0e7c,4e4e5ffd745a58f6846b80e1877472d07cca6e567c:434445464748494a4b4c4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f70717275767778797a7e7f8081828384858687#888a8b8c8d8e8f90939496999a9ba0a1a3a6a7a8a9abacadafb0b4b5b6b7b8babb,5f27864e552c62a44e926caa623782b154d7534e733e6ed1753b521253168bdd69d05f8a60006dee574f6b2273af68538fd87f13636260a3552475ea8c6271156da35ba65e7b8352614c9ec478fa87577c27768751f060f6714c66435e4c604d8c0e707063258f895fbd606286d456de6bc160946167534960e066668d3f79fd4f1a70e96c478b:b3f2,7ed88364660f5a5a9b426d:51f7,8c416d3b4f19706b83b7621660d1970d8d27797851fb57:3efa,673a75787a3d79ef7b957c:bfc0c2c3c4c6c9cbcecfd0d1d2d3d4d8dadbdddee1e2e3e4e5e6e7e9eaebecedeef0f1f2f3f4f5f6f7f9fafcfdfeff,7d:000102030405060708090b0c0d0e0f10#1112131415161718191a1b1c1d1e1f212324252628292a2c2d2e30313233343536,808c99658ff96fc08ba59e2159ec7ee97f095409678168d88f917c4d96c653ca602575be6c7253735ac97ea7632451e0810a5df184df628051805b634f0e796d524260b86d4e5b:c4c2,8b:a1b0,65e25fcc964559937e:e7aa,560967b759394f735bb652a0835a988a8d3e753294be50477a3c4ef767b69a7e5ac16b7c76d1575a5c167b3a95f4714e517c80a9827059787f04832768c067ec78:b177,62e363617b804fed526a51cf835069db92748d:f531,89c1952e7bad4ef67d:3738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6f70717273747576#78797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798,506582305251996f6e:1085,6da75efa50f559dc5c066d466c5f7586848b686859568bb253209171964d854969127901712680f64ea490ca6d479a845a0756bc640594f077eb4fa5811a72e189d2997a7f347ede527f655991758f:7f83,53eb7a9663:eda5,768679f888579636622a52ab8282685467706377776b7aed6d017ed389e359d0621285c982a5754c501f4ecb75a58beb5c4a5dfe7b4b65a491d14eca6d25895f7d2795264ec58c288fdb9773664b79818fd170ec6d787d:999a9b9c9d9e9fa0a1a2a3a4a5a7a8a9aaabacadafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9#dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fa,5c3d52b283465162830e775b66769cb84eac60ca7c:beb3,7ecf4e958b66666f988897595883656c955c5f8475c997567a:dfde,51c070af7a9863ea7a767ea0739697ed4e4570784e5d915253a965:51e7,81fc8205548e5c31759a97a062d872d975bd5c459a7983ca5c40548077e94e3e6cae805a62d2636e5de851778ddd8e1e952f4ff153e560e770ac526763509e435a1f5026773753777ee26485652b628963985014723589c951b38bc07edd574783cc94a7519b541b5cfb7d:fbfcfdfeff,7e:000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f30313233343536373839#3a3c3d3e3f40424344454648494a4b4c4d4e4f505152535455565758595a5b5c5d,4fca7ae36d5a90e19a8f55805496536154af5f0063e9697751ef6168520a582a52d8574e780d770b5eb761777ce062:5b97,4ea27095800362f770e49760577782db67ef68f578d5989779d158f354b353ef6e34514b523b5ba28bfe80af554357a660735751542d7a7a60505b5463a762a053e362635bc767af54ed7a9f82e691775e9388e4593857ae630e8de880ef57577b774fa95feb5bbd6b3e53217b5072c2684677:ff36,65f751b54e8f76d45cbf7aa58475594e9b4150807e:5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f8081838485868788898a8b8c8d8e8f909192939495969798999a9c9d9e#aeb4bbbcd6e4ecf9,7f:0a101e37393b3c3d3e3f404143464748494a4b4c4d4e4f5253,998861276e8357646606634656f062:ec69,5ed39614578362c955878721814a8fa3556683b167658d5684dd5a6a680f62e67bee961151706f9c8c3063fd89c861d27f0670c26ee57405699472fc5eca90ce67176d6a635e52b3726280014f6c59e5916a70d96d9d52d24e5096f7956d857e78ca7d2f5121579264c2808b7c7b6cea68f1695e51b7539868a872819ece7bf172f879bb6f137406674e91cc9ca4793c83:8954,540f68174e3d538952b1783e5386522950884f:8bd0,7f:56595b5c5d5e6063646566676b6c6d6f7073757677787a7b7c7d7f8082838485868788898b8d8f9091929395969798999b9ca0a2a3a5a6a8a9aaabacadaeb1#b3b4b5b6b7babbbec0c2c3c4c6c7c8c9cbcdcfd0d1d2d3d6d7d9dadbdcdddee2e3,75e27acb7c926ca596b6529b748354e94fe9805483b28fde95705ec9601c6d9f5e18655b813894fe604b70bc7ec37cae51c968817cb1826f4e248f8691cf667e4eae8c0564a9804a50da759771ce5be58fbd6f664e86648295635ed66599521788c270c852a3730e7433679778f797164e3490bb9cde6dcb51db8d41541d62ce73b283f196f69f8494c34f367f9a51cc707596755cad988653e64ee46e9c740969b4786b998f7559521876246d4167f3516d9f99804b54997b3c7abf7f:e4e7e8eaebecedeff2f4f5f6f7f8f9fafdfeff,80:020708090a0e0f11131a1b1d1e1f2123242b2c2d2e2f303234393a3c3e404144454748494e4f505153555657#595b5c5d5e5f6061626364656667686b6c6d6e6f7072737475767778797a7b7c7d,9686578462e29647697c5a0464027bd36f0f964b82a6536298855e90708963b35364864f9c819e93788c97328d:ef42,9e7f6f5e79845f559646622e9a74541594dd4fa365c55c:6561,7f1586516c2f5f8b73876ee47eff5ce6631b5b6a6ee653754e7163a0756562a18f6e4f264ed16ca67eb68bba841d87ba7f57903b95237ba99aa188f8843d6d1b9a867edc59889ebb739b780186829a:6c82,561b541757cb4e709ea653568fc881097792999286ee6ee1851366fc61626f2b80:7e818285888a8d8e8f909192949597999ea3a6a7a8acb0b3b5b6b8b9bbc5c7c8c9cacbcfd0d1d2d3d4d5d8dfe0e2e3e6eef5f7f9fbfeff,81:000103040507080b#0c1517191b1c1d1f202122232425262728292a2b2d2e3033343537393a3b3c3d3f,8c298292832b76f26c135fd983bd732b8305951a6bdb77db94c6536f830251925e3d8c8c8d384e4873ab679a68859176970971646ca177095a9295416bcf7f8e66275bd059b95a9a95:e8f7,4eec84:0c99,6aac76df9530731b68a65b5f772f919a97617cdc8ff78c1c5f257c7379d889c56ccc871c5bc65e4268c977207ef551:954d,52c95a297f05976282d763cf778485d079d26e3a5e9959998511706d6c1162bf76bf654f60af95fd660e879f9e2394ed54:0d7d,8c2c647881:40414243444547494d4e4f525657585b5c5d5e5f6162636466686a6b6c6f727375767778818384858687898b8c8d8e90929394959697999a9e9fa0a1a2a4a5#a7a9abacadaeafb0b1b2b4b5b6b7b8b9bcbdbebfc4c5c7c8c9cbcdcecfd0d1d2d3,647986116a21819c78e864699b5462b9672b83ab58a89ed86cab6f205bde964c8c0b725f67d062c772614ea959c66bcd589366ae5e5552df6155672876ee776672677a4662ff54:ea50,94a090a35a1c7eb36c164e435976801059485357753796be56ca63208111607c95f96dd65462998151855ae980fd59ae9713502a6ce55c3c62df4f60533f817b90066eba852b62c85e7478be64b5637b5ff55a18917f9e1f5c3f634f80425b7d556e95:4a4d,6d8560a867e072de51dd5b8181:d4d5d6d7d8d9dadbdcdddedfe0e1e2e4e5e6e8e9ebeeeff0f1f2f5f6f7f8f9fafdff,82:030708090a0b0e0f111315161718191a1d2024252627292e323a3c3d3f#404142434546484a4c4d4e5051525354555657595b5c5d5e606162636465666769,62e76cde725b626d94ae7ebd81136d53519c5f04597452aa6012597366968650759f632a61e67cef8bfa54e66b279e256bb485d5545550766ca4556a8db4722c5e156015743662cd6392724c5f986e436d3e65006f5876d878d076fc7554522453db4e535e9e65c180:2ad6,629b5486522870ae888d8dd16ce1547880da57f988f48d54966a914d4f696c9b55b776c6783062a870f96f8e5f6d84ec68da787c7bf781a8670b9e4f636778b0576f7812973962:79ab,528874356bd782:6a6b6c6d71757677787b7c808183858687898c90939495969a9b9ea0a2a3a7b2b5b6babbbcbfc0c2c3c5c6c9d0d6d9dadde2e7e8e9eaecedeef0f2f3f5f6f8#fafcfdfeff,83:000a0b0d1012131618191d1e1f20212223242526292a2e3032373b3d,5564813e75b276ae533975de50fb5c418b6c7bc7504f72479a9798d86f0274e27968648777a562fc98918d2b54c180584e52576a82f9840d5e7351ed74f68bc45c4f57616cfc98875a4678349b448feb7c955256625194fa4ec68386846183e984b257d467345703666e6d668c3166dd7011671f6b3a6816621a59bb4e0351c46f0667d26c8f517668cb59476b6775665d0e81109f5065d779:4841,9a918d775c824e5e4f01542f5951780c56686c148fc45f036c:7de3,8bab639083:3e3f41424445484a4b4c4d4e5355565758595d6270717273747576797a7e7f808182838487888a8b8c8d8f909194959697999a9d9fa1a2a3a4a5a6a7acadae#afb5bbbebfc2c3c4c6c8c9cbcdced0d1d2d3d5d7d9dadbdee2e3e4e6e7e8ebeced,60706d3d7275626694:8ec5,53438fc17b7e4edf8c264e7e9ed494:b1b3,524d6f5c90636d458c3458115d4c6b:2049,67aa545b81547f8c589985375f3a62a26a47953965726084686577a74e544fa85de7979864ac7fd85ced4fcf7a8d520783044e14602f7a8394a64fb54eb279e6743452e482b964d279bd5bdd6c8197528f7b6c22503e537f6e0564ce66746c3060c598778bf75e86743c7a7779cb4e1890b174036c4256da914b6cc58d8b533a86c666f28eaf5c489a716e2083:eeeff3f4f5f6f7fafbfcfeff,84:0002050708090a10121314151617191a1b1e1f20212223292a2b2c2d2e2f30323334353637393a3b3e3f404142434445474849#4a4b4c4d4e4f505253545556585d5e5f606264656667686a6e6f70727477797b7c,53d65a369f8b8da353bb570898a76743919b6cc9516875ca62f372ac52:389d,7f3a7094763853749e4a69b7786e96c088d97fa471:36c3,518967d374e458e4651856b78ba9997662707ed560f970ed58ec4e:c1ba,5fcd97e74efb8ba45203598a7eab62544ecd65e5620e833884c98363878d71946eb65bb97ed2519763c967d480898339881551125b7a59828fb14e736c5d516589258f6f962e854a745e95:10f0,6da682e55f3164926d128428816e9cc3585e8d5b4e0953c184:7d7e7f8081838485868a8d8f90919293949596989a9b9d9e9fa0a2a3a4a5a6a7a8a9aaabacadaeb0b1b3b5b6b7bbbcbec0c2c3c5c6c7c8cbcccecfd2d4d5d7#d8d9dadbdcdee1e2e4e7e8e9eaebedeeeff1f2f3f4f5f6f7f8f9fafbfdfe,85:000102,4f1e6563685155d34e2764149a9a626b5ac2745f82726da968ee50e7838e7802674052396c997eb150bb5565715e7b5b665273ca82eb67495c715220717d886b95ea965564c58d6181b355846c5562477f2e58924f2455468d4f664c4e0a5c1a88f368a2634e7a0d70e7828d52fa97f65c1154e890b57ecd59628d4a86c782:0c0d,8d6664445c0461516d89793e8bbe78377533547b4f388eab6df15a207ec5795e6c885ba15a76751a80be614e6e1758f075:1f25,727253477ef385:030405060708090a0b0d0e0f101214151618191b1c1d1e2022232425262728292a2d2e2f303132333435363e3f404142444546474b4c4d4e4f505152535455#57585a5b5c5d5f60616263656667696a6b6c6d6e6f707173757677787c7d7f8081,770176db526980dc57235e08593172ee65bd6e7f8bd75c388671534177f362fe65f64ec098df86805b9e8bc653f277e24f7f5c4e9a7659cb5f0f793a58eb4e1667ff4e8b62ed8a93901d52bf662f55dc566c90024ed54f8d91ca99706c0f5e0260435ba489c68bd56536624b99965b:88ff,6388552e53d77626517d852c67a268b36b8a62928f9353d482126dd1758f4e668d4e5b70719f85af66:91d9,7f7287009ecd9f205c5e672f8ff06811675f620d7ad658855eb665706f3185:82838688898a8b8c8d8e909192939495969798999a9d9e9fa0a1a2a3a5a6a7a9abacadb1b2b3b4b5b6b8babbbcbdbebfc0c2c3c4c5c6c7c8cacbcccdced1d2#d4d6d7d8d9dadbdddedfe0e1e2e3e5e6e7e8eaebecedeeeff0f1f2f3f4f5f6f7f8,60555237800d6454887075295e05681362f4971c53cc723d8c016c3477617a0e542e77ac987a821c8bf47855671470c165af64955636601d79c153f84e1d6b7b80865bfa55e356db4f:3a3c,99725df3677e80386002988290015b8b8b:bcf5,641c825864de55fd82cf91654fd77d20901f7c9f50f358516eaf5bbf8bc980839178849c7b97867d96:8b8f,7ee59ad3788e5c817a57904296a7795f5b59635f7b0b84d168ad55067f2974107d2295016240584c4ed65b835979585485:f9fafcfdfe,86:0001020304060708090a0b0c0d0e0f10121314151718191a1b1c1d1e1f20212223242526282a2b2c2d2e2f3031323334353637393a3b3d3e3f40#4142434445464748494a4b4c525355565758595b5c5d5f6061636465666768696a,736d631e8e:4b0f,80ce82d462ac53f06cf0915e592a60016c70574d644a8d2a762b6ee9575b6a8075f06f6d8c:2d08,57666bef889278b363a253f970ad6c645858642a580268e0819b55107cd650188eba6dcc8d9f70eb638f6d9b6ed47ee68404684390036dd896768ba85957727985e4817e75bc8a8a68af52548e22951163d098988e44557c4f5366ff568f60d56d9552435c4959296dfb586b75:301c,606c82148146631167618fe2773a8d:f334,94c15e165385542c70c386:6d6f7072737475767778838485868788898e8f90919294969798999a9b9e9fa0a1a2a5a6abadaeb2b3b7b8b9bbbcbdbebfc1c2c3c5c8cccdd2d3d5d6d7dadc#dde0e1e2e3e5e6e7e8eaebeceff5f6f7fafbfcfdff,87:010405060b0c0e0f10111416,6c405ef7505c4ead5ead633a8247901a6850916e77b3540c94dc5f647ae5687663457b527edf75db507762955934900f51f879c37a8156fe5f9290146d825c60571f541051546e4d56e263a89893817f8715892a9000541e5c6f81c062:d658,81319e3596409a:6e7c,692d59a562d3553e631654c786d96d3c5a0374e6889c6b6a59168c4c5f2f6e7e73a9987d4e3870f75b8c7897633d665a769660cb5b9b5a494e0781556c6a738b4ea167897f515f8065fa671b5fd859845a0187:191b1d1f20242627282a2b2c2d2f303233353638393a3c3d404142434445464a4b4d4f505152545556585a5b5c5d5e5f6162666768696a6b6c6d6f71727375#7778797a7f8081848687898a8c8e8f90919294959698999a9b9c9d9ea0a1a2a3a4,5dcd5fae537197e68fdd684556f4552f60df4e3a6f4d7ef482c7840e59d44f:1f2a,5c3e7eac672a851a5473754f80c355829b4f4f4d6e2d8c135c096170536b761f6e29868a658795fb7eb9543b7a337d0a95ee55e17fc174ee631d87176da17a9d621165a1536763e16c835deb545c94a84e4c6c618bec5c4b65e0829c68a754:3e34,6b:cb66,4e9463425348821e4f:0dae,575e620a96fe6664726952:ffa1,609f8bef661471996790897f785277fd6670563b54389521727a87:a5a6a7a9aaaeb0b1b2b4b6b7b8b9bbbcbebfc1c2c3c4c5c7c8c9cccdcecfd0d4d5d6d7d8d9dadcdddedfe1e2e3e4e6e7e8e9ebecedeff0f1f2f3f4f5f6f7f8#fafbfcfdff,88:0001020405060708090b0c0d0e0f101112141718191a1c1d1e1f2023,7a00606f5e0c6089819d591560dc718470ef6eaa6c5072806a8488ad5e2d4e605ab3559c94e36d177cfb9699620f7ec6778e867e5323971e8f9666875ce14fa072ed4e0b53a6590f54136380952851484ed99c9c7ea454b88d248854823795f26d8e5f265acc663e966973:b02e,53bf817a99857fa15baa96:7750,7ebf76f853a2957699997bb189446e584e617fd479658be660f354cd4eab98795df76a6150cf54118c618427785d9704524a54ee56a395006d885bb56dc6665388:2425262728292a2b2c2d2e2f30313334353637383a3b3d3e3f414243464748494a4b4e4f505152535556585a5b5c5d5e5f6066676a6d6f717374757678797a#7b7c80838687898a8c8e8f90919394959798999a9b9d9e9fa0a1a3a5a6a7a8a9aa,5c0f5b5d6821809655787b11654869544e9b6b47874e978b534f631f643a90aa659c80c18c10519968b0537887f961c86c:c4fb,8c225c5185aa82af950c6b238f9b65b05f:fbc3,4fe18845661f8165732960fa51745211578b5f6290a2884c91925e78674f602759d351:44f6,80f853086c7996c4718a4f:11ee,7f9e673d55c5950879c088967ee3589f620c9700865a5618987b5f908bb884c4915753d965ed5e8f755c60647d6e5a7f7e:eaed,8f6955a75ba360ac65cb738488:acaeafb0b2b3b4b5b6b8b9babbbdbebfc0c3c4c7c8cacbcccdcfd0d1d3d6d7dadbdcdddee0e1e6e7e9eaebecedeeeff2f5f6f7fafbfdff,89:0001030405060708#090b0c0d0e0f1114151617181c1d1e1f20222324262728292c2d2e2f3132333537,9009766377297eda9774859b5b667a7496ea884052cb718f5faa65ec8be25bfb9a6f5de16b896c5b8b:adaf,900a8fc5538b62bc9e:262d,54404e2b82bd7259869c5d1688596daf96c554d14e9a8bb6710954bd960970df6df976d04e25781487125ca95ef68a00989c960e708e6cbf594463a9773c884d6f148273583071d5538c781a96c155015f6671305bb48c1a9a8c6b83592e9e2f79e76768626c4f6f75a17f8a6d0b96336c274ef075d2517b68376f3e908081705996747689:38393a3b3c3d3e3f40424345464748494a4b4c4d4e4f505152535455565758595a5b5c5d6061626364656768696a6b6c6d6e6f707172737475767778797a7c#7d7e808284858788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1,64475c2790657a918c2359da54ac8200836f898180006930564e8036723791ce51b64e5f987563964e1a53f666f3814b591c6db24e0058f9533b63d694f14f:9d0a,886398905937905779fb4eea80f075916c825b9c59e85f5d69058681501a5df24e5977e34ee5827a6291661390915c794ebf5f7981c69038808475ab4ea688d4610f6bc55fc64e4976ca6ea28b:e3ae,8c0a8bd15f027f:fccc,7ece83:356b,56e06bb797f3963459fb541f94f66deb5bc5996e5c395f15969089:a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c3cdd3d4d5d7d8d9dbdddfe0e1e2e4e7e8e9eaecedeef0f1f2f4f5f6f7f8f9fa#fbfcfdfeff,8a:01020304050608090a0b0c0d0e0f101112131415161718191a1b1c1d,537082f16a315a749e705e947f2883b984:2425,836787478fce8d6276c85f719896786c662054df62e54f6381c375c85eb896cd8e0a86f9548f6cf36d8c6c38607f52c775285e7d4f1860a05fe75c24753190ae94c072b96cb96e389149670953:cbf3,4f5191c98bf153c85e7c8fc26de44e8e76c26986865e611a82064f:59de,903e9c7c61096e:1d14,96854e885a3196e84e0e5c7f79b95b878bed7fbd738957df828b90c15401904755bb5cea5fa161086b3272f180b28a:891e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3f4041424344454647494a4b4c4d4e4f505152535455565758595a5b5c5d5e#5f606162636465666768696a6b6c6d6e6f7071727374757677787a7b7c7d7e7f80,6d745bd388d598848c6b9a6d9e336e0a51:a443,57a38881539f63f48f9556ed54585706733f6e907f188fdc82d1613f6028966266f07ea68d:8ac3,94a55cb37ca4670860a6960580184e9190e75300966851418fd08574915d665597f55b55531d78386742683d54c9707e5bb08f7d518d572854b1651266828d:5e43,810f846c906d7cdf51ff85fb67a365e96fa186a48e81566a90207682707671e58d2362e952196cfd8d3c600e589e618e66fe8d60624e55b36e23672d8f678a:81828384858687888b8c8d8e8f9091929495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2#c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3,94e195f87728680569a8548b4e4d70b88bc86458658b5b857a84503a5be877bb6be18a797c986cbe76cf65a98f975d2d5c5586386808536062187ad96e5b7efd6a1f7ae05f706f335f20638c6da867564e085e108d264ed780c07634969c62db662d627e6cbc8d7571677f695146808753ec906e629854f286f08f998005951785178fd96d5973cd659f771f7504782781fb8d1e94884fa6679575b98bca9707632f9547963584b8632377415f8172f04e896014657462ef6b63653f8a:e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,8b:0001020304050608090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20212223#24252728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445,5e2775c790d18bc1829d679d652f5431871877e580a281026c414e4b7ec7804c76f4690d6b966267503c4f84574063076b628dbe53ea65e87eb85fd763:1ab7,81:f3f4,7f6e5e1c5cd95236667a79e97a1a8d28709975d46ede6cbb7a924e2d76c55fe0949f88777ec879cd80bf91cd4ef24f17821f54685dde6d328bcc7ca58f7480985e1a549276b15b99663c9aa473e0682a86db6731732a8b:f8db,90107af970db716e62c477a956314e3b845767f152a986c08d2e94f87b518b:464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f6061626364656768696a6b6d6e6f707172737475767778797a7b7c7d7e7f80818283848586#8788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9facb1bbc7d0ea,8c:091e,4f4f6ce8795d9a7b6293722a62fd4e1378168f6c64b08d5a7bc668695e8488c55986649e58ee72b6690e95258ffd8d5857607f008c0651c6634962d95353684c74228301914c55447740707c6d4a517954a88d4459ff6ecb6dc45b5c7d2b4ed47c7d6ed35b5081ea6e0d5b579b0368d58e2a5b977efc603b7eb590b98d70594f63cd79df8db3535265cf79568bc5963b7ec494bb7e825634918967007f6a5c0a907566285de64f5067de505a4f5c57505e:a7#3$,8c:38393a3b3c3d3e3f4042434445484a4b4d4e4f5051525354565758595b5c5d5e5f60636465666768696c6d6e6f707172747576777b7c7d7e7f808183848687#888b8d8e8f90919293959697999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacad,4e:8d0c,51404e105eff53454e:15981e,9b325b6c56694e2879ba4e3f53154e47592d723b536e6c1056df80e499976bd3777e9f174e:369f,9f104e:5c6993,82885b5b556c560f4ec453:8d9da3a5ae,97658d5d53:1af5262e3e,8d5c53:6663,52:02080e2d333f404c5e615c,84af52:7d82819093,51827f544e:bbc3c9c2e8e1ebde,4f1b4ef34f:2264,4ef54f:2527092b5e67,65384f:5a5d,8c:aeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebec#edeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,8d:000102030405060708090a0b0c0d,4f:5f57323d76749189838f7e7baa7cac94e6e8eac5dae3dcd1dff8,50:294c,4ff350:2c0f2e2d,4ffe50:1c0c25287e4355484e6c7ba5a7a9bad6,510650:edece6ee,51:070b,4edd6c3d4f:5865ce,9fa06c467c74516e5dfd9ec999985181591452f9530d8a07531051eb591951554ea051564eb388:6ea4,4eb5811488d279805b3488037fb851:abb1bdbc,8d:0e0f101112131415161718191a1b1c205152575f6568696a6c6e6f717278797a7b7c7d7e7f808283868788898c8d8e8f90929395969798999a9b9c9d9ea0a1#a2a4a5a6a7a8a9aaabacadaeafb0b2b6b7b9bbbdc0c1c2c5c7c8c9cacdd0d2d3d4,51:c796a2a5,8b:a0a6a7aab4b5b7c2c3cbcfced2d3d4d6d8d9dcdfe0e4e8e9eef0f3f6f9fcff,8c:000204070c0f1112141516191b181d1f202125272a2b2e2f32333536,53:697a,96:1d2221312a3d3c4249545f676c7274888d97b0,90:979b9d99aca1b4b3b6ba,8d:d5d8d9dce0e1e2e5e6e7e9edeef0f1f2f4f6fcfeff,8e:00010203040607080b0d0e1011121315161718191a1b1c202124252627282b2d303233343637383b3c3e#3f4345464c4d4e4f505354555657585a5b5c5d5e5f60616263646567686a6b6e71,90:b8b0cfc5bed0c4c7d3e6e2dcd7dbebeffe,91:04221e23312f394346,520d594252:a2acadbe,54ff52:d0d6f0,53df71ee77cd5ef451:f5fc,9b2f53b65f01755a5def57:4ca9a1,58:7ebcc5d1,57:292c2a33392e2f5c3b4269856b867c7b686d7673ada48cb2cfa7b493a0d5d8dad9d2b8f4eff8e4dd,8e:73757778797a7b7d7e808283848688898a8b8c8d8e91929395969798999a9b9d9fa0a1a2a3a4a5a6a7a8a9aaadaeb0b1b3b4b5b6b7b8b9bbbcbdbebfc0c1c2#c3c4c5c6c7c8c9cacbcccdcfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4,58:0b0d,57:fded,58:001e194420656c81899a80,99a89f1961ff82:797d7f8f8aa8848e919799abb8beb0c8cae398b7aecbccc1a9b4a1aa9fc4cea4e1,830982:f7e4,83:0f07,82:dcf4d2d8,830c82:fbd3,83:111a061415,82:e0d5,83:1c515b5c08923c34319b5e2f4f47435f4017602d3a336665,8e:e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,8f:000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20212223#2425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f4041424344,83:681b696c6a6d6eb078b3b4a0aa939c857cb6a97db87b989ea8babcc1,840183:e5d8,580784:180b,83:ddfdd6,84:1c381106,83:d4df,84:0f03,83:f8f9eac5c0,842683:f0e1,84:5c515a597387887a89783c4669768c8e316dc1cdd0e6bdd3cabfbae0a1b9b497e5e3,850c750d853884f085:391f3a,8f:45464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f6061626364656a808c929da0a1a2a4a5a6a7aaacadaeafb2b3b4b5b7b8babbbcbfc0c3c6#c9cacbcccdcfd2d6d7dae0e1e3e7eceff1f2f4f5f6fafbfcfeff,90:07080c0e131518,85:563b,84:fffc,85:594868645e7a,77a285:43727ba4a8878f79ae9c85b9b7b0d3c1dcff,86:270529163c,5efe5f0859:3c41,803759:555a58,530f5c:22252c34,62:4c6a9fbbcadad7ee,632262f663:394b43adf6717a8eb46dac8a69aebcf2f8e0ffc4dece,645263:c6be,64:45410b1b200c26215e846d96,90:191c2324252728292a2b2c303132333437393a3d3f4043454648494a4b4c4e545556595a5c5d5e5f6061646667696a6b6c6f70717273767778797a7b7c7e81#84858687898a8c8d8e8f90929496989a9c9e9fa0a4a5a7a8a9abadb2b7bcbdbfc0,64:7ab7b899bac0d0d7e4e2,65:09252e,5f:0bd2,75195f1153:5ff1fde9e8fb,54:1216064b5253545643215759233282947771649a9b8476669dd0adc2b4d2a7a6d3d472a3d5bbbfccd9dadca9aaa4ddcfde,551b54e7552054fd551454f355:22230f11272a678fb5496d41553f503c,90:c2c3c6c8c9cbcccdd2d4d5d6d8d9dadedfe0e3e4e5e9eaeceef0f1f2f3f5f6f7f9fafbfcff,91:00010305060708090a0b0c0d0e0f1011121314151617181a1b1c#1d1f20212425262728292a2b2c2d2e30323334353637383a3b3c3d3e3f40414244,55:375675767733305c8bd283b1b988819f7ed6917bdfbdbe9499eaf7c9,561f55:d1ebecd4e6ddc4efe5f2f3cccde8f5e4,8f9456:1e080c012423,55fe56:00272d5839572c4d62595c4c548664716b7b7c8593afd4d7dde1f5ebf9ff,57:040a091c,5e:0f191411313b3c,91:454748515354555658595b5c5f606667686b6d737a7b7c808182838486888a8e8f939495969798999c9d9e9fa0a1a4a5a6a7a8a9abacb0b1b2b3b6b7b8b9bb#bcbdbebfc0c1c2c3c4c5c6c8cbd0d2d3d4d5d6d7d8d9dadbdddedfe0e1e2e3e4e5,5e:3744545b5e61,5c:8c7a8d9096889899919a9cb5a2bdacabb1a3c1b7c4d2e4cbe5,5d:020327262e241e061b583e343d6c5b6f5d6b4b4a697482999d,8c735d:b7c5,5f:73778287898c95999ca8adb5bc,88625f6172:adb0b4b7b8c3c1cecdd2e8efe9f2f4f7,730172f3730372fa91:e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,92:000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f2021222324#25262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445,72fb73:1713210a1e1d152239252c3831504d57606c6f7e,821b592598e759:2402,99:636768696a6b6c74777d8084878a8d9091939495,5e:80918b96a5a0b9b5beb3,8d535e:d2d1dbe8ea,81ba5f:c4c9d6cf,60035fee60045f:e1e4fe,60:0506,5f:eaedf8,60:1935261b0f0d292b0a3f2178797b7a42,92:464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f7071727375767778797a7b7c7d7e7f808182838485#868788898a8b8c8d8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7,60:6a7d969aad9d83928c9becbbb1ddd8c6dab4,61:20261523,60f461:000e2b4a75ac94a7b7d4f5,5fdd96b395:e9ebf1f3f5f6fcfe,96:030406080a0b0c0d0f12151617191a,4e2c723f62156c:35545c4aa38590948c6869747686a9d0d4adf7f8f1d7b2e0d6faebeeb1d3effe,92:a8a9aaabacadafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8#e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,93:00010203040506070809,6d:39270c43480704190e2b4d2e351a4f525433916f9ea05e93945c607c63,6e1a6d:c7c5de,6e0e6d:bfe0,6e116d:e6ddd9,6e166dab6e0c6dae6e:2b6e4e6bb25f865354322544dfb198e0,6f2d6e:e2a5a7bdbbb7d7b4cf8fc29f,6f:6246472415,6ef96f:2f364b742a0929898d8c78727c7ad1,93:0a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3f40414243444546474849#4a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696b,6f:c9a7b9b6c2e1eedee0ef,70:1a231b39354f5e,5b:80849593a5b8,752f9a9e64345b:e4ee,89305bf08e478b078f:b6d3d5e5eee4e9e6f3e8,90:05040b26110d162135362d2f445152506858625b,66b990:747d8288838b,5f:50575658,5c3b54ab5c:5059,5b715c:6366,7fbc5f:2a292d,82745f3c9b3b5c6e59:81838da9aaa3,93:6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaab#acadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cbcccd,59:97caab9ea4d2b2afd7be,5a:0506,59dd5a0859:e3d8f9,5a:0c09323411231340674a553c6275,80ec5a:aa9b777abeebb2d2d4b8e0e3f1d6e6d8dc,5b:091716323740,5c:151c,5b:5a6573515362,9a:7577787a7f7d808185888a90929396989b9c9d9fa0a2a3a5a7,7e:9fa1a3a5a8a9,93:cecfd0d1d2d3d4d5d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,94:000102030405060708090a0b0c0d#0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e,7e:adb0bec0c1c2c9cbccd0d4d7dbe0e1e8ebeeeff1f2,7f0d7e:f6fafbfe,7f:01020307080b0c0f111217191c1b1f212223242526272a2b2c2d2f3031323335,5e7a757f5ddb753e909573:8e91aea29fcfc2d1b7b3c0c9c8e5d9,987c740a73:e9e7debaf2,74:0f2a5b262528302e2c,94:2f303132333435363738393a3b3c3d3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6c6d6e6f#707172737475767778797a7b7c7d7e7f8081828384919698c7cfd3d4dae6fb,95:1c20,74:1b1a415c575559776d7e9c8e8081878b9ea8a990a7d2ba,97:eaebec,67:4c535e4869a5876a7398a775a89ead8b777cf0,680967d8680a67:e9b0,680c67:d9b5dab3dd,680067:c3b8e2,680e67:c1fd,68:323360614e624464831d55664167403e4a4929b58f7477936bc2,696e68fc69:1f20,68f995:27333d43484b555a606e74757778797a7b7c7d7e808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aa#abacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacb,692468f069:0b0157,68e369:10713960425d846b80987834cc8788ce896663799ba7bbabadd4b1c1cadf95e08dff,6a2f69ed6a:171865,69f26a:443ea0505b358e793d28587c9190a997ab,73:3752,6b:8182878492938d9a9ba1aa,8f:6b6d71727375767877797a7c7e818284878b,95:cccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7ecff,96:0713181b1e20232425262728292b2c2d2f303738393a3e41434a4e4f5152535657#58595a5c5d5e606365666b6d6e6f70717378797a7b7c7d7e7f808182838487898a,8f:8d8e8f989a,8ece62:0b171b1f222125242c,81e774:eff4ff,75:0f1113,65:34eeeff0,66:0a19,677266:031500,708566:f71d34313635,800666:5f54414f56615777848ca79dbedbdce6e9,8d:3233363b3d4045464849474d5559,89:c7cacbcccecfd0d1,72:6e9f5d666f7e7f848b8d8f92,63:0832b0,96:8c8e91929395969a9b9d9e9fa0a1a2a3a4a5a6a8a9aaabacadaeafb1b2b4b5b7b8babbbfc2c3c8cacbd0d1d3d4d6d7d8d9dadbdcdddedfe1e2e3e4e5e6e7eb#ecedeef0f1f2f4f5f8fafbfcfdff,97:0203050a0b0c10111214151718191a1b1d1f20,64:3fd8,80046b:eaf3fdf5f9,6c:0507060d1518191a2129242a32,65:35556b,72:4d525630,8662521680:9f9c93bc,670a80:bdb1abadb4b7e7e8e9eadbc2c4d9cdd7,671080:ddebf1f4ed,81:0d0e,80:f2fc,671581128c5a81:361e2c1832484c5374595a7160697c7d6d67,584d5ab581:888291,6ed581:a3aacc,672681:cabb,97:2122232425262728292b2c2e2f3133343536373a3b3c3d3f404142434445464748494a4b4c4d4e4f5051545557585a5c5d5f63646667686a6b6c6d6e6f7071#72757778797a7b7d7e7f8081828384868788898a8c8e8f9093959697999a9b9c9d,81:c1a6,6b:243739434659,98:d1d2d3d5d9da,6bb35f406bc289f365909f5165:93bcc6c4c3ccced2d6,70:809c969dbbc0b7abb1e8ca,71:1013162f31735c6845724a787a98b3b5a8a0e0d4e7f9,72:1d28,706c71:1866b9,62:3e3d434849,79:3b4046495b5c535a6257606f677a858a9aa7b3,5f:d1d0,97:9e9fa1a2a4a5a6a7a8a9aaacaeb0b1b3b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3#e4e5e8eeeff0f1f2f4f7f8f9fafbfcfdfeff,98:000102030405060708090a0b0c0d0e,60:3c5d5a67415963ab,61:060d5da99dcbd1,620680:807f,6c:93f6,6dfc77:f6f8,78:0009171811,65ab78:2d1c1d393a3b1f3c252c23294e6d56572650474c6a9b939a879ca1a3b2b9a5d4d9c9ecf2,790578f479:13241e34,9f9b9e:f9fbfc,76f177:040d,76f977:07081a22192d263538505147435a68,98:0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d#4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e,77:62657f8d7d808c919fa0b0b5bd,75:3a404e4b485b727983,7f:58615f,8a487f:68747179817e,76:cde5,883294:8586878b8a8c8d8f909497959a9b9ca3a4abaaadacafb0b2b4b6b7b8b9babcbdbfc4c8c9cacbcccdced0d1d2d5d6d7d9d8dbdedfe0e2e4e5e7e8ea,98:6f70717273748b8e929599a3a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcfd0d4d6d7dbdcdde0e1e2e3e4#e5e6e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,99:0001020304050607,94:e9ebeeeff3f4f5f7f9fcfdff,95:03020607090a0d0e0f1213141516181b1d1e1f222a2b292c3132343637383c3e3f4235444546494c4e4f525354565758595b5e5f5d61626465666768696a6b6c6f7172733a,77:e7ec,96c979:d5ede3eb,7a065d477a:03021e14,99:08090a0b0c0e0f1112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2f303132333435363738393a3b3c3d3e3f40414243444546474849#4a4b4c4d4e4f50515253565758595a5b5c5d5e5f60616264667378797b7e828389,7a:393751,9ecf99a57a7076:888e9399a4,74:dee0,752c9e:202228292a2b2c3231363837393a3e414244464748494b4c4e5155575a5b5c5e63666768696a6b6c716d73,75:929496a09daca3b3b4b8c4b1b0c3c2d6cde3e8e6e4ebe7,760375:f1fcff,76:1000050c170a25181519,99:8c8e9a9b9c9d9e9fa0a1a2a3a4a6a7a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8#d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9,76:1b3c2220402d303f35433e334d5e545c566b6f,7fca7a:e6787980868895a6a0aca8adb3,88:6469727d7f82a2c6b7bcc9e2cee3e5f1,891a88:fce8fef0,89:2119131b0a342b3641667b,758b80e576:b2b4,77dc80:1214161c20222526272928310b3543464d526971,898398:788083,99:fafbfcfdfeff,9a:000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738#393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f50515253545556575859,98:898c8d8f949a9b9e9fa1a2a5a6,86:4d546c6e7f7a7c7ba88d8bac9da7a3aa93a9b6c4b5ceb0bab1afc9cfb4e9f1f2edf3d0,871386:def4dfd8d1,87:0307,86f887:080a0d09233b1e252e1a3e48343129373f82227d7e7b60704c6e8b53637c64596593afa8d2,9a:5a5b5c5d5e5f606162636465666768696a6b7283898d8e949599a6a9aaabacadaeafb2b3b4b5b9bbbdbebfc3c4c6c7c8c9cacdcecfd0d2d4d5d6d7d9dadbdc#dddee0e2e3e4e5e7e8e9eaeceef0f1f2f3f4f5f6f7f8fafcfdfeff,9b:000102040506,87:c68885ad9783abe5acb5b3cbd3bdd1c0cadbeae0ee,88:1613,87fe88:0a1b21393c,7f:36424445,82107a:fafd,7b:080304150a2b0f47382a192e31202524333e1e585a45754c5d606e7b62727190a6a7b8ac9da885aa9ca2abb4d1c1ccdddae5e6ea,7c0c7b:fefc,7c:0f160b,9b:07090a0b0c0d0e1011121415161718191a1b1c1d1e2021222425262728292a2b2c2d2e3031333435363738393a3d3e3f40464a4b4c4e50525355565758595a#5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b,7c:1f2a26384140,81fe82:010204,81ec884482:2122232d2f282b383b33343e44494b4f5a5f68,88:7e8588d8df,895e7f:9d9fa7afb0b2,7c7c65497c:919d9c9ea2b2bcbdc1c7cccdc8c5d7e8,826e66a87f:bfced5e5e1e6e9eef3,7cf87d:77a6ae,7e:479b,9e:b8b4,8d:73849491b1676d,8c:4749,91:4a504e4f64,9b:7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9ba#bbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadb,91:626170696f7d7e7274798c85908d91a2a3aaadaeafb5b4ba,8c559e7e8d:b8eb,8e:055969,8d:b5bfbcbac4d6d7dadececfdbc6ecf7f8e3f9fbe4,8e098dfd8e:141d1f2c2e232f3a4039353d3149414251524a70767c6f74858f94909c9e,8c:78828a859894,659b89:d6dedadc,9b:dcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,9c:000102030405060708090a0b0c0d0e0f101112131415161718191a#1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b,89:e5ebef,8a3e8b26975396:e9f3ef,97:0601080f0e2a2d303e,9f:808385868788898a8c,9efe9f:0b0d,96:b9bcbdced2,77bf96e092:8eaec8,93:3e6aca8f,94:3e6b,9c:7f8285868788,7a239c:8b8e90919294959a9b9e9fa0a1a2a3a5a6a7a8a9abadaeb0b1b2b3b4b5b6b7babbbcbdc4c5c6c7cacb3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a#7b7d7e808384898a8c8f93969798999daaacafb9bebfc0c1c2c8c9d1d2dadbe0e1cccdcecfd0d3d4d5d7d8d9dcdddfe2,97:7c85919294afaba3b2b4,9a:b1b0b7,9e589a:b6babcc1c0c5c2cbccd1,9b:45434749484d51,98e899:0d2e5554,9a:dfe1e6efebfbedf9,9b:080f131f23,9e:bdbe,7e3b9e:8287888b92,93d69e:9d9fdbdcdde0dfe2e9e7e5eaef,9f:222c2f39373d3e44,9c:e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,9d:000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f2021#22232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142#92$434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f8081#82838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2#92$a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1#e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff,9e:000102#92$030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e24272e30343b3c404d5052535456595d5f606162656e6f727475767778797a7b7c7d80#8183848586898a8c8d8e8f90919495969798999a9b9c9ea0a1a2a3a4a5a7a8a9aa#92$abacadaeafb0b1b2b3b5b6b7b9babcbfc0c1c2c3c5c6c7c8cacbccd0d2d3d5d6d7d9dadee1e3e4e6e8ebecedeef0f1f2f3f4f5f6f7f8fafdff,9f:000102030405#060708090a0c0f1112141516181a1b1c1d1e1f21232425262728292a2b2d2e3031#92$3233343536383a3c3f4041424345464748494a4b4c4d4e4f52535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778#797a7b7c7d7e81828d8e8f9091929394959697989c9d9ea1a2a3a4a5,f9:2c7995e7f1#92$,fa:0c0d0e0f111314181f20212324272829,e8:15161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f40414243#4445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f6061626364';




    GU.init_data=function()
    {
    	var data=GU.zipData.replace(/#(\d+)\$/g,function(a,b){
    				return Array(+b+3).join('#');
    			})
    			.replace(/#/g,'####')
    			.replace(/(\w\w):([\w#]+)(?:,|$)/g,function(a,hd,dt){
    				return dt.replace(/../g,function(a){
    					if(a!='##'){
    						return hd+a;
    					}else{
    						return a;
    					}
    				});
    			});
    	var k=0;
    	data=data.match(/..../g);
    	for(var i=0x81;i<=0xfe;i++)
    	{
    		for(var j=0x40;j<=0xFE;j++)
    		{
    			if(k>=data.length || data[k]=="####")
    			{
    				k++;
    				continue;
    			}
    //			GU.U2Ghash[data[k++]]=(i.toString(16)+j.toString(16)).toLowerCase();
    			var _k=parseInt("0x"+data[k]);
    			var _d=(i<<8)|j;
    			GU.U2Ghash[_k]=_d;
    			k++;
    		}
    	}
    	for(var key in GU.U2Ghash)GU.G2Uhash[GU.U2Ghash[key]]=parseInt(key);
    };
    GU.init_data();
    GU.tmp_ui8=new ArrayBuffer(1024);
    GU.tmp_dv=new DataView(GU.tmp_ui8);
    GU.gb2312a_to_utf8=function(ba)
    {
    	var out="";
    	for(var i=0;i<ba.length;i++)
    	{
    		var _k=((ba[i]<<8)|ba[i+1]);
    		if(_k in GU.G2Uhash)
    		{
    			out+=String.fromCharCode(GU.G2Uhash[_k]);
    			i+=1;
    		}
    		else out+=String.fromCharCode(ba[i]);
    	}
    	return out;
    };
    GU.utf8_to_gb2312a=function(s)
    {
    	var c=0;
    	for(var i=0;i<s.length;i++)
    	{
    		var _k=s.charCodeAt(i);
    		if(_k in GU.U2Ghash)
    		{
    			var _d=GU.U2Ghash[_k];
    			GU.tmp_dv.setUint8(c++,(_d>>8)&0xff);
    			GU.tmp_dv.setUint8(c++,_d&0xff);
    		}
    		else GU.tmp_dv.setUint8(c++,_k);
    	}
    	var out=new Uint8Array(GU.tmp_ui8,0,c);
    	return out;
    };
    /*
    var ddd = new Uint8Array(4);
    ddd[0]=0xD6;
    ddd[1]=0xD0;
    ddd[2]=0xB9;
    ddd[3]=0xFA;
    var ccc1=GU.gb2312a_to_utf8(ddd);
    var ccc2=GU.utf8_to_gb2312a(ccc1);
    var ccc3=GU.gb2312a_to_utf8(ccc2);*/

    var _plsbackcallfunc=null;
    class PackageTools
    {
        constructor(size)
        {
            if(size==null)size=1024 * 1024 * 4;
            // obs:"",
            // obi:0,

            this.bLoadSuccess=false,

            this.MAXDATALENGTH=size;
            //this.databuf=new ArrayBuffer(this.MAXDATALENGTH);
            this.databuf=new ArrayBuffer(this.MAXDATALENGTH);
            this.pdataview=new DataView(this.databuf);
            this.iLength=0;

            this.b64c=[
                'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T',
                'U','V','W','X','Y','Z','a','b','c','d','e','f','g','h','i','j','k','l','m','n',
                'o','p','q','r','s','t','u','v','w','x','y','z','0','1','2','3','4','5','6','7',
                '8','9','+','/','='];
            this._BASE64CODE=new ArrayBuffer(65);
            this._BASE64DECODE=new ArrayBuffer(256);
            for(var i=0;i<65;i++)
            {
                this._BASE64CODE[i] = this.b64c[i].charCodeAt(0);
                this._BASE64DECODE[this._BASE64CODE[i]] = i;
            }

            this.obd=new ArrayBuffer(64*1024);

            // iErrorID:0,
            // bCompress:false,
        }
        SetDataAndOffset(arr,off,len)
        {
            for(var i=0;i<len;i++)
            {
                this.databuf[i]=arr[i];
            }
            this.iLength=len;
            this.iOffset=off;
        }
        xordata( len)
    	{
            for(var i=0;i<len;i++)
            {
                this.databuf[i]=(this.databuf[i]^0xff);
            }
    	}
        SetData(arr,len)
        {
            for(var i=0;i<len;i++)
            {
                this.databuf[i]=arr[i];
            }
            this.iLength=len;
            this.iOffset=0;
        }
        GetData2(data)
        {
            this.iLength=data.length;
            for(var i=0;i<this.iLength;i++)
            {
                this.databuf[i]=data.charCodeAt(i);
                this.databuf[i]=this.databuf[i]&0xff;
            }

            this.iOffset=0;
            // this.bLoadSuccess=true;
            // if(this._plsbackcallfunc!=null)this._plsbackcallfunc();
        //    alert("fff");
        }
        GetData3(data)
        {
            var byte=new Laya.Byte();

            byte.clear();
            byte.writeArrayBuffer(data);
            byte.pos=0;
            var b;
            for(var i=0;i<byte.length;i++)
            {
                b=byte.getByte();
                if(b<0)b+=256;
                this.databuf[i]=b&0xff;
            }
            // for(var i=0;i<data.byteLength;i++)
            // {
            //     this.databuf[i]=data[i];
            // }
            this.iOffset=0;
            this.iLength=byte.length;
        }
        GetData(data)
        {
            if(data==null)
            {
                XDefine$1.sop("load failed "+this.load_fn);
                return;
            }
            XDefine$1.sop("load success "+this.load_fn);
    //        XDefine.sop("len : "+data.length +","+data.substr(0,10));
        //    console.log("size = "+data.length);
        //    console.log(data);
       //     alert("eee"+pls.iLength);
       /*
            this.iLength=data.length;
            for(var i=0;i<this.iLength;i++)
            {
                this.databuf[i]=data.charCodeAt(i);
                this.databuf[i]=this.databuf[i]&0xff;
            }*/
            this.GetData3(data);

            this.iOffset=0;
            this.bLoadSuccess=true;
            if(this._plsbackcallfunc!=null)this._plsbackcallfunc();
        //    alert("fff");
        }
        GetProc(proc)
        {
            XDefine$1.sop("Loading Proc : "+proc);
        }
        InitDataFromURL(fn,backcall)
        {
            this._plsbackcallfunc=backcall;
            this.bLoadSuccess=false;
            this.load_fn=fn;
            //jQuery.get(BASE_URL+fn, "", this.GetData);
            Ld( fn,Laya.Handler.create(this, this.GetData),Laya.Handler.create(this, this.GetProc),Laya.Loader.BUFFER);
        }
        InitDataFromFile(fn,backcall)
        {
            //sop(fn);
            this._plsbackcallfunc=backcall;
            this.bLoadSuccess=false;
            this.load_fn=fn;
            //jQuery.get(BASE_URL+fn, "", this.GetData);
            Ld(XDefine$1.BASE_URL+fn,Laya.Handler.create(this, this.GetData),Laya.Handler.create(this, this.GetProc),Laya.Loader.BUFFER);
        }
        JS_DataFromLocal(k)
        {
            var s=localStorage.getItem(k);
            //console.log('ssssssss:',s);
            if(s==null || s == '')return false;
            this.iLength=s.length;
            this.iOffset=0;
            for(var i=0;i<this.iLength;i++)
            {
                this.databuf[i]=s.charCodeAt(i);
                this.databuf[i]=this.databuf[i]&0xff;
            }
            this.Decode_base64();
            return true;
        }
        JS_DataToLocal(k)
        {
            this.Encode_base64();
            localStorage.setItem(k,this.obs);
        }

        Encode_base64()
        {
            var i,p;
            var size = (this.iLength-this.iLength%3)/3;
            if (this.iLength % 3 != 0)size++;
            size *= 4;
            p = 0;
            var tmpbuf=this.obd;
            for(i=0;i<tmpbuf.length;i++)tmpbuf[i]=0;
            for (i = 0; i < this.iLength; i++)
            {
                switch (i % 3)
                {
                case 0:
                    tmpbuf[p] = this.databuf[i] >> 2;
                    p++;
                    tmpbuf[p] = (this.databuf[i] & 0x03) << 4;
                    break;
                case 1:
                    tmpbuf[p] = tmpbuf[p] | (this.databuf[i] >> 4);
                    p++;
                    tmpbuf[p] = (this.databuf[i] & 0x0f) << 2;
                    break;
                case 2:
                    tmpbuf[p] = tmpbuf[p] | (this.databuf[i] >> 6);
                    p++;
                    tmpbuf[p] = this.databuf[i] & 0x3f;
                    p++;
                    break;
                }
            }
            this.obs="";
            for (i = 0; i < size; i++)
            {
                if (i > p)
                {
                    this.databuf[i] = 64;
                    this.obs+=this.b64c[64];
                }
                else if(tmpbuf[i]<64)
                {
                    this.databuf[i] = this._BASE64CODE[tmpbuf[i]];
                    this.obs+=this.b64c[tmpbuf[i]];
                }
                else
                {
                    printf("error");
                }
            }
            this.iLength = size;
        }
        Decode_base64()
        {
            if ((this.iLength % 4) !== 0) return;
            var p = 0;
            var c = 0;
            var i;
            for (i = 0; i < this.iLength; i++)
            {
                if (this.databuf[i] === this._BASE64CODE[64])
                {
                    this.iLength = p;
                    return;
                }
                else c = this._BASE64DECODE[this.databuf[i]];
                switch (i % 4)
                {
                    case 0:
                        this.databuf[p] = c << 2;
                        break;
                    case 1:
                        this.databuf[p] |= c >> 4;
                        p++;
                        this.databuf[p] = (c & 0x0f) << 4;
                        break;
                    case 2:
                        this.databuf[p] |= c >> 2;
                        p++;
                        this.databuf[p] = (c & 0x03) << 6;
                        break;
                    case 3:
                        this.databuf[p] |= c;
                        p++;
                        break;
                }
            }
            this.iLength = p;
            for(i=0;i<p;i++)
            {
                this.databuf[i]=this.databuf[i]&0xff;
            }
        }

        /////////////////////////////////////////////////////////////////////////////////
        _GetNextString()
        {
            this.obs = "";
            if (this.iOffset < 0 || this.iOffset + 3 > this.MAXDATALENGTH)
            {
                this.iErrorID = PackageTools.PTEID_OUTOFMEMORY;
                return 0;
            }
            if (!this.bCompress)
            {
                if (this.databuf[this.iOffset++] !== PackageTools.PTDT_STRING)
                {
                    this.iErrorID = PackageTools.PTEID_TYPEMISMATCH;
                    return 0;
                }
            }
            this.obi = this.databuf[this.iOffset++];
            if (this.obi < 0 || this.obi > 256) this.obi = 0;
            if (this.obi > 0)
            {
                var data = new Uint8Array(this.obi);
                for (var i = 0; i < this.obi; i++)
                {
                    data[i] = this.databuf[this.iOffset + i];
                }
                //this.obs = this.byteToString(data);
                this.obs=GU.gb2312a_to_utf8(data);
                //var uint8array =  new TextEncoder("gbk",{ NONSTANDARD_allowLegacyEncoding: true }).encode(string);
            }//,&this.databuf[this.iOffset],this.obi);
            // else this.obs = "";
            this.iOffset += this.obi;
            return this.obi;
        }
        DataToString()
        {
            return this.obs;
        }
        str2UTF8(str)
        {
            var bytes = new Array();
            var len, c;
            len = str.length;
            for (var i = 0; i < len; i++)
            {
                c = str.charCodeAt(i);
                if (c >= 0x010000 && c <= 0x10FFFF)
                {
                    bytes.push(((c >> 18) & 0x07) | 0xF0);
                    bytes.push(((c >> 12) & 0x3F) | 0x80);
                    bytes.push(((c >> 6) & 0x3F) | 0x80);
                    bytes.push((c & 0x3F) | 0x80);
                } else if (c >= 0x000800 && c <= 0x00FFFF)
                {
                    bytes.push(((c >> 12) & 0x0F) | 0xE0);
                    bytes.push(((c >> 6) & 0x3F) | 0x80);
                    bytes.push((c & 0x3F) | 0x80);
                } else if (c >= 0x000080 && c <= 0x0007FF)
                {
                    bytes.push(((c >> 6) & 0x1F) | 0xC0);
                    bytes.push((c & 0x3F) | 0x80);
                } else
                {
                    bytes.push(c & 0xFF);
                }
            }
            return bytes;
        }
        unicode_to_utf8(b1,b2)
        {
            if(b1<0)b1=256+b1;
            if(b2<0)b2=256+b2;
            var c=(b1<<8)|b2;

            var enc = "";
            {// output value
                if (c<0x80) enc += String.fromCharCode(c);
                else if (c<0x800) enc += String.fromCharCode(0xC0+(c>>6),0x80+(c&0x3F));
                else if (c<0x10000) enc += String.fromCharCode(0xE0+(c>>12),0x80+(c>>6&0x3F),0x80+(c&0x3F));
                else enc += String.fromCharCode(0xF0+(c>>18),0x80+(c>>12&0x3F),0x80+(c>>6&0x3F),0x80+(c&0x3F));
            }
            return enc;
        }
        StringToBuffer(s,buf)
        {
            for(var i=0;i<s.length;i++)
            {
                buf[i]=s.charCodeAt(i);
            }
            return i;
        }
        BufferToString(buf,size)
        {
            var data = new Int8Array(size);
            for (var i = 0; i < size; i++)
            {
                data[i] = buf[i];
            }
            return this.byteToString(data);
        }
        byteToString(arr)
        {
            var out, i, len, c;
            var char2, char3;
            out = "";
            len = arr.length;
        
            i = 0;
            while(i < len)
            {
                c = arr[i++];
                switch(c >> 4)
                { 
                    case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:
                    // 0xxxxxxx
                        out += String.fromCharCode(c);
                        break;
        
                    case 12: case 13:
                    // 110x xxxx   10xx xxxx
                        char2 = arr[i++];
                        out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));
                        break;
                    case 14:
                    // 1110 xxxx  10xx xxxx  10xx xxxx
                        char2 = arr[i++];
                        char3 = arr[i++];
                        out += String.fromCharCode(((c & 0x0F) << 12) |((char2 & 0x3F) << 6) |((char3 & 0x3F) << 0));
                        break;
                }
            }
            return out;
        }
        InsertString(str)
        {
    //        var bytes=this.str2UTF8(str);
            var bytes=GU.utf8_to_gb2312a(str);
            if(this.iOffset<0 || this.iOffset+bytes.length+2>this.MAXDATALENGTH){this.iErrorID=PackageTools.PTEID_OUTOFMEMORY;return 0;}
            var p=this.iOffset;
            if(!this.bCompress)this.databuf[this.iOffset++]=PackageTools.PTDT_STRING;
            this.databuf[this.iOffset++]=bytes.length;
            for(var i=0;i<bytes.length;i++)
            {
                this.databuf[this.iOffset++]=bytes[i];
            }
            return this.iOffset-p;
        }

        GetNextString()
        {
            this._GetNextString();
            return this.obs;
        }
        //////////////////////////////////////////////////////////////////////////
        InsertInt(i){
            if (this.iOffset < 0 || this.iOffset + 5 > this.MAXDATALENGTH)
            {
                this.iErrorID = PackageTools.PTEID_OUTOFMEMORY;
                return 0;
            }
            var p = this.iOffset;
            if (!this.bCompress) this.databuf[this.iOffset++] = PackageTools.PTDT_INT;
            this.databuf[this.iOffset++] = (i >> 24) & 0xff;
            this.databuf[this.iOffset++] = (i >> 16) & 0xff;
            this.databuf[this.iOffset++] = (i >> 8) & 0xff;
            this.databuf[this.iOffset++] = i & 0xff;
            return this.iOffset - p;
        }
        GetNextInt()
        {
            if (this.iOffset < 0 || this.iOffset + 3 > this.MAXDATALENGTH)
            {
                this.iErrorID = PackageTools.PTEID_OUTOFMEMORY;
                return 0;
            }
            if (!this.bCompress)
            {
                if (this.databuf[this.iOffset] != PackageTools.PTDT_INT)
                {
                    this.iErrorID = PackageTools.PTEID_TYPEMISMATCH;
                    return 0;
                }
                this.iOffset++;
            }

            this.obi = ((this.databuf[this.iOffset] << 24) | (this.databuf[this.iOffset + 1] << 16) | (this.databuf[this.iOffset + 2] << 8) | (this.databuf[this.iOffset + 3]));
            if(this.obi >= 0x80000000)
            {
                this.obi = this.obi - 0x100000000;
            }
            this.iOffset += 4;
            return this.obi;
        }
        InsertByte(b)
        {
            if(this.iOffset<0 || this.iOffset+2>this.MAXDATALENGTH){this.iErrorID=PackageTools.PTEID_OUTOFMEMORY;return 0;}
            var p=this.iOffset;
            if(!this.bCompress)this.databuf[this.iOffset++]=PackageTools.PTDT_BYTE;
            this.databuf[this.iOffset++]=b&0xff;
            return this.iOffset-p;
        }
        GetNextByte()
        {
            if (this.iOffset < 0 || this.iOffset + 2 > this.MAXDATALENGTH)
            {
                this.iErrorID = PackageTools.PTEID_OUTOFMEMORY;
                return -1;
            }
            if (!this.bCompress)
            {
                if (this.databuf[this.iOffset] != PackageTools.PTDT_BYTE)
                {
                    this.iErrorID = PackageTools.PTEID_TYPEMISMATCH;
                    return -1;
                }
                this.iOffset++;
            }
            this.obi = this.databuf[this.iOffset];
            if(this.obi >= (1<<7)) this.obi = this.obi - 0x100;
            this.iOffset ++;
            return this.obi;
        }
        InsertShort(s)
        {
            if (this.iOffset < 0 || this.iOffset + 3 > this.MAXDATALENGTH)
            {
                this.iErrorID = PackageTools.PTEID_OUTOFMEMORY;
                return 0;
            }
            var p = this.iOffset;
            if (!this.bCompress) this.databuf[this.iOffset++] = PackageTools.PTDT_SHORT;
            this.databuf[this.iOffset++] = (s >> 8) & 0xff;
            this.databuf[this.iOffset++] = s & 0xff;
            return this.iOffset - p;
        }
        GetNextShort()
        {
            if (this.iOffset < 0 || this.iOffset + 3 > this.MAXDATALENGTH)
            {
                this.iErrorID = PackageTools.PTEID_OUTOFMEMORY;
                return 0;
            }
            if (!this.bCompress)
            {
                if (this.databuf[this.iOffset] != PackageTools.PTDT_SHORT)
                {
                    this.iErrorID = PackageTools.PTEID_TYPEMISMATCH;
                    return 0;
                }
                this.iOffset++;
            }
            this.obi = ((this.databuf[this.iOffset] << 8) | (this.databuf[this.iOffset + 1]));
            if(this.obi >= (1<<15)) this.obi = this.obi - 0x10000;
            this.iOffset += 2;
            return this.obi;
        }
        InsertData(d,len)
        {
            if (this.iOffset < 0 || this.iOffset + len + 2 > this.MAXDATALENGTH)
            {
                this.iErrorID = PackageTools.PTEID_OUTOFMEMORY;
                return 0;
            }
            var p = this.iOffset;
            if (!this.bCompress) this.databuf[this.iOffset++] = PackageTools.PTDT_DATA;
            this.databuf[this.iOffset++] = (len >> 8) & 0xff;
            this.databuf[this.iOffset++] = len & 0xff;
            for (var i = 0; i < len; i++)
            {
                this.databuf[this.iOffset++] = d[i];
            }
            return this.iOffset - p;
        }
        GetNextData()
        {
            if (this.iOffset < 0 || this.iOffset + 3 > this.MAXDATALENGTH)
            {
                this.iErrorID = PackageTools.PTEID_OUTOFMEMORY;
                return 0;
            }
            if (!this.bCompress)
            {
                if (this.databuf[this.iOffset++] != PackageTools.PTDT_DATA)
                {
                    this.iErrorID = PackageTools.PTEID_TYPEMISMATCH;
                    return 0;
                }
            }
            this.obi = (this.databuf[this.iOffset] << 8) | this.databuf[this.iOffset + 1];
            this.iOffset += 2;

            
            var data=new Uint8Array(this.obi);
            for(var i=0;i<this.obi;i++)
            {
                this.obd[i]=this.databuf[this.iOffset+i];
                data[i]=this.databuf[this.iOffset+i];
            }
            this.obs=GU.gb2312a_to_utf8(data);
            //this.obs=this.byteToString(data);

            this.iOffset += this.obi;
            return this.obi;
        }
        InsertFloat(f)
        {
            if (this.iOffset < 0 || this.iOffset + 5 > this.MAXDATALENGTH)
            {
                this.iErrorID = PackageTools.PTEID_OUTOFMEMORY;
                return 0;
            }
            var p = this.iOffset;
            if (!this.bCompress) this.databuf[this.iOffset++] = PackageTools.PTDT_FLOAT;
            this.pdataview.setFloat32(0,f,true);
            for(var i=0;i<4;i++)
            {
                this.databuf[this.iOffset++]=this.pdataview.getInt8(i);
            }

            return this.iOffset - p;
        }
        GetNextFloat()
        {
            if (this.iOffset < 0 || this.iOffset + 5 > this.MAXDATALENGTH)
            {
                this.iErrorID = PackageTools.PTEID_OUTOFMEMORY;
                return 0;
            }
            if (!this.bCompress)
            {
                if (this.databuf[this.iOffset++] != PackageTools.PTDT_FLOAT)
                {
                    this.iErrorID = PackageTools.PTEID_TYPEMISMATCH;
                    return 0;
                }
            }
            for(var i=0;i<4;i++)
            {
                this.pdataview.setInt8(i,this.databuf[this.iOffset+i]);
            }

            this.obf=this.pdataview.getFloat32(0,true);
    //        console.log(""+this.obf);
            this.iOffset += 4;
            return this.obf;
        }
        InsertLong(i)
        {
            if (this.iOffset < 0 || this.iOffset + 5 > this.MAXDATALENGTH)
            {
                this.iErrorID = PackageTools.PTEID_OUTOFMEMORY;
                return 0;
            }
            var p = this.iOffset;
            if (!this.bCompress) this.databuf[this.iOffset++] = PackageTools.PTDT_LONG;
            var k;
            for(var j=0;j<8;j++)
            {
                k=i%256;
                this.databuf[this.iOffset+7-j]=k;
                i-=k;
                i/=256;
            }
            this.iOffset+=8;
            return this.iOffset - p;
        }
        GetNextLong()
        {
            if (this.iOffset < 0 || this.iOffset + 3 > this.MAXDATALENGTH)
            {
                this.iErrorID = PackageTools.PTEID_OUTOFMEMORY;
                return 0;
            }
            if (!this.bCompress)
            {
                if (this.databuf[this.iOffset] != PackageTools.PTDT_LONG)
                {
                    this.iErrorID = PackageTools.PTEID_TYPEMISMATCH;
                    return 0;
                }
                this.iOffset++;
            }
            //var uint8=new Uint8Array(8);
            //for(var i=0;i<8;i++)uint8[i]=this.databuf[this.iOffset+i];
            //this.obi=uint8[0]*0x100000000000000+uint8[1]*0x1000000000000+uint8[2]*0x10000000000+uint8[3]*0x100000000+uint8[4]*0x1000000+uint8[5]*0x10000+uint8[6]*0x100+uint8[7];
            this.obi=0;
            var i,j=1;
            for(i=0;i<8;i++)
            {
                this.obi+=this.databuf[this.iOffset+7-i]*j;
                j*=256;
            }
            // this.obi=uint8[0]*0x100000000000000+uint8[1]*0x1000000000000+uint8[2]*0x10000000000+uint8[3]*0x100000000+uint8[4]*0x1000000+uint8[5]*0x10000+uint8[6]*0x100+uint8[7];
            // this.obi = ((this.databuf[this.iOffset] << 56) | (this.databuf[this.iOffset+1] << 48) | (this.databuf[this.iOffset+2] << 40) | (this.databuf[this.iOffset+3] << 32) | (this.databuf[this.iOffset+4] << 24) | (this.databuf[this.iOffset + 5] << 16) | (this.databuf[this.iOffset + 6] << 8) | (this.databuf[this.iOffset + 7]));
            this.iOffset += 8;
            return this.obi;
        }
    }
    PackageTools.PTEID_NON =0;
    PackageTools.PTEID_OUTOFMEMORY =1;
    PackageTools.PTEID_TYPEMISMATCH =2;

    PackageTools.PTDT_BYTE=1;
    PackageTools.PTDT_SHORT=2;
    PackageTools.PTDT_INT=3;//4字节
    PackageTools.PTDT_STRING=4;//<256字节
    PackageTools.PTDT_DATA=5;//<65536
    PackageTools.PTDT_FLOAT=6;//32位浮点数
    PackageTools.PTDT_LONG=7;//8字节

    PackageTools.pls=null;
    PackageTools.gi=function()
    {
        if(PackageTools.pls==null)PackageTools.pls=new PackageTools();
        return PackageTools.pls;
    };

    class _RESLIST
    {
        constructor()
        {
            this.iRid=-1;
            this.sResName="";
            this.iLoadStat=0;
        }
    }

    class _BLOCKLIST{
        constructor()
        {
            this.iCp=0,
            this.iMx=0,
            this.iMy=0,
            this.iSw=0,
            this.iSh=0,
            this.iRa=0,
            this.bFlip=false;
        }
    }

    class _FRAMELIST{
        constructor()
        {
            this.iFid=0;
            this.iDelay=0;
            this.iBlockCount=0;
            this.blocklist=null;
        }
    }
    class _ANIMALIST{
        constructor()
        {
            this.iAnimaId=0,
            this.sAnimaName="",
            this.iOx=0,
            this.iOy=0,
        
            this.iFrameCount=0,
            this.rect=[0,0,0,0],
            this.framelist=null;
        }
    }

    class _CUTLIST
    {
        constructor()
        {
            this.iRp=0,
            this.iX=0,
            this.iY=0,
            this.iW=0,
            this.iH=0;
        }
    }

    class XAnima{

        constructor()
        {
            this.pm3f=M3DFast$1.gi();
            this.iResCount=0;
            this.reslist=null,
        
            this.iAnimaCount=0,
            this.animalist=null,
        
            this.iCutCount=0,
            this.cutlist=null,
        
            this.pathname="";

            this.bLocal=null;
        }
        LoadInitRes(init_res)
        {
            var i,ret=0;
            for(i=0;i<this.iResCount;i++)
            {
                for(var j=0;j<init_res.length;j++){
                    if(this.reslist[i].sResPath==init_res[j])break;
                }
                if(j < init_res.length){
                    if(LoadAnimaRes.iLoadingCount>=LoadAnimaRes.iMaxLoadThread)return ret;
                    if(this.reslist[i].iRid==-1){
                        this.reslist[i].iRid=M3DFast$1.gi().LoadImage(this.reslist[i].sResPath,this.bLocal);
                        LoadAnimaRes.iLoadingCount++;
                    }
                    else if(M3DFast$1.gi().FindImage(this.reslist[i].iRid)==null)LoadAnimaRes.iLoadingCount++;
                    else ret++;
                }
            }
            return ret;
        }

        LoadRes(){
            var i;
            for(i=0;i<this.iResCount;i++){
                if(LoadAnimaRes.iLoadingCount>=LoadAnimaRes.iMaxLoadThread){
                    return;
                }
                //console.log('加载角色资源：',this.reslist[i].sResPath,this.reslist[i].sResPath.indexOf("nroles"))
                //if(this.reslist[i].sResPath.indexOf("nroles") < 0) continue;
                if(this.reslist[i].iRid==-1){
                    this.reslist[i].iRid=M3DFast$1.gi().LoadImage(this.reslist[i].sResPath,this.bLocal);
                    this.reslist[i].iLoadStat=1;
                    LoadAnimaRes.iLoadingCount++;
                }else if(M3DFast$1.gi().FindImage(this.reslist[i].iRid)==null){
                    LoadAnimaRes.iLoadingCount++;
                }
            }
        }

        GetResLoadedCount()
        {
            var i,j=0;
            for(i=0;i<this.iResCount;i++)
            {
                if(this.reslist[i].iRid==-1)continue;
                if(M3DFast$1.gi().FindImage(this.reslist[i].iRid)!=null)j++;
            }
            return j;
        }
        IsResLoadedFinish()
        {
            return this.GetResLoadedCount()==this.iResCount;
        }
        LoadAnima_fullpath(pn,pls,blocal,call_back=null)
        {
            this.bLocal=blocal;
            this.pathname=pn;

            XAnima._PUT(this.pathname,this);

            this.GetAnimaData(this.pathname,this,0);

            this.load_finished=call_back;
            this.bLoadSuccess=false;
            return true;
        }
        GetAnimaData(filepath,pani,retry_time,data)
        {
            if(data==null)
            {//加载失败，重新加载
                if(retry_time>0)XDefine$1.sop("retry "+retry_time+","+filepath);
                //console.log('filepath：加载动画：',filepath)
                Laya.loader.load(XDefine$1.BASE_URL+ filepath+"/xa.ax",Laya.Handler.create(pani, pani.GetAnimaData,[filepath,pani,retry_time+1]),null,Laya.Loader.BUFFER);
                return;
            }
            var pls=PackageTools.gi();
            pls.GetData3(data);
            //console.log('二进制数据：',data);
            // XDefine.sop("loaded anima : "+filepath)
            pani._LoadAnima(filepath,pls,pani.bLocal);
            if(this.load_finished!=null)this.load_finished();
            this.bLoadSuccess=true;
        }
        _LoadAnima(pn,pls,blocal)
        {
            this.bLocal=blocal;
            this.pathname=pn;
            var i,j,k;
            var iVar=pls.GetNextByte();
            pls.GetNextByte();

            this.iResCount=pls.GetNextShort();
            this.reslist=new Array(this.iResCount);
            for(i=0;i<this.iResCount;i++)
            {
                this.reslist[i]=new _RESLIST();
                this.reslist[i].iRid=pls.GetNextShort();
                this.reslist[i].sResName=pls.GetNextString();
                this.reslist[i].sResPath=this.pathname+"/"+this.reslist[i].sResName;
                this.reslist[i].iRid=-1;
                this.reslist[i].bNotUsed=true;

    }

            this.iAnimaCount=pls.GetNextShort();
            this.animalist=new Array(this.iAnimaCount);
            for(i=0;i<this.iAnimaCount;i++)
            {
                this.animalist[i]=new _ANIMALIST();
                this.animalist[i].iAnimaId=pls.GetNextShort();
                this.animalist[i].sAnimaName=pls.GetNextString();
                pls.GetNextString();
                this.animalist[i].iOx=pls.GetNextShort();
                this.animalist[i].iOy=pls.GetNextShort();
                pls.GetNextShort();
                pls.GetNextShort();

                this.animalist[i].iFrameCount=pls.GetNextShort();
                this.animalist[i].framelist=new Array(this.animalist[i].iFrameCount);
                for(j=0;j<this.animalist[i].iFrameCount;j++)
                {
                    this.animalist[i].framelist[j]=new _FRAMELIST();
                    this.animalist[i].framelist[j].iFid=pls.GetNextShort();
                    this.animalist[i].framelist[j].iDelay=pls.GetNextShort();
                    this.animalist[i].framelist[j].iBlockCount=pls.GetNextShort();
                    this.animalist[i].framelist[j].blocklist=new Array(this.animalist[i].framelist[j].iBlockCount);
                    for(k=0;k<this.animalist[i].framelist[j].iBlockCount;k++)
                    {
                        this.animalist[i].framelist[j].blocklist[k]=new _BLOCKLIST();

                        this.animalist[i].framelist[j].blocklist[k].iCp=pls.GetNextShort();

                        if(iVar==10)
                        {
                            this.animalist[i].framelist[j].blocklist[k].iMx=pls.GetNextShort();
                            this.animalist[i].framelist[j].blocklist[k].iMy=pls.GetNextShort();
                            this.animalist[i].framelist[j].blocklist[k].iSw=pls.GetNextShort();
                            this.animalist[i].framelist[j].blocklist[k].iSh=pls.GetNextShort();
                            this.animalist[i].framelist[j].blocklist[k].iRa=pls.GetNextShort();
                            this.animalist[i].framelist[j].blocklist[k].fAlpha=pls.GetNextShort()/100;   
                            if((this.animalist[i].framelist[j].blocklist[k].iRa&0x1000)==0x1000)
                            {
                                this.animalist[i].framelist[j].blocklist[k].bFlip=true;
                                this.animalist[i].framelist[j].blocklist[k].iRa-=0x1000;
                            }
                        }
                        else
                        {
                            this.animalist[i].framelist[j].blocklist[k].iMx=pls.GetNextFloat();
                            this.animalist[i].framelist[j].blocklist[k].iMy=pls.GetNextFloat();
                            this.animalist[i].framelist[j].blocklist[k].iSw=pls.GetNextFloat();
                            this.animalist[i].framelist[j].blocklist[k].iSh=pls.GetNextFloat();
                            this.animalist[i].framelist[j].blocklist[k].iRa=pls.GetNextFloat();
                            this.animalist[i].framelist[j].blocklist[k].fAlpha=pls.GetNextShort()/100;
        
                            if(pls.GetNextByte()==1)this.animalist[i].framelist[j].blocklist[k].bFlip=true;
                        }
                    }
                }
            }
            this.iCutCount=pls.GetNextShort();
            this.cutlist=new Array(this.iCutCount);
            for(i=0;i<this.iCutCount;i++)
            {
                this.cutlist[i]=new _CUTLIST();
                this.cutlist[i].iRp=pls.GetNextShort();
                this.cutlist[i].iX=pls.GetNextShort();
                this.cutlist[i].iY=pls.GetNextShort();
                this.cutlist[i].iW=pls.GetNextShort();
                this.cutlist[i].iH=pls.GetNextShort();
            }

            var ap,cp,x,y,w,h;
            for(ap=0;ap<this.iAnimaCount;ap++)
            {
                this.animalist[ap].rect[0]=99999999;
                this.animalist[ap].rect[1]=99999999;
                this.animalist[ap].rect[2]=-99999999;
                this.animalist[ap].rect[3]=-99999999;

                for(i=0;i<this.animalist[ap].iFrameCount;i++)
                {
                    for(j=0;j<this.animalist[ap].framelist[i].iBlockCount;j++)
                    {
                        cp=this.animalist[ap].framelist[i].blocklist[j].iCp;

                        x=this.animalist[ap].framelist[i].blocklist[j].iMx;
                        y=this.animalist[ap].framelist[i].blocklist[j].iMy;

                        w=parseInt(0.01*this.animalist[ap].framelist[i].blocklist[j].iSw*this.cutlist[cp].iW);
                        h=parseInt(0.01*this.animalist[ap].framelist[i].blocklist[j].iSh*this.cutlist[cp].iH);

                        if(i==0 && j==0)this.animalist[ap].rect[0]=x;
                        else if(x<this.animalist[ap].rect[0])this.animalist[ap].rect[0]=x;

                        if(i==0 && j==0)this.animalist[ap].rect[2]=x+w;
                        else if(x+w>this.animalist[ap].rect[2])this.animalist[ap].rect[2]=x+w;

                        if(i==0 && j==0)this.animalist[ap].rect[1]=y;
                        else if(y<this.animalist[ap].rect[1])this.animalist[ap].rect[1]=y;

                        if(i==0 && j==0)this.animalist[ap].rect[3]=y+h;
                        else if(y+h>this.animalist[ap].rect[3])this.animalist[ap].rect[3]=y+h;
                    }
                }
            }
            LoadAnimaRes.gi().PushAnima(this);
            
            //this.LoadRes();
            // if(blocal)this.LoadRes();
            // else
            // {
            //     blocal=blocal;
            // }
        }
        iAnimaX( aa)
    	{
    		return this.animalist[aa.iAnimaPoint].rect[0];
    	}
    	iAnimaY( aa)
    	{
            return this.animalist[aa.iAnimaPoint].rect[1];
    	}
    	iAnimaH( aa)
    	{
    		return this.animalist[aa.iAnimaPoint].rect[3]-this.animalist[aa.iAnimaPoint].rect[1];
    	}
    	iAnimaW( aa)
    	{
    		return this.animalist[aa.iAnimaPoint].rect[2]-this.animalist[aa.iAnimaPoint].rect[0];
    	}
        InitAnimaWithName(name,out_aa)
        {
            if(this.aaa==null)this.aaa=new AnimaAction();
            var i;
            this.aaa.iAnimaPoint = -1;
            this.aaa.pani = this;
            for (i = 0; i<this.iAnimaCount; i++)
            {
                if (this.animalist[i].sAnimaName== name)
                {
                    this.aaa.iAnimaPoint = i;
                    this.aaa.iFrame = 0;
                    this.aaa.iDelay = 0;

                    this.aaa.iRect[0] = this.animalist[i].rect[0];
                    this.aaa.iRect[1] = this.animalist[i].rect[1];
                    this.aaa.iRect[2] = this.animalist[i].rect[2];
                    this.aaa.iRect[3] = this.animalist[i].rect[3];
                    if(out_aa==null)out_aa=new AnimaAction();
                    out_aa.copyfrom(this.aaa);
                    return out_aa;
                }
            }
            this.aaa.iDelay = -1;
            XDefine$1.sop("cant find anima "+name+" from "+this.pathname);
            if(out_aa==null)out_aa=new AnimaAction();
            // out_aa.iAnimaPoint=0;
            // out_aa.iFrame=0;
            out_aa.pani=this;
            return this.aaa;
        }
        DrawAnima(x,y,name,frameoffset)
        {
            if(typeof(name)=="object")
            {
                this.DrawAnimaEx_ByOffset(x,y,name.iAnimaPoint,name.iFrame,101,1,1,0,0,0);
                return;
            }
            if(this.aaa==null)this.aaa=new AnimaAction();
            this.InitAnimaWithName(name);
            this.DrawAnimaEx_ByOffset(x,y,this.aaa.iAnimaPoint,frameoffset,101,1,1,0,0,0);
        }
        DrawAnima_aa(x,y,aa,x_fp)
        {
            if(typeof(aa)=="string")
            {
                this.DrawAnima(x,y,aa,x_fp);
                return;
            }
            if(typeof(aa)=="number")
            {
                this.DrawAnimaEx_ByOffset(x,y,aa,x_fp,101,1,1,0,0,0);
                return;
            }
            this.DrawAnimaEx_ByOffset(x,y,aa.iAnimaPoint,aa.iFrame,101,1,1,0,0,0);
        }
        DrawAnimaEx(x,y,name,frameoffset,alpha,sw,sh,ra,ratx,raty)
        {
            if(typeof(name)=="object")
            {
                this.DrawAnimaEx_ByOffset(x,y,name.iAnimaPoint,name.iFrame,frameoffset,alpha,sw,sh,ra,ratx);
                return;
            }
            if(this.aaa==null)this.aaa=new AnimaAction();
            this.InitAnimaWithName(name);
            this.DrawAnimaEx_ByOffset(x,y,this.aaa.iAnimaPoint,frameoffset,alpha,sw,sh,ra,ratx,raty);
        }
        DrawAnimaEx_ByName(x,y,name,frameoffset,alpha,sw,sh,ra,ratx,raty,turn)
        {
            if(this.aaa==null)this.aaa=new AnimaAction();
            this.InitAnimaWithName(name);
            this.DrawAnimaEx_ByOffset(x,y,this.aaa.iAnimaPoint,frameoffset,alpha,sw,sh,ra,ratx,raty,turn);
        }
        DrawAnimaEx_ByOffset(x,y,ap,fp,alpha,sw,sh,ra,ratx,raty,turn)
        {
            fp=parseInt(fp);
            turn=turn||false;
            if((ra&0x1000)==0x1000)
            {
                turn=!turn;
                ra-=0x1000;
            }

            var i;
            var cp;
            var xx,yy,rsw,rsh,rra;
            var useturn;

    //        if(ratx==-2)ratx=x;
    //        if(raty==-2)raty=y;

            if(ap<0 || ap>this.iAnimaCount || fp<0 || this.animalist[ap].iFrameCount<=0)return;
            fp=fp%this.animalist[ap].iFrameCount;
            for(i=0;i<this.animalist[ap].framelist[fp].iBlockCount;i++)
            {
                cp=this.animalist[ap].framelist[fp].blocklist[i].iCp;

                useturn=turn;
                if (this.animalist[ap].framelist[fp].blocklist[i].bFlip)useturn = !useturn;
                // if(turn)xx=x-this.animalist[ap].framelist[fp].blocklist[i].iMx-this.cutlist[cp].iW;
                // else xx=x+this.animalist[ap].framelist[fp].blocklist[i].iMx;

                //xx=x+this.animalist[ap].framelist[fp].blocklist[i].iMx;
                rsw=0.01*this.animalist[ap].framelist[fp].blocklist[i].iSw*sw;
                rsh=0.01*this.animalist[ap].framelist[fp].blocklist[i].iSh*sh;
                
                if(ratx==-2)xx=x+this.animalist[ap].framelist[fp].blocklist[i].iMx;
                else xx=(x+this.animalist[ap].framelist[fp].blocklist[i].iMx+(useturn?1:0)*this.cutlist[cp].iW)/rsw;
                if(raty==-2)yy=y+this.animalist[ap].framelist[fp].blocklist[i].iMy;
                else yy=(y+this.animalist[ap].framelist[fp].blocklist[i].iMy)/rsh;
                if(useturn)xx=-xx;

                rra=this.animalist[ap].framelist[fp].blocklist[i].iRa+ra;

                // if(turn)xx=x-this.animalist[ap].framelist[fp].blocklist[i].iMx*sh-this.cutlist[cp].iW*sh;
                // else xx=x+this.animalist[ap].framelist[fp].blocklist[i].iMx*sh;
               
               
               
               
                if(this.reslist[this.cutlist[cp].iRp].iRid==-1)
                {
                    this.reslist[this.cutlist[cp].iRp].iRid=M3DFast$1.gi().LoadImage(this.reslist[this.cutlist[cp].iRp].sResPath,this.bLocal);
                    continue;
                }
                M3DFast$1.gi()._DrawImageEx(xx,
                    yy,
                    this.reslist[this.cutlist[cp].iRp].iRid,
                    this.cutlist[cp].iX,
                    this.cutlist[cp].iY,
                    this.cutlist[cp].iW,
                    this.cutlist[cp].iH,
                    alpha*this.animalist[ap].framelist[fp].blocklist[i].fAlpha,
                    rsw,
                    rsh,
                    rra,
                    (rra==0 || ratx>0)?ratx:-2,(rra==0 || raty>0)?raty:-2,useturn);
                if(this.reslist[this.cutlist[cp].iRp].bNotUsed)
                {
                    // XDefine.sop("pngusesort\""+this.pathname+"/"+this.reslist[this.cutlist[cp].iRp].sResName+"\",");
                    this.reslist[this.cutlist[cp].iRp].bNotUsed=false;
                }
            }
        }
        bInAnima( aa, ax, ay, mx, my)
    	{
    		if(aa==null)return false;
    		if(aa.iAnimaPoint<0 || aa.iAnimaPoint>=this.iAnimaCount)return false;
    		var x1=this.animalist[aa.iAnimaPoint].rect[0];
    		var y1=this.animalist[aa.iAnimaPoint].rect[1];
    		var x2=this.animalist[aa.iAnimaPoint].rect[2];
    		var y2=this.animalist[aa.iAnimaPoint].rect[3];
    		if(mx>ax+x1 && mx<ax+x2 &&
    			my>ay+y1 && my<ay+y2)
    		{
    //			GmPlay.sop("mx="+mx+",my="+my+",x1="+(ax+x1)+"x2="+(ax+x2)+"y1="+(ay+y1)+"y2="+(ay+y2));
    	//		GmPlay.sop("x1="+x1+"y1="+y1);
    			return true;
    		}
    //		GmPlay.sop("false");
    		return false;
    	}
        RotationVertex_2D2 (vx, vy, dx, dy, jd)
        {
            var l;
            var tx, ty, tjd;

            tx = vx - dx;
            ty = vy - dy;
            if (tx == 0) tx = 0.0000001;
            tjd = Math.atan(ty / tx);
            if (tx < 0) tjd += Math.PI;
            tjd = tjd + Math.PI * jd / 180;
            l = Math.sqrt(tx * tx + ty * ty);
            this.rdx = (Math.cos(tjd) * l + dx);
            this.rdy = (Math.sin(tjd) * l + dy);
        }
        NextFrame(aa)
        {
            aa.iDelay++;
            if (aa.iAnimaPoint < 0 || aa.iAnimaPoint >= this.iAnimaCount) return false;
            if (aa.iFrame < 0 || aa.iFrame >= this.animalist[aa.iAnimaPoint].iFrameCount)
            {
                aa.iFrame = 0;
                aa.iDelay = 0;
            }
            if (this.animalist[aa.iAnimaPoint].iFrameCount == 0) return false;
            if (aa.iDelay > this.animalist[aa.iAnimaPoint].framelist[aa.iFrame].iDelay)
            {
                aa.iDelay = 0;
                aa.iFrame++;
                if (aa.iFrame >= this.animalist[aa.iAnimaPoint].iFrameCount)
                {
                    aa.iFrame = 0;
                    return true;
                }
            }
            return false;
        }
        SetFrame( aa, tick)
    	{//计算总delay数量
    		var i,j=0,k,m;
    		var al=this.animalist[aa.iAnimaPoint];
    		for(i=0;i<al.iFrameCount;i++)
    		{
    			j+=al.framelist[i].iDelay+1;
    		}
    		if(j==0)return;
    		k=tick%j;
    		m=0;
    		for(i=0;i<al.iFrameCount;i++)
    		{
    			m+=al.framelist[i].iDelay+1;
    			if(m>=k)
    			{
    				aa.iFrame= i;
    				return;
    			}
    		}
    	}
    };

    XAnima._ALL=new Array();
    XAnima._GET=function(fn)
    {
        for(var i=0;i<XAnima._ALL.length;i++)
        {
            if(XAnima._ALL[i].fn==fn)return XAnima._ALL[i].ani;
        }
        return null;
    };
    XAnima._PUT=function(fn,ani)
    {
        var p=XAnima._ALL.length;
        XAnima._ALL[p]=new Object();
        XAnima._ALL[p].fn=fn;
        XAnima._ALL[p].ani=ani;
    };

    class XButton
    {
        constructor(ani)
        {
    		this.pani=ani;
    		this.pm3f=M3DFast$1.gi();
    //		this.pm3f=M3DFast.xm3f;
    		this.bSingleButton=false;
    		this.bCheckByRect=false;
    		this.bCheckByRect1=false;
    		
    		this.ReleaseButton();
    		this.sName="";
    		this.iNameColor=0xffffffff;
    		this.Move(0,0,100,100);
    //		bHide=false;
    		this.iFingerLocker=-1;
    		this.iNameSize=-1;
        }
        SetCheckRect( x, y, w, h)
    	{
    		this.bCheckByRect1=true;
    		this.iCheckX=x;
    		this.iCheckY=y;
    		this.iCheckW=w;
    		this.iCheckH=h;
        }
        InitButton( an)
    	{
    		if(this.pani==null)return;
    		this.pani.InitAnimaWithName(an,GmPlay$1.aaa);
    		GmPlay$1.aaa.iFrame=0;this.SetAnimaNormal(GmPlay$1.aaa,false);
    		GmPlay$1.aaa.iFrame=1;this.SetAnimaMouseon(GmPlay$1.aaa,false);
    		this.SetAnimaMousedown(GmPlay$1.aaa,false);
    		GmPlay$1.aaa.iFrame=0;this.SetAnimaDisable(GmPlay$1.aaa,false);
        }
        ReleaseButton()
    	{
    //		this.aa_normal_to_on=null;
    //		iStat_normal_to_on=0;

    		this.aa_normal=null;
    		this.act_normal=false;
    		this.aa_mouseon=null;
    		this.act_mouseon=false;
    		this.aa_mousedown=null;
    		this.act_mousedown=false;

    		this.bMouseIn=false;
    		this.bMouseDown=false;
    		this.bVisible=true;
    		this.bDisable=false;

    		this.iX=0;
    		this.iY=0;
        }
        SetAnimaNormal( aa, bact)
    	{
    		if(this.aa_normal==null)this.aa_normal=new AnimaAction();
    		this.aa_normal.copyfrom(aa);
    		this.act_normal=bact;
        }
        SetAnimaMouseon( aa, bact)
    	{
    		if(this.aa_mouseon==null)this.aa_mouseon=new AnimaAction();
    		this.aa_mouseon.copyfrom(aa);
    		this.act_mouseon=bact;
        }
        SetAnimaMousedown( aa, bact)
    	{
    		if(this.aa_mousedown==null)this.aa_mousedown=new AnimaAction();
    		this.aa_mousedown.copyfrom(aa);
    		this.act_mousedown=bact;
        }
        SetAnimaDisable( aa, bact)
    	{
    		if(this.aa_disable==null)this.aa_disable=new AnimaAction();
    		this.aa_disable.copyfrom(aa);
    		this.act_disable=bact;
        }
        Move( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    		
        }
        ProcTouch( msg, x, y)
    	{
    		if(this.iFingerLocker!=-1 && this.iFingerLocker!=TouchManager.iFingerId)return false;
    		
    		if(!this.bVisible)return false;
    		if(this.bDisable)return false;
    		
    		if(msg==3)this.iFingerLocker=-1;
    		if(!this.bMoveIn(x,y))
    		{
    			this.iFingerLocker=-1;
    			this.bMouseDown=false;
    			return false;
    		}
    		switch(msg)
    		{
    		case 1://down
    			this.iFingerLocker=TouchManager.iFingerId;
    			this.bMouseDown=true;
    			break;
    		case 2://move
    			break;
    		case 3://up
    			if(this.bMouseDown)
    			{
    				this.bMouseDown=false;
    				this.bChecked=true;
    			}
    			this.iFingerLocker=-1;
    			break;
    		}
    		return true;
        }
        bCheck()
    	{
    		if(this.bChecked)
    		{
    			this.bChecked=false;
    			return true;
    		}
    		return false;
        }
        bMoveIn( x, y)
    	{
    		this.bMouseIn=false;
    		if(this.bCheckByRect1)
    		{
    			if(x>=this.iCheckX && x<=this.iCheckX+this.iCheckW && y>=this.iCheckY && y<=this.iCheckY+this.iCheckH)this.bMouseIn=true;
    			else this.bMouseIn=false;
    		}
    		else if(this.bSingleButton || this.bCheckByRect)
    		{
    			if(x>=this.iX && x<=this.iX+this.iW && y>=this.iY && y<=this.iY+this.iH)this.bMouseIn=true;
    			else this.bMouseIn=false;
    		}
    		else
    		{
    //			if(x>=this.iX && x<=this.iX+this.iW && y>=this.iY && y<=this.iY+this.iH)this.bMouseIn=true;
    			if(this.pani.bInAnima(this.aa_normal,this.iX,this.iY,x,y))this.bMouseIn=true;
    			else this.bMouseIn=false;
    		}
    		return this.bMouseIn;
        }
        Draw()
    	{
    		if(this.pani==null)return;
    		if(!this.bVisible)return;
    		while(PublicInterface.gi().bInBound(this.iX,this.iY,this.iW,this.iH))this.iX--;
    		if(this.bDisable)
    		{
    			if(this.bSingleButton)this.pm3f.FillRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0xC0ffffff);
    			else this.pani.DrawAnima_aa(this.iX, this.iY, this.aa_disable);
    		}
    		else if(this.bMouseIn)
    		{
    			if(this.bMouseDown)
    			{
    				if(this.bSingleButton)
    				{
    					this.pm3f.FillRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0x80ffffff);
    					this.pm3f.DrawRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0xffffffff);
    				}
    				else this.pani.DrawAnima_aa(this.iX, this.iY, this.aa_mousedown);
    			}
    			else
    			{
    				if(this.bSingleButton)
    				{
    					this.pm3f.FillRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0x40ffffff);
    					this.pm3f.DrawRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0xffffffff);
    				}
    				else this.pani.DrawAnima_aa(this.iX, this.iY, this.aa_normal);
    			}
    		}
    		else
    		{
    			if(this.bSingleButton)this.pm3f.FillRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0x20ffffff);//0x90305070
    			else this.pani.DrawAnima_aa(this.iX, this.iY,this.aa_normal);
    		}

    		var offx,offy;
    		if(this.bMouseDown)
    		{
    			offx=2;
    			offy=2;
    		}
    		else
    		{
    			offx=0;
    			offy=-2;
    		}
    		if(this.bSingleButton || this.sName.length>0)
    		{
    			var c=this.iNameColor;
    			if(this.bDisable)c=0xff808080;
    			if(this.iNameSize>0)this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2,this.sName,c,this.iNameSize,101,1,1,0,-2,-2);
    			else if(this.iH<=30)this.pm3f.DrawTextEx(this.iX+this.iW/2+offx,this.iY+this.iH/2+offy,this.sName,c,20,101,1,1,0,-2,-2);
    			else if(this.iH<=40)this.pm3f.DrawTextEx(this.iX+this.iW/2+offx,this.iY+this.iH/2+offy,this.sName,c,28,101,1,1,0,-2,-2);
    			else this.pm3f.DrawTextEx(this.iX+this.iW/2+offx,this.iY+this.iH/2+offy,this.sName,c,30,101,1,1,0,-2,-2);
    		}
    //		GmPlay.sop(this.sName+","+this.iX+","+this.iY);
    	}
    }

    class XCheckBox
    {
        constructor(ani)
        {
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		this.bTrue=false;
    		this.sDetail="";
    		this.bInited=false;
        }
        InitBox( an)
    	{
    		this.pani.InitAnimaWithName(an,GmPlay$1.aaa);
    		this.aa_true=new AnimaAction();
    		this.aa_false=new AnimaAction();
    		GmPlay$1.aaa.iFrame=0;this.aa_true.copyfrom(GmPlay$1.aaa);
    		GmPlay$1.aaa.iFrame=1;this.aa_false.copyfrom(GmPlay$1.aaa);
    		this.bInited=true;
        }
        Move( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    	}
    	Draw()
    	{
    		if(this.bInited)
    		{
    			if(this.bTrue)this.pani.DrawAnima_aa(this.iX, this.iY, this.aa_true);
    			else this.pani.DrawAnima_aa(this.iX, this.iY, this.aa_false);
    		}
    		else
    		{
    			this.pm3f.DrawRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0xffffffff);
    			if(this.bTrue)this.pm3f.FillRect_2D(this.iX+2,this.iY+2,this.iX+this.iW-4,this.iY+this.iH-4,0xffffffff);
    		}

    		this.pm3f.DrawTextEx(this.iX+this.iW+3,this.iY+(this.iH-30)/2,this.sDetail,0xff003e57,30,101,1,1,0,0,0);
    //		this.pm3f.DrawText(this.iX+this.iW+3, this.iY+(this.iH-30)/2, this.sDetail, 0xffffffff);
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.bInited)
    		{
    			if(this.pani.bInAnima(this.aa_true,this.iX,this.iY,x,y))
    			{
    				if(msg==TouchManager.TOUCH_UP)this.bTrue=!this.bTrue;
    				return true;
    			}
    		}
    		else
    		{
    			if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW+this.sDetail.length*30, this.iH))
    			{
    				if(msg==TouchManager.TOUCH_UP)this.bTrue=!this.bTrue;
    				return true;
    			}
    		}
    		return false;
    	}

    	checkStatus(){
    		return this.bTrue
    	}
    }

    class _VERTEX
    {
        constructor()
        {
            this.x=0;
            this.y=0;
            this.z=0;
        }
        copyfrom( v)
    	{
    		x=v.x;
    		y=v.y;
    		z=v.z;
    	}
    	toString()
    	{
    		return "x="+x+",y="+y+",z="+z;
    	}
    	To( tx, ty, tz)
    	{
    		x=tx;
    		y=ty;
    		z=tz;
    	}
    	Move( v)
    	{
    		x+=v.x;
    		y+=v.y;
    		z+=v.z;
    	}
    	Move( mx, my, mz)
    	{
    		x+=mx;
    		y+=my;
    		z+=mz;
    	}

    	scale( s)
    	{
    		x*=s;
    		y*=s;
    		z*=s;
    	}
    	Rotate( c, jd)
    	{
    		jd=(jd*Math.PI/180);
    		var l, tjd;
    		switch(c)
    		{
    			case '0'://x
    			case 'x':
    			case 'X':
    				l=(Math.sqrt(y*y+z*z));
    				if(y==0)y=0.0000001;
    				tjd=(Math.atan(z/y));
    				if(y<0)tjd+=(Math.PI);
    				tjd+=jd;
    				z= (Math.sin(tjd)*l);
    				y= (Math.cos(tjd)*l);
    				break;
    			case '1'://y
    			case 'y':
    			case 'Y':
    				l=(Math.sqrt(z*z+x*x));
    				if(x==0)x=0.0000001;
    				tjd=(Math.atan(z/x));
    				if(x<0)tjd+=(Math.PI);
    				tjd+=jd;
    				z= (Math.sin(tjd)*l);
    				x= (Math.cos(tjd)*l);
    				break;
    			case '2'://z
    			case 'z':
    			case 'Z':
    				l=(Math.sqrt(y*y+x*x));
    				if(x==0)x=0.0000001;
    				tjd=(Math.atan(y/x));
    				if(x<0)tjd+=(Math.PI);
    				tjd+=jd;
    //				GmPlay.sop("before:"+x+":"+y+":"+z);
    				y= (Math.sin(tjd)*l);
    				x= (Math.cos(tjd)*l);
    //				GmPlay.sop("after:"+x+":"+y+":"+z);
    				break;
    		}
    	}
    	LengthTo( v)
    	{
    		return (Math.sqrt((v.x-x)*(v.x-x)+(v.y-y)*(v.y-y)+(v.z-z)*(v.z-z)));
    	}
    	LengthTo( tx, ty, tz)
    	{
    		return (Math.sqrt((tx-x)*(tx-x)+(ty-y)*(ty-y)+(tz-z)*(tz-z)));
    	}
    }

    class _EQUATIONLINE
    {//直线方程
    	constructor()
    	{

    	}
    	/*
    	float a,b,c,d;
    	// /x=ay+b
    	// \y=cz+d
    	//已知2点求直线方程:
    	// a=(x1-x2)/(y1-y2);
    	// b=x1-ay1;
    	// c=(y1-y2)/(z1-z2);
    	// d=y1-cz1;
    	// 已知2直线求交�?	//y=(b2-b1)/(a1-a2);
    	//x=a1y+b1
    	//z=(y-d1)/c1
    	//
    	boolean bFixedx,bFixedy,bFixedz;
    	float x,y,z;*/
    }

    class M3DMath {

    	constructor()
    	{
    		this.vTmpVertex=new _VERTEX();
    	}
    	GetLineEquation( l, v1, v2)
    	{
    		if(v1.x==v2.x)
    		{
    			l.bFixedx=true;
    			l.x=v1.x;
    		}
    		else l.bFixedx=false;
    		
    		if(v1.y==v2.y)
    		{
    			l.bFixedy=true;
    			l.y=v1.y;
    		}
    		else l.bFixedy=false;
    		
    		if(v1.z==v2.z)
    		{
    			l.bFixedz=true;
    			l.z=v1.z;
    		}
    		else l.bFixedz=false;
    		
    		if(l.bFixedy)l.a=9999999;
    		else l.a=(v1.x-v2.x)/(v1.y-v2.y);
    		l.b=v1.x-l.a*v1.y;
    		if(l.bFixedz)l.c=9999999;
    		else l.c=(v1.y-v2.y)/(v1.z-v2.z);
    		l.d=v1.y-l.c*v1.z;
    		
    		return true;
    	}

    	GetVertexInLine( dv, l, xyz, p)
    	{
    		switch(xyz)
    		{
    			case 0:
    			case 'x':
    			case 'X':
    				if(l.bFixedx)return false;
    				dv.x=p;
    				dv.y=(dv.x-l.b)/l.a;
    				dv.z=(dv.y-l.d)/l.c;
    				break;
    			case 1:
    			case 'y':
    			case 'Y':
    				if(l.bFixedy)return false;
    				dv.y=p;
    				dv.x=l.a*dv.y+l.b;
    				dv.z=(dv.y-l.d)/l.c;
    				break;
    			case 2:
    			case 'z':
    			case 'Z':
    				if(l.bFixedz)return false;
    				dv.z=p;
    				dv.y=l.c*dv.z+l.d;
    				dv.x=l.a*dv.y+l.b;
    				break;
    		}
    		if(l.bFixedx)dv.x=l.x;
    		if(l.bFixedy)dv.y=l.y;
    		if(l.bFixedz)dv.z=l.z;
    		// /x=ay+b
    		// \y=cz+d
    		return true;
    	}

    	GetLineIntersect( dv, l1, l2)
    	{//计算两直线交�?	
    		if(l1.bFixedx)return this.GetVertexInLine(dv,l2,'x',l1.x);
    		if(l1.bFixedy)return this.GetVertexInLine(dv,l2,'y',l1.y);
    		if(l1.bFixedz)return this.GetVertexInLine(dv,l2,'z',l1.z);
    		
    		if(l2.bFixedx)return this.GetVertexInLine(dv,l1,'x',l2.x);
    		if(l2.bFixedy)return this.GetVertexInLine(dv,l1,'y',l2.y);
    		if(l2.bFixedz)return this.GetVertexInLine(dv,l1,'z',l2.z);
    		
    		dv.y=(l2.b-l1.b)/(l1.a-l2.a);
    		dv.x=l1.a+dv.y+l1.b;
    		dv.z=(dv.y-l1.d)/l1.c;
    		
    		return true;
    	}

    	InsertValue(  dv, v1, v2, weight, total)
    	{//两点间根据权重插�?	
    		dv.x=v1.x+(v2.x-v1.x)*weight/total;
    		dv.y=v1.y+(v2.y-v1.y)*weight/total;
    		dv.z=v1.z+(v2.z-v1.z)*weight/total;	
    	}

    	GetAngleZ( d, o)
    	{
    		var tjd;
    		this.vTmpVertex.x=d.x-o.x;
    		this.vTmpVertex.y=d.y-o.y;
    		this.vTmpVertex.z=d.z-o.z;
    //		l= Math.sqrt(this.vTmpVertex.y*this.vTmpVertex.y+this.vTmpVertex.x*this.vTmpVertex.x);
    		tjd= Math.atan(this.vTmpVertex.y/this.vTmpVertex.x);
    		if(this.vTmpVertex.x<0)tjd+=M3DMath.PI;
    		return tjd;
    	}

    	GetVertexDistance( v1, v2)
    	{
    		return Math.sqrt((v1.x-v2.x)*(v1.x-v2.x)+
    					(v1.y-v2.y)*(v1.y-v2.y)+
    					(v1.z-v2.z)*(v1.z-v2.z));
    	}

    	RotationAngle( d, jd, to)
    	{//向目标角度小于半圆的旋转
    		var ft;
    		while(jd>M3DMath.PI*2)jd-=M3DMath.PI*2;
    		while(jd<0)jd+=M3DMath.PI*2;
    		while(to>M3DMath.PI*2)to-=M3DMath.PI*2;
    		while(to<0)to+=M3DMath.PI*2;
    		
    		if(jd>to)
    		{
    			ft=jd-to;
    			if(ft<M3DMath.PI)
    			{
    				if(ft<d)return -ft;
    				else return -d;
    			}
    			else {
    				if(M3DMath.PI*2-ft<d)return ft;
    				else return d;
    			}
    		}
    		else {
    			ft=to-jd;
    			if(ft<M3DMath.PI)
    			{
    				if(ft<d)return ft;
    				else return d;
    			}
    			else {
    				if(M3DMath.PI*2-ft<d)return -ft;
    				else return -d;
    			}
    		}
    	}

    	RotationVertex_2D( v, dv, jd)
    	{
    		var l;
    		var tx,ty,tjd;
    		
    		tx=v.x-dv.x;
    		ty=v.y-dv.y;
    		if(tx==0)tx= 0.0000001;
    		tjd=Math.atan(ty/tx);
    		if(tx<0)tjd+=M3DMath.PI;
    		tjd=tjd+M3DMath.PI*jd/180;//弧度
    		l=Math.sqrt(tx*tx+ty*ty);
    		v.x=Math.cos(tjd)*l+dv.x;
    		v.y=Math.sin(tjd)*l+dv.y;
    	}
    	
    	GetAngleXY( d, o)
    	{//弧度
    		var tx,ty,tjd;
    		
    		tx=d.x-o.x;
    		ty=d.y-o.y;
    		if(tx==0)tx=(0.0000001);
    		tjd=(Math.atan(ty / tx));
    		if(tx<0)tjd+=(M3DMath.PI);

    		return (tjd*180/M3DMath.PI);
    	}
    	GetAngleXY( dx, dy, ox, oy)
    	{//返回角度制
    		var tx,ty,tjd;
    		
    		tx=dx-ox;
    		ty=dy-oy;
    		if(tx==0)tx=(0.0000001);
    		tjd=(Math.atan(ty/tx));
    		if(tx<0)tjd+=(M3DMath.PI);

    		return (tjd*180/M3DMath.PI);
    	}
    	

    }
    M3DMath.PI= 3.1415926;
    M3DMath.m=new M3DMath();


    M3DMath.GetAngleXZ=function( o, d)
    {//弧度
    	var tx,tz,tjd;
    	
    	tx=o.x-d.x;
    	tz=o.z-d.z;
    	if(tx==0)tx=0.0000001;
    	tjd=(Math.atan(tz / tx));
    	if(tx<0)tjd+=(M3DMath.PI);
    	if(tjd<0)tjd+=M3DMath.PI*2;

    	return tjd*180/M3DMath.PI;
    };
    M3DMath.GetAngleY=function( o, d)
    {
    	var l,tjd;
    	l= o.LengthTo(d);
    	if(l==0)l=0.0000001;
    	tjd= Math.asin((o.y-d.y)/l);
    //		if(this.vTmpVertex.x<0)tjd+=M3DMath.PI;
    	return tjd*180/M3DMath.PI;
    };

    M3DMath.xmax=function( f1, f2)
    {
    	if(f1>f2)return f1;
    	return f2;
    };
    M3DMath.xmin=function( f1, f2)
    {
    	if(f1<f2)return f1;
    	return f2;
    };
    M3DMath.intersect=function( uax, uay, ubx, uby, vax, vay, vbx, vby)
     {
    	 return (((uax>ubx?uax:ubx)>=(vax<vbx?vax:vbx))&&
    			 ((vax>vbx?vax:vbx)>=(uax<ubx?uax:ubx))&&
    			 ((uay>uby?uay:uby)>=(vay<vby?vay:vby))&&
    			 ((vay>vby?vay:vby)>=(uay<uby?uay:uby))&&
    			 ( M3DMath.multiply(vax,vay,ubx,uby,uax,uay)* M3DMath.multiply(ubx,uby,vbx,vby,uax,uay)>=0)&&
    			 ( M3DMath.multiply(uax,uay,vbx,vby,vax,vay)* M3DMath.multiply(vbx,vby,ubx,uby,vax,vay)>=0));
     };
     M3DMath.multiply=function( p1x, p1y,
    		 p2x, p2y,
    		 p0x, p0y)
     {
    	 return((p1x-p0x)*(p2y-p0y)-(p2x-p0x)*(p1y-p0y));    
     };

    class ANIMALEVEL
    {
    //	int iX,iY;
    //	short sourceId;
    //	String sName;
    //	AnimaAction aa;
    	constructor() {
    		this.sName="";
    		this.aa=new AnimaAction();
    	}
    }

    class COLLPATH
    {
    //	public int iPathCount;
    //	public int path;
    	constructor( pc)
    	{
            this.iPathCount=pc;
            this.path=new Array(pc);
            for(var i=0;i<pc;i++)this.path[i]=new Int32Array(2);
    		//this.path=new Int32Array(pc)(2);//
    	}
    }

    class MapData
    {/*
    	public int iMapWidth,iMapHeight;
    	public int iGroundSourceId;
    	int iBCW,iBCH;
    	public String sMapName;
    	public String sMapDetail;
    	public int iMapFlag;
    	
    	short cutlevel;
    	ANIMALEVEL animalevel;
    	
    	
    	public COLLPATH pps;*/
    	constructor()
    	{
    		this.pps=new COLLPATH(MapData.MAXPATHCOUNT);
    	}
    	 InitCutLevel()
    	{
    		var i,j,k;
    		this.cutlevel=null;
            this.animalevel=null;
            
            this.cutlevel=new Array(3);
            this.animalevel=new Array(3);
            for(i=0;i<3;i++)
            {
                this.cutlevel[i]=new Array(this.iBCH);
                this.animalevel[i]=new ANIMALEVEL(256);
                for(j=0;j<this.iBCH;j++)
                {
                    this.cutlevel[i][j]=new Array(this.iBCW);
                    for(k=0;k<this.iBCW;k++)
                    {
                        this.cutlevel[i][j][k]=new Int16Array(2);
                    }
                }
            }
    //		this.cutlevel=new short(3)(this.iBCH)(this.iBCW)(2);//
    //		this.animalevel=new ANIMALEVEL(3)(256);//
    		for(i=0;i<3;i++)
    		{
    			for(j=0;j<this.iBCH;j++)
    			{
    				for(k=0;k<this.iBCW;k++)
    				{
    					this.cutlevel[i][j][k][0]=-1;
    				}
    			}
    			for(j=0;j<256;j++)this.animalevel[i][j]=null;
    		}
    		
    		for(i=0;i<MapData.MAXPATHCOUNT;i++)
    		{
    			this.pps[i]=null;
    		}
    	}
    	 bCanMove( x, y, dx, dy)
    	{
    		var i,j;
    		for(i=0;i<MapData.MAXPATHCOUNT;i++)
    		{
    			if(this.pps[i]!=null)
    			{
    				for(j=1;j<this.pps[i].iPathCount;j++)
    				{
    					if(MapData.llcollision_ai(x,y,dx,dy,
    						this.pps[i].path[j-1][0],this.pps[i].path[j-1][1],
    						this.pps[i].path[j][0],this.pps[i].path[j][1]))
    					{//产生碰撞
    						return false;
    					}
    				}
    			}
    		}
    		return true;
        }
    }
    MapData.bInNumber=function( num, n1, n2)
    	{
    		if(n1<n2)
    		{
    			if(n1<=num && num<=n2)return true;
    		}
    		else
    		{
    			if(n1>=num && num>=n2)return true;
    		}
    		return false;
    	};
        MapData. lJx;//碰撞点
    	MapData. lJy;
    	MapData. iJx;//碰撞点
    	MapData. iJy;
    	MapData. fJx;
    	MapData. fJy;
        MapData. iD1,
        MapData.iD2;//点到直线距离
    	//随机数序列按顺序成为坐标后的效果
    	MapData.llcollision_ext=function( x1, y1, x2, y2, x3, y3, x4, y4)
    	{
    		var k1;
    		var b1;

    		var k2;
    		var b2;
    		
    //		float k3,b3;

    		if(x1==x2)k1=0;
    		else if(y1==y2)k1=0;
    		else k1=1.0*(y2-y1)/(x2-x1);
    		b1=1.0*y1-k1*x1;

    		if(x3==x4)k2=0;
    		else if(y3==y4)k2=0;
    		else k2=1.0*(y4-y3)/(x4-x3);
    		b2=1.0*y3-k2*x3;

    		if(x1==x2)
    		{//平行于y轴斜率不存在
    			if(x3==x4)
    			{
    				if(x1==x3)
    				{//在同一平行于y轴的直线上
    					MapData.fJx=x1;
    					if((y1>=y3 && y1<=y4) || (y1>=y4 && y1<=y3))
    					{
    						MapData.fJy=y1;
    						return true;
    					}
    					if((y2>=y3 && y2<=y4) || (y2>=y4 && y2<=y3))
    					{
    						MapData.fJy=y2;
    						return true;
    					}
    					if((y3>=y1 && y3<=y2) || (y3>=y1 && y3<=y2))
    					{
    						MapData.fJy=y3;
    						return true;
    					}
    					if((y4>=y1 && y4<=y2) || (y4>=y1 && y4<=y2))
    					{
    						MapData.fJy=y4;
    						return true;
    					}
    					return false;
    				}
    				return false;
    			}
    			///x=x1
    			MapData.fJx=x1;
    			MapData.fJy=k2*(MapData.fJx)+b2;
    		}
    		else if(x3==x4)
    		{//平行于y轴斜率不存在
    			MapData.fJx=x3;
    			MapData.fJy=k1*(MapData.fJx)+b1;

    //			if((y1>=y3 && y1<=y4) || (y1>=y4 && y1<=y3))
    //			{
    //				iD1=x1>x3?x1-x3:x3-x1;
    //				if(iD1<10)return true;
    //			}
    //			if((y2>=y3 && y2<=y4) || (y2>=y4 && y2<=y3))
    //			{
    //				iD2=x2>x3?x2-x3:x3-x2;
    //				if(iD2<10)return true;
    //			}
    		}
    		else
    		{
    //			k3=1.0f/k2;//垂直于直线2
    //			b3=1.0f*y1-k3*x1;//经过点1
    //			//和直线2交点，求垂足
    //			fJx=-(b3-b2)/(k3-k2);
    //			fJy=k3*(fJx)+b3;
    //			//如果垂足在直线2上，求距离
    //			if((fJy>=y3 && fJy<=y4) || (fJy>=y4 && fJy<=y3))
    //			{
    //				iD1=XDefine.llength(fJx, fJy, x1, y1);
    //				if(iD1<10)return true;
    //			}
    //			
    //			b3=1.0f*y2-k3*x2;//经过点2
    //			//和直线2交点，求垂足
    //			fJx=-(b3-b2)/(k3-k2);
    //			fJy=k3*(fJx)+b3;
    //			//如果垂足在直线2上，求距离
    //			if((fJy>=y3 && fJy<=y4) || (fJy>=y4 && fJy<=y3))
    //			{
    //				iD1=XDefine.llength(fJx, fJy, x2, y2);
    //				if(iD2<10)return true;
    //			}
    			
    MapData.fJx=-(b1-b2)/(k1-k2);
    MapData.fJy=k1*(MapData.fJx)+b1;
    		}

    		if(MapData.fJx<x1 && MapData.fJx<x2)return false;
    		if(MapData.fJx<x3 && MapData.fJx<x4)return false;
    		if(MapData.fJx>x1 && MapData.fJx>x2)return false;
    		if(MapData.fJx>x3 && MapData.fJx>x4)return false;
    		if(MapData.fJy<y1 && MapData.fJy<y2)return false;
    		if(MapData.fJy<y3 && MapData.fJy<y4)return false;
    		if(MapData.fJy>y1 && MapData.fJy>y2)return false;
    		if(MapData.fJy>y3 && MapData.fJy>y4)return false;

    		return true;
    	};
    	 MapData.llcollision_ai=function( ax, ay, bx, by, cx, cy, dx, dy)
    	{
    		var result=M3DMath.intersect(ax, ay, bx, by, cx, cy, dx, dy);
    		if(!result)return false;
    		//求交点
    		var area_abc = (ax - cx) * (by - cy) - (ay - cy) * (bx - cx);  
    		var area_abd = (ax - dx) * (by - dy) - (ay - dy) * (bx - dx);   
    		var area_cda = (cx - ax) * (dy - ay) - (cy - ay) * (dx - ax);  
    //		long area_cdb = area_cda + area_abc - area_abd ;  
    		var t = 1.0*area_cda / ( area_abd- area_abc );  
    		MapData.iJx=  parseInt(t*(bx - ax)+ax);
    		MapData.iJy=  parseInt(t*(by - ay)+ay);
    		return true;
    	};
    	MapData. llcollision_ai1=function( ax, ay, bx, by, cx, cy, dx, dy)
    	{
    		// 三角形abc 面积的2倍  
    		var area_abc = (ax - cx) * (by - cy) - (ay - cy) * (bx - cx);  
    		 // 三角形abd 面积的2倍  
    		var area_abd = (ax - dx) * (by - dy) - (ay - dy) * (bx - dx);   
    		// 面积符号相同则两点在线段同侧,不相交 (对点在线段上的情况,本例当作不相交处理);  
    //		if ( area_abc*area_abd>0 )return false;  
    		if ( (area_abc>0 && area_abd>0) ||
    				(area_abc<0 && area_abd<0))return false;  
    		
    		// 三角形cda 面积的2倍  
    		var area_cda = (cx - ax) * (dy - ay) - (cy - ay) * (dx - ax);  
    		// 三角形cdb 面积的2倍  
    		// 注意: 这里有一个小优化.不需要再用公式计算面积,而是通过已知的三个面积加减得出.  
    		var area_cdb = area_cda + area_abc - area_abd ;  
    //		if (  area_cda * area_cdb > 0 )return false;
    		if (  (area_cda>0 && area_cdb>0) ||
    				(area_cda<0 && area_cdb<0))return false;
    		
    		//计算交点坐标 
    //		GmPlay.sop("abd="+area_abd+",abc="+area_abc+",cda="+area_cda+",area_cdb="+area_cdb+"cda*cdd="+area_cda * area_cdb);
    		var t = 1.0*area_cda / ( area_abd- area_abc );  
    		MapData.iJx=  parseInt(t*(bx - ax)+ax);
    		MapData.iJy=  parseInt(t*(by - ay)+ay);
    //		GmPlay.sop("("+ax+","+ay+","+bx+","+by+")");
    //		GmPlay.sop("("+cx+","+cy+","+dx+","+dy+")t="+t+",jx="+iJx+",jy="+iJy);
    		return true;
    	};
    	MapData.llcollision=function( x1, y1, x2, y2, x3, y3, x4, y4)
    	{
    		var b=llcollision_ext(x1,y1,x2,y2,x3,y3,x4,y4);
    		if(b)
    		{
    			MapData.iJx=parseInt(MapData.fJx);
    			MapData.iJy=parseInt(MapData.fJy);
    		}
    		return b;
    //		boolean b=llcollision_(x1*10,y1*10,x2*10,y2*10,x3*10,y3*10,x4*10,y4*10);
    //		if(b)
    //		{
    //			iJx= (lJx/10);
    //			iJy= (lJy/10);
    //		}
    //		return b;
    	};
    	MapData.llcollision_=function( x1, y1, x2, y2, x3, y3, x4, y4)
    	{
    		var x,y,k;//交点
    		if(x1==x2)
    		{
    			if(x3==x4)
    			{
    				if(x1==x3)
    				{
    					if(bInNumber(y1,y3,y4) || bInNumber(y2,y3,y4))
    					{
    						MapData.lJx=x1;
    						MapData.lJy=y1;
    						return true;
    					}
    				}
    				return false;
    			}
    			if(y3==y4)
    			{
    				if(!MapData.bInNumber(x1,x3,x4) || !MapData.bInNumber(y3,y1,y2))return false;
    				MapData.lJx=x1;
    				MapData.lJy=y3;
    				return true;
    			}
    			if(!MapData.bInNumber(x1,x3,x4))return false;
    			x=x1;
    //			k=(y3-y4)/(x3-x4);
    //			b=y3-k*x3;
    //			y=kx+b;
    //			y=k*x+y3-k*x3;
    //			y=(x-x3)*k+y3;
    			y=(x-x3)*(y3-y4)/(x3-x4)+y3;
    			if(!bInNumber(y,y1,y2))return false;
    			if(!bInNumber(y,y3,y4))return false;
    			MapData.lJx=x1;
    			MapData.lJy=y;
    			return true;
    		}
    		if(x3==x4)
    		{
    			if(y1==y2)
    			{
    				if(!MapData.bInNumber(x3,x1,x2) || !MapData.bInNumber(y1,y3,y4))return false;
    				MapData.lJx=x3;
    				MapData.lJy=y1;
    				return true;
    			}
    			if(!MapData.bInNumber(x3,x1,x2))return false;
    			x=x3;
    //			k=(y3-y4)/(x3-x4);
    //			b=y3-k*x3;
    //			y=kx+b;
    //			y=k*x+y3-k*x3;
    //			y=(x-x3)*k+y3;
    			y=(x-x1)*(y1-y2)/(x1-x2)+y1;
    			if(!MapData.bInNumber(y,y1,y2))return false;
    			if(!MapData.bInNumber(y,y3,y4))return false;
    			MapData.lJx=x3;
    			MapData.lJy=y;
    			return true;
    		}
    		if(y1==y2)
    		{
    			if(y3==y4)
    			{
    				if(y1==y3)
    				{
    					MapData.lJx=x1;
    					if(MapData.bInNumber(x1,x3,x4) || MapData.bInNumber(x2,x3,x4))
    					{
    						MapData.lJy=y1;
    						return true;
    					}
    				}
    				return false;
    			}
    			if(!MapData.bInNumber(y1,y3,y4))return false;
    			y=y1;
    //			k=(y3-y4)/(x3-x4);
    //			b=y3-k*x3;
    //			x=(y-b)/k;
    //			x=(y-y3+k*x3)/k;
    //			x=(y-y3)/k+x3;
    			x=(y-y3)*(x3-x4)/(y3-y4)+x3;
    			if(!MapData.bInNumber(x,x1,x2))return false;
    			if(!MapData.bInNumber(x,x3,x4))return false;
    			lJx=x;
    			lJy=y1;
    			return true;
    		}
    		if(y3==y4)
    		{
    			if(!MapData.bInNumber(y3,y1,y2))return false;
    			y=y3;
    //			k=(y3-y4)/(x3-x4);
    //			b=y3-k*x3;
    //			x=(y-b)/k;
    //			x=(y-y3+k*x3)/k;
    //			x=(y-y3)/k+x3;
    			x=(y-y1)*(x1-x2)/(y1-y2)+x1;
    			if(!MapData.bInNumber(x,x1,x2))return false;
    			if(!MapData.bInNumber(x,x3,x4))return false;
    			MapData.lJx=x;
    			MapData.lJy=y3;
    			return true;
    		}
    //		k1=(y1-y2)/(x1-x2);
    //		b1=y1-k1*x1;
    //		k2=(y3-y4)/(x3-x4);
    //		b2=y3-k2*x3;
    //		x=-(b1-b2)/(k1-k2);
    //		x=-(y1-k1*x1-y3+k2*x3)/(k1-k2);
    //		k=(y1-y2)/(x1-x2)-(y3-y4)/(x3-x4)
    		k=((y1-y2)*(x3-x4)-(y3-y4)*(x1-x2));
    		if(k==0)
    		{//斜率相等(平行)
    //			var ty1=y1-x1*(y1-y2)/(x1-x2);
    //			var ty2=y3-x3*(y3-y4)/(x3-x4);
    //			if(ty1==ty2)
    			if(((y1-y3)*(x1-x2)*(x3-x4)+x3*(y3-y4)*(x1-x2)-x1*(y1-y2)*(x3-x4))==0)
    			{//重叠
    				if(MapData.bInNumber(x1,x3,x4))
    				{
    					MapData.lJx=x1;
    					MapData.lJy=y1;
    					return true;
    				}
    				return false;
    			}
    			return false;
    		}
    //		k=k/((x1-x2)*(x3-x4));
    //		x=-(y1-x1*(y1-y2)/(x1-x2)-y3+x3*(y3-y4)/(x3-x4))/(k);
    //		x=-(y1-x1*(y1-y2)/(x1-x2)-y3+x3*(y3-y4)/(x3-x4))*((x1-x2)*(x3-x4))/k;
    		x=-((y1-y3)*(x1-x2)*(x3-x4)-x1*(y1-y2)*(x3-x4)+x3*(y3-y4)*(x1-x2))/k;

    		var modify=20;
    		if((x>x1+modify && x>x2+modify) || (x<x1-modify && x<x2-modify))return false;
    		if((x>x3+modify && x>x4+modify) || (x<x3-modify && x<x4-modify))return false;

    //		y=k1*x+y1-k1*x1;
    //		y=(x-x1)*k1+y1;
    //		y=(x-x1)*(y1-y2)/(x1-x2)+y1;
    		y=(((y1-y3)*(x1-x2)*(x3-x4)-x1*(y1-y2)*(x3-x4)+x3*(y3-y4)*(x1-x2))+x1*k)*(y2-y1)/(k*(x1-x2))+y1;
    //		y=((((y1-y3)*(x1-x2)*(x3-x4)-x1*(y1-y2)*(x3-x4)+x3*(y3-y4)*(x1-x2))+x1*k)*(y2-y1)+y1*k*(x1-x2))/(k*(x1-x2));

    		if((y>y1+modify && y>y2+modify) || (y<y1-modify && y<y2-modify))return false;
    		if((y>y3+modify && y>y4+modify) || (y<y3-modify && y<y4-modify))return false;
    		
    		MapData.lJx=x;
    		MapData.lJy=y;
    		return true;
    	};

        MapData.MAXPATHCOUNT=128;

    class SortAnima
    {
        constructor()
        {
        }
    }
        
    SortAnima.WeapFlag=function(wid)
    {
        if(SortAnima._WEAPSORT==null)
        {
            var i,j;
            SortAnima._WEAPSORT=new Int32Array(512);//
            for(i=0;i<3;i++)
            {
                for(j=0;j<10;j++)
                {
                    SortAnima._WEAPSORT[SortAnima._WEAPID[i][j]]=j;
                }
            }
        }
        return SortAnima._WEAPSORT[wid];
    };
    	SortAnima._WEAPSORT=null;
        SortAnima._WEAPID=[[9,47,48,49,50,51,52,248,290,291],//剑
    		[1,53,54,55,56,57,58,249,292,293],//刀
    		[10,59,60,61,62,63,64,250,294,295]];//枪
            SortAnima._CHANGECOLOR=[
    		["头发","衣服","裙子","鞋子"],//人女
    		["头发","上身","下身"],//人男，全
    		
    		["头发","衣服","手腕","鞋子","尾巴"],//魔女
    		["头发","上身","下身","肩甲"],//魔男
    		
    		["头发","袖子","裙子","鞋子"],//仙女
    		["头发","衣服","盔甲","头饰","披风"]//仙男
    	];
    	SortAnima._CHANGECOLORCOST=[
    		[10,8,8,4],//人女
    		[10,10,10],//人男，全
    		
    		[8,8,4,4,6],//魔女
    		[6,10,6,8],//魔男
    		
    		[8,6,12,4],//仙女
    		[6,6,10,4,4]//仙男
    	];
    	/////1鹿，2狮，3马
    	//_ANIMASORT_MOUNT[2马][1二阶][0站立1跑步][方向][切割]
        SortAnima._ANIMASORT_MOUNT=[
    		[//鹿
    			[
    				[["前","人前","后","人后","武器"],["武器","人右","身体","人左"],["武器","人右","身体","人左","左翅膀"],["武器","人右","身体","人左","左翅膀"],["后","人","武器","前"],["人左","身体","人右","右翅膀","武器"],["人左","身体","人右","右翅膀","武器"],["人左","身体","人右","武器"]],//二阶
    				[["前","人前","后","人后","武器"],["武器","人右","身体","人左"],["武器","人右","身体","人左","左翅膀"],["武器","人右","身体","人左","左翅膀"],["后","人","武器","前"],["人左","身体","人右","右翅膀","武器"],["人左","身体","人右","右翅膀","武器"],["人左","身体","人右","武器"]]
    			],
    			[
    				[["前","人前","后","人后","武器","飘带"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["后","人","武器","前"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"]],//二阶
    				[["前","人前","后","人后","武器","飘带"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["后","人","武器","前"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"]]
    			],
    			[//三阶
    				[["前","人前","后","人后","武器","飘带"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["后","人","武器","前"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"]],//二阶
    				[["前","人前","后","人后","武器","飘带"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["后","人","武器","前"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"]]
    			],
    		],
    		[//狮子
    			[
    				[["前","人前","后","人后","武器"],["武器","人右","身体","人左"],["武器","人右","身体","人左"],["武器","人右","身体","人左"],["后","人","武器","前"],["人左","身体","人右","武器"],["人左","身体","人右","武器"],["人左","身体","人右","武器"]],//二阶
    				[["前","人前","后","人后","武器"],["武器","人右","身体","人左"],["武器","人右","身体","人左"],["武器","人右","身体","人左"],["后","人","武器","前"],["人左","身体","人右","武器"],["人左","身体","人右","武器"],["人左","身体","人右","武器"]]
    			],
    			[
    				[["前","人前","后","人后","武器","飘带"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["后","人","武器","前"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"]],//二阶
    				[["前","人前","后","人后","武器","飘带"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["后","人","武器","前"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"]]
    			],
    			[//三阶
    				[["前","人前","后","人后","武器","飘带"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["后","人","武器","前"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"]],//二阶
    				[["前","人前","后","人后","武器","飘带"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["后","人","武器","前"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"]]
    			],
    		],
    		[//马
    			[
    				[["前","人前","后","人后","武器"],["武器","人右","身体","人左"],["武器","人右","身体","人左"],["武器","人右","身体","人左"],["后","人","武器","前"],["人左","身体","人右","武器"],["人左","身体","人右","武器"],["人左","身体","人右","武器"]],//二阶
    				[["前","人前","后","人后","武器"],["武器","人右","身体","人左"],["武器","人右","身体","人左"],["武器","人右","身体","人左"],["后","人","武器","前"],["人左","身体","人右","武器"],["人左","身体","人右","武器"],["人左","身体","人右","武器"]]
    			],
    			[
    				[["前","人前","后","人后","武器"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["后","人","武器","前"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"]],//二阶
    				[["前","人前","后","人后","武器"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["后","人","武器","前"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"]]
    			],
    			[//三阶
    				[["前","人前","后","人后","武器"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["后","人","武器","前"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"]],//二阶
    				[["前","人前","后","人后","武器"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["武器","右翅膀","人右","身体","人左","左翅膀"],["后","人","武器","前"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"],["左翅膀","人左","身体","人右","右翅膀","武器"]]
    			],
    		],
    	];
    	//[race_sex][动作][方向][图层顺序/长度]
    	SortAnima._ANIMASORT=[
    		[//人女
    			[["人物","武器"],["武器","人物"],["武器","人物"],["武器","人物"],["武器","人物"],["人物","武器"],["人物","武器"],["人物","武器"]],//站立
    			[["武器","人物"],["武器","人物"],["武器","人物"],["武器","人物"],["武器","人物"],["人物","武器"],["人物","武器"],["人物","武器"]],//跑步
    			[[],["人物","武器"],[],[],[],["武器","人物"],[],[]],//战斗站立
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//普通攻击
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//施法
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//防御
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//死亡过程,,,被攻击,,,死亡
    		],
    		[//人男
    			[["人物","武器"],["武器","人物"],["武器","人物"],["武器","人物"],["武器","人物"],["人物","武器"],["人物","武器"],["人物","武器"]],//站立
    			[["武器","人物"],["武器","人物"],["武器","人物"],["武器","人物"],["武器","人物"],["人物","武器"],["人物","武器"],["人物","武器"]],//跑步
    			[[],["人物","武器"],[],[],[],["武器","人物"],[],[]],//战斗站立
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//普通攻击
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//施法
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//防御
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//死亡过程,,,被攻击,,,死亡
    		],
    		[//魔女
    			[["人物","武器"],["武器","人物"],["武器","人物"],["武器","人物"],["武器","人物"],["人物","武器"],["人物","武器"],["人物","武器"]],//站立
    			[["武器","人物"],["武器","人物"],["武器","人物"],["武器","人物"],["武器","人物"],["人物","武器"],["人物","武器"],["人物","武器"]],//跑步
    			[[],["人物","武器"],[],[],[],["武器","人物"],[],[]],//战斗站立
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//普通攻击
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//施法
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//防御
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//死亡过程,,,被攻击,,,死亡
    		],
    		[//魔男
    			[["人物","武器"],["武器","人物"],["武器","人物"],["武器","人物"],["武器","人物"],["人物","武器"],["人物","武器"],["人物","武器"]],//站立
    			[["武器","人物"],["武器","人物"],["武器","人物"],["武器","人物"],["武器","人物"],["人物","武器"],["人物","武器"],["人物","武器"]],//跑步
    			[[],["人物","武器"],[],[],[],["武器","人物"],[],[]],//战斗站立
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//普通攻击
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//施法
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//防御
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//死亡过程,,,被攻击,,,死亡
    		],
    		[//仙女
    			[["人物","武器"],["人物","武器"],["武器","人物"],["武器","人物"],["武器","人物"],["人物","武器"],["人物","武器"],["人物","武器"]],//站立
    			[["人物","武器"],["人物","武器"],["人物","武器"],["武器","人物"],["武器","人物"],["人物","武器"],["人物","武器"],["人物","武器"]],//跑步
    			[[],["人物","武器"],[],[],[],["武器","人物"],[],[]],//战斗站立
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//普通攻击
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//施法
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//防御
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//死亡过程,,,被攻击,,,死亡
    		],
    		[//仙男
    			[["人物","武器"],["人物","武器"],["武器","人物"],["武器","人物"],["武器","人物"],["人物","武器"],["人物","武器"],["人物","武器"]],//站立
    			[["人物","武器"],["人物","武器"],["人物","武器"],["武器","人物"],["武器","人物"],["人物","武器"],["人物","武器"],["人物","武器"]],//跑步
    			[[],["人物","武器"],[],[],[],["武器","人物"],[],[]],//战斗站立
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//普通攻击
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//施法
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//防御
    			[[],["武器","人物"],[],[],[],["人物","武器"],[],[]],//死亡过程,,,被攻击,,,死亡
    		]
    	];

    class ONEBUFFER
    {/*
    	int iLockY;//锚点，用于排序
    	int iGroupId;//组
    	int iX,iY;//实际绘制坐标
    	int iType;//可能有3种情况，0动画,1切片,2文字
    	
    	AnimaAction aa;
    	
    	int iRid_dest_ra;
    	int iBx_type_x2_ratx;
    	int iBy_size_y2_raty;
    	int iBw_color_alpha;
    	int iBh_c2;
    	
    	float sw,sh;

    	String sStr;*/
    	constructor()
    	{
    		this.aa=new AnimaAction();
    		this.sStr="12345";
    	}
    };

    class DrawBuffer {
    	/*
    	int this.ibfp;
    	boolean this.bGroup;
    	int this.igfp;//组
    	ONEBUFFER this.bfs;
    	int this.sort;
    	
    	M3DFast this.xm3f;
    	public static DrawBuffer dbf=new DrawBuffer();
    	*/
    	constructor() {
    		var i;
    		this.xm3f=M3DFast$1.gi();
    		
    		this.bfs=new Array(DrawBuffer.MAXONEBUFFER);//
    		this.sort=new Int32Array(DrawBuffer.MAXONEBUFFER);//
    		for(i=0;i<DrawBuffer.MAXONEBUFFER;i++)
    		{
    			this.bfs[i]=new ONEBUFFER();
    		}
    	}
    	ClearBuffer()
    	{
    		this.ibfp=0;
    		this.igfp=0;
    		this.bGroup=false;
    	}
    	BeginGroup()
    	{
    		this.igfp++;
    		this.bGroup=true;
    	}
    	EndGroup()
    	{
    		this.bGroup=false;
    	}
    	DrawAnima_aa( ly, p, x, y, a)
    	{//最简单pani
    		if(a.pani==null)return;
    		this.bfs[this.ibfp].iLockY=ly;
    		this.bfs[this.ibfp].iX=x;
    		this.bfs[this.ibfp].iY=y;
    		this.bfs[this.ibfp].iType=0;
    		if(this.bGroup)this.bfs[this.ibfp].iGroupId=this.igfp;
    		else this.bfs[this.ibfp].iGroupId=0;

    		this.bfs[this.ibfp].aa.copyfrom(a);

    		this.ibfp++;
    	}
    	DrawImage( x, y, rid, sx, sy, w, h)
    	{
    		this.bfs[this.ibfp].iLockY=y+h;
    		this.bfs[this.ibfp].iX=x;
    		this.bfs[this.ibfp].iY=y;
    		this.bfs[this.ibfp].iType=1;
    		if(this.bGroup)this.bfs[this.ibfp].iGroupId=this.igfp;
    		else this.bfs[this.ibfp].iGroupId=0;

    		this.bfs[this.ibfp].iRid_dest_ra=rid;
    		this.bfs[this.ibfp].iBx_type_x2_ratx=sx;
    		this.bfs[this.ibfp].iBy_size_y2_raty=sy;
    		this.bfs[this.ibfp].iBw_color_alpha=w;
    		this.bfs[this.ibfp].iBh_c2=h;

    		this.ibfp++;
    	}
    	DrawText( ly, dest, x, y, s, c, size)
    	{
    		this.bfs[this.ibfp].iLockY=ly;
    		this.bfs[this.ibfp].iX=x;
    		this.bfs[this.ibfp].iY=y;
    		this.bfs[this.ibfp].iType=2;
    		if(this.bGroup)this.bfs[this.ibfp].iGroupId=this.igfp;
    		else this.bfs[this.ibfp].iGroupId=0;

    		this.bfs[this.ibfp].sStr=s;
    		this.bfs[this.ibfp].iRid_dest_ra=dest;
    		this.bfs[this.ibfp].iBw_color_alpha=c;
    		this.bfs[this.ibfp].iBy_size_y2_raty=size;
    		this.bfs[this.ibfp].iBx_type_x2_ratx=0;

    		this.ibfp++;
    	}
    	DrawText_2( ly, dest, x, y, s, c, size, type, c2)
    	{
    		this.bfs[this.ibfp].iLockY=ly;
    		this.bfs[this.ibfp].iX=x;
    		this.bfs[this.ibfp].iY=y;
    		this.bfs[this.ibfp].iType=2;
    		if(this.bGroup)this.bfs[this.ibfp].iGroupId=this.igfp;
    		else this.bfs[this.ibfp].iGroupId=0;

    		this.bfs[this.ibfp].sStr=s;
    		this.bfs[this.ibfp].iRid_dest_ra=dest;
    		this.bfs[this.ibfp].iBw_color_alpha=c;
    		this.bfs[this.ibfp].iBy_size_y2_raty=size;
    		this.bfs[this.ibfp].iBx_type_x2_ratx=type;
    		this.bfs[this.ibfp].iBh_c2=c2;

    		this.ibfp++;
    	}

    	FillRect( ly, x1, y1, x2, y2, c)
    	{
    		this.bfs[this.ibfp].iLockY=ly;
    		this.bfs[this.ibfp].iX=x1;
    		this.bfs[this.ibfp].iY=y1;
    		this.bfs[this.ibfp].iType=3;
    		if(this.bGroup)this.bfs[this.ibfp].iGroupId=this.igfp;
    		else this.bfs[this.ibfp].iGroupId=0;

    		this.bfs[this.ibfp].iBx_type_x2_ratx=x2;
    		this.bfs[this.ibfp].iBy_size_y2_raty=y2;
    		this.bfs[this.ibfp].iBw_color_alpha=c;

    		this.ibfp++;
    	}
    	DrawAnimaEx( ly, x, y, a, alpha,  sw,  sh,  ra,  ratx,  raty)
    	{
    		if(a.pani==null)return;
    		this.bfs[this.ibfp].iLockY=ly;
    		this.bfs[this.ibfp].iX=x;
    		this.bfs[this.ibfp].iY=y;
    		this.bfs[this.ibfp].iType=4;
    		if(this.bGroup)this.bfs[this.ibfp].iGroupId=this.igfp;
    		else this.bfs[this.ibfp].iGroupId=0;

    		this.bfs[this.ibfp].aa.copyfrom(a);
    		this.bfs[this.ibfp].iBw_color_alpha=alpha;
    		this.bfs[this.ibfp].sw=sw;
    		this.bfs[this.ibfp].sh=sh;
    		this.bfs[this.ibfp].iRid_dest_ra=ra;
    		this.bfs[this.ibfp].iBx_type_x2_ratx=ratx;
    		this.bfs[this.ibfp].iBy_size_y2_raty=raty;

    		this.ibfp++;
    	}

    	SortAndDraw()
    	{
    		var i,j,k,m;
    		k=0;
    		this.bfs[this.ibfp].iGroupId=0;
    		for(i=0;i<this.ibfp;i++)
    		{
    			this.sort[k]=i;
    			k++;
    //			this.sort[i][1]=this.bfs[i].iLockY;
    			if(this.bfs[i].iGroupId>0)
    			{
    				j=this.bfs[i].iGroupId;
    				while(this.bfs[i+1].iGroupId==j)i++;
    			}
    		}
    		for(i=0;i<k-1;i++)
    		{
    			for(j=i+1;j<k;j++)
    			{
    				if(this.bfs[this.sort[i]].iLockY>this.bfs[this.sort[j]].iLockY)
    				{
    					m=this.sort[i];
    					this.sort[i]=this.sort[j];
    					this.sort[j]=m;
    				}
    			}
    		}
    		var pbf;
    		for(i=0;i<k;i++)
    		{
    			j=this.sort[i];
    			m=this.bfs[j].iGroupId;
    			while(true)
    			{
    				pbf=this.bfs[j];
    				switch(this.bfs[j].iType)
    				{
    				case 0://动画
    					this.bfs[j].aa.Draw(this.bfs[j].iX,this.bfs[j].iY);
    					// this.xm3f.DrawTextEx(this.bfs[j].iX,this.bfs[j].iY,"%",0xffffffff,30,101,1,1,0,-3,-3);
    					break;
    				case 1://1切片
    					this.xm3f.DrawImageEx(0,this.bfs[j].iX,this.bfs[j].iY,this.bfs[j].iRid_dest_ra,this.bfs[j].iBx_type_x2_ratx,this.bfs[j].iBy_size_y2_raty,this.bfs[j].iBw_color_alpha,this.bfs[j].iBh_c2,100,1,1,0,0,0);
    					break;
    				case 2://2文字
    //					this.xm3f.DrawText(this.bfs[j].iX,this.bfs[j].iY,pbf2.sStr,pbf2.color);
    					if(this.bfs[j].iBx_type_x2_ratx==0)
    					{
    						if(pbf.iRid_dest_ra==0)this.xm3f.DrawTextEx(this.bfs[j].iX,this.bfs[j].iY,pbf.sStr,pbf.iBw_color_alpha,pbf.iBy_size_y2_raty,101,1,1,0,-1,-1);
    						else if(pbf.iRid_dest_ra==1)this.xm3f.DrawTextEx(this.bfs[j].iX,this.bfs[j].iY,pbf.sStr,pbf.iBw_color_alpha,pbf.iBy_size_y2_raty,101,1,1,0,-2,-2);
    						else this.xm3f.DrawTextEx(this.bfs[j].iX,this.bfs[j].iY,pbf.sStr,pbf.iBw_color_alpha,pbf.iBy_size_y2_raty,101,1,1,0,-3,-3);
    					}
    					else
    					{
    						if(pbf.iRid_dest_ra==0)this.xm3f.DrawText_2(this.bfs[j].iX,this.bfs[j].iY,pbf.sStr,pbf.iBw_color_alpha,pbf.iBy_size_y2_raty,101,1,1,0,-1,-1,pbf.iBx_type_x2_ratx,pbf.iBh_c2);
    						else if(pbf.iRid_dest_ra==1)this.xm3f.DrawText_2(this.bfs[j].iX,this.bfs[j].iY,pbf.sStr,pbf.iBw_color_alpha,pbf.iBy_size_y2_raty,101,1,1,0,-2,-2,pbf.iBx_type_x2_ratx,pbf.iBh_c2);
    						else this.xm3f.DrawText_2(this.bfs[j].iX,this.bfs[j].iY,pbf.sStr,pbf.iBw_color_alpha,pbf.iBy_size_y2_raty,101,1,1,0,-3,-3,pbf.iBx_type_x2_ratx,pbf.iBh_c2);
    					}
    					break;
    				case 3://fill
    					this.xm3f.FillRect_2D(this.bfs[j].iX, this.bfs[j].iY, pbf.iBx_type_x2_ratx, pbf.iBy_size_y2_raty, pbf.iBw_color_alpha);
    					break;
    				case 4://drawex
    					pbf.aa.DrawEx(this.bfs[j].iX,this.bfs[j].iY, pbf.iBw_color_alpha, pbf.sw, pbf.sh, pbf.iRid_dest_ra, pbf.iBx_type_x2_ratx, pbf.iBy_size_y2_raty);
    					break;
    				}
    				if(m>0)
    				{
    					if(this.bfs[j+1].iGroupId==m)
    					{
    						j++;
    						continue;
    					}
    				}
    				break;
    			}
    		}
    	}
    }

    DrawBuffer.MAXONEBUFFER=1024;

    DrawBuffer.dbf=null;
    DrawBuffer.gi=function()
    {
    	if(DrawBuffer.dbf==null)DrawBuffer.dbf=new DrawBuffer();
    	return DrawBuffer.dbf;
    };

    class _FIREWORKS
    {/*
    	public boolean bUseing;
    	public int iX,iY;
    	public int iDelay,iLoop;
    	public AnimaAction aa;
    	public int iMode;
    	public int iCs1,iCs2;
    	public int iAlpha;*/
    	
    	constructor()
    	{
    		this.bUseing=false;
    		this.aa=new AnimaAction();
    	}
    };

    class FireworksEffect {

    	constructor()
    	{
    		var i;
    		this.flist=new Array(FireworksEffect.MAXFIREWORKS);
    		for(i=0;i<FireworksEffect.MAXFIREWORKS;i++)
    		{
    			this.flist[i]=new _FIREWORKS();
    		}
    		this.iShadow=0;
    	}
    	Draw()
    	{
    		var bShadow=false;
    		var i,x,y;
    		for(i=0;i<FireworksEffect.MAXFIREWORKS;i++)
    		{
    			if(this.flist[i].bUseing)
    			{
    				if(this.flist[i].iDelay>0)
    				{
    					this.flist[i].iDelay--;
    					continue;
    				}
    				x=MapManager.gi().iOffx+this.flist[i].iX;
    				y=MapManager.gi().iOffy+this.flist[i].iY;
    				if(!bShadow && x>0 && y>0 && x<GmConfig$1.SCRW && y<GmConfig$1.SCRH)
    				{//
    					M3DFast$1.gi().FillRect_2D(0, 0, GmConfig$1.SCRW, GmConfig$1.SCRH, this.iShadow<<24);
    					bShadow=true;
    				}
    				switch(this.flist[i].iMode)
    				{
    				case 0://烟花，原地播放
    					this.flist[i].aa.Draw(x,y);
    					break;
    				case 1://孔明灯，向上飘
    					if(this.flist[i].iLoop<=3)this.flist[i].iAlpha-=1;
    					this.flist[i].aa.DrawEx(x, y, this.flist[i].iAlpha, 1, 1, 0, 0, 0);
    					this.flist[i].iX=this.flist[i].iX+this.flist[i].iCs1-1000;
    					this.flist[i].iY=this.flist[i].iY+this.flist[i].iCs2-1000;
    					break;
    				case 2://放大倍数后显示
    					this.flist[i].aa.DrawEx(x, y, 101, 0.1*this.flist[i].iCs1, 0.1*this.flist[i].iCs2, 0, 0, 0);
    					break;
    				}
    				
    				if(this.flist[i].aa.NextFrame())
    				{
    					if(this.flist[i].iLoop>1)this.flist[i].iLoop--;
    					else this.flist[i].bUseing=false;
    				}
    			}
    		}
    		if(bShadow)
    		{
    			if(this.iShadow<100)this.iShadow+=10;
    		}
    		else
    		{
    			if(this.iShadow>0)
    			{
    				M3DFast$1.gi().FillRect_2D(0, 0, GmConfig$1.SCRW, GmConfig$1.SCRH, this.iShadow<<24);
    				this.iShadow-=10;
    			}
    		}
    	}
    	
    	AddFireworks( x, y, type, na, delay, loop, mode, cs1, cs2)
    	{
    		var i;
    		for(i=0;i<FireworksEffect.MAXFIREWORKS;i++)
    		{
    			if(!this.flist[i].bUseing)
    			{
    				this.flist[i].aa.iAnimaPoint=0;
    				if(type==0)GmPlay$1.xani_skill.InitAnimaWithName(na, this.flist[i].aa);
    				else if(type==1)GmPlay$1.xani_effect.InitAnimaWithName(na, this.flist[i].aa);
    				else if(type>=10 && type<=12)GmPlay$1.xani_skills[type-10].InitAnimaWithName(na, this.flist[i].aa);
    				GmPlay$1.sop(",,,"+na+",,,"+this.flist[i].aa.iAnimaPoint);
    				if(this.flist[i].aa.iAnimaPoint==0)return;
    				this.flist[i].iX=x;
    				this.flist[i].iY=y;
    				this.flist[i].iDelay=delay;
    				this.flist[i].iLoop=loop;
    				this.flist[i].iMode=mode;
    				this.flist[i].iCs1=cs1;
    				this.flist[i].iCs2=cs2;
    				this.flist[i].iAlpha=101;
    				this.flist[i].bUseing=true;
    				return;
    			}
    		}
    	}

    }
    FireworksEffect.MAXFIREWORKS=64;

    FireworksEffect.fe=new FireworksEffect();

    FireworksEffect.DrawAura=function( iaura, x, y, pdb, offy)
    {//光环
    //	XDefine.sop(iaura,x,y,pdb,offy);
    	if(iaura<0 || iaura>=128)return;
    	
    	if(pdb==null)
    	{
    		GmPlay$1.aa_auras[iaura].Draw(x,y);
    	}
    	else
    	{
    		pdb.DrawAnima_aa(offy, null, x, y, GmPlay$1.aa_auras[iaura]);
    	}
    };

    class DrawMode$1 {
    	constructor()
    	{
    	}
    }
    DrawMode$1.aa_tmp=new AnimaAction();
    DrawMode$1.dm=new DrawMode$1();
    	DrawMode$1.ui3_frame1=null;
    	DrawMode$1.ui3_frame2=null;
    	DrawMode$1.ui3_frame3=null;
    	DrawMode$1.ui3_frame4=null;
    	DrawMode$1.ui3_frame5=null;
    	DrawMode$1.ui3_text2=null;
    	
    	DrawMode$1.ui4_frame1=null;
    	DrawMode$1.ui4_frame2=null;
    	
     DrawMode$1.ui4_FrameUp=function( x, y, w)
    	{//上方红框
    		if(DrawMode$1.ui4_frame1==null)
    		{
    			DrawMode$1.ui4_frame1=GmPlay$1.xani_ui4.InitAnimaWithName("对话框上", null);
    		}
    		DrawMode$1.ui4_frame1.iFrame=1;DrawMode$1.ui4_frame1.DrawEx(x+40, y, 101, 1.0*(w-80)/40, 1, 0, 0, 0);
    		DrawMode$1.ui4_frame1.iFrame=0;DrawMode$1.ui4_frame1.Draw(x, y);
    		DrawMode$1.ui4_frame1.iFrame=2;DrawMode$1.ui4_frame1.Draw(x+w-40, y);
    	};
     DrawMode$1.ui4_FrameDown=function( x, y, w, h)
    	{//下方红框
    		if(DrawMode$1.ui4_frame2==null)
    		{
    			DrawMode$1.ui4_frame2=GmPlay$1.xani_ui4.InitAnimaWithName("对话框下", null);
    		}
    		DrawMode$1.ui4_frame2.iFrame=8;DrawMode$1.ui4_frame2.DrawEx(x+40, y+40, 101, 1.0*(w-80)/40, 1.0*(h-80)/40, 0, 0, 0);
    		
    		DrawMode$1.ui4_frame2.iFrame=0;DrawMode$1.ui4_frame2.Draw(x, y);
    		DrawMode$1.ui4_frame2.iFrame=2;DrawMode$1.ui4_frame2.Draw(x+w-40, y);
    		DrawMode$1.ui4_frame2.iFrame=4;DrawMode$1.ui4_frame2.Draw(x+w-40, y+h-40);
    		DrawMode$1.ui4_frame2.iFrame=6;DrawMode$1.ui4_frame2.Draw(x, y+h-40);
    		
    		DrawMode$1.ui4_frame2.iFrame=1;DrawMode$1.ui4_frame2.DrawEx(x+40, y, 101, 1.0*(w-80)/40, 1, 0, 0, 0);
    		DrawMode$1.ui4_frame2.iFrame=5;DrawMode$1.ui4_frame2.DrawEx(x+40, y+h-40, 101, 1.0*(w-80)/40, 1, 0, 0, 0);
    		
    		DrawMode$1.ui4_frame2.iFrame=3;DrawMode$1.ui4_frame2.DrawEx(x+w-40, y+40, 101, 1,1.0*(h-80)/40, 0, 0, 0);
    		DrawMode$1.ui4_frame2.iFrame=7;DrawMode$1.ui4_frame2.DrawEx(x, y+40, 101, 1,1.0*(h-80)/40, 0, 0, 0);
    	};
    	
    	//自定义大框
    	DrawMode$1.ui3_DefineFrame=function( x, y, w, h)
    	{
    		if(DrawMode$1.ui3_frame5==null)
    		{
    			DrawMode$1.ui3_frame5=GmPlay$1.xani_ui3.InitAnimaWithName("基本框5", null);
    		}
    		
    		M3DFast$1.gi().SetViewClip(x+5, y+5, x+w-5, y+h-5);
    		GmPlay$1.xani_ui3.DrawAnima(x+w/2-800/2, y+h/2-480/2, "基本大框",0);
    		M3DFast$1.gi().NoClip();
    		DrawMode$1.ui3_frame5.iFrame=0;DrawMode$1.ui3_frame5.DrawEx(x, y, 101, 1, 1, 0, 0, 0);
    		
    		DrawMode$1.ui3_frame5.iFrame=2;DrawMode$1.ui3_frame5.DrawEx(x+w-50, y, 101, 1, 1, 0, 0, 0);
    		
    		DrawMode$1.ui3_frame5.iFrame=4;DrawMode$1.ui3_frame5.DrawEx(x+w-50, y+h-50, 101, 1, 1, 0, 0, 0);
    		
    		DrawMode$1.ui3_frame5.iFrame=6;DrawMode$1.ui3_frame5.DrawEx(x, y+h-50, 101, 1, 1, 0, 0, 0);
    		
    		if(w>100)
    		{
    			DrawMode$1.ui3_frame5.iFrame=1;
    			DrawMode$1.ui3_frame5.DrawEx(x+50, y, 101, 1.0*(w-100)/200, 1, 0, 0, 0);
    			
    			DrawMode$1.ui3_frame5.iFrame=5;
    			DrawMode$1.ui3_frame5.DrawEx(x+50, y+h-11, 101, 1.0*(w-100)/200, 1, 0, 0, 0);
    		}
    		if(h>100)
    		{
    			DrawMode$1.ui3_frame5.iFrame=3;
    			DrawMode$1.ui3_frame5.DrawEx(x+w-11, y+50, 101, 1, 1.0*(h-100)/200, 0, 0, 0);
    			
    			DrawMode$1.ui3_frame5.iFrame=7;
    			DrawMode$1.ui3_frame5.DrawEx(x, y+50, 101, 1, 1.0*(h-100)/200, 0, 0, 0);
    		}
    	};
    	
    	DrawMode$1.ui3_TagText4=function( x, y, s1, s2, s3, s4)
    	{//宽30，高80，右测小字
    //		M3DFast.gi().DrawText_2(x+15, y+14+18*0, s1, 0xffC8A000, 17, 101, 1, 1, 0,-2,-2, 3, 0xff000000);
    //		M3DFast.gi().DrawText_2(x+15, y+14+18*1, s2, 0xffC8A000, 17, 101, 1, 1, 0,-2,-2, 3, 0xff000000);
    //		M3DFast.gi().DrawText_2(x+15, y+14+18*2, s3, 0xffC8A000, 17, 101, 1, 1, 0,-2,-2, 3, 0xff000000);
    //		M3DFast.gi().DrawText_2(x+15, y+14+18*3, s4, 0xffC8A000, 17, 101, 1, 1, 0,-2,-2, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+15, y+5+18*0, s1, 0xffC8A000, 17, 101, 1, 1, 0,-2,0, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+15, y+5+18*1, s2, 0xffC8A000, 17, 101, 1, 1, 0,-2,0, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+15, y+5+18*2, s3, 0xffC8A000, 17, 101, 1, 1, 0,-2,0, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+15, y+5+18*3, s4, 0xffC8A000, 17, 101, 1, 1, 0,-2,0, 3, 0xff000000);
    	};
    	DrawMode$1.ui3_TagText3=function( x, y, s1, s2, s3)
    	{//宽30，高80
    		M3DFast$1.gi().DrawText_2(x+15, y+10+22*0, s1, 0xffC8A000, 17, 101, 1, 1, 0,-2,0, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+15, y+10+22*1, s2, 0xffC8A000, 17, 101, 1, 1, 0,-2,0, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+15, y+10+22*2, s3, 0xffC8A000, 17, 101, 1, 1, 0,-2,0, 3, 0xff000000);
    	};
    	DrawMode$1.ui3_TagText2=function( x, y, s1, s2)
    	{//宽30，高80
    		M3DFast$1.gi().DrawText_2(x+15, y+18+26*0, s1, 0xffC8A000, 17, 101, 1, 1, 0,-2,0, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+15, y+18+26*1, s2, 0xffC8A000, 17, 101, 1, 1, 0,-2,0, 3, 0xff000000);
    	};
    	DrawMode$1.ui3_BaseFrame2=function( x, y, s1, s2)
    	{
    		GmPlay$1.xani_ui3.DrawAnima(x, y, "基本大框",0);
    		M3DFast$1.gi().DrawText_2(x+21, y+130-23, s1, 0xffffffff, 20, 101, 1, 1, 0, -2,-2, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+21, y+130+23, s2, 0xffffffff, 20, 101, 1, 1, 0,-2,-2, 3, 0xff000000);
    	};
    	
    	DrawMode$1.ui3_BaseFrame3=function( x, y, s1, s2, s3)
    	{
    		GmPlay$1.xani_ui3.DrawAnima(x, y, "基本大框",0);
    		M3DFast$1.gi().DrawText_2(x+21, y+130-35, s1, 0xffffffff, 20, 101, 1, 1, 0, -2,-2, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+21, y+130, s2, 0xffffffff, 20, 101, 1, 1, 0, -2,-2, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+21, y+130+35, s3, 0xffffffff, 20, 101, 1, 1, 0, -2,-2, 3, 0xff000000);
    	};
    	
    	DrawMode$1.ui3_BaseFrame4=function( x, y, s1, s2, s3, s4)
    	{
    		GmPlay$1.xani_ui3.DrawAnima(x, y, "基本大框",0);
    		M3DFast$1.gi().DrawText_2(x+21, y+130-45, s1, 0xffffffff, 20, 101, 1, 1, 0, -2,-2, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+21, y+130-15, s2, 0xffffffff, 20, 101, 1, 1, 0, -2,-2, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+21, y+130+15, s3, 0xffffffff, 20, 101, 1, 1, 0, -2,-2, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+21, y+130+45, s4, 0xffffffff, 20, 101, 1, 1, 0, -2,-2, 3, 0xff000000);
    	};
    	
    	DrawMode$1.ui3_Frame1=function( x, y, w, h)
    	{
    		if(DrawMode$1.ui3_frame1==null)
    		{
    			DrawMode$1.ui3_frame1=GmPlay$1.xani_ui3.InitAnimaWithName("基本框1", null);
    		}
    		GmPlay$1.xani_ui3.DrawAnima_aa(x, y, DrawMode$1.ui3_frame1.iAnimaPoint,0);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+10, y, DrawMode$1.ui3_frame1.iAnimaPoint,1,101,1.0*(w-20)/10,1,0,0,0);
    		GmPlay$1.xani_ui3.DrawAnima_aa(x+w-10, y, DrawMode$1.ui3_frame1.iAnimaPoint,2);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+w-10, y+10, DrawMode$1.ui3_frame1.iAnimaPoint,3,101,1,1.0*(h-20)/10,0,0,0);
    		GmPlay$1.xani_ui3.DrawAnima_aa(x+w-10, y+h-10, DrawMode$1.ui3_frame1.iAnimaPoint,4);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+10, y+h-10, DrawMode$1.ui3_frame1.iAnimaPoint,5,101,1.0*(w-20)/10,1,0,0,0);
    		GmPlay$1.xani_ui3.DrawAnima_aa(x, y+h-10, DrawMode$1.ui3_frame1.iAnimaPoint,6);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x, y+10, DrawMode$1.ui3_frame1.iAnimaPoint,7,101,1,1.0*(h-20)/10,0,0,0);
    		
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+10, y+10, DrawMode$1.ui3_frame1.iAnimaPoint,8,101,1.0*(w-20)/10,1.0*(h-20)/10,0,0,0);
    	};
    	DrawMode$1. ui3_Frame2=function( x, y, w, h)
    	{
    		if(DrawMode$1.ui3_frame2==null)
    		{
    			DrawMode$1.ui3_frame2=GmPlay$1.xani_ui3.InitAnimaWithName("基本框2", null);
    		}
    		GmPlay$1.xani_ui3.DrawAnima_aa(x, y, DrawMode$1.ui3_frame2.iAnimaPoint,0);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+10, y, DrawMode$1.ui3_frame2.iAnimaPoint,1,101,1.0*(w-20)/10,1,0,0,0);
    		GmPlay$1.xani_ui3.DrawAnima_aa(x+w-10, y, DrawMode$1.ui3_frame2.iAnimaPoint,2);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+w-10, y+10, DrawMode$1.ui3_frame2.iAnimaPoint,3,101,1,1.0*(h-20)/10,0,0,0);
    		GmPlay$1.xani_ui3.DrawAnima_aa(x+w-10, y+h-10, DrawMode$1.ui3_frame2.iAnimaPoint,4);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+10, y+h-10, DrawMode$1.ui3_frame2.iAnimaPoint,5,101,1.0*(w-20)/10,1,0,0,0);
    		GmPlay$1.xani_ui3.DrawAnima_aa(x, y+h-10, DrawMode$1.ui3_frame2.iAnimaPoint,6);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x, y+10, DrawMode$1.ui3_frame2.iAnimaPoint,7,101,1,1.0*(h-20)/10,0,0,0);
    		
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+10, y+10, DrawMode$1.ui3_frame2.iAnimaPoint,8,101,1.0*(w-20)/10,1.0*(h-20)/10,0,0,0);
    	};
    	DrawMode$1.ui3_Frame3=function( x, y, w, h)
    	{
    		if(DrawMode$1.ui3_frame3==null)
    		{
    			DrawMode$1.ui3_frame3=GmPlay$1.xani_ui3.InitAnimaWithName("基本框3", null);
    		}
    		GmPlay$1.xani_ui3.DrawAnima_aa(x, y, DrawMode$1.ui3_frame3.iAnimaPoint,0);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+13, y, DrawMode$1.ui3_frame3.iAnimaPoint,1,101,1.0*(w-26)/13,1,0,0,0);
    		GmPlay$1.xani_ui3.DrawAnima_aa(x+w-13, y, DrawMode$1.ui3_frame3.iAnimaPoint,2);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+w-13, y+13, DrawMode$1.ui3_frame3.iAnimaPoint,3,101,1,1.0*(h-26)/13,0,0,0);
    		GmPlay$1.xani_ui3.DrawAnima_aa(x+w-13, y+h-13, DrawMode$1.ui3_frame3.iAnimaPoint,4);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+13, y+h-13, DrawMode$1.ui3_frame3.iAnimaPoint,5,101,1.0*(w-26)/13,1,0,0,0);
    		GmPlay$1.xani_ui3.DrawAnima_aa(x, y+h-13, DrawMode$1.ui3_frame3.iAnimaPoint,6);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x, y+13, DrawMode$1.ui3_frame3.iAnimaPoint,7,101,1,1.0*(h-26)/13,0,0,0);
    		
    //		GmPlay.xani_ui3.DrawAnimaEx(x+10, y+10, DrawMode.ui3_frame2.iAnimaPoint,8,101,1.0*(w-20)/10,1.0*(h-20)/10,0,0,0);
    	};
    	DrawMode$1.ui3_Frame4=function( x, y, w, h)
    	{
    		if(DrawMode$1.ui3_frame4==null)
    		{
    			DrawMode$1.ui3_frame4=GmPlay$1.xani_ui3.InitAnimaWithName("基本框4", null);
    		}
    		GmPlay$1.xani_ui3.DrawAnima_aa(x, y, DrawMode$1.ui3_frame4.iAnimaPoint,0);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+30, y, DrawMode$1.ui3_frame4.iAnimaPoint,1,101,1.0*(w-60)/30,1,0,0,0);
    		GmPlay$1.xani_ui3.DrawAnima_aa(x+w-30, y, DrawMode$1.ui3_frame4.iAnimaPoint,2);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+w-30, y+30, DrawMode$1.ui3_frame4.iAnimaPoint,3,101,1,1.0*(h-60)/30,0,0,0);
    		GmPlay$1.xani_ui3.DrawAnima_aa(x+w-30, y+h-30, DrawMode$1.ui3_frame4.iAnimaPoint,4);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+30, y+h-30, DrawMode$1.ui3_frame4.iAnimaPoint,5,101,1.0*(w-60)/30,1,0,0,0);
    		GmPlay$1.xani_ui3.DrawAnima_aa(x, y+h-30, DrawMode$1.ui3_frame4.iAnimaPoint,6);
    		GmPlay$1.xani_ui3.DrawAnimaEx(x, y+30, DrawMode$1.ui3_frame4.iAnimaPoint,7,101,1,1.0*(h-60)/30,0,0,0);
    		
    		GmPlay$1.xani_ui3.DrawAnimaEx(x+30, y+30, DrawMode$1.ui3_frame4.iAnimaPoint,8,101,1.0*(w-60)/30,1.0*(h-60)/30,0,0,0);
    	};
    	DrawMode$1.ui3_Text1=function( x, y, w1, w2, s1, s2)
    	{
    		DrawMode$1.frame_type1("3号框20_30", x, y, w1, 20);
    		DrawMode$1.frame_type1("4号框20_30", x + w1, y, w2, 20);
    		M3DFast$1.gi().DrawText_2(x + w1 / 2, y + 16, s1, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 0, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x + w1 + w2 / 2, y + 16, s2, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 0, 0xff000000);
    	};
    	//两个字，w1/w2 都固定 
    	DrawMode$1.ui3_Text1_=function( x, y, w1, w2, s1, s2)
    	{
    	/*	if(ui3_text1==null)
    		{
    			ui3_text1=GmPlay.xani_ui3.InitAnimaWithName("标签文本1", null);
    		}
    		GmPlay.xani_ui3.DrawAnima_aa(x, y, ui3_text1.iAnimaPoint,0);
    		GmPlay.xani_ui3.DrawAnima_aa(x+w1+w2-110, y, ui3_text1.iAnimaPoint,2);
    		GmPlay.xani_ui3.DrawAnima_aa(x+w1-58, y, ui3_text1.iAnimaPoint,1);
    		*/
    		
    		GmPlay$1.xani_nui2.DrawAnima(x, y, "提示1",0);
    		GmPlay$1.xani_nui2.DrawAnimaEx(x+w1, y, "可变长文字框",0,101,1.0,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    		GmPlay$1.xani_nui2.DrawAnimaEx(x+w1+15, y, "可变长文字框",1,101,1.0*(w2-30)/20,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    		GmPlay$1.xani_nui2.DrawAnimaEx(x+w1+w2-20, y, "可变长文字框",2,101,1.0,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    		
    	//	M3DFast.gi().DrawText_2(x+w1/2, y+16, s1, 0xffffe0a0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    	//	M3DFast.gi().DrawText_2(x+w1+w2/2, y+16, s2, 0xffffe0a0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		
    		M3DFast$1.gi().DrawText_2(x+w1/2, y+16, s1, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+w1+w2/2, y+16, s2, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    	
    	};
    	// 两个字，w1固定／w2 为可变长度
    	DrawMode$1.ui3_Text1__=function( x, y, w1, w2, s1, s2)
    	{
    		
    		GmPlay$1.xani_nui2.DrawAnima(x, y, "提示1",0);
    		GmPlay$1.xani_nui2.DrawAnimaEx(x+w1, y, "可变长文字框",0,101,1.0,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    		GmPlay$1.xani_nui2.DrawAnimaEx(x+w1+20, y, "可变长文字框",1,101,(w2-40)/20,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    		GmPlay$1.xani_nui2.DrawAnimaEx(x+w1+20+w2-40, y, "可变长文字框",2,101,1.0,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    			
    		M3DFast$1.gi().DrawText_2(x+w1/2, y+16, s1, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+w1+w2/2, y+16, s2, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    	
    	};
    	//四个字，w1固定／w2固定
    	DrawMode$1.ui3_Text1_4word=function( x, y, w1, w2, s1, s2)
    	{	
    		GmPlay$1.xani_nui2.DrawAnima(x, y, "提示1",2);
    		GmPlay$1.xani_nui2.DrawAnimaEx(x+w1, y, "可变长文字框",0,101,1.0,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    		GmPlay$1.xani_nui2.DrawAnimaEx(x+w1+18, y, "可变长文字框",1,101,1.0*(w2-36)/20,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    		GmPlay$1.xani_nui2.DrawAnimaEx(x+w1+w2-20, y, "可变长文字框",2,101,1.0,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    			
    		M3DFast$1.gi().DrawText_2(x+w1/2, y+16, s1, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(x+w1+w2/2, y+16, s2, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    	
    	};
    	//四个字，w1固定／w2可变长度
    	DrawMode$1.ui3_Text1_4word_=function( x, y, w1, w2, s1, s2)
    		{	
    			GmPlay$1.xani_nui2.DrawAnima(x, y, "提示1",2);
    			GmPlay$1.xani_nui2.DrawAnimaEx(x+w1, y, "可变长文字框",0,101,1.0,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    			GmPlay$1.xani_nui2.DrawAnimaEx(x+w1+20, y, "可变长文字框",1,101,(w2-40)/20,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    			GmPlay$1.xani_nui2.DrawAnimaEx(x+w1+20+w2-40, y, "可变长文字框",2,101,1.0,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    				
    			M3DFast$1.gi().DrawText_2(x+w1/2, y+16, s1, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    			M3DFast$1.gi().DrawText_2(x+w1+w2/2, y+16, s2, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		
    		};
    	
    	//width = 整个背景条宽度； length ＝ 单个切片宽度
    	DrawMode$1.new_bgbar=function( x,  y,  width,  length,  str)
    	{
    		GmPlay$1.xani_nui2.DrawAnimaEx(x, y, str,0,101,1.0,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    		GmPlay$1.xani_nui2.DrawAnimaEx(x+length,y, str,1,101,(width-length*2)/length,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    		GmPlay$1.xani_nui2.DrawAnimaEx(x+width-length, y, str,2,101,1.0,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    		
    	};
    	DrawMode$1.ui3_Text2=function( x, y, w1, w2, s1, s2)
    	{
    		if(DrawMode$1.ui3_text2==null)
    		{
    			DrawMode$1.ui3_text2=GmPlay$1.xani_ui3.InitAnimaWithName("标签文本2", null);
    		}
    //		GmPlay.xani_ui3.DrawAnima_aa(x, y, ui3_text1.iAnimaPoint,0);
    //		GmPlay.xani_ui3.DrawAnima_aa(x+w1+w2-110, y, ui3_text1.iAnimaPoint,2);
    //		GmPlay.xani_ui3.DrawAnima_aa(x+w1-58, y, ui3_text1.iAnimaPoint,1);
    		if(w2<124)
    		{
    			GmPlay$1.xani_ui3.DrawAnima_aa(x+w1, y+4, DrawMode$1.ui3_text2.iAnimaPoint,2);
    			GmPlay$1.xani_ui3.DrawAnima_aa(x+w1+w2-64, y+4, DrawMode$1.ui3_text2.iAnimaPoint,3);
    		}
    		else
    		{
    			GmPlay$1.xani_ui3.DrawAnima_aa(x+w1, y+4, DrawMode$1.ui3_text2.iAnimaPoint,0);
    			GmPlay$1.xani_ui3.DrawAnima_aa(x+w1+w2-122, y+4, DrawMode$1.ui3_text2.iAnimaPoint,1);
    		}

    		M3DFast$1.gi().DrawText_2(x+w1/2, y+20, s1, 0xff80ff00, 22, 101, 1, 1, 0, -2, -2, 3,0xff000000 );
    		M3DFast$1.gi().DrawText_2(x+w1+w2/2, y+20, s2, 0xff80ff00, 22, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    	};
    	
    	//xuc 0326 新增===========
    	DrawMode$1.ui3_Text2_=function( x, y, w1, w2, s1, s2)
    	{
    		GmPlay$1.xani_nui2.DrawAnima(x+10, y+33, "快捷提示分割条",0);
    		
    		M3DFast$1.gi().DrawTextEx(x+w1/2, y+20, s1, 0xff003e57, 20, 101, 1, 1, 0, -2, -2);
    		M3DFast$1.gi().DrawTextEx(x+w1+w2/2, y+20, s2, 0xff003e57, 20, 101, 1, 1, 0, -2, -2);
    	};
    	
    	DrawMode$1.Tag1_TW=function( x, y, w)
    	{
    		
    	};

    	DrawMode$1.Data1_BR=function( x, y, name, value, offx, w)
    	{//名字+框+数据
    		M3DFast$1.gi().DrawTextEx(x, y+10, name, 0xffffffff, 20, 101, 1, 1, 0, 0, -2);
    		DrawMode$1.Text1_BR(x+offx,y,w);
    		M3DFast$1.gi().DrawTextEx(x+offx+w/2,y+10, value, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    	};
    	
    	DrawMode$1.Text1_BR=function( x, y, w)
    	{//参数条子
    		GmPlay$1.xani_ui.InitAnimaWithName("统一文本框1", DrawMode$1.aa_tmp);
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y, DrawMode$1.aa_tmp.iAnimaPoint,0, 101, 1, 1, 0, 0, 0);//左
    		GmPlay$1.xani_ui.DrawAnimaEx(x+w-20, y, DrawMode$1.aa_tmp.iAnimaPoint,1, 101, 1, 1, 0, 0, 0);//右
    		GmPlay$1.xani_ui.DrawAnimaEx(x+20, y, DrawMode$1.aa_tmp.iAnimaPoint,2, 101, 1.0*(w-40)/20, 1, 0, 0, 0);
    		
    	};
    	DrawMode$1.Frame1_BR=function( x, y, w, h)
    	{
    		GmPlay$1.xani_ui.InitAnimaWithName("统一红黑框", DrawMode$1.aa_tmp);
    		
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y, DrawMode$1.aa_tmp.iAnimaPoint,0, 101, 1.0*w/404, 1.0*h/222, 0, 0, 0);//主背景
    		
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y, DrawMode$1.aa_tmp.iAnimaPoint,2, 101, 1.0*w/10, 1, 0, 0, 0);//上边
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y+h-3, DrawMode$1.aa_tmp.iAnimaPoint,6, 101, 1.0*w/10, 1, 0, 0, 0);//下边
    		
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y, DrawMode$1.aa_tmp.iAnimaPoint,8, 101, 1,1.0*h/10, 0, 0, 0);//左边
    		GmPlay$1.xani_ui.DrawAnimaEx(x+w-3, y, DrawMode$1.aa_tmp.iAnimaPoint,4, 101, 1,1.0*h/10, 0, 0, 0);//右边
    		
    		GmPlay$1.xani_ui.DrawAnima_aa(x, y, DrawMode$1.aa_tmp.iAnimaPoint, 1);//左上
    		GmPlay$1.xani_ui.DrawAnima_aa(x+w-10, y, DrawMode$1.aa_tmp.iAnimaPoint, 3);//右上
    		GmPlay$1.xani_ui.DrawAnima_aa(x+w-10, y+h-10, DrawMode$1.aa_tmp.iAnimaPoint, 5);//右下
    		GmPlay$1.xani_ui.DrawAnima_aa(x, y+h-10, DrawMode$1.aa_tmp.iAnimaPoint, 7);//左下
    	};
    	DrawMode$1.Frame2_MD=function( x, y, w, h)
    	{
    		// M3DFast.gi().FillRect_2D(x, y, x+w,y+h , 0xffffff00);//0xffbfded6
    		DrawMode$1.new_framein(x,y,w,h,0xfffbd688);
    		return;

    		GmPlay$1.xani_ui.InitAnimaWithName("统一中间层", DrawMode$1.aa_tmp);
    		
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y, DrawMode$1.aa_tmp.iAnimaPoint,0, 101, 1.0*w/250, 1.0*h/250, 0, -1, -1);//主背景
    		
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y, DrawMode$1.aa_tmp.iAnimaPoint,6, 101, 1.0*w/22, 1, 0, -1, -1);//上边
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y+h-8, DrawMode$1.aa_tmp.iAnimaPoint,6, 101, 1.0*w/22, 1, 0, -1, -1);//下边
    		
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y, DrawMode$1.aa_tmp.iAnimaPoint,5, 101, 1,1.0*h/22, 0, -1, -1);//左边
    		GmPlay$1.xani_ui.DrawAnimaEx(x+w-8, y, DrawMode$1.aa_tmp.iAnimaPoint,5, 101, 1,1.0*h/22, 0, -1, -1);//右边
    		
    		GmPlay$1.xani_ui.DrawAnima_aa(x, y, DrawMode$1.aa_tmp.iAnimaPoint, 1);//左上
    		GmPlay$1.xani_ui.DrawAnima_aa(x+w-22, y, DrawMode$1.aa_tmp.iAnimaPoint, 2);//右上
    		GmPlay$1.xani_ui.DrawAnima_aa(x+w-22, y+h-22, DrawMode$1.aa_tmp.iAnimaPoint, 3);//右下
    		GmPlay$1.xani_ui.DrawAnima_aa(x, y+h-22, DrawMode$1.aa_tmp.iAnimaPoint, 4);//左下
    	};

    	DrawMode$1.Frame3_BK=function( x, y, w, h, title)
    	{//64,128,192,256,320,384,448,512,576,640,704,768,832,896,960,1024
    		var i,j;
    		GmPlay$1.xani_ui.InitAnimaWithName("统一背景框", DrawMode$1.aa_tmp);
    		
    		M3DFast$1.gi().SetViewClip(x, y, x+w, y+h);
    		for(i=0;i<w/64+1;i++)
    		{
    			for(j=0;j<h/64+1;j++)
    			{
    				GmPlay$1.xani_ui.DrawAnimaEx(x+i*64, y+j*64, DrawMode$1.aa_tmp.iAnimaPoint,0, 101, 1,1, 0, 0, 0);//主背景
    			}
    		}
    		M3DFast$1.gi().NoClip();
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y, DrawMode$1.aa_tmp.iAnimaPoint,8, 101, 1.0*w/192, 1.0*h/192, 0, 0, 0);//蒙版
    		
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y, DrawMode$1.aa_tmp.iAnimaPoint,1, 101, 1.0*w/250, 1, 0, 0, 0);//标题栏
    		
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y, DrawMode$1.aa_tmp.iAnimaPoint,2, 101, 1.0*w/250, 1, 0, 0, 0);//上边
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y+h, DrawMode$1.aa_tmp.iAnimaPoint,2, 101, 1.0*w/250, 1, 0, 0, 0);//下边
    		
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y, DrawMode$1.aa_tmp.iAnimaPoint,3, 101, 1,1.0*h/250, 0, 0, 0);//左边
    		GmPlay$1.xani_ui.DrawAnimaEx(x+w, y, DrawMode$1.aa_tmp.iAnimaPoint,3, 101, 1,1.0*h/250, 0, 0, 0);//右边
    		
    		GmPlay$1.xani_ui.DrawAnima_aa(x, y, DrawMode$1.aa_tmp.iAnimaPoint, 4);//左上
    		GmPlay$1.xani_ui.DrawAnima_aa(x+w, y, DrawMode$1.aa_tmp.iAnimaPoint, 5);//右上
    		GmPlay$1.xani_ui.DrawAnima_aa(x+w, y+h, DrawMode$1.aa_tmp.iAnimaPoint, 7);//右下
    		GmPlay$1.xani_ui.DrawAnima_aa(x, y+h, DrawMode$1.aa_tmp.iAnimaPoint, 6);//左下
    		
    		M3DFast$1.gi().DrawTextEx(x+10-2, y+10, title, 0xff000000, 40, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(x+10+2, y+10, title, 0xff000000, 40, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(x+10, y+10-2, title, 0xff000000, 40, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(x+10, y+10+2, title, 0xff000000, 40, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(x+10, y+10, title, 0xffffffff, 40, 101, 1, 1, 0, 0, 0);
    	};
    	
    	DrawMode$1.DrawFrame3=function( x, y, h)
    	{//宽410固定,,,原图高222进行缩放
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y, "提示对话框",0, 101, 1, 1.0*h/222, 0, 0, 0);
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y, "提示对话框",1, 101, 1, 1, 0, 0, 0);
    		GmPlay$1.xani_ui.DrawAnimaEx(x, y+h-5, "提示对话框",2, 101, 1, 1, 0, -1, -1);
    	};
    	DrawMode$1.DrawFrame1=function( x, y, w, h)
    	{
    		DrawFrame("公共框1",x,y,w,h);
    	};
    	DrawMode$1.DrawFrame2=function( x, y, w, h)
    	{
    		DrawFrame("公共框2",x,y,w,h);
    	};
    	DrawMode$1.DrawFrame=function( mn, x, y, w, h)
    	{
    		GmPlay$1.xani_ui.DrawAnima_aa(x, y, mn, 0);
    		GmPlay$1.xani_ui.DrawAnima_aa(x+w-50, y, mn, 2);
    		GmPlay$1.xani_ui.DrawAnima_aa(x+w-50, y+h-50, mn, 4);
    		GmPlay$1.xani_ui.DrawAnima_aa(x, y+h-50, mn, 6);
    		
    		if(w>100)
    		{
    			GmPlay$1.xani_ui.DrawAnimaEx(x+50, y, mn, 1, 101, 1.0*(w-100)/50, 1, 0, 0, 0);
    			GmPlay$1.xani_ui.DrawAnimaEx(x+50, y+h-50, mn, 5, 101, 1.0*(w-100)/50, 1, 0, 0, 0);
    		}
    		if(h>100)
    		{
    			GmPlay$1.xani_ui.DrawAnimaEx(x, y+50, mn, 7, 101, 1, 1.0*(h-100)/50, 0, 0, 0);
    			GmPlay$1.xani_ui.DrawAnimaEx(x+w-50, y+50, mn, 3, 101, 1, 1.0*(h-100)/50, 0, 0, 0);
    		}
    		if(w>100 && h>100)
    		{
    			GmPlay$1.xani_ui.DrawAnimaEx(x+50, y+50, mn, 8, 101, 1.0*(w-100)/50, 1.0*(h-100)/50, 0, 0, 0);
    		}
    	};
    	DrawMode$1.DrawTextFrame1=function( x, y, w)
    	{
    		DrawMode$1.DrawTextFrame("大文本框",x,y,w);
    	};
    	DrawMode$1.DrawTextFrame=function( mn, x, y, w)
    	{
    		if(w<=50)
    		{
    			GmPlay$1.xani_ui.DrawAnimaEx(x, y, mn, 0, 101, 1, 1, 0, 0, 0);
    			GmPlay$1.xani_ui.DrawAnimaEx(x, y, mn, 1, 101, 1, 1, 0, 0, 0);
    		}
    		else
    		{
    			GmPlay$1.xani_ui.DrawAnimaEx(x, y, mn, 0, 101, 1, 1, 0, 0, 0);
    			GmPlay$1.xani_ui.DrawAnimaEx(x+25-25*(w-50)/30, y, mn, 2, 101, 1.0*(w-50)/30, 1, 0, 0, 0);
    			GmPlay$1.xani_ui.DrawAnimaEx(x+w-50, y, mn, 1, 101, 1, 1, 0, 0, 0);
    		}
    	};
    	
    	 DrawMode$1.local_frameani=null;
    	DrawMode$1.local_titleframe=function( x, y, w, h, withcut)
    	{
    		if(DrawMode$1.local_frameani==null)DrawMode$1.local_frameani=GmPlay$1.xani_local.InitAnimaWithName("提示框", null);
    		M3DFast$1.gi().FillRect_2D(x, y, x+w,y+h , 0x59000000);
    		DrawMode$1.local_frameani.iFrame=0;DrawMode$1.local_frameani.Draw(x, y);
    		DrawMode$1.local_frameani.iFrame=1;DrawMode$1.local_frameani.DrawEx(x, y+80, 101, 1, 1.0*(h-80-57)/183, 0, 0, 0);
    		DrawMode$1.local_frameani.iFrame=2;DrawMode$1.local_frameani.Draw(x, y+h);
    		DrawMode$1.local_frameani.iFrame=3;DrawMode$1.local_frameani.DrawEx(x+42, y+h, 101, 1.0*(w-42-42)/373, 1, 0, 0, 0);
    		DrawMode$1.local_frameani.iFrame=4;DrawMode$1.local_frameani.Draw(x+w, y+h);
    		DrawMode$1.local_frameani.iFrame=5;DrawMode$1.local_frameani.DrawEx(x+w, y+80, 101, 1, 1.0*(h-80-57)/183, 0, 0, 0);
    		DrawMode$1.local_frameani.iFrame=6;DrawMode$1.local_frameani.Draw(x+w, y);
    		DrawMode$1.local_frameani.iFrame=7;DrawMode$1.local_frameani.DrawEx(x+35, y, 101, 1.0*(w-35-35)/373, 1, 0, 0, 0);
    		if(withcut)GmPlay$1.xani_local.DrawAnimaEx(x+w/6, y+SystemOperate.WordSize(80), "分隔条", 0,101,2.0*w/3/400,1,0,0,0);
    	};
    	 DrawMode$1.local_frameani1=null;
    	DrawMode$1.local_frame1=function( x, y, w, h)
    	{
    		if(DrawMode$1.local_frameani1==null)DrawMode$1.local_frameani1=GmPlay$1.xani_nui1.InitAnimaWithName("背景框1", null);
    		M3DFast$1.gi().FillRect_2D(x, y, x+w,y+h , 0x59000000);
    		DrawMode$1.local_frameani1.iFrame=0;DrawMode$1.local_frameani1.Draw(x, y);
    		DrawMode$1.local_frameani1.iFrame=1;DrawMode$1.local_frameani1.DrawEx(x, y+50, 101, 1, 1.0*(h-100)/50, 0, 0, 0);
    		DrawMode$1.local_frameani1.iFrame=2;DrawMode$1.local_frameani1.Draw(x, y+h);
    		DrawMode$1.local_frameani1.iFrame=3;DrawMode$1.local_frameani1.DrawEx(x+50, y+h, 101, 1.0*(w-100)/50, 1, 0, 0, 0);
    		DrawMode$1.local_frameani1.iFrame=4;DrawMode$1.local_frameani1.Draw(x+w, y+h);
    		DrawMode$1.local_frameani1.iFrame=5;DrawMode$1.local_frameani1.DrawEx(x+w, y+50, 101, 1, 1.0*(h-100)/50, 0, 0, 0);
    		DrawMode$1.local_frameani1.iFrame=6;DrawMode$1.local_frameani1.Draw(x+w, y);
    		DrawMode$1.local_frameani1.iFrame=7;DrawMode$1.local_frameani1.DrawEx(x+50, y, 101, 1.0*(w-100)/50, 1, 0, 0, 0);
    		DrawMode$1.local_frameani1.iFrame=8;DrawMode$1.local_frameani1.DrawEx(x+50, y+50, 101, 1.0*(w-100)/50, 1.0*(h-100)/50, 0, 0, 0);
    	};
    	
    	DrawMode$1.local_frameani2=null;
    	DrawMode$1.local_frame2=function( x, y, w, h)
    	{
    		if(DrawMode$1.local_frameani2==null)DrawMode$1.local_frameani2=GmPlay$1.xani_nui1.InitAnimaWithName("背景框2", null);
    		M3DFast$1.gi().FillRect_2D(x, y, x+w,y+h , 0x59000000);
    		DrawMode$1.local_frameani2.iFrame=0;DrawMode$1.local_frameani2.Draw(x, y);
    		DrawMode$1.local_frameani2.iFrame=1;DrawMode$1.local_frameani2.DrawEx(x, y+81, 101, 1, 1.0*(h-81-39)/28, 0, 0, 0);
    		DrawMode$1.local_frameani2.iFrame=2;DrawMode$1.local_frameani2.Draw(x, y+h);
    		DrawMode$1.local_frameani2.iFrame=3;DrawMode$1.local_frameani2.DrawEx(x+65, y+h, 101, 1.0*(w-65-65)/32, 1, 0, 0, 0);
    		DrawMode$1.local_frameani2.iFrame=4;DrawMode$1.local_frameani2.Draw(x+w, y+h);
    		DrawMode$1.local_frameani2.iFrame=5;DrawMode$1.local_frameani2.DrawEx(x+w, y+81, 101, 1, 1.0*(h-81-39)/28, 0, 0, 0);
    		DrawMode$1.local_frameani2.iFrame=6;DrawMode$1.local_frameani2.Draw(x+w, y);
    		DrawMode$1.local_frameani2.iFrame=7;DrawMode$1.local_frameani2.DrawEx(x+65, y, 101, 1.0*(w-65-65)/32, 1, 0, 0, 0);
    		//DrawMode.local_frameani2.iFrame=8;DrawMode.local_frameani1.DrawEx(x+50, y+50, 101, 1.0*(w-100)/50, 1.0*(h-100)/50, 0, 0, 0);
    	};
    	
    	DrawMode$1.new_frame1=null;
    	DrawMode$1.new_frame2;
    	DrawMode$1.new_frame3=null;
    	DrawMode$1.new_bigframe=function( x, y, w, h)
    	{
    		if(DrawMode$1.new_frame1==null)
    		{
    			DrawMode$1.new_frame1=GmPlay$1.xani_nui2.InitAnimaWithName("大边框", null);
    			DrawMode$1.new_frame2=GmPlay$1.xani_nui2.InitAnimaWithName("梅竹", null);
    		}
    		M3DFast$1.gi().FillRect_2D(x, y, x+w,y+h , 0xffbfded6);
    		DrawMode$1.new_frame2.iFrame=0;DrawMode$1.new_frame2.Draw(x+w-12,y+12);
    		DrawMode$1.new_frame2.iFrame=1;DrawMode$1.new_frame2.Draw(x+12,y+h-12);
    		
    		DrawMode$1.new_frame1.iFrame=0;DrawMode$1.new_frame1.Draw(x, y);
    		DrawMode$1.new_frame1.iFrame=1;DrawMode$1.new_frame1.Draw(x+w, y);
    		DrawMode$1.new_frame1.iFrame=2;DrawMode$1.new_frame1.Draw(x+w, y+h);
    		DrawMode$1.new_frame1.iFrame=3;DrawMode$1.new_frame1.Draw(x, y+h);
    		
    		if(w>=400)
    		{
    			DrawMode$1.new_frame1.iFrame=4;DrawMode$1.new_frame1.DrawEx(x+200, y, 101, 1.0*(w-400)/40, 1, 0, 0, 0);
    			DrawMode$1.new_frame1.iFrame=5;DrawMode$1.new_frame1.DrawEx(x+200, y+h-1, 101, 1.0*(w-400)/40, 1, 0, 0, 0);
    		}
    		if(h>=400)
    		{
    			DrawMode$1.new_frame1.iFrame=6;DrawMode$1.new_frame1.DrawEx(x, y+200, 101, 1, 1.0*(h-400)/40, 0, 0, 0);
    			DrawMode$1.new_frame1.iFrame=7;DrawMode$1.new_frame1.DrawEx(x+w, y+200, 101, 1, 1.0*(h-400)/40, 0, 0, 0);
    		}
    	};
    	DrawMode$1.new_framein=function( x, y, w, h,c=0x807eb6a6)
    	{//内绿框
    		if(DrawMode$1.new_frame3==null)DrawMode$1.new_frame3=GmPlay$1.xani_nui2.InitAnimaWithName("内框", null);
    		M3DFast$1.gi().FillRect_2D(x, y, x+w,y+h , c);
    		
    		DrawMode$1.new_frame3.iFrame=0;DrawMode$1.new_frame3.Draw(x, y);
    		DrawMode$1.new_frame3.iFrame=1;DrawMode$1.new_frame3.Draw(x+w, y);
    		DrawMode$1.new_frame3.iFrame=3;DrawMode$1.new_frame3.Draw(x+w, y+h);
    		DrawMode$1.new_frame3.iFrame=2;DrawMode$1.new_frame3.Draw(x, y+h);
    		
    		if(w>=80)
    		{
    			DrawMode$1.new_frame3.iFrame=4;DrawMode$1.new_frame3.DrawEx(x+40, y, 101, 1.0*(w-80)/17, 1, 0, 0, 0);
    			DrawMode$1.new_frame3.iFrame=4;DrawMode$1.new_frame3.DrawEx(x+40, y+h-3, 101, 1.0*(w-80)/17, 1, 0, 0, 0);
    		}
    		if(h>=80)
    		{
    			DrawMode$1.new_frame3.iFrame=5;DrawMode$1.new_frame3.DrawEx(x, y+40, 101, 1, 1.0*(h-80)/14, 0, 0, 0);
    			DrawMode$1.new_frame3.iFrame=6;DrawMode$1.new_frame3.DrawEx(x+w, y+40, 101, 1, 1.0*(h-80)/14, 0, 0, 0);
    		}
    	};
    	DrawMode$1.new_baseframe2=function( x, y, w, h, s1, s2)
    	{
    		DrawMode$1.new_bigframe(x,y,w,h);
    		GmPlay$1.xani_nui2.DrawAnima(x, y, "卷轴",0);
    		M3DFast$1.gi().DrawText_2(x-11, y+190, s1, 0xff003e57, 30, 101, 1, 1, 0, -2,-2, 4, 0xff8dffff);
    		M3DFast$1.gi().DrawText_2(x-11, y+270, s2, 0xff003e57, 30, 101, 1, 1, 0,-2,-2, 4, 0xff8dffff);
    	};
    	DrawMode$1.new_baseframe3=function( x, y, w, h, s1, s2, s3)
    	{
    		DrawMode$1.new_bigframe(x,y,w,h);
    		GmPlay$1.xani_nui2.DrawAnima(x, y, "卷轴",0);
    		M3DFast$1.gi().DrawText_2(x-11, y+180, s1, 0xff003e57, 30, 101, 1, 1, 0, -2,-2, 4, 0xff8dffff);
    		M3DFast$1.gi().DrawText_2(x-11, y+230, s2, 0xff003e57, 30, 101, 1, 1, 0,-2,-2, 4, 0xff8dffff);
    		M3DFast$1.gi().DrawText_2(x-11, y+280, s3, 0xff003e57, 30, 101, 1, 1, 0,-2,-2, 4, 0xff8dffff);
    	};
    	DrawMode$1.new_baseframe4=function( x, y, w, h, s1, s2, s3, s4)
    	{
    		DrawMode$1.new_bigframe(x,y,w,h);
    		GmPlay$1.xani_nui2.DrawAnima(x, y, "卷轴",0);
    		M3DFast$1.gi().DrawText_2(x-11, y+165, s1, 0xff003e57, 30, 101, 1, 1, 0, -2,-2, 4, 0xff8dffff);
    		M3DFast$1.gi().DrawText_2(x-11, y+205, s2, 0xff003e57, 30, 101, 1, 1, 0,-2,-2, 4, 0xff8dffff);
    		M3DFast$1.gi().DrawText_2(x-11, y+245, s3, 0xff003e57, 30, 101, 1, 1, 0,-2,-2, 4, 0xff8dffff);
    		M3DFast$1.gi().DrawText_2(x-11, y+285, s4, 0xff003e57, 30, 101, 1, 1, 0,-2,-2, 4, 0xff8dffff);
    	};
    	DrawMode$1.new_lableword2=function( x, y, w, h, bsel, s1, s2)
    	{
    		if(bsel)
    		{//选中，有边框
    			M3DFast$1.gi().DrawText_2(x+w/2-2, y+h/3, s1, 0xffffff00, 22, 101, 1, 1, 0, -2,-2, 3, 0xff003e57);
    			M3DFast$1.gi().DrawText_2(x+w/2-2, y+h/3*2, s2, 0xffffff00, 22, 101, 1, 1, 0,-2,-2, 3, 0xff003e57);
    		}
    		else
    		{//没选中，单色
    			M3DFast$1.gi().DrawTextEx(x+w/2-2, y+h/3, s1, 0xff003e57, 22, 101, 1, 1, 0, -2,-2);
    			M3DFast$1.gi().DrawTextEx(x+w/2-2, y+h/3*2, s2, 0xff003e57, 22, 101, 1, 1, 0,-2,-2);
    		}
    	};
    	DrawMode$1.new_lableword3=function( x, y, w, h, bsel, s1, s2, s3)
    	{
    		if(bsel)
    		{//选中，有边框
    			M3DFast$1.gi().DrawText_2(x+w/2-2, y+h/3, s1, 0xffffff00, 22, 101, 1, 1, 0, -2,-2, 3, 0xff003e57);
    			M3DFast$1.gi().DrawText_2(x+w/2-2, y+h/3*2, s2, 0xffffff00, 22, 101, 1, 1, 0,-2,-2, 3, 0xff003e57);
    			M3DFast$1.gi().DrawText_2(x+w/2-2, y+h/3*3, s3, 0xffffff00, 22, 101, 1, 1, 0,-2,-2, 3, 0xff003e57);
    			
    		}
    		else
    		{//没选中，单色
    			M3DFast$1.gi().DrawTextEx(x+w/2-2, y+h/3, s1, 0xff003e57, 22, 101, 1, 1, 0, -2,-2);
    			M3DFast$1.gi().DrawTextEx(x+w/2-2, y+h/3*2, s2, 0xff003e57, 22, 101, 1, 1, 0,-2,-2);
    			M3DFast$1.gi().DrawTextEx(x+w/2-2, y+h/3*3, s3, 0xff003e57, 22, 101, 1, 1, 0,-2,-2);
    			
    		}
    	};
    	DrawMode$1.new_lableword4=function( x, y, w, h, bsel, s1, s2, s3, s4)
    	{
    		if(bsel)
    		{//选中，有边框
    			M3DFast$1.gi().DrawText_2(x+w/2-2, y+h/3, s1, 0xffffff00, 22, 101, 1, 1, 0, -2,-2, 3, 0xff003e57);
    			M3DFast$1.gi().DrawText_2(x+w/2-2, y+h/3*2, s2, 0xffffff00, 22, 101, 1, 1, 0,-2,-2, 3, 0xff003e57);
    			M3DFast$1.gi().DrawText_2(x+w/2-2, y+h/3*3, s3, 0xffffff00, 22, 101, 1, 1, 0,-2,-2, 3, 0xff003e57);
    			M3DFast$1.gi().DrawText_2(x+w/2-2, y+h/3*4, s4, 0xffffff00, 22, 101, 1, 1, 0,-2,-2, 3, 0xff003e57);
    			
    		}
    		else
    		{//没选中，单色
    			M3DFast$1.gi().DrawTextEx(x+w/2-2, y+h/3, s1, 0xff003e57, 22, 101, 1, 1, 0, -2,-2);
    			M3DFast$1.gi().DrawTextEx(x+w/2-2, y+h/3*2, s2, 0xff003e57, 22, 101, 1, 1, 0,-2,-2);
    			M3DFast$1.gi().DrawTextEx(x+w/2-2, y+h/3*3, s3, 0xff003e57, 22, 101, 1, 1, 0,-2,-2);
    			M3DFast$1.gi().DrawTextEx(x+w/2-2, y+h/3*4, s4, 0xff003e57, 22, 101, 1, 1, 0,-2,-2);
    			
    		}
    	};
    	
    	DrawMode$1.new_frame4=null,DrawMode$1.new_frame5=null;
    	DrawMode$1.new_frameon=function( x, y, w, h, type)
    	{//队伍宗旨边框
    		if(DrawMode$1.new_frame4==null)DrawMode$1.new_frame4=GmPlay$1.xani_nui2.InitAnimaWithName("特殊奖励框", null);
    		if(DrawMode$1.new_frame5==null)DrawMode$1.new_frame5=GmPlay$1.xani_nui2.InitAnimaWithName("特殊奖励框2", null);
    		var aa;
    		var c;
    		if(type==0)
    		{
    			aa=DrawMode$1.new_frame4;
    			c=0xff399392;
    		}
    		else if(type==1)
    		{
    			aa=DrawMode$1.new_frame5;
    			c=0xff3c739a;
    		}
    		else return;
    		
    		M3DFast$1.gi().FillRect_2D(x+5, y+5, x+w-10,y+h-10 , c);
    		aa.iFrame=0;aa.Draw(x, y);
    		aa.iFrame=1;aa.Draw(x+w, y);
    		aa.iFrame=2;aa.Draw(x+w, y+h);
    		aa.iFrame=3;aa.Draw(x, y+h);
    		aa.iFrame=4;aa.DrawEx(x+20, y, 101, 1.0*(w-20-20)/20, 1, 0, 0, 0);
    		aa.iFrame=5;aa.DrawEx(x, y+20, 101, 1, 1.0*(h-20-20)/20, 0, 0, 0);
    		aa.iFrame=6;aa.DrawEx(x+w, y+20, 101, 1, 1.0*(h-20-20)/20, 0, 0, 0);
    		aa.iFrame=7;aa.DrawEx(x+20, y+h, 101, 1.0*(w-20-20)/20, 1, 0, 0, 0);
    	};
    	 DrawMode$1.new_frame6=null;
    	DrawMode$1.new_framepc=function( x, y, w, h)
    	{//公共聊天外边框
    		if(DrawMode$1.new_frame6==null)DrawMode$1.new_frame6=GmPlay$1.xani_nui3.InitAnimaWithName("公共聊天外框", null);
    		M3DFast$1.gi().FillRect_2D(x+3, y+3, x+w-3,y+h-3 , 0x80000000);
    		DrawMode$1.new_frame6.iFrame=0;DrawMode$1.new_frame6.Draw(x+w, y);
    		DrawMode$1.new_frame6.iFrame=1;DrawMode$1.new_frame6.DrawEx(x+19, y, 101, 1.0*(w-38)/20, 1, 0, 0, 0);
    		DrawMode$1.new_frame6.iFrame=2;DrawMode$1.new_frame6.Draw(x, y);
    		DrawMode$1.new_frame6.iFrame=3;DrawMode$1.new_frame6.DrawEx(x, y+19, 101, 1,1.0*(h-38)/20, 0, 0, 0);
    		DrawMode$1.new_frame6.iFrame=4;DrawMode$1.new_frame6.Draw(x, y+h);
    		DrawMode$1.new_frame6.iFrame=5;DrawMode$1.new_frame6.DrawEx(x+19, y+h, 101, 1.0*(w-38)/20, 1, 0, 0, 0);
    		DrawMode$1.new_frame6.iFrame=6;DrawMode$1.new_frame6.Draw(x+w, y+h);
    		DrawMode$1.new_frame6.iFrame=7;DrawMode$1.new_frame6.DrawEx(x+w, y+19, 101, 1,1.0*(h-38)/20, 0, 0, 0);
    	};
    	DrawMode$1.new_TagText2=function( x, y, w, s1, s2)
    	{//67,87,110
    		GmPlay$1.xani_nui2.DrawAnima(x, y, "提示1",0);
    		DrawMode$1.new_Text(x+67,y,w,s2);
    		M3DFast$1.gi().DrawText_2(x+67/2, y+16, s1, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    	};
    	DrawMode$1.new_Text=function( x, y, w, s)
    	{
    		GmPlay$1.xani_nui2.DrawAnimaEx(x, y, "可变长文字框",0,101,1.0,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    		GmPlay$1.xani_nui2.DrawAnimaEx(x+15, y, "可变长文字框",1,101,1.0*(w-30)/20,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    		GmPlay$1.xani_nui2.DrawAnimaEx(x+w-20, y, "可变长文字框",2,101,1.0,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    		
    		M3DFast$1.gi().DrawText_2(x+w/2, y+16, s, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    	};
    	 DrawMode$1.new_frame7=null;
    	DrawMode$1.new_framewatch=function( x, y, w, h)
    	{//弹出框，物品详细信息
    		if(DrawMode$1.new_frame7==null)DrawMode$1.new_frame7=GmPlay$1.xani_nui3.InitAnimaWithName("公共内框1", null);
    		
    		DrawMode$1.new_frame7.iFrame=8;DrawMode$1.new_frame7.DrawEx(x+29, y+29, 101, 1.0*(w-58)/20, 1.0*(h-29-21)/20, 0, 0, 0);//背景
    		
    		DrawMode$1.new_frame7.iFrame=1;DrawMode$1.new_frame7.DrawEx(x+29, y, 101, 1.0*(w-58)/20, 1, 0, 0, 0);//上横线
    		DrawMode$1.new_frame7.iFrame=5;DrawMode$1.new_frame7.DrawEx(x+29, y+h, 101, 1.0*(w-58)/20, 1, 0, 0, 0);//下横线
    		
    		DrawMode$1.new_frame7.iFrame=7;DrawMode$1.new_frame7.DrawEx(x, y+29, 101, 1,1.0*(h-29-21)/20, 0, 0, 0);//左竖线
    		DrawMode$1.new_frame7.iFrame=3;DrawMode$1.new_frame7.DrawEx(x+w, y+29, 101, 1,1.0*(h-29-21)/20, 0, 0, 0);//右竖线
    		
    		DrawMode$1.new_frame7.iFrame=0;DrawMode$1.new_frame7.Draw(x, y);//左上
    		DrawMode$1.new_frame7.iFrame=2;DrawMode$1.new_frame7.Draw(x+w, y);
    		DrawMode$1.new_frame7.iFrame=4;DrawMode$1.new_frame7.Draw(x+w, y+h);
    		DrawMode$1.new_frame7.iFrame=6;DrawMode$1.new_frame7.Draw(x, y+h);
    	};
    	DrawMode$1.new_frame8=null;
    	DrawMode$1.new_numberframe=function( x, y, w, detail)
    	{//数字输入框
    		if(DrawMode$1.new_frame8==null)DrawMode$1.new_frame8=GmPlay$1.xani_nui3.InitAnimaWithName("数字输入框", null);
    		DrawMode$1.new_frame8.iFrame=1;DrawMode$1.new_frame8.DrawEx(x+15,y,101,1.0*(w-30)/20,1,0,0,0);
    		DrawMode$1.new_frame8.iFrame=0;DrawMode$1.new_frame8.Draw(x, y);
    		DrawMode$1.new_frame8.iFrame=2;DrawMode$1.new_frame8.Draw(x+w-20, y);
    		
    		M3DFast$1.gi().DrawTextEx(x+w/2, y+25, detail, 0xff003e57, 30, 101, 1, 1, 0, -2, -2);	
    //		M3DFast.gi().DrawText_2(x+w/2, y+20, detail, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    	};
    	DrawMode$1.frame_type1=function( name, x, y, w, bw)
    	{//横向框
    		if(w<bw*2)
    		{
    			GmPlay$1.xani_frame.DrawAnimaEx(x, y, name, 0, 101, 1.0*w/2/bw, 1, 0, 0, 0);
    			GmPlay$1.xani_frame.DrawAnimaEx(x+w/2, y, name, 2, 101, 1.0*w/2/bw, 1, 0, 0, 0);
    		}
    		else
    		{
    			GmPlay$1.xani_frame.DrawAnimaEx(x+bw/2, y, name, 1, 101, 1.0*(w-bw)/bw, 1, 0, 0, 0);
    			
    			GmPlay$1.xani_frame.DrawAnima(x,y,name,0);
    			GmPlay$1.xani_frame.DrawAnima(x+w-bw,y,name,2);
    		}
    	};
    	DrawMode$1.frame_type2=function( name, x, y, w, h, bw, bh)
    	{//外边框
    		GmPlay$1.xani_frame.DrawAnima(x,y,name,0);
    		GmPlay$1.xani_frame.DrawAnimaEx(x+bw, y, name, 1, 101, 1.0*(w-bw-bw)/bw, 1, 0, 0, 0);
    		GmPlay$1.xani_frame.DrawAnima(x+w-bw,y,name,2);
    		GmPlay$1.xani_frame.DrawAnimaEx(x+w-bw, y+bh, name, 3, 101, 1,1.0*(h-bh-bh)/bh, 0, 0, 0);
    		GmPlay$1.xani_frame.DrawAnima(x+w-bw,y+h-bh,name,4);
    		GmPlay$1.xani_frame.DrawAnimaEx(x+bw, y+h-bh, name, 5, 101, 1.0*(w-bw-bw)/bw, 1, 0, 0, 0);
    		GmPlay$1.xani_frame.DrawAnima(x,y+h-bh,name,6);
    		GmPlay$1.xani_frame.DrawAnimaEx(x, y+bh, name, 7, 101, 1,1.0*(h-bh-bh)/bh,  0, 0, 0);
    	};
    	DrawMode$1.frame_type3=function( name, x, y, w, h, bw, bh)
    	{//纯色拉伸
    		GmPlay$1.xani_frame.DrawAnimaEx(x, y, name, 1, 101, 1.0*w/bw, 1.0*h/bh, 0, 0, 0);
    	};
    	/*
    	 * 整框
    	 * */
    //	DrawMode.frame_type4=function( name, x, y, w, h, bw, bh)
    	DrawMode$1.frame_type4=function( name, xx, yy, iW, iH, iBw, iBh)
    	{//整框
    //		GmPlay.xani_frame.DrawAnima_aa(x,y,name,0);
    //		GmPlay.xani_frame.DrawAnimaEx(x+bw, y, name, 1, 101, 1.0*(w-bw-bw)/bw, 1, 0, 0, 0);
    //		GmPlay.xani_frame.DrawAnima_aa(x+w-bw,y,name,2);
    //		GmPlay.xani_frame.DrawAnimaEx(x+w-bw, y+bh, name, 3, 101, 1,1.0*(h-bh-bh)/bh, 0, 0, 0);
    //		GmPlay.xani_frame.DrawAnima_aa(x+w-bw,y+h-bh,name,4);
    //		GmPlay.xani_frame.DrawAnimaEx(x+bw, y+h-bh, name, 5, 101, 1.0*(w-bw-bw)/bw, 1, 0, 0, 0);
    //		GmPlay.xani_frame.DrawAnima_aa(x,y+h-bh,name,6);
    //		GmPlay.xani_frame.DrawAnimaEx(x, y+bh, name, 7, 101, 1,1.0*(h-bh-bh)/bh,  0, 0, 0);
    //		
    //		GmPlay.xani_frame.DrawAnimaEx(x+bw, y+bh, name, 8, 101, 1.0*(w-bw-bw)/bw, 1.0*(h-bh-bh)/bh, 0, 0, 0);
    		
    		
    		if(iW-iBw-iBw>0 && iH-iBh-iBh>0)GmPlay$1.xani_frame.DrawAnimaEx(xx+iBw-2, yy+iBh-2,name, 8, 101, 1.0*(iW-iBw-iBw+4)/iBw, 1.0*(iH-iBh-iBh+4)/iBh, 0, 0, 0);
    		if(iW-iBw-iBw>0)GmPlay$1.xani_frame.DrawAnimaEx(xx+iBw-2, yy,name, 1, 101, 1.0*(iW-iBw-iBw+4)/iBw, 1, 0, 0, 0);
    		if(iH-iBh-iBh>0)GmPlay$1.xani_frame.DrawAnimaEx(xx+iW-iBw, yy+iBh-2,name, 3, 101, 1,1.0*(iH-iBh-iBh+4)/iBh, 0, 0, 0);
    		if(iW-iBw-iBw>0)GmPlay$1.xani_frame.DrawAnimaEx(xx+iBw-2, yy+iH-iBh,name, 5, 101, 1.0*(iW-iBw-iBw+4)/iBw, 1, 0, 0, 0);
    		if(iH-iBh-iBh>0)GmPlay$1.xani_frame.DrawAnimaEx(xx, yy+iBh-2,name, 7, 101, 1,1.0*(iH-iBh-iBh+4)/iBh,  0, 0, 0);
    		
    		GmPlay$1.xani_frame.DrawAnimaEx(xx,yy,name,0,101,1,1,0,0,0);
    		GmPlay$1.xani_frame.DrawAnimaEx( (xx+iW-1*(iBw)),yy,name,2,101,1,1,0,0,0);
    		GmPlay$1.xani_frame.DrawAnimaEx( (xx+iW-1*(iBw)), (yy+iH-1*(iBh)),name,4,101,1,1,0,0,0);
    		GmPlay$1.xani_frame.DrawAnimaEx(xx, (yy+iH-1*(iBh)),name,6,101,1,1,0,0,0);
    	};

    class _XRECT {
    	constructor()
    	{
    		this.iX=-1;
    		this.iY=-1;
    		this.iW=-1;
    		this.iH=-1;
    	}
    	Set( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    	}
    	bIn( x, y)
    	{
    		if(x<this.iX)return false;
    		if(y<this.iY)return false;
    		if(x>this.iX+this.iW)return false;
    		if(y>this.iY+this.iH)return false;
    		return true;
    	}
    	CopyFrom( r)
    	{
    		this.iX=r.iX;
    		this.iY=r.iY;
    		this.iW=r.iW;
    		this.iH=r.iH;
    	}
    }

    class LockRect {
    	constructor()
    	{
    		this.rs=new Array(3);
    		for(var i=0;i<3;i++)this.rs[i]=new _XRECT();
    	}
    	bIn( x, y)
    	{
    		return (this.rs[0].bIn(x, y) || this.rs[1].bIn(x, y) || this.rs[2].bIn(x, y));
    	}
    	Clear()
    	{
    		this.rs[0].Set(-1, -1, -1, -1);
    		this.rs[1].Set(-1, -1, -1, -1);
    		this.rs[2].Set(-1, -1, -1, -1);
    		this.iCount=0;
    	}
    	Add( x, y, w, h)
    	{
    	//	GmPlay.sop(""+x+""+y+""+w+""+h);
    		if(this.iCount>=3)return;
    		this.rs[this.iCount].Set(x, y, w, h);
    		this.iCount++;
    	}
    	CopyFrom( lr)
    	{
    		this.iCount=lr.iCount;
    		this.rs[0].CopyFrom(lr.rs[0]);
    		this.rs[1].CopyFrom(lr.rs[1]);
    		this.rs[2].CopyFrom(lr.rs[2]);
    	}
    }

    //#123表情
    //#cffffff颜色
    class UnitList
    {/*
    	public int iType;//0文字，1表情，2锁定头，3锁定尾
    	public int iLp;//行号
    	public int iX,iY;//偏移
    	public int this.iW,iH;//宽高
    	public int iColor;//颜色
    	public String sDetail;//具体内容
    	*/
    	constructor()
    	{
    		this.sDetail="";
    	}
    	
    	copyfrom( ul)
    	{
    		this.iType=ul.iType;
    		this.iLp=ul.iLp;
    		this.iX=ul.iX;
    		this.iY=ul.iY;
    		this.iW=ul.iW;
    		this.iH=ul.iH;
    		this.iColor=ul.iColor;
    		this.sDetail=ul.sDetail;
    	}
    }

    class FormatString {
    	

    //	public int iX,iY,iW,iH;//格式化后，字符所占宽高
    	
    	constructor()
    	{
    		this.iLineY=new Int32Array(FormatString.MAXUNIT);
    		this.iLineH=new Int32Array(FormatString.MAXUNIT);
    		var i;
    		this.pm3f=M3DFast$1.gi();
    		this.uls=new Array(FormatString.MAXUNIT);
    		for(i=0;i<FormatString.MAXUNIT;i++)
    		{
    			this.uls[i]=new UnitList();
    		}
    		this.aa_face=new AnimaAction();
    		
    		this.lrs=new Array(10);
    		for(i=0;i<10;i++)this.lrs[i]=new LockRect();

    		this.ilp=0;//当前行号
    	}
    	  InsertLocker( p, base, ls, exc, exd)
    	{
    		if(base.indexOf(exc+ls)>=0)
    		{
    			return base.replace(exc+ls, exd+"#L"+p+"["+ls+"#]");
    		}
    		return base;
    	}
    	CheckOutRect()
    	{
    		var i;
    		var sx=-1,sy=-1;
    		var rectpoint=-1;
    		var linepoint=-1;
    		for(i=0;i<10;i++)this.lrs[i].Clear();
    		for(i=0;i<FormatString.MAXUNIT;i++)
    		{
    			if(this.uls[i].iLp==-1)break;
    			switch(this.uls[i].iType)
    			{
    			case 2://锁定头
    				rectpoint=this.uls[i].iColor;
    				linepoint=this.uls[i].iLp;
    				this.lrs[rectpoint].Clear();
    				sx=this.uls[i].iX;
    				sy=this.iLineY[linepoint];
    				break;
    			case 3://锁定尾
    				if(rectpoint>=0)
    				{
    					this.lrs[rectpoint].Add(sx, sy, this.uls[i].iX-sx, this.iLineH[linepoint]);
    					rectpoint=-1;
    				}
    				break;
    			default://其他情况
    				if(rectpoint>=0 && this.uls[i].iLp!=linepoint)
    				{
    					this.lrs[rectpoint].Add(sx, sy, this.iW-sx, this.iLineH[linepoint]);
    					linepoint=this.uls[i].iLp;
    					sx=this.uls[i].iX;
    					sy=this.iLineY[linepoint];
    				}
    				break;
    			}
    		}

    	}
    	 hto( c)
    	{
    		switch(c)
    		{
    		case '0':return 0;
    		case '1':return 1;
    		case '2':return 2;
    		case '3':return 3;
    		case '4':return 4;
    		case '5':return 5;
    		case '6':return 6;
    		case '7':return 7;
    		case '8':return 8;
    		case '9':return 9;
    		case 'a':case 'A':return 10;
    		case 'b':case 'B':return 11;
    		case 'c':case 'C':return 12;
    		case 'd':case 'D':return 13;
    		case 'e':case 'E':return 14;
    		case 'f':case 'F':return 15;
    		}
    		return -1;
    	}
    	  NextUnit( s, p)
    	{//0文字，1表情，2物品，3宠物
    		var i,j,k;
    		var c=s[p];
    		if(c==FormatString.KEY)
    		{//特殊意义
    			this.iCurrentType=999;
    			if(p+1>=s.length)
    			{
    				this.sCurrentString="";
    				return p+1;
    			}
    			c=s[p+1];

    			if(c==' ')
    			{
    				this.iSpaceWidth+=this.WORDSIZE;
    				return p+2;
    			}
    			else if(c=='o' || c=='O')
    			{
    				this.iCurrentColor=this.iOldColor;
    				this.iCurrentType=999;
    				return p+2;
    			}
    			else if(c=='|')
    			{
    				return p+2;
    			}
    			else if(c=='l' || c=='L')
    			{//锁定位置cxb
    				this.iLockRectPoint=s.charAt(p+2)-'0';
    				this.iCurrentType=3;
    				this.sCurrentString="";
    				return p+=4;
    			}
    			else if(c==']')
    			{//锁定结束
    				this.iCurrentType=4;
    				this.sCurrentString="";
    				return p+=2;
    			}
    			else if(c=='e' || c=='E')
    			{//换行
    				this.iCurrentType=2;
    				this.sCurrentString="";
    				return p+2;
    			}
    			else if(c=='f' || c=='F')
    			{//表情
    				this.sCurrentString="";
    				p+=2;
    				j=0;
    				
    				for(k=0;k<3;k++)
    				{
    					if(p>=s.length)break;
    					//c=s.charAt(p);
    					i=this.hto(s[p]);
    					if(i==-1)break;
    					j=j*10+i;
    					p++;
    				}
    //				if(p>=s.length)return p;
    //				c=s.charAt(p);
    //				i=this.hto(c);
    //				if(i==-1)return p;
    //				j=j*10+i;
    //				p++;
    //				
    //				if(p>=s.length)
    //				{
    //					if(j>=1 && j<=12)
    //					{
    //						this.iCurrentType=1;
    //						this.sCurrentString="表情"+j;
    //					}
    //					return p;
    //				}
    //				c=s.charAt(p);
    //				i=this.hto(c);
    //				if(i==-1)
    //				{
    //					if(j>=1 && j<=12)
    //					{
    //						this.iCurrentType=1;
    //						this.sCurrentString="表情"+j;
    //					}
    //					return p;
    //				}
    //				j=j*10+i;
    //				p++;
    				
    				if(j>=0 && j<900)
    				{
    					this.iCurrentType=1;
    					this.sCurrentString="表情"+j;
    				}
    				return p;
    			}
    			else if(c=='c' || c=='C')
    			{//颜色
    				this.iCurrentType=999;
    				p+=2;
    				this.iOldColor=this.iCurrentColor;
    				this.iCurrentColor=0;
    				for(i=0;i<6;i++)
    				{
    					if(p>=s.length)
    					{
    						this.sCurrentString="";
    						return p;
    					}
    					c=s.charAt(p);
    					j=this.hto(c);
    					if(j==-1)
    					{
    						this.iCurrentColor|=0xff000000;
    						return p;
    					}
    					else
    					{
    						this.iCurrentColor=(this.iCurrentColor<<4)|j;
    					}
    					p++;
    				}
    				this.iCurrentColor|=0xff000000;
    				return p;
    			}
    			else
    			{
    				this.iCurrentType=0;
    				this.sCurrentString=""+FormatString.KEY;
    				return p+1;
    			}
    		}
    		else
    		{
    			this.iCurrentType=0;
    			this.sCurrentString=""+c;
    //			this.iCurrentWidth=this.pm3f.GetTextWidth(this.sCurrentString, 30);
    			p++;
    		}

    		return p;
    	}
    	  AddUnit( lp, up, type, color, x, h, detail)
    	{//添加一个单位
    		this.uls[up].iType=type;
    		this.uls[up].sDetail=detail;
    		this.uls[up].iColor=color;
    		this.uls[up].iX=x;
    		this.uls[up].iH=h;
    		this.uls[up].iLp=lp;
    		up++;
    		return up;
    	}
    	AddLine( lp, up)
    	{
    		var i;
    		var th=0;
    		for(i=0;i<FormatString.MAXUNIT;i++)
    		{
    			if(this.uls[i].iLp==lp)
    			{//是这一行的
    				if(th<this.uls[i].iH)th=this.uls[i].iH;
    			}
    		}
    		if(this.bEx)
    		{
    			if(th<this.iExLineGap)th=this.iExLineGap;
    		}
    //		if(th<this.WORDSIZE)th=this.WORDSIZE;
    		this.iLineH[lp]=th;
    		this.iLineY[lp+1]=this.iLineY[lp]+th;
    		for(i=0;i<FormatString.MAXUNIT;i++)
    		{
    			if(this.uls[i].iLp==lp)
    			{//是这一行的
    				if(th<this.uls[i].iH)th=this.uls[i].iH;
    				this.uls[i].iY=this.iLineY[lp]+th-this.uls[i].iH;
    	//			GmPlay.sop("new line:"+this.uls[i].sDetail+","+this.uls[i].iY);
    			}
    		}
    	}

    	FormatEx( s, w, size, type, backcolor, linegap)
    	{
    		this.bEx=true;
    		this.iExType=type;
    		this.iExColor=backcolor;
    		this.iExLineGap=linegap;
    		
    		this.WORDSIZE=size;
    		var i;
    		var isp=0;
    		var iup=0;
    		var ts="";
    		var tc=0xffffffff;
    		this.iW=0;
    		this.ilp=0;
    		
    		for(i=0;i<FormatString.MAXUNIT;i++)
    		{
    			this.uls[i].iLp=-1;
    			this.iLineY[i]=0;
    			this.iLineH[i]=0;
    		}

    		this.iCurrentColor=0xffffffff;
    		this.iOldColor=0xffffffff;
    		this.iSpaceWidth=0;
    		while(isp<s.length)
    		{
    			isp=this.NextUnit(s,isp);//取到，看是否能放下去
    //			GmPlay.sop("isp="+isp);
    			if(this.iCurrentType==0)
    			{
    				if(this.iW+this.pm3f.GetTextWidth(ts+this.sCurrentString, this.WORDSIZE)>=w)
    				{//加上新文字超长
    					this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    					iup=this.AddUnit(this.ilp,iup,0,tc,this.iW,this.pm3f.GetTextHeight(),ts);
    					this.AddLine(this.ilp,iup);
    					this.ilp++;
    					ts=this.sCurrentString;
    					this.iW=0;
    				}
    				else if(this.iCurrentColor!=tc || this.iSpaceWidth>0)
    				{//颜色不同
    					if(ts.length>0)
    					{
    						this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    						iup=this.AddUnit(this.ilp,iup,0,tc,this.iW,this.pm3f.GetTextHeight(),ts);
    						this.iW+=this.pm3f.GetTextWidth(ts, this.WORDSIZE);
    					}
    					ts=this.sCurrentString;
    					tc=this.iCurrentColor;
    					this.iW+=this.iSpaceWidth;
    					this.iSpaceWidth=0;
    				}
    				else
    				{
    					ts+=this.sCurrentString;
    				}
    			}
    			else if(this.iCurrentType==1)
    			{//表情
    				GmPlay$1.xani_face.InitAnimaWithName(this.sCurrentString, this.aa_face);//表情，获取图片高度
    				if(this.aa_face.iDelay<0)continue;//未找到动画
    				if(ts.length>0)
    				{
    					this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    					iup=this.AddUnit(this.ilp,iup,0,tc,this.iW,this.pm3f.GetTextHeight(),ts);
    					this.iW+=this.pm3f.GetTextWidth(ts, this.WORDSIZE);
    				}
    				
    				var tw=GmPlay$1.xani_face.iAnimaW(this.aa_face);
    				var th=GmPlay$1.xani_face.iAnimaH(this.aa_face);
    				if(this.iW+tw>w)
    				{//先换行再加表情
    					this.AddLine(this.ilp,iup);
    					this.ilp++;
    					this.iW=0;
    				}
    				iup=this.AddUnit(this.ilp,iup,1,tc,this.iW,th,this.sCurrentString);//根据表情高度
    				this.iW+=tw;
    				if(this.iW>=w)
    				{//加上新文字超长
    					this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    					this.AddLine(this.ilp,iup);
    					this.ilp++;
    					this.iW=0;
    				}
    				ts="";
    			}
    			else if(this.iCurrentType==2)
    			{//换行
    				this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    				iup=this.AddUnit(this.ilp,iup,0,tc,this.iW,this.pm3f.GetTextHeight(),ts);
    				this.AddLine(this.ilp,iup);
    				this.ilp++;
    				ts=this.sCurrentString;
    				this.iW=0;
    			}
    			else if(this.iCurrentType==3)
    			{//发现锁定头，重新开始字符串cxa
    				if(ts.length>0)
    				{
    					this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    					iup=this.AddUnit(this.ilp,iup,0,tc,this.iW,this.pm3f.GetTextHeight(),ts);
    					this.iW+=this.pm3f.GetTextWidth(ts, this.WORDSIZE);
    				}
    				ts=this.sCurrentString;
    				//加入锁定头
    				iup=this.AddUnit(this.ilp,iup,2,this.iLockRectPoint,this.iW,0,"");
    			}
    			else if(this.iCurrentType==4)
    			{//发现锁定尾，重新开始字符串
    				if(ts.length>0)
    				{
    					this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    					iup=this.AddUnit(this.ilp,iup,0,tc,this.iW,this.pm3f.GetTextHeight(),ts);
    					this.iW+=this.pm3f.GetTextWidth(ts, this.WORDSIZE);
    				}
    				ts=this.sCurrentString;
    				//加入锁定尾
    				iup=this.AddUnit(this.ilp,iup,3,this.iLockRectPoint,this.iW,0,"");
    			}
    		}
    		if(ts!="")
    		{
    			this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    			iup=this.AddUnit(this.ilp,iup,0,tc,this.iW,this.pm3f.GetTextHeight(),ts);
    			this.iW+=this.pm3f.GetTextWidth(ts, this.WORDSIZE);
    		}
    		this.AddLine(this.ilp,iup);
    		this.ilp++;
    		this.iH=this.ilp*this.WORDSIZE;
    		this.iH=this.iLineY[this.ilp];
    		if(this.ilp>=2)this.iW=w;
    	}
    	
    	
    	Format( s, w, size)
    	{
    		this.bEx=false;
    //		GmPlay.sop(s);
    		this.WORDSIZE=size;
    		var i;
    		var isp=0;
    		var iup=0;
    		var ts="";
    		var tc=0xffffffff;
    		this.iW=0;
    		this.ilp=0;
    		
    		for(i=0;i<FormatString.MAXUNIT;i++)
    		{
    			this.uls[i].iLp=-1;
    			this.iLineY[i]=0;
    			this.iLineH[i]=0;
    		}

    		this.iCurrentColor=0xffffffff;
    		this.iSpaceWidth=0;
    		while(isp<s.length)
    		{
    			isp=this.NextUnit(s,isp);//取到，看是否能放下去
    //			GmPlay.sop("isp="+isp);
    			if(this.iCurrentType==0)
    			{
    				if(this.iW+this.pm3f.GetTextWidth(ts+this.sCurrentString, this.WORDSIZE)>=w)
    				{//加上新文字超长
    					this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    					iup=this.AddUnit(this.ilp,iup,0,tc,this.iW,this.pm3f.GetTextHeight(),ts);
    					this.AddLine(this.ilp,iup);
    					this.ilp++;
    					ts=this.sCurrentString;
    					this.iW=0;
    				}
    				else if(this.iCurrentColor!=tc || this.iSpaceWidth>0)
    				{//颜色不同
    					if(ts.length>0)
    					{
    						this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    						iup=this.AddUnit(this.ilp,iup,0,tc,this.iW,this.pm3f.GetTextHeight(),ts);
    						this.iW+=this.pm3f.GetTextWidth(ts, this.WORDSIZE);
    					}
    					ts=this.sCurrentString;
    					tc=this.iCurrentColor;
    					this.iW+=this.iSpaceWidth;
    					this.iSpaceWidth=0;
    				}
    				else
    				{
    					ts+=this.sCurrentString;
    				}
    			}
    			else if(this.iCurrentType==1)
    			{//表情
    				GmPlay$1.xani_face.InitAnimaWithName(this.sCurrentString, this.aa_face);//表情，获取图片高度
    				if(this.aa_face.iDelay<0)continue;//未找到动画
    				if(ts.length>0)
    				{
    					this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    					iup=this.AddUnit(this.ilp,iup,0,tc,this.iW,this.pm3f.GetTextHeight(),ts);
    					this.iW+=this.pm3f.GetTextWidth(ts, this.WORDSIZE);
    				}
    				var tw=GmPlay$1.xani_face.iAnimaW(this.aa_face);
    				var th=GmPlay$1.xani_face.iAnimaH(this.aa_face);
    				if(this.iW+tw>w)
    				{//先换行再加表情
    					this.AddLine(this.ilp,iup);
    					this.ilp++;
    					this.iW=0;
    				}
    				iup=this.AddUnit(this.ilp,iup,1,tc,this.iW,th,this.sCurrentString);//根据表情高度
    				this.iW+=tw;
    				if(this.iW>=w)
    				{//加上新文字超长
    					this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    					this.AddLine(this.ilp,iup);
    					this.ilp++;
    					this.iW=0;
    				}
    				ts="";
    			}
    			else if(this.iCurrentType==2)
    			{//换行
    				this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    				iup=this.AddUnit(this.ilp,iup,0,tc,this.iW,this.pm3f.GetTextHeight(),ts);
    				this.AddLine(this.ilp,iup);
    				this.ilp++;
    				ts=this.sCurrentString;
    				this.iW=0;
    			}
    			else if(this.iCurrentType==3)
    			{//发现锁定头，重新开始字符串cxa
    				if(ts.length>0)
    				{
    					this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    					iup=this.AddUnit(this.ilp,iup,0,tc,this.iW,this.pm3f.GetTextHeight(),ts);
    					this.iW+=this.pm3f.GetTextWidth(ts, this.WORDSIZE);
    				}
    				ts=this.sCurrentString;
    				//加入锁定头
    				iup=this.AddUnit(this.ilp,iup,2,this.iLockRectPoint,this.iW,0,"");
    //				GmPlay.sop("start lock="+this.iLockRectPoint);
    			}
    			else if(this.iCurrentType==4)
    			{//发现锁定尾，重新开始字符串
    				if(ts.length>0)
    				{
    					this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    					iup=this.AddUnit(this.ilp,iup,0,tc,this.iW,this.pm3f.GetTextHeight(),ts);
    					this.iW+=this.pm3f.GetTextWidth(ts, this.WORDSIZE);
    				}
    				ts=this.sCurrentString;
    				//加入锁定尾
    				iup=this.AddUnit(this.ilp,iup,3,this.iLockRectPoint,this.iW,0,"");
    //				GmPlay.sop("end lock="+this.iLockRectPoint);
    			}
    		}
    		if(ts!="")
    		{
    			this.pm3f.GetTextWidth(ts,this.WORDSIZE);//获得当前字符宽高
    			iup=this.AddUnit(this.ilp,iup,0,tc,this.iW,this.pm3f.GetTextHeight(),ts);
    			this.iW+=this.pm3f.GetTextWidth(ts, this.WORDSIZE);
    		}
    		this.AddLine(this.ilp,iup);
    		this.ilp++;
    		this.iH=this.ilp*this.WORDSIZE;
    		this.iH=this.iLineY[this.ilp];
    		if(this.ilp>=2)this.iW=w;
    	}
    	Draw( iOx, iOy)
    	{
    		var i;
    		for(i=0;i<FormatString.MAXUNIT;i++)
    		{
    //			GmPlay.sop("lp : "+this.uls[i].iLp);
    			if(this.uls[i].iLp==-1)return;
    			switch(this.uls[i].iType)
    			{
    			case 0:
    //				GmPlay.sop("Draw : "+this.uls[i].sDetail);
    				if(this.bEx)this.pm3f.DrawText_2(iOx+this.uls[i].iX, iOy+this.uls[i].iY, this.uls[i].sDetail, this.uls[i].iColor, this.WORDSIZE, 101, 1, 1, 0, 0, 0,this.iExType,this.iExColor);
    				else this.pm3f.DrawTextEx(iOx+this.uls[i].iX, iOy+this.uls[i].iY, this.uls[i].sDetail, this.uls[i].iColor, this.WORDSIZE, 101, 1, 1, 0, 0, 0);
    				break;
    			case 1://表情
    //				GmPlay.sop("face="+this.uls[i].sDetail);
    				GmPlay$1.xani_face.InitAnimaWithName(this.uls[i].sDetail, this.aa_face);
    				this.aa_face.SetFrame(GmPlay$1.iDelay);
    //				DrawBuffer.gi().DrawAnima_aa(iOy+iH+100, null, iOx+this.uls[i].iX, iOy+this.uls[i].iY+20, this.aa_face);
    //				this.aa_face.xani.DrawAnimaEx(iOx+this.uls[i].iX, iOy+this.uls[i].iY+20, this.aa_face, 101, 1, 1, 0, 0, 0);
    				this.aa_face.DrawEx(iOx+this.uls[i].iX, iOy+this.uls[i].iY, 101, 1, 1, 0, -1, -1);
    				break;
    			}
    		}
    	}
    	DrawToBuffer( ly, iOx, iOy)
    	{
    		var i;
    		for(i=0;i<FormatString.MAXUNIT;i++)
    		{
    //			GmPlay.sop("lp : "+this.uls[i].iLp);
    			if(this.uls[i].iLp==-1)return;
    			switch(this.uls[i].iType)
    			{
    			case 0:
    //				GmPlay.sop("Draw : "+this.uls[i].sDetail);
    				DrawBuffer.gi().DrawText(ly, 0, iOx+this.uls[i].iX, iOy+this.uls[i].iY, this.uls[i].sDetail, this.uls[i].iColor,this.WORDSIZE);
    //				this.pm3f.DrawTextEx(iOx+this.uls[i].iX, iOy+this.uls[i].iY, this.uls[i].sDetail, this.uls[i].iColor, 30, 101, 1, 1, 0, 0, 0);
    				break;
    			case 1://表情
    //				GmPlay.sop("face="+this.uls[i].sDetail);
    				GmPlay$1.xani_face.InitAnimaWithName(this.uls[i].sDetail, this.aa_face);
    				this.aa_face.SetFrame(GmPlay$1.iDelay);
    //				DrawBuffer.gi().DrawAnima_aa(iOy+iH+100, null, iOx+this.uls[i].iX, iOy+this.uls[i].iY+20, this.aa_face);
    //				DrawBuffer.gi().DrawAnimaEx(iOy+iH+100, iOx+this.uls[i].iX, iOy+this.uls[i].iY, this.aa_face, 101, 1, 1, 0, 0, 0);
    				DrawBuffer.gi().DrawAnimaEx(ly, iOx+this.uls[i].iX, iOy+this.uls[i].iY, this.aa_face, 101, 1, 1, 0, -1, -1);
    				break;
    			}
    		}
    	}
    }
    FormatString.KEY='#';
    FormatString.MAXUNIT=64;
    FormatString.fs=null;
    FormatString.gi=function()
    {
    	if(FormatString.fs==null)FormatString.fs=new FormatString();
    	return FormatString.fs;
    };

    class MessageList
    {/*
    	public int iDelay;
    	public String sMessage;*/
    	constructor()
    	{
    		this.sMessage="";
    	}
    }
    class EasyMessage{

    	constructor()
    	{
    		var i;
    		this.pm3f=M3DFast$1.xm3f;
    		
    		this.iMessageCount=0;
    		this.messages=new Array(EasyMessage.MAXMESSAGE);//
    		for(i=0;i<EasyMessage.MAXMESSAGE;i++)
    		{
    			this.messages[i]=new MessageList();
    		}
    		this.snap_atts=new Int32Array(6);//
    		this.iShowDelay=-1;
    		this.bDisable=false;
    	}
    	snapatt()
    	{
    		this.snap_atts[0]=GmMe$1.me.rbs.iMaxHp;
    		this.snap_atts[1]=GmMe$1.me.rbs.iMaxMp;
    		this.snap_atts[2]=GmMe$1.me.rbs.iAttack;
    		this.snap_atts[3]=GmMe$1.me.rbs.iDefence;
    		this.snap_atts[4]=GmMe$1.me.rbs.iSpirit;
    		this.snap_atts[5]=GmMe$1.me.rbs.iSpeed;
    //		GmPlay.sop("record attack="+GmMe.me.rbs.iAttack);
    	}
    	calcattchanged()
    	{
    //		GmPlay.sop("now attack="+GmMe.me.rbs.iAttack);
    		this.snap_atts[0]=GmMe$1.me.rbs.iMaxHp-this.snap_atts[0];
    		this.snap_atts[1]=GmMe$1.me.rbs.iMaxMp-this.snap_atts[1];
    		this.snap_atts[2]=GmMe$1.me.rbs.iAttack-this.snap_atts[2];
    		this.snap_atts[3]=GmMe$1.me.rbs.iDefence-this.snap_atts[3];
    		this.snap_atts[4]=GmMe$1.me.rbs.iSpirit-this.snap_atts[4];
    		this.snap_atts[5]=GmMe$1.me.rbs.iSpeed-this.snap_atts[5];
    		this.iShowCount=0;
    		for(var i=0;i<6;i++){
    			if(this.snap_atts[i]!=0){
    				this.iShowCount++;
    				this.AddMessage(this.getdetail(i,this.snap_atts[i]));
    			}
    		}
    //		if(this.iShowCount>0)this.iShowDelay=201;
    	}
    	addflag( d){
    		if(d>0)return "+"+d;
    		else return ""+d;
    	}
    	getdetail(p, d){
    		switch(p){
    			case 0:return "气血上限"+this.addflag(d);
    			case 1:return "魔法上限"+this.addflag(d);
    			case 2:return "攻击力"+this.addflag(d);
    			case 3:return "防御力"+this.addflag(d);
    			case 4:return "灵力"+this.addflag(d);
    			case 5:return "速度"+this.addflag(d);
    			default:return "null";
    		}
    	}
    	drawattchanged()
    	{
    		if(this.iShowDelay<=0)return;
    		var offy=GmConfig$1.SCRH/2-(this.iShowCount*80)/2;
    		var j=0;
    		for(var i=0;i<6;i++){
    			if(this.snap_atts[i]!=0){
    				this.pm3f.DrawTextEx(GmConfig$1.SCRW/2-2, offy+j*80, this.getdetail(i,this.snap_atts[i]), 0xff000000, 60, this.iShowDelay, 1, 1, 0, -2, 0);
    				this.pm3f.DrawTextEx(GmConfig$1.SCRW/2+2, offy+j*80, this.getdetail(i,this.snap_atts[i]), 0xff000000, 60, this.iShowDelay, 1, 1, 0, -2, 0);
    				this.pm3f.DrawTextEx(GmConfig$1.SCRW/2, offy+j*80-2, this.getdetail(i,this.snap_atts[i]), 0xff000000, 60, this.iShowDelay, 1, 1, 0, -2, 0);
    				this.pm3f.DrawTextEx(GmConfig$1.SCRW/2, offy+j*80+2, this.getdetail(i,this.snap_atts[i]), 0xff000000, 60, this.iShowDelay, 1, 1, 0, -2, 0);
    				this.pm3f.DrawTextEx(GmConfig$1.SCRW/2, offy+j*80, this.getdetail(i,this.snap_atts[i]), this.snap_atts[i]>0?0xff00ff00:0xffff0000, 60, this.iShowDelay>101?101:this.iShowDelay, 1, 1, 0, -2, 0);
    				j++;
    			}
    		}
    		this.iShowDelay-=5;
    	}
    	Clear()
    	{
    		this.iMessageCount=0;
    	}
    	AddMessage( msg)
    	{
    		var i;
    		if(this.iMessageCount>=EasyMessage.MAXMESSAGE)this.iMessageCount=EasyMessage.MAXMESSAGE-1;
    		for(i=this.iMessageCount;i>0;i--)
    		{
    			this.messages[i].sMessage=this.messages[i-1].sMessage;
    			this.messages[i].iDelay=this.messages[i-1].iDelay;
    		}
    		this.messages[0].sMessage=msg;
    		this.messages[0].iDelay=EasyMessage.MESSAGEDELAY;
    		this.iMessageCount++;
    	}

    	Draw()
    	{
    		if(this.bDisable)
    		{
    			if(XStat$1.gi().iXStat!=XStat$1.GS_PROMPTACTIVITY)this.bDisable=false;
    			return;
    		}
    		this.drawattchanged();
    		var i;
    		var m,n;

    		var w,h;
    		for(i=0;i<this.iMessageCount;i++)
    		{
    //			j=this.pm3f.GetTextWidth(this.messages[i].sMessage, 20);
    //			m=(GmConfig.SCRW-j-4)/2;
    //			n=GmConfig.SCRH-24*(i+1);
    //			this.pm3f.FillRect_2D(m, n, m+j+4, n+24, 0x50000000);
    //			this.pm3f.DrawRect_2D(m, n, m+j+4, n+24, 0xffffffff);
    //			this.pm3f.DrawTextEx(m+2,n+2, this.messages[i].sMessage, 0xffffff00, 20, 101, 1, 1, 0, 0, 0);
    //			this.messages[i].iDelay--;
    			FormatString.gi().Format("#cffff00"+this.messages[i].sMessage, 800, 26);
    			w=FormatString.gi().iW;
    			h=32;
    			m=(GmConfig$1.SCRW-w-4)/2;
    			n=GmConfig$1.SCRH-h*(i+1)-1;
    			EasyMessage.new_Text(m,n,w+4);
    //			this.pm3f.FillRect_2D(m, n, m+w+4, n+h, 0x50000000);
    //			this.pm3f.DrawRect_2D(m, n, m+w+4, n+h, 0xffffffff);
    			FormatString.gi().Draw(m+2, n+3);
    //			this.pm3f.DrawTextEx(m+2,n+2, this.messages[i].sMessage, 0xffffff00, 20, 101, 1, 1, 0, 0, 0);
    			this.messages[i].iDelay--;
    		}
    		if(this.iMessageCount>0 && this.messages[this.iMessageCount-1].iDelay<=0)this.iMessageCount--;
    	}
    	ProcTouch( msg, x, y)
    	{
    		return false;
    	}
    }
    EasyMessage.MAXMESSAGE=10;
    EasyMessage.MESSAGEDELAY=100;

    EasyMessage.easymsg=new EasyMessage();
    EasyMessage.new_Text=function( x, y, w)
    {
    	GmPlay$1.xani_nui2.DrawAnimaEx(x, y, "可变长文字框",0,60,1.0,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    	GmPlay$1.xani_nui2.DrawAnimaEx(x+15, y, "可变长文字框",1,60,1.0*(w-30)/20,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    	GmPlay$1.xani_nui2.DrawAnimaEx(x+w-20, y, "可变长文字框",2,60,1.0,1.0,0,0,0);//iX+50, iY+65+i*45, 128, 32
    };

    class MyTeam$1 {

    //	public static MyTeam mt;
    	
    	constructor()
    	{
    //		MyTeam.iTeamRid=new Int32Array(5);//
    //		MyTeam.iTmpTeamRid=new Array(5);//
    		
    //		mt=this;
    	}

    }
    MyTeam$1.bAway=function()
    {//暂离状态
    	var i;
    	for (i = 1; i < 5; i++) 
    	{
    		if (MyTeam$1.iTmpTeamRid[i] == GmMe$1.me.iRid)
    		{//在队伍中
    			if(MyTeam$1.iTeamRid[i]<=0)
    			{//处于暂离
    				return true;
    			}
    		}
    	}
    	return false;
    };
    MyTeam$1.bNoTeam=function()
    {
    	if(MyTeam$1.iTmpTeamRid[0]<=0)return true;
    	return false;
    };
    MyTeam$1.bInTeam=function()
    {
    	if(MyTeam$1.iTmpTeamRid[0]>0)return true;
    	return false;
    };
    MyTeam$1.bTeamLeader=function()
    {
    	if(MyTeam$1.iTmpTeamRid[0]==GmMe$1.me.iRid)return true;
    	return false;
    };
    MyTeam$1.bInTmpTeam=function( rid) 
    {
    	var i;
    	if (MyTeam$1.iTmpTeamRid[0] <= 0)return false;
    	for (i = 0; i < 5; i++) 
    	{
    		if (MyTeam$1.iTmpTeamRid[i] == rid)return true;
    	}
    	return false;
    };
    MyTeam$1.bFullTeam=function()
    {
    	var i;
    	for(i=0;i<5;i++)
    	{
    		if(MyTeam$1.iTeamRid[i]<=0)return false;
    	}
    	return true;
    };
    MyTeam$1.iTeamRid=[0,0,0,0,0];
    MyTeam$1.iTmpTeamRid=[0,0,0,0,0];
    MyTeam$1.sName=["","","","",""];
    MyTeam$1.iRas=[0,0,0,0,0];
    MyTeam$1.iSchoolId=[0,0,0,0,0];
    MyTeam$1.iLev=[0,0,0,0,0];
    MyTeam$1.iColor=new Array(5);//
    for(var i=0;i<5;i++)MyTeam$1.iColor[i]=new Int32Array(10);
    MyTeam$1.iWeapTid=[0,0,0,0,0];
    MyTeam$1.sMapName=["","","","",""];

    MyTeam$1.iTeamTarget=0;
    MyTeam$1.iLev1=0,MyTeam$1.iLev2=100;
    MyTeam$1.bLeaderAutoTeaming=false;
    MyTeam$1.bSingleAutoTeaming=false;

    class _EXTDATA {
    //	public int type;//扩展类型：0物品，1宠物，2语音，3自己，4队伍
    //	public int eid,tid;//真实id,类型
    //	public String name,detail;//名称,语音的翻译结果
    //	public int iShowDelay;
    	 _EXTDATA()
    	{
    		this.iShowDelay=0;
    	}
    	copyfrom( e)
    	{
    		this.type=e.type;
    		this.eid=e.eid;
    		this.tid=e.tid;
    		this.name=e.name;
    		this.detail=e.detail;
    		this.iShowDelay=e.iShowDelay;
    	}
    }

    class PrivateMessage {
    	
    	 constructor()
    	{
    		this.iRid=0;
    		this.sName="";
    		this.sTime="";
    		this.sDetail="";
    		this.bFriend=false;
    		
    		var i;
    		this.exts=new Array(5);//
    		this.lrs_small=new Array(5);//
    		for(i=0;i<5;i++)
    		{
    			this.exts[i]=new _EXTDATA();
    			this.lrs_small[i]=new LockRect();
    		}
    	}
    	 copyfrom( pvm)
    	{
    		this.iSession=pvm.iSession;
    		this.iRid=pvm.iRid;
    		this.sName=pvm.sName;
    		this.iDRid=pvm.iDRid;
    		this.sTime=pvm.sTime;
    		this.sDetail=pvm.sDetail;
    		this.bFriend=pvm.bFriend;
    		
    		this.iRax=pvm.iRax;
    		this.iFlag=pvm.iFlag;

    		this.exts[0].copyfrom(pvm.exts[0]);
    		this.exts[1].copyfrom(pvm.exts[1]);
    		this.exts[2].copyfrom(pvm.exts[2]);
    		this.exts[3].copyfrom(pvm.exts[3]);
    		this.exts[4].copyfrom(pvm.exts[4]);
    	}
    }

    class _TEFFECT
    {
    //	boolean bUseing;
    //	int iX,iY;
    //	short iFrame;
    constructor()
    {

    }
    }

    class TouchEffect {
    /*	_TEFFECT t;

    	AnimaAction aa_t=null;
    	*/
    	
    	constructor()
    	{
    		this.MAXT=32;
    		this.t=new Array(this.MAXT);//
    		for(var i=0;i<this.MAXT;i++)
    		{
    			this.t[i]=new _TEFFECT();
    			this.t[i].bUseing=false;
    		}
    		this.aa_t=null;
    	}
    	Add( x, y)
    	{//先看距离很近的跳过
    		for(var i=0;i<this.MAXT;i++)
    		{
    			if(this.t[i].bUseing)
    			{
    				if(XDefine$1.llength(x, y, this.t[i].iX, this.t[i].iY)<30)return;
    			}
    		}
    		for(var i=0;i<this.MAXT;i++)
    		{
    			if(!this.t[i].bUseing)
    			{
    				this.t[i].bUseing=true;
    				this.t[i].iX=x;
    				this.t[i].iY=y;
    				this.t[i].iFrame=0;
    				break;
    			}
    		}
    	}
    	 Draw()
    	{
    		var i;
    		if(this.aa_t==null)this.aa_t=GmPlay$1.xani_nui3.InitAnimaWithName("点击效果",null);
    		for(i=0;i<this.MAXT;i++)
    		{
    			if(this.t[i].bUseing)
    			{
    				this.aa_t.iFrame=this.t[i].iFrame;
    				this.aa_t.Draw(MapManager.gi().iOffx+this.t[i].iX, MapManager.gi().iOffy+this.t[i].iY);
    				this.t[i].iFrame++;
    				if(this.t[i].iFrame>=13)this.t[i].bUseing=false;
    			}
    		}
    	}
    }
    TouchEffect.te=new TouchEffect();

    class BASESEQUENCE
    {//基础序列
        constructor()
        {
            this.iType=0;
        }
    }

    class SE_SELECT extends BASESEQUENCE
    {//序列-选择4
    /*	public static int MAXSELECTCOUNT=6;
    	public int iCount;//答案数量
    	public String sHead;
    	public String sQuestion;
    	public String sAnswers;
    	public BASESEQUENCE next;
        */
       constructor()
       {
           super();
           this.sHead="";
           this.iCount=0;
           this.sQuestion="";
           var i;
           this.sAnswers=new Array(SE_SELECT.MAXSELECTCOUNT);
           this.next=new Array(SE_SELECT.MAXSELECTCOUNT);
           for(i=0;i<SE_SELECT.MAXSELECTCOUNT;i++)
           {
               this.next[i]=null;
               this.sAnswers[i]="";
           }
       }
    	  copyfrom( se)
    	{
    		this.iCount=se.iCount;
    		this.sHead=se.sHead;
    		this.sQuestion=se.sQuestion;
    		for(var i=0;i<SE_SELECT.MAXSELECTCOUNT;i++)
    		{
    			this.sAnswers[i]=se.sAnswers[i];
    			this.next[i]=se.next[i];
    		}
    	}
    	 AddSelect( answer, sn)
    	{
    		if(this.iCount>=SE_SELECT.MAXSELECTCOUNT)return;
    		this.sAnswers[this.iCount]=answer;
    		this.next[this.iCount]=sn;
    		this.iCount++;
    	}

    }
    SE_SELECT.MAXSELECTCOUNT=6;

    class FrameMessage {
    	
    	
    	FrameMessage()
    	{
    		this.iW=300;
    		this.iH=200;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.pm3f=M3DFast$1.xm3f;
    		this.bShow=false;
    	}
    	Open( s)
    	{
    		this.sDetail=s;
    		this.bShow=true;
    		
    		this.iW=GmConfig$1.SCRW/2;
    		this.iH=200;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    //		this.iX+=100;
    		this.iY=GmConfig$1.SCRH/2-10;
    		
    //		MapManager.gi().vbk.mapdialog.bDialoging=false;
    		this.bLock=true;
    	}
    	
    	Draw()
    	{
    		if(!this.bShow)return;
    //		this.pm3f.FillRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0xff000000);
    		
    		this.iW=500;
    		this.iH=200;
    		
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2+40;
    		
    		
    //		FormatString.gi().Format("#cffffff"+this.sDetail, this.iW-40, 25);
    //		FormatString.gi().Format("#c000000"+this.sDetail, this.iW-40, 25);
    		
    //		FormatString.gi().Format("#c000000"+this.sDetail, this.iW-40, 22);
    //		FormatString.gi().Draw(this.iX+20+1, this.iY+20+1);
    //		FormatString.gi().Format("#cffff00"+this.sDetail, this.iW-40, 22);
    //		FormatString.gi().Draw(this.iX+20, this.iY+20);
    		FormatString.gi().FormatEx("#cffff00"+this.sDetail, this.iW-50, 30,1,0xff000000,35);
    		
    		this.iH=240;
    		if(FormatString.gi().iH+50>this.iH)this.iH=FormatString.gi().iH+50;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2+40;
    		DrawMode$1.new_framewatch(this.iX, this.iY, this.iW, this.iH);
    		
    		FormatString.gi().Draw(this.iX+25, this.iY+25);
    		
    //		FormatString.gi().Format("#c00ff00"+this.sDetail, this.iW-20, 25);
    //		if(FormatString.gi().iH<100)this.iH=120;
    //		else this.iH=FormatString.gi().iH+20;
    //		DrawMode.Frame1_BR(this.iX,this.iY,this.iW,this.iH);
    //		FormatString.gi().Draw(this.iX+10, this.iY+10);
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		if(!this.bShow)return false;
    		if(msg==1)this.bLock=false;
    		if(msg==3 && !this.bLock)
    		{
    			this.bShow=false;
    		}
    		return true;
    	}
    }
    FrameMessage.fm=new FrameMessage();

    class _DIALOGRECORD
    {
        constructor()
        {

        }
    /*	public String sName;
    	public String sHead;
    	public String sDetail;*/
    }
    class _NEWDIALOG1
    {//新剧情模式
        constructor()
        {

        }
    /*	public String sName;
    	public int iNpcId;
    	public AnimaAction aa_shot;
    	public String sDetail;*/
    }
    class _NEWDIALOG2
    {//新对话模式
        constructor()
        {

        }
    /*	public String sName;
    	public int iNpcId;
    	public AnimaAction aa_shot;
    	public String sDetail;
    	public XButtonEx2 btn_sel;*/
    }
    class MapDialog {
    	 constructor( m3f, vb)
    	{
    		this.xm3f=m3f;
    		this.vbk=vb;
    		this.bDialoging=false;
    		
    		this.iW=410;
    		this.iH=200;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;

    //		this.iX+=100;
    		this.iY=GmConfig$1.SCRH/2-10;

    		var i;
    		this.drs=new Array(16);//
    		for(i=0;i<16;i++)this.drs[i]=new _DIALOGRECORD();

    		this.iDRCount=0;
    		this.aa_head=new AnimaAction();

    		this.nd1=new _NEWDIALOG1();
    		this.nd2=new _NEWDIALOG2();
    		this.nd2.btn_sel=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.nd2.btn_sel[i]=null;
    		}
    		
    		MapDialog.md=this;
    		this.aa_f1=null;
    		this.aa_f2=null;
    		this.res_shadow=-1;
    	}
    	 btstring( b, off, len)
    	{
    		var ret="";
    		for(var i=0;i<len;i++)
    		{
    			ret+=b[off+i];
    		}

    		return ret;
    	}
    	InitDialog( ps, npcname)
    	{
    		GmPlay$1.sop("head==="+ps.sHead);
    		var s;
    		this.iW=GmConfig$1.SCRW/2;
    //		this.iH=200;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		var i,j,k;
    		
    		this.pSelect=ps;
    		this.iPoint=-1;
    		this.bDown=false;

    //		this.iX+=100;
    		this.iY=GmConfig$1.SCRH/2-10;
    		
    		///判断类型
    		//@:n村长@:h村长@:d大家好
    /*		var bs=new Array();
    		for(var i=0;i<ps.sQuestion.length;i++)
    		{
    			bs[i]=ps.sQuestion.
    		}*/
    		var bs=ps.sQuestion.split("");
    //		var bs=ps.sQuestion.getBytes();
    		if(bs[0]=='@' && bs[1]=='0')
    		{//新剧情模式@0n001t主句
    			this.nd1.aa_shot=null;
    			this.bDialoging=true;
    			this.iDialogType=4;
    			this.bDown=false;
    			for(i=0;i<bs.length;i++)
    			{
    				if(bs[i]=='n')
    				{//固定后3个字符
    					this.nd1.iNpcId=parseInt(""+bs[i+1]+bs[i+2]+bs[i+3]);//npcid
    					//取出n080->name，shot
    					if(this.nd1.iNpcId==501)
    					{//自己未来
    						this.nd1.sName=GmMe$1.me.sName+"(未来)";
    						s=GmMe$1.sRace(GmMe$1.me.iRace)+"_"+GmMe$1.sSex(GmMe$1.me.iSex)+"未来";
    						this.nd1.aa_shot=GmPlay$1.xani_shot[0].InitAnimaWithName(s, null);
    					}
    					else if(this.nd1.iNpcId==500)
    					{//主角
    						this.nd1.sName=GmMe$1.me.sName;
    						s=GmMe$1.sRace(GmMe$1.me.iRace)+"_"+GmMe$1.sSex(GmMe$1.me.iSex);
    						this.nd1.aa_shot=GmPlay$1.xani_shot[0].InitAnimaWithName(s, null);
    					}
    					else
    					{//npc
    						this.nd1.sName=GmPlay$1.de_npc.strValue(this.nd1.iNpcId, 0, 1);
    						if(npcname!=null && npcname.length>0)this.nd1.sName=npcname;
    						j=GmPlay$1.de_npc.intValue(this.nd1.iNpcId, 0, 9);
    						if(j>=0 && j<=1)this.nd1.aa_shot=GmPlay$1.xani_shot[j].InitAnimaWithName(GmPlay$1.de_npc.strValue(this.nd1.iNpcId, 0, 10), null);
    						GmPlay$1.sop(this.nd1.iNpcId+this.nd1.sName+j);
    					}
    					if(ps.sHead.length>0)this.nd1.sName=ps.sHead;
    //					s=(char(bs[i+1])+char(bs[i+2])+char(bs[i+3]));
    					i+=3;
    				}
    				if(bs[i]=='t')
    				{//对话内容//取出t......->detail
    					this.nd1.sDetail=this.btstring(bs,i+1,bs.length-i-1);
    				}
    			}
    			return;
    		}
    		if(bs[0]=='@' && bs[1]=='1')
    		{//新对话框模式，只有一句话
    			//@1n080t一见刘郎动心弦，只羡鸳鸯不羡仙
    			//@1n082t一心惟愿踏青云，平步玉宇与琼林
    			//@1n081t少侠武术修为深厚，却长时间原地徘徊无法突破提升？建议你以退为进，厚积薄发！
    			if(this.pSelect.iCount>0)
    			{
    				for(i=0;i<this.pSelect.iCount;i++)
    				{
    					if(this.nd2.btn_sel[i]==null)
    					{
    						this.nd2.btn_sel[i]=new XButtonEx2$1(GmPlay$1.xani_nui4);
    						this.nd2.btn_sel[i].InitButton("操作选项按钮");//272,54
    					}
    					this.nd2.btn_sel[i].sName=this.pSelect.sAnswers[i];
    					this.nd2.btn_sel[i].Move(GmConfig$1.SCRW-40-30-272, GmConfig$1.SCRH-160-20-((this.pSelect.iCount-1)*20+2*20+this.pSelect.iCount*54)+20+i*(54+20), 272, 54);
    				}
    			}
    			this.nd2.aa_shot=null;
    			this.bDialoging=true;
    			this.iDialogType=3;
    			for(i=0;i<bs.length;i++)
    			{
    				if(bs[i]=='n')
    				{//固定后3个字符
    					this.nd2.iNpcId=parseInt(""+bs[i+1]+bs[i+2]+bs[i+3]);//npcid
    					//取出n080->name，shot
    					if(this.nd2.iNpcId==500)
    					{//主角
    						this.nd2.sName=GmMe$1.me.sName;
    						s=GmMe$1.sRace(GmMe$1.me.iRace)+"_"+GmMe$1.sSex(GmMe$1.me.iSex);
    						this.nd2.aa_shot=GmPlay$1.xani_shot[0].InitAnimaWithName(s, null);
    					}
    					else
    					{//npc
    						this.nd2.sName=GmPlay$1.de_npc.strValue(this.nd2.iNpcId, 0, 1);
    						if(npcname!=null && npcname.length>0)this.nd2.sName=npcname;
    						j=GmPlay$1.de_npc.intValue(this.nd2.iNpcId, 0, 9);
    						if(j>=0 && j<=1)this.nd2.aa_shot=GmPlay$1.xani_shot[j].InitAnimaWithName(GmPlay$1.de_npc.strValue(this.nd2.iNpcId, 0, 10), null);
    						GmPlay$1.sop(this.nd2.iNpcId+this.nd2.sName+j);
    					}
    					if(ps.sHead.length>0)this.nd2.sName=ps.sHead;
    //					s=(char(bs[i+1])+char(bs[i+2])+char(bs[i+3]));
    					i+=3;
    				}
    				if(bs[i]=='t')
    				{//对话内容//取出t......->detail
    					this.nd2.sDetail=this.btstring(bs,i+1,bs.length-i-1);
    				}
    			}
    			return;
    		}
    		if(bs[0]=='@' && bs[1]=='2')
    		{//framemessage
    			FrameMessage.fm.Open(this.btstring(bs,2,bs.length-2));
    			return;
    		}
    		if(bs[0]=='@' && bs[1]==':')
    		{//剧情模式
    			if(this.bDialoging && this.iDialogType==1)
    			{
    			}
    			else
    			{
    				this.iDRCount=0;
    				this.iH=60;
    			}
    			
    			this.drs[this.iDRCount].sName="";
    			this.drs[this.iDRCount].sHead="";
    			this.drs[this.iDRCount].sDetail="";
    			
    			for(i=0;i<bs.length;i++)
    			{
    				if(bs[i]=='@' && bs[i+1]==':')
    				{//遇到一个节点
    					j=i+3;
    					k=0;
    					while(j+k<bs.length)
    					{
    						if(bs[j+k]=='@' && bs[j+k+1]==':')break;
    						k++;
    					}
    					GmPlay$1.sop1("len="+bs.length+",j="+j+",k="+k);
    					if(bs[i+2]=='n')
    					{//名字
    						this.drs[this.iDRCount].sName=this.btstring(bs,j,k);
    						GmPlay$1.sop1("name="+this.drs[this.iDRCount].sName);
    					}
    					else if(bs[i+2]=='h')
    					{//头像动画
    						this.drs[this.iDRCount].sHead=this.btstring(bs,j,k);
    						GmPlay$1.sop1("head="+this.drs[this.iDRCount].sHead);
    					}
    					else if(bs[i+2]=='d')
    					{//对话详细内容
    						this.drs[this.iDRCount].sDetail=this.btstring(bs,j,k);
    						GmPlay$1.sop1("detail="+this.drs[this.iDRCount].sDetail);
    						this.tmwait=200+this.drs[this.iDRCount].sDetail.length*50;
    						this.tmwait=50;
    					}
    				}
    			}
    			this.bDialoging=true;
    			this.iDialogType=1;
    			this.iDRCount++;
    //			if(this.tmwait<1000)this.tmwait=1000;
    //			else if(this.tmwait>3000)this.tmwait=3000;
    			this.tm1=XDefine$1.get_ms();
    			return;
    		}
    		if(bs[0]=='!' && bs[1]==':')
    		{//新对话模式,有头像n，名字h，内容d
    //			if(this.bDialoging && this.iDialogType==2)
    //			{
    //			}
    //			else
    //			{
    //				this.iDRCount=0;
    //				this.iH=60;
    //			}
    			
    			this.drs[0].sName="";
    			this.drs[0].sHead="";
    			this.drs[0].sDetail="";

    			for(i=0;i<bs.length;i++)
    			{
    				if(bs[i]=='!' && bs[i+1]==':')
    				{//遇到一个节点
    					j=i+3;
    					k=0;
    					while(j+k<bs.length)
    					{
    						if(bs[j+k]=='!' && bs[j+k+1]==':')break;
    						k++;
    					}
    					GmPlay$1.sop1("len="+bs.length+",j="+j+",k="+k);
    					if(bs[i+2]=='n')
    					{//名字
    						this.drs[0].sName=this.btstring(bs,j,k);
    						GmPlay$1.sop1("name="+this.drs[0].sName);
    					}
    					else if(bs[i+2]=='h')
    					{//头像动画
    						this.drs[0].sHead=this.btstring(bs,j,k);
    						GmPlay$1.sop1("head="+this.drs[0].sHead);
    					}
    					else if(bs[i+2]=='d')
    					{//对话详细内容
    						this.drs[0].sDetail=this.btstring(bs,j,k);
    						GmPlay$1.sop1("detail="+this.drs[0].sDetail);
    						//this.tmwait=200+this.drs[0].sDetail.length*50;
    					}
    				}
    			}
    			this.bDialoging=true;
    			this.iDialogType=2;
    			//this.iDRCount++;
    //			this.tm1=XDefine.get_ms();
    			this.iX=(GmConfig$1.SCRW-this.iW)/2;
    			this.iY=(GmConfig$1.SCRH-this.iH)/2;
    			return;
    		}

    		this.iW=GmConfig$1.SCRW/2;
    		this.iH=200;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;

    		this.bDialoging=true;
    		this.iDialogType=0;
    	}

    	Draw_0()
    	{
    		this.fRate=1.0*GmConfig$1.SCRH/720;
    		this.iTextSize= parseInt(32*this.fRate);
    		var i;
    		this.iW=GmConfig$1.SCRW/2;
    		if(this.iW>750)this.iW=750;
    		this.iH=200;
    		
    		FormatString.gi().FormatEx(this.pSelect.sQuestion, this.iW-20, this.iTextSize, 1, 0xff000000, this.iTextSize*7/6);
    //		FormatString.gi().FormatEx("#c80ff80"+this.pSelect.sQuestion, this.iW-20, this.iTextSize, 1, 0xff000000, this.iTextSize*7/6);
    		//FormatString.gi().Format(this.pSelect.sQuestion, this.iW-20, this.iTextSize);
    		this.iH=FormatString.gi().iH+20+this.pSelect.iCount*(this.iTextSize*7/6)+this.iTextSize/2;
    		if(this.iH<GmConfig$1.SCRH/4)this.iH=GmConfig$1.SCRH/4;
    		this.iY=GmConfig$1.SCRH/2;
    		if(this.iY+this.iH+20>GmConfig$1.SCRH)this.iY=GmConfig$1.SCRH-this.iH-20;
    //		this.iY=(gi().SCRH-this.iH)/2;
    		
    //		DrawMode.Frame1_BR(this.iX, this.iY, this.iW,this.iH);
    //		DrawMode.ui3_DefineFrame(this.iX, this.iY, this.iW, this.iH);
    		DrawMode$1.ui4_FrameUp(this.iX, this.iY-40, this.iW);
    		DrawMode$1.ui4_FrameDown(this.iX, this.iY, this.iW, this.iH);
    		//this.xm3f.FillRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0xc0000000);
    		FormatString.gi().Draw(this.iX+15, this.iY+10);
    		this.iOffX=this.iX+15;
    		this.iOffY=this.iY+10+FormatString.gi().iH+this.iTextSize/2;
    		for(i=0;i<this.pSelect.iCount;i++)
    		{
    			if(this.iPoint==i)
    			{
    				GmPlay$1.xani_ui4.DrawAnimaEx(this.iOffX, this.iOffY+i*this.iTextSize*7/6+this.iTextSize/2, "对话框条", 0,101,1.0*(this.iW-30)/250,this.fRate,0,0,0);
    				//this.xm3f.FillRect_2D(this.iOffX, this.iOffY+i*this.iTextSize*7/6-this.iTextSize/12, this.iOffX+this.iW-30, this.iOffY+(i+1)*this.iTextSize*7/6-this.iTextSize/12, 0x80a050a0);
    //				GmPlay.xani_ui.DrawAnimaEx(this.iX+3, this.iOffY+i*this.iTextSize*7/6, "统一红黑框",9, 101, 1.0f*(this.iW-10)/10, 1, 0,0, 0);
    //				this.xm3f.FillRect_2D(this.iOffX, this.iOffY+i*this.iTextSize, this.iOffX+this.iW-20, this.iOffY+i*this.iTextSize+30, 0xff0000ff);
    			}
    			//0xff99d9ea,0xffff7f27
    //			this.xm3f.DrawText_2(this.iOffX, this.iOffY+i*this.iTextSize*7/6, this.pSelect.sAnswers[i], 0xffb5e61d, this.iTextSize, 101, 1, 1, 0, 0, 0, 1, 0xff000000);
    			this.xm3f.DrawTextEx(this.iOffX, this.iOffY+i*this.iTextSize*7/6+this.iTextSize/2, this.pSelect.sAnswers[i], 0xfff8f078, this.iTextSize, 101, 1, 1, 0, 0, -2);//, 1, 0xff000000);
    	//		this.xm3f.DrawTextEx(this.iOffX, this.iOffY+i*this.iTextSize*7/6, this.pSelect.sAnswers[i], 0xffff0000, this.iTextSize, 101, 1, 1, 0, 0, 0);
    //			this.xm3f.DrawText(this.iOffX, this.iOffY+i*this.iTextSize, this.pSelect.sAnswers[i], 0xffff0000);
    		}
    	}

    	 DrawChatFrame( faceto, x, y, w, h)
    	{
    		if(faceto==1)
    		{
    			if(this.aa_f1==null)this.aa_f1=GmPlay$1.xani_nui2.InitAnimaWithName("左侧框", null);
    			M3DFast$1.gi().FillRect_2D(x+2, y-h/2+2, x+w-2, y+h/2-2, 0xff477f6f);
    			this.aa_f1.iFrame=0;this.aa_f1.Draw(x, y-h/2);
    			this.aa_f1.iFrame=1;this.aa_f1.Draw(x+w, y-h/2);
    			this.aa_f1.iFrame=2;this.aa_f1.Draw(x+w, y+h/2);
    			this.aa_f1.iFrame=3;this.aa_f1.Draw(x, y+h/2);
    			
    			this.aa_f1.iFrame=4;this.aa_f1.DrawEx(x+10, y-h/2, 101, 1.0*(w-20)/10, 1, 0, 0, 0);
    			this.aa_f1.iFrame=7;this.aa_f1.DrawEx(x+10, y+h/2, 101, 1.0*(w-20)/10, 1, 0, 0, 0);
    			
    			this.aa_f1.iFrame=5;this.aa_f1.DrawEx(x, y-h/2+10, 101, 1,1.0*(h-20)/10,  0, 0, 0);
    			this.aa_f1.iFrame=6;this.aa_f1.DrawEx(x+w, y-h/2+10, 101, 1,1.0*(h-20)/10,  0, 0, 0);
    			
    			this.aa_f1.iFrame=8;this.aa_f1.Draw(x, y);
    		}
    		else if(faceto==2)
    		{
    			if(this.aa_f2==null)this.aa_f2=GmPlay$1.xani_nui2.InitAnimaWithName("右侧框", null);
    			M3DFast$1.gi().FillRect_2D(x+2, y-h/2+2, x+w-2, y+h/2-2, 0xff7a774b);
    			this.aa_f2.iFrame=0;this.aa_f2.Draw(x, y-h/2);
    			this.aa_f2.iFrame=1;this.aa_f2.Draw(x+w, y-h/2);
    			this.aa_f2.iFrame=2;this.aa_f2.Draw(x+w, y+h/2);
    			this.aa_f2.iFrame=3;this.aa_f2.Draw(x, y+h/2);
    			
    			this.aa_f2.iFrame=4;this.aa_f2.DrawEx(x+10, y-h/2, 101, 1.0*(w-20)/10, 1, 0, 0, 0);
    			this.aa_f2.iFrame=7;this.aa_f2.DrawEx(x+10, y+h/2, 101, 1.0*(w-20)/10, 1, 0, 0, 0);
    			
    			this.aa_f2.iFrame=5;this.aa_f2.DrawEx(x, y-h/2+10, 101, 1,1.0*(h-20)/10,  0, 0, 0);
    			this.aa_f2.iFrame=6;this.aa_f2.DrawEx(x+w, y-h/2+10, 101, 1,1.0*(h-20)/10,  0, 0, 0);
    			
    			this.aa_f2.iFrame=8;this.aa_f2.Draw(x+w, y);
    		}
    	}
    	 DrawSpeek( offy, last, head, name, detail)
    	{//新手剧情，微信聊天模式
    		var dww=650;
    		var hx,hy;
    		var wx,wy;
    		var iWordSize=30;
    		var h=0;//至少
    		FormatString.gi().FormatEx(detail, dww-20, iWordSize, 1, 0xff000000, iWordSize+2);
    		if(h<FormatString.gi().iH+20+20)h=FormatString.gi().iH+20+20;
    //		if(h<80)h=80;
    		if(FormatString.gi().iW+20<dww)dww=FormatString.gi().iW+20;
    		
    		if(name=="我")
    		{//显示在右方
    			GmPlay$1.xani_head.InitAnimaWithName("新头像"+(GmMe$1.me.iRace*2+GmMe$1.me.iSex),this.aa_head);
    			
    			hx=this.iX+this.iW-80-20;
    			hy=this.iY+offy+h/2-40;
    //			M3DFast.gi().FillRect_2D(hx,hy,hx+60,hy+60, 0xff00ff00);
    			this.aa_head.Draw(hx-3, hy);
    			
    			wx=this.iX+this.iW-20-80-20-dww;
    			wy=this.iY+offy+h/2-FormatString.gi().iH/2-10;
    			this.DrawChatFrame(2,wx,this.iY+offy+h/2,dww,FormatString.gi().iH+20);
    //			M3DFast.gi().FillRect_2D(wx,wy,wx+dww,wy+FormatString.gi().iH+20, 0x80b0f050);
    //			M3DFast.gi().DrawRect_2D(wx,wy,wx+400,wy+FormatString.gi().iH+20, 0xff00ff00);
    			FormatString.gi().Draw(wx+10, wy+10);
    			
    			if(last)
    			{
    				this.tm2=XDefine$1.get_ms()-this.tm1;//已过去的时间
    //				if(this.tm2>this.tmwait)this.tm2=this.tmwait;
    				if(this.tm2>this.tmwait)return h;
    				if(this.tm2<this.tmwait/2)
    				{
    					GmPlay$1.xani_head.DrawAnima(wx-50, hy+40, "进度红", 0);
    					GmPlay$1.xani_head.DrawAnimaEx(wx-50, hy+40, "进度绿", 0, 101, 1, 1, (180-this.tm2*360/this.tmwait), wx-50, hy+40);
    					GmPlay$1.xani_head.DrawAnimaEx(wx-50, hy+40, "进度红", 0, 101, 1, 1, 180, wx-50, hy+40);
    				}
    				else
    				{
    					GmPlay$1.xani_head.DrawAnimaEx(wx-50, hy+40, "进度红", 0, 101, 1, 1, 180, wx-50, hy+40);
    					GmPlay$1.xani_head.DrawAnima(wx-50, hy+40, "进度绿", 0);
    					GmPlay$1.xani_head.DrawAnimaEx(wx-50, hy+40, "进度绿", 0, 101, 1, 1, (360+180-this.tm2*360/this.tmwait), wx-50, hy+40);
    				}
    			}
    		}
    		else
    		{
    			if(name=="未来")GmPlay$1.xani_head.InitAnimaWithName("新头像"+(GmMe$1.me.iRace*2+GmMe$1.me.iSex),this.aa_head);
    			else GmPlay$1.xani_head.InitAnimaWithName(head,this.aa_head);
    			hx=this.iX+20;
    			hy=this.iY+offy+h/2-40;
    //			M3DFast.gi().FillRect_2D(hx,hy,hx+60,hy+60, 0xff00ff00);
    			this.aa_head.Draw(hx+3, hy);
    			
    			wx=this.iX+20+80+20;
    			wy=this.iY+offy+h/2-FormatString.gi().iH/2-10;
    			
    			this.DrawChatFrame(1,wx,this.iY+offy+h/2,dww,FormatString.gi().iH+20);
    			//M3DFast.gi().FillRect_2D(wx,wy,wx+dww,wy+FormatString.gi().iH+20, 0x8050f0b0);
    //			M3DFast.gi().DrawRect_2D(wx,wy,wx+400,wy+FormatString.gi().iH+20, 0xff00ff00);
    			FormatString.gi().Draw(wx+10, wy+10);
    			
    			if(last)
    			{
    				this.tm2=XDefine$1.get_ms()-this.tm1;//已过去的时间
    //				if(this.tm2>this.tmwait)this.tm2=this.tmwait;
    				if(this.tm2>this.tmwait)return h;
    				if(this.tm2<this.tmwait/2)
    				{
    					GmPlay$1.xani_head.DrawAnima(wx+dww+50, hy+40, "进度红", 0);
    					GmPlay$1.xani_head.DrawAnimaEx(wx+dww+50, hy+40, "进度绿", 0, 101, 1, 1, (180-this.tm2*360/this.tmwait), wx+dww+50, hy+40);
    					GmPlay$1.xani_head.DrawAnimaEx(wx+dww+50, hy+40, "进度红", 0, 101, 1, 1, 180, wx+dww+50, hy+40);
    				}
    				else
    				{
    					GmPlay$1.xani_head.DrawAnimaEx(wx+dww+50, hy+40, "进度红", 0, 101, 1, 1, 180, wx+dww+50, hy+40);
    					GmPlay$1.xani_head.DrawAnima(wx+dww+50, hy+40, "进度绿", 0);
    					GmPlay$1.xani_head.DrawAnimaEx(wx+dww+50, hy+40, "进度绿", 0, 101, 1, 1, (360+180-this.tm2*360/this.tmwait), wx+dww+50, hy+40);
    				}
    			}
    			//tm/this.tmwait
    		}
    		return h;
    	}
    	 Draw_1()
    	{//特殊
    		var i,j;
    		var offy;
    		
    		this.iW=1000;
    		var hh;
    		
    		if(this.iH>300)
    		{
    			j=this.iH-300;
    			hh=300;
    		}
    		else
    		{
    			j=0;
    			hh=this.iH;
    		}
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=GmConfig$1.SCRH-hh-10;
    //		DrawMode.ui3_DefineFrame(this.iX, this.iY, this.iW, hh);
    		
    		M3DFast$1.gi().SetViewClip(this.iX, this.iY, this.iX+this.iW, this.iY+hh);
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, hh);
    		DrawMode$1.new_framein(this.iX+15, this.iY+15, this.iW-30, hh-30);
    		M3DFast$1.gi().NoClip();
    		M3DFast$1.gi().SetViewClip(this.iX+20, this.iY+20, this.iX+this.iW-20, this.iY+hh-20);
    		
    		offy=0;
    		for(i=0;i<this.iDRCount;i++)
    		{
    			offy+=this.DrawSpeek(offy+20-j,i==this.iDRCount-1?true:false,this.drs[i].sHead,this.drs[i].sName,this.drs[i].sDetail);
    		}
    		if(this.iH<offy+40-20)this.iH+=20;
    		else this.iH=offy+40;
    //		GmPlay.sop("this.iH="+this.iH);
    		
    		M3DFast$1.gi().NoClip();
    	}
    	Draw_2()
    	{
    		this.fRate=1.0*GmConfig$1.SCRH/720;
    		this.iTextSize= parseInt(32*this.fRate);
    		var i;
    		this.iW=GmConfig$1.SCRW/2;
    		if(this.iW>750)this.iW=750;
    		this.iH=200;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		
    		FormatString.gi().FormatEx(this.drs[0].sDetail, this.iW-20, this.iTextSize, 1, 0xff000000, this.iTextSize*7/6);
    		this.iH=FormatString.gi().iH+20+this.pSelect.iCount*(this.iTextSize*7/6)+this.iTextSize/2;
    		if(this.iH<GmConfig$1.SCRH/4)this.iH=GmConfig$1.SCRH/4;
    		this.iY=GmConfig$1.SCRH/2;
    		GmPlay$1.sop(""+this.iY);
    		if(this.iY+this.iH+20>GmConfig$1.SCRH)this.iY=GmConfig$1.SCRH-this.iH-20;

    		DrawMode$1.ui4_FrameUp(this.iX, this.iY-40, this.iW);
    		DrawMode$1.ui4_FrameDown(this.iX, this.iY, this.iW, this.iH);
    //		this.xm3f.FillRect_2D(this.iX, this.iY-40, this.iX+this.iW, this.iY, 0xc0ff0000);//上框
    //		this.xm3f.FillRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0xc0000000);//下框
    		if(this.drs[0].sHead=="我")
    		{//显示在右方//头像,名字
    			GmPlay$1.xani_head.InitAnimaWithName("新头像"+(GmMe$1.me.iRace*2+GmMe$1.me.iSex),this.aa_head);
    			this.aa_head.Draw(this.iX+this.iW-80-30, this.iY-80);
    			this.xm3f.DrawTextEx(this.iX+this.iW-60-30-10, this.iY-20, GmMe$1.me.sName, 0xfff8f078, 32, 101, 1, 1, 0, -3, -2);
    		}
    		else
    		{
    			GmPlay$1.xani_head.InitAnimaWithName(this.drs[0].sHead,this.aa_head);
    			this.aa_head.Draw(this.iX+30, this.iY-80);
    			this.xm3f.DrawTextEx(this.iX+30+60+10, this.iY-20, this.drs[0].sName, 0xfff8f078, 32, 101, 1, 1, 0, 0, -2);
    		}

    		FormatString.gi().Draw(this.iX+15, this.iY+10);
    		this.iOffX=this.iX+15;
    		this.iOffY=this.iY+10+FormatString.gi().iH+this.iTextSize/2;
    		for(i=0;i<this.pSelect.iCount;i++)
    		{
    			if(this.iPoint==i)
    			{
    				GmPlay$1.xani_ui4.DrawAnimaEx(this.iOffX, this.iOffY+i*this.iTextSize*7/6+this.iTextSize/2, "对话框条", 0,101,1.0*(this.iW-30)/250,this.fRate,0,0,0);
    				//this.xm3f.FillRect_2D(this.iOffX, this.iOffY+i*this.iTextSize*7/6-this.iTextSize/12, this.iOffX+this.iW-30, this.iOffY+(i+1)*this.iTextSize*7/6-this.iTextSize/12, 0x80a050a0);
    //				GmPlay.xani_ui.DrawAnimaEx(this.iX+3, this.iOffY+i*this.iTextSize*7/6, "统一红黑框",9, 101, 1.0f*(this.iW-10)/10, 1, 0,0, 0);
    //				this.xm3f.FillRect_2D(this.iOffX, this.iOffY+i*this.iTextSize, this.iOffX+this.iW-20, this.iOffY+i*this.iTextSize+30, 0xff0000ff);
    			}
    			this.xm3f.DrawTextEx(this.iOffX, this.iOffY+i*this.iTextSize*7/6+this.iTextSize/2, this.pSelect.sAnswers[i], 0xfff8f078, this.iTextSize, 101, 1, 1, 0, 0, -2);//, 1, 0xff000000);
    		}
    	}

    	DrawBack()
    	{//					this.nd2.btn_sel[i].Move(GmConfig.SCRW-40-30-272, GmConfig.SCRH-160-20-((this.pSelect.iCount-1)*20+2*20+this.pSelect.iCount*54)+20+i*(54+20), 272, 54);
    		if(this.pSelect.iCount<=0)return;
    		this.iFx=GmConfig$1.SCRW-40-30-272-30;
    		this.iFy=GmConfig$1.SCRH-160-20-((this.pSelect.iCount-1)*20+2*20+this.pSelect.iCount*54);
    		this.iFw=30+272+30;
    		this.iFh=(this.pSelect.iCount-1)*20+2*20+this.pSelect.iCount*54;
    		var iPx=this.iFx+this.iFw/2;
    		var iPy=this.iFy+this.iFh;
    		if(this.aa_frame==null)this.aa_frame=GmPlay$1.xani_nui3.InitAnimaWithName("键盘框", null);
    		this.aa_frame.iFrame=0;this.aa_frame.Draw(this.iFx, this.iFy);//左上
    		this.aa_frame.iFrame=1;this.aa_frame.DrawEx(this.iFx+10, this.iFy, 101, 1.0*(this.iFw-20)/20, 1, 0, 0, 0);//上
    		this.aa_frame.iFrame=2;this.aa_frame.Draw(this.iFx+this.iFw, this.iFy);//右上
    		this.aa_frame.iFrame=3;this.aa_frame.DrawEx(this.iFx+this.iFw, this.iFy+10, 101, 1,1.0*(this.iFh-20)/20, 0, 0, 0);//右
    		this.aa_frame.iFrame=4;this.aa_frame.Draw(this.iFx+this.iFw, this.iFy+this.iFh);//右下
    		this.aa_frame.iFrame=5;this.aa_frame.DrawEx(this.iFx+10, this.iFy+this.iFh, 101, 1.0*(this.iFw-20)/20, 1, 0, 0, 0);//下
    		this.aa_frame.iFrame=6;this.aa_frame.Draw(this.iFx, this.iFy+this.iFh);//左下
    		this.aa_frame.iFrame=7;this.aa_frame.DrawEx(this.iFx, this.iFy+10, 101, 1,1.0*(this.iFh-20)/20, 0, 0, 0);//左
    		this.aa_frame.iFrame=8;this.aa_frame.DrawEx(this.iFx+10, this.iFy+10, 101, 1.0*(this.iFw-20)/20,1.0*(this.iFh-20)/20, 0, 0, 0);//中
    		this.aa_frame.iFrame=9;this.aa_frame.Draw(iPx, iPy);//箭头
    	}
    	
    	Draw_3()
    	{
    		DrawMode$1.new_framewatch(40,GmConfig$1.SCRH-160,GmConfig$1.SCRW-80,150);
    		
    		GmPlay$1.xani_nui4.DrawAnima(220, GmConfig$1.SCRH-10-37, "形象台",0);
    		M3DFast$1.gi().DrawTextEx(220, GmConfig$1.SCRH-10-15, this.nd2.sName, 0xff003e57, 26, 101, 1, 1, 0, -2, -2);
    		//0xffc8f3f3
    		GmPlay$1.xani_nui4.DrawAnima(220, GmConfig$1.SCRH-10-37, "形象背光",0);
    		if(this.nd2.aa_shot==null)
    		{
    			if(this.res_shadow<0)this.res_shadow=M3DFast$1.gi().LoadFromFile("bk/sss.xxx",-1,false);
    			M3DFast$1.gi().DrawImageEx(0, 220-95, GmConfig$1.SCRH-10-37-251, this.res_shadow, 2, 0, 183, 251, 101, 1, 1, 0, 0, 0);
    		}
    		else this.nd2.aa_shot.Draw(220, GmConfig$1.SCRH-10-37);
    		
    		FormatString.gi().FormatEx("#cc8f3f3"+this.nd2.sDetail, 800, 28, 0, 0, 32);
    		//总高度150
    		FormatString.gi().Draw(400, GmConfig$1.SCRH-160+(150-FormatString.gi().iH)/2);
    		
    		var i;
    		this.DrawBack();
    		if(this.pSelect.iCount>0)
    		{
    			for(i=0;i<this.pSelect.iCount;i++)
    			{
    				this.nd2.btn_sel[i].Move(GmConfig$1.SCRW-40-30-272, GmConfig$1.SCRH-160-20-((this.pSelect.iCount-1)*20+2*20+this.pSelect.iCount*54)+20+i*(54+20), 272, 54);
    				this.nd2.btn_sel[i].Draw();
    	//			this.nd2.btn_sel[i].Move(GmConfig.SCRW-40-30-272-30, GmConfig.SCRH-160-20-((this.pSelect.iCount-1+2)*30+this.pSelect.iCount*54)+30+i*(54+30), 272, 54);
    			}
    		}
    	}
    	Draw_4()
    	{//隐藏UI
    		//画上下阴影
    		//GmPlay.xani_nui4.DrawAnimaEx(0, 0, "阴影",1,101,1.0f*GmConfig.SCRW/20,1,0,0,0);
    //		GmPlay.xani_nui4.DrawAnimaEx(GmConfig.SCRW, 0, "阴影",0,101,1.0f*GmConfig.SCRW/20,1,180,GmConfig.SCRW,0);
    //		GmPlay.xani_nui4.DrawAnimaEx(GmConfig.SCRW-1,500, "阴影",0,101,1.0f*GmConfig.SCRW/20,1,180,GmConfig.SCRW-1,500);
    		GmPlay$1.xani_nui4.DrawAnimaEx(0, 0, "阴影",1,101,1.0*GmConfig$1.SCRW/20,1,0,0,0);
    		GmPlay$1.xani_nui4.DrawAnimaEx(0, GmConfig$1.SCRH, "阴影",0,101,1.0*GmConfig$1.SCRW/20,1,0,0,0);
    		
    		M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW-50, 50, "点击屏幕继续 》", 0xff6eacc8, 30, 101, 1, 1, 0, -3, -3);
    		
    		if(this.nd1.iNpcId==500)
    		{//主角
    			GmPlay$1.xani_nui4.DrawAnima(GmConfig$1.SCRW-220, GmConfig$1.SCRH-10-37, "名字框",0);
    			M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW-220, GmConfig$1.SCRH-10-15, this.nd1.sName, 0xff6eacc8, 26, 101, 1, 1, 0, -2, -2);
    			GmPlay$1.xani_nui4.DrawAnima(GmConfig$1.SCRW-220, GmConfig$1.SCRH-10-37, "形象背光",0);
    			if(this.nd1.aa_shot!=null)this.nd1.aa_shot.Draw(GmConfig$1.SCRW-220, GmConfig$1.SCRH-10-37);
    			
    			FormatString.gi().FormatEx("#cc8f3f3"+this.nd1.sDetail, 800, 28, 0, 0, 32);
    			//总高度150
    			FormatString.gi().Draw(GmConfig$1.SCRW-400-FormatString.gi().iW, GmConfig$1.SCRH-160+(150-FormatString.gi().iH)/2);
    			return;
    		}
    		GmPlay$1.xani_nui4.DrawAnima(220, GmConfig$1.SCRH-10-37, "名字框",0);
    		M3DFast$1.gi().DrawTextEx(220, GmConfig$1.SCRH-10-15, this.nd1.sName, 0xff6eacc8, 26, 101, 1, 1, 0, -2, -2);
    		GmPlay$1.xani_nui4.DrawAnima(220, GmConfig$1.SCRH-10-37, "形象背光",0);
    		
    		if(this.nd1.aa_shot==null)
    		{
    			if(this.res_shadow<0)this.res_shadow=M3DFast$1.gi().LoadFromFile("bk/sss.xxx",-1,false);
    			M3DFast$1.gi().DrawImageEx(0, 220-95, GmConfig$1.SCRH-10-37-251, this.res_shadow, 2, 0, 183, 251, 101, 1, 1, 0, 0, 0);
    		}
    		else this.nd1.aa_shot.Draw(220, GmConfig$1.SCRH-10-37);
    		
    		FormatString.gi().FormatEx("#cc8f3f3"+this.nd1.sDetail, 800, 28, 0, 0, 32);
    		//总高度150
    		FormatString.gi().Draw(400, GmConfig$1.SCRH-160+(150-FormatString.gi().iH)/2);
    	}
    	bHideUI()
    	{//剧情模式隐藏UI
    		if(this.bDialoging && this.iDialogType==4)return true;
    		return false;
    	}
    	 Draw()
    	{
    		if(!this.bDialoging)return;
    		
    		if(this.iDialogType==0)this.Draw_0();
    		else if(this.iDialogType==1)this.Draw_1();
    		else if(this.iDialogType==2)this.Draw_2();
    		else if(this.iDialogType==3)this.Draw_3();
    		else if(this.iDialogType==4)this.Draw_4();
    	}
    	 LockPoint( x, y)
    	{
    		var i;
    		this.iPoint=-1;
    		
    		for(i=0;i<this.pSelect.iCount;i++)
    		{
    			if(this.bInRect(x,y,this.iOffX, this.iOffY+i*this.iTextSize*7/6,this.iW,this.iTextSize*7/6))
    			{
    				this.iPoint=i;
    				return;
    			}
    		}
    	}
    	 ProcTouch( msg, x, y)
    	{
    		if(!this.bDialoging)return false;
    		var i;
    		if(this.iDialogType==3)
    		{//无选项，直接关闭，有选项先判断选项
    			if(this.pSelect.iCount>0)
    			{
    				if(XDefine$1.bInRect(x, y, this.iFx, this.iFy, this.iFw, this.iFh))
    				{
    					for(i=0;i<this.pSelect.iCount;i++)
    					{
    						if(this.nd2.btn_sel[i].ProcTouch(msg, x, y))
    						{
    							if(this.nd2.btn_sel[i].bCheck())
    							{
    								this.nd2.btn_sel[i].SetNormal();
    								this.bDialoging=false;
    								this.vbk.ProcBase(this.pSelect.next[i]);
    							}
    							return true;
    						}
    					}
    					return true;
    				}
    			}
    			if(msg==3)
    			{
    				this.bDialoging=false;
    			}
    			return true;
    		}
    		if(this.iDialogType==4)
    		{//必定触发
    			if(msg==1)this.bDown=true;
    			if(!this.bDown)return true;
    			if(msg==3)
    			{
    				if(this.pSelect.next[0]==null)this.bDialoging=false;
    				else if(this.pSelect.next[0].iType!=4)this.bDialoging=false;
    				this.vbk.ProcBase(this.pSelect.next[0]);
    				this.bDown=false;
    			}
    			return true;
    		}
    		if(this.iDialogType==1)
    		{//必定触发
    			if(XDefine$1.get_ms()-this.tm1<this.tmwait)return true;
    			if(msg==1)this.bDown=true;
    			if(!this.bDown)return true;
    			if(msg==3)
    			{
    				if(this.pSelect.next[0]==null)this.bDialoging=false;
    				else if(this.pSelect.next[0].iType!=4)this.bDialoging=false;
    				this.vbk.ProcBase(this.pSelect.next[0]);
    			}
    			return true;
    		}
    		if(msg==1)this.bDown=true;
    		if(!this.bDown)return true;
    		if(this.bInRect(x,y,this.iX,this.iY,this.iW,this.iH))
    		{
    			switch(msg)
    			{
    			case 1://按下
    			case 2://移动
    				this.LockPoint(x,y);
    				break;
    			case 3://放开
    				if(this.iPoint!=-1)
    				{
    					this.bDialoging=false;
    					this.vbk.ProcBase(this.pSelect.next[this.iPoint]);
    				}
    				break;
    			}
    		}
    		else if(msg==3)
    		{
    			this.bDialoging=false;
    		}
    		return true;
    	}
    	bInRect( x , y, rx, ry, rw, rh)
    	{
    		if(x<=rx)return false;
    		if(y<=ry)return false;
    		if(x>=rx+rw)return false;
    		if(y>=ry+rh)return false;
    		return true;
    	}
    }

    class Confirm1 extends BaseClass{
    	
    	constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=350;
    		this.iH=200;
    		
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_nui3);
    		this.btn_ok.InitButton("内框按钮");
    		this.btn_ok.Move(this.iX+10,this.iY+this.iH-60, 70, 40);
    //		this.btn_ok.bSingleButton=true;
    		this.btn_ok.sName="确定";
    		
    		this.btn_cancel=new XButtonEx2$1(GmPlay$1.xani_nui3);
    		this.btn_cancel.InitButton("内框按钮");
    		this.btn_cancel.Move(this.iX+this.iW-90,this.iY+this.iH-60, 70, 40);
    //		this.btn_cancel.bSingleButton=true;
    		this.btn_cancel.sName="取消";
    		
    		Confirm1.bFinished=false;
    	}
    	Draw()
    	{
    //		FormatString.gi().Format(Confirm1.sDetail, this.iW-40, 25);
    		FormatString.gi().FormatEx(Confirm1.sDetail, this.iW-40, 26, 0, 0, 30);
    //		this.pm3f.DrawText(0, this.pm3f.imf.SCRH-30, "Confirm", 0xffffffff);
    		
    //		this.pm3f.FillRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0xff000000);
    //		this.pm3f.DrawRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0xffffffff);
    		this.iH=20+FormatString.gi().iH+20+55+20;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_ok.Move(this.iX+20,this.iY+this.iH-70, 98, 55);
    		this.btn_cancel.Move(this.iX+this.iW-98-20,this.iY+this.iH-70, 98, 55);
    		
    	//	DrawMode.Frame1_BR(this.iX, this.iY, this.iW, this.iH);
    		DrawMode$1.new_framewatch(this.iX, this.iY, this.iW, this.iH);
    		
    		FormatString.gi().Draw(this.iX+20, this.iY+20);
    		
    		this.btn_ok.Draw();
    		this.btn_cancel.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{
    				Confirm1.bFinished=true;
    				Confirm1.bConfirm=true;
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{
    				Confirm1.bFinished=true;
    				Confirm1.bConfirm=false;
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		return false;
    	}
    }
    	Confirm1.CONFIRM_UPGRADE=10;//升级
    	Confirm1.CONFIRM_DROPGOODS=20;//丢弃物品
    	Confirm1.CONFIRM_BREAKGOODS=21;//分解物品
    	Confirm1.CONFIRM_DROPPET=30;//放生宠物
    	Confirm1.CONFIRM_INVITE=40;//邀请入队
    	Confirm1.CONFIRM_MYBUY=50;//购买其他玩家摊位上的东西
    	Confirm1.CONFIRM_LEAVEGOV=60;//离帮/解散
    	Confirm1.CONFIRM_UPGRADEGOV=61;//帮派升级
    	Confirm1.CONFIRM_SWAPGOV=62;//帮派升级
    	Confirm1.CONFIRM_GOVKICK=70;//帮派踢人
    	Confirm1.CONFIRM_BUYSTORE=80;//开启背包
    	Confirm1.CONFIRM_DROPMOUNTS=90;//丢弃坐骑
    	Confirm1.CONFIRM_JJMOUNTS=100;//坐骑进阶
    	Confirm1.CONFIRM_ESCAPE=110;//战斗中逃跑
    	Confirm1.CONFIRM_LEAVEFUBEN=120;//解散/离开副本
    	Confirm1.CONFIRM_STARTFUBEN=130;//开始副本
    	Confirm1.CONFIRM_VIP=140;//开通vip
    	Confirm1.CONFIRM_LOCK=150;//加锁确认
    	Confirm1.CONFIRM_UNLOCK=160;//强制解锁
    	Confirm1.CONFIRM_NOWAR=200;//免战开关
    	Confirm1.CONFIRM_SWADD=201;//每日战队声望领取
    	Confirm1.CONFIRM_FTDISMISS=202;//解散/退出战队
    	Confirm1.CONFIRM_FTKICK=203;//踢出队员
    	Confirm1.CONFIRM_FTTRANFER=204;//转换队长
    	Confirm1.CONFIRM_FTMJ1=210;//战队秘境1
    	Confirm1.CONFIRM_FTMJ2=211;//战队秘境1
    	Confirm1.CONFIRM_FTMJ3=212;//战队秘境1
    	Confirm1.CONFIRM_FTMJ4=213;//战队秘境1
    	Confirm1.CONFIRM_FTMJ5=214;//战队秘境1
    	Confirm1.CONFIRM_MERGEONE=250;//自然之力合成
    	Confirm1.CONFIRM_MERGEALL=251;//合成所有
    	Confirm1.CONFIRM_IMPROVEEQUIP=260;//装备强化
    	Confirm1.CONFIRM_EXITAQ=270;//退出中午答题活动
    	Confirm1.CONFIRM_FUSEPET=280;//炼妖确认
    	Confirm1.CONFIRM_APPROVEPET=281;//认证技能
    	Confirm1.CONFIRM_CHANGECOLOR=290;//染色确认
    	Confirm1.CONFIRM_BACKGOV=300;//回帮
    	Confirm1.CONFIRM_GOVAPPOINT=301;//职位转让确认
    	Confirm1.CONFIRM_GOVKICKMEMBER=302;//踢出帮派
    	Confirm1.CONFIRM_GOVRELEASEENTRUST=303;//发布委托
    	Confirm1.CONFIRM_GOVCANCELENTRUST=304;//撤销所发布的委托
    	Confirm1.CONFIRM_GOVGETENTRUST=305;//接受委托
    	Confirm1.CONFIRM_GOVUPGRADE=306;//升级帮派
    	Confirm1.CONFIRM_GOVDISBAND=307;//解散帮派
    	Confirm1.CONFIRM_GOVCONVEY1=[310,311,312,313,314,315,316];//帮派的传送
    	Confirm1.CONFIRM_GOVCONVEY2=[320,321,322,323,324,325,326];
    	Confirm1.CONFIRM_BACKTOSCHOOL=400;//回师门
    	Confirm1.CONFIRM_WASHROLEPOINT=500;//洗人物属性点
    	Confirm1.CONFIRM_OPENPOINTPLAN=501;//开启加点方案
    	Confirm1.CONFIRM_SWAPPOINTPLAN=502;//切换加点方案
    	Confirm1.CONFIRM_WASHPET=600;//洗宝宝
    	Confirm1.CONFIRM_WASHPETBYINGOT=601;//洗宝宝
    	Confirm1.CONFIRM_CANCELMISSION=700;//放弃任务
    	Confirm1.iCid;
    	Confirm1.bFinished=false;
    	Confirm1.bConfirm;
    	Confirm1.iCid;
    	Confirm1.sDetail;
    	

    	
    	Confirm1.start=function( cid, detail)
    	{
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_CONFIRM1)return;
    		Confirm1.iCid=cid;
    		Confirm1.sDetail=detail;
    		Confirm1.bFinished=false;
    		XStat$1.gi().PushStat(XStat$1.GS_CONFIRM1);
    	};
    	Confirm1.end=function( cid)
    	{
    		if(Confirm1.bFinished && Confirm1.iCid==cid)
    		{
    			Confirm1.iCid=0;
    			Confirm1.bFinished=false;
    			return true;
    		}
    		return false;
    	};

    class XAnimaActionOle {
    /*
    	int this.iUseFlag[ ];
    	AnimaAction this.aa[ ];
    	String this.sName[ ];*/
    	constructor()
    	{
            this.MAXAAO=1024;
    		this.iUseFlag=new Int32Array(this.MAXAAO);//
    		this.sName=new Array(this.MAXAAO);//
    		this.aa=new Array(this.MAXAAO);//
    		for(var i=0;i<this.MAXAAO;i++)
    		{
    			this.iUseFlag[i]=0;
    			this.aa[i]=new AnimaAction();
    			this.sName[i]="";
    		}
    	}
    	 ClearFlag()
    	{
    		for(var i=0;i<this.MAXAAO;i++)this.iUseFlag[i]=0;
    	}
    	 AddAA( pa, name)
    	{
    		for(var i=0;i<this.MAXAAO;i++)
    		{
    			if(this.iUseFlag[i]==0)
    			{
    				this.iUseFlag[i]++;
    				this.aa[i].copyfrom(pa);
    				this.sName[i]=name;
    				return i;
    			}
    		}
    		return 0;
    	}
    	 GetAA( p, name)
    	{
    		if(p<0 || p>=this.MAXAAO)return null;
    		if(this.sName[p]!=name)return null;
    		return this.aa[p];
    	}
    }

    class _XANIMA {
    	constructor()
    	{
            this.sMark="";
            this.xani=null;
    		this.pnext=null;
    	}
    }

    class XAnimaOle {

    	constructor()
    	{
    		this.phead=null;
    		this.pend=null;
    	}
    	 ReleaseAll()
    	{
    		this.phead=null;
    		this.pend=null;
    	}
    	LoadOleAnima( mark, fn)
    	{
    		fn="res/datapackage/"+fn;
    		
    		var p=this.phead;
    		while(p!=null)
    		{
    			if(p.sMark==mark)return;//已经载入过
    			p=p.pnext;
    		}
    		p=new _XANIMA();
    		
    		p.xani=XAnima._GET(fn);
    		if(p.xani==null)
    		{
    			var i=0;
    		}
    		/*
    		p.xani=new XAnima(GmPlay.gp.xm3f);
    		GmPlay.sop(""+fn);
    		p.xani.LoadAnima_fullpath(fn, GmPlay.gp.pls, GameData.bFromSD);
    */
    		p.sMark=mark;

    		if(this.phead==null)
    		{
    			this.phead=p;
    			this.pend=p;
    		}
    		else
    		{
    			this.pend.pnext=p;
    			this.pend=p;
    		}
    	}
    	  FindAnima( mark)
    	{
    		var p=this.phead;
    		while(p!=null)
    		{
    //			GmPlay.sop(""+p.sMark+"====="+mark);
    			if(p.sMark==mark)return p.xani;
    			p=p.pnext;
    		}
    		return null;
    	}
    }

    class X_FIRST
    {
        constructor()
        {
            this.iType=0;
            this.iX=0;
            this.iY=0;
            this.sName="";
            this.iLen=0;
            this.iXID=0;
            this.pup=null;
            this.pback=null;
            this.pfront=null;
            this.pdown=null;
        }
        Init()
        {
            this.iType=0;
        }

        SetName(nm)
        {
            this.sName=nm;
        }

        SetPos(x,y)
        {
            this.iX = x;
            this.iY = y;
        }

        GetBase(pf)
        {
            if(pf==null)pf=this;
            if(pf.pback==null)return pf;
            else return this.GetBase(pf.pback);
        }

        copyfrom(pf)
        {
            this.iX=pf.iX;
            this.iY=pf.iY;
            this.sName=pf.sName;
        }
        GetCopy()
        {
            
        }
    /*
        GetCopy(pf)
        {
            if(pf==null)pf=this;
            var pnum;
    		var pfloat;
    		var pword;
    		var pclass;
    		var pcode;
    		var pdata;

    		var pret=null;

    		var pp;

    		switch(pf.iType)
    		{
    		case 10:
    			pnum=new X10_NUMBER();
    			pret=pnum;
    			pnum.copyfrom(pf);
    			break;
    		case 20:
    			pfloat=new X20_FLOAT();
    			pret=pfloat;
    			pfloat.copyfrom(pf);
    			break;
    		case 30:
    			pword=new X30_WORD();
    			pret=pword;
    			pword.copyfrom(pf);
    			break;
    		case 40:
    			pclass=new X40_CLASS();
    			pret=pclass;
    			pclass.copyfrom(pf);
    			pp=(pf).pca.phead;
    			while(pp!=null)
    			{
    				pclass.LinkFirst(this.GetCopy(pp));
    				pp=pp.pdown;
    			}
    			break;
    		case 50:
    			pcode=new X50_CODE();
    			pret=pcode;
    			pcode.copyfrom(pf);
    			break;
    		case 60:
    			pdata=new X60_DATA();
    			pret=pdata;
    			pdata.copyfrom(pf);
    			break;
    		}

    		return pret;
        }*/
    }

    class _CLASSARRAY extends X_FIRST
    {
        constructor(pb)
        {
            super();
            this.phead = null;
            this.pend = null;
            this.pnext = null;
            this.pback = pb;
        }

        copyfrom (pca)
        {
            var pp = pca.phead;
            while (pp !== null)
            {
                this.LinkFirst(pp.GetCopy());
                pp = pp.pdown;
            }
            if (pca.pnext != null)
            {
                var pnext = new _CLASSARRAY(pback);
                pnext.copyfrom(pca.pnext);
            }
        }

        UnLinkFirst (pf)
        {
            if (this.phead === null) return null;
            if (this.phead === pf)
            {
                if (this.pend === pf)
                {
                    this.phead = null;
                    this.pend = null;
                    this.pfront = null;
                }
                else
                {
                    this.phead = phead.pdown;
                    this.pfront = this.phead;

                    this.phead.pup = null;
                }
            }
            else
            {
                var pc = this.phead.pdown;
                while (true)
                {
                    if (pc === pf) break;
                    if (pc === this.pend) break;
                    pc = pc.pdown;
                }
                if (pc === pf)
                {
                    if (pc === this.pend) this.pend = pc.pup;
                    pc.pup.pdown = pc.pdown;
                    if (pc.pdown !== null) pc.pdown.pup = pc.pup;
                }
            }
            pf.pup = null;
            pf.pdown = null;
            pf.pback = null;
            return pf;
        }
        LinkFirst (pfirst)
        {
            if (pfirst !== null)
            {
                pfirst.pback = this.pback;
                if (this.phead === null)
                {
                    this.phead = pfirst;
                    this.pend = pfirst;
                    this.pfront = pfirst;
                    pfirst.pup = null;
                    pfirst.pdown = null;
                }
                else
                {
                    this.pend.pdown = pfirst;
                    pfirst.pup = this.pend;
                    pfirst.pdown = null;
                    this.pend = pfirst;
                }
            }
    //		return pfirst;
        }
        AddClass (type)
        {
            var pfirst = null;
            switch (type)
            {
                case 10://数字
                    pfirst = new X10_NUMBER();
                    break;
                case 20://浮点数
                    pfirst = new X20_FLOAT();
                    break;
                case 30://文字
                    pfirst = new X30_WORD();
                    break;
                case 40://data
                    pfirst = new X40_CLASS();
                    break;
                case 50://code
                    pfirst = new X50_CODE();
                    break;
                case 60://数据
                    pfirst = new X60_DATA();
                    break;
            }
            if (pfirst !== null)
            {
                SetXid(pfirst);
                pfirst.pback = this.pback;
                if (this.phead === null)
                {
                    this.phead = pfirst;
                    this.pend = pfirst;
                    this.pfront = pfirst;
                    pfirst.pup = null;
                    pfirst.pdown = null;
                }
                else
                {
                    this.pend.pdown = pfirst;
                    pfirst.pup = this.pend;
                    pfirst.pdown = null;
                    this.pend = pfirst;
                }
            }
            return pfirst;
        }
        FindFirst (name, deep)
        {
            var pf = this.phead;
            while (pf !== null)
            {
                if (pf.sName=== name) return pf;

                if (deep > 0)
                {
                    if (pf.iType === 40)
                    {
                        var pt = pf.pca.FindFirst(name, deep - 1);
                        if (pt !== null) return pt;
                    }
                }
                pf = pf.pdown;
            }
            return null;
        }
        FindNumber (name, deep)
        {
            var pf = this.phead;
            while (pf !== null)
            {
                if (pf.iType === 10)
                {
                    if (pf.sName=== name) return pf;
                }
                if (deep > 0)
                {
                    if (pf.iType === 40)
                    {
                        var pt = pf.pca.FindNumber(name, deep - 1);
                        if (pt !== null) return pt;
                    }
                }
                pf = pf.pdown;
            }
            return null;
        }
        FindFloat (name, deep)
        {
            var pf = this.phead;
            while (pf !== null)
            {
                if (pf.iType === 20)
                {
                    if (pf.sName=== name) return pf;
                }
                if (deep > 0)
                {
                    if (pf.iType === 40)
                    {
                        var pt = pf.pca.FindFloat(name, deep - 1);
                        if (pt !== null) return pt;
                    }
                }
                pf = pf.pdown;
            }
            return null;
        }
        FindWord (name, deep)
        {
            var pf = this.phead;
            while (pf !== null)
            {
                if (pf.iType === 30)
                {
                    if (pf.sName=== name) return pf;
                }
                if (deep > 0)
                {
                    if (pf.iType === 40)
                    {
                        var pt = pf.pca.FindWord(name, deep - 1);
                        if (pt !== null) return pt;
                    }
                }
                pf = pf.pdown;
            }
            return null;
        }

        FindClass (name, deep)
        {
            var pf = this.phead;
            while (pf !== null)
            {
                if (pf.iType === 40)
                {
                    if (pf.sName=== name) return pf;
                }
                if (deep > 0)
                {
                    if (pf.iType === 40)
                    {
                        var pt = pf.pca.FindClass(name, deep - 1);
                        if (pt !== null) return pt;
                    }
                }
                pf = pf.pdown;
            }
            return null;
        }

        FindCode (name, deep)
        {
            var pf = this.phead;
            while (pf !== null)
            {
                if (pf.iType === 50)
                {
                    if (pf.sName=== name) return pf;
                }
                if (deep > 0)
                {
                    if (pf.iType === 40)
                    {
                        var pt = pf.pca.FindCode(name, deep - 1);
                        if (pt !== null) return pt;
                    }
                }
                pf = pf.pdown;
            }
            return null;
        }
        FindData (name, deep)
        {
            var pf = this.phead;
            while (pf !== null)
            {
                if (pf.iType === 60)
                {
                    if (pf.sName=== name) return pf;
                }
                if (deep > 0)
                {
                    if (pf.iType === 40)
                    {
                        var pt = pf.pca.FindData(name, deep - 1);
                        if (pt !== null) return pt;
                    }
                }
                pf = pf.pdown;
            }
            return null;
        }
        FindPoint (name, deep)
        {
            var pf = this.phead;
            while (pf !== null)
            {
                if (pf.iType === 70)
                {
                    if (pf.sName=== name) return pf;
                }
                if (deep > 0)
                {
                    if (pf.iType === 40)
                    {
                        var pt = pf.pca.FindPoint(name, deep - 1);
                        if (pt !== null) return pt;
                    }
                }
                pf = pf.pdown;
            }
            return null;
        }

        FindMark (mark)
        {
            var pf = this.phead;
            while (pf !== null)
            {
                if (pf.iType === 40)
                {
                    var pclass = pf;
                    if (pclass.pca.phead === null) return null;//空集合
                    if (pclass.pca.phead.sName=== "唯一处理标识")
                    {
                        if (pclass.pca.phead.iType === 10)
                        {
                            var pnum = pclass.pca.phead;
                            if (pnum.iNumber === mark)
                            {
                                return pclass;
                            }
                        }
                    }
                    pclass = pclass.FindMark(mark);
                    if (pclass !== null) return pclass;
                }
                pf = pf.pdown;
            }
            return null;
        }

        DeleteObj ()
        {
        }
    }

    class X40_CLASS$1 extends X_FIRST
    {
        constructor()
        {
            super();
            this.iType = 40;
            this.iLen = 8;
            this.sName = "";
            this.iArray = 1;
            this.pobj=null;
            this.pca=new _CLASSARRAY(this);
            this.bOpenTree=false;
        }

        copyfrom(p)
    {
        this.iX=p.iX;
        this.iY=p.iY;
        this.sName=p.sName;
        this.iArray=p.iArray;
    //    this.pca.copyfrom(p.pca);
    }
    _NEW_x40()
    {
        var i;
        var pf;
        var pclass;
        var pold,pnew;
        pold=this.pca;
        for(i=1;i<this.iArray;i++)
        {
            pnew=new _CLASSARRAY(this);
            pf=this.pca.phead;
            while(pf!==null)
            {
                pnew.LinkFirst(pf.GetCopy());
                pf=pf.pdown;
            }
            pold.pnext=pnew;
            pold=pnew;
        }
        for(i=0;i<iArray;i++)
        {
            pf=pca.phead;
            while(pf!=null)
            {
                if(pf.iType==40)
                {
                    pclass=pf;
                    pclass._NEW_x40();
                }
                pf=pf.pdown;
            }
        }
    }
    MoveUpFirst(pf)
    {
        pca.MoveUpFirst(pf);
    }
    MoveDownFirst(pf)
    {
    }
    UnLinkFirst(pf)
    {
        return this.pca.UnLinkFirst(pf);
    }

    LinkFirst(pfirst)
    {
        this.pca.LinkFirst(pfirst);
    }
    AddClass(type)
    {
        return this.pca.AddClass(type);
    }
    FindFirst(name,deep)
    {
        if(deep==null)deep=0;
        return this.pca.FindFirst(name,deep);
    }
    // FindFirst: function(name)
    // {
    //     return this.pca.FindFirst(name,0);
    // },
    FindFirstByPath(path)
    {
        var tt=path.split("/");
        var pc=null;
        for(var i=1;i<tt.length;i++)
        {
            if(pc==null)pc=this.FindFirst(tt[i]);
            else pc=pc.FindFirst(tt[i]);
        }
        return pc;

        var i;
        var p=0;
        var name;
        var deep = 0;
        var pc=this;

        i = 0;
        for (p; p < path.length; p++)
        {
            if (path[p] === '/')
            {
                name[i] = 0;
                if (deep === 0)
                {
                    if (pc.sName!== name)return null;
                }
                else
                {
                    pc = pc.FindFirst(name);
                    if (pc === null)return null;
                }
                deep++;
                i = 0;
            }
            else
            {
                name[i++] = path[p];
            }
        }
        name[i] = 0;
        return pc.FindFirst(name);
    }
    FindNumber(name)
    {
        return this.pca.FindNumber(name,0);
    }

    FindFloat(name)
    {
        return this.pca.FindFloat(name,0);
    }
    /*
    X30_WORD *X40_CLASS::FindWord( ap, const char *name)
    {
    	_CLASSARRAY *p=pca;
    	for(int i=0;i<ap;i++)p=p.pnext;
    	return p.FindWord(name,0);
    }*/
    FindWord(name)
    {
        return this.pca.FindWord(name,0);
    }
    FindCode(name)
    {
        return this.pca.FindCode(name, 0);
    }
    FindClass(name)
    {
        return this.pca.FindClass(name,0);
    }
    FindPoint(name)
    {
        return this.pca.FindPoint(name,0);
    }
    FindMark(mark)
    {
        return this.pca.FindMark(mark);
    }

    DeleteObj()
    {
    }
        GetCopy()
        {
            var pret=new X40_CLASS$1();
            pret.copyfrom(this);
            var pp=this.pca.phead;
            while(pp!=null)
            {
                pret.LinkFirst(pp.GetCopy());
                pp=pp.pdown;
            }
            return pret;
        }
    }

    class X10_NUMBER$1 extends X_FIRST
    {
        constructor()
        {
            super();

            this.iNumber= 0;
            this.iType = 10;
            this.iLen = 4;
            this.iNumber = 0;
        }
        Set(ii)
        {
            this.iNumber = ii;
        }

        Get ()
        {
            return this.iNumber;
        }
        copyfrom (p)
        {
            this.iX = p.iX;
            this.iY = p.iY;
            this.sName = p.sName;
            this.iNumber = p.iNumber;
        }
        GetCopy()
        {
            var pret=new X10_NUMBER$1();
            pret.copyfrom(this);
            return pret;
        }
    }

    class X20_FLOAT$1 extends X_FIRST
    {
        constructor()
        {
            super();
            this.fFloat=0;

            this.iType = 20;
            this.iLen = 4;
            this.sName = "";
            this.fFloat = 0;
        }
        Set (f)
        {
            this.fFloat = f;
        }

        Get ()
        {
            return this.fFloat;
        }
        copyfrom (p)
        {
            this.iX = p.iX;
            this.iY = p.iY;
            this.sName = p.sName;
            this.fFloat = p.fFloat;
        }
        GetCopy()
        {
            var pret=new X20_FLOAT$1();
            pret.copyfrom(this);
            return pret;
        }
    }

    class X30_WORD$1 extends X_FIRST
    {
        constructor()
        {
            super();
            this.pword="";
            this.iType = 30;
            this.iLen = 8;
            this.sName = "";
            this.pword = "";
        }
        Set (ss)
        {
            this.pword = ss;
        }

        Get ()
        {
            return this.pword;
        }
        copyfrom (p)
        {
            this.iX = p.iX;
            this.iY = p.iY;
            this.sName = p.sName;
            this.pword = p.pword;
        }
        GetCopy()
        {
            var pret=new X30_WORD$1();
            pret.copyfrom(this);
            return pret;
        }
    }

    class XmsCBaseControl {
    	constructor()
    	{
    		
    	}
    	Draw()
    	{
    	}
    	Draw( offx, offy)
    	{
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		return false;
    	}

    	bInConrtolRect( x, y)
    	{
    		return XDefine$1.bInRect(x,y,this.iOffX+this.iX,this.iOffY+this.iY,this.iW,this.iH);
    	}
    	DrawControlRect( pm3f)
    	{
    		var i;
    		var x=this.iX+this.iOffX;
    		var y=this.iY+this.iOffY;
    		var w=this.iW;
    		var h=this.iH;
    		for(i=0;i<5;i++)
    		{
    //			pm3f->DrawRect(x-i,y-i,w+i*2,h+i*2,0xff000000|((i*50)<<16)|((255-i*50)<<8));
    			pm3f.DrawRect_2D(x-i,y-i,w+i*2,h+i*2,0xffff0000|((255-i*50)<<8));
    		}
    	}
    }

    class XmsCAnima extends XmsCBaseControl{
    	constructor( p,  pc,  pr)
    	{
    		super();
    		this.iX=0;
    		this.iY=0;
    		this.pm3f=M3DFast$1.xm3f;
    		this.pclass = pc;
    		this.prun = pr;
    		this.ReLoad();
    	}

    	ReLoad()
    	{
    		var pw1,pw2;
    		var pc;
    		var pn;
    		var pf;

    		pc=this.pclass.FindClass("动画指向");//动画指向
    		if(pc!=null)
    		{
    			pw1=pc.FindWord("动画分类名");
    			pw2=pc.FindWord("动画名");
    			if(pw1!=null && pw2!=null)
    			{
    				this.Init(XmsEngine.panimaole.FindAnima(pw1.pword),pw2.pword);
    			}
    		}

    		pn=this.pclass.FindNumber("坐标X");
    		if(pn!=null)this.iX=pn.iNumber;
    		pn=this.pclass.FindNumber("坐标Y");
    		if(pn!=null)this.iY=pn.iNumber;

    		pn=this.pclass.FindNumber("绘制第几帧");
    		if(pn!=null)this.xaa.iFrame=pn.iNumber;

    		pn=this.pclass.FindNumber("透明度");
    		if(pn!=null)this.iAlpha=pn.iNumber;

    		pf=this.pclass.FindFloat("水平缩放");
    		if(pf!=null)this.fSw=pf.fFloat;
    		pf=this.pclass.FindFloat("垂直缩放");
    		if(pf!=null)this.fSh=pf.fFloat;

    		pn=this.pclass.FindNumber("旋转角度");
    		if(pn!=null)this.iRa=pn.iNumber;
    		pn=this.pclass.FindNumber("旋转锚点X");
    		if(pn!=null)this.iRax=pn.iNumber;
    		pn=this.pclass.FindNumber("旋转锚点Y");
    		if(pn!=null)this.iRay=pn.iNumber;

    	}
    	Init( pani, s)
    	{
    		this.xaa=pani.InitAnimaWithName(s,null);
    	}
    	
    	 Move( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    	}

    	Draw( offx, offy)
    	{
    		this.xaa.DrawEx(this.iX+offx,this.iY+offy,this.iAlpha,this.fSw,this.fSh,this.iRa,this.iRax,this.iRay);
    	}
    }

    class XmsCButton$1 extends XmsCBaseControl{
    	
    	 constructor( p,  pc,  pr)
    	{
    		super();
    		this.exts=new Int32Array(16);
    		this.pm3f=p;
    		this.ClearButton();
    		this.pclass = pc;
    		this.prun = pr;
    		this.ReLoad();
    	}
    	ReLoad()
    	{
    		var pc;
    		var pw1,pw2;
    		var pn1,pn2,pn3,pn4;
    //		XmsCButton pbtn=new XmsCButton(M3DFast.xm3f);

    		pw1=this.pclass.FindWord("按钮文字");
    		if(pw1!=null)this.sName=pw1.pword;

    		pc=this.pclass.FindClass("动画指向");//动画指向
    		if(pc!=null)
    		{
    			pw1=pc.FindWord("动画分类名");
    			pw2=pc.FindWord("动画名");
    			if(pw1!=null && pw2!=null)
    			{
    				this.Init(XmsEngine.panimaole.FindAnima(pw1.pword),pw2.pword);
    			}
    		}
    		
    		pc=this.pclass.FindMark(10);//绘制大小
    		if(pc!=null)
    		{
    			pn1=pc.FindNumber("坐标X");
    			pn2=pc.FindNumber("坐标Y");
    			pn3=pc.FindNumber("宽度");
    			pn4=pc.FindNumber("高度");
    			if(pn1!=null && pn2!=null && pn3!=null && pn4!=null)
    			{
    				this.Move(pn1.iNumber,pn2.iNumber,pn3.iNumber,pn4.iNumber);
    			}
    		}
    	}
    	 ClearButton()
    	{
    		this.bSingleButton=true;

    		this.bMouseIn=false;
    		this.bMouseDown=false;
    		this.bVisible=true;
    		this.bDisable=false;
    		this.bChecked=false;

    		this.sName="";

    		this.iX=0;
    		this.iY=0;
    		this.iOffX=0;
    		this.iOffY=0;
    	}
    	Init( pani, s)
    	{
    		this.xaa=pani.InitAnimaWithName(s, null);
    		if(this.xaa.iDelay>=0)this.bSingleButton=false;
    	}
    	Move( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    	}
    	Draw( offx, offy)
    	{
    		this.iOffX=offx;
    		this.iOffY=offy;
    		if(!this.bVisible)return;
    		if(this.bDisable)
    		{
    			this.pm3f.FillRect_2D(this.iX+this.iOffX,this.iY+this.iOffY,this.iX+this.iW,this.iY+this.iH,0xC0ffffff);
    			return;
    		}
    		while(PublicInterface.gi().bInBound(this.iX,this.iY,this.iW,this.iH))this.iX--;
    		this.prun.RunCode(this.pclass.FindCode("自动执行"));
    		if(this.bMouseIn)
    		{
    			if(this.bMouseDown)
    			{
    				if(!this.bSingleButton)this.xaa.Draw(this.iX+this.iOffX,this.iY+this.iOffY,1);
    				else
    				{
    					this.pm3f.FillRect_2D(this.iX+this.iOffX,this.iY+this.iOffY,this.iX+this.iOffX+this.iW,this.iY+this.iOffY+this.iH,0x80ffffff);
    					this.pm3f.DrawRect_2D(this.iX+this.iOffX,this.iY+this.iOffY,this.iX+this.iOffX+this.iW,this.iY+this.iOffY+this.iH,0xffffffff);
    				}
    			}
    			else
    			{
    				if(!this.bSingleButton)this.xaa.Draw(this.iX+this.iOffX,this.iY+this.iOffY,0);
    				else
    				{
    					this.pm3f.FillRect_2D(this.iX+this.iOffX,this.iY+this.iOffY,this.iX+this.iOffX+this.iW,this.iY+this.iOffY+this.iH,0x40ffffff);
    					this.pm3f.DrawRect_2D(this.iX+this.iOffX,this.iY+this.iOffY,this.iX+this.iOffX+this.iW,this.iY+this.iOffY+this.iH,0xffffffff);
    				}
    			}
    		}
    		else
    		{
    			if(!this.bSingleButton)this.xaa.Draw(this.iX+this.iOffX,this.iY+this.iOffY,0);
    			else
    			{
    				this.pm3f.DrawRect_2D(this.iX+this.iOffX,this.iY+this.iOffY,this.iX+this.iW+this.iOffX,this.iY+this.iH+this.iOffY,0xffffffff);
    			}
    		}
    		if(this.sName.length>0)
    		{
    			if(this.bSingleButton)this.pm3f.DrawTextEx(this.iX+this.iW/2+this.iOffX,this.iY+this.iH/2+this.iOffY,this.sName,0xffffffff,15,101,1,1,0,-2,-2);
    			else this.pm3f.DrawTextEx(this.iX+this.iW/2+this.iOffX,this.iY+this.iH/2+this.iOffY,this.sName,0xffffff00,30,101,1,1,0,-2,-2);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(!this.bVisible)return false;
    		if(this.bDisable)return false;

    		if(!this.bMoveIn(x,y))
    		{
    			this.bMouseDown=false;
    			return false;
    		}
    		switch(msg)
    		{
    		case 1:
    			this.bMouseDown=true;
    			break;
    		case 2:
    			break;
    		case 3:
    			if(this.bMouseDown)
    			{
    				this.bMouseDown=false;
    				this.bChecked=true;

    				this.prun.RunCode(this.pclass.FindCode("点击执行"));
    			}
    			break;
    		}

    		return true;
    	}
    	 bMoveIn( x, y)
    	{
    		this.bMouseIn=false;
    		if(this.bSingleButton)
    		{
    			if(x>=this.iX+this.iOffX && x<=this.iX+this.iW+this.iOffX && y>=this.iY+this.iOffY && y<=this.iY+this.iH+this.iOffY)this.bMouseIn=true;
    			else this.bMouseIn=false;
    		}
    		else
    		{
    			if(x>=this.iX+this.iOffX && x<=this.iX+this.iW+this.iOffX && y>=this.iY+this.iOffY && y<=this.iY+this.iH+this.iOffY)this.bMouseIn=true;
    			else this.bMouseIn=false;
    		}
    		return this.bMouseIn;
    	}
    	IsChecked()
    	{
    		if(this.bChecked)
    		{
    			this.bChecked=false;
    			return true;
    		}
    		return false;
    	}
    }

    class XInput
    {
        constructor(ani)
        {
            this.pani=ani;
    		this.pm3f=ani.pm3f;
    		this.bMouseDown=false;
    		this.sDetail="";
    		this.sBackPrompt="";
    		this.bDetailChanged=false;
    		this.bFinished=false;
    		this.bHideText=false;
    		this.iTextSize=30;
    		this.iBackSize=30;
    		this.bNumber=false;
    		this.iMaxNumber=0x7fffffff;
    		this.iLength=64;//默认可输入64个字
    		this.iTextColor=0xffffffff;

    		// if(XInput.input_handle==null)XInput.input_handle=XInput.init_handle();

    		this.bShowing=false;
    	}
    	onscr()
    	{
    		this.ph=XInput.GetFreeHandle(this);
    		
    		if(!this.ph.handle.focus)
    		{
    			this.ph.handle.pos(this.iX,this.iY);
    			this.ph.handle.width=this.iW;
    			this.ph.handle.height=this.iH;
    		}

    		this.ph.iLife=3;
    	}
        Draw()
    	{
    		this.bShowing=true;
    		if(this.bMouseDown)this.pm3f.FillRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0x40ffffff);
    		this.pm3f.DrawRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0xffffffff);
    		this.DrawText();
    	}

    	
    	DrawText()
    	{
    		this.bShowing=true;
    		if(this.bHideText)return;
    		this.pm3f.SetViewClip(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH);
    		if(this.sDetail.length<=0)
    		{
    			if(this.sBackPrompt.length>0)this.pm3f.DrawTextEx(this.iX+5, this.iY+this.iH/2, this.sBackPrompt,0x30000000, this.iBackSize, 101, 1, 1, 0, 0, -2);
    		}
    		else
    		{
    			this.pm3f.DrawTextEx(this.iX+5, this.iY+this.iH/2, this.sDetail,this.iTextColor, this.iTextSize, 101, 1, 1, 0, 0, -2);
    		}
    		this.pm3f.NoClip();
    	}
    	OpenInput()
    	{
    		this.bDetailChanged=false;
    		this.bFinished=false;
    		this.bMouseDown=false;
    // //		message=new Message();
    // //		message.what=1;
    // //		message.obj=this;
    // //		PublicInterface.mMain.mHandler.sendMessage(message);
    // //Laya.stage.removeChild(XInput.input_handle);
    // XInput.input_handle.text=this.sDetail;
    // XInput.input_handle.focus=true;
    // //Laya.stage.addChild(XInput.input_handle);
    // XInput.lock_x=this;

    this.ph=XInput.GetFreeHandle(this);
    this.ph.handle.text=this.sDetail;
    		XDefine$1.sop("OpenInput");
    	}
    	bChanged()
    	{
    		if(this.bDetailChanged)
    		{
    			this.bDetailChanged=false;
    			return true;
    		}
    		return false;
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(!XDefine$1.bInRect(x,y,this.iX,this.iY,this.iW,this.iH))
    		{
    			this.bMouseDown=false;
    			return false;
    		}
    		switch(msg)
    		{
    		case TouchManager.TOUCH_DOWN:
    			this.bMouseDown=true;
    			break;
    		case TouchManager.TOUCH_UP:
    			this.OpenInput();

    			break;
    		}
    		return true;
    	}
    	Move( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;

    		// XInput.input_handle.pos(x,y);
    		// XInput.input_handle.width=w;
    		// XInput.input_handle.height=h;
    	}
    }

    XInput.init_handle=function()
    {
    	var it = new Laya.TextInput(this.sDetail);

    	it.width = 200;//width：[override] 表示显示对象的宽度，以像素为单位。 注：当值为0时，宽度为自适应大小。    //height：[override] 表示显示对象的高度，以像素为单位。 注：当值为0时，高度为自适应大小。    
    	it.height = 50;
    	it.pos(0,-50);//设置组件显示的坐标位置，相当于分别设置x和y属性，继承自父类 Sprite

    	it.maxChars=64;
    	// textInput.wordWrap = true;//此属性继承自父类 Label     //wordWrap 表示文本是否自动换行，默认为false。 若值为true，则自动换行；否则不自动换行    
    	//textInput.multiline =true;//设置textInput的多行输入
    	it.color="#ffffff";
    	it.bgColor = "#303030";//文本背景颜色，以字符串表示。 继承自父类 Label
    	it.fontSize = 22;//指定文本的字体大小（以像素为单位）。 默认为20像素，可以通过 Text.defaultSize 设置默认大小。     //继承自父类 Label
    	// this.input_user.focus = true;//设置输入框默认获得焦点
    	it.alpha=0.01;
    	it.textField.alpha=0.01;

    	Laya.stage.addChild(it);
    	return it;
    };
    XInput.input_handle=null;
    XInput.lock_x=null;
    XInput.move_handle=function(x,y,w,h)
    {
    	XInput.input_handle.width = w;//width：[override] 表示显示对象的宽度，以像素为单位。 注：当值为0时，宽度为自适应大小。    //height：[override] 表示显示对象的高度，以像素为单位。 注：当值为0时，高度为自适应大小。    
    	XInput.input_handle.height = h;
    	XInput.input_handle.pos(x,y);//设置组件显示的坐标位置，相当于分别设置x和y属性，继承自父类 Sprite
    };

    class InputHandle
    {
    	constructor()
    	{
    		this.bUseing=false;
    		this.handle=XInput.init_handle();
    		this.iLife=3;
    		this.pinput=null;
    	}
    	Logic()
    	{
    		if(this.iLife>0)
    		{
    			this.iLife--;
    			this.pinput.sDetail=this.handle.text;
    		}
    		else
    		{
    			this.bUseing=false;
    			this.iLife=3;
    			this.handle.pos(-5,-5);
    			this.handle.width=1;
    			this.handle.height=1;
    			this.handle.text="";
    		}
    	}
    	Logic2()
    	{
    		if(this.handle.focus)
    		{
    			this.handle.pos(-5,-5);
    			this.handle.width=1;
    			this.handle.height=1;
    		}
    	}
    }
    InputHandle.pp=new Array();

    XInput.make_handle=function()
    {
    	for(var i=0;i<10;i++)InputHandle.pp[i]=new InputHandle();
    };
    XInput.GetFreeHandle=function(pinput)
    {
    	for(var i=0;i<InputHandle.pp.length;i++)
    	{
    		if(InputHandle.pp[i].bUseing)
    		{
    			if(InputHandle.pp[i].pinput==pinput)return InputHandle.pp[i];
    		}
    	}
    	for(var i=0;i<InputHandle.pp.length;i++)
    	{
    		if(InputHandle.pp[i].bUseing==false)
    		{
    			InputHandle.pp[i].bUseing=true;
    			InputHandle.pp[i].pinput=pinput;
    			InputHandle.pp[i].handle.text="";
    			return InputHandle.pp[i];
    		}
    	}
    	InputHandle.pp[i]=new InputHandle();
    	InputHandle.pp[i].bUseing=true;
    	InputHandle.pp[i].pinput=pinput;
    	InputHandle.pp[i].handle.text="";
    	return InputHandle.pp[i];
    };
    XInput.HandleLogic=function()
    {
    	for(var i=0;i<InputHandle.pp.length;i++)
    	{
    		if(InputHandle.pp[i].bUseing)
    		{
    			InputHandle.pp[i].Logic();
    		}
    	}
    };
    XInput.HandleLogic2=function()
    {
    	for(var i=0;i<InputHandle.pp.length;i++)
    	{
    		if(InputHandle.pp[i].bUseing)
    		{
    			InputHandle.pp[i].Logic2();
    		}
    	}
    };

    class XmsCText extends XmsCBaseControl{
    	 constructor( m3f,  pc,  pr)
    	{
    		super();
    		this.iX=0;
    		this.iY=0;
    		this.pm3f=m3f;
    		this.pclass = pc;
    		this.prun = pr;
    		this.ReLoad();
    	}
    	ReLoad()
    	{
    		var pn;
    		var pf;
    		var pw;

    		pn=this.pclass.FindNumber("坐标X");
    		if(pn!=null)this.iX=pn.iNumber;
    		pn=this.pclass.FindNumber("坐标Y");
    		if(pn!=null)this.iY=pn.iNumber;

    		pw=this.pclass.FindWord("文字内容");
    		if(pw!=null)this.sText=pw.pword;

    		GmPlay$1.sop("Reload Text = "+this.sText);
    		
    		pw=this.pclass.FindWord("颜色");
    		if(pw!=null)
    		{
    			var i=0;
    			this.iColor=0;
    			while(pw.pword.length>i)
    			{
    				if(pw.pword.charAt(i)>='0' && pw.pword.charAt(i)<='9')this.iColor=(this.iColor<<4)|(pw.pword.charAt(i)-'0');
    				else if(pw.pword.charAt(i)>='a' && pw.pword.charAt(i)<='f')this.iColor=(this.iColor<<4)|(pw.pword.charAt(i)-'a'+10);
    				else if(pw.pword.charAt(i)>='A' && pw.pword.charAt(i)<='F')this.iColor=(this.iColor<<4)|(pw.pword.charAt(i)-'A'+10);
    				i++;
    			}
    			this.iColor|=0xff000000;
    		}

    		pn=this.pclass.FindNumber("文字大小");
    		if(pn!=null)this.iSize=pn.iNumber;
    		pn=this.pclass.FindNumber("透明度");
    		if(pn!=null)this.iAlpha=pn.iNumber;

    		pf=this.pclass.FindFloat("水平缩放");
    		if(pf!=null)this.fSw=pf.fFloat;
    		pf=this.pclass.FindFloat("垂直缩放");
    		if(pf!=null)this.fSh=pf.fFloat;

    		pn=this.pclass.FindNumber("旋转角度");
    		if(pn!=null)this.iRa=pn.iNumber;
    		pn=this.pclass.FindNumber("旋转锚点X");
    		if(pn!=null)this.iRax=pn.iNumber;
    		pn=this.pclass.FindNumber("旋转锚点Y");
    		if(pn!=null)this.iRay=pn.iNumber;
    		
    		var pc;//=this.pclass.FindClass("描边");
    		if(pc==null)this.bStroke=false;
    		else
    		{
    			this.bStroke=true;
    			pn=pc.FindNumber("类型");
    			if(pn!=null)this.iStrokeType=pn.iNumber;

    			pw=pc.FindWord("颜色");
    			if(pw!=null)
    			{
    				var i=0;
    				this.iStrokeColor=0;
    				while(pw.pword.length>i)
    				{
    					if(pw.pword.charAt(i)>='0' && pw.pword.charAt(i)<='9')this.iStrokeColor=(this.iStrokeColor<<4)|(pw.pword.charAt(i)-'0');
    					else if(pw.pword.charAt(i)>='a' && pw.pword.charAt(i)<='f')this.iStrokeColor=(this.iStrokeColor<<4)|(pw.pword.charAt(i)-'a'+10);
    					else if(pw.pword.charAt(i)>='A' && pw.pword.charAt(i)<='F')this.iStrokeColor=(this.iStrokeColor<<4)|(pw.pword.charAt(i)-'A'+10);
    					i++;
    				}
    				this.iStrokeColor|=0xff000000;
    			}
    		}
    		pc=this.pclass.FindClass("格式化输出");
    		if(pc==null)this.bFormat=false;
    		else
    		{
    			this.bFormat=true;
    			pn=pc.FindNumber("行宽");
    			if(pn!=null)this.iFormatW=pn.iNumber;
    			pn=pc.FindNumber("行高");
    			if(pn!=null)this.iFormatH=pn.iNumber;
    		}
    	}
    	 Move( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    	}
    	Draw( offx, offy)
    	{
    		this.iOffX=offx;
    		this.iOffY=offy;
    		if(this.bFormat)
    		{
    			FormatString.gi().FormatEx(this.sText,this.iFormatW,this.iSize,this.bStroke?this.iStrokeType:0,this.iStrokeColor,this.iFormatH);
    //			x_pole.pfs.iBaseColor=this.iColor;
    //			x_pole.pfs.FormatEx(this.sText,this.iFormatW,this.iSize,this.bStroke?this.iStrokeType:0,this.iStrokeColor,this.iFormatH);
    //			x_pole.pfs.Draw(this.iX+offx,this.iY+offy);
    			FormatString.gi().Draw(this.iX+offx,this.iY+offy);

    			this.iTextX=this.iX+offx;
    			this.iTextY=this.iY+offy;
    			this.iTextW=FormatString.gi().iW;
    			this.iTextH=FormatString.gi().iH;
    		}
    		else
    		{
    			if(this.bStroke)this.pm3f.DrawText_2(this.iX+offx,this.iY+offy,this.sText,this.iColor,this.iSize,this.iAlpha,this.fSw,this.fSh,this.iRa,this.iRax,this.iRay,this.iStrokeType,this.iStrokeColor);
    			else this.pm3f.DrawTextEx(this.iX+offx,this.iY+offy,this.sText,this.iColor,this.iSize,this.iAlpha,this.fSw,this.fSh,this.iRa,this.iRax,this.iRay);
    			this.iTextX=this.pm3f.drawrect[0];
    			this.iTextY=this.pm3f.drawrect[1];
    			this.iTextW=this.pm3f.drawrect[2]-this.pm3f.drawrect[0];
    			this.iTextH=this.pm3f.drawrect[3]-this.pm3f.drawrect[1];
    		}
    //		
    //		if(this.bStroke)this.pm3f.DrawText_2(this.iX+offx,this.iY+offy,this.sText,this.iColor,this.iSize,this.iAlpha,this.fSw,this.fSh,this.iRa,this.iRax,this.iRay,this.iStrokeType,this.iStrokeColor);
    //		else this.pm3f.DrawTextEx(this.iX+offx,this.iY+offy,this.sText,this.iColor,this.iSize,this.iAlpha,this.fSw,this.fSh,this.iRa,this.iRax,this.iRay);
    //		
    //		this.iTextX=this.pm3f.drawrect[0];
    //		this.iTextY=this.pm3f.drawrect[1];
    //		this.iTextW=this.pm3f.drawrect[2]-this.pm3f.drawrect[0];
    //		this.iTextH=this.pm3f.drawrect[3]-this.pm3f.drawrect[1];
    	}
    	
    	 bInConrtolRect( x, y)
    	{
    		return XDefine$1.bInRect(x,y,this.iTextX,this.iTextY,this.iTextW,this.iTextH);
    	}

    	DrawControlRect( pm3f)
    	{
    		var i;
    		var x=this.iTextX;
    		var y=this.iTextY;
    		var w=this.iTextW;
    		var h=this.iTextH;
    		for(i=0;i<5;i++)
    		{
    //			this.pm3f.DrawRect(x-i,y-i,w+i*2,h+i*2,0xff000000|((i*50)<<16)|((255-i*50)<<8));
    			this.pm3f.DrawRect_2D(x-i,y-i,w+i*2,h+i*2,0xffff0000|((255-i*50)<<8));
    		}
    	}
    }

    class XmsCFrame$1 extends XmsCBaseControl{
    	
    	constructor( p,  pc,  pr)
    	{
    		super();
    		this.pm3f=p;
    		this.xin=null;
    		this.pclass = pc;
    		this.prun = pr;
    		this.ReLoad();
    	}
    	ReLoad()
    	{
    		var pc;
    		var pn1,pn2,pn3,pn4;
    		var pw1,pw2;

    		pc=this.pclass.FindClass("框体区域");
    		if(pc!=null)
    		{
    			pn1=pc.FindNumber("坐标X");
    			pn2=pc.FindNumber("坐标Y");
    			pn3=pc.FindNumber("宽度");
    			pn4=pc.FindNumber("高度");
    			if(pn1!=null && pn2!=null && pn3!=null && pn4!=null)
    			{
    				this.Move(pn1.iNumber,pn2.iNumber,pn3.iNumber,pn4.iNumber);
    			}
    		}

    		pc=this.pclass.FindClass("动画指向");//动画指向
    		if(pc!=null)
    		{
    			pw1=pc.FindWord("动画分类名");
    			pw2=pc.FindWord("动画名");
    			if(pw1!=null && pw2!=null)
    			{
    				this.Init(XmsEngine.panimaole.FindAnima(pw1.pword),pw2.pword);
    			}
    		}

    		pw1=this.pclass.FindWord("框体类型");
    		if(pw1!=null)
    		{
    			if(pw1.pword=="整框")this.iFrameType=0;
    			else if(pw1.pword=="横向框")this.iFrameType=1;
    		}
    		pn1=this.pclass.FindNumber("动画单位宽");
    		if(pn1!=null)this.iBw=pn1.iNumber;
    		pn1=this.pclass.FindNumber("动画单位高");
    		if(pn1!=null)this.iBh=pn1.iNumber;
    		
    		pc=this.pclass.FindClass("可输入");
    		if(pc!=null)
    		{
    			this.bCanInput=true;
    			pc.pobj=new XmsCText(this.pm3f,pc,this.prun);
    			this.pinput=pc.pobj;
    			this.px30_word=pc.FindWord("文字内容");
    		}
    		else this.bCanInput=false;

    		pw1=this.pclass.FindWord("默认隐藏");
    		if(pw1==null)this.bHide=false;
    		else this.bHide=true;
    	}
    	Init( pani, s)
    	{
    		this.faa=pani.InitAnimaWithName(s,null);
    	}
    	Move( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    	}
    	SetDetail( s)
    	{
    		this.px30_word.Set(s);
    		this.pinput.sText=s;
    	}
    	Draw( offx, offy)
    	{
    		if(this.bHide)return;
    		this.iOffX=offx;
    		this.iOffY=offy;
    		var xx=this.iX+offx;
    		var yy=this.iY+offy;
    		
    		var scalw=1,scalh=1;
    		if(this.iBw+this.iBw>this.iW)scalw=0.5*this.iW/this.iBw;
    		if(this.iBh+this.iBh>this.iH)scalh=0.5*this.iH/this.iBh;
    		
    		if(this.iFrameType==0)
    		{//整框
    			if(this.iW-this.iBw-this.iBw>0 && this.iH-this.iBh-this.iBh>0)this.faa.DrawEx(xx+this.iBw-2, yy+this.iBh-2, 8, 101, 1.0*(this.iW-this.iBw-this.iBw+4)/this.iBw, 1.0*(this.iH-this.iBh-this.iBh+4)/this.iBh, 0, 0, 0);
    			if(this.iW-this.iBw-this.iBw>0)this.faa.DrawEx(xx+this.iBw-2, yy, 1, 101, 1.0*(this.iW-this.iBw-this.iBw+4)/this.iBw, 1, 0, 0, 0);
    			if(this.iH-this.iBh-this.iBh>0)this.faa.DrawEx(xx+this.iW-this.iBw, yy+this.iBh-2, 3, 101, 1,1.0*(this.iH-this.iBh-this.iBh+4)/this.iBh, 0, 0, 0);
    			if(this.iW-this.iBw-this.iBw>0)this.faa.DrawEx(xx+this.iBw-2, yy+this.iH-this.iBh, 5, 101, 1.0*(this.iW-this.iBw-this.iBw+4)/this.iBw, 1, 0, 0, 0);
    			if(this.iH-this.iBh-this.iBh>0)this.faa.DrawEx(xx, yy+this.iBh-2, 7, 101, 1,1.0*(this.iH-this.iBh-this.iBh+4)/this.iBh,  0, 0, 0);
    			
    			this.faa.DrawEx(xx,yy,0,101,scalw,scalh,0,0,0);
    			this.faa.DrawEx( (xx+this.iW-scalw*(this.iBw)),yy,2,101,scalw,scalh,0,0,0);
    			this.faa.DrawEx( (xx+this.iW-scalw*(this.iBw)), (yy+this.iH-scalh*(this.iBh)),4,101,scalw,scalh,0,0,0);
    			this.faa.DrawEx(xx, (yy+this.iH-scalh*(this.iBh)),6,101,scalw,scalh,0,0,0);
    		}
    		else if(this.iFrameType==1)
    		{//横向框
    			this.faa.Draw(xx,yy,0);
    			if(this.iW-this.iBw-this.iBw>0)this.faa.DrawEx(xx+this.iBw,yy,1,101,1.0*(this.iW-this.iBw-this.iBw)/this.iBw,1,0,0,0);
    			this.faa.Draw(xx+this.iW-this.iBw,yy,2);
    		}
    		if(this.bCanInput)
    		{
    			this.pinput.Draw(xx,yy);
    			if(this.xin!=null && this.xin.bChanged())this.SetDetail(this.xin.sDetail);
    		}
    		if(this.xin!=null)this.xin.onscr();
    	}
    	ProcTouch( msg,  x,  y) 
    	{
    		if(this.bHide)return false;
    		if(this.bCanInput)
    		{
    			if(XDefine$1.bInRect(x,y,this.iOffX+this.iX,this.iOffY+this.iY,this.iW,this.iH))
    			{
    				if(msg==3)
    				{
    					if(this.xin==null)this.xin=new XInput(GmPlay$1.xani_ui);
    					this.xin.sDetail=this.pinput.sText;
    					this.xin.OpenInput();
    				}
    				return true;
    			}
    		}
    		return false;
    	}
    }

    class _LISTLINE {
    //	public Object pfiled[ ];
    //	public XmsCFrame pcoverframe[ ];//选中覆盖框
    //	public _LISTLINE pnext;

    	constructor()
    	{
    		this.pnext=null;
    		this.pfiled=new Array(32);//
    		this.pcoverframe=new Array(32);//
    	}
    }

    class _LISTTITLE {
    /*	public int iWidth;
    	public String sName;
    	public int iType;//数字0，文字1，容器2
    	public int iLocate;//对齐方式，左0,中1,右2
    	
    	public XmsCFrame pframe;
    	public boolean bDown;*/
    	constructor()
    	{
    		pframe=null;
    		bDown=false;
    	}
    }

    class XmsCList extends XmsCBaseControl{
    	
    	 constructor( p,  pc,  pr)
    	{
    		super();
    		this.iX=0;
    		this.iY=0;
    		this.plines=null;
    		this.iScrollY=0;
    		this.bTouchDown=false;
    		this.bLockScroll=false;
    		this.iSelectLine=-1;
    		this.pm3f=M3DFast$1.xm3f;
    		this.pclass = pc;
    		this.prun = pr;
    		this.ReLoad();
    	}
    	ReLoad()
    	{
    		var i,j;
    		var pc,pc2,pc3;
    		var pn1,pn2,pn3,pn4;
    		var pw;

    		pc=this.pclass.FindClass("列表区域");//列表区域
    		if(pc!=null)
    		{
    			pn1=pc.FindNumber("坐标X");
    			pn2=pc.FindNumber("坐标Y");
    			pn3=pc.FindNumber("宽度");
    			pn4=pc.FindNumber("高度");
    			if(pn1!=null && pn2!=null && pn3!=null && pn4!=null)
    			{
    				this.Move(pn1.iNumber,pn2.iNumber,pn3.iNumber,pn4.iNumber);
    			}
    		}
    		pn1=this.pclass.FindNumber("列数");
    		if(pn1!=null)this.iTitleCount=pn1.iNumber;

    		pn1=this.pclass.FindNumber("标题高度");
    		if(pn1!=null)this.iTitleHeight=pn1.iNumber;

    		this.ptitles=new Array(this.iTitleCount);//
    		pc2=this.pclass.FindClass("标题");
    		if(pc2!=null)
    		{
    			for(i=0;i<this.iTitleCount;i++)
    			{
    				this.ptitles[i]=new _LISTTITLE();
    				pc=pc2.FindClass("标题"+(i+1));
    				if(pc!=null)
    				{
    					pn1=pc.FindNumber("宽度");
    					if(pn1!=null)this.ptitles[i].iWidth=pn1.iNumber;
    					pw=pc.FindWord("标题名");
    					if(pw!=null)this.ptitles[i].sName=pw.pword;
    					pw=pc.FindWord("类型");
    					if(pw!=null)
    					{
    						if(pw.pword=="容器")this.ptitles[i].iType=2;
    					}
    					pw=pc.FindWord("对齐方式");
    					if(pw!=null)
    					{
    						if(pw.pword=="中")this.ptitles[i].iLocate=1;
    					}
    					pc3=pc.FindClass("背景框");
    					if(pc3!=null && this.iTitleHeight>0)
    					{
    						this.ptitles[i].pframe=new XmsCFrame(this.pm3f,pc3,this.prun);
    						pc3.pobj=this.ptitles[i].pframe;
    					}
    				}
    			}
    		}
    		j=0;
    		pc2=this.pclass.FindClass("行内容");
    		if(pc2!=null)
    		{
    			while(true)
    			{
    				pc=pc2.FindClass("行内容"+(j+1));
    				if(pc==null)break;
    				var pf=pc.pca.phead;
    				var pll=this.AddLine();
    				for(i=0;i<this.iTitleCount;i++)
    				{
    					switch(this.ptitles[i].iType)
    					{
    					case 2://容器
    						pll.pfiled[i]=new XmsCOle(this.pm3f,pf,this.prun);
    						pc3=pc.FindFirst("选中覆盖框",5);
    						if(pc3!=null)pll.pcoverframe[i]=pc3.pobj;
    						break;
    					}
    				}
    				pf=pf.pdown;
    				j++;
    			}
    		}
    		
    		pw=this.pclass.FindWord("标题可开关");
    		if(pw==null)this.iSwitch=0;
    		else if(pw.pword=="开")this.iSwitch=1;
    		else this.iSwitch=2;
    	}
    	Move( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    	}
    	 AddLine()
    	{
    		if(this.plines==null)
    		{
    			this.plines=new _LISTLINE();
    			return this.plines;
    		}
    		else
    		{
    			var pend=this.plines;
    			while(pend.pnext!=null)pend=pend.pnext;
    			pend.pnext=new _LISTLINE();
    			return pend.pnext;
    		}
    	}
    	Draw( offx, offy)
    	{
    		var i,j,k;
    		var xx,yy;

    		this.iOffX=offx;
    		this.iOffY=offy;

    		xx=this.iX+offx;
    		yy=this.iY+offy;
    		this.pm3f.DrawRect_2D(xx,yy,xx+this.iW,yy+this.iH,0xffffffff);
    		if(this.iTitleHeight>0)
    		{//有标题栏
    			j=0;
    			for(i=0;i<this.iTitleCount;i++)
    			{
    				if(this.iTitleHeight>0)
    				{
    					if(this.ptitles[i].pframe!=null)this.ptitles[i].pframe.Draw(xx+j,yy);
    				}
    				if(this.ptitles[i].sName.length>0)
    				{
    					this.pm3f.DrawTextEx(xx+j+this.ptitles[i].iWidth/2,yy+this.iTitleHeight/2,this.ptitles[i].sName,0xffffffff,30,101,1,1,0,-2,-2);
    				}
    				j+=this.ptitles[i].iWidth;
    			}
    			yy+=this.iTitleHeight;
    			this.pm3f.DrawLine(xx,yy,xx+this.iW,yy,0xffffffff);
    		}
    		if(this.iSwitch==2)
    		{
    			this.iH=this.iTitleHeight;
    			return;
    		}
    		this.pm3f.SetViewClip(xx,yy,xx+this.iW,yy+this.iH-this.iTitleHeight);
    		var pll=this.plines;
    		var addh;
    		j=0;k=0;
    		while(pll!=null)
    		{
    			if(this.iSelectLine==k)
    			{//被选中背景
    				addh=0;
    				for(i=0;i<this.iTitleCount;i++)
    				{
    					if(this.ptitles[i].iType==2)
    					{//控件容器
    						var pcole=pll.pfiled[i];
    						if(addh<pcole.iH+(pcole.bHaveExtend&pcole.bShowExtend?pcole.pExtend.iH:0))addh=pcole.iH+(pcole.bHaveExtend&pcole.bShowExtend?pcole.pExtend.iH:0);
    					}
    				}
    				//this.pm3f.FillRect_2D(xx,yy+j+this.iScrollY,xx+this.iW,yy+j+this.iScrollY+addh,0xff0000ff);
    			}
    			addh=0;
    			for(i=0;i<this.iTitleCount;i++)
    			{
    				if(this.ptitles[i].iType==2)
    				{//控件容器
    					var pcole=pll.pfiled[i];
    					if(this.iSelectLine==k)
    					{
    						if(pll.pcoverframe[i]!=null)pll.pcoverframe[i].bHide=false;
    						pcole.bShowExtend=true;
    					}
    					else
    					{
    						if(this.iSelectLine>=0)
    						{
    							pcole.bShowExtend=false;
    							if(pll.pcoverframe[i]!=null)pll.pcoverframe[i].bHide=true;
    						}
    					}
    					pcole.Draw(xx,yy+j+this.iScrollY);
    					if(addh<pcole.iH+(pcole.bHaveExtend&pcole.bShowExtend?pcole.pExtend.iH:0))addh=pcole.iH+(pcole.bHaveExtend&pcole.bShowExtend?pcole.pExtend.iH:0);
    					
    				}
    			}
    			j+=addh;
    			k++;
    			pll=pll.pnext;
    		}
    		this.iDetailHeight=j;
    		this.pm3f.NoClip();
    		if(this.iSwitch==1)this.iH=this.iTitleHeight+this.iDetailHeight;
    		
    		if(!this.bLockScroll)
    		{//不在拉动，反弹到正确位置
    			if(this.iDetailHeight<this.iH-this.iTitleHeight)
    			{
    				if(this.iScrollY>10 || this.iScrollY<-10)this.iScrollY/=2;
    				else this.iScrollY=0;
    			}
    			else
    			{
    				j=-(this.iDetailHeight-(this.iH-this.iTitleHeight));//可拉动范围(j,0)
    				if(this.iScrollY<j)
    				{
    					i=j-this.iScrollY;
    					if(i>10)i/=2;
    					this.iScrollY+=i;
    				}
    				if(this.iScrollY>0)
    				{
    					if(this.iScrollY>10)this.iScrollY/=2;
    					else this.iScrollY=0;
    				}
    			}
    		}
    	}
    	CleanSelect()
    	{
    		var i;
    		var pll=this.plines;
    		while(pll!=null)
    		{
    			for(i=0;i<this.iTitleCount;i++)
    			{
    				if(this.ptitles[i].iType==2)
    				{//控件容器
    					if(pll.pcoverframe[i]!=null)pll.pcoverframe[i].bHide=true;
    				}
    			}
    			pll=pll.pnext;
    		}
    		this.iSelectLine=-1;
    	}
    	ProcTouch( msg, x, y)
    	{
    		x-=this.iOffX;
    		y-=this.iOffY;
    		if(this.bTouchDown)
    		{
    			if(msg==2)
    			{
    				if(this.bLockScroll)
    				{
    					if(this.iSwitch==0)
    					{
    						this.iScrollY-=(this.iLockY-y);
    						this.iLockY=y;
    					}
    					return true;
    				}
    				else if(Math.abs(this.iLockY-y)>10)
    				{
    					if(this.iSwitch==0)
    					{
    						this.iLockY=y;
    						this.bLockScroll=true;
    					}
    					else this.bTouchDown=false;
    //					return true;
    				}
    			}
    			if(msg==3)
    			{
    				if(this.bLockScroll)
    				{
    					this.bLockScroll=false;
    					this.bTouchDown=false;
    					return true;
    				}
    				else
    				{//选中
    					this.iSelectLine=this.iSelectLineTmp;
    				}
    				this.bTouchDown=false;
    			}
    		}
    		if(XDefine$1.bInRect(x,y,this.iX,this.iY,this.iW,this.iH))
    		{
    			var pll=this.plines;
    			var i,j=0,k=0;
    			var addh;
    			
    			if(this.iTitleHeight>0)
    			{//有标题栏
    				for(i=0;i<this.iTitleCount;i++)
    				{
    					if(this.ptitles[i].pframe!=null)
    					{
    						if(this.ptitles[i].pframe.bInConrtolRect(this.iOffX+x,this.iOffY+y))
    						{
    							if(msg==1)
    							{
    								this.ptitles[i].bDown=true;
    								//return true;
    							}
    							else if(msg==3)
    							{
    								if(this.ptitles[i].bDown)
    								{
    									this.ptitles[i].bDown=false;
    									if(this.iSwitch==1)this.iSwitch=2;
    									else if(this.iSwitch==2)this.iSwitch=1;
    								}
    							}
    						}
    					}
    				}
    			}
    			if(this.iSwitch==2)return false;
    			this.iSelectLineTmp=-1;
    			while(pll!=null)
    			{
    				addh=0;
    				for(i=0;i<this.iTitleCount;i++)
    				{
    					if(this.ptitles[i].iType==2)
    					{//控件容器
    						var pcole=pll.pfiled[i];
    //						this.iX+this.iOffX
    //						this.iY+this.iOffY+this.iTitleHeight
    						if(pcole.ProcTouch(msg,x+this.iOffX,y+this.iOffY))
    						{
    							return true;
    						}
    						if(addh<pcole.iH+(pcole.bHaveExtend&pcole.bShowExtend?pcole.pExtend.iH:0))addh=pcole.iH+(pcole.bHaveExtend&pcole.bShowExtend?pcole.pExtend.iH:0);
    					}
    				}
    				if(y-this.iTitleHeight>=this.iY+j+this.iScrollY && y-this.iTitleHeight<=this.iY+j+this.iScrollY+addh)
    				{
    					this.iSelectLineTmp=k;
    				}
    				j+=addh;
    				k++;
    				pll=pll.pnext;
    			}
    			if(msg==1)
    			{
    				this.bTouchDown=true;
    				this.iLockY=y;
    			}
    			if(this.iSwitch>0)return false;
    			return true;
    		}
    		this.bTouchDown=false;
    		return false;
    	}


    }

    class _LINKCONTROL {
    //	public int iType;
    //	public Object pobj;
    //	public _LINKCONTROL pnext;
    	constructor()
    	{
    		this.pobj=null;
    		this.pnext=null;
    	}
    }

    class XmsCSlider extends XmsCBaseControl{
    	
    	SetPos( p)
    	{
    		this.iPos=p;	
    	}
    	SetRange( r)
    	{
    		this.iRange=r;
    		this.iMax=r;
    	}
    	IsChanged()
    	{
    		if(this.bChanged)
    		{
    			this.bChanged=false;
    			return true;
    		}
    		return false;
    	}
    	
    	 constructor( m3f,  pc,  pr)
    	{
    		super();
    		this.pm3f=m3f;
    		this.bLock=false;
    		this.iRange=10000;
    		this.iPos=0;
    		this.iMin=0;
    		this.iMax=10000;
    		this.bChanged=false;
    		this.pclass = pc;
    		this.prun = pr;
    		this.ReLoad();
    	}
    	ReLoad()
    	{
    		var pc;
    		var pn1,pn2,pn3,pn4;

    		pc=this.pclass.FindClass("背景条");
    		if(pc!=null)
    		{
    			pc.pobj=new XmsCFrame$1(this.pm3f,pc,this.prun);
    			this.pline=pc.pobj;
    		}

    		pc=this.pclass.FindClass("滑块");
    		if(pc!=null)
    		{
    			pc.pobj=new XmsCAnima(this.pm3f,pc,this.prun);
    			this.pblock=pc.pobj;
    		}

    		pc=this.pclass.FindClass("滑杆区域");
    		if(pc!=null)
    		{
    			pn1=pc.FindNumber("坐标X");
    			pn2=pc.FindNumber("坐标Y");
    			pn3=pc.FindNumber("宽度");
    			pn4=pc.FindNumber("高度");
    			if(pn1!=null && pn2!=null && pn3!=null && pn4!=null)
    			{
    				this.Move(pn1.iNumber,pn2.iNumber,pn3.iNumber,pn4.iNumber);
    			}
    		}

    		pc=this.pclass.FindClass("滑块大小");
    		if(pc!=null)
    		{
    			pn3=pc.FindNumber("宽度");
    			pn4=pc.FindNumber("高度");
    			if(pn3!=null && pn4!=null)
    			{
    				this.iBlockW=pn3.iNumber;
    				this.iBlockH=pn4.iNumber;
    			}
    		}
    	}
    	Move( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    	}
    	Draw( offx, offy)
    	{
    		this.iOffX=offx;
    		this.iOffX=offy;
    		this.pline.Draw(offx+this.iX,offy+this.iY);
    		this.pblock.Draw(offx+this.iX-this.iBlockW/2+this.iPos*this.iW/this.iRange,offy+this.iY+this.iH/2-this.iBlockH/2);
    	}

    	ProcTouch( msg, x, y)
    	{
    		if(msg==3)
    		{
    			this.bLock=false;
    			return false;
    		}
    		x-=(GmConfig$1.SCRW-1280)/2;
    		var op=this.iPos;
    		if(this.bLock)
    		{
    			if(msg==2)
    			{
    				var j=(this.iLockX-x)*this.iRange/this.iW;
    				GmPlay$1.sop("this.iPos="+this.iPos+"this.iLockX="+this.iLockX+"x="+x+"j="+j+"---------"+this.iRange+"=mmmmm="+this.iW);
    				if(j!=0)
    				{
    					this.iPos-=(this.iLockX-x)*this.iRange/this.iW;
    					if(this.iPos<this.iMin)this.iPos=this.iMin;
    					if(this.iPos>this.iRange)this.iPos=this.iRange;
    					if(this.iPos>this.iMax)this.iPos=this.iMax;
    					this.iLockX=x;
    				}
    				GmPlay$1.sop("this.iPos="+this.iPos);
    				if(op!=this.iPos)this.bChanged=true;
    				return true;
    			}
    		}
    		if(XDefine$1.bInRect(x,y,this.iOffX+this.iX-this.iBlockW/2,this.iOffX+this.iY,this.iW+this.iBlockW,this.iH))
    		{
    			if(msg==1)
    			{
    				this.bLock=true;
    				this.iLockX=x;
    				var j=this.iOffX+this.iX+this.iPos*this.iW/this.iRange;
    				if(x<j-this.iBlockW/2 || x>j+this.iBlockW/2)
    				{
    					this.iPos=(x-this.iOffX-this.iX)*this.iRange/this.iW;
    					if(this.iPos<this.iMin)this.iPos=this.iMin;
    					if(this.iPos>this.iRange)this.iPos=this.iRange;
    					if(this.iPos>this.iMax)this.iPos=this.iMax;
    				}
    				if(op!=this.iPos)this.bChanged=true;
    				return true;
    			}
    		}
    		return false;
    	}
    }

    class XmsCOle$1 extends XmsCBaseControl{
    	 constructor( m3f,  pc,  pr)
    	{
    		super();
    		this.iX=0;
    		this.iY=0;
    		this.plc=null;
    		this.pm3f=m3f;
    		this.pclass = pc;
    		this.prun = pr;
    		this.ReLoad();
    	}
    	ReLoad()
    	{
    		var pc,pc1;
    		var pn1,pn2,pn3,pn4;
    //		X30_WORD *pw;

    		pc=this.pclass.FindClass("容器区域");//列表区域
    		if(pc!=null)
    		{
    			pn1=pc.FindNumber("坐标X");
    			pn2=pc.FindNumber("坐标Y");
    			pn3=pc.FindNumber("宽度");
    			pn4=pc.FindNumber("高度");
    			if(pn1!=null && pn2!=null && pn3!=null && pn4!=null)
    			{
    				this.Move(pn1.iNumber,pn2.iNumber,pn3.iNumber,pn4.iNumber);
    			}
    		}

    		//容器中的东西
    		pc=this.pclass.FindClass("内容");
    		if(pc!=null)
    		{//
    			var pf=pc.pca.phead;
    			while(pf!=null)
    			{
    				if(pf.iType==40)
    				{
    					pc1=pf;
    					if(pc1.pca.phead!=null)
    					{
    						if(pc1.pca.phead.iType==10 && pc1.pca.phead.sName=="唯一处理标识")
    						{
    							pn1=pc1.pca.phead;
    							switch(pn1.iNumber)
    							{
    							case 101://按钮
    								pc1.pobj=new XmsCButton$1(this.pm3f,pc1,this.prun);
    								this.AddControl(XmsCOle$1.CTYPE_BUTTON,pc1.pobj);
    								break;
    							case 201://框体
    								pc1.pobj=new XmsCFrame$1(this.pm3f,pc1,this.prun);
    								this.AddControl(XmsCOle$1.CTYPE_FRAME,pc1.pobj);
    								break;
    							case 203://文字
    								pc1.pobj=new XmsCText(this.pm3f,pc1,this.prun);
    								this.AddControl(XmsCOle$1.CTYPE_TEXT,pc1.pobj);
    								break;
    							case 202://动画
    								pc1.pobj=new XmsCAnima(this.pm3f,pc1,this.prun);
    								this.AddControl(XmsCOle$1.CTYPE_ANIMA,pc1.pobj);
    								break;
    							case 102://列表
    								pc1.pobj=new XmsCList(this.pm3f,pc1,this.prun);
    								this.AddControl(XmsCOle$1.CTYPE_LIST,pc1.pobj);
    								break;
    							case 105://滑杆
    								pc1.pobj=new XmsCSlider(this.pm3f,pc1,this.prun);
    								this.AddControl(XmsCOle$1.CTYPE_SLIDER,pc1.pobj);
    								break;
    							case 103://容器
    								pc1.pobj=new XmsCOle$1(this.pm3f,pc1,this.prun);
    								this.AddControl(XmsCOle$1.CTYPE_OLE,pc1.pobj);
    								break;
    							}
    						}
    					}
    				}
    				pf=pf.pdown;
    			}
    		}
    		pc=this.pclass.FindClass("扩展下拉容器");
    		if(pc!=null)
    		{
    			this.pExtend=new XmsCOle$1(this.pm3f,pc,this.prun);
    			this.bHaveExtend=true;
    		}
    		else this.bHaveExtend=false;

    		this.bShowExtend=true;
    	}
    	Move( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    	}
    	AddControl( type, p)
    	{
    		var pp;
    		if(this.plc==null)
    		{
    			this.plc=new _LINKCONTROL();
    			pp=this.plc;
    		}
    		else
    		{
    			pp=this.plc;
    			while(pp.pnext!=null)pp=pp.pnext;
    			pp.pnext=new _LINKCONTROL();
    			pp=pp.pnext;
    		}
    		pp.iType=type;
    		pp.pobj=p;
    	}

    	Draw( offx, offy)
    	{
    		this.iOffX=offx;
    		this.iOffY=offy;
    		var pp=this.plc;
    		var xx=offx+this.iX;
    		var yy=offy+this.iY;
    		this.pm3f.DrawRect_2D(xx,yy,xx+this.iW,yy+this.iH,0xffffffff);

    		if(this.bHaveExtend && this.bShowExtend)this.pExtend.Draw(offx,offy);

    		var pbc;
    		var hh;
    		this.iH=0;
    		while(pp!=null)
    		{
    			pbc= pp.pobj;
    			pbc.Draw(xx,yy);
    			hh=pbc.iY+pbc.iH;
    			if(hh>this.iH)this.iH=hh;
    //			switch(pp.iType)
    //			{
    //			case CTYPE_BUTTON:
    //				((XmsCButton )pp.pobj).Draw(xx,yy);
    //				break;
    //			case CTYPE_FRAME:
    //				((XmsCFrame )pp.pobj).Draw(xx,yy);
    //				break;
    //			case CTYPE_TEXT:
    //				((XmsCText )pp.pobj).Draw(xx,yy);
    //				break;
    //			case CTYPE_ANIMA:
    //				((XmsCAnima )pp.pobj).Draw(xx,yy);
    //				break;
    //			}
    			pp=pp.pnext;
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		x-=this.iOffX;
    		y-=this.iOffY;
    		var pp=this.plc;
    		while(pp!=null)
    		{
    			switch(pp.iType)
    			{
    			case CTYPE_BUTTON:
    				if((pp.pobj).ProcTouch(msg,x+this.iOffX,y+this.iOffY))
    				{
    					return true;
    				}
    				break;
    			case CTYPE_FRAME:
    				if((pp.pobj).ProcTouch(msg,x+this.iOffX,y+this.iOffY))
    				{
    					return true;
    				}
    				break;
    			case CTYPE_LIST:
    				if((pp.pobj).ProcTouch(msg,x+this.iOffX,y+this.iOffY))
    				{
    					return true;
    				}
    				break;
    			case CTYPE_SLIDER:
    				if((pp.pobj).ProcTouch(msg,x+this.iOffX,y+this.iOffY))
    				{
    					return true;
    				}
    				break;
    			case CTYPE_OLE:
    				if((pp.pobj).ProcTouch(msg,x+this.iOffX,y+this.iOffY))
    				{
    					return true;
    				}
    				break;
    			}
    			pp=pp.pnext;
    		}
    		if(this.bHaveExtend && this.bShowExtend)return this.pExtend.ProcTouch(msg,x,y);
    		return false;
    	}
    }
    	XmsCBaseControl.CTYPE_BUTTON =1;
    	XmsCBaseControl.CTYPE_FRAME =2;
    	XmsCBaseControl.CTYPE_TEXT =3;
    	XmsCBaseControl.CTYPE_ANIMA =4;
    	XmsCBaseControl.CTYPE_LIST =5;
    	XmsCBaseControl.CTYPE_SLIDER=6;
    	XmsCBaseControl.CTYPE_OLE=7;

    class _TABLIST
    {
    //	XmsCButton pbtn;//标签按钮
    //	XmsCOle pole;//点击标签后的内容
    constructor()
    {

    }
    };

    class XmsCTab extends XmsCBaseControl{
    	
    	constructor( p,  pc,  pr)
    	{
    		super();
    		this.iX=0;
    		this.iY=0;
    		this.pm3f=p;
    		this.ptablist=new Array(16);//
    		for(var i=0;i<16;i++)this.ptablist[i]=new _TABLIST();
    		this.iTabPoint=0;
    		this.pclass = pc;
    		this.prun = pr;
    		this.ReLoad();
    	}
    	ReLoad()
    	{
    		var pc,pc1,pc2;

    		var j=0;
    		while(true)
    		{
    			pc=this.pclass.FindClass("标签"+(j+1));
    			if(pc==null)break;
    			pc1=pc.FindClass("标签按钮");
    			if(pc1==null)break;
    			pc2=pc.FindClass("标签容器");
    			if(pc2==null)break;
    			pc1.pobj=new XmsCButton(this.pm3f,pc1,this.prun);
    			pc2.pobj=new XmsCOle(this.pm3f,pc2,this.prun);
    			this.AddTab(pc1.pobj,pc2.pobj);
    			j++;
    		}
    	}
    	 Move( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    	}
    	Draw( offx, offy)
    	{
    		var i;
    		this.iOffX=offx;
    		this.iOffY=offy;
    		
    		for(i=0;i<this.iTabListCount;i++)
    		{
    			if(i==this.iTabPoint)
    			{
    				this.ptablist[i].pole.Draw(offx,offy);
    			}
    			this.ptablist[i].pbtn.Draw(offx,offy);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<this.iTabListCount;i++)
    		{
    			if(i==this.iTabPoint)
    			{
    				if(this.ptablist[i].pole.ProcTouch(msg,x,y))return true;
    			}
    			if(this.ptablist[i].pbtn.ProcTouch(msg,x,y))
    			{
    				if(this.ptablist[i].pbtn.IsChecked())
    				{
    					this.iTabPoint=i;
    				}
    				return true;
    			}
    		}
    		return false;
    	}
    	AddTab( pb, po)
    	{
    		if(this.iTabListCount<16)
    		{
    			this.ptablist[this.iTabListCount].pbtn=pb;
    			this.ptablist[this.iTabListCount].pole=po;
    			this.iTabListCount++;
    		}
    	}
    }

    class RunFirst extends BaseClass
    {
        constructor()
        {
            super();
            this.bClose=false;

        }
        _Init()
    	{
            RunFirst.paaole=XmsEngine.paaole;
    		RunFirst.panimaole=XmsEngine.panimaole;
    		this.pm3f=M3DFast$1.gi();
    		
    		this.pbaseclass= this.prunclass.GetBase();
    		
    		this.prunclass= this.prunclass.GetCopy();
    		this.pface=this.prunclass;

    		this.InitBefore();
    		
    		this.InitMemory(this.pbaseclass.FindFirst("初始化",3));
    		this.InitMemory(this.prunclass);
    //		this.InitMemory(this.pbaseclass);
    		
    		this.InitAfter();
        }
        InitBefore()
    	{
        }
        InitAfter()
    	{
    		this.RunCode(this.prunclass.FindCode("初始化后执行"));
        }
        Draw()
    	{
    		this._Draw();
    //		if(this.bClose)XStat.x_stat.PopStat(1);
        }
        ProcTouch( msg, x, y)
    	{
    		if (this._ProcTouch(msg, x, y))
    		{
    //			if (this.bClose)XStat.x_stat.PopStat(1);
    			return true;
    		}
    		return false;
        }
        InitMemory( pfirst)
    	{//初始化内存，数组模式的创建数组，
    		//pfirst.GetBase().GetCopy();
    		var pclass;
    		if(pfirst.iType==10 && pfirst.sName=="唯一处理标识")
    		{//
    			var pnum=pfirst;
    			pclass=pnum.pback;
    			switch(pnum.iNumber)
    			{
    			case 301://载入动画
    				RunFirst.panimaole.LoadOleAnima(pclass.FindWord("载入到索引").pword,pclass.FindWord("动画文件").pword);
    				break;
    			case 501://屏幕尺寸
    				RunFirst.SCRW=pclass.FindNumber("屏幕宽度").iNumber;
    				RunFirst.SCRH=pclass.FindNumber("屏幕高度").iNumber;
    				RunFirst.SCRW=GmConfig$1.SCRW;
    				RunFirst.SCRH=GmConfig$1.SCRH;
    				break;

    			//控件部分
    			case 101://按钮
    				pclass.pobj=new XmsCButton$1(this.pm3f,pclass,this);
    				return true;
    			case 102://列表
    				pclass.pobj=new XmsCList(this.pm3f,pclass,this);
    				return true;
    			case 103://容器
    				pclass.pobj=new XmsCOle$1(this.pm3f,pclass,this);
    				return true;
    			case 104://标签
    				pclass.pobj=new XmsCTab(this.pm3f,pclass,this);
    				return true;
    			case 105://
    				pclass.pobj=new XmsCSlider(this.pm3f,pclass,this);
    				return true;
    			case 201://框体
    				pclass.pobj=new XmsCFrame$1(this.pm3f,pclass,this);
    				return true;
    			case 202://动画
    				pclass.pobj=new XmsCAnima(this.pm3f,pclass,this);
    				return true;
    			case 203://文本
    				pclass.pobj=new XmsCText(this.pm3f,pclass,this);
    				return true;
    			}
    		}
    		if(pfirst.iType==40)
    		{//class
    			var i;
    			var pf;
    			var pca;
    			pclass=pfirst;
    			pca=pclass.pca;
    			for(i=0;i<pclass.iArray;i++)
    			{
    				pf=pca.phead;
    				while(pf!=null)
    				{
    					if(this.InitMemory(pf))break;
    					pf=pf.pdown;
    				}
    				pca=pca.pnext;
    			}
    		}
    		return false;
        }
        _Draw()
    	{
    		if(this.pface!=null)
    		{
    			this.DrawFirst(this.pface,0,0);
    		}
        }
        DrawFirst( pfirst, offx, offy)
    	{
    		var pclass;
    		if(pfirst.iType==10 && pfirst.sName=="唯一处理标识")
    		{//
    			var pnum=pfirst;
    			pclass=pnum.pback;
    			switch(pnum.iNumber)
    			{
    			case 400://界面
    				this.Draw_Interface400(pclass);
    				return true;

    			case 101://按钮
    				this.Draw_CButton(pclass.pobj,this.iInterfaceX,this.iInterfaceY);
    				return true;
    			case 102://列表
    				this.Draw_CList(pclass.pobj,this.iInterfaceX,this.iInterfaceY);
    				return true;
    			case 104://
    				this.Draw_CTab104(pclass.pobj,this.iInterfaceX,this.iInterfaceY);
    				return true;
    			case 105:
    				this.Draw_Slider105(pclass.pobj,this.iInterfaceX,this.iInterfaceY);
    				return true;
    			case 201://框体
    				this.Draw_CFrame201(pclass.pobj,this.iInterfaceX,this.iInterfaceY);
    				return true;
    			case 202://动画
    				this.Draw_CAnima202(pclass.pobj,this.iInterfaceX,this.iInterfaceY);
    				//Draw_202(pclass,this.iInterfaceX,this.iInterfaceY);
    				return true;
    			case 203://文字
    				this.Draw_CText203(pclass.pobj,this.iInterfaceX,this.iInterfaceY);
    				//Draw_203(pclass,this.iInterfaceX,this.iInterfaceY);
    				return true;
    			}
    		}
    		if(pfirst.iType==40)
    		{//class
    			var i;
    			pclass=pfirst;
    			var pca=pclass.pca;
    			var pf;
    			for(i=0;i<pclass.iArray;i++)
    			{
    				pf=pca.phead;
    				while(pf!=null)
    				{
    					if(this.DrawFirst(pf,offx,offy))return false;
    					pf=pf.pdown;
    				}
    				pca=pca.pnext;
    			}
    		}
    		return false;
        }
        Draw_Interface400( pclass)
    	{
    		var pc;
    		var pw;
    		pc=pclass.FindClass("界面区域");//界面区域
    		if(pc!=null)
    		{
    			this.iInterfaceX=pc.FindNumber("坐标X").iNumber;
    			this.iInterfaceY=pc.FindNumber("坐标X").iNumber;
    			this.iInterfaceW=pc.FindNumber("宽度").iNumber;
    			this.iInterfaceH=pc.FindNumber("高度").iNumber;
    		}
    		pw=pclass.FindWord("对齐方式");
    		if(pw!=null)
    		{
    			if(pw.pword=="上"){			this.iInterfaceX=(RunFirst.SCRW-this.iInterfaceW)/2;			this.iInterfaceY=0;		}
    			else if(pw.pword=="左上"){			this.iInterfaceX=0;			this.iInterfaceY=0;		}
    			else if(pw.pword=="左"){			this.iInterfaceX=0;			this.iInterfaceY=(RunFirst.SCRH-this.iInterfaceH)/2;		}
    			else if(pw.pword=="左下"){			this.iInterfaceX=0;			this.iInterfaceY=RunFirst.SCRH-this.iInterfaceH;		}
    			else if(pw.pword=="下"){			this.iInterfaceX=(RunFirst.SCRW-this.iInterfaceW)/2;			this.iInterfaceY=RunFirst.SCRH-this.iInterfaceH;		}
    			else if(pw.pword=="右下"){			this.iInterfaceX=RunFirst.SCRW-this.iInterfaceW;			this.iInterfaceY=RunFirst.SCRH-this.iInterfaceH;		}
    			else if(pw.pword=="右"){			this.iInterfaceX=RunFirst.SCRW-this.iInterfaceW;			this.iInterfaceY=(RunFirst.SCRH-this.iInterfaceH)/2;		}
    			else if(pw.pword=="右上"){			this.iInterfaceX=RunFirst.SCRW-this.iInterfaceW;			this.iInterfaceY=0;		}
    			else if(pw.pword=="居中"){			this.iInterfaceX=(RunFirst.SCRW-this.iInterfaceW)/2;			this.iInterfaceY=(RunFirst.SCRH-this.iInterfaceH)/2;		}
    		}
        }
         Draw_CList( pclist, offx, offy)
    	{
    		pclist.Draw(offx,offy);
    	}
    	 Draw_COle( pcole, offx, offy)
    	{
    		pcole.Draw(offx,offy);
    	}

    	 Draw_CButton( pbtn, offx, offy)
    	{
    		pbtn.Draw(offx,offy);
    	}

    	 Draw_CTab104( ptab, offx, offy)
    	{//整框
    		ptab.Draw(offx,offy);
    	}
    	 Draw_Slider105( pslider, offx, offy)
    	{
    		pslider.Draw(offx,offy);
    	}
    	 Draw_CFrame201( pframe, offx, offy)
    	{//整框
    		if(pframe!=null)pframe.Draw(offx,offy);
    	}

    	 Draw_CText203( pctext, offx, offy)
    	{
    		pctext.Draw(offx,offy);
    	}

    	 Draw_CAnima202( panima, offx, offy)
    	{
    		panima.Draw(offx,offy);
        }
        _ProcTouch( msg, x, y)
    	{
    		if(this.pface!=null)
    		{
    			var ret=this.ProcTouchFirst(this.pface,msg,x,y);
    			if(this.bClose)
    			{
    				XStat$1.x_stat.PopStat(1);
    				return true;
    			}
    			return false;
    		}
    		return false;
        }
        ProcTouchFirst( pfirst, msg, x, y)
    	{
    		var pclass;
    		if(pfirst.iType==10 && pfirst.sName=="唯一处理标识")
    		{//
    			var pnum=pfirst;
    			pclass=pnum.pback;

    			switch(pnum.iNumber)
    			{
    			case 400://界面
    				return false;
    			case 101://按钮
    				if(this.Touch_CButton(pclass,msg,x,y))return true;
    				return false;
    			case 102://列表
    				if(this.Touch_CList(pclass,msg,x,y))return true;
    				return false;
    			case 104:
    				if(this.Touch_CTab(pclass,msg,x,y))return true;
    				return false;
    			case 105:
    				if(this.Touch_Control(pclass,msg,x,y))return true;
    				return false;
    			case 201://框体
    				if(this.Touch_CFrame(pclass,msg,x,y))return true;
    				return false;
    			}
    		}
    		if(pfirst.iType==40)
    		{//class
    			var i;
    			pclass=pfirst;
    			var pca=pclass.pca;
    			var pf;
    			for(i=0;i<pclass.iArray;i++)
    			{
    				pf=pca.phead;
    				while(pf!=null)
    				{
    //					GmPlay.sop("\\"+pf.sName);
    					if(this.ProcTouchFirst(pf,msg,x,y))return true;
    					pf=pf.pdown;
    				}
    				pca=pca.pnext;
    			}
    		}
    		return false;
        }
        Touch_CButton( pclass, msg, x, y)
    	{
    		if(pclass.pobj==null)return false;
    		var pbtn=pclass.pobj;
    		if(pbtn.ProcTouch(msg,x,y))
    		{
    //			if(pbtn.bCheck())
    //			{
    //				pclass.FindNumber("被点击次数").iNumber++;
    //			}
    			return true;
    		}
    		return false;
    	}
    	
    	 Touch_CTab( pclass, msg,x, y)
    	{
    		if(pclass.pobj==null)return false;
    		var ptab=pclass.pobj;
    		if(ptab.ProcTouch(msg,x,y))
    		{
    			return true;
    		}
    		return false;
    	}


    	 Touch_CList( pclass, msg, x, y)
    	{
    		var plist=pclass.pobj;
    //		GmPlay.sop("--"+pclass.sName+plist);
    		if(plist.ProcTouch(msg,x,y))
    		{
    			return true;
    		}
    		return false;
    	}
    	 Touch_CFrame( pclass, msg, x, y)
    	{
    		if(pclass.pobj==null)return false;
    		var pframe=pclass.pobj;
    		if(pframe.ProcTouch(msg,x,y))
    		{
    			return true;
    		}
    		return false;
    	}
    	 Touch_Control( pclass, msg, x, y)
    	{
    		if(pclass.pobj==null)return false;
    		if((pclass.pobj).ProcTouch(msg,x,y))
    		{
    			return true;
    		}
    		return false;
    	}
    	
    	/////////////////////
    	 FindControl( pc, name)
    	{
    		pc=pc.FindFirst(name, 10);
    		if(pc==null)return null;
    		GmPlay$1.sop("find"+name);
    		return  pc.pobj;
    	}
    	
    	 ReloadControl( pfirst)
    	{
    		if (pfirst == null)return false;
    		var pclass;
    		if (pfirst.iType == 10 && pfirst.sName=="唯一处理标识")
    		{//
    			var pnum = pfirst;
    			pclass = pnum.pback;
    			GmPlay$1.sop("Reload Type = "+pnum.iNumber);
    			switch (pnum.iNumber)
    			{
    				//控件部分
    			case 101://按钮
    				((pclass.pobj)).ReLoad();
    				return true;
    			case 102://列表
    				((pclass.pobj)).ReLoad();
    				return true;
    			case 103://容器
    				((pclass.pobj)).ReLoad();
    				return true;
    			case 104://标签
    				((pclass.pobj)).ReLoad();
    				return true;
    			case 105://滑杆
    				((pclass.pobj)).ReLoad();
    				return true;

    			case 201://框体
    				((pclass.pobj)).ReLoad();
    				return true;
    			case 202://动画
    				((pclass.pobj)).ReLoad();
    				return true;
    			case 203://文本
    				((pclass.pobj)).ReLoad();
    				return true;
    			}
    		}
    		if (pfirst.iType == 40)
    		{//class
    			var i;
    			var pf;
    			var pca;
    			pclass = pfirst;
    			pca = pclass.pca;
    			for (i = 0; i<pclass.iArray; i++)
    			{
    				pf = pca.phead;
    				while (pf != null)
    				{
    					if (this.ReloadControl(pf))break;
    					pf = pf.pdown;
    				}
    				pca = pca.pnext;
    			}
    		}
    		return false;
    	}
    	 atoi( s)
    	{
    		return parseInt(s);
    	}
    	
    	
    	 getnextword(s, p, len)
    	{
            var i,j=0;
            var mid=new Array();
    		for(i=0;i<len-p;i++)
    		{
    			if(s[p+i]!=' ' && s[p+i]!='\r' && s[p+i]!='\n')break;
    		}
    		this.out="";
    		if(i>=len-p)
    		{
    			//this.out="";
    			return 1024;
    		}
    		for(i=i;i<len-p;i++)
    		{
    			if(s[p+i]==0)break;
    			if(s[p+i]!=' ' && s[p+i]!='\r' && s[p+i]!='\n')
    			{
    				mid[j++]=s[p+i];
    				this.out+=s[p+i];
    			}
    			else
    			{
    					//this.out=new String(mid,0,j,"gb2312");
    				return i;
    			}
    		}
    		if(j>0)
    		{

    				//this.out=new String(mid,0,j,"gb2312");

    			return i;
    		}
    		return 1024;
    	}
    	 RunCode( pcode)
    	{
    //		GmPlay.sop("RunCode = "+pcode);
    		if (pcode == null)return;
    		var i;
    		var stat = 0;
    		var p = 0;
    		
    //		String string1;
    //		String string2;
    		var strings=new Array(5);

    		var operatetype;//操作类型1string

    		var fromtype=0;//来源类型0source  1current  2direct  3memory
    		var fromdetail="";//来源详细
    		var pfrom=0;

    		var totype=0;//目标类型1current
    		var todetail="";//目标详细
    		var pto=0;

    		var comptype1=0;//0int,1string
    		var comptype2=2;//0<  1<=  2=  3>= 4>

    		var pf=null;
    		var pn;
    		var pw;
    		var pc;
    		while (true)
    		{
    //			GmPlay.sop(""+stat);
    			switch (stat)
    			{
    			case 0:
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				
    				if (this.out=="set")
    				{
    					stat = 100;
    				}
    				else if (this.out=="string")
    				{
    					stat = 300;
    				}
    				else if (this.out=="reload")
    				{
    					stat = 200;
    				}
    				else if (this.out=="if")
    				{
    					stat = 400;
    				}
    				else if (this.out=="button")
    				{
    					stat = 500;
    				}
    				else if (this.out=="run")
    				{
    					stat = 600;
    				}
    				else if (this.out=="send")
    				{
    					stat = 700;
    				}
    				else if (this.out=="close")
    				{
    					this.bClose = true;
    				}
    				if (p >= pcode.iLen)return;
    				break;
    			case 700:
    			{
    				var values=new Array(7);
    				for (i = 0; i < 7; i++)
    				{
    					p += this.getnextword(pcode.Get(),p,pcode.iLen);
    					if (this.out=="string1")values[i]= strings[1];
    					else if (this.out=="string2")values[i]= strings[2];
    					else values[i]= this.out;
    				}
    				GmProtocol$1.pt.xms_send(values[0], values[1], values[2], values[3], values[4], values[5], values[6]);
    				stat = 0;
    			}
    			break;
    			case 600:
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				pf = this.prunclass.FindFirstByPath(this.out);
    				if (pf == null)
    				{
    					return;
    				}
    				else if (pf.iType == 50)
    				{
    					this.RunCode(pf);
    				}
    				break;
    			case 500:
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				fromdetail=this.out;
    				stat = 501;
    				break;
    			case 501:
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				if (this.out=="pressdown")
    				{
    					pf = this.prunclass.FindFirstByPath(fromdetail);
    					if (pf == null)
    					{
    						return;
    					}
    					else if (pf.iType == 40)
    					{
    						pc = pf;
    						((pc.pobj)).bMouseIn = true;
    						((pc.pobj)).bMouseDown = true;
    					}
    				}
    				stat = 0;
    				break;
    			case 400://if
    				p +=this.getnextword(pcode.Get(),p,pcode.iLen);
    				if (this.out=="compint")comptype1 = 0;
    				else if (this.out=="compstr")comptype1 = 1;
    				else return;
    				stat = 410;
    				break;
    			case 410:
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				if (this.out=="fromdirect")
    				{
    					stat = 411;
    				}
    				break;
    			case 411:
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				fromdetail=this.out;
    				stat = 420;
    				break;
    			case 420:
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				if (this.out=="<")comptype2 = 0;
    				else if (this.out=="<=")comptype2 = 1;
    				else if (this.out=="=")comptype2 = 2;
    				else if (this.out==">=")comptype2 = 3;
    				else if (this.out==">")comptype2 = 4;
    				else
    					return;
    				stat = 430;
    				break;
    			case 430:
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				if (this.out=="tocurrent")
    				{
    					totype = 1;
    					stat = 431;
    				}
    				break;
    			case 431:
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				pf = this.prunclass.FindFirstByPath(this.out);
    				if (pf.iType == 10)
    				{
    					pn = pf;
    					todetail= ""+pn.iNumber;
    				}
    				else if (pf.iType == 30)
    				{
    					pw = pf;
    					todetail= pw.Get();
    				}
    				else return;
    				stat = 440;
    				break;
    			case 440:
    				i = 0;
    				if (comptype1 == 0)
    				{
    					if (comptype2 == 0 && this.atoi(fromdetail) < this.atoi(todetail))i = 1;
    					if (comptype2 == 1 && this.atoi(fromdetail) <= this.atoi(todetail))i = 1;
    					if (comptype2 == 2 && this.atoi(fromdetail) == this.atoi(todetail))i = 1;
    					if (comptype2 == 3 && this.atoi(fromdetail) >= this.atoi(todetail))i = 1;
    					if (comptype2 == 4 && this.atoi(fromdetail) > this.atoi(todetail))i = 1;
    				}
    				else if (comptype1 == 1)
    				{
    					if (comptype2 == 0 && fromdetail< todetail)i = 1;
    					if (comptype2 == 2 && fromdetail==todetail)i = 1;
    					if (comptype2 == 4 && fromdetail> todetail)i = 1;
    				}
    				if (i == 0)
    				{//一直跳过到endif
    					while (true)
    					{
    						p += this.getnextword(pcode.Get(),p,pcode.iLen);
    						if (p >= pcode.iLen)return;
    						if (this.out=="endif")break;
    					}
    				}
    				stat = 0;
    				break;
    			case 300://
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				if (this.out=="append")
    				{
    					stat = 310;
    				}
    				else stat = 0;
    				break;
    			case 310://string append
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				if (this.out=="string1")pto = 1;
    				else if (this.out=="string2")pto = 2;
    				else
    				{
    					return;
    				}
    				stat = 311;
    				break;
    			case 311:
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				if (this.out=="fromdirect")
    				{
    					fromtype = 2;
    					stat = 312;
    				}
    				else if (this.out=="frommemory")
    				{
    					fromtype = 3;
    					stat = 313;
    				}
    				break;
    			case 312://fromdirect
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				fromdetail=this.out;
    				stat = 320;
    				break;
    			case 313://frommemory
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				if (this.out=="string1")pfrom = 1;
    				else if (this.out=="string2")pfrom = 2;
    				else
    					return;
    				stat = 320;
    				break;
    			case 320:
    				if (fromtype == 2)
    				{
    					this.out= fromdetail;
    				}
    				else if (fromtype == 3)
    				{
    					this.out= strings[pfrom];
    				}
    				strings[pto]+=this.out;
    				stat = 0;
    				break;
    			case 200://reload
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				GmPlay$1.sop("???????="+this.out);
    				if (this.out=="all")
    				{
    					this.ReloadControl(this.prunclass);
    					stat = 0;
    				}
    				else stat = 0;
    				break;
    			case 100://数据类型方式
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				if (this.out=="string")
    				{
    					operatetype = 1;
    					stat = 110;
    				}
    				else stat = 0;
    				break;
    			case 110://来源
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				if (this.out=="fromsource")
    				{
    					stat = 111;
    					fromtype = 0;
    				}
    				else if (this.out=="frommemory")
    				{
    					stat = 112;
    					fromtype = 3;
    				}
    				else if (this.out=="fromdirect")
    				{
    					stat = 111;
    					fromtype = 2;
    				}
    				else if(this.out=="fromcurrent")
    				{
    					stat=111;
    					fromtype=1;
    				}
    				else stat = 0;
    				break;
    			case 111://获得来源
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				fromdetail=this.out;
    				stat = 120;
    				break;
    			case 112:
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				if (this.out=="string1")pfrom = 1;
    				else if (this.out=="string2")pfrom = 2;
    				else
    					return;
    				stat = 120;
    				break;
    			case 120://目标
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				if (this.out=="tocurrent")
    				{
    					stat = 121;
    					totype = 1;
    				}
    				else if (this.out=="tomemory")
    				{
    					totype = 2;
    					stat = 122;
    				}
    				break;
    			case 121://获得目标
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				todetail= this.out;
    				stat = 130;
    				break;
    			case 122://
    				p += this.getnextword(pcode.Get(),p,pcode.iLen);
    				if (this.out=="string1")pto = 1;
    				else if (this.out=="string2")pto = 2;
    				else
    				{
    					return;
    				}
    				stat = 130;
    				break;
    			case 130://执行
    				if (fromtype == 0 || fromtype == 1)
    				{
    					if (fromtype == 0)pf = this.pbaseclass.FindFirstByPath(fromdetail);
    					if (fromtype == 1)pf = this.prunclass.FindFirstByPath(fromdetail);
    					if (pf == null)
    					{
    						return;
    					}
    					else if (pf.iType == 10)
    					{
    						pn = pf;
    						this.out=""+pn.iNumber;
    					}
    					else if (pf.iType == 30)
    					{
    						pw = pf;
    						this.out= pw.Get();
    					}
    					else
    					{
    						return;
    					}
    				}
    				else if (fromtype == 2)
    				{
    					this.out= fromdetail;
    				}
    				else if (fromtype == 3)
    				{
    					this.out= strings[pfrom];
    				}
    				if (totype == 1)
    				{
    					pf = this.prunclass.FindFirstByPath(todetail);
    					if (pf == null)
    					{
    						return;
    					}
    					else if (pf.iType == 10)
    					{
    						pn = pf;
    						pn.iNumber = this.atoi(this.out);
    					}
    					else if (pf.iType == 30)
    					{
    						pw = pf;
    						pw.Set(this.out);
    					}
    					else
    					{
    						return;
    					}
    				}
    				else if (totype == 2)
    				{
    					strings[pto] =this.out;
    				}
    				stat = 0;
    				break;
    			default:
    				break;
    			}
    		}
    	}
    }

    RunFirst.paaole;
    RunFirst.panimaole;
    RunFirst.SCRW,RunFirst.SCRH;

    class PromptMessage extends BaseClass{

    	 constructor( a)
    	{
    		super();
    	}

    	Draw()
    	{
    		FormatString.gi().FormatEx(this.sDetail, 500, 20, 0, 0, 25);
    		this.iW=580;
    		this.iH=FormatString.gi().iH+20+30+30+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		DrawMode$1.frame_type4("提示框a32_32", this.iX, this.iY, this.iW, this.iH, 32, 32);
    		M3DFast$1.gi().DrawText_2(this.iX+this.iW/2, this.iY+30+15, this.sTitle, 0xffffff00, 30, 101, 1, 1, 0, -2, -2, 4, 0xffa57841);
    		FormatString.gi().Draw(this.iX+40, this.iY+30+30+20);
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH) && msg==3)XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    PromptMessage.Open=function( title, detail)
    {
    	var msg=XStat$1.gi().PushStat(XStat$1.GS_PROMPTMESSAGE);
    	msg.sTitle =title;
    	msg.sDetail =detail;
    };

    class xms_AddPoint extends RunFirst {
    	constructor() {
    		super();
    			//剑侠居","茅蓬坞","庐医崖","武安阁","溶洞","鬼谷","封神台","仙人洞","神女峰"};
    	 this._RMD=[
    			"10级前自动升级加点，10级拜师后方可自己分配属性点数",
    			"#c0000ff4力量1体质# #cffffff常用加点，站得稳生存强 有输出#e#c0000ff5力量# #cffffff高物理输出，克制法系#e#c0000ff4力量1敏捷# #cffffff适用于竞技玩法，出手快输出强",
    			"#c0000ff3敏捷2耐力# #cffffff常用加点，出手快，站得稳，生存强#e#c0000ff4敏捷1体/5敏捷# #cffffff高端玩法，出手快，生存弱，适合高端玩家",
    			"#c0000ff2体力3耐力/3体力2耐力# #cffffff主流加点，站得住，生存强#e#c0000ff3灵力/1体力/1耐力# #cffffff任务加点，输出高，生存强",
    			
    			"#c0000ff4力量1体质# #cffffff常用加点，站得稳生存强 有输出#e#c0000ff5力量# #cffffff高物理输出，克制法系#e#c0000ff4力量1敏捷# #cffffff适用于竞技玩法，出手快输出强",
    			"#c0000ff4灵力1体力/5灵力# #cffffff任务加点，输出高#e#c0000ff3灵力 2耐力# #cffffff竞技玩法，有输出，双抗高",
    			"#c0000ff	3敏捷2体力# #cffffff常用加点，出手快，站得稳，生存强#e#c0000ff4敏捷1体/5敏捷# #cffffff高端玩法，出手快，生存弱，适合高端玩家#e#c0000ff4力量1体力# #cffffff适合任务，能输出，生存强",
    			
    			"#c0000ff4灵力1体力/5灵力# #cffffff任务加点，输出高#e#c0000ff3灵力 2耐力# #cffffff竞技玩法，有输出，双抗高",
    			"#c0000ff2体力2耐力1法力# #cffffff任务型加点，站的住，蓝量够#e#c0000ff2体3耐# #cffffff钢板型仙人，团队中流砥柱的辅助人才",
    			"#c0000ff4力量1体力/4力量1耐力/5力量# #cffffff常用加点，物理伤害影响高#e#c0000ff3力量2灵力# #cffffff主流加点，双输出影响高，抗性高#e#c0000ff3体2耐力/2体力2耐力1敏# #cffffff高防御，生存强，辅助路线",
    		];
    	}

    	InitBefore() {

    	}

    	InitAfter() {
    		console.log('什么鬼:',this.prunclass);
    		var i;
    		this.ptxt_base = new Array(7);//
    		for (i = 0; i < 7; i++)
    		{
    			this.ptxt_base[i] = this.FindControl(this.prunclass, "显示" + i);
    			this.ptxt_base[i].iY-=30;
    		}

    		this.pbtn_sub = new Array(5);//
    		this.psli_point = new Array(5);//
    		this.pbtn_add = new Array(5);//
    		this.ptxt_value = new Array(5);//
    		for (i = 0; i < 5; i++) {
    			this.pbtn_sub[i] = this.FindControl(this.prunclass, "减按钮" + i);
    			this.psli_point[i] = this.FindControl(this.prunclass, "滑杆" + i);
    			this.pbtn_add[i] = this.FindControl(this.prunclass, "加按钮" + i);
    			this.ptxt_value[i] =  this.FindControl(this.prunclass, "数值" + i);
    			
    			this.ptxt_value[i].iY-=30;

    			this.psli_point[i].SetRange(GmMe$1.me.rbs.iLev * 6);
    		}
    		this.pbtn_confirm = this.FindControl(this.prunclass, "确认加点");
    		this.pbtn_wash =this.FindControl(this.prunclass, "洗点");

    		this.iAddAtt = new Int32Array(5);//
    		for (i = 0; i < 5; i++)
    			this.iAddAtt[i] = 0;
    		
    		this.pbtn_plan= this.FindControl(this.prunclass, "加点方案");
    		this.pbtn_recommend= this.FindControl(this.prunclass, "推荐加点");
    		
    		this.iOldFlag=new Int32Array(6);//
    		
    		this.InitValue();
    	}

    	InitValue() {
    		var i;

    		var race = GmMe$1.me.iRace;
    		var tz = GameData$1.iBaseAttAdd[race][0] + GmMe$1.me.rbs.iBaseAtt[0]
    				+ GmMe$1.me.rbs.iLev;// 0级基础+所加点+等级
    		var fl = GameData$1.iBaseAttAdd[race][1] + GmMe$1.me.rbs.iBaseAtt[1]
    				+ GmMe$1.me.rbs.iLev;
    		var ll = GameData$1.iBaseAttAdd[race][2] + GmMe$1.me.rbs.iBaseAtt[2]
    				+ GmMe$1.me.rbs.iLev;
    		var nl = GameData$1.iBaseAttAdd[race][3] + GmMe$1.me.rbs.iBaseAtt[3]
    				+ GmMe$1.me.rbs.iLev;
    		var mj = GameData$1.iBaseAttAdd[race][4] + GmMe$1.me.rbs.iBaseAtt[4]
    				+ GmMe$1.me.rbs.iLev;

    		this.ptxt_value[0].sText = "#c003e57" + tz;
    		this.ptxt_value[1].sText = "#c003e57" + fl;
    		this.ptxt_value[2].sText = "#c003e57" + ll;
    		this.ptxt_value[3].sText = "#c003e57" + nl;
    		this.ptxt_value[4].sText = "#c003e57" + mj;

    		for (i = 0; i < 5; i++){
    			this.psli_point[i].SetPos(GmMe$1.me.rbs.iBaseAtt[i] + this.iAddAtt[i]);
    			if (this.iAddAtt[i] > 0)this.ptxt_value[i].sText += ("#c00ff00+" + this.iAddAtt[i]);
    		}

    		for (i = 0; i < 5; i++)
    			GmMe$1.me.rbs.iBaseAtt[i] += this.iAddAtt[i];
    		GmMe$1.me.CalcFightAtt();
    		var maxhp = GmMe$1.me.rbs.iMaxHp;
    		var maxmp = GmMe$1.me.rbs.iMaxMp;
    		var spirit = GmMe$1.me.rbs.iSpirit;
    		var attack = GmMe$1.me.rbs.iAttack;
    		var defence = GmMe$1.me.rbs.iDefence;
    		var speed = GmMe$1.me.rbs.iSpeed;
    		var nut = GmMe$1.me.rbs.nut;

    		for (i = 0; i < 5; i++)
    			GmMe$1.me.rbs.iBaseAtt[i] -= this.iAddAtt[i];
    		GmMe$1.me.CalcFightAtt();

    		this.ptxt_base[0].sText = "#c003e57气  血：" + GmMe$1.me.rbs.iMaxHp;
    		if (GmMe$1.me.rbs.iMaxHp > maxhp)
    			this.ptxt_base[0].sText += "#c00ff00-" + (GmMe$1.me.rbs.iMaxHp - maxhp);
    		else if (GmMe$1.me.rbs.iMaxHp < maxhp)
    			this.ptxt_base[0].sText += "#c00ff00+" + (maxhp - GmMe$1.me.rbs.iMaxHp);

    		this.ptxt_base[1].sText = "#c003e57魔  法：" + GmMe$1.me.rbs.iMaxMp;
    		if (GmMe$1.me.rbs.iMaxMp > maxmp)
    			this.ptxt_base[1].sText += "#c00ff00-" + (GmMe$1.me.rbs.iMaxMp - maxmp);
    		else if (GmMe$1.me.rbs.iMaxMp < maxmp)
    			this.ptxt_base[1].sText += "#c00ff00+" + (maxmp - GmMe$1.me.rbs.iMaxMp);

    		this.ptxt_base[2].sText = "#c003e57灵  力：" + GmMe$1.me.rbs.iSpirit;
    		if (GmMe$1.me.rbs.iSpirit > spirit)
    			this.ptxt_base[2].sText += "#c00ff00-" + (GmMe$1.me.rbs.iSpirit - spirit);
    		else if (GmMe$1.me.rbs.iSpirit < spirit)
    			this.ptxt_base[2].sText += "#c00ff00+" + (spirit - GmMe$1.me.rbs.iSpirit);

    		this.ptxt_base[3].sText = "#c003e57伤  害：" + GmMe$1.me.rbs.iAttack;
    		if (GmMe$1.me.rbs.iAttack > attack)
    			this.ptxt_base[3].sText += "#c00ff00-" + (GmMe$1.me.rbs.iAttack - attack);
    		else if (GmMe$1.me.rbs.iAttack < attack)
    			this.ptxt_base[3].sText += "#c00ff00+" + (attack - GmMe$1.me.rbs.iAttack);

    		this.ptxt_base[4].sText = "#c003e57防  御：" + GmMe$1.me.rbs.iDefence;
    		if (GmMe$1.me.rbs.iDefence > defence)
    			this.ptxt_base[4].sText += "#c00ff00-" + (GmMe$1.me.rbs.iDefence - defence);
    		else if (GmMe$1.me.rbs.iDefence < defence)
    			this.ptxt_base[4].sText += "#c00ff00+" + (defence - GmMe$1.me.rbs.iDefence);

    		this.ptxt_base[5].sText = "#c003e57速  度：" + GmMe$1.me.rbs.iSpeed;
    		if (GmMe$1.me.rbs.iSpeed > speed)
    			this.ptxt_base[5].sText += "#c00ff00-" + (GmMe$1.me.rbs.iSpeed - speed);
    		else if (GmMe$1.me.rbs.iSpeed < speed)
    			this.ptxt_base[5].sText += "#c00ff00+" + (speed - GmMe$1.me.rbs.iSpeed);

    		this.ptxt_base[6].sText = "#c003e57潜  能：" + GmMe$1.me.rbs.nut;
    		if (GmMe$1.me.rbs.nut > nut)
    			this.ptxt_base[6].sText += "#c00ff00-" + (GmMe$1.me.rbs.nut - nut);
    		else if (GmMe$1.me.rbs.nut < nut)
    			this.ptxt_base[6].sText += "#c00ff00+" + (nut - GmMe$1.me.rbs.nut);
    		
    		if((GmMe$1.me.iFlagExt[11]&2)!=0)this.pbtn_plan.sName="方案1";
    		else if((GmMe$1.me.iFlagExt[13]&2)!=0)this.pbtn_plan.sName="方案2";
    		else if((GmMe$1.me.iFlagExt[15]&2)!=0)this.pbtn_plan.sName="方案3";
    	}

    	Draw() {
    		var i;
    		var change=false;
    		for(i=0;i<6;i++)
    		{
    			if(this.iOldFlag[i]!=GmMe$1.me.iFlagExt[11+i])
    			{
    				this.iOldFlag[i]=GmMe$1.me.iFlagExt[11+i];
    				change=true;
    			}
    		}
    		if(change)this.InitValue();
    		
    		this._Draw();

    		if (Confirm1.end(Confirm1.CONFIRM_WASHROLEPOINT)) {
    			if (Confirm1.bConfirm) {// 同意开通VIP
    				GmProtocol$1.gi().s_UseGoods(MyGoods.gi().GetGid(191), 1,"");
    			}
    		}
    	}

    	setatt( pos,  value) {
    		var i;
    		var sum = value;
    		for (i = 0; i < 5; i++) {
    			if (pos != i)
    				sum += this.iAddAtt[i];
    		}
    		if (value < 0) {
    			value = 0;
    		} else if (sum > GmMe$1.me.rbs.nut) {
    			value -= (sum - GmMe$1.me.rbs.nut);
    		}
    		this.iAddAtt[pos] = value;
    		this.InitValue();
    	}

    	ProcTouch( msg,  x,  y) {
    		var i;
    		this._ProcTouch(msg, x, y);
    		for (i = 0; i < 5; i++) {
    			if (this.pbtn_sub[i].IsChecked()) {
    				this.setatt(i, this.iAddAtt[i] - 1);
    			}
    			if (this.psli_point[i].IsChanged()) {
    				this.setatt(i, this.psli_point[i].iPos - GmMe$1.me.rbs.iBaseAtt[i]);
    			}
    			if (this.pbtn_add[i].IsChecked()) {
    				this.setatt(i, this.iAddAtt[i] + 1);
    			}
    		}

    		if (this.pbtn_confirm.IsChecked())
    		{
    			for (i = 0; i < 5; i++)GmMe$1.me.rbs.iBaseAtt[i] += this.iAddAtt[i];
    			GmMe$1.me.CalcFightAtt();
    			GmProtocol$1.gi().s_AddPoint(this.iAddAtt[0], this.iAddAtt[1], this.iAddAtt[2],this.iAddAtt[3], this.iAddAtt[4]);
    			for (i = 0; i < 5; i++)this.iAddAtt[i] = 0;
    			this.InitValue();
    		}

    		if (this.pbtn_wash.IsChecked())
    		{
    			if (MyGoods.bHaveGoods(191, 1))
    			{
    				Confirm1.start(Confirm1.CONFIRM_WASHROLEPOINT,"是否消耗一颗涅槃丹#e重置属性点？");
    			}
    			else FrameMessage.fm.Open("背包中没有可消耗的涅槃丹（可在商城购买）");
    		}
    		
    		if(this.pbtn_plan.IsChecked())
    		{
    			XmsEngine.pxe.RunXms("人物加点方案");
    		}

    		if(this.pbtn_recommend.IsChecked())
    		{
    //			var maxnut=GmMe.me.rbs.iLev*5+(GmMe.me.iFlag[54]%1000);

    			PromptMessage.Open("加点说明",
    					"#c0000ff体质# #cffffff影响# 气血，灵力，速度# #c0000ff已分配:"+GmMe$1.me.rbs.iBaseAtt[0]+"点#e"+
    					"#c0000ff法力# #cffffff影响# 灵力，魔法# #c0000ff已分配:"+GmMe$1.me.rbs.iBaseAtt[1]+"点#e"+
    					"#c0000ff力量# #cffffff影响# 灵力，伤害，速度# #c0000ff已分配:"+GmMe$1.me.rbs.iBaseAtt[2]+"点#e"+
    					"#c0000ff耐力# #cffffff影响# 灵力，防御，速度# #c0000ff已分配:"+GmMe$1.me.rbs.iBaseAtt[3]+"点#e"+
    					"#c0000ff敏捷# #cffffff影响# 速度# #c0000ff已分配:"+GmMe$1.me.rbs.iBaseAtt[4]+"点#e"+
    					"#cffff00加点方案推荐#e"+this._RMD[GmMe$1.me.rbs.iSchoolId]);
    		}
    		return true;
    	}

    }

    class xms_PointPlan extends RunFirst {

    	 constructor() {
    		 super();
    	}

    	InitBefore() {
    	}

    	InitAfter() {
    		var i;
    		this.ptxt_atts = new Array(3);//
    		this.pbtn_proc = new Array(3);//
    		for (i = 0; i < 3; i++)
    		{
    			this.pbtn_proc[i] =  this.FindControl(this.prunclass, "方案" + i+"按钮");
    			this.ptxt_atts[i] =  this.FindControl(this.prunclass, "方案" + i+"点数");
    		}
    		this.iOldFlag=new Int32Array(6);//
    		for(i=0;i<6;i++)
    		{
    			this.iOldFlag[i]=GmMe$1.me.iFlagExt[11+i];
    		}
    		this.InitValue();
    	}

    	 InitValue() {
    		var i;

    		for(i=0;i<3;i++)
    		{
    			if((GmMe$1.me.iFlagExt[11+i*2]&1)==0)
    			{//未激活
    				this.pbtn_proc[i].sName="开启";
    				this.ptxt_atts[i].sText="未开启";
    			}
    			else
    			{//已激活
    				if((GmMe$1.me.iFlagExt[11+i*2]&2)==0)
    				{//未启用
    					this.pbtn_proc[i].sName="切换";
    				}
    				else
    				{//已启用
    					this.pbtn_proc[i].sName="使用中";
    				}
    				this.ptxt_atts[i].sText="体质:"+((GmMe$1.me.iFlagExt[11+i*2]>>20)&0x3ff)+
    						"，法力:"+((GmMe$1.me.iFlagExt[11+i*2]>>10)&0x3ff)+
    						"，力量:"+((GmMe$1.me.iFlagExt[12+i*2]>>20)&0x3ff)+
    						"，耐力:"+((GmMe$1.me.iFlagExt[12+i*2]>>10)&0x3ff)+
    						"，敏捷:"+((GmMe$1.me.iFlagExt[12+i*2])&0x3ff);
    			}
    		}
    	}

    	Draw() {
    		var i;
    		var change=false;
    		for(i=0;i<6;i++)
    		{
    			if(this.iOldFlag[i]!=GmMe$1.me.iFlagExt[11+i])
    			{
    				this.iOldFlag[i]=GmMe$1.me.iFlagExt[11+i];
    				change=true;
    			}
    		}
    		if(change)this.InitValue();
    		
    		this._Draw();
    		
    		if (Confirm1.end(Confirm1.CONFIRM_OPENPOINTPLAN)) {
    			if (Confirm1.bConfirm) {// 开启方案
    				GmProtocol$1.gi().s_SeverEvent(32, 0, this.iPlanPoint, 0, 0);
    			}
    		}
    		if (Confirm1.end(Confirm1.CONFIRM_SWAPPOINTPLAN)) {
    			if (Confirm1.bConfirm) {// 切换方案
    				GmProtocol$1.gi().s_SeverEvent(32, 1, this.iPlanPoint, 0, 0);
    			}
    		}
    	}
    	

    	ProcTouch( msg,  x,  y) {
    		var i;
    		this._ProcTouch(msg, x, y);
    		for (i = 0; i < 3; i++) {
    			if(this.pbtn_proc[i].IsChecked())
    			{
    				if((GmMe$1.me.iFlagExt[11+i*2]&1)==0)
    				{//未激活
    					if(i==1)Confirm1.start(Confirm1.CONFIRM_OPENPOINTPLAN,"开启方案2需要消耗800元宝，是否确认开启？");
    					if(i==2)Confirm1.start(Confirm1.CONFIRM_OPENPOINTPLAN,"开启方案3需要消耗1600元宝，是否确认开启？");
    					this.iPlanPoint=i;
    				}
    				else
    				{//已激活
    					if((GmMe$1.me.iFlagExt[11+i*2]&2)==0)
    					{//未启用
    						if(((GmMe$1.me.iFlag[60]>>6)%3)==0)Confirm1.start(Confirm1.CONFIRM_SWAPPOINTPLAN,"本次切换方案免费，是否确认切换？");
    						else Confirm1.start(Confirm1.CONFIRM_SWAPPOINTPLAN,"切换方案需要消耗"+((GmMe$1.me.iFlag[60]>>6)%3)*10+"万铜币，是否确认切换？");
    						this.iPlanPoint=i;
    					}
    					else
    					{//已启用，无处理
    					}
    				}
    			}
    		}

    		return true;
    	}
    }

    class X50_CODE$1 extends X_FIRST
    {
        constructor()
        {
            super();
            this.iType = 50;
            this.iLen = 7;
            this.pcode = "";
        }

        Set (s,len)
        {
    //        this.pcode=new byte[len];
    //		System.arraycopy(data, 0, pcode, 0, len);
    //		iLen=len;
    var data=new Uint8Array(len);
    for(var i=0;i<len;i++)data[i]=s[i];
    this.pcode=GU.gb2312a_to_utf8(data);

    this.iLen=this.pcode.length;
    //        this.pcode = s;
        }

        Get ()
        {
            return this.pcode;
        }
        copyfrom (p)
        {
            this.iX = p.iX;
            this.iY = p.iY;
            this.sName = p.sName;
            this.pcode = p.pcode;
            this.iLen=p.iLen;
        }
        GetCopy()
        {
            var pret=new X50_CODE$1();
            pret.copyfrom(this);
            return pret;
        }
    }

    class X60_DATA$1 extends X_FIRST
    {
        constructor()
        {
            super();
            this.iType = 30;
            this.iLen = 8;
            this.sName = "";
            this.pdata = "";
        }

        SetPos(x,y)
        {
            this.iX = x;
            this.iY = y;
        }
        Set (s)
        {
            this.pdata = s;
        }

        Get ()
        {
            return this.pdata;
        }
        copyfrom (p)
        {
            this.iX = p.iX;
            this.iY = p.iY;
            this.sName = p.sName;
            this.pdata = p.pdata;
        }
        GetCopy()
        {
            var pret=new X60_DATA$1();
            pret.copyfrom(this);
            return pret;
        }
    }

    class _ONEFIRST
    {
    //	String sName;
    //	X_FIRST pf;
    	
    //    _ONEFIRST pnext;
        constructor()
        {

        }
    }
    class XFirstOle
    {
        constructor()
        {
            this.MAXMAIN=256;
            GmPlay$1.sop("new first 1");
    		this.pmains=new Array(this.MAXMAIN);
    		GmPlay$1.sop("new first 2");
    		this.Clear();
    		GmPlay$1.sop("new first 3");
        }
        Clear()
    	{
    		for(var i=0;i<this.MAXMAIN;i++)this.pmains[i]=null;
        }
        LockMain( s)
    	{
    		for(var i=0;i<this.MAXMAIN;i++)
    		{
    //			GmPlay.sop("name="+this.pmains[i].sName+"==="+s);
    			if(this.pmains[i]==null)continue;
    			if(this.pmains[i].sName==s)return this.pmains[i];
    		}
    		return null;
        }
        LoadFile( fn, blocal)
    	{
    		GmPlay$1.sop("load "+fn+" 1");
    		if(blocal)
    		{
    			Laya.loader.load(XDefine$1.BASE_URL+ fn,
                	Laya.Handler.create(this, this._LoadFile,[this,fn]),
                	null,Laya.Loader.BUFFER);
    		}
    	}
    	_LoadFile(p,path,data)
    	{
    		var pls=GmPlay$1.gi().pls;
    		pls.GetData3(data);
    		GmPlay$1.sop("load "+path+" 2");
    		var ftype=pls.GetNextString();
    		var i,x,y;
    		if(ftype=="xf")
    		{
    			pls.GetNextInt();//版本号
    			for(i=0;i<this.MAXMAIN;i++)
    			{
    				if(this.pmains[i]==null)
    				{
    					x=pls.GetNextInt();
    					y=pls.GetNextInt();
    					this.pmains[i]=this.LoadFirst(pls);
    					this.pmains[i].SetPos(x,y);
    					break;
    				}
    			}
    		}
    		if(ftype=="xal")
    		{
    			GmPlay$1.sop("load "+path+" 3");
    			pls.GetNextInt();//版本号
    			while(true)
    			{
    				if(pls.GetNextInt()<0)break;
    				for(i=0;i<this.MAXMAIN;i++)
    				{
    					if(this.pmains[i]==null)
    					{
    						x=pls.GetNextInt();
    						y=pls.GetNextInt();
    						this.pmains[i]=this.LoadFirst(pls);
    						this.pmains[i].SetPos(x,y);
    						break;
    					}
    				}
    			}
    			GmPlay$1.sop("load "+path+" 4");
    		}
    		else
    		{
    //			AfxMessageBox("未知文件格式");
    		}
        }
        LoadFirst( pls)
    	{
    		var pnum;
    		var pfloat;
    		var pword;
    		var pclass;
    		var pcode;
    		var pdata;
    		var pret=null;
    		var tmpfirst;

    		var type=pls.GetNextInt();
    		
    //		GmPlay.sop("type="+type+",,,,off="+pls.iOffset);//10,24392,10.22657
    		switch(type)
    		{
    		case 10:
    			pnum=new X10_NUMBER$1();
    			pret=pnum;
    			pret.iType=type;
    			pret.sName=pls.GetNextString();
    			pret.iLen=pls.GetNextInt();
    			pnum.iNumber=pls.GetNextInt();
    			break;
    		case 20:
    			pfloat=new X20_FLOAT$1();
    			pret=pfloat;
    			pret.iType=type;
    			pret.sName=pls.GetNextString();
    			pret.iLen=pls.GetNextInt();
    			pfloat.fFloat=pls.GetNextFloat();
    			break;
    		case 30:
    			pword=new X30_WORD$1();
    			pret=pword;
    			pret.iType=type;
    			pret.sName=pls.GetNextString();
    			pls.GetNextInt();
    			pls.GetNextData();
    			pword.Set(pls.DataToString());
    			break;
    		case 40:
    			pclass=new X40_CLASS$1();
    			pret=pclass;
    			pret.iType=type;
    			pret.sName=pls.GetNextString();
    			pret.iLen=pls.GetNextInt();
    			pclass.iArray=pls.GetNextInt();
    			while(true)
    			{
    //				GmPlay.sop("11111");
    				tmpfirst=this.LoadFirst(pls);
    //				GmPlay.sop("22222");
    				if(tmpfirst==null)break;
    				pclass.LinkFirst(tmpfirst);
    //				GmPlay.sop("33333");
    			}
    			break;
    		case 50:
    			pcode=new X50_CODE$1();
    			pret=pcode;
    			pret.iType=type;
    			pret.sName=pls.GetNextString();
    			//pret.iLen=
    			pls.GetNextInt();
    			pls.GetNextData();
    			pcode.Set(pls.obd,pls.obi);
    			break;
    		case 60:
    			pdata=new X60_DATA$1();
    			pret=pdata;
    			pret.iType=type;
    			pret.sName=pls.GetNextString();
    			//pret.iLen=
    			pls.GetNextInt();
    			pls.GetNextData();
    			pdata.Set(pls.obd, pls.obi);
    			break;
    		}
    //		if(pret!=null)GmPlay.sop("name="+pret.sName);
    		return pret;
    	}
    }

    class XmsEngine
    {
        constructor()
        {
            this.pfole=new XFirstOle();
    		GmPlay$1.sop("Ｘｍｓ　ＩｎｉｔＦｉｎｉｓｈ1");
    //		if(GameVersion.QUDAO==0)this.pfole.LoadFile("localres/7gol.xal", false);
    //		else 
    			this.pfole.LoadFile("res/datapackage/data/7gol.xal", true);
    		GmPlay$1.sop("Ｘｍｓ　ＩｎｉｔＦｉｎｉｓｈ2");
    		XmsEngine.panimaole=new XAnimaOle();
    		GmPlay$1.sop("Ｘｍｓ　ＩｎｉｔＦｉｎｉｓｈ3");
    		XmsEngine.paaole=new XAnimaActionOle();
    		XmsEngine.pxe=this;
    		GmPlay$1.sop("Ｘｍｓ　ＩｎｉｔＦｉｎｉｓｈ4");
    		this.iStatPoint=0;
        }
        FindMain( s)
    	{
    		return this.pfole.LockMain(s);
    	}
    	
    	
    	 FindLink( s)
    	{
    		for(var i=0;i<XmsEngine._STATLINK.length;i++)
    		{
    			if(XmsEngine._STATLINK[i][0]==s)
    			{
    				return i;
    			}
    		}
    		return -1;
    	}

    //	public void this.RunXms(X_FIRST pf)
    //	{
    //		Run(XS_TESTRUN, pf,new RunFirst());
    //	}
    /*	 RunXms( index)
    	{
    		var p=this.FindLink(index);
    		if(p==-1)return;
    		this.RunXms(p);
    	}*/
    	

    	
    	 IsStat( index)
    	{
    		var p=this.FindLink(index);
    //		GmPlay.sop("p="+p+"--------------"+XStat.x_stat.iXStat);
    		if(p==-1)return false;
    		if(XStat$1.x_stat.iXStat==XmsEngine.XS_BASESTAT+p)return true;
    		return false;
    	}
    	 RunXms( stat)
    	{
            if(typeof(stat)=="string")
            {
                var p=this.FindLink(stat);
                if(p==-1)return;
                this.RunXms(p);
                return;
            }
    		var pc;
    		var mainname=XmsEngine._STATLINK[stat][1];
    		var runname=XmsEngine._STATLINK[stat][2];
    		var prf=null;
    		switch(stat)
    		{
    		case 0:prf=new xms_AddPoint();break;
    		case 1:prf=new xms_PointPlan();break;
    		}
    		pc=this.FindMain(mainname);
    		if(pc!=null)
    		{
    			pc=pc.FindFirst(runname,5);
    			if(pc!=null)this.Run(XmsEngine.XS_BASESTAT+stat, pc,prf);
    		}
    	}
    	
    //	public final static int XS_BASESTAT=200000;
    //	public boolean this.RunXms(String mainname,String runname,RunFirst prf)
    //	{
    //		X40_CLASS pc=(X40_CLASS) this.FindMain(mainname);
    //		if(pc!=null)
    //		{
    //			pc=(X40_CLASS) pc.FindFirst(runname,5);
    //			if(pc!=null)
    //			{
    //				Run(XS_BASESTAT+this.iStatPoint, pc,prf);
    //				this.iStatPoint++;
    //				return true;
    //			}
    //		}
    //		return false;
    //	}
    	 Run( stat, pf, prf)
    	{
    		XStat$1.x_stat.PushXmsStat(stat,prf);
    		prf.prunclass=pf;
    		prf.XMS_MYSTAT=stat;
    		
    		prf._Init();
    	}
    	
    	 RunByPls( pls)
    	{
    		var pc = this.FindMain("七国");
    		if (pc == null)return;

    		var buf=pls.GetNextString();
    //		GmPlay.sop(buf);

    		pc =pc.FindFirstByPath(buf);
    		if (pc == null)return;
    //		GmPlay.sop(pc.sName);
    		var prf = new RunFirst();
    		prf.prunclass = pc;
    		prf._Init();

    		XStat$1.x_stat.PushXmsStat(XmsEngine.XS_BASESTAT+2000, prf);
    		prf.XMS_MYSTAT = XmsEngine.XS_BASESTAT+2000;
    	}
    }
    XmsEngine.XS_BASESTAT=100000;
    XmsEngine.panimaole;
    XmsEngine.paaole;

    XmsEngine.pxe;

    XmsEngine._STATLINK=[
        ["人物加点","七国","人物加点界面"],//0------xms_AddPoint
        ["人物加点方案","七国","人物加点方案"],//1------xms_PointPlan
    ];

    class UIList$1 {
    	
    	Clean()
    	{
    		this.iOffY=0;
    		this.iSortType=-1;
    		this.iSortUD=0;
    		this.iLockPoint=-1;
    	}
    	constructor( type, count, w, h)
    	{
    		this.iType=type;
    		this.iTitleCount=count;
    		this.iW=w;
    		this.iH=h;
    		this.sTitleName=new Array(this.iTitleCount);//
    		this.iTitleWidth=new Int32Array(this.iTitleCount);//
    		this.iTitleOffx=new Int32Array(this.iTitleCount);//
    		this.bCanSort=new Array(this.iTitleCount);//
    		this.iAlign=new Int32Array(this.iTitleCount);//
    		for(var i=0;i<this.iTitleCount;i++)
    		{
    			this.sTitleName[i]="";
    			this.iTitleWidth[i]=0;
    			this.iAlign[i]=-2;
    		}
    		this.iTitleHeight=50;
    		this.iRowHeight=40;
    		this.iOffY=0;
    		this.bTouchLock=false;
    		this.iCheckPoint=-1;
    		this.iLockPoint=-1;
    		this.iSortLock=-1;
    		
    		this.iSortType=-1;
    		this.iSortUD=0;
    		
    		this.btn_list=new Array(3);//
    	}
    	SetTitle( num, name, width, cansort)
    	{
    		if(num<0 || num>=this.iTitleCount)return;
    		this.sTitleName[num]=name;
    		this.iTitleWidth[num]=width;
    		this.bCanSort[num]=cansort;
    	}
    	BeginDraw( x, y)
    	{
    		var i,j;
    		this.iTitleOffx[0]=0;
    		for(i=1;i<this.iTitleCount;i++)
    		{
    			this.iTitleOffx[i]=this.iTitleOffx[i-1]+this.iTitleWidth[i-1];
    		}
    		this.iX=x;
    		this.iY=y;
    		M3DFast$1.gi().SetViewClip(x, y, x+this.iW, y+this.iH);
    		
    		var offx,offy;
    		offx=this.iX;
    		offy=this.iY+this.iTitleHeight-this.iOffY%(this.iRowHeight*2)-this.iRowHeight*2;
    		j=(this.iH-this.iTitleHeight)/this.iRowHeight+4;
    		for(i=0;i<j;i++)
    		{
    			if(i%2==0)DrawMode$1.frame_type3("纯色a10_10",offx,offy,this.iW,this.iRowHeight,10,10);
    			else DrawMode$1.frame_type3("纯色b10_10",offx,offy,this.iW,this.iRowHeight,10,10);
    			
    			offy+=this.iRowHeight;
    		}
    		if(this.iLockPoint>=0)
    		{
    			offy=this.iY+this.iTitleHeight+this.iLockPoint*this.iRowHeight-this.iOffY;
    //			DrawMode.frame_type1("选中条a20_40", offx, offy, this.iW, 20);
    			DrawMode$1.frame_type4("19号框20_20", offx, offy, this.iW,40,20,20);
    		}
    		
    		this.iMaxLine=0;
    		this.iBtnCount=0;
    	}
    	DrawUnitEx_Anima( x, y, aa, ox, oy)
    	{
    		if(this.iMaxLine<y)this.iMaxLine=y;
    		if(!this.bShow(y))return;
    		
    		var offx,offy,offw;
    		
    		offx=this.iTitleOffx[x];
    		offw=this.iTitleWidth[x];
    		offy=this.iTitleHeight-this.iOffY+y*this.iRowHeight;

    		aa.Draw(this.iX+offx+ox,this.iY+offy+oy);
    	}
    	
    	DrawUnitEx_Button( x, y, btn, ox, oy)
    	{
    		if(this.iMaxLine<y)this.iMaxLine=y;
    		if(!this.bShow(y))return;
    		
    		var offx,offy,offw;
    		
    		offx=this.iTitleOffx[x];
    		offw=this.iTitleWidth[x];
    		offy=this.iTitleHeight-this.iOffY+y*this.iRowHeight;

    		btn.Move(this.iX+offx+ox,this.iY+offy+oy, btn.iW, btn.iH);
    		btn.Draw();
    		
    		this.btn_list[this.iBtnCount++]=btn;
    	}
    	DrawUnit( x, y, detail)
    	{
    		if(this.iMaxLine<y)this.iMaxLine=y;
    		if(!this.bShow(y))return;
    		
    		if(detail.length<=0)return;
    		
    		var offx,offy,offw;
    		
    		offx=this.iTitleOffx[x];
    		offw=this.iTitleWidth[x];
    		offy=this.iTitleHeight-this.iOffY+y*this.iRowHeight;

    		if(this.iAlign[x]==0 || this.iAlign[x]==-1)M3DFast$1.gi().DrawTextEx(this.iX+offx,this.iY+offy+this.iRowHeight/2,detail,0xffffffff,20,101,1,1,0,this.iAlign[x],-2);
    		else if(this.iAlign[x]==-2)M3DFast$1.gi().DrawTextEx(this.iX+offx+offw/2,this.iY+offy+this.iRowHeight/2,detail,0xffffffff,20,101,1,1,0,this.iAlign[x],-2);
    		else if(this.iAlign[x]==-3)M3DFast$1.gi().DrawTextEx(this.iX+offx+offw,this.iY+offy+this.iRowHeight/2,detail,0xffffffff,20,101,1,1,0,this.iAlign[x],-2);
    	}
    	  OffX( x)
    	{
    		var offx,offw;
    		
    		offx=this.iTitleOffx[x];
    		offw=this.iTitleWidth[x];
    		
    		if(this.iAlign[x]==0 || this.iAlign[x]==-1)return this.iX+offx;
    		else if(this.iAlign[x]==-2)return this.iX+offx+offw/2;
    		else if(this.iAlign[x]==-3)return this.iX+offx+offw;
    		return 0;
    	}
    	 bShow( y)
    	{
    //		GmPlay.sop("this.iOffY="+this.iOffY);
    //		GmPlay.sop("y="+y);
    //		GmPlay.sop("this.iRowHeight="+this.iRowHeight);
    //		GmPlay.sop("this.iH="+this.iH);
    		var offy=-this.iOffY+y*this.iRowHeight;
    		if(offy<-this.iRowHeight || offy>this.iH)return false;
    		return true;
    	}
    	FinishDraw()
    	{
    		var i,j;
    		M3DFast$1.gi().NoClip();
    		DrawMode$1.frame_type2("内阴影a10_10",this.iX,this.iY,this.iW,this.iH,10,10);
    		
    		if(this.iTitleHeight>0)
    		{
    		DrawMode$1.frame_type1("列表标题a20_50", this.iX, this.iY, this.iW, 20);
    		for(i=0;i<this.iTitleCount;i++)
    		{
    			if(this.iTitleWidth[i]>0)
    			{
    				if(i>0)GmPlay$1.xani_frame.DrawAnima(this.iX+this.iTitleOffx[i], this.iY+3, "列表分割线a3_44", 0);
    				if(this.iSortType==i)M3DFast$1.gi().DrawText_2(this.iX+this.iTitleOffx[i]+this.iTitleWidth[i]/2, this.iY+25, this.sTitleName[i], 0xffffff00, 26, 101, 1, 1, 0, -2, -2, 4, 0xff008000);
    				else M3DFast$1.gi().DrawText_2(this.iX+this.iTitleOffx[i]+this.iTitleWidth[i]/2, this.iY+25, this.sTitleName[i], 0xffffff00, 25, 101, 1, 1, 0, -2, -2, 4, 0xff800000);
    			}
    //			if(i%2==0)DrawMode.frame_type3("纯色a10_10",this.iX)
    		}
    		}
    		if(!this.bTouchLock)
    		{
    			if(this.iOffY<0)this.iOffY/=2;
    			j=(this.iH-this.iTitleHeight)/this.iRowHeight-1;
    			i=this.iMaxLine*this.iRowHeight-this.iRowHeight*j;
    			if(i<0)i=0;
    			if(this.iOffY>i)
    			{
    				this.iOffY-=(this.iOffY-i)/2;
    			}
    		}
    	}
    	iChecked()
    	{
    		var i=this.iCheckPoint;
    		this.iCheckPoint=-1;
    		if(i>=0)return i;
    		return -1;
    	}

    	 ProcTouch( msg, x, y)
    	{
    		var i,j,k;
    		for(i=0;i<this.iBtnCount;i++)
    		{
    			if(this.btn_list[i].ProcTouch(msg, x, y))return true;
    		}
    		for(i=0;i<this.iTitleCount;i++)
    		{
    			if(!this.bCanSort[i])continue;
    			if(XDefine$1.bInRect(x, y, this.iX+this.iTitleOffx[i], this.iY, this.iTitleWidth[i], this.iTitleHeight))
    			{
    				if(msg==1)this.iSortLock=i;
    				if(msg==3 && this.iSortLock==i)
    				{//选中
    					if(this.iSortType==i)this.iSortUD=1-this.iSortUD;
    					else
    					{
    						this.iSortType=i;
    						this.iSortUD=0;
    					}

    					this.iSortLock=-1;
    				}
    				break;
    			}
    		}
    		if(i>=this.iTitleCount)this.iSortLock=-1;
    		if(msg==2 && this.bTouchLock)
    		{
    			if(Math.abs(this.iLockY-y)>=10)this.bTouchMoving=true;
    			if(this.bTouchMoving)
    			{
    				this.iOffY+=(this.iLockY-y);
    				this.iLockY=y;
    				return true;
    			}
    		}
    		if(msg==3 && this.bTouchLock)
    		{
    			this.bTouchLock=false;
    			if(!this.bTouchMoving)
    			{///点击一个选项
    				this.iLockPoint=parseInt((this.iLockY-this.iY-this.iTitleHeight+this.iOffY)/this.iRowHeight);
    				if(this.iLockPoint<0 || this.iLockPoint>this.iMaxLine)this.iLockPoint=-1;
    				if(this.iLockPoint>=0)this.iCheckPoint=this.iLockPoint;
    				{//所点击列
    					j=x-this.iX;
    					k=0;
    					for(i=0;i<this.iTitleCount;i++)
    					{
    						k+=this.iTitleWidth[i];
    						if(j<k)break;
    					}
    					this.iCheckX=i;
    				}
    			}
    			return true;
    		}
    		if(XDefine$1.bInRect(x, y, this.iX, this.iY+this.iTitleHeight, this.iW, this.iH-this.iTitleHeight))
    		{
    			if(msg==1)
    			{//按下，选中某条，记录y
    				this.iLockY=y;
    				this.bTouchLock=true;
    				this.bTouchMoving=false;
    				return true;
    			}
    		}
    		return false;
    	}
    }

    class MyGov {
    	
    	constructor()
    	{
    		this.sName="";
    		this.iGovSkillLev=new Int32Array(10);
    		 this.GOVPOWER_0=0;//人员管理权限：允许/拒绝申请者，设置/撤销/转让职位，踢出帮众
    		 this.GOVPOWER_1=1;//帮派管理
    		 this.GOVPOWER_2=2;//副本开启权限
    		var i;
    		this.iRealGid=-1;
    		for(i=0;i<MyGov.MAXGOVBUILDINGLEV;i++)
    		{//建筑升级，每级所需经验
    			if(i==0)MyGov.iBuildingUpgrad[i]=1500;
    			else MyGov.iBuildingUpgrad[i]=MyGov.iBuildingUpgrad[i-1]+(i-1)*200+600;

    			if(i==0)MyGov.iBuildingTotal[i]=MyGov.iBuildingUpgrad[i];
    			else MyGov.iBuildingTotal[i]=MyGov.iBuildingTotal[i-1]+MyGov.iBuildingUpgrad[i];
    		}
    		for(i=0;i<21;i++)
    		{//帮派等级升级每级所需繁荣度
    			MyGov.iGovUpgrad[i]=MyGov.iBuildingTotal[i*5+4]*4;
    		}
    	}
    	bCheckPower( power)
    	{//0人员管理，1帮派管理，2副本开启
    		if(this.iRealGid<0)return false;
    		if((this.iPower&(1<<power))!=0)return true;
    		return false;
    	}
    	initmygov( pls)
    	{
    		this.iRealGid=pls.GetNextInt();
    //		if(this.iRealGid==-1)return;
    		this.iJob=pls.GetNextInt();
    		this.iTick=pls.GetNextInt();
    		this.sName=pls.GetNextString();
    		this.iPower=pls.GetNextShort();
    		this.iZhuQueLev=pls.GetNextShort();
    		this.iShsLev=pls.GetNextShort();
    	}
    	
    	govoperateframe( pls)
    	{
    		var i;
    		var type=pls.GetNextByte();
    		switch(type)
    		{
    		case 0://学技能
    			this.iGovTick=pls.GetNextInt();
    			for(i=0;i<8;i++)
    			{
    				this.iGovSkillLev[i]=pls.GetNextInt();
    			}
    			if(XStat$1.gi().iXStat!=XStat$1.GS_LEARNGOVSKILL)XStat$1.gi().PushStat(XStat$1.GS_LEARNGOVSKILL);
    			break;
    		case 1://修炼
    			this.iGovTick=pls.GetNextInt();
    			if(XStat$1.gi().iXStat!=XStat$1.GS_GOVXIU)XStat$1.gi().PushStat(XStat$1.GS_GOVXIU);
    			break;
    		}
    	}
    }

    MyGov.MAXGOVBUILDINGLEV=120;
    MyGov.MAXGOVLEV=25;
    MyGov.iBuildingUpgrad=new Int32Array(MyGov.MAXGOVBUILDINGLEV);//
    MyGov.iBuildingTotal=new Int32Array(MyGov.MAXGOVBUILDINGLEV);//
    MyGov.iGovUpgrad=new Int32Array(MyGov.MAXGOVLEV);//

    MyGov.mg=new MyGov();

    MyGov._GOVBUILDINGS=["青龙堂","白虎堂","朱雀堂","玄武堂","学院","金库","商会","厢房","药房"];
    MyGov._GOVSKILLS=["强身术","炼丹术","烹饪","锻造","冶金","剪裁","健体","修心"];
    MyGov._GOVMTLEV=["低级维护","中级维护","高级维护"]; 
    MyGov._GOVJOBS=["帮主","副帮主","左护法","右护法","长老","堂主","精英","帮众"];
    MyGov._JOBIDS=[0,1,2,3,4,5,6,10];

    MyGov.sJob=function( ijob)
    {
    	switch(ijob)
    	{
    	case 0:return "帮主";//1
    	case 1:return "副帮主";//1
    	case 2:return "左护法";//1
    	case 3:return "右护法";//1
    	case 4:return "长老";//2
    	case 5:return "堂主";//4
    	case 6:return "精英";
    	case 10:return "帮众";
    	default:return "未知"+ijob;
    	}
    };

    class AddPoint extends BaseClass
    {
    	constructor( ani)
    	{
    		super();
    		 this.sAttName=["体质","法力","力量","耐力","敏捷"];
    		 this.sAttDetail=["提高气血上限","提高灵力","提高伤害值","提高防御","提高速度"];
    	
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=364+160+50;
    		this.iH=504;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_ok.InitButton("按钮1_110");
    		this.btn_ok.sName="确 定";
    		//this.btn_ok.Move(this.iX+10,this.iY+this.iH-60, 80, 50);
    		
    		this.btn_cancel=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_cancel.InitButton("按钮1_110");
    		this.btn_cancel.sName="取 消";
    		//this.btn_cancel.Move(this.iX+this.iW-90,this.iY+this.iH-60, 80, 50);
    		
    		this.btn_sub=new Array(5);//
    		this.btn_add=new Array(5);//
    		for(var i=0;i<5;i++)
    		{
    			this.btn_sub[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_sub[i].InitButton("加点按钮-");
    		//	this.btn_sub[i].sName="-";
    			this.btn_add[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_add[i].InitButton("加点按钮+");
    		//	this.btn_add[i].sName="+";
    		}
    	}
    	
    	Draw()
    	{
    		var i;
    		var ts;
    //xuc	DrawMode.Frame1_BR(this.iX, this.iY, this.iW, this.iH);
    //		DrawMode.DrawFrame2(this.iX, this.iY, this.iW, this.iH);
    		
    		DrawMode$1.new_bigframe(this.iX,this.iY,this.iW,this.iH);
    		
    		for(i=0;i<5;i++)
    		{
    			this.pm3f.DrawTextEx(this.iX+40, this.iY+65+i*65, this.sAttName[i], 0xff003e57, 30, 101, 1, 1, 0, 0, -2);
    			this.pm3f.DrawTextEx(this.iX+350+50, this.iY+65+i*65, this.sAttDetail[i], 0xff003e57, 25, 101, 1, 1, 0, 0, -2);
    			if(AddPoint.iModifys[i]>0)ts=AddPoint.iAtts[i]+"+"+AddPoint.iModifys[i];
    			else ts=""+AddPoint.iAtts[i];
    			this.pm3f.DrawTextEx(this.iX+200, this.iY+65+i*65, ts, 0xff003e57, 30, 101, 1, 1, 0, 0, -2);
    			this.btn_sub[i].Move(this.iX+124, this.iY+65+i*65-30, 59, 60);this.btn_sub[i].Draw();
    			this.btn_add[i].Move(this.iX+280+50, this.iY+65+i*65-30, 59, 60);this.btn_add[i].Draw();
    		}
    		this.pm3f.DrawTextEx(this.iX+40, this.iY+65+i*65, "潜能", 0xff003e57, 30, 101, 1, 1, 0, 0, -2);
    		this.pm3f.DrawTextEx(this.iX+200, this.iY+65+i*65, ""+(AddPoint.iNut-AddPoint.iModifys[0]-AddPoint.iModifys[1]-AddPoint.iModifys[2]-AddPoint.iModifys[3]-AddPoint.iModifys[4]), 0xff003e57, 30, 101, 1, 1, 0, 0, -2);
    		
    		this.btn_ok.Move(this.iX+45,this.iY+347+15+60, 110, 52);
    		this.btn_ok.Draw();
    		this.btn_cancel.Move(this.iX+this.iW-110-45,this.iY+347+15+60, 110, 52);
    		this.btn_cancel.Draw();
    	}
    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<5;i++)
    		{
    			if(this.btn_sub[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_sub[i].bCheck())
    				{
    					if(AddPoint.iModifys[i]>0)AddPoint.iModifys[i]--;
    				}
    			}
    			if(this.btn_add[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_add[i].bCheck())
    				{
    					if((AddPoint.iNut-AddPoint.iModifys[0]-AddPoint.iModifys[1]-AddPoint.iModifys[2]-AddPoint.iModifys[3]-AddPoint.iModifys[4])>0)AddPoint.iModifys[i]++;
    				}
    			}
    		}
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{
    				AddPoint.bConfirm=true;
    				AddPoint.bFinished=true;
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{
    				AddPoint.bConfirm=false;
    				AddPoint.bFinished=true;
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		return false;
    	}
    }
    AddPoint.ADDPOINT_USER=10;
    AddPoint.ADDPOINT_PET=20;
    AddPoint.ADDPOINT_MOUNTS=30;

    AddPoint.iCid;
    AddPoint.iModifys=new Int32Array(5);
    AddPoint.iAtts=new Int32Array(5);
    AddPoint.iNut;
    AddPoint.bFinished=false;
    AddPoint.bConfirm;

    AddPoint.start=function( cid, tz, fl, ll, nl, mj, nut)
    {
    	AddPoint.iCid=cid;
    	AddPoint.iAtts[0]=tz;
    	AddPoint.iAtts[1]=fl;
    	AddPoint.iAtts[2]=ll;
    	AddPoint.iAtts[3]=nl;
    	AddPoint.iAtts[4]=mj;
    	
    	AddPoint.iModifys[0]=0;
    	AddPoint.iModifys[1]=0;
    	AddPoint.iModifys[2]=0;
    	AddPoint.iModifys[3]=0;
    	AddPoint.iModifys[4]=0;
    	
    	AddPoint.iNut=nut;
    	
    	XStat$1.gi().PushStat(XStat$1.GS_ADDPOINT);
    	AddPoint.bFinished=false;
    };
    AddPoint.end=function( cid)
    {
    	if(AddPoint.bFinished && AddPoint.iCid==cid)
    	{
    		AddPoint.bFinished=false;
    		return true;
    	}
    	return false;
    };

    class MyAttFrame extends BaseClass{
    	constructor( ani)
    	{
    		super();
    		this._SVIPT=[
    			["特权","剩余天数<=30","剩余天数<=60","剩余天数>60"],
    			["大表情","可使用","可使用","可使用"],
    			["自动回合数","无限","无限","无限"],
    			["使用三倍卡","+1次","+1次","+1次"],
    			["活跃度","+6点","+8点","+10点"],
    			["门派奖励","+20%","+30%","+40%"],
    			["签到奖励","","+50%","+100%"],
    			["体力恢复速度","","+1点","+2点"],
    			["实时仓库","","","可使用"],
    	];
    	 this.list_vip=null;
    		var i;
    		this.pm3f=M3DFast$1.gi();
    		MyAttFrame.iW=916;
    		MyAttFrame.iH=608;
    		
    		MyAttFrame.iX=(GmConfig$1.SCRW-MyAttFrame.iW)/2;
    		MyAttFrame.iY=(GmConfig$1.SCRH-MyAttFrame.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(MyAttFrame.iX+MyAttFrame.iW-35, MyAttFrame.iY-25, 60, 60);
    		
    		this.iPage=0;this.iPage_jn = 1;
    		this.btn_page=new Array(4);//
    		for(i=0;i<4;i++)
    		{
    			this.btn_page[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_page[i].InitButton("右侧标签");
    			this.btn_page[i].Move(MyAttFrame.iX+MyAttFrame.iW-15, MyAttFrame.iY+40+125*i, 50, 140);
    			
    			/*
    			if(i==0)this.btn_page[i].InitButton("标签按钮上");
    			else if(i==4)this.btn_page[i].InitButton("标签按钮下");
    			else this.btn_page[i].InitButton("标签按钮中");*/
    		}
    		
    		this.btn_title=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_title.InitButton("宠物改名按钮");
    		//this.btn_title.sName="称 谓";
    		
    		this.btn_upgrade=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_upgrade.sName="升 级";
    		this.btn_upgrade.InitButton("按钮1_110");
    		
    		this.btn_addpoint=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_addpoint.sName="加 点";
    		this.btn_addpoint.InitButton("按钮1_110");
    		
    		this.btn_vip=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_vip.sName="开通/续费";
    		this.btn_vip.InitButton("按钮3");
    		this.btn_vip.iNameSize=25;
    		this.btn_vip.iNameColor = 0xffffd700;
    		
    		this.btn_mpjn=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_mpjn.sName="门派技能";
    		this.btn_mpjn.InitButton("按钮2");
    		this.btn_mpjn.iNameSize=25;
    		this.btn_mpjn.iNameColor = 0xffffd700;
    		
    		this.btn_fzjn=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_fzjn.sName="辅助技能";
    		this.btn_fzjn.InitButton("按钮2");
    		this.btn_fzjn.iNameSize=25;
    		this.btn_fzjn.iNameColor = 0xffffd700;
    		
    		this.btn_jqjn=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_jqjn.sName="剧情技能";
    		this.btn_jqjn.InitButton("按钮2");
    		this.btn_jqjn.iNameSize=25;
    		this.btn_jqjn.iNameColor = 0xffffd700;
    		
    		
    /////------------------------------------------------------

    		
    		this.iMainSkillPoint=0;
    		this.btn_mainskill=new Array(6);//
    		for(i=0;i<6;i++)
    		{
    			this.btn_mainskill[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_mainskill[i].bCheckByRect=true;
    		}
    		
    		this.iGovSkillPoint=-1;
    		this.btn_govskill=new Array(10);//
    		for(i=0;i<10;i++)
    		{
    			this.btn_govskill[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_govskill[i].bCheckByRect=true;
    		}

    		this.aa_body=new AnimaAction();
    		this.aa_weapon=new AnimaAction();
    		
    		this.iWeapTid=MyGoods.gi().GetWeaponTid();
    		
    		var xb=GmMe$1.me.iRace*2+GmMe$1.me.iSex;
    		GmPlay$1.xani_newrole[xb].InitAnimaWithName("站立_下", this.aa_body);
    		if(this.iWeapTid>=0)
    		{
    			GmPlay$1.xani_weap[GmMe$1.me.iRace*2+GmMe$1.me.iSex][SortAnima.WeapFlag(this.iWeapTid)].InitAnimaWithName("站立_下", this.aa_weapon);
    		}
    		this.aa_cls=new Array(5);//
    		for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    		{
    			if(GmMe$1.me.iColor[i]<=0 || GmMe$1.me.iColor[i]>=6)continue;
    			this.aa_cls[i]=new AnimaAction();
    			GmPlay$1.xani_color[xb][GmMe$1.me.iColor[i]-1].InitAnimaWithName(SortAnima._CHANGECOLOR[xb][i]+"_站立_下", this.aa_cls[i]);
    		}
    //		GmPlay.xani_role[GmMe.me.iRace*2+GmMe.me.iSex].InitAnimaWithName("站立_下", this.aa_body);
    //		if(this.iWeapTid>=0)
    //		{
    //			if(this.iWeapTid==248 || this.iWeapTid==249 || this.iWeapTid==250)
    //			{//70武器xani_weap70
    //				GmPlay.xani_weap70.InitAnimaWithName(GmMe.sSex(GmMe.me.iSex)+GmPlay.de_goods.strValue(this.iWeapTid, 0, 4)+"_站立_下", this.aa_weapon);
    //			}
    //			else GmPlay.xani_role[GmMe.me.iRace*2+GmMe.me.iSex].InitAnimaWithName(GmPlay.de_goods.strValue(this.iWeapTid, 0, 4)+"_站立_下", this.aa_weapon);
    //		}
    	}


    	Draw_0( x, y)
    	{
    		var i,j;
    		DrawMode$1.new_framein(MyAttFrame.iX+28,MyAttFrame.iY+28,397,552);//左背景
    		DrawMode$1.new_framein(MyAttFrame.iX+435,MyAttFrame.iY+28,451,552);//右背景
    		
    		var offx=MyAttFrame.iX+28;
    		var offy=MyAttFrame.iY+28;
    		var offw=397;
    		var offh=552;
    		
    		MyAttFrame.wordframe(offx+offw/2-200/2,offy+30,200);
    		M3DFast$1.gi().DrawText_2(offx+offw/2,offy+30+16, GmMe$1.me.sName, 0xffffffff, 22, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		GmMe$1.me.CalcUserScore();
    		M3DFast$1.gi().DrawText_2(offx+offw/2,offy+30+16+40, "评分:"+GmMe$1.me.iScore, 0xffffffff, 26, 101, 1, 1, 0, -2, -2, 3, 0xff000000);

    		GmPlay$1.xani_nui2.DrawAnima(offx+offw/2-260/2,offy+90 ,"宠物背景",0);

    		FireworksEffect.DrawAura(0, offx+offw/2,offy+280, null, 0);//人物属性页面
    		this.aa_body.Draw(offx+offw/2,offy+280);
    		var xb=GmMe$1.me.iRace*2+GmMe$1.me.iSex;
    		for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    		{
    			if(GmMe$1.me.iColor[i]<=0 || GmMe$1.me.iColor[i]>=6)continue;
    			this.aa_cls[i].iFrame=this.aa_body.iFrame;
    			this.aa_cls[i].Draw(offx+offw/2,offy+280);
    		}
    		this.aa_body.NextFrame();
    		if(this.iWeapTid>=0)
    		{
    			this.aa_weapon.Draw(offx+offw/2,offy+280);
    			this.aa_weapon.NextFrame();
    		}
    		
    		i=370;
    		j=40;
    		DrawMode$1.ui3_Text1_(offx+20, offy+i+j*0,67,100,"号码",""+GmMe$1.me.iRid);
    		DrawMode$1.ui3_Text1_(offx+20, offy+i+j*1,67,100,"等级",""+GmMe$1.me.rbs.iLev);
    		
    		DrawMode$1.ui3_Text1_(offx+offw/2+10, offy+i+j*0,67,100,"门派",""+GameData$1.sSchools[GmMe$1.me.rbs.iSchoolId]);
    		if(MyGov.mg.iRealGid==-1)DrawMode$1.ui3_Text1_(offx+offw/2+10, offy+i+j*1,67,100,"帮派","无帮派");
    		else DrawMode$1.ui3_Text1_(offx+offw/2+10, offy+i+j*1,67,100,"帮派",MyGov.mg.sName);

    		if(GmMe$1.me.rbs.sTitle.length<=0)DrawMode$1.ui3_Text1_(offx+20, offy+i+j*2+30,67,200,"称谓","无");
    		else DrawMode$1.ui3_Text1_(offx+20, offy+i+j*2+30,67,200,"称谓",GmMe$1.me.rbs.sTitle);
    		
    		this.btn_title.Move(offx+290, offy+i+j*2+30+16-30, 60, 60);
    		this.btn_title.Draw();
    		
    	//	M3DFast.gi().DrawText_2(x+70, y+365, "气血", 0xffffffff, 22, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    	//	M3DFast.gi().DrawText_2(x+70, y+365+33, "魔法", 0xffffffff, 22, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    	//	M3DFast.gi().DrawText_2(x+70, y+365+33*2, "体力", 0xffffffff, 22, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		
    		var xx = MyAttFrame.iX+470, yy = MyAttFrame.iY+56;
    		GmPlay$1.xani_nui2.DrawAnima(xx, yy, "提示1",0);
    		M3DFast$1.gi().DrawText_2(xx+67/2, yy+16, "气血", 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		GmPlay$1.xani_nui2.DrawAnima(xx, yy+38, "提示1",0);
    		M3DFast$1.gi().DrawText_2(xx+67/2, yy+38+16, "魔法", 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		GmPlay$1.xani_nui2.DrawAnima(xx, yy+76, "提示1",0);
    		M3DFast$1.gi().DrawText_2(xx+67/2, yy+76+16, "经验", 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		GmPlay$1.xani_nui2.DrawAnima(xx, yy+38*3, "提示1",0);
    		M3DFast$1.gi().DrawText_2(xx+67/2, yy+38*3+16, "愤怒", 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		GmPlay$1.xani_nui2.DrawAnima(xx, yy+38*4, "提示1",0);
    		M3DFast$1.gi().DrawText_2(xx+67/2, yy+38*4+16, "体力", 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		
    		
    	//	GmPlay.xani_ui3.DrawAnima(x+100, y+365-11, "大血条",0);
    	//	GmPlay.xani_ui3.DrawAnima(x+100, y+365+33-11, "大血条",0);
    	//	GmPlay.xani_ui3.DrawAnima(x+100, y+365+33*2-11, "大血条",0);
    		
    		var w=67,h=38;
    		
    		GmPlay$1.xani_nui2.DrawAnima(xx+w, yy, "宠物大血条",0);
    		GmPlay$1.xani_nui2.DrawAnima(xx+w, yy+h, "宠物大血条",0);
    		GmPlay$1.xani_nui2.DrawAnima(xx+w, yy+h*2, "宠物大血条",0);
    		GmPlay$1.xani_nui2.DrawAnima(xx+w, yy+h*3, "宠物大血条",0);
    		GmPlay$1.xani_nui2.DrawAnima(xx+w, yy+h*4, "宠物大血条",0);
    		
    		M3DFast$1.gi().SetViewClip(xx, yy, xx+w+311*GmMe$1.me.rbs.iHp/GmMe$1.me.rbs.iMaxHp, yy+480);
    		GmPlay$1.xani_nui2.DrawAnima(xx+w+2, yy+3, "宠物大血条",1);
    		M3DFast$1.gi().NoClip();
    		M3DFast$1.gi().SetViewClip(xx, yy, xx+w+311*GmMe$1.me.rbs.iMp/GmMe$1.me.rbs.iMaxMp, yy+480);
    		GmPlay$1.xani_nui2.DrawAnima(xx+w+2, yy+h+3, "宠物大血条",2);
    		M3DFast$1.gi().NoClip();
    		var l=311;
    		l=l*GmMe$1.me.rbs.iExp/GameData$1.iUpgradeExp[GmMe$1.me.rbs.iLev];
    		M3DFast$1.gi().SetViewClip(xx, yy,  (xx+w+l), yy+480);
    		GmPlay$1.xani_nui2.DrawAnima(xx+w+2, yy+h*2+3, "宠物大血条",3);
    		M3DFast$1.gi().NoClip();
    		//愤怒
    		M3DFast$1.gi().SetViewClip(xx, yy, xx+w+311*GmMe$1.me.rbs.iAnger/150, yy+480);
    		GmPlay$1.xani_nui2.DrawAnima(xx+w+2, yy+h*3+3, "宠物大血条",5);
    		M3DFast$1.gi().NoClip();
    		//体力
    		M3DFast$1.gi().SetViewClip(xx, yy, xx+w+311*GmMe$1.me.rbs.iPower/GmMe$1.me.rbs.iMaxPower, yy+480);
    		GmPlay$1.xani_nui2.DrawAnima(xx+w+2, yy+h*4+3, "宠物大血条",4);
    		M3DFast$1.gi().NoClip();
    	
    		M3DFast$1.gi().DrawTextEx(xx+w+311/2, yy+15,GmMe$1.me.rbs.iHp+"/"+GmMe$1.me.rbs.iMaxHp, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		M3DFast$1.gi().DrawTextEx(xx+w+311/2, yy+40+13,GmMe$1.me.rbs.iMp+"/"+GmMe$1.me.rbs.iMaxMp, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		M3DFast$1.gi().DrawTextEx(xx+w+311/2, yy+80+12,GmMe$1.me.rbs.iExp+"/"+GameData$1.iUpgradeExp[GmMe$1.me.rbs.iLev], 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		M3DFast$1.gi().DrawTextEx(xx+w+311/2, yy+120+13,GmMe$1.me.rbs.iAnger+"/"+150, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		M3DFast$1.gi().DrawTextEx(xx+w+311/2, yy+160+12,GmMe$1.me.rbs.iPower+"/"+GmMe$1.me.rbs.iMaxPower, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);

    		
    	//	GmPlay.xani_ui3.DrawAnima(x+345, y, "大框分割线",0);
    		
    		
    		
    	//	if(GmMe.me.rbs.sTitle.length<=0)DrawMode.ui3_Text1(MyAttFrame.iX+390,MyAttFrame.iY+40,70,150,"称谓","无");
    	//	else DrawMode.ui3_Text1(MyAttFrame.iX+390,MyAttFrame.iY+40,70,150,"称谓",""+GmMe.me.rbs.sTitle);
    	//	DrawMode.ui3_Text1(MyAttFrame.iX+390,MyAttFrame.iY+40*2,70,150,"门派",GameData.sSchools[GmMe.me.rbs.iSchoolId]);
    	//	if(MyGov.mg.iRealGid==-1)DrawMode.ui3_Text1(MyAttFrame.iX+390,MyAttFrame.iY+40*3,70,150,"帮派","无");
    	//	else DrawMode.ui3_Text1(MyAttFrame.iX+390,MyAttFrame.iY+40*3,70,150,"帮派",MyGov.mg.sName);

    		
    		
    		/*
    		DrawMode.ui3_Text1(MyAttFrame.iX+390,MyAttFrame.iY+40*4,70,90,"体质",""+GmMe.me.rbs.tz);
    		DrawMode.ui3_Text1(MyAttFrame.iX+390,MyAttFrame.iY+40*5,70,90,"法力",""+GmMe.me.rbs.fl);
    		DrawMode.ui3_Text1(MyAttFrame.iX+390,MyAttFrame.iY+40*6,70,90,"力量",""+GmMe.me.rbs.ll);
    		DrawMode.ui3_Text1(MyAttFrame.iX+390,MyAttFrame.iY+40*7,70,90,"耐力",""+GmMe.me.rbs.nl);
    		DrawMode.ui3_Text1(MyAttFrame.iX+390,MyAttFrame.iY+40*8,70,90,"敏捷",""+GmMe.me.rbs.mj);
    		
    		DrawMode.ui3_Text1(MyAttFrame.iX+570,MyAttFrame.iY+40*4,70,90,"灵力",""+GmMe.me.rbs.iSpirit);
    		DrawMode.ui3_Text1(MyAttFrame.iX+570,MyAttFrame.iY+40*5,70,90,"伤害",""+GmMe.me.rbs.iAttack);
    		DrawMode.ui3_Text1(MyAttFrame.iX+570,MyAttFrame.iY+40*6,70,90,"防御",""+GmMe.me.rbs.iDefence);
    		DrawMode.ui3_Text1(MyAttFrame.iX+570,MyAttFrame.iY+40*7,70,90,"速度",""+GmMe.me.rbs.iSpeed);
    		
    		M3DFast.gi().DrawText_2(MyAttFrame.iX+570+20,MyAttFrame.iY+40*8+16, "剩余："+GmMe.me.rbs.nut, 0xffffff00, 22, 101, 1, 1, 0, 0, -2, 3, 0xff000000);
    		*/
    		x = MyAttFrame.iX+472; y = MyAttFrame.iY+242+35;
    		DrawMode$1.ui3_Text1_(x, y,67,100,"体质",""+GmMe$1.me.rbs.tz);
    		DrawMode$1.ui3_Text1_(x, y+40,67,100,"法力",""+GmMe$1.me.rbs.fl);
    		DrawMode$1.ui3_Text1_(x, y+80,67,100,"力量",""+GmMe$1.me.rbs.ll);
    		DrawMode$1.ui3_Text1_(x, y+120,67,100,"耐力",""+GmMe$1.me.rbs.nl);
    		DrawMode$1.ui3_Text1_(x, y+160,67,100,"敏捷",""+GmMe$1.me.rbs.mj);
    		
    		DrawMode$1.ui3_Text1_(x+210, y,67,100,"灵力",""+GmMe$1.me.rbs.iSpirit);
    		DrawMode$1.ui3_Text1_(x+210, y+40,67,100,"伤害",""+GmMe$1.me.rbs.iAttack);
    		DrawMode$1.ui3_Text1_(x+210, y+80,67,100,"防御",""+GmMe$1.me.rbs.iDefence);
    		DrawMode$1.ui3_Text1_(x+210, y+120,67,100,"速度",""+GmMe$1.me.rbs.iSpeed);
    		DrawMode$1.ui3_Text1_(x+210, y+160,67,100,"潜能",""+GmMe$1.me.rbs.nut);
    		
    		
    		
    	//	DrawMode.ui3_Text2(MyAttFrame.iX+390,MyAttFrame.iY+360,90,150,"升级经验",""+GameData.iUpgradeExp[GmMe.me.rbs.iLev]);
    	//	DrawMode.ui3_Text2(MyAttFrame.iX+390,MyAttFrame.iY+360+50,90,150,"获得经验",""+GmMe.me.rbs.iExp);
    		
    		this.btn_upgrade.Move(MyAttFrame.iX+472, MyAttFrame.iY+503, 110, 52);
    		this.btn_addpoint.Move(MyAttFrame.iX+733, MyAttFrame.iY+503, 110, 52);
    		this.btn_upgrade.Draw();
    		this.btn_addpoint.Draw();
    	}
    	
    	
    	Draw_12( x,  y)
    	{	
    		var offxx,offyy,offww,offhh;
    		
    		offxx=MyAttFrame.iX+28;
    		offyy=MyAttFrame.iY+28;
    		offww=MyAttFrame.iW-28-28;
    		offhh=MyAttFrame.iH-28-28;
    		
    		DrawMode$1.new_framein(offxx,offyy,offww,offhh);//背景
    		
    		if(this.iPage_jn == 1){//显示门派技能
    			this.btn_mpjn.iNameColor = 0xffffd700;
    			this.btn_fzjn.iNameColor = 0xffb0e0e6;
    			this.btn_jqjn.iNameColor = 0xffb0e0e6;
    			
    			this.Draw_1(x, y);
    		}
    		else if(this.iPage_jn == 2){//显示辅助技能
    			this.btn_mpjn.iNameColor = 0xffb0e0e6;
    			this.btn_fzjn.iNameColor = 0xffffd700;
    			this.btn_jqjn.iNameColor = 0xffb0e0e6;
    			
    			this.Draw_2(x, y);
    		}
    		else if(this.iPage_jn == 3){//显示剧情技能
    			this.btn_mpjn.iNameColor = 0xffb0e0e6;
    			this.btn_fzjn.iNameColor = 0xffb0e0e6;
    			this.btn_jqjn.iNameColor = 0xffffd700;
    			
    		}
    		
    		this.btn_mpjn.Move(MyAttFrame.iX+53, MyAttFrame.iY+53, 145, 56);
    		this.btn_mpjn.Draw();
    		
    		this.btn_fzjn.Move(MyAttFrame.iX+209, MyAttFrame.iY+53, 145, 56);
    		this.btn_fzjn.Draw();
    		
    //		this.btn_jqjn.Move(MyAttFrame.iX+374, MyAttFrame.iY+53, 145, 56);
    //		this.btn_jqjn.Draw();
    		
    	}
    	
    	Draw_1( x, y)
    	{
    		
    		if(GmMe$1.me.rbs.iSchoolId<=0)
    		{
    			this.pm3f.DrawTextEx(x+150, y+150, "你还未加入门派", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			return;
    		}
    		
    		var i,j;
    		var schoolid=GmMe$1.me.rbs.iSchoolId;//门派ID
    		var mid;//主技能ID列表
    		
    		DrawMode$1.new_frameon(MyAttFrame.iX+459,MyAttFrame.iY+115,408,109,0);
    		DrawMode$1.new_frameon(MyAttFrame.iX+459,MyAttFrame.iY+235,408,324,0);
    		
    		for(i=0;i<6;i++)
    		{
    		
    			mid=GameData$1.iSchoolSkillId[schoolid][i];//
    		/*	if(this.iMainSkillPoint==i)GmPlay.xani_ui3.DrawAnima(x+40, y+35+i*70, "选中背景",0);
    			GmPlay.xani_ui3.DrawAnima(x+50, y+35+i*70, "技能外框",0);
    			
    			GmPlay.xani_skill.DrawAnima_aa(x+50, y+35+i*70, GmPlay.de_skill.strValue(mid, 0, 5),0);
    			M3DFast.gi().DrawText_2(x+120, y+35+i*70+15, GmPlay.de_skill.strValue(mid, 0, 6), 0xffffe0c0, 20, 101, 1, 1, 0, 0, -2, 3, 0xff000000);
    			M3DFast.gi().DrawText_2(x+120, y+35+i*70+45, GmMe.me.rbs.iSchoolSkill[i]+"级", 0xffffe0c0, 20, 101, 1, 1, 0, 0, -2, 2, 0xff000000);

    			this.btn_mainskill[i].Move(x+50, y+35+i*70, 170, 60);
    			*/
    //			if(this.btn_mainskill[i].bMouseDown)
    //			{//按下，显示技能详细
    //				MyAttFrame.Skill_Detail(mid,x+10+w+(w+60)*(i%3), y+w+i/3*h,GmMe.me.rbs.iSchoolSkill[i]);
    //			}
    			
    			var xx=0,yy=0;
    			switch(i)
    			{
    			case 0:
    				xx = MyAttFrame.iX+200; yy = MyAttFrame.iY+115+11;
    				break;
    			case 1:
    				xx = MyAttFrame.iX+350; yy=MyAttFrame.iY+188+11;
    				break;
    			case 2:
    				xx = MyAttFrame.iX+350; yy=MyAttFrame.iY+341+11;
    				break;
    			case 3:
    				xx = MyAttFrame.iX+200; yy=MyAttFrame.iY+414+11;
    				break;
    			case 4:
    				xx = MyAttFrame.iX+50; yy=MyAttFrame.iY+341+11;
    				break;
    			case 5:
    				xx = MyAttFrame.iX+50; yy=MyAttFrame.iY+188+11;
    				break;
    			}
    			GmPlay$1.xani_nui2.DrawAnima(xx, yy, "技能框",0);
    			GmPlay$1.xani_nicon.DrawAnima_aa(xx, yy, GmPlay$1.de_skill.strValue(mid, 0, 5),0);
    //			GmPlay.xani_skill.DrawAnima_aa(xx, yy, GmPlay.de_skill.strValue(mid, 0, 5),0);
    			
    			GmPlay$1.xani_nui2.DrawAnimaEx(xx+1, yy+87, "可变长文字框",0,101,1.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    			GmPlay$1.xani_nui2.DrawAnimaEx(xx+20+1, yy+87, "可变长文字框",1,101,2.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    			GmPlay$1.xani_nui2.DrawAnimaEx(xx+20+40+1, yy+87, "可变长文字框",2,101,1.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    			
    			M3DFast$1.gi().DrawTextEx(xx+42, yy+92+12, ""+GmMe$1.me.rbs.iSchoolSkill[i], 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			M3DFast$1.gi().DrawText_2(xx+42, yy+92+40, GmPlay$1.de_skill.strValue(mid, 0, 6), 0xffffa500, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    			
    			this.btn_mainskill[i].Move(xx, yy, 92, 92);
    			
    		}
    		
    		//显示所选主技能
    		var hhh = 5, www = 5;
    		mid=GameData$1.iSchoolSkillId[schoolid][this.iMainSkillPoint];
    		GmPlay$1.xani_nui2.DrawAnima(MyAttFrame.iX+466+www, MyAttFrame.iY+123+hhh, "技能框",0);
    		GmPlay$1.xani_nicon.DrawAnima_aa(MyAttFrame.iX+466+www, MyAttFrame.iY+123+hhh, GmPlay$1.de_skill.strValue(mid, 0, 5),0);
    		M3DFast$1.gi().DrawText_2(MyAttFrame.iX+466+42+www, MyAttFrame.iY+123+90+hhh-10, GmPlay$1.de_skill.strValue(mid, 0, 6), 0xffffa500, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		FormatString.gi().Format("#cffe0c0"+GmPlay$1.de_skill.strValue(mid, 0, 3), 309, 20);
    		FormatString.gi().Draw(MyAttFrame.iX+560+www,MyAttFrame.iY+121+hhh);
    		
    		hhh = 8;
    		//显示子技能背景框
    		for(i=0;i<3;i++)
    		{
    		//	GmPlay.xani_ui3.DrawAnima(x+215, y+140+i*75, "技能分隔",0);
    		//	GmPlay.xani_ui3.DrawAnima(x+230, y+150+i*75, "技能外框",0);
    		//	DrawMode.ui3_Frame2(x+390,y+140+i*75+5,350,70);
    			
    			GmPlay$1.xani_nui2.DrawAnima(MyAttFrame.iX+466+www, MyAttFrame.iY+238+i*109+hhh, "技能框",0);
    		}
    		
    		if(this.iMainSkillPoint>=0 && this.iMainSkillPoint<6)
    		{//显示主技能所包含的子技能
    			mid=GameData$1.iSchoolSkillId[schoolid][this.iMainSkillPoint];
    			for(i=0;i<10;i++)
    			{
    				j=GmPlay$1.de_skill.intValue(mid, i, 4);//得到子技能ID
    				if(j<=0)break;
    				GmPlay$1.xani_nicon.DrawAnima_aa(MyAttFrame.iX+466+www,MyAttFrame.iY+238+i*109+hhh, GmPlay$1.de_skill.strValue(j,0, 5),0);
    				M3DFast$1.gi().DrawText_2(MyAttFrame.iX+466+42+www,MyAttFrame.iY+238+i*109+90+hhh-10, GmPlay$1.de_skill.strValue(j, 0, 6), 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);

    				FormatString.gi().Format("#cffe0c0"+GmPlay$1.de_skill.strValue(j, 0, 3), 309, 20);
    				FormatString.gi().Draw(MyAttFrame.iX+560+www,MyAttFrame.iY+238+i*109+hhh);
    			}
    		}
    		
    		
    	/*
    		DrawMode.ui3_Frame2(x+230,y+30,510,90);
    		mid=GameData.iSchoolSkillId[schoolid][this.iMainSkillPoint];//
    		M3DFast.gi().DrawText_2(x+240, y+50, GmPlay.de_skill.strValue(mid, 0, 6), 0xffffe0c0, 20, 101, 1, 1, 0, 0, -2, 3, 0xff000000);
    		FormatString.gi().Format("#cffe0c0"+GmPlay.de_skill.strValue(mid, 0, 3), 480, 20);
    		FormatString.gi().Draw(x+240,y+70);
    		
    		for(i=0;i<4;i++)
    		{
    			GmPlay.xani_ui3.DrawAnima(x+215, y+140+i*75, "技能分隔",0);
    			GmPlay.xani_ui3.DrawAnima(x+230, y+150+i*75, "技能外框",0);
    			DrawMode.ui3_Frame2(x+390,y+140+i*75+5,350,70);
    		}
    		if(this.iMainSkillPoint>=0 && this.iMainSkillPoint<6)
    		{//显示主技能所包含的子技能
    			mid=GameData.iSchoolSkillId[schoolid][this.iMainSkillPoint];
    			for(i=0;i<10;i++)
    			{
    				j=GmPlay.de_skill.intValue(mid, i, 4);//得到子技能ID
    				if(j<=0)break;
    				GmPlay.xani_skill.DrawAnima_aa(x+230,y+150+i*75, GmPlay.de_skill.strValue(j,0, 5),0);
    				M3DFast.gi().DrawText_2(x+300,y+150+i*75+30, GmPlay.de_skill.strValue(j, 0, 6), 0xffffe0c0, 20, 101, 1, 1, 0, 0, -2, 3, 0xff000000);

    				FormatString.gi().Format("#cffe0c0"+GmPlay.de_skill.strValue(j, 0, 3), 320, 20);
    				FormatString.gi().Draw(x+400,y+150+i*75+30-FormatString.gi().MyAttFrame.iH/2);
    			}
    		}
    		GmPlay.xani_ui3.DrawAnima(x+200, y, "大框分割线",0);
    		*/
    	}


    	
    	Draw_2( x, y)
    	{
    		var i,j,k=0;
    		var mid;
    		
    	//	int w=60;
    	//	int h=40+60;
    		
    		var offx,offy;
    		
    		DrawMode$1.new_frameon(MyAttFrame.iX+537,MyAttFrame.iY+118,331,269,0);
    		DrawMode$1.new_frameon(MyAttFrame.iX+537,MyAttFrame.iY+417,331,144,0);
    		GmPlay$1.xani_nui2.DrawAnima(MyAttFrame.iX+554, MyAttFrame.iY+127, "背景图案",0);
    		
    		//显示子技能背景框
    		for(i=0;i<12;i++)
    		{
    			GmPlay$1.xani_nui2.DrawAnima(MyAttFrame.iX+52+(i%4)*120, MyAttFrame.iY+119+parseInt(i/4)*150, "技能框",0);
    		}
    		
    		for(i=0;i<10;i++)
    		{
    			mid=0;
    			offx=MyAttFrame.iX+52+(i%4)*120;
    			offy=MyAttFrame.iY+119+parseInt(i/4)*150;
    			this.btn_govskill[i].Move(-100, -100, 60, 60);
    			if(i<8)
    			{//帮派技能
    				if(GmMe$1.me.rbs.iGovSkill[i]<=0)continue;//技能0级不显示
    			//	if(this.iGovSkillPoint==i)GmPlay.xani_ui3.DrawAnima(offx,offy, "技能外框",0);
    				mid=GameData$1.iGovSkillId[i];
    			
    				GmPlay$1.xani_nicon.DrawAnima_aa(offx,offy, GmPlay$1.de_skill.strValue(mid, 0, 5),0);
    			//	M3DFast.gi().DrawText_2(offx+30, offy+75, GmPlay.de_skill.strValue(mid, 0, 6)+"Lv."+GmMe.me.rbs.iGovSkill[i], 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    			
    				GmPlay$1.xani_nui2.DrawAnimaEx(offx+1, offy+87, "可变长文字框",0,101,1.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    				GmPlay$1.xani_nui2.DrawAnimaEx(offx+20+1, offy+87, "可变长文字框",1,101,2.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    				GmPlay$1.xani_nui2.DrawAnimaEx(offx+20+40+1, offy+87, "可变长文字框",2,101,1.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    				M3DFast$1.gi().DrawTextEx(offx+42, offy+92+12, ""+GmMe$1.me.rbs.iGovSkill[i], 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    				M3DFast$1.gi().DrawText_2(offx+42, offy+92+38, GmPlay$1.de_skill.strValue(mid, 0, 6), 0xffffa500, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    				
    			
    			}
    			else if(i==8)//额外技能，无影手203，变身术204
    			{//8,9
    				j=GmMe$1.me.iFlag[33]%10;//无影手等级
    				if(j<=0)continue;
    			//	if(this.iGovSkillPoint==i)GmPlay.xani_ui3.DrawAnima(offx,offy, "技能外框",0);
    				mid=203;
    				GmPlay$1.xani_nicon.DrawAnima_aa(offx,offy, GmPlay$1.de_skill.strValue(mid, 0, 5),0);
    			//	M3DFast.gi().DrawText_2(offx+30, offy+75, GmPlay.de_skill.strValue(mid, 0, 6)+"Lv."+j, 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    			
    				GmPlay$1.xani_nui2.DrawAnimaEx(offx+1, offy+87, "可变长文字框",0,101,1.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    				GmPlay$1.xani_nui2.DrawAnimaEx(offx+20+1, offy+87, "可变长文字框",1,101,2.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    				GmPlay$1.xani_nui2.DrawAnimaEx(offx+20+40+1, offy+87, "可变长文字框",2,101,1.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    				M3DFast$1.gi().DrawTextEx(offx+42, offy+92+12, ""+j, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    				M3DFast$1.gi().DrawText_2(offx+42, offy+92+38, GmPlay$1.de_skill.strValue(mid, 0, 6), 0xffffa500, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    				
    			
    			}
    			else if(i==9)
    			{
    				j=parseInt(GmMe$1.me.iFlag[33]/10)%10;//变身术等级
    				if(j<=0)continue;
    			//	if(this.iGovSkillPoint==i)GmPlay.xani_ui3.DrawAnima(offx,offy, "技能外框",0);
    				mid=204;
    				GmPlay$1.xani_nicon.DrawAnima_aa(offx,offy, GmPlay$1.de_skill.strValue(mid, 0, 5),0);
    			//	M3DFast.gi().DrawText_2(offx+30, offy+75, GmPlay.de_skill.strValue(mid, 0, 6)+"Lv."+j, 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    			
    				GmPlay$1.xani_nui2.DrawAnimaEx(offx+1, offy+87, "可变长文字框",0,101,1.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    				GmPlay$1.xani_nui2.DrawAnimaEx(offx+20+1, offy+87, "可变长文字框",1,101,2.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    				GmPlay$1.xani_nui2.DrawAnimaEx(offx+20+40+1, offy+87, "可变长文字框",2,101,1.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    				M3DFast$1.gi().DrawTextEx(offx+42, offy+92+12, ""+j, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    				M3DFast$1.gi().DrawText_2(offx+42, offy+92+38, GmPlay$1.de_skill.strValue(mid, 0, 6), 0xffffa500, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    			}
    			else continue;
    			this.btn_govskill[i].Move(offx, offy, 92, 92);
    			k++;
    			
    			if(this.iGovSkillPoint==i && mid!=0)
    			{
    				
    				M3DFast$1.gi().DrawTextEx(MyAttFrame.iX+542,MyAttFrame.iY+421, GmPlay$1.de_skill.strValue(mid, 0, 6), 0xffffffff, 22, 101, 1, 1, 0, 0, 0);

    				FormatString.gi().Format("#cffe0c0"+GmPlay$1.de_skill.strValue(mid, 0, 3), 320, 20);
    				FormatString.gi().Draw(MyAttFrame.iX+542,MyAttFrame.iY+458);
    			}
    		}
    		
    //		M3DFast.gi().DrawText_2(MyAttFrame.iX+537, MyAttFrame.iY+393, "可用剧情点 ", 0xffaeeeee, 22, 101, 1, 1, 0, 0, 0, 3, 0xff000000);
    		
    		
    		
    		
    		/*
    		
    		//======================
    		var i,j,k;
    		var mid;
    		
    		var w=60;
    		var h=40+60;
    		
    		var offx,offy;
    		
    		x+=10;
    //		y+=10;
    		
    		GmPlay.xani_ui3.DrawAnima(MyAttFrame.iX+437, MyAttFrame.iY, "大框分割线",0);
    		DrawMode.ui3_Frame2(MyAttFrame.iX+500,MyAttFrame.iY+60,200,350);
    		k=0;
    		for(i=0;i<10;i++)
    		{
    			mid=0;
    			offx=x+10+w+(w+60)*(k%3);
    			offy=y+w+k/3*h;
    			this.btn_govskill[i].Move(-100, -100, 60, 60);
    			if(i<8)
    			{//帮派技能
    				if(GmMe.me.rbs.iGovSkill[i]<=0)continue;//技能0级不显示
    				if(this.iGovSkillPoint==i)GmPlay.xani_ui3.DrawAnima(offx,offy, "技能外框",0);
    				mid=GameData.iGovSkillId[i];
    				GmPlay.xani_skillicon.DrawAnima_aa(offx,offy, GmPlay.de_skill.strValue(mid, 0, 5),0);
    				M3DFast.gi().DrawText_2(offx+30, offy+75, GmPlay.de_skill.strValue(mid, 0, 6)+GmMe.me.rbs.iGovSkill[i]+"级", 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    			}
    			else if(i==8)//额外技能，无影手203，变身术204
    			{//8,9
    				j=GmMe.me.iFlag[33]%10;//无影手等级
    				if(j<=0)continue;
    				if(this.iGovSkillPoint==i)GmPlay.xani_ui3.DrawAnima(offx,offy, "技能外框",0);
    				mid=203;
    				GmPlay.xani_skillicon.DrawAnima_aa(offx,offy, GmPlay.de_skill.strValue(mid, 0, 5),0);
    				M3DFast.gi().DrawText_2(offx+30, offy+75, GmPlay.de_skill.strValue(mid, 0, 6)+j+"级", 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    			}
    			else if(i==9)
    			{
    				j=GmMe.me.iFlag[33]/10%10;//变身术等级
    				if(j<=0)continue;
    				if(this.iGovSkillPoint==i)GmPlay.xani_ui3.DrawAnima(offx,offy, "技能外框",0);
    				mid=204;
    				GmPlay.xani_skillicon.DrawAnima_aa(offx,offy, GmPlay.de_skill.strValue(mid, 0, 5),0);
    				M3DFast.gi().DrawText_2(offx+30, offy+75, GmPlay.de_skill.strValue(mid, 0, 6)+j+"级", 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    			}
    			else continue;
    			this.btn_govskill[i].Move(offx, offy, 60, 60);
    			k++;
    			
    			if(this.iGovSkillPoint==i && mid!=0)
    			{
    				
    				M3DFast.gi().DrawText_2(MyAttFrame.iX+510,MyAttFrame.iY+70, GmPlay.de_skill.strValue(mid, 0, 6), 0xffffe0c0, 20, 101, 1, 1, 0, 0, 0, 3, 0xff000000);

    				FormatString.gi().Format("#cffe0c0"+GmPlay.de_skill.strValue(mid, 0, 3), 180, 20);
    				FormatString.gi().Draw(MyAttFrame.iX+510,MyAttFrame.iY+70+30);

    //				GmPlay.xani_goods.DrawAnimaEx(x+10+w+(w+60)*(i%3), y+w+i/3*h,"物品锁定框", 0, 101, 1, 1, 0, 0, 0);
    			}
    //			if(this.btn_govskill[i].bMouseDown)
    //			{//按下，显示技能详细
    //				MyAttFrame.Skill_Detail(mid,x+10+w+(w+60)*(i%3), y+w+i/3*h,GmMe.me.rbs.iGovSkill[i]);
    //			}
    		}
    		

    //		if(this.iGovSkillPoint!=-1)
    //		{
    //			mid=GameData.iGovSkillId[this.iGovSkillPoint];
    //			M3DFast.gi().DrawText_2(MyAttFrame.iX+510,MyAttFrame.iY+70, GmPlay.de_skill.strValue(mid, 0, 6), 0xffffe0c0, 20, 101, 1, 1, 0, 0, 0, 3, 0xff000000);
    //
    //			FormatString.gi().Format("#cffe0c0"+GmPlay.de_skill.strValue(mid, 0, 3), 180, 20);
    //			FormatString.gi().Draw(MyAttFrame.iX+510,MyAttFrame.iY+70+30);
    //		}
     */
     
    	}
    	Draw_3( x, y)
    	{
    		var offxx,offyy,offww,offhh;
    		
    		offxx=MyAttFrame.iX+28;
    		offyy=MyAttFrame.iY+28;
    		offww=MyAttFrame.iW-28-28;
    		offhh=MyAttFrame.iH-28-28;
    		
    		DrawMode$1.new_framein(offxx,offyy,offww,offhh);//背景
    		
    		var i;
    		DrawMode$1.new_frameon(MyAttFrame.iX+55,MyAttFrame.iY+54,84,294,0);
    		DrawMode$1.new_frameon(MyAttFrame.iX+55,MyAttFrame.iY+344,84,211,0);
    		
    		GmPlay$1.xani_nui2.DrawAnima(MyAttFrame.iX+81, MyAttFrame.iY+126, "人物宠物修炼",0);
    		GmPlay$1.xani_nui2.DrawAnima(MyAttFrame.iX+81, MyAttFrame.iY+383, "人物宠物修炼",1);
    		
    		GmPlay$1.xani_nui2.DrawAnimaEx(MyAttFrame.iX+135, MyAttFrame.iY+56, "标题条",0,101,1.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    		GmPlay$1.xani_nui2.DrawAnimaEx(MyAttFrame.iX+135+20,MyAttFrame.iY+56, "标题条",1,101,(720-40)/20,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    		GmPlay$1.xani_nui2.DrawAnimaEx(MyAttFrame.iX+135+720-20, MyAttFrame.iY+56, "标题条",2,101,1.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    		
    		M3DFast$1.gi().DrawText_2(MyAttFrame.iX+258,MyAttFrame.iY+82, "修炼选项", 0xffeeee00, 30, 101, 1, 1, 0, -2, -2, 3, 0xffcd3700);
    		M3DFast$1.gi().DrawText_2(MyAttFrame.iX+496,MyAttFrame.iY+82, "等级", 0xffeeee00, 30, 101, 1, 1, 0, -2, -2, 3, 0xffcd3700);
    		M3DFast$1.gi().DrawText_2(MyAttFrame.iX+737,MyAttFrame.iY+82, "修炼经验", 0xffeeee00, 30, 101, 1, 1, 0, -2, -2, 3, 0xffcd3700);
    		
    		for(i=0;i<6;i++)
    		{
    		//	DrawMode.ui3_Text1(MyAttFrame.iX+90,MyAttFrame.iY+150+40*i,130,120,GmPlay.de_skill.strValue(GameData.iGovXiuId[i], 0, 5),""+GmMe.me.rbs.iGovXiu[i][0]+"/"+(GmMe.me.rbs.iLev/5));
    			if(i%2==0)
    				DrawMode$1.new_bgbar(MyAttFrame.iX+135, MyAttFrame.iY+107+i*40, 720, 20,"内容条1");
    			else
    				DrawMode$1.new_bgbar(MyAttFrame.iX+135, MyAttFrame.iY+107+i*40, 720, 20,"内容条2");
    			
    			M3DFast$1.gi().DrawTextEx(MyAttFrame.iX+258, MyAttFrame.iY+129+40*i, GmPlay$1.de_skill.strValue(GameData$1.iGovXiuId[i], 0, 5), 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			M3DFast$1.gi().DrawTextEx(MyAttFrame.iX+496, MyAttFrame.iY+129+40*i, GmMe$1.me.rbs.iGovXiu[i][0]+"/"+parseInt(GmMe$1.me.rbs.iLev/5), 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			M3DFast$1.gi().DrawTextEx(MyAttFrame.iX+737, MyAttFrame.iY+129+40*i, GmMe$1.me.rbs.iGovXiu[i][1]+"/"+parseInt(MyGov.iBuildingUpgrad[GmMe$1.me.rbs.iGovXiu[i][0]]/10), 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			
    		//	DrawMode.ui3_Text1_(MyAttFrame.iX+323, MyAttFrame.iY+104+36*i,67,100,"等级",""+GmMe.me.rbs.iGovXiu[i][0]+"/"+(GmMe.me.rbs.iLev/5));
    		//	DrawMode.ui3_Text1_4word_(MyAttFrame.iX+593, MyAttFrame.iY+104+36*i,110,120,"修炼经验",""+"999／9999");
    				
    		}
    		
    		//GmPlay.xani_ui3.DrawAnima(MyAttFrame.iX+390, MyAttFrame.iY, "大框分割线",0);

    		//M3DFast.gi().DrawText_2(MyAttFrame.iX+220,MyAttFrame.iY+373, "宠物修炼", 0xff003e57, 30, 101, 1, 1, 0, -2, -2, 3, 0xff8dffff);
    		
    		GmPlay$1.xani_nui2.DrawAnimaEx(MyAttFrame.iX+135, MyAttFrame.iY+346, "标题条",0,101,1.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    		GmPlay$1.xani_nui2.DrawAnimaEx(MyAttFrame.iX+135+20,MyAttFrame.iY+346, "标题条",1,101,(720-40)/20,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    		GmPlay$1.xani_nui2.DrawAnimaEx(MyAttFrame.iX+135+720-20, MyAttFrame.iY+346, "标题条",2,101,1.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    		
    		M3DFast$1.gi().DrawText_2(MyAttFrame.iX+258,MyAttFrame.iY+373, "修炼选项", 0xffeeee00, 30, 101, 1, 1, 0, -2, -2, 3, 0xffcd3700);
    		M3DFast$1.gi().DrawText_2(MyAttFrame.iX+496,MyAttFrame.iY+373, "等级", 0xffeeee00, 30, 101, 1, 1, 0, -2, -2, 3, 0xffcd3700);
    		M3DFast$1.gi().DrawText_2(MyAttFrame.iX+737,MyAttFrame.iY+373, "修炼经验", 0xffeeee00, 30, 101, 1, 1, 0, -2, -2, 3, 0xffcd3700);
    		
    		for(i=6;i<10;i++)
    		{
    		//	DrawMode.ui3_Text1(MyAttFrame.iX+460,MyAttFrame.iY+150+40*(i-6),130,120,GmPlay.de_skill.strValue(GameData.iGovXiuId[i], 0, 5),""+GmMe.me.rbs.iGovXiu[i][0]+"/"+(GmMe.me.rbs.iLev/5));
    		
    			if(i%2==0)
    				DrawMode$1.new_bgbar(MyAttFrame.iX+135, MyAttFrame.iY+107+i*40+50, 720, 20,"内容条1");
    			else
    				DrawMode$1.new_bgbar(MyAttFrame.iX+135, MyAttFrame.iY+107+i*40+50, 720, 20,"内容条2");
    			
    			M3DFast$1.gi().DrawTextEx(MyAttFrame.iX+258, MyAttFrame.iY+129+40*i+50, GmPlay$1.de_skill.strValue(GameData$1.iGovXiuId[i], 0, 5), 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			M3DFast$1.gi().DrawTextEx(MyAttFrame.iX+496, MyAttFrame.iY+129+40*i+50, GmMe$1.me.rbs.iGovXiu[i][0]+"/"+parseInt(GmMe$1.me.rbs.iLev/5), 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			M3DFast$1.gi().DrawTextEx(MyAttFrame.iX+737, MyAttFrame.iY+129+40*i+50, GmMe$1.me.rbs.iGovXiu[i][1]+"/"+parseInt(MyGov.iBuildingUpgrad[GmMe$1.me.rbs.iGovXiu[i][0]]/10), 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			
    			
    		//	DrawMode.ui3_Text1_(MyAttFrame.iX+323, MyAttFrame.iY+104+36*i+92,67,100,"等级",""+GmMe.me.rbs.iGovXiu[i][0]+"/"+(GmMe.me.rbs.iLev/5));
    		//	DrawMode.ui3_Text1_4word_(MyAttFrame.iX+593, MyAttFrame.iY+104+36*i+92,110,120,"修炼经验",""+"999／9999");
    			
    		}
    		GmPlay$1.xani_nui2.DrawAnima(MyAttFrame.iX+55+2, MyAttFrame.iY+344, "分隔条1",0);
    		GmPlay$1.xani_nui2.DrawAnima(MyAttFrame.iX+376, MyAttFrame.iY+56, "分隔条1",1);
    		GmPlay$1.xani_nui2.DrawAnima(MyAttFrame.iX+618, MyAttFrame.iY+56, "分隔条1",1);
    		GmPlay$1.xani_nui2.DrawAnima(MyAttFrame.iX+376, MyAttFrame.iY+346, "分隔条1",1);
    		GmPlay$1.xani_nui2.DrawAnima(MyAttFrame.iX+618, MyAttFrame.iY+346, "分隔条1",1);
    	}
    	

    	Draw_4( x, y)
    	{//VIP
    		var i,j;
    		var offxx,offyy,offww,offhh;
    		
    		offxx=MyAttFrame.iX+28;
    		offyy=MyAttFrame.iY+28;
    		offww=MyAttFrame.iW-28-28;
    		offhh=MyAttFrame.iH-28-28;
    		
    		DrawMode$1.new_framein(offxx,offyy,offww,offhh);//背景
    		
    		if(this.list_vip==null)
    		{//916-28-28-30-30=800
    			this.list_vip=new UIList$1(0,4,MyAttFrame.iW-28-28-30-30,50+40*8);
    			this.list_vip.SetTitle(0, "特权", 200,false);
    			this.list_vip.SetTitle(1, "剩余天数<=30", 200,true);
    			this.list_vip.SetTitle(2, "剩余天数<=60", 200,true);
    			this.list_vip.SetTitle(3, "剩余天数>60", 200,true);
    		}
    		this.list_vip.BeginDraw(MyAttFrame.iX+28+30, MyAttFrame.iY+28+80);
    		for(i=0;i<8;i++)
    		{
    			for(j=0;j<4;j++)
    			{
    				this.list_vip.DrawUnit(j, i, this._SVIPT[i+1][j]);
    			}
    		}
    		this.list_vip.FinishDraw();
    		
    		if(GmMe$1.me.iFlag[20]>60)DrawMode$1.frame_type2("黄色透明框a25_25", MyAttFrame.iX+28+30+600, MyAttFrame.iY+28+80+50, 200, 40*8, 25, 25);
    		else if(GmMe$1.me.iFlag[20]>30)DrawMode$1.frame_type2("黄色透明框a25_25", MyAttFrame.iX+28+30+400, MyAttFrame.iY+28+80+50, 200, 40*8, 25, 25);
    		else if(GmMe$1.me.iFlag[20]>0)DrawMode$1.frame_type2("黄色透明框a25_25", MyAttFrame.iX+28+30+200, MyAttFrame.iY+28+80+50, 200, 40*8, 25, 25);
    		
    		
    		M3DFast$1.gi().DrawText_2(MyAttFrame.iX+MyAttFrame.iW/2, MyAttFrame.iY+28+40, "会员特权", 0xff003e57, 40, 101, 1, 1, 0, -2, -2, 3, 0xff8dffff);
    		
    		if(GmMe$1.me.iFlag[20]<=0)M3DFast$1.gi().DrawTextEx(MyAttFrame.iX+MyAttFrame.iW/2+80, MyAttFrame.iY+28+40+20, "（还未开通）", 0xffff0000, 25, 101, 1, 1, 0, 0, -3);
    		else  M3DFast$1.gi().DrawTextEx(MyAttFrame.iX+MyAttFrame.iW/2+80, MyAttFrame.iY+28+40+20, "（已开通：剩余"+GmMe$1.me.iFlag[20]+"天）", 0xffff0000, 25, 101, 1, 1, 0, 0, -3);
    		
    		this.btn_vip.Move(MyAttFrame.iX+MyAttFrame.iW-28-30-141, MyAttFrame.iY+MyAttFrame.iH-28-30-49, 141, 49);
    		this.btn_vip.Draw();
    		
    		
    		if(Confirm1.end(Confirm1.CONFIRM_VIP))
    		{
    			if(Confirm1.bConfirm)
    			{//同意开通VIP
    				GmProtocol$1.gi().s_SeverEvent(7, 0, 0, 0, 0);
    //				if(GmMe.me.rbs.iInGot<300)EasyMessage.easymsg.AddMessage("元宝不足");
    //				GmProtocol.gi().s_UpgradeMe(GmMe.me.rbs.iLev);
    			}
    		}
    	}
    	Draw()
    	{
    		var i;
    	/*	if(this.iPage==0)DrawMode.ui3_BaseFrame4(MyAttFrame.iX,MyAttFrame.iY,"人","物","属","性");
    		else if(this.iPage==1)DrawMode.ui3_BaseFrame4(MyAttFrame.iX,MyAttFrame.iY,"人","物","技","能");
    		else if(this.iPage==2)DrawMode.ui3_BaseFrame4(MyAttFrame.iX,MyAttFrame.iY,"辅","助","技","能");
    		else if(this.iPage==3)DrawMode.ui3_BaseFrame2(MyAttFrame.iX,MyAttFrame.iY,"修","炼");
    		else DrawMode.ui3_BaseFrame3(MyAttFrame.iX,MyAttFrame.iY,"V","I","P");*/
    //		GmPlay.xani_ui3.DrawAnima(MyAttFrame.iX, MyAttFrame.iY, "基本大框",0);
    //		GmPlay.xani_ui3.DrawAnima(MyAttFrame.iX, MyAttFrame.iY, "大标签文字_人物",this.iPage);
    		
    		DrawMode$1.new_baseframe2(MyAttFrame.iX, MyAttFrame.iY, MyAttFrame.iW, MyAttFrame.iH, "人", "物");

    		this.btn_close.Draw();
    		
    		for(i=0;i<4;i++)
    		{
    			if(this.iPage==i)
    			{
    				this.btn_page[i].bMouseIn=true;
    				this.btn_page[i].bMouseDown=true;
    			}
    			this.btn_page[i].Draw();
    		}
    		DrawMode$1.new_lableword4(MyAttFrame.iX+MyAttFrame.iW-15, MyAttFrame.iY+50+130*0-4, 40, 70,this.iPage==0,"人","物","属","性");
    		DrawMode$1.new_lableword4(MyAttFrame.iX+MyAttFrame.iW-15, MyAttFrame.iY+50+130*1-8, 40, 70,this.iPage==1,"人","物","技","能");
    		DrawMode$1.new_lableword2(MyAttFrame.iX+MyAttFrame.iW-15, MyAttFrame.iY+50+130*2+7, 40, 70,this.iPage==2,"修","炼");
    		DrawMode$1.new_lableword2(MyAttFrame.iX+MyAttFrame.iW-15, MyAttFrame.iY+50+130*3-4, 40, 70,this.iPage==3,"会","员");
    		
    		
    		switch(this.iPage)
    		{
    		case 0://base
    			this.Draw_0(MyAttFrame.iX,MyAttFrame.iY);
    			break;
    		case 1://门派／辅助/剧情技能
    			this.Draw_12(MyAttFrame.iX,MyAttFrame.iY);
    			break;
    		case 2://修炼
    			this.Draw_3(MyAttFrame.iX,MyAttFrame.iY);
    			break;
    		case 3://VIP
    //			Draw_Left(MyAttFrame.iX+10+70+10+20,MyAttFrame.iY+65+20);
    			this.Draw_4(MyAttFrame.iX,MyAttFrame.iY);
    			break;
    	//	case 4://VIP
    	//		this.Draw_4(MyAttFrame.iX,MyAttFrame.iY);
    	//		break;
    		}


    		
    		if(Confirm1.end(Confirm1.CONFIRM_UPGRADE))
    		{
    			if(Confirm1.bConfirm)
    			{//同意升级
    //				GmMe.me.rbs.iExp-=GameData.iUpgradeExp[GmMe.me.rbs.iLev];
    //				GmMe.me.rbs.iLev++;
    //				GmMe.me.CalcFightAtt();
    //				GmMe.me.rbs.iHp=GmMe.me.rbs.iMaxHp;
    //				GmMe.me.rbs.iMp=GmMe.me.rbs.iMaxMp;
    				GmProtocol$1.gi().s_UpgradeMe(GmMe$1.me.rbs.iLev);
    			}
    		}
    		if(AddPoint.end(AddPoint.ADDPOINT_USER))
    		{
    			if(AddPoint.bConfirm)
    			{
    				for(i=0;i<5;i++)GmMe$1.me.rbs.iBaseAtt[i]+=AddPoint.iModifys[i];
    				GmMe$1.me.CalcFightAtt();
    				GmProtocol$1.gi().s_AddPoint(AddPoint.iModifys[0],AddPoint.iModifys[1],AddPoint.iModifys[2],AddPoint.iModifys[3],AddPoint.iModifys[4]);
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<4;i++)
    		{
    			if(this.btn_page[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_page[i].bCheck())
    				{
    //					if(i==4)EasyMessage.easymsg.AddMessage("功能暂未开放");
    //					else 
    						this.iPage=i;
    				}
    			}
    		}
    		if(this.btn_mpjn.ProcTouch(msg, x, y))
    		{
    			if(this.btn_mpjn.bCheck())
    			{
    				this.iPage_jn = 1;
    			}
    		}
    		if(this.btn_fzjn.ProcTouch(msg, x, y))
    		{
    			if(this.btn_fzjn.bCheck())
    			{
    				this.iPage_jn = 2;
    			}
    		}
    /*		if(this.btn_jqjn.ProcTouch(msg, x, y))
    		{
    			if(this.btn_jqjn.bCheck())
    			{
    				this.iPage_jn = 3;
    			}
    		}*/

    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())XStat$1.gi().PopStat(1);
    			return true;
    		}
    		switch(this.iPage)
    		{
    		case 0:
    			if(this.btn_upgrade.ProcTouch(msg, x, y))
    			{
    				if(this.btn_upgrade.bCheck())
    				{
    					if(GmMe$1.me.rbs.iLev>=80)EasyMessage.easymsg.AddMessage("等级已到达上限");
    					else if(GmMe$1.me.rbs.iLev>=10 && GmMe$1.me.rbs.iSchoolId<=0)FrameMessage.fm.Open("少侠先去找个靠谱的门派拜师后再升级吧");
    					else if(GmMe$1.me.rbs.iLev>=70 && (GmMe$1.me.iFlag[39]&4)==0)FrameMessage.fm.Open("你的等级上限还未突破70，请先完成修仙灵丹任务");
    					else if(GmMe$1.me.rbs.iExp<GameData$1.iUpgradeExp[GmMe$1.me.rbs.iLev])EasyMessage.easymsg.AddMessage("经验不足，先去练练吧");
    					else
    					{//升级确认框
    						if(GmMe$1.me.rbs.iLev>=10 && GmMe$1.me.rbs.iLev<=25)Confirm1.start(Confirm1.CONFIRM_UPGRADE,"10~25级之间可以拜师#e是否确认升级？");
    						else Confirm1.start(Confirm1.CONFIRM_UPGRADE,"是否确认升级？");
    					}
    				}
    				return true;
    			}
    			if(this.btn_addpoint.ProcTouch(msg, x, y))
    			{
    				if(this.btn_addpoint.bCheck())
    				{//加点界面
    //					if(GmMe.me.rbs.nut<=0)EasyMessage.easymsg.AddMessage("当前没有剩余点数可以加");
    //					else
    //					{
    //						AddPoint.start(AddPoint.ADDPOINT_USER,GmMe.me.rbs.tz, GmMe.me.rbs.fl, GmMe.me.rbs.ll, GmMe.me.rbs.nl, GmMe.me.rbs.mj, GmMe.me.rbs.nut);
    //					}
    					XmsEngine.pxe.RunXms("人物加点");//TestRun.Run(100000, GmPlay.pxe.FindMain("工作项目测试"),new TestRun());
    				}
    				return true;
    			}
    			if(this.btn_title.ProcTouch(msg, x, y))
    			{
    				if(this.btn_title.bCheck())
    				{//打开称谓选择
    					GmProtocol$1.gi().s_proctitle(100, "");
    					XStat$1.gi().PushStat(XStat$1.GS_SETTITLE);
    				}
    				return false;
    			}
    			break;
    		case 1:
    			switch(this.iPage_jn)
    			{
    			case 1://门派技能
    				for(i=0;i<6;i++)
    				{
    					if(this.btn_mainskill[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn_mainskill[i].bCheck())
    						{
    							this.iMainSkillPoint=i;
    						}
    					}
    				}
    				break;
    			case 2://辅助技能
    				for(i=0;i<10;i++)
    				{
    					if(this.btn_govskill[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn_govskill[i].bCheck())
    						{
    							this.iGovSkillPoint=i;
    						}
    					}
    				}
    				break;
    			case 3://剧情技能
    				break;
    			}
    			break;
    		case 2://修炼
    			
    			break;
    		case 3://vip
    			if(this.btn_vip.ProcTouch(msg, x, y))
    			{
    				if(this.btn_vip.bCheck())
    				{//打开开通确认框
    					Confirm1.start(Confirm1.CONFIRM_VIP,"是否确定花费300元宝增加30天会员期限？");
    				}
    				return true;
    			}
    			break;
    		}

    		if(XDefine$1.bOnRect(x, y, MyAttFrame.iX, MyAttFrame.iY, MyAttFrame.iW, MyAttFrame.iH))return true;
    		return false;
    	}
    }
    MyAttFrame.iX,MyAttFrame.iY,MyAttFrame.iW,MyAttFrame.iH;
    	
    MyAttFrame.Open=function( page)
    {
    	var maf=XStat$1.gi().PushStat(XStat$1.GS_MYATTFRAME);
    	maf.iPage=page;
    	return maf;
    };

     MyAttFrame.wordframe=function( x, y, w)
    {
    	GmPlay$1.xani_nui2.DrawAnimaEx(x,y, "可变长文字框",0,101,1.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    	GmPlay$1.xani_nui2.DrawAnimaEx(x+15,y, "可变长文字框",1,101,1.0*(w-30)/20,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    	GmPlay$1.xani_nui2.DrawAnimaEx(x+w-20,y, "可变长文字框",2,101,1.0,1.0,0,0,0);//MyAttFrame.iX+50, MyAttFrame.iY+65+i*45, 128, 32
    };

    MyAttFrame.Skill_Detail=function( sid, x, y, lev)
    {//技能详细描述
    	var i;
    	var w,h;
    	w=300;

    	FormatString.gi().FormatEx(GmPlay$1.de_skill.strValue(sid, 0, 3), w-30, 24, 0, 0, 28);
    	h=20+80+10+FormatString.gi().iH+10+20;
    	if(h<120)h=120;
    	x-=w;
    	y-=h-85;
    	if(x<0)x=x+w+85;
    	DrawMode$1.new_framewatch(x, y, w, h);
    	GmPlay$1.xani_nicon.DrawAnima_aa(x+20, y+20, GmPlay$1.de_skill.strValue(sid, 0, 5),0);
    	M3DFast$1.gi().DrawTextEx(x+20+80+10, y+20, GmPlay$1.de_skill.strValue(sid, 0, 6), 0xffffff00, 30, 101, 1, 1, 0, 0, 0);
    	
    	i=GmPlay$1.de_skill.intValue(sid, 0, 7);
    	if(i==1)M3DFast$1.gi().DrawTextEx(x+20+80+10, y+20+32, "战斗中使用", 0xffffff00, 22, 101, 1, 1, 0, 0, 0);
    	else if(i==0)M3DFast$1.gi().DrawTextEx(x+20+80+10, y+20+32, "漫游中使用", 0xffffff00, 22, 101, 1, 1, 0, 0, 0);
    	else if(i==3)M3DFast$1.gi().DrawTextEx(x+20+80+10, y+20+32, "被动技能", 0xffffff00, 22, 101, 1, 1, 0, 0, 0);
    	
    	if(lev>=0)M3DFast$1.gi().DrawTextEx(x+20+80+10, y+20+56, "等级"+lev, 0xffffff00, 22, 101, 1, 1, 0, 0, 0);
    	FormatString.gi().Draw(x+20, y+20+80+10);
    };

    class XButtonEx1
    {
        constructor(ani)
        {
            this.pani=ani;
    		this.pm3f=M3DFast$1.gi();
    		this.bSingleButton=false;
    		this.bCheckByRect=false;
    		
    		this.ReleaseButton();
    		this.sName="";
    		this.iNameColor=0xffffffff;
    		this.Move(0,0,100,100);
    //		bHide=false;
    		this.iFingerLocker=-1;
    		this.iAnimaStat=0;
    		this.fScale=1.0;
    		this.iNameSize=30;
        }
        InitButton( an)
    	{
    		this.pani.InitAnimaWithName(an,GmPlay$1.aaa);
    		GmPlay$1.aaa.iFrame=0;this.SetAnimaNormal(GmPlay$1.aaa,false);
    		GmPlay$1.aaa.iFrame=1;this.SetAnimaMouseon(GmPlay$1.aaa,false);
    		this.SetAnimaMousedown(GmPlay$1.aaa,false);
    		GmPlay$1.aaa.iFrame=0;this.SetAnimaDisable(GmPlay$1.aaa,false);
        }
        ReleaseButton()
    	{
    //		this.aa_normal_to_on=null;
    //		iStat_normal_to_on=0;

    		this.aa_normal=null;
    		this.act_normal=false;
    		this.aa_mouseon=null;
    		this.act_mouseon=false;
    		this.aa_mousedown=null;
    		this.act_mousedown=false;

    		this.bMouseIn=false;
    		this.bMouseDown=false;
    		this.bVisible=true;
    		this.bDisable=false;

    		this.iX=0;
    		this.iY=0;
    	}
    	SetAnimaNormal( aa, bact)
    	{
    		if(this.aa_normal==null)this.aa_normal=new AnimaAction();
    		this.aa_normal.copyfrom(aa);
    		this.act_normal=bact;
    	}
    	SetAnimaMouseon( aa, bact)
    	{
    		if(this.aa_mouseon==null)this.aa_mouseon=new AnimaAction();
    		this.aa_mouseon.copyfrom(aa);
    		this.act_mouseon=bact;
    	}
    	SetAnimaMousedown( aa, bact)
    	{
    		if(this.aa_mousedown==null)this.aa_mousedown=new AnimaAction();
    		this.aa_mousedown.copyfrom(aa);
    		this.act_mousedown=bact;
    	}
    	SetAnimaDisable( aa, bact)
    	{
    		if(this.aa_disable==null)this.aa_disable=new AnimaAction();
    		this.aa_disable.copyfrom(aa);
    		this.act_disable=bact;
    	}
    	Move( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    		
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.iFingerLocker!=-1 && this.iFingerLocker!=TouchManager.iFingerId)return false;
    		
    		if(!this.bVisible)return false;
    		if(this.bDisable)return false;
    		
    		if(msg==3)this.iFingerLocker=-1;
    		if(!this.bMoveIn(x,y))
    		{
    			this.iFingerLocker=-1;
    			this.bMouseDown=false;
    			if(this.iAnimaStat==0 && this.fScale!=1.0)this.iAnimaStat=11;
    			return false;
    		}
    		switch(msg)
    		{
    		case 1://down
    			this.iFingerLocker=TouchManager.iFingerId;
    			this.bMouseDown=true;
    			this.iAnimaStat=1;
    			break;
    		case 2://move
    			break;
    		case 3://up
    			if(this.bMouseDown)
    			{
    				this.bMouseDown=false;
    				this.bChecked=true;
    				this.iAnimaStat=11;
    			}
    			this.iFingerLocker=-1;
    			break;
    		}
    		return true;
    	}
    	bCheck()
    	{
    		if(this.bChecked)
    		{
    			this.bChecked=false;
    			return true;
    		}
    		return false;
    	}
    	bMoveIn( x, y)
    	{
    		this.bMouseIn=false;
    		if(this.bSingleButton || this.bCheckByRect)
    		{
    			if(x>=this.iX && x<=this.iX+this.iW && y>=this.iY && y<=this.iY+this.iH)this.bMouseIn=true;
    			else this.bMouseIn=false;
    		}
    		else
    		{
    //			if(x>=this.iX && x<=this.iX+this.iW && y>=this.iY && y<=this.iY+this.iH)this.bMouseIn=true;
    			if(this.pani.bInAnima(this.aa_normal,this.iX,this.iY,x,y))this.bMouseIn=true;
    			else this.bMouseIn=false;
    		}
    		return this.bMouseIn;
    	}
    	Draw()
    	{
    		while(PublicInterface.gi().bInBound(this.iX,this.iY,this.iW,this.iH))this.iX--;
    		switch(this.iAnimaStat)
    		{
    		case 0://什么都不做
    			break;
    		case 1://变大
    			this.fScale+=0.2;
    			if(this.fScale>1.3)this.iAnimaStat=2;
    			break;
    		case 2://缩小一点点
    			this.fScale-=0.2;
    			this.iAnimaStat=0;
    			break;
    		case 11://缩小
    			this.fScale-=0.2;
    			if(this.fScale<1)this.iAnimaStat=12;
    			break;
    		case 12://变大一点点
    			this.fScale=1.0;
    			this.iAnimaStat=0;
    			break;
    		}
    		if(!this.bVisible)return;
    		if(this.bDisable)
    		{
    			if(this.bSingleButton)this.pm3f.FillRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0xC0ffffff);
    			else this.pani.DrawAnima_aa(this.iX, this.iY, this.aa_disable);
    		}
    		else
    		{
    //			this.pani.DrawAnima_aa(this.iX, this.iY, this.aa_normal);
    			if(this.bMouseDown)this.pani.DrawAnimaEx((this.iX-((this.fScale-1)*this.iW/2)), (this.iY-((this.fScale-1)*this.iH/2)), this.aa_mousedown, 101, this.fScale, this.fScale, 0, 0, 0);
    			else this.pani.DrawAnimaEx((this.iX-((this.fScale-1)*this.iW/2)), (this.iY-((this.fScale-1)*this.iH/2)), this.aa_normal, 101, this.fScale, this.fScale, 0, 0, 0);
    		}
    /*		else if(this.bMouseIn)
    		{
    			if(this.bMouseDown)
    			{
    				if(this.bSingleButton)
    				{
    					this.pm3f.FillRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0x80ffffff);
    					this.pm3f.DrawRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0xffffffff);
    				}
    				else this.pani.DrawAnima_aa(this.iX, this.iY, this.aa_mousedown);
    			}
    			else
    			{
    				if(this.bSingleButton)
    				{
    					this.pm3f.FillRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0x40ffffff);
    					this.pm3f.DrawRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0xffffffff);
    				}
    				else this.pani.DrawAnima_aa(this.iX, this.iY, this.aa_normal);
    			}
    		}
    		else
    		{
    			if(this.bSingleButton)this.pm3f.DrawRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0xffffffff);
    			else this.pani.DrawAnima_aa(this.iX, this.iY,this.aa_normal);
    		}*/

    		if(this.bSingleButton || this.sName.length>0)
    		{
    			var c=this.iNameColor;
    			if(this.bDisable)c=0xff808080;
    			this.pm3f.DrawText_2(this.iX+this.iW/2,this.iY+this.iH/2,this.sName,0xff60e0e0,this.iNameSize,101,this.fScale,this.fScale,0,-2,-2,2,0xff000000);
    		}
    //		GmPlay.sop(this.sName+","+this.iX+","+this.iY);
    	}
    }

    class Goods
    {/*
    	public int this.iGid;//物品ID
    	public int this.iTid;//物品类型ID
    	public int this.iOid;//容器ID
    	public int this.iPos;
    	public int this.iCount;
    	public int this.iAtts;//物品附加属性
    	public AnimaAction this.aa;
    	
    	public int this.iScore;
    	*/
    	constructor()
    	{
    		var i;
    		this.iGid=-1;
    		this.iAtts=new Int32Array(8);
    		this.aa=new AnimaAction();
    		for(i=0;i<8;i++)this.iAtts[i]=0;
    	}
    	copyfrom( g)
    	{
    		var i;
    		this.iGid=g.iGid;
    		this.iTid=g.iTid;
    		this.iCount=g.iCount;
    		for(i=0;i<8;i++)this.iAtts[i]=g.iAtts[i];
    		this.aa.copyfrom(g.aa);
    	}
    	SetAtt( gid, tid, count, a0, a1, a2, a3, a4, a5, a6, a7)
    	{
    		this.iGid=gid;
    		this.iTid=tid;
    		this.iCount=count;
    		this.iAtts[0]=a0;
    		this.iAtts[1]=a1;
    		this.iAtts[2]=a2;
    		this.iAtts[3]=a3;
    		this.iAtts[4]=a4;
    		this.iAtts[5]=a5;
    		this.iAtts[6]=a6;
    		this.iAtts[7]=a7;
    		
    		GmPlay$1.xani_ngoods.InitAnimaWithName(GmPlay$1.de_goods.strValue(tid, -1, 10), this.aa);
    	}

    	CalcSetScore()
    	{
    		var place=GmPlay$1.de_goods.intValue(this.iTid, 0, 16);//装备部位
    		if (place >= 0)
    		{//是装备
    			if (this.iAtts[1] <= 0)
    			{//无属性，不参与评分
    				this.iScore = 0;
    				return 0;
    			}
    			var i;
    			var b,c=0,d;
    			var a = 0;
    			switch (place)
    			{
    			case 0://帽子
    				a = 1.2*(GmPlay$1.de_goods.intValue(this.iTid, 0, 21) + this.iAtts[0]/10000)+
    					0.5*(GmPlay$1.de_goods.intValue(this.iTid, 0, 22) + this.iAtts[0] % 10000);
    				break;
    			case 1://项链
    				a = 2.0*(GmPlay$1.de_goods.intValue(this.iTid, 0, 23) + this.iAtts[0]);
    				break;
    			case 2://武器
    				a = 1.5*(GmPlay$1.de_goods.intValue(this.iTid, 0, 3)+this.iAtts[0]);
    				break;
    			case 3://衣服
    				a = 1.2*(GmPlay$1.de_goods.intValue(this.iTid, 0, 21) + this.iAtts[0]);
    				break;
    			case 4://腰带
    				a = 1.2*(GmPlay$1.de_goods.intValue(this.iTid, 0, 21) + this.iAtts[0] / 10000) +
    					1.0*(GmPlay$1.de_goods.intValue(this.iTid, 0, 24) + this.iAtts[0] % 10000);
    				break;
    			case 5://鞋子
    				a = 1.2*(GmPlay$1.de_goods.intValue(this.iTid, 0, 21) + this.iAtts[0] / 10000) +
    					1.5*(GmPlay$1.de_goods.intValue(this.iTid, 0, 25) + this.iAtts[0] % 10000);
    				break;
    			}
    			a += ((this.iAtts[1] / 10000)%100 + (this.iAtts[1] % 10000)%100) * 2;
    			b= GmPlay$1.de_goods.intValue(this.iTid, 0, 9);//装备等级评分
    			i = (this.iAtts[4] >> 20) & 0x3ff;
    			if (i>0)
    			{
    				c += GmPlay$1.de_skill.intValue(i, 0, 38);//特技评分
    				a = a*1.05;
    			}
    			i = (this.iAtts[4] >> 10) & 0x3ff;
    			if (i>0)
    			{
    				c += GmPlay$1.de_skill.intValue(i, 0, 38);//特技评分
    				a = a*1.05;
    			}
    			i = this.iAtts[4] & 0x3ff;
    			if (i>0)
    			{
    				c += GmPlay$1.de_skill.intValue(i, 0, 38);//特技评分
    				a = a*1.05;
    			}
    			d = ((this.iAtts[2] / 10000) % 100 + (this.iAtts[2] % 10000) % 100) * 15;//宝石评分

    			this.iScore =  parseInt(a + b + c + d);
    //			GmPlay.sop(""+this.iGid+"==="+a+"+"+b+"+"+c+"+"+d);
    //			2240627
    			return this.iScore;
    		}
    		return 0;
    	}
    }

    Goods.GetSetNJ=function( lev)
    {
    	var i=100+lev*5;
    	return i*100000+i*20;
    };

    class Pets
    {/*
    	public int this.iPid;
    	public int this.iTid;//type id
    	public int this.iLife;//寿命
    	public int this.iAddAtt;
    	public int this.iBaobao;
    	public int this.iFlag;
    	
    	public int this.iHp,this.iMaxHp;
    	public int this.iMp,this.iMaxMp;
    	public int this.iExp;
    	public int this.iLev;
    	public Int32Array this.iBaseAtt=new Int32Array(5);//
    	public int this.nut;//潜力点
    	public int this.tz,this.fl,this.ll,this.nl,this.mj;
    	public int this.iSpirit,this.iAttack,this.iDefence,this.iSpeed;
    	public Int32Array this.zz=new Int32Array(5);////资质
    	public int this.cz;//成长
    	public Int32Array this.jn=new Int32Array(12);//
    	public String this.sName;
    	public int this.iStar;
    	public int this.iSkillBlock;//技能格子数量，8/9
    	
    	public AnimaAction this.aa_body;*/
    	//技能
    	bHaveSkill( sid)
    	{
    		for(var i=0;i<12;i++)
    		{
    			if(this.jn[i]==sid)return true;
    		}
    		return false;
    	}
    	constructor()
    	{
    		this.iPid=-1;
    		this.sName="";
    		this.aa_body=new AnimaAction();

    		this.iBaseAtt=new Int32Array(5);
    		this.zz=new Int32Array(5);//资质
    		this.jn=new Int32Array(12);
    	}
    	copyfrom( p)
    	{
    		var i;
    		this.iPid=p.iPid;
    		this.iTid=p.iTid;
    		this.iLife=p.iLife;
    		this.iAddAtt=p.iAddAtt;
    		this.iBaobao=p.iBaobao;
    		this.iFlag=p.iFlag;
    		
    		this.iHp=p.iHp;
    		this.iMp=p.iMp;
    		this.iMaxHp=p.iMaxHp;
    		this.iMaxMp=p.iMaxMp;
    		this.iExp=p.iExp;
    		this.iLev=p.iLev;
    		for(i=0;i<5;i++)this.iBaseAtt[i]=p.iBaseAtt[i];
    		this.nut=p.nut;
    		this.tz=p.tz;
    		this.fl=p.fl;
    		this.ll=p.ll;
    		this.nl=p.nl;
    		this.mj=p.mj;
    		this.iSpirit=p.iSpirit;
    		this.iAttack=p.iAttack;
    		this.iDefence=p.iDefence;
    		this.iSpeed=p.iSpeed;
    		for(i=0;i<5;i++)this.zz[i]=p.zz[i];
    		this.cz=p.cz;
    		for(i=0;i<12;i++)this.jn[i]=p.jn[i];
    		this.sName=p.sName;
    		this.iStar=p.iStar;
    		
    		this.aa_body.copyfrom(p.aa_body);
    	}
    	CalcPetScore()
    	{
    		var i;

    		var a=GmPlay$1.de_pet.intValue(this.iTid, 0, 2);//携带等级评分
    		var b = ((this.zz[0] + this.zz[1]) / 10 + (this.zz[2] + this.zz[3] + this.zz[4]) / 6)*this.cz / 1000;//基础资质成长评分
    		var c = this.iStar * 100000 / (2000 - this.cz);//
    		var d = 1;
    		var e = 0;
    		for (i = 0; i < 8; i++)
    		{
    			if (this.jn[i] > 0)
    			{
    				d = d*1.05;
    				e += GmPlay$1.de_skill.intValue(this.jn[i], 0, 37);
    			}
    		}
    		i =  parseInt(d*(b + e) + a + c);
    		if(i!= this.iScore)
    		{
    			this.iScore = i;
    		}
    		return this.iScore;
    	}
    }

    class MyPets$1 {
    	
    	
    	constructor()
    	{
    		var i;
    		
    		this.pm3f=M3DFast$1.xm3f;

    		this.pets=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.pets[i]=new Pets();
    		}

    		 this.RETPET_HPMPLIFE=1;
    		 this.RETPET_ATT=2;
    		 this.RETPET_SKILL=4;
    		 this.RETPET_ZZCZ=8;
    		 this.RETPET_EXPLEV=16;

    		 	//#define RETBASE_LEV 32
    	//#define RETBASE_CZ 64
    	 this.RETPET_OTHER=128;
    	}

    	FindPet( pid)
    	{
    		var i;
    		if(pid<=0)return null;
    		for(i=0;i<8;i++)
    		{
    			if(this.pets[i].iPid>0 && pid==this.pets[i].iPid)return this.pets[i];
    		}
    		return null;
    	}
    	GetUseingPet()
    	{
    		var i;
    		for(i=0;i<8;i++)
    		{
    			if(this.pets[i].iPid!=-1 && GmMe$1.me.iFightPid==this.pets[i].iPid)return this.pets[i];
    		}
    		return null;
    	}
    	

    	RemovePet( pid)
    	{
    		var i;
    		for(i=0;i<8;i++)
    		{
    			if(this.pets[i].iPid==pid)break;
    		}
    		if(i>=8)return;
    		var tmp=this.pets[i];
    		for(;i<7;i++)
    		{
    			this.pets[i]=this.pets[i+1];
    		}
    		this.pets[7]=tmp;
    		this.pets[7].iPid=-1;
    		this.iPetCount=0;
    		for(i=0;i<8;i++)
    		{
    			if(this.pets[i].iPid>0)this.iPetCount++;
    		}
    	}
    //	RemovePet( pid)
    //	{
    //		var i;
    //		for(i=0;i<8;i++)
    //		{
    //			if(this.pets[i].iPid==pid)break;
    //		}
    //		if(i>=8)return;
    //		for(;i<7;i++)
    //		{
    //			this.pets[i].copyfrom(this.pets[i+1]);
    //		}
    //		this.pets[7].iPid=-1;
    //		this.iPetCount=0;
    //		for(i=0;i<8;i++)
    //		{
    //			if(this.pets[i].iPid>0)this.iPetCount++;
    //		}
    //	}
    	ProcTouch( msg, x, y)
    	{
    		return false;
    	}


    	GetPetBaseAtt( pls)
    	{//更新宠物属性
    		var i,flag;
    		var pid=pls.GetNextInt();
    		for(i=0;i<8;i++)
    		{
    			if(this.pets[i].iPid==pid)break;
    		}
    		if(i>=8)return;
    		var ppet=this.pets[i];
    		flag=pls.GetNextByte();
    		if((flag&this.RETPET_HPMPLIFE)!=0)
    		{
    			ppet.iHp=pls.GetNextShort();
    			ppet.iMaxHp=pls.GetNextShort();
    			ppet.iMp=pls.GetNextShort();
    			ppet.iMaxMp=pls.GetNextShort();
    			ppet.iLife=pls.GetNextShort();
    		}
    		if((flag&this.RETPET_ATT)!=0)
    		{
    			for(i=0;i<5;i++)ppet.iBaseAtt[i]=pls.GetNextShort();
    		}
    		if((flag&this.RETPET_SKILL)!=0)
    		{
    			for(i=0;i<8;i++)ppet.jn[i]=pls.GetNextShort();
    		}
    		if((flag&this.RETPET_ZZCZ)!=0)
    		{
    			for(i=0;i<5;i++)ppet.zz[i]=pls.GetNextShort();
    			ppet.cz=pls.GetNextShort();
    		}
    		if((flag&this.RETPET_EXPLEV)!=0)
    		{
    			ppet.iExp=pls.GetNextInt();
    			ppet.iLev=pls.GetNextShort();
    		}
    		MyPets$1.CalcFightAtt(ppet);
    	}
    	UpdateOnePet( pls)
    	{
    		var i,j,k;
    		var rt=pls.GetNextByte();//request type
    		var pid;
    		if(rt==0)
    		{//删除一个宠物
    			pid=pls.GetNextInt();
    			this.RemovePet(pid);
    		}
    		else if(rt==1)//更新或添加自己的宠物
    		{
    			pid=pls.GetNextInt();
    			for(i=0;i<8;i++)
    			{
    				if(this.pets[i].iPid>0 && this.pets[i].iPid==pid)break;
    			}
    			if(i>=8)
    			{//没找到对应已有的宠物，不是更新，是添加
    				for(i=0;i<8;i++)
    				{
    					if(this.pets[i].iPid<=0)break;
    				}
    			}
    			j=i;
    			this.pets[j].iPid=pid;
    			this.pets[j].iTid=pls.GetNextShort();
    			this.pets[j].sName=pls.GetNextString();
    			this.pets[j].iLev=pls.GetNextShort();
    			this.pets[j].iExp=pls.GetNextInt();
    			this.pets[j].iHp=pls.GetNextShort();
    			this.pets[j].iMp=pls.GetNextShort();
    			this.pets[j].iLife=pls.GetNextShort();
    			for(k=0;k<5;k++)this.pets[j].iBaseAtt[k]=pls.GetNextShort();
    			for(k=0;k<5;k++)this.pets[j].zz[k]=pls.GetNextShort();
    			this.pets[j].cz=pls.GetNextShort();
    			for(k=0;k<12;k++)this.pets[j].jn[k]=pls.GetNextShort();
    			this.pets[j].iAddAtt=pls.GetNextByte();
    			this.pets[j].iBaobao=pls.GetNextByte();
    			this.pets[j].iFlag=pls.GetNextShort();
    			if((this.pets[j].iBaobao&2)==0)GmPlay$1.xani_pets[this.pets[j].iTid].InitAnimaWithName("站立_右下", this.pets[j].aa_body);
    			else GmPlay$1.xani_pets[this.pets[j].iTid].InitAnimaWithName("变异_站立_右下", this.pets[j].aa_body);
    			MyPets$1.CalcFightAtt(this.pets[j]);
    			
    			if(XStat$1.gi().iXStat==XStat$1.GS_PETSFRAME)
    			{
    				var ppf=XStat$1.gi().LastStat(0);
    				ppf.iPetPoint=j;
    			}
    		}
    		this.iPetCount=0;
    		for(i=0;i<8;i++)
    		{
    			if(this.pets[i].iPid>0)this.iPetCount++;
    		}
    	}
    	GetPets( pls)
    	{
    		var i,j,k;
    		var pid,oid;
    		for(i=0;i<8;i++)this.pets[i].iPid=-1;
    		oid=pls.GetNextByte();
    		if(oid!=2)
    		{
    			return;
    		}
    		j=0;
    		while(true)
    		{
    			pid=pls.GetNextInt();
    			if(pid==-1)break;
    			this.pets[j].iPid=pid;
    			this.pets[j].iTid=pls.GetNextShort();
    			this.pets[j].sName=pls.GetNextString();
    			this.pets[j].iLev=pls.GetNextShort();
    			this.pets[j].iExp=pls.GetNextInt();
    			this.pets[j].iHp=pls.GetNextShort();
    			this.pets[j].iMp=pls.GetNextShort();
    			this.pets[j].iLife=pls.GetNextShort();
    			for(k=0;k<5;k++)this.pets[j].iBaseAtt[k]=pls.GetNextShort();
    			for(k=0;k<5;k++)this.pets[j].zz[k]=pls.GetNextShort();
    			this.pets[j].cz=pls.GetNextShort();
    			for(k=0;k<12;k++)this.pets[j].jn[k]=pls.GetNextShort();
    			this.pets[j].iAddAtt=pls.GetNextByte();
    			this.pets[j].iBaobao=pls.GetNextByte();
    			this.pets[j].iFlag=pls.GetNextShort();
    			
    			if((this.pets[j].iBaobao&2)==0)GmPlay$1.xani_pets[this.pets[j].iTid].InitAnimaWithName("站立_右下", this.pets[j].aa_body);
    			else GmPlay$1.xani_pets[this.pets[j].iTid].InitAnimaWithName("变异_站立_右下", this.pets[j].aa_body);

    			MyPets$1.CalcFightAtt(this.pets[j]);
    			j++;
    		}
    		this.iPetCount=j;
    	}
    	
    	
    	CalcAll()
    	{
    		var i;
    		for(i=0;i<8;i++)
    		{
    			if(this.pets[i].iPid!=-1)MyPets$1.CalcFightAtt(this.pets[i]);
    		}
    	}
    }

    MyPets$1.mp=new MyPets$1();
    	MyPets$1.bHavePetCount=function()
    	{
    		var i,j=0;
    		for(i=0;i<8;i++)
    		{
    			if(MyPets$1.mp.pets[i].iPid!=-1)j++;
    		}
    		return j;
    	};
    	MyPets$1.bHavePet=function( ptype, bybb)
    	{
    		var i;
    		for(i=0;i<8;i++)
    		{
    			if(MyPets$1.mp.pets[i].iPid!=-1 &&MyPets$1.mp.pets[i].iTid==ptype)
    			{
    				if((bybb&1)!=0)
    				{//要求宝宝
    					if((MyPets$1.mp.pets[i].iBaobao&1)==0)continue;//不是宝宝
    				}
    				if((bybb&2)!=0)
    				{//要求变异
    					if((MyPets$1.mp.pets[i].iBaobao&2)==0)continue;//不是变异
    				}
    				return true;
    			}
    		}
    		return false;
    	};
    	MyPets$1.swapcz=function( cz)
    	{//成长转换
    		var s=""+parseInt(cz/1000)+".";
    		if(parseInt(cz/100)%10==0)s+="0";
    		else s+=parseInt(cz/100)%10;
    		
    		if(parseInt(cz/10)%10==0)s+="0";
    		else s+=parseInt(cz/10)%10;
    		
    		if(cz%10==0)s+="";
    		else s+=cz%10;
    		return s;
    	};

    	/*
    	 * ①、伤害＝等级＊攻资＊（14＋10＊成长）／7500＋成长＊总力量点数

    　　②、防御＝等级＊防资＊（9.4＋19／3＊成长）／7500＋成长＊总防御点数＊4／3

    　　③、气血＝等级＊体资／1000＋成长＊体质点数＊6

    　　④、速度＝速资＊总速度点数／1000

    　　⑤、灵力=等级*(资质+1640)(成长率+1)/7500+体力点数*0.3+法力点数*0.7+力量点数*0.4+耐力点数*0.2
    	 * */
    	MyPets$1.CalcFightAtt=function( ppet)
    	{//计算Maxhp,attack,多余属性
    		var i,j;
    		var ismine=(MyPets$1.mp.FindPet(ppet.iPid)==ppet);//是否是自己的宠物，如果是，影响属性
    		var attaddex=0;
    		if(ismine)
    		{
    			if(GmMe$1.me.iFlagExt[10]>0)attaddex=((GmMe$1.me.iFlagExt[6]>>18)&0x1f);
    		}
    		//星级计算
    		if((ppet.iBaobao&4)==0)ppet.iStar=0;
    		else if((ppet.iBaobao&8)==0)ppet.iStar=1;
    		else if((ppet.iBaobao&16)==0)ppet.iStar=2;
    		else if((ppet.iBaobao&32)==0)ppet.iStar=3;
    		else if((ppet.iBaobao&64)==0)ppet.iStar=4;
    		else ppet.iStar=5;
    		
    		if((ppet.iBaobao&128)==0)ppet.iSkillBlock=8;
    		else ppet.iSkillBlock=9;
    		
    		i=ppet.iLev*5+ppet.iAddAtt+ppet.iStar*25;//当前可能的属性上限
    		j=ppet.iBaseAtt[0]+ppet.iBaseAtt[1]+ppet.iBaseAtt[2]+ppet.iBaseAtt[3]+ppet.iBaseAtt[4];//当前已加属性
    		ppet.nut=i-j;//剩余属性点//潜力点
    		if((ppet.iBaobao&1)!=0)
    		{//宝宝多50属性
    			ppet.nut+=50;
    //			for(i=0;i<100;i++)GmPlay.sop("BAOBAOBAOBAOBAOBAOBAOBAO"+ppet.nut);
    		}
    		//显示属性点是  baseatt+lev+0级默认点

    		//iRace种族0人   1魔   2仙
    		//0体   1魔   2力   3耐   4敏
    		var tz=10+ppet.iBaseAtt[0]+ppet.iLev+ppet.iStar*5+attaddex;//0级基础+所加点+等级
    		var fl=10+ppet.iBaseAtt[1]+ppet.iLev+ppet.iStar*5+attaddex;
    		var ll=10+ppet.iBaseAtt[2]+ppet.iLev+ppet.iStar*5+attaddex;
    		var nl=10+ppet.iBaseAtt[3]+ppet.iLev+ppet.iStar*5+attaddex;
    		var mj=10+ppet.iBaseAtt[4]+ppet.iLev+ppet.iStar*5+attaddex;
    		var cz=ppet.cz;

    		//    1灵   2伤   3防   4速
    		ppet.iMaxHp=ppet.iLev*ppet.zz[0]+tz*cz*6;
    		ppet.iMaxMp=ppet.iLev*ppet.zz[1]+fl*cz*6;
    		ppet.iSpirit=ppet.iLev*(ppet.zz[1]+1640)*(cz+1000)/7500+tz*300+fl*700+ll*400+nl*200;
    		ppet.iSpeed=ppet.zz[4]*mj;
    		ppet.iAttack=ppet.iLev*ppet.zz[2]*(1400+ppet.cz)/750+ppet.cz*ll;
    		ppet.iDefence=ppet.iLev*ppet.zz[3]*(1900/3+ppet.cz)/750+ppet.cz*nl*4/3;
    		
    		if(ppet.bHaveSkill(282))ppet.iMaxHp+=ppet.iLev*3600;
    		else if(ppet.bHaveSkill(281))ppet.iMaxHp+=ppet.iLev*2400;
    		else if(ppet.bHaveSkill(280))ppet.iMaxHp+=ppet.iLev*1200;
    		
    		if(ppet.bHaveSkill(212))ppet.iDefence+=ppet.iLev*1800;
    		else if(ppet.bHaveSkill(211))ppet.iDefence+=ppet.iLev*1200;
    		else if(ppet.bHaveSkill(210))ppet.iDefence+=ppet.iLev*600;
    		
    		if(ppet.bHaveSkill(215))ppet.iAttack+=ppet.iLev*1500;
    		else if(ppet.bHaveSkill(214))ppet.iAttack+=ppet.iLev*1000;
    		else if(ppet.bHaveSkill(213))ppet.iAttack+=ppet.iLev*500;

    		ppet.tz=tz;
    		ppet.fl=fl;
    		ppet.ll=ll;
    		ppet.nl=nl;
    		ppet.mj=mj;
    		
    		ppet.iMaxHp=parseInt((ppet.iMaxHp+500)/1000);
    		ppet.iMaxMp=parseInt((ppet.iMaxMp+500)/1000);
    		ppet.iSpirit=parseInt((ppet.iSpirit+500)/1000);
    		ppet.iAttack=parseInt((ppet.iAttack+500)/1000);
    		ppet.iDefence=parseInt((ppet.iDefence+500)/1000);
    		ppet.iSpeed=parseInt((ppet.iSpeed+500)/1000);
    		
    		if(ppet.iHp<=0)
    		{
    			ppet.iHp=ppet.iMaxHp;
    			ppet.iMp=ppet.iMaxMp;
    		}
    		if(ppet.iHp>ppet.iMaxHp)ppet.iHp=ppet.iMaxHp;
    		if(ppet.iMp>ppet.iMaxMp)ppet.iMp=ppet.iMaxMp;
    	};

    class SelectMyPet extends BaseClass{
    	constructor( xani)
    	{
    		super();
    		var i;
    		this.iW=885;
    		this.iH=460;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_select=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_select.InitButton("按钮1");
    		this.btn_select.sName="确定";
    		
    		this.btn_petlist=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.btn_petlist[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_petlist[i].bSingleButton=true;
    		}
    		this.iPetPoint=0;
    	}

    	Draw()
    	{
    		var i;
    		var offx,offy;
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		offx=this.iX+30;
    		offy=this.iY+30;
    		DrawMode$1.new_framein(offx, offy, 392, 400);
    		
    		var ox,oy;
    		for(i=0;i<8;i++)
    		{
    			ox=offx+20+i%4*92;
    			oy=offy+20+parseInt(i/4)*92;
    			GmPlay$1.xani_nui2.DrawAnima(ox,oy, "宠物头像框",0);
    			this.btn_petlist[i].Move(ox,oy, 83, 83);
    			if(i>=MyPets$1.mp.iPetCount)continue;

    			GmPlay$1.xani_head.DrawAnima_aa(ox,oy,GmPlay$1.de_pet.strValue(MyPets$1.mp.pets[i].iTid, 0, 1),0);//宠物头像
    			if((parseInt(MyPets$1.mp.pets[i].iFlag/100)%10)!=0)
    			{//系统绑定
    				M3DFast$1.gi().DrawText_2(ox-6,oy+80, "绑", 0xff6bfff4, 26, 101, 1, 1, 0, 0, -3, 4, 0xff000000);
    			}
    //			if(GmMe.me.iFightPid==MyPets.mp.pets[i].iPid)
    //				GmPlay.xani_nui2.DrawAnima(ox,oy, "宠物头像框",1);//参战标签

    			if(this.iPetPoint==i)
    			{
    				GmPlay$1.xani_nui2.DrawAnimaEx(ox,oy, "头像选中框",0,101,1,1,0,0,0);//this.iX+50, this.iY+65+i*45, 128, 32
    				
    				M3DFast$1.gi().DrawTextEx(offx+20, offy+210, "宠物名称："+MyPets$1.mp.pets[i].sName, 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    				M3DFast$1.gi().DrawTextEx(offx+20, offy+210+30, "体质资质："+MyPets$1.mp.pets[i].zz[0], 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    				M3DFast$1.gi().DrawTextEx(offx+20, offy+210+60, "法力资质："+MyPets$1.mp.pets[i].zz[1], 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    				M3DFast$1.gi().DrawTextEx(offx+20, offy+210+90, "力量资质："+MyPets$1.mp.pets[i].zz[2], 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    				M3DFast$1.gi().DrawTextEx(offx+20, offy+210+120, "耐力资质："+MyPets$1.mp.pets[i].zz[3], 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    				M3DFast$1.gi().DrawTextEx(offx+20, offy+210+150, "敏捷资质："+MyPets$1.mp.pets[i].zz[4], 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    				
    				M3DFast$1.gi().DrawTextEx(offx+20+200, offy+210+30, "等级："+MyPets$1.mp.pets[i].iLev, 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    				M3DFast$1.gi().DrawTextEx(offx+20+200, offy+210+60, "成长："+MyPets$1.swapcz(MyPets$1.mp.pets[i].cz), 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    				M3DFast$1.gi().DrawTextEx(offx+20+200, offy+210+90, "寿命："+MyPets$1.mp.pets[i].iLife, 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    				M3DFast$1.gi().DrawTextEx(offx+20+200, offy+210+120, "进阶："+MyPets$1.mp.pets[i].iStar, 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    			}
    		}
    		offx+=(392+20);
    		DrawMode$1.new_framein(offx, offy, 415, 400);

    		for(i=0;i<12;i++)
    		{
    			ox=offx+20+i%4*(92+7);
    			oy=offy+20+parseInt(i/4)*(92+5);

    			GmPlay$1.xani_nui2.DrawAnima(ox, oy, "技能框",0);
    			if(this.iPetPoint>=MyPets$1.mp.iPetCount)continue;
    			if(i>=MyPets$1.mp.pets[this.iPetPoint].iSkillBlock)GmPlay$1.xani_nui2.DrawAnima(ox, oy, "技能框",1);
    			if(MyPets$1.mp.pets[this.iPetPoint].jn[i]>0)GmPlay$1.xani_nicon.DrawAnima_aa(ox, oy, GmPlay$1.de_skill.strValue(MyPets$1.mp.pets[this.iPetPoint].jn[i], 0, 5),0);
    		}
    		this.btn_select.Move(offx+(415-161)/2,offy+325, 161, 53);
    		this.btn_select.Draw();
    		
    		this.btn_close.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<MyPets$1.mp.iPetCount;i++)
    		{//选择宠物
    			if(this.btn_petlist[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_petlist[i].bCheck())
    				{
    					this.iPetPoint=i;
    				}
    				return true;
    			}
    		}
    		if(this.btn_select.ProcTouch(msg, x, y))
    		{
    			if(this.btn_select.bCheck())
    			{
    				if(this.iPetPoint<MyPets$1.mp.iPetCount)
    				{
    					SelectMyPet.bSelect=true;
    					SelectMyPet.selpet=MyPets$1.mp.pets[this.iPetPoint];
    				}
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		return false;
    	}
    }
    SelectMyPet.wo;
    SelectMyPet.selpet;
    SelectMyPet.bSelect=false;
    SelectMyPet.iFlag=0;

    SelectMyPet.Open=function( without, f)
    {
    	XStat$1.gi().PushStat(XStat$1.GS_SELECTMYPET);
    	SelectMyPet.wo=without;
    	SelectMyPet.iFlag=f;
    };

    //合成
    class FusePet extends BaseClass{
    	 constructor( ani)
    	{
    		super();
    		this.pets=new Array(2);//
    		this.pets[0]=null;
    		this.pets[1]=null;
    		
    		this.btn_selpet=new Array(2);//
    		this.btn_selpet[0]=new XButton(GmPlay$1.xani_nui1);
    		this.btn_selpet[0].bSingleButton=true;
    		this.btn_selpet[1]=new XButton(GmPlay$1.xani_nui1);
    		this.btn_selpet[1].bSingleButton=true;
    		
    		this.chk_uselock=new Array(2);//
    		this.chk_uselock[0]=new XCheckBox(GmPlay$1.xani_nui3);
    		this.chk_uselock[0].InitBox("统一勾选");
    		this.chk_uselock[0].bTrue=false;
    		this.chk_uselock[0].sDetail="使用定形符";
    		this.chk_uselock[1]=new XCheckBox(GmPlay$1.xani_nui3);
    		this.chk_uselock[1].InitBox("统一勾选");
    		this.chk_uselock[1].bTrue=false;
    		this.chk_uselock[1].sDetail="使用定形符";
    		
    		this.iW=920;
    		this.iH=630;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_fuse=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_fuse.InitButton("按钮4");
    		this.btn_fuse.Move(this.iX+(this.iW-141)/2, this.iY+this.iH-30-49, 141, 49);
    		this.btn_fuse.sName="炼妖";
    	}

    	Draw()
    	{
    		var offx,offy;///420;
    		
    		DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH, "炼", "妖");
    		
    		offx=this.iX+30;
    		offy=this.iY+30;
    		
    		this.DrawSide(offx,offy,0);
    		this.DrawSide(offx+420+20,offy,1);
    		
    		if(SelectMyPet.bSelect)
    		{
    			SelectMyPet.bSelect=false;
    			this.pets[SelectMyPet.iFlag]=SelectMyPet.selpet;
    		}
    		
    		this.btn_close.Draw();
    	}
    	DrawSide( offx, offy, side)
    	{
    		var i,xx,yy;
    		
    		DrawMode$1.new_framein(offx, offy, 420, 510);
    		
    		GmPlay$1.xani_nui2.DrawAnima(offx+20,offy+15, "宠物头像框",0);
    		if(this.pets[side]!=null)GmPlay$1.xani_head.DrawAnima_aa(offx+20,offy+15,GmPlay$1.de_pet.strValue(this.pets[side].iTid, 0, 1),0);//宠物头像
    		this.btn_selpet[side].Move(offx+20, offy+15, 83, 83);
    		
    		if(this.pets[side]==null)M3DFast$1.gi().DrawTextEx(offx+20+83+20, offy+15, "宠物：", 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    		else
    		{
    			M3DFast$1.gi().DrawTextEx(offx+20+83+20, offy+15, "宠物："+this.pets[side].sName+((this.pets[side].iBaobao&2)==0?"":"(变异)"), 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    		}
    		
    		M3DFast$1.gi().DrawTextEx(offx+20+83+20, offy+15+30, "等级："+(this.pets[side]==null?"":this.pets[side].iLev), 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    		
    		this.chk_uselock[side].Move(offx+20+83+20, offy+15+30+30, 50, 50);
    		this.chk_uselock[side].Draw();
    		
    		M3DFast$1.gi().DrawTextEx(offx+20, offy+15+83+30, "体质资质："+(this.pets[side]==null?"":this.pets[side].zz[0]), 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(offx+20, offy+15+83+30+30, "法力资质："+(this.pets[side]==null?"":this.pets[side].zz[1]), 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(offx+20, offy+15+83+30+60, "力量资质："+(this.pets[side]==null?"":this.pets[side].zz[2]), 0xff003e57, 22, 101, 1, 1, 0, 0, 0);

    		M3DFast$1.gi().DrawTextEx(offx+20+180, offy+15+83+30, "耐力资质："+(this.pets[side]==null?"":this.pets[side].zz[3]), 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(offx+20+180, offy+15+83+30+30, "敏捷资质："+(this.pets[side]==null?"":this.pets[side].zz[4]), 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(offx+20+180, offy+15+83+30+60, "成长："+(this.pets[side]==null?"":MyPets$1.swapcz(this.pets[side].cz)), 0xff003e57, 22, 101, 1, 1, 0, 0, 0);

    		for(i=0;i<12;i++)
    		{
    			xx=offx+20+i%4*(92+7);
    			yy=offy+215+parseInt(i/4)*(92+5);

    			GmPlay$1.xani_nui2.DrawAnima(xx, yy, "技能框",0);
    			if(i>=(this.pets[side]==null?8:this.pets[side].iSkillBlock))GmPlay$1.xani_nui2.DrawAnima(xx, yy, "技能框",1);
    			if(this.pets[side]!=null && this.pets[side].jn[i]>0)GmPlay$1.xani_nicon.DrawAnima_aa(xx, yy, GmPlay$1.de_skill.strValue(this.pets[side].jn[i], 0, 5),0);
    		}
    //		if(this.pets[0]!=null)
    		{
    			
    		}
    		this.btn_fuse.Draw();
    		
    		if(Confirm1.end(Confirm1.CONFIRM_FUSEPET))
    		{
    			if(Confirm1.bConfirm)
    			{//发送炼妖消息
    				if(this.pets[0]!=null && this.pets[1]!=null)
    				{
    					if(this.chk_uselock[0].bTrue)i=0;
    					else if(this.chk_uselock[1].bTrue)i=1;
    					else i=2;
    					GmProtocol$1.gi().s_SeverEvent(26, 0, this.pets[0].iPid, this.pets[1].iPid, i);
    					XStat$1.gi().PopStat(1);
    				}
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_selpet[0].ProcTouch(msg, x, y))
    		{
    			if(this.btn_selpet[0].bCheck())
    			{//选择宠物
    				if(this.pets[0]==null)SelectMyPet.Open(this.pets[1],0);
    				else this.pets[0]=null;
    			}
    		}
    		if(this.btn_selpet[1].ProcTouch(msg, x, y))
    		{
    			if(this.btn_selpet[1].bCheck())
    			{//选择宠物
    				if(this.pets[1]==null)SelectMyPet.Open(this.pets[0],1);
    				else this.pets[1]=null;
    			}
    		}
    		if(this.chk_uselock[0].ProcTouch(msg, x, y))
    		{
    			if(this.chk_uselock[0].bTrue)this.chk_uselock[1].bTrue=false;
    		}
    		if(this.chk_uselock[1].ProcTouch(msg, x, y))
    		{
    			if(this.chk_uselock[1].bTrue)this.chk_uselock[0].bTrue=false;
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		if(this.btn_fuse.ProcTouch(msg, x, y))
    		{
    			if(this.btn_fuse.bCheck())
    			{
    				if(this.pets[0]==null || this.pets[1]==null)FrameMessage.fm.Open("请选择参与炼妖的宠物");
    				else if(this.pets[0].iLev<20 || this.pets[1].iLev<20)FrameMessage.fm.Open("20级以上的宠物才能参与炼妖");
    				else if(this.pets[0]==this.pets[1])FrameMessage.fm.Open("不能选择同一个宠物");
    				else if((this.pets[0].iBaobao&2)!=0 || (this.pets[1].iBaobao&2)!=0)FrameMessage.fm.Open("变异宠物无法炼妖");
    				else
    				{
    					if(this.chk_uselock[0].bTrue || this.chk_uselock[1].bTrue)
    					{//使用定形符
    						if(MyGoods.bHaveGoods(315, 1))
    						{//有定形符
    							Confirm1.start(Confirm1.CONFIRM_FUSEPET,"本次炼妖将消耗一枚定形符，生成形象为所选形象");
    						}
    						else
    						{
    							FrameMessage.fm.Open("背包中没有可消耗的定形符");
    						}
    					}
    					else
    					{//没有使用定形符
    						Confirm1.start(Confirm1.CONFIRM_FUSEPET,"本次炼妖没有使用定形符，炼妖形象将随机生成");
    					}
    				}
    			}
    		}
    		return false;
    	}
    }
    FusePet.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_FUSEPET);
    };

    class MyGrow
    {//当前植物
    	constructor()
    	{

    	}
    }

    class MyLand {
    	
    	constructor()
    	{
    		var i;
    		this.grow=new Array(6);////初始化6块地
    		for(i=0;i<6;i++)this.grow[i]=new MyGrow();
    		
    		MyLand.ml=this;
    	}

    	Init( pls)
    	{
    		var i;
    		MyLand.iMaxArable=pls.GetNextByte();
    		GmPlay$1.sop("MyLand.iMaxArable"+MyLand.iMaxArable);
    		for(i=0;i<MyLand.iMaxArable;i++)
    		{
    			MyLand.iArableOff[i][0]=pls.GetNextInt();
    			MyLand.iArableOff[i][1]=pls.GetNextInt();
    			GmPlay$1.sop(""+MyLand.iArableOff[i][0]);
    		}
    		MyLand.iArableGrow=pls.GetNextInt();
    		
    		MyLand.bShowBlock=false;
    	}
    }
    MyLand.bShowBlock=false;
    MyLand.iMaxArable=6;
    MyLand.iArableOff=new Array(12);
    for(var i$1=0;i$1<12;i$1++)MyLand.iArableOff[i$1]=new Int32Array(2);
    MyLand.iArableGrow=0;

    MyLand.sLandName=["雪域高原","碧湖翠陵","神秘楼兰","琼玉天宫","迷幻鬼蜮"];
    	
    MyLand.ml;

    class TmpGoods {

    	constructor()
    	{
    		TmpGoods.iTmpGoodsCount=0;
    	}
    	

    }
    TmpGoods.iTmpGoodsCount=0;
    TmpGoods.iDelay=0;

    TmpGoods.tgs=new TmpGoods();

    TmpGoods.getgoods=function( pls)
    {
    	TmpGoods.iTmpGoodsCount=pls.GetNextByte();
    };

    TmpGoods.Draw=function()
    {
    	if(TmpGoods.iTmpGoodsCount<=0)return;
    	var x,y;
    	x=GmConfig$1.SCRW/2;
    	y=GmConfig$1.SCRH*2/3;
    	if(parseInt(TmpGoods.iDelay/3)%2==0)
    	{
    		x+=2;
    		y+=2;
    	}
    	GmPlay$1.xani_ui.DrawAnima(x,y,"物品格",0);
    //		if(TmpGoods.iDelay/2%2==0)GmPlay.xani_goods.DrawAnima(x, y, "物品锁定框", 1);
    	M3DFast$1.gi().DrawTextEx(x+30, y+30-15, "临时", 0xff000000, 20, 101, 1, 1, 0, -2, -2);
    	M3DFast$1.gi().DrawTextEx(x+30, y+30+15, "("+TmpGoods.iTmpGoodsCount+")", 0xff000000, 20, 101, 1, 1, 0, -2, -2);
    	TmpGoods.iDelay++;
    };
    TmpGoods.ProcTouch=function( msg, x, y)
    {
    	var xx,yy;
    	xx=GmConfig$1.SCRW/2;
    	yy=GmConfig$1.SCRH*2/3;
    	if(TmpGoods.iTmpGoodsCount<=0)return false;
    	if(XDefine$1.bInRect(x, y, xx, yy, 60, 60))
    	{
    		if(msg==3)
    		{
    			TmpGoods.iTmpGoodsCount=0;
    			GmProtocol$1.gi().s_SeverEvent(4, 0, 0, 0, 0);
    		}
    		return true;
    	}
    	return false;
    };

    class GoodsDraw {
    }

    GoodsDraw.bLocked=false;

    GoodsDraw.GOODSEACHLINE=5;
    	
    GoodsDraw.lockgoods;
    GoodsDraw.iTouchDelay;//按下的延迟
    GoodsDraw.iLockX,GoodsDraw.iLockY;
    GoodsDraw.iOffX,GoodsDraw.iOffY;
    GoodsDraw.iMoveX,GoodsDraw.iMoveY;
    GoodsDraw.bDrawing;
    GoodsDraw.bMoving;
    GoodsDraw.lastlock=null;//最后锁定物品
    GoodsDraw.swaplock=null;//交换锁定物品
    GoodsDraw.bUse=false;
    GoodsDraw.bSwap=false;
    	
    GoodsDraw.aa_block=null;
    	
    GoodsDraw.Reset=function()
    	{
    		GoodsDraw.bLocked=false;
    		GoodsDraw.lockgoods=null;
    		GoodsDraw.iTouchDelay=0;//按下的延迟
    //		GoodsDraw.iLockX=0;
    //		GoodsDraw.iLockY=0;
    //	GoodsDraw.iOffX,GoodsDraw.iOffY;
    //	GoodsDraw.iMoveX,GoodsDraw.iMoveY;
    		GoodsDraw.bDrawing=false;
    		GoodsDraw.bMoving=false;
    		GoodsDraw.lastlock=null;//最后锁定物品
    		GoodsDraw.swaplock=null;//交换锁定物品
    		GoodsDraw.bUse=false;
    		GoodsDraw.bSwap=false;
    	};
    GoodsDraw.new_DrawOneGoods_ext=function( x, y, g, count)
    	{
    		g.aa.Draw(x, y);
    		if(GmPlay$1.de_goods.intValue(g.iTid,0,28)>1)M3DFast$1.gi().DrawTextEx(x+5, y+5, ""+count, 0xffffffff, 30, 101, 1, 1, 0, 0, 0);
    	};
    //GoodsDraw.Draw_OneGoods_ext( x, y,Goods g, count)
    //	{
    //		GmPlay.xani_goods.DrawAnima_aa(x,y, g.aa);
    //		if(GmPlay.de_goods.intValue(g.iTid,0,28)>1)M3DFast.gi().DrawTextEx(x+5, y+5, ""+count, 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    //	}
    //GoodsDraw.Draw_OneGoods( x, y,Goods g,Goods gsub, subc)
    //	{
    //		var i,j;
    //		if(GoodsDraw.bMoving && GoodsDraw.lockgoods==g)
    //		{
    //			x=GoodsDraw.iMoveX-GoodsDraw.iOffX;
    //			y=GoodsDraw.iMoveY-GoodsDraw.iOffY;
    //		}
    //		if(GmPlay.de_goods.intValue(g.iTid,0,28)>1)
    //		{//可叠加
    //			j=g.iCount;
    //			if(gsub!=null)
    //			{
    //				for(i=0;i<gsub.length;i++)
    //				{
    //					if(g==gsub[i] && subc[i]>0)
    //					{
    //						j-=subc[i];
    //					}
    //				}
    //			}
    //			if(j<=0)return;
    //			GmPlay.xani_goods.DrawAnima_aa(x,y, g.aa);
    //			M3DFast.gi().DrawTextEx(x+5, y+5, ""+j, 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    //		}
    //		else
    //		{//不可叠加
    //			if(gsub!=null)
    //			{
    //				for(i=0;i<gsub.length;i++)
    //				{
    //					if(g==gsub[i] && subc[i]>0)return;
    //				}
    //			}
    //			GmPlay.xani_goods.DrawAnima_aa(x,y, g.aa);
    //		}
    //	}
    //GoodsDraw.Draw_Goods( offx, offy,Goods gs,Goods subg, subc)
    //	{//宽320,高256
    //		if(aa_block==null)
    //		{
    //			aa_block=GmPlay.xani_ui3.InitAnimaWithName("背包格子背景", null);
    //		}
    //		var i,j;
    //		var x,y;
    //		var xx=0,yy=0;
    //		Goods moving=null;
    //		for(i=0;i<GoodsDraw.GOODSEACHLINE;i++)
    //		{
    //			for(j=0;j<4;j++)
    //			{
    //				x=offx+i*64;
    //				y=offy+j*64;
    //				aa_block.Draw(x,y);
    ////				GmPlay.xani_ui.DrawAnima(x, y, "物品格",0);
    ////				pm3f.DrawRect_2D(x,y,x+GW,y+GH, 0xffffffff);
    //				if(GoodsDraw.bMoving && GoodsDraw.lockgoods==gs[j*GoodsDraw.GOODSEACHLINE+i])
    //				{
    //					xx=GoodsDraw.iMoveX-GoodsDraw.iOffX;
    //					yy=GoodsDraw.iMoveY-GoodsDraw.iOffY;
    //					moving=GoodsDraw.lockgoods;
    //				}
    //				if(gs[j*GoodsDraw.GOODSEACHLINE+i].iGid!=-1)
    //				{
    ////					if(gs[j*GoodsDraw.GOODSEACHLINE+i]==lg)continue;
    //					Draw_OneGoods(x,y,gs[j*GoodsDraw.GOODSEACHLINE+i],subg,subc);
    //				}
    //			}
    //		}
    //		if(moving!=null)Draw_OneGoods(xx,yy,moving,subg,subc);
    //	}
    GoodsDraw.new_DrawOneGoods=function( x, y, g, gsub, subc)
    	{
    		var i,j;
    		if(GoodsDraw.bMoving && GoodsDraw.lockgoods==g)
    		{
    			x=GoodsDraw.iMoveX-GoodsDraw.iOffX;
    			y=GoodsDraw.iMoveY-GoodsDraw.iOffY;
    		}
    		if(GmPlay$1.de_goods.intValue(g.iTid,0,28)>1)
    		{//可叠加
    			j=g.iCount;
    			if(gsub!=null)
    			{
    				for(i=0;i<gsub.length;i++)
    				{
    					if(g==gsub[i] && subc[i]>0)
    					{
    						j-=subc[i];
    					}
    				}
    			}
    			if(j<=0)return;
    			g.aa.Draw(x, y);
    			M3DFast$1.gi().DrawTextEx(x+5, y+5, ""+j, 0xffffffff, 24, 101, 1, 1, 0, 0, 0);
    		}
    		else
    		{//不可叠加
    			if(gsub!=null)
    			{
    				for(i=0;i<gsub.length;i++)
    				{
    					if(g==gsub[i] && subc[i]>0)return;
    				}
    			}
    			g.aa.Draw(x, y);
    		}
    	};
    GoodsDraw.new_block=null;
    GoodsDraw.FRAMEW=80*5+5*6;//430
    GoodsDraw.FRAMEH=80*4+5*5;//345
    GoodsDraw.new_DrawGoods=function( offx, offy, gs, subg, subc)
    	{
    		if(GoodsDraw.new_block==null)GoodsDraw.new_block=GmPlay$1.xani_nui3.InitAnimaWithName("物品格子", null);

    		var i,j;
    		var x,y;
    		var xx=0,yy=0;
    		DrawMode$1.new_frameon(offx, offy, 430, 345, 0);
    		offx+=5;offy+=5;
    		var moving=null;
    		for(i=0;i<GoodsDraw.GOODSEACHLINE;i++)
    		{
    			for(j=0;j<4;j++)
    			{
    				x=offx+i*85;
    				y=offy+j*85;
    				GoodsDraw.new_block.Draw(x,y);
    //				GmPlay.xani_ui.DrawAnima(x, y, "物品格",0);
    //				pm3f.DrawRect_2D(x,y,x+GW,y+GH, 0xffffffff);
    				if(GoodsDraw.bMoving && GoodsDraw.lockgoods==gs[j*GoodsDraw.GOODSEACHLINE+i])
    				{
    					xx=GoodsDraw.iMoveX-GoodsDraw.iOffX;
    					yy=GoodsDraw.iMoveY-GoodsDraw.iOffY;
    					moving=GoodsDraw.lockgoods;
    				}
    				if(gs[j*GoodsDraw.GOODSEACHLINE+i].iGid!=-1)
    				{
    //					if(gs[j*GoodsDraw.GOODSEACHLINE+i]==lg)continue;
    					GoodsDraw.new_DrawOneGoods(x,y,gs[j*GoodsDraw.GOODSEACHLINE+i],subg,subc);
    				}
    			}
    		}
    		if(moving!=null)GoodsDraw.new_DrawOneGoods(xx,yy,moving,subg,subc);
    	};
    GoodsDraw.new_LockPos=function( offx, offy, gs, g)
    	{
    		var i,j;
    		offx+=5;
    		offy+=5;
    		
    		for(i=0;i<GoodsDraw.GOODSEACHLINE;i++)
    		{//背包位置
    			for(j=0;j<4;j++)
    			{
    				if(gs[j*GoodsDraw.GOODSEACHLINE+i]==g)
    				{
    						GoodsDraw.iLockX=offx+i*85;
    						GoodsDraw.iLockY=offy+j*85;
    						GoodsDraw.lastlock=g;
    						GoodsDraw.lockgoods=g;
    				}
    			}
    		}
    	};
    GoodsDraw.new_LockGoods=function( x, y, offx, offy, gs, msg)
    	{
    		var i,j,xx,yy;
    		offx+=5;
    		offy+=5;
    		if(msg==3)
    		{
    			if(GoodsDraw.bLocked)
    			{
    				if(GoodsDraw.bMoving)
    				{
    					GoodsDraw.bMoving=false;
    					for(i=0;i<GoodsDraw.GOODSEACHLINE;i++)
    					{//背包位置
    						for(j=0;j<4;j++)
    						{
    							xx=offx+i*85;
    							yy=offy+j*85;
    							
    							if(XDefine$1.bInRect(x, y, xx,yy, 80,80))
    							{
    								if(gs[j*GoodsDraw.GOODSEACHLINE+i]!=GoodsDraw.lockgoods)
    								{//移动交换物品
    									GoodsDraw.bSwap=true;
    									GoodsDraw.swaplock=gs[j*GoodsDraw.GOODSEACHLINE+i];
    									GoodsDraw.lastlock=null;
    									return GoodsDraw.lockgoods;
    								}
    							}
    						}
    					}
    				}
    				if(GoodsDraw.lastlock==GoodsDraw.lockgoods)
    				{
    					//使用
    					GoodsDraw.bUse=true;
    					GoodsDraw.lastlock=null;
    					GoodsDraw.lockgoods=null;
    					GoodsDraw.bLocked=false;
    				}
    				else
    				{
    					GoodsDraw.lastlock=GoodsDraw.lockgoods;
    					GoodsDraw.bUse=false;
    				}
    			}
    		}
    		if(msg==1)// || msg==3)
    		{
    			GoodsDraw.bLocked=false;
    			GoodsDraw.bMoving=false;
    		}
    		if(msg==1)GoodsDraw.bDrawing=false;
    //		GmPlay.sop("zzzzzzzzz");
    		if(msg==2 && GoodsDraw.bLocked)
    		{
    			GoodsDraw.iMoveX=x;
    			GoodsDraw.iMoveY=y;
    			GoodsDraw.bMoving=true;
    			return GoodsDraw.lockgoods;
    		}
    		for(i=0;i<GoodsDraw.GOODSEACHLINE;i++)
    		{//背包位置
    			for(j=0;j<4;j++)
    			{
    				xx=offx+i*85;
    				yy=offy+j*85;
    				if(XDefine$1.bInRect(x, y, xx,yy, 80,80))
    				{
    					if(gs[j*GoodsDraw.GOODSEACHLINE+i].iGid<=0)
    					{
    						GoodsDraw.lastlock=null;
    						return null;
    					}
    					else
    					{
    						if(msg==1)
    						{//按下，选中，开始计时
    							GoodsDraw.bLocked=true;
    							GoodsDraw.lockgoods=gs[j*GoodsDraw.GOODSEACHLINE+i];
    							GoodsDraw.iLockX=xx;
    							GoodsDraw.iLockY=yy;
    							GoodsDraw.iOffX=x-xx;
    							GoodsDraw.iOffY=y-yy;
    							GoodsDraw.iTouchDelay=0;
    						}

    						return gs[j*GoodsDraw.GOODSEACHLINE+i];
    					}
    				}
    			}
    		}
    		GoodsDraw.lastlock=null;
    		return null;
    	};
    GoodsDraw.new_DrawRect=function( offx, offy, gs, lg, type)
    	{//
    		if(lg==null)return;
    		var i,j;
    		var x,y;
    		offx+=5;
    		offy+=5;
    		for(i=0;i<GoodsDraw.GOODSEACHLINE;i++)
    		{
    			for(j=0;j<4;j++)
    			{
    				x=offx+i*85;
    				y=offy+j*85;
    //				pm3f.DrawRect_2D(x,y,x+GW,y+GH, 0xffffffff);
    				if(gs[j*GoodsDraw.GOODSEACHLINE+i].iGid!=-1)
    				{
    					if(gs[j*GoodsDraw.GOODSEACHLINE+i]==lg)
    					{
    						if(type==0)
    						{
    							GmPlay$1.xani_nui3.DrawAnimaEx(x, y, "物品选中框", 0, 101, 1, 1, 0, 0, 0);
    						}
    						else GmPlay$1.xani_nui3.DrawAnimaEx(x, y, "物品选中框", 1, 101, 1, 1, 0, 0, 0);
    //							M3DFast.gi().FillRect_2D(x-w, y-w, x, y+60+w, c);
    //							M3DFast.gi().FillRect_2D(x+60, y-w, x+60+w, y+60+w, c);
    //							M3DFast.gi().FillRect_2D(x-w, y-w, x+60+w, y, c);
    //							M3DFast.gi().FillRect_2D(x-w, y+60, x+60+w, y+60+w, c);
    					}
    				}
    			}
    		}
    	};
    //GoodsDraw.Draw_Rect( offx, offy,Goods gs,Goods lg, type)
    //	{//
    //		if(lg==null)return;
    //		var i,j;
    //		var x,y;
    //		for(i=0;i<GoodsDraw.GOODSEACHLINE;i++)
    //		{
    //			for(j=0;j<4;j++)
    //			{
    //				x=offx+i*64;
    //				y=offy+j*64;
    ////				pm3f.DrawRect_2D(x,y,x+GW,y+GH, 0xffffffff);
    //				if(gs[j*GoodsDraw.GOODSEACHLINE+i].iGid!=-1)
    //				{
    //					if(gs[j*GoodsDraw.GOODSEACHLINE+i]==lg)
    //					{
    //						if(type==0)
    //						{
    //							GmPlay.xani_ui3.DrawAnimaEx(x, y, "背包物品选中", 0, 101, 1, 1, 0, 0, 0);
    //						}
    //						else GmPlay.xani_goods.DrawAnimaEx(x, y, "物品锁定框", type, 101, 1, 1, 0, 0, 0);
    ////							M3DFast.gi().FillRect_2D(x-w, y-w, x, y+60+w, c);
    ////							M3DFast.gi().FillRect_2D(x+60, y-w, x+60+w, y+60+w, c);
    ////							M3DFast.gi().FillRect_2D(x-w, y-w, x+60+w, y, c);
    ////							M3DFast.gi().FillRect_2D(x-w, y+60, x+60+w, y+60+w, c);
    //					}
    //				}
    //			}
    //		}
    //	}

    GoodsDraw.NoMove=function()
    	{
    		GoodsDraw.bMoving=false;
    	};
    GoodsDraw.Lock_Goods=function( x, y, offx, offy, gs, msg)
    	{
    		var i,j,xx,yy;
    		if(msg==3)
    		{
    			if(GoodsDraw.bLocked)
    			{
    				if(GoodsDraw.bMoving)
    				{
    					GoodsDraw.bMoving=false;
    					for(i=0;i<GoodsDraw.GOODSEACHLINE;i++)
    					{//背包位置
    						for(j=0;j<4;j++)
    						{
    							xx=offx+i*64;
    							yy=offy+j*64;
    							
    							if(XDefine$1.bInRect(x, y, xx,yy, 60,60))
    							{
    								if(gs[j*GoodsDraw.GOODSEACHLINE+i]!=GoodsDraw.lockgoods)
    								{//移动交换物品
    									GoodsDraw.bSwap=true;
    									GoodsDraw.swaplock=gs[j*GoodsDraw.GOODSEACHLINE+i];
    									GoodsDraw.lastlock=null;
    									return GoodsDraw.lockgoods;
    								}
    							}
    						}
    					}
    				}
    				if(GoodsDraw.lastlock==GoodsDraw.lockgoods)
    				{
    					//使用
    					GoodsDraw.bUse=true;
    					GoodsDraw.lastlock=null;
    					GoodsDraw.lockgoods=null;
    					GoodsDraw.bLocked=false;
    				}
    				else
    				{
    					GoodsDraw.lastlock=GoodsDraw.lockgoods;
    					GoodsDraw.bUse=false;
    				}
    			}
    		}
    		if(msg==1)// || msg==3)
    		{
    			GoodsDraw.bLocked=false;
    			GoodsDraw.bMoving=false;
    		}
    		if(msg==1)GoodsDraw.bDrawing=false;
    //		GmPlay.sop("zzzzzzzzz");
    		if(msg==2 && GoodsDraw.bLocked)
    		{
    			GoodsDraw.iMoveX=x;
    			GoodsDraw.iMoveY=y;
    			GoodsDraw.bMoving=true;
    			return GoodsDraw.lockgoods;
    		}
    		for(i=0;i<GoodsDraw.GOODSEACHLINE;i++)
    		{//背包位置
    			for(j=0;j<4;j++)
    			{
    				xx=offx+i*64;
    				yy=offy+j*64;
    				if(XDefine$1.bInRect(x, y, xx,yy, 60,60))
    				{
    					if(gs[j*GoodsDraw.GOODSEACHLINE+i].iGid<=0)
    					{
    						GoodsDraw.lastlock=null;
    						return null;
    					}
    					else
    					{
    						if(msg==1)
    						{//按下，选中，开始计时
    							GoodsDraw.bLocked=true;
    							GoodsDraw.lockgoods=gs[j*GoodsDraw.GOODSEACHLINE+i];
    							GoodsDraw.iLockX=xx;
    							GoodsDraw.iLockY=yy;
    							GoodsDraw.iOffX=x-xx;
    							GoodsDraw.iOffY=y-yy;
    							GoodsDraw.iTouchDelay=0;
    						}

    						return gs[j*GoodsDraw.GOODSEACHLINE+i];
    					}
    				}
    			}
    		}
    		GoodsDraw.lastlock=null;
    		return null;
    	};
    GoodsDraw.bCanMove=function()
    	{
    		if(GoodsDraw.bSwap)
    		{
    			GoodsDraw.bSwap=false;
    			return true;
    		}
    		else return false;
    	};
    GoodsDraw.bCanProc=function()
    	{
    		if(GoodsDraw.bUse)
    		{
    			GoodsDraw.bUse=false;
    			return true;
    		}
    		else return false;
    //		GmPlay.sop("bd="+GoodsDraw.bDrawing);
    //		if(GoodsDraw.bDrawing)
    //		{//显示详细，不处理点击
    //			GoodsDraw.bDrawing=false;
    //			return false;
    //		}
    //		return true;
    	};
    GoodsDraw.bShowDetail=function()
    	{
    		if(GoodsDraw.lastlock==null)return false;
    		GoodsDraw.iTouchDelay++;
    //		GmPlay.sop("td="+GoodsDraw.iTouchDelay);
    //		if(GoodsDraw.iTouchDelay<6)return false;
    		return true;
    	};
    GoodsDraw.new_DrawDetailEx1=function( tid, x, y, detail)
    	{
    		GoodsDraw.iDetailW=320;
    		FormatString.gi().FormatEx(detail, GoodsDraw.iDetailW-30, 24, 0, 0, 28);
    		GoodsDraw.iDetailH=20+80+10+FormatString.gi().iH+20;
    		
    		if(x<GoodsDraw.iDetailW+20)x+=80;
    		else x=x-GoodsDraw.iDetailW;
    		y=y+40-GoodsDraw.iDetailH/2;
    		if(y<0)y=0;
    		if(y+GoodsDraw.iDetailH>GmConfig$1.SCRH)y=GmConfig$1.SCRH-GoodsDraw.iDetailH;
    		GoodsDraw.iDetailX=x;
    		GoodsDraw.iDetailY=y;
    		
    		DrawMode$1.new_framewatch(x, y, GoodsDraw.iDetailW, GoodsDraw.iDetailH);
    		if(GoodsDraw.new_block==null)GoodsDraw.new_block=GmPlay$1.xani_nui3.InitAnimaWithName("物品格子", null);
    		GoodsDraw.new_block.Draw(x+20, y+20);
    		GmPlay$1.xani_ngoods.DrawAnima_aa(x+20, y+20, GmPlay$1.de_goods.strValue(tid, 0, 10),0);
    		M3DFast$1.gi().DrawTextEx(x+20+80+10, y+20, GmPlay$1.de_goods.strValue(tid, 0, 4), 0xffffff00, 30, 101, 1, 1, 0, 0, 0);
    //		M3DFast.gi().DrawTextEx(x+20+80+10, y+20+32, sType, 0xffffff00, 22, 101, 1, 1, 0, 0, 0);
    //		M3DFast.gi().DrawTextEx(x+20+80+10, y+20+56, sLev, 0xffffff00, 22, 101, 1, 1, 0, 0, 0);
    		FormatString.gi().Draw(x+20, y+20+80+10);
    	};
    GoodsDraw.detail_add="";
    GoodsDraw.new_DrawDetail=function( g, x, y, mh)
    	{
    		if(g==null)g=GoodsDraw.lockgoods;
    		if(x==-1)x=GoodsDraw.iLockX;
    		if(y==-1)y=GoodsDraw.iLockY;

    		var sName,sType="",sLev="",s="";
    //		String s,s1="",s2="";//类型，等级
    		var i,j,m,n,type;
    		sName=GmPlay$1.de_goods.strValue(g.iTid, -1, 4);
    		type=GmPlay$1.de_goods.intValue(g.iTid, -1, 16);
    		if(type!=-1)
    		{//装备cx
    			s="基本属性";
    			sLev="等级："+GmPlay$1.de_goods.strValue(g.iTid, -1, 9);
    			var add1,add2;
    			var bs_base=[8,12,40,8,6];//攻，防，血，速，灵
    			var bs_add=[0,0,0,0,0];
    			add1=parseInt(g.iAtts[0]/10000);//基本属性加成
    			add2=g.iAtts[0]%10000;
    			i=parseInt(g.iAtts[2]/10000);//宝石1加成
    			if(i>0)bs_add[parseInt(i/1000)]=bs_base[parseInt(i/1000)]*(i%1000);
    			i=g.iAtts[2]%10000;//宝石2加成
    			if(i>0)bs_add[parseInt(i/1000)]=bs_base[parseInt(i/1000)]*(i%1000);
    			switch(type)
    			{
    			case 0:
    				sType="类型：头盔";
    				s+="#e# #cffff00防御 +"+(GmPlay$1.de_goods.intValue(g.iTid, -1, 21)+add1+bs_add[1]);
    				s+="#e# #cffff00魔法 +"+(GmPlay$1.de_goods.intValue(g.iTid, -1, 22)+add2);
    				bs_add[1]=0;
    				break;
    			case 1://饰品
    				sType="类型：饰品";
    				s+="#e# #cffff00灵力 +"+(GmPlay$1.de_goods.intValue(g.iTid, -1, 23)+add2+bs_add[4]);
    				bs_add[4]=0;
    				break;
    			case 2://武器
    				j=GmPlay$1.de_goods.intValue(g.iTid, -1, 19);
    				if(j==0)sType="类型：武器(剑)";
    				else if(j==1)sType="类型：武器(刀)";
    				else sType="类型：武器(枪)";
    //				sType="类型：武器";
    				s+="#e# #cffff00伤害 +"+(GmPlay$1.de_goods.intValue(g.iTid, -1, 3)+add2+bs_add[0]);
    				bs_add[0]=0;
    				break;
    			case 3://铠甲
    				j=GmPlay$1.de_goods.intValue(g.iTid, -1, 20);
    				if(j==0)sType="类型：女衣";
    				else sType="类型：铠甲";
    				s+="#e# #cffff00防御 +"+(GmPlay$1.de_goods.intValue(g.iTid, -1, 21)+add2+bs_add[1]);
    				bs_add[1]=0;
    				break;
    			case 4://腰带
    				sType="类型：腰带";
    				s+="#e# #cffff00防御 +"+(GmPlay$1.de_goods.intValue(g.iTid, -1, 21)+add1+bs_add[1]);
    				s+="#e# #cffff00气血 +"+(GmPlay$1.de_goods.intValue(g.iTid, -1, 24)+add2+bs_add[2]);
    				bs_add[1]=0;
    				bs_add[2]=0;
    				break;
    			case 5://鞋子
    				sType="类型：鞋子";
    				s+="#e# #cffff00防御 +"+(GmPlay$1.de_goods.intValue(g.iTid, -1, 21)+add1+bs_add[1]);
    				s+="#e# #cffff00速度 +"+(GmPlay$1.de_goods.intValue(g.iTid, -1, 25)+add2+bs_add[3]);
    				bs_add[1]=0;
    				bs_add[3]=0;
    				break;
    			}
    			if(bs_add[0]>0)s+="#e# 伤害 +"+bs_add[0];
    			if(bs_add[1]>0)s+="#e# 防御 +"+bs_add[1];
    			if(bs_add[2]>0)s+="#e# 气血 +"+bs_add[2];
    			if(bs_add[3]>0)s+="#e# 速度 +"+bs_add[3];
    			if(bs_add[4]>0)s+="#e# 灵力 +"+bs_add[4];
    			add1=parseInt(g.iAtts[1]/10000);
    			add2=g.iAtts[1]%10000;
    			if(add1>0)
    			{
    				if(parseInt(add1/1000)==0)s+="#e# #c00ff00体质 +"+add1%1000;
    				else if(parseInt(add1/1000)==1)s+="#e# #c00ff00法力 +"+add1%1000;
    				else if(parseInt(add1/1000)==2)s+="#e# #c00ff00力量 +"+add1%1000;
    				else if(parseInt(add1/1000)==3)s+="#e# #c00ff00耐力 +"+add1%1000;
    				else if(parseInt(add1/1000)==4)s+="#e# #c00ff00敏捷 +"+add1%1000;
    			}
    			if(add2>0)
    			{
    				if(add1<=0)s+="#e# #c00ff00";
    				else s+=" ";
    				if(parseInt(add2/1000)==0)s+="体质 +"+add2%1000;
    				else if(parseInt(add2/1000)==1)s+="法力 +"+add2%1000;
    				else if(parseInt(add2/1000)==2)s+="力量 +"+add2%1000;
    				else if(parseInt(add2/1000)==3)s+="耐力 +"+add2%1000;
    				else if(parseInt(add2/1000)==4)s+="敏捷 +"+add2%1000;
    			}
    			if(g.iAtts[4]>0)
    			{//特技特效
    				i=(g.iAtts[4]>>20)&0x3ff;//无级别简易
    				if(i>0)
    				{
    					s+="#e# #cff8020"+GmPlay$1.de_skill.strValue(i, 0, 6);//技能名称
    				}
    				i=(g.iAtts[4]>>10)&0x3ff;//特效
    				if(i>0)
    				{
    					s+="#e# #c80c0ff特效 : "+GmPlay$1.de_skill.strValue(i, 0, 6);//技能名称
    				}
    				i=g.iAtts[4]&0x3ff;//特技
    				if(i>0)
    				{
    					s+="#e# #c80c0ff特技 : "+GmPlay$1.de_skill.strValue(i, 0, 6);//技能名称
    				}
    			}
    			s+="#e# #cffffff耐久度"+parseInt((g.iAtts[5]%100000+19)/20)+"/"+parseInt(g.iAtts[5]/100000);

    			m=parseInt(g.iAtts[2]/10000);
    			n=g.iAtts[2]%10000;
    			if(m>0 || n>0)
    			{//
    				s+="#e#cb48cc8镶嵌等级 "+(m%1000+n%1000);
    				s+="#e# 已镶嵌 ";
    				if(m>0)s+=GmPlay$1.de_goods.strValue(parseInt(m/1000)+101, 0, 4);
    				if(n>0)s+=","+GmPlay$1.de_goods.strValue(parseInt(n/1000)+101, 0, 4);
    			}
    			g.CalcSetScore();
    			if(g.iScore>0)s+="#e# #cffffff评分："+g.iScore;

    			i=parseInt(g.iAtts[3]/10000);//强化等级
    			if(i>0)sName+=" +"+i;
    		}
    		type=GmPlay$1.de_goods.intValue(g.iTid, -1, 31);
    		if(type>0)
    		{//材料
    			sType="类型：材料";
    			if(type==1)sLev="等级：一级";
    			if(type==2)sLev+="等级：二级";
    			if(type==3)sLev+="等级：三级";
    		}
    		type=GmPlay$1.de_goods.intValue(g.iTid, -1, 27);
    		if(type!=-1)
    		{//草药
    			sType="类型："+GameData$1.sBigNum[type]+"级草药";
    	//		sLev="等级："+;
    			var restorehp=GmPlay$1.de_goods.intValue(g.iTid, -1, 1);
    			var restoremp=GmPlay$1.de_goods.intValue(g.iTid, -1, 2);
    			if(restorehp!=-1)s+="#e# #c00ff00恢复气血"+restorehp;
    			if(restoremp!=-1)s+="#e# #c00ff00恢复魔法"+restoremp;
    			if(type==3)
    			{
    				switch(g.iTid)
    				{
    				case 85://黑莲花
    					s+="#e# #c00ff00随机增加5~20点临时愤怒(进入战斗时恢复)";
    					s+="#e# #cb48cc8效果持续24小时";
    					break;
    				case 86://七星草	+速度
    					s+="#e# #c00ff00随机增加5~20点敏捷";
    					s+="#e# #cb48cc8效果持续24小时";
    					break;
    				case 87://://幻心草
    					s+="#e# #c00ff00随机增加5%~10%治疗能力";
    					s+="#e# #cb48cc8效果持续24小时";
    					break;
    				case 88://://千金藤	+力量
    					s+="#e# #c00ff00随机增加5~20点力量";
    					s+="#e# #cb48cc8效果持续24小时";
    					break;
    				case 89://龙葵花	+耐力
    					s+="#e# #c00ff00随机增加5~20点耐力";
    					s+="#e# #cb48cc8效果持续24小时";
    					break;
    				case 90://曼陀罗
    					s+="#e# #c00ff00随机增加5%~20%固定伤害";
    					s+="#e# #cb48cc8效果持续24小时";
    					break;
    				case 91://九香虫
    					s+="#e# #c00ff00随机增加5%~10%物理和法术命中";
    					s+="#e# #cb48cc8效果持续24小时";
    					break;
    				case 92://凤尾草		+魔力
    					s+="#e# #c00ff00随机增加5~20点魔力";
    					s+="#e# #cb48cc8效果持续24小时";
    					break;
    				case 93://龙胆	+体质
    					s+="#e# #c00ff00随机增加5~20点体质";
    					s+="#e# #cb48cc8效果持续24小时";
    					break;
    				case 94://辛夷花
    					s+="#e# #c00ff00随机增加1%~5%物理和法术暴击";
    					s+="#e# #cb48cc8效果持续24小时";
    					break;
    				}
    			}
    			if(s.length>0)s="#cffff00功效："+s;
    		}
    		type=GmPlay$1.de_goods.intValue(g.iTid, -1, 33);
    		if(type!=-1)
    		{//丹药
    			if(type==1)
    			{
    				sType="一级丹药";
    				sLev="品质："+g.iAtts[0];
    			}
    			if(type==2)sType="二级丹药";
    			if(type==3)
    			{
    				sType="三级丹药";
    				if(g.iAtts[0]<40)sLev="品质：低";
    				else if(g.iAtts[0]<80)sLev="品质：中";
    				else sLev="品质：高";
    			}
    			if(type==4)sType="四级丹药";
    			if(g.iTid==302 || g.iTid==303 || g.iTid==304 || g.iTid==305 || g.iTid==306 || g.iTid==307 || g.iTid==308 || g.iTid==309 || g.iTid==310 || g.iTid==311)
    			{
    				s+="#e#cff0000只能在擂台使用";
    			}
    			switch(g.iTid)
    			{
    			case 185://天魂溶血丹
    				if(g.iAtts[0]<40)s+="#e# #c00ff00临时提高人物修炼一级";
    				else if(g.iAtts[0]<80)s+="#e# #c00ff00临时提高人物修炼二级";
    				else s+="#e# #c00ff00临时提高人物修炼三级";
    				s+="#e# #cb48cc8效果持续24小时";
    				break;
    			case 187://七命玄门丹
    				if(g.iAtts[0]<40)s+="#e# #c00ff00临时提高伤害结果20点";
    				else if(g.iAtts[0]<80)s+="#e# #c00ff00临时提高伤害结果40点";
    				else s+="#e# #c00ff00临时提高伤害结果60点";
    				s+="#e# #cb48cc8效果持续24小时";
    				break;
    			case 188://三纹清灵丹
    				if(g.iAtts[0]<40)s+="#e# #c00ff00临时提高宠物全属性8点";
    				else if(g.iAtts[0]<80)s+="#e# #c00ff00临时提高宠物全属性13点";
    				else s+="#e# #c00ff00临时提高宠物全属性18点";
    				s+="#e# #cb48cc8效果持续24小时";
    				break;
    			case 165://安神丸+血蓝
    			case 302:
    				s+="#e#cffffff恢复气血"+(g.iAtts[0]*6+300);
    				s+="#e#cffffff恢复魔法"+(g.iAtts[0]*2+100);
    				break;
    			case 166://小还丹+血
    			case 303:
    				s+="#e#cffffff恢复气血"+(g.iAtts[0]*9+450);
    				break;
    			case 167://大还丹+血
    			case 311:
    				s+="#e#cffffff恢复气血"+(g.iAtts[0]*12+600);
    				break;
    			case 168://护心丸+蓝
    			case 310:
    				s+="#e#cffffff恢复魔法"+(g.iAtts[0]*3+150);
    				break;
    			case 169://补心丸+蓝
    			case 309:
    				s+="#e#cffffff恢复魔法"+(g.iAtts[0]*5+200);
    				break;
    			case 170://天王补心丹+血蓝
    			case 308:
    				s+="#e#cffffff恢复气血"+(g.iAtts[0]*9+450);
    				s+="#e#cffffff恢复魔法"+(g.iAtts[0]*3+150);
    				break;
    			case 171://舒筋活骨散解封
    			case 307:
    				s+="#e#cffffff解封并恢复气血"+(g.iAtts[0]*2+100);
    				break;
    			case 172://天仙玉露解封
    			case 306:
    				s+="#e#cffffff解封并恢复气血"+(g.iAtts[0]*6+300);
    				break;
    			case 173://还魂丹救活
    			case 305:
    				s+="#e#cffffff复活并恢复气血"+(g.iAtts[0]*2+100);
    				break;
    			case 174://九转还魂丹救活
    			case 304:
    				s+="#e#cffffff复活并恢复气血"+(g.iAtts[0]*6+300);
    				break;
    				///~~~~~~~~~~~~~~~~~二级丹药
    			case 175://		金乌丹		攻
    				s+="#e#cffffff增加坐骑力量资质";
    				break;
    			case 176://		风神丹		速
    				s+="#e#cffffff增加坐骑敏捷资质";
    				break;
    			case 177://		火灵丹		魔
    				s+="#e#cffffff增加坐骑法力资质";
    				break;
    			case 178://		培元丹		防
    				s+="#e#cffffff增加坐骑耐力资质";
    				break;
    			case 179://		赤血丹		体
    				s+="#e#cffffff增加坐骑体质资质";
    				break;
    			case 180://		青霜丹	
    				s+="#e#cffffff增加200点宠物寿命";
    				break;
    			case 181://		养魂丹		灵气
    				s+="#e#cffffff恢复坐骑灵气";
    				break;
    			case 182://		合气丹		成长
    				s+="#e#cffffff增加坐骑成长";
    				break;
    			case 183://		地灵丹		
    				s+="#e#cffffff使用后立即恢复50点体力，3小时内恢复体力速度翻倍";
    				break;
    			case 184://		天灵丹	
    				s+="#e#cffffff使用后立即恢复人物等级*4+50体力值";
    				break;

    			case 191://涅盘丹
    				s+="#e#c00ff00重置人物属性点";
    				break;
    			}
    		}
    		type=GmPlay$1.de_goods.intValue(g.iTid, -1, 34);
    		if(type!=-1)
    		{//烹饪
    			sType="类型：烹饪";
    			sLev="品质："+g.iAtts[0];
    			switch(g.iTid)
    			{
    			case 197://艾窝窝
    				s+="#e#c00ff00增加宠物寿命=品质*2，有几率被噎住降低资质";
    				break;
    			case 198://三丁包子
    				//漫游恢复
    				s+="#e#c00ff00使用后增加愤怒=15，只能在漫游中使用";
    				break;
    			case 199://双塔鱼
    				s+="#e#c00ff00恢复自身愤怒=品质*1.2，减少自身防御=品质*1，只能在战斗中使用";
    				break;
    			case 200://粉蒸牛肉
    				s+="#e#c00ff00增加宠物寿命=品质/2";
    				break;
    			case 201://赖汤圆
    				s+="#e#c00ff00增加宠物寿命=品质*2，有几率被噎住降低资质";
    				break;
    			case 202://臭豆腐
    				s+="#e#c00ff00使用后增加愤怒=15，只能在战斗中使用";
    				break;
    			case 203://竹简饭
    				s+="#e#c00ff00使用后增加愤怒=品质*0.5，只能在战斗中使用";
    				break;
    			case 204://清汤鱼圆
    				s+="#e#c00ff00使用后增加愤怒=品质*0.8，附加中毒状态，只能在战斗中使用";
    				break;
    			case 205://蛇胆酒
    				s+="#e#c00ff00使用后增加愤怒=品质*1，附加疯狂状态3~4回合，只能在战斗中使用";
    				break;
    			case 206://烤肉
    				s+="#e#c00ff00使用后增加愤怒=品质/2，只能在漫游中使用";
    				break;
    			}
    		}
    		type=GmPlay$1.de_goods.intValue(g.iTid, -1, 30);
    		if(type!=-1)
    		{//道具
    			sType="类型：道具";
    			switch(g.iTid)
    			{
    			case 116://血池
    				s+="#e#c00ff00+1万血池上限";
    				break;
    			case 117://蓝池
    				s+="#e#c00ff00+1万蓝池上限";
    				break;
    			case 377://大血
    				s+="#e#c00ff00+10万血池上限";
    				break;
    			case 378://大蓝
    				s+="#e#c00ff00+10万蓝池上限";
    				break;
    			case 240://绑铜
    				s+="#e#c00ff00含有"+g.iAtts[0]+"绑铜";
    				break;
    			case 96://宝图
    			case 230://高级宝图
    //			case 327://破坏符咒
    				s+="#e#c00ff00"+GmPlay$1.de_map.strValue(g.iAtts[0], 0, 1)+"("+parseInt(g.iAtts[1]/16)+","+parseInt(g.iAtts[2]/16)+")";
    				break;
    			case 97://装备制造图纸，显示
    				s+="#e#cffff00等级 "+GmPlay$1.de_goods.intValue(g.iAtts[0], -1, 9);//穿戴等级要求
    				i=GmPlay$1.de_goods.intValue(g.iAtts[0], -1, 16);
    				if(i==0)s+="#e种类 头盔";
    				else if(i==1)s+="#e种类 项链";
    				else if(i==2)
    				{//武器
    					i=GmPlay$1.de_goods.intValue(g.iAtts[0], -1, 19);
    					if(i==0)s+="#e种类 剑";
    					else if(i==1)s+="#e种类 刀";
    					else if(i==2)s+="#e种类 枪";
    				}
    				else if(i==3)
    				{//衣服
    					i=GmPlay$1.de_goods.intValue(g.iAtts[0], -1, 20);
    					if(i==0)s+="#e种类 女衣";
    					else if(i==1)s+="#e种类 男衣";
    				}
    				else if(i==4)s+="#e种类 腰带";
    				else if(i==5)s+="#e种类 靴子";
    				/////////////打造所需材料
    //				s+="#e所需材料:";
    				for(i=1;i<6;i++)
    				{
    					if(g.iAtts[i]==0)break;
    					s+="#e材料"+i+" "+GmPlay$1.de_goods.strValue(g.iAtts[i], -1, 4);
    				}
    				break;
    			case 98://显示等级，熟练度
    			case 99:
    			case 100:
    				if(g.iTid==98)s+="#e#c00ff00制造 头盔，腰带";
    				else if(g.iTid==99)s+="#e#c00ff00制造 武器，项链";
    				else if(g.iTid==100)s+="#e#c00ff00制造 衣服，靴子";
    				s+="#e等级 "+g.iAtts[0];
    				s+="#e熟练度 "+g.iAtts[1];
    				break;
    			case 101:
    			case 102:
    			case 103:
    			case 104:
    			case 105:
    				if(g.iTid==101)s+="#e#cb48cc8镶嵌部位 头盔,武器#e#c00ff00伤害 +8";
    				else if(g.iTid==102)s+="#e#cb48cc8镶嵌部位 头盔,衣服#e#c00ff00防御 +12";
    				else if(g.iTid==103)s+="#e#cb48cc8镶嵌部位 衣服,腰带#e#c00ff00气血 +40";
    				else if(g.iTid==104)s+="#e#cb48cc8镶嵌部位 腰带,鞋子#e#c00ff00速度 +8";
    				else if(g.iTid==105)s+="#e#cb48cc8镶嵌部位 项链,鞋子#e#c00ff00灵力 +6";
    				s+="#e#cffff00"+g.iAtts[0]+"级";
    				break;
    			case 119://传送符
    				if(g.iAtts[0]==0)s+="#e#c00ff00未定目的地";
    				else
    				{
    					s+="#e#c00ff00剩余使用次数 "+g.iAtts[1];
    					s+="#e#c00ff00"+GmPlay$1.de_map.strValue(g.iAtts[2], 0, 1)+"("+Math.floor(g.iAtts[3]/16)+","+Math.floor(g.iAtts[4]/16)+")";
    				}
    				break;
    			case 154://低级宠物技能书
    			case 155:
    			case 156:
    				s+="#e#c00ff00"+GmPlay$1.de_skill.strValue(g.iAtts[0], 0, 5);
    				s+="#e#cffffff"+GmPlay$1.de_skill.strValue(g.iAtts[0], 0, 3);
    				break;
    			case 162://新手礼包
    				s+="#e#c00ff00等级到达"+g.iAtts[0]+"级可开启";
    				break;
    			case 195://丹方
    			case 328://2
    			case 329://3
    			case 330://4
    			case 331://5
    				sLev="等级："+GameData$1.sBigNum[g.iAtts[0]]+"级";
    				if(g.iAtts[2]>0)
    				{
    					s+="#e#c00ff00"+GmPlay$1.de_goods.strValue(g.iAtts[1], 0, 4);//丹药名字
    					s+="#e#cb48cc8剩余使用次数:"+g.iAtts[2];
    					for(i=3;i<7;i++)
    					{//材料1,2,3
    						if(g.iAtts[i]<=0)break;
    						s+="#e#cffff00配料"+(i-2)+":"+GmPlay$1.de_goods.strValue(g.iAtts[i], 0, 4);
    					}
    				}
    				break;
    //			case 332://店里的丹方
    //			case 333://店里的丹方
    //			case 334://店里的丹方
    //			case 335://店里的丹方
    //			case 336://店里的丹方
    //				s+="#e#cffffff"+GameData.sBigNum[g.iTid-331]+"级";
    //				break;
    			case 342://丹炉
    			case 343:
    			case 344:
    			case 345:
    			case 346:
    				sLev="等级："+GameData$1.sBigNum[g.iTid-341]+"级";
    				if(g.iAtts[1]>0)
    				{
    					s+="#e#cb48cc8剩余使用次数："+g.iAtts[1];
    					if(g.iAtts[2]==0)s+="#e#c00ff00品质：随机";
    					else s+="#e#c00ff00品质："+g.iAtts[2];
    					s+="#e#c00ff00增加炼药成功率："+g.iAtts[3]+"%";
    				}
    				break;
    			case 196://阵书
    				s+="#e#c00ff00"+GameData$1.sZhenName[g.iAtts[0]];
    				break;
    			case 226://玉灵果，体质，魔力，力量，耐力，敏捷
    			case 227://仙露，木，火，金，土，水
    				if(g.iAtts[0]==0)s+="#e#c00ff00属性：木";
    				else if(g.iAtts[0]==1)s+="#e#c00ff00属性：火";
    				else if(g.iAtts[0]==2)s+="#e#c00ff00属性：金";
    				else if(g.iAtts[0]==3)s+="#e#c00ff00属性：土";
    				else if(g.iAtts[0]==4)s+="#e#c00ff00属性：水";
    				break;
    			case 231://0tid
    			case 232://1skillid
    			case 233://2time
    			case 234:
    			case 235:
    				s+="#e#c00ff00卡片类型："+GmPlay$1.de_pet.strValue(g.iAtts[0], 0, 1);//变化类型
    				if(g.iTid==231)s+="#e#c00ff00技能要求：一级变身术";
    				else if(g.iTid==232)s+="#e#c00ff00技能要求：二级变身术";
    				else if(g.iTid==233)s+="#e#c00ff00技能要求：三级变身术";
    				else if(g.iTid==234)s+="#e#c00ff00技能要求：四级变身术";
    				else if(g.iTid==235)s+="#e#c00ff00技能要求：五级变身术";
    				//附加技能，属性影响
    				if(g.iAtts[1]>0)s+="#e#c00ff00附加技能："+GmPlay$1.de_skill.strValue(g.iAtts[1],0,6);
    				if(g.iAtts[3]>0)
    				{//0气血，1灵力，2攻击，3防御，4速度
    					i=(g.iAtts[3]%1000-100);
    					switch((g.iAtts[3]/1000)%10)
    					{
    					case 0://气血
    						s+="#e#c00ff00属性影响："+(i>0?"+"+i:i)+"%气血";
    						break;
    					case 1://灵力
    						s+="#e#c00ff00属性影响："+(i>0?"+"+i:i)+"%灵力";
    						break;
    					case 2://攻击
    						s+="#e#c00ff00属性影响："+(i>0?"+"+i:i)+"%伤害";
    						break;
    					case 3://防御
    						s+="#e#c00ff00属性影响："+(i>0?"+"+i:i)+"%防御";
    						break;
    					case 4://速度
    						s+="#e#c00ff00属性影响："+(i>0?"+"+i:i)+"%速度";
    						break;
    					}
    					
    				}
    				s+="#e#cb48cc8剩余使用次数："+g.iAtts[2];
    				break;
    			case 255://一级种子
    			case 256://2
    			case 257://3
    			case 258://4
    			case 259://5
    				s+="#e#c00ff00种类:"+GmPlay$1.de_grow.strValue(g.iAtts[0], 0, 1);
    				s+="#e#c00ff00等级:"+GmPlay$1.de_grow.strValue(g.iAtts[0], 0, 2);
    				s+="#e#c00ff00品质:"+g.iAtts[1];
    				s+="#e#c00ff00五行:"+GameData$1.sWuXing[g.iAtts[2]];
    				break;
    			case 261://地契
    				if(g.iAtts[0]==0)s+="#e#c00ff00空白地契，可将土地登记其中，便于交易";
    				else
    				{//
    					s+="#e#c00ff00风格:"+MyLand.sLandName[g.iAtts[1]/100];
    					s+="#e#c00ff00风水:"+g.iAtts[2];
    					s+="#e#c00ff00金灵气"+g.iAtts[3]/1000+"#e木灵气"+g.iAtts[3]%1000+"#e水灵气"+g.iAtts[4]/1000+"#e火灵气"+g.iAtts[4]%1000+"#e土灵气"+g.iAtts[5]/1000;
    				}
    				break;
    			case 265:
    				s+="#e#c00ff00可提高一，二级植物的品质";
    				break;
    			case 266://灵石
    			case 267:
    			case 268:
    			case 269:
    			case 270:
    				i=g.iTid-266;
    				s+="#e#c00ff00可提高"+GameData$1._sWXS[i]+"灵石的灵气";
    				s+="#e#c00ff00可降低"+GameData$1._sWXK[i]+"灵石的灵气";
    				break;
    			case 271:
    			case 272:
    			case 273:
    			case 274:
    			case 275:
    				s+="#e#c00ff00"+GameData$1.sWeek[g.iTid-270]+"级果实";
    				s+="#e#c00ff00种类:"+GmPlay$1.de_grow.strValue(g.iAtts[0], 0, 1);
    				s+="#e#c00ff00品质:"+g.iAtts[1];
    				break;
    			case 276://经验丹
    			case 277://高级经验丹
    				s+="#e#c00ff00品质:"+g.iAtts[0];
    				break;
    			case 397://军需锦囊
    				s+="#e#c00ff00打开后获得一个宠物经验丹，赠送2个二级材料";
    				break;
    			case 398://战略奇椟
    				s+="#e#c00ff00打开后获得一个低级人物经验丹，赠送2个七国旗";
    				break;
    			}
    		}
    		var detail=GmPlay$1.de_goods.strValue(g.iTid, -1, 29);//描述//描述在最后
    		if(detail!="-1")s+="#e#c99d9ea"+detail;
    		if((g.iAtts[7]&1)!=0)s+="#e#ca0a0a0系统绑定";
    		
    		s+=GoodsDraw.detail_add;
    		GoodsDraw.iDetailW=320;
    //		GoodsDraw.iDetailX=x-GoodsDraw.iDetailW;
    //		GoodsDraw.iDetailY=y-100;
    //		FormatString.gi().Format(s, GoodsDraw.iDetailW-30, 20);
    		if(s.length>2)
    		{
    			do
    			{
    				//GmPlay.sop(s);
    				var tmp=s.substring(0, 2);
    				//GmPlay.sop(tmp);
    				if(tmp=="#e")
    				{
    					s=s.substring(2, s.length);
    				}
    				else break;
    			}
    			while(s.length>2);
    		}
    		FormatString.gi().FormatEx(s, GoodsDraw.iDetailW-30, 24, 0, 0, 28);
    		GoodsDraw.iDetailH=20+80+10+FormatString.gi().iH+20+mh;
    		
    		if(x<GoodsDraw.iDetailW+20)x+=80;
    		else x=x-GoodsDraw.iDetailW;
    		y=y+40-GoodsDraw.iDetailH/2;
    //		y-=100;
    		if(y<0)y=0;
    		if(y+GoodsDraw.iDetailH>GmConfig$1.SCRH)y=GmConfig$1.SCRH-GoodsDraw.iDetailH;
    		GoodsDraw.iDetailX=x;
    		GoodsDraw.iDetailY=y;
    		
    		DrawMode$1.new_framewatch(x, y, GoodsDraw.iDetailW, GoodsDraw.iDetailH);
    		if(GoodsDraw.new_block==null)GoodsDraw.new_block=GmPlay$1.xani_nui3.InitAnimaWithName("物品格子", null);
    		GoodsDraw.new_block.Draw(x+20, y+20);
    		g.aa.Draw(x+20, y+20);
    		M3DFast$1.gi().DrawTextEx(x+20+80+10, y+20, sName, 0xffffff00, 30, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(x+20+80+10, y+20+32, sType, 0xffffff00, 22, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(x+20+80+10, y+20+56, sLev, 0xffffff00, 22, 101, 1, 1, 0, 0, 0);
    		FormatString.gi().Draw(x+20, y+20+80+10);
    		
    //		var offx=x+20,offy=y+20;
    //		DrawBuffer.gi().ClearBuffer();
    //		if(GoodsDraw.new_block==null)GoodsDraw.new_block=GmPlay.xani_nui3.InitAnimaWithName("物品格子", null);
    //		DrawBuffer.gi().DrawAnima_aa(100, null, offx, offy, GoodsDraw.new_block);
    //		offx+=80+10;
    //		
    //		//如果是装备，强化等级加在后面
    //		DrawBuffer.gi().DrawText(100, 0, offx, offy, sName, 0xffff00, 30);
    		//类型(如果有)
    		//等级(如果有)
    //		String detail=GmPlay.de_goods.strValue(g.iTid, -1, 29);//描述//描述在最后
    //		if(detail!="-1")s+="#e#cffffff"+detail;
    	};
    GoodsDraw.bUseGoods=function()
    	{
    		if(GoodsDraw.bUse)
    		{
    			GoodsDraw.bUse=false;
    			return GoodsDraw.lastlock;
    		}
    		else return GoodsDraw.lastlock;
    	};
    GoodsDraw.iDetailX,GoodsDraw.iDetailY;
    GoodsDraw.iDetailW,GoodsDraw.iDetailH;
    //GoodsDraw.Draw_Detail(Goods g, x, y)
    //	{
    //		GoodsDraw.bDrawing=true;
    //		if(g==null)g=GoodsDraw.lockgoods;
    //		if(x==-1)x=GoodsDraw.iLockX;
    //		if(y==-1)y=GoodsDraw.iLockY;
    //		String s=GetGoodsDetail(g);
    //		GoodsDraw.iDetailW=270;
    //		FormatString.gi().Format(s, GoodsDraw.iDetailW-70, 20);
    //
    //		GoodsDraw.iDetailH=FormatString.gi().iH;
    //		if(GoodsDraw.iDetailH<100)GoodsDraw.iDetailH=100;
    //
    //		GoodsDraw.iDetailX=x-GoodsDraw.iDetailW;
    //		GoodsDraw.iDetailY=y-GoodsDraw.iDetailH/2;
    //
    //		if(GoodsDraw.iDetailX<0)GoodsDraw.iDetailX=x+60+10;
    //		if(GoodsDraw.iDetailY<5)GoodsDraw.iDetailY=5;
    //		DrawMode.Frame1_BR(GoodsDraw.iDetailX-5, GoodsDraw.iDetailY-5, GoodsDraw.iDetailW+10, GoodsDraw.iDetailH+10);
    //		GmPlay.xani_goods.DrawAnima_aa(GoodsDraw.iDetailX, GoodsDraw.iDetailY, g.aa);
    //		FormatString.gi().Draw(GoodsDraw.iDetailX+65, GoodsDraw.iDetailY);
    //	}
    //GoodsDraw.Draw_Detailex(Goods g, x, y)
    //	{
    //		GoodsDraw.bDrawing=true;
    //		if(g==null)g=GoodsDraw.lockgoods;
    //		if(x==-1)x=GoodsDraw.iLockX;
    //		if(y==-1)y=GoodsDraw.iLockY;
    //		String s=GetGoodsDetail(g);
    //		GoodsDraw.iDetailW=270;
    //		FormatString.gi().Format(s, GoodsDraw.iDetailW-70, 20);
    //
    //		GoodsDraw.iDetailH=FormatString.gi().iH+60;
    //		if(GoodsDraw.iDetailH<100)GoodsDraw.iDetailH=100;
    //
    //		GoodsDraw.iDetailX=x-GoodsDraw.iDetailW;
    //		GoodsDraw.iDetailY=y-GoodsDraw.iDetailH/2;
    //
    //		if(GoodsDraw.iDetailX<0)GoodsDraw.iDetailX=x+60+10;
    //		if(GoodsDraw.iDetailY<5)GoodsDraw.iDetailY=5;
    //		DrawMode.Frame1_BR(GoodsDraw.iDetailX-5, GoodsDraw.iDetailY-5, GoodsDraw.iDetailW+10, GoodsDraw.iDetailH+10);
    //		GmPlay.xani_goods.DrawAnima_aa(GoodsDraw.iDetailX, GoodsDraw.iDetailY, g.aa);
    //		FormatString.gi().Draw(GoodsDraw.iDetailX+65, GoodsDraw.iDetailY);
    //	}
    	/*
    GoodsDraw.GetGoodsDetail(Goods g)
    	{
    		var i,m,n;
    		var type;
    		String s;
    		
    		s="#cffff00"+GmPlay.de_goods.strValue(g.iTid, -1, 4);//物品名称
    		String detail=GmPlay.de_goods.strValue(g.iTid, -1, 29);//描述
    		if(detail!="-1")s+="#e#cffffff"+detail;
    		
    		type=GmPlay.de_goods.intValue(g.iTid, -1, 16);
    		if(type!=-1)
    		{//-----------------------------------------------------------------------------------是装备
    			s+="#e#cffff00等级 "+GmPlay.de_goods.strValue(g.iTid, -1, 9);//穿戴等级要求
    			var add1,add2;
    			var bs_base={8,12,40,8,6};//攻，防，血，速，灵
    			var bs_add={0,0,0,0,0};
    			add1=g.iAtts[0]/10000;//基本属性加成
    			add2=g.iAtts[0]%10000;
    			i=g.iAtts[2]/10000;//宝石1加成
    			if(i>0)bs_add[i/1000]=bs_base[i/1000]*(i%1000);
    			i=g.iAtts[2]%10000;//宝石2加成
    			if(i>0)bs_add[i/1000]=bs_base[i/1000]*(i%1000);
    			switch(type)
    			{
    			case 0://头盔
    //				s+="#e#cffff00头盔";
    				s+="#e#cffff00防御 +"+(GmPlay.de_goods.intValue(g.iTid, -1, 21)+add1+bs_add[1]);
    				s+="#e#cffff00魔法 +"+(GmPlay.de_goods.intValue(g.iTid, -1, 22)+add2);
    				bs_add[1]=0;
    				break;
    			case 1://饰品
    //				s+="#e#cffff00饰品";
    				s+="#e#cffff00灵力 +"+(GmPlay.de_goods.intValue(g.iTid, -1, 23)+add2+bs_add[4]);
    				bs_add[4]=0;
    				break;
    			case 2://武器
    //				s+="#e#cffff00武器";
    				s+="#e#cffff00伤害 +"+(GmPlay.de_goods.intValue(g.iTid, -1, 3)+add2+bs_add[0]);
    				bs_add[0]=0;
    				break;
    			case 3://铠甲
    //				s+="#e#cffff00铠甲";
    				s+="#e#cffff00防御 +"+(GmPlay.de_goods.intValue(g.iTid, -1, 21)+add2+bs_add[1]);
    				bs_add[1]=0;
    				break;
    			case 4://腰带
    //				s+="#e#cffff00腰带";
    				s+="#e#cffff00防御 +"+(GmPlay.de_goods.intValue(g.iTid, -1, 21)+add1+bs_add[1]);
    				s+="#e#cffff00气血 +"+(GmPlay.de_goods.intValue(g.iTid, -1, 24)+add2+bs_add[2]);
    				bs_add[1]=0;
    				bs_add[2]=0;
    				break;
    			case 5://鞋子
    //				s+="#e#cffff00鞋子";
    				s+="#e#cffff00防御 +"+(GmPlay.de_goods.intValue(g.iTid, -1, 21)+add1+bs_add[1]);
    				s+="#e#cffff00速度 +"+(GmPlay.de_goods.intValue(g.iTid, -1, 25)+add2+bs_add[3]);
    				bs_add[1]=0;
    				bs_add[3]=0;
    				break;
    			}
    			if(bs_add[0]>0)s+="#e伤害 +"+bs_add[0];
    			if(bs_add[1]>0)s+="#e防御 +"+bs_add[1];
    			if(bs_add[2]>0)s+="#e气血 +"+bs_add[2];
    			if(bs_add[3]>0)s+="#e速度 +"+bs_add[3];
    			if(bs_add[4]>0)s+="#e灵力 +"+bs_add[4];
    			
    			add1=g.iAtts[1]/10000;
    			add2=g.iAtts[1]%10000;
    			if(add1>0)
    			{
    				if(add1/1000==0)s+="#e#c00ff00体质 +"+add1%1000;
    				else if(add1/1000==1)s+="#e#c00ff00法力 +"+add1%1000;
    				else if(add1/1000==2)s+="#e#c00ff00力量 +"+add1%1000;
    				else if(add1/1000==3)s+="#e#c00ff00耐力 +"+add1%1000;
    				else if(add1/1000==4)s+="#e#c00ff00敏捷 +"+add1%1000;
    			}
    			if(add2>0)
    			{
    				if(add1<=0)s+="#e#c00ff00";
    				else s+=" ";
    				if(add2/1000==0)s+="体质 +"+add2%1000;
    				else if(add2/1000==1)s+="法力 +"+add2%1000;
    				else if(add2/1000==2)s+="力量 +"+add2%1000;
    				else if(add2/1000==3)s+="耐力 +"+add2%1000;
    				else if(add2/1000==4)s+="敏捷 +"+add2%1000;
    			}
    //			i=g.iAtts[2]/10000;//宝石1加成
    //			if(i>0)s+="#e"+GmPlay.de_goods.strValue(i/1000+101, 0, 4)+i%1000+"级";
    //			i=g.iAtts[2]%10000;//宝石2加成
    //			if(i>0)s+="#e"+GmPlay.de_goods.strValue(i/1000+101, 0, 4)+i%1000+"级";
    			if(g.iAtts[4]>0)
    			{//特技特效
    				i=(g.iAtts[4]>>20)&0x3ff;//无级别简易
    				if(i>0)
    				{
    					s+="#e#cff8020"+GmPlay.de_skill.strValue(i, 0, 6);//技能名称
    				}
    				i=(g.iAtts[4]>>10)&0x3ff;//特效
    				if(i>0)
    				{
    					s+="#e#c80c0ff特效 : "+GmPlay.de_skill.strValue(i, 0, 6);//技能名称
    				}
    				i=g.iAtts[4]&0x3ff;//特技
    				if(i>0)
    				{
    					s+="#e#c80c0ff特技 : "+GmPlay.de_skill.strValue(i, 0, 6);//技能名称
    				}
    			}
    			
    			m=g.iAtts[2]/10000;
    			n=g.iAtts[2]%10000;
    			if(m>0 || n>0)
    			{//
    				s+="#e#cb48cc8镶嵌等级 "+(m%1000+n%1000);
    				s+="#e已镶嵌 ";
    				if(m>0)s+=GmPlay.de_goods.strValue(m/1000+101, 0, 4);
    				if(n>0)s+=","+GmPlay.de_goods.strValue(n/1000+101, 0, 4);
    			}

    			i=g.iAtts[3]/10000;
    			if(i>0)s+="#e#c80c0ff强化等级 "+i;
    					//攻，防，血，速，灵
    			
    			s+="#e#cffffff耐久度"+(g.iAtts[5]%100000)/20+"/"+g.iAtts[5]/100000;
    		}
    		type=GmPlay.de_goods.intValue(g.iTid, -1, 31);
    		if(type>0)
    		{
    			if(type==1)s+="#e#cffff00一级材料";
    			if(type==2)s+="#e#cffff00二级材料";
    			if(type==3)s+="#e#cffff00三级材料";
    		}
    		type=GmPlay.de_goods.intValue(g.iTid, -1, 27);
    		if(type!=-1)
    		{//----------------------------------------------------------------------------------是草药
    			s+="#e#cffff00"+type+"级草药";
    			var restorehp=GmPlay.de_goods.varValue(g.iTid, -1, 1);
    			var restoremp=GmPlay.de_goods.varValue(g.iTid, -1, 2);
    			if(restorehp!=-1)s+="#e#c00ff00恢复气血"+restorehp;
    			if(restoremp!=-1)s+="#e#c00ff00恢复魔法"+restoremp;
    			if(type==3)
    			{
    				switch(g.iTid)
    				{
    				case 85://黑莲花
    					s+="#e#c00ff00随机增加5~20点临时愤怒(进入战斗时恢复)";
    					s+="#e#cb48cc8效果持续24小时";
    					break;
    				case 86://七星草	+速度
    					s+="#e#c00ff00随机增加5~20点敏捷";
    					s+="#e#cb48cc8效果持续24小时";
    					break;
    				case 87://://幻心草
    					s+="#e#c00ff00随机增加5%~10%治疗能力";
    					s+="#e#cb48cc8效果持续24小时";
    					break;
    				case 88://://千金藤	+力量
    					s+="#e#c00ff00随机增加5~20点力量";
    					s+="#e#cb48cc8效果持续24小时";
    					break;
    				case 89://龙葵花	+耐力
    					s+="#e#c00ff00随机增加5~20点耐力";
    					s+="#e#cb48cc8效果持续24小时";
    					break;
    				case 90://曼陀罗	
    					s+="#e#c00ff00随机增加5%~20%固定伤害";
    					s+="#e#cb48cc8效果持续24小时";
    					break;
    				case 91://九香虫	
    					s+="#e#c00ff00随机增加5%~10%物理和法术命中";
    					s+="#e#cb48cc8效果持续24小时";
    					break;
    				case 92://凤尾草		+魔力
    					s+="#e#c00ff00随机增加5~20点魔力";
    					s+="#e#cb48cc8效果持续24小时";
    					break;
    				case 93://龙胆	+体质
    					s+="#e#c00ff00随机增加5~20点体质";
    					s+="#e#cb48cc8效果持续24小时";
    					break;
    				case 94://辛夷花
    					s+="#e#c00ff00随机增加1%~5%物理和法术暴击";
    					s+="#e#cb48cc8效果持续24小时";
    					break;
    				}
    			}
    		}
    		type=GmPlay.de_goods.intValue(g.iTid, -1, 30);
    		if(type!=-1)
    		{//-------------------------------------------------------------------------------是道具
    			switch(g.iTid)
    			{
    			case 96://宝图
    			case 230://高级宝图
    				s+="#e#c00ff00"+GmPlay.de_map.strValue(g.iAtts[0], 0, 1)+"("+g.iAtts[1]/16+","+g.iAtts[2]/16+")";
    				break;
    			case 97://装备制造图纸，显示
    				s+="#e#cffff00等级 "+GmPlay.de_goods.intValue(g.iAtts[0], -1, 9);//穿戴等级要求
    				i=GmPlay.de_goods.intValue(g.iAtts[0], -1, 16);
    				if(i==0)s+="#e种类 头盔";
    				else if(i==1)s+="#e种类 项链";
    				else if(i==2)
    				{//武器
    					i=GmPlay.de_goods.intValue(g.iAtts[0], -1, 19);
    					if(i==0)s+="#e种类 剑";
    					else if(i==1)s+="#e种类 刀";
    					else if(i==2)s+="#e种类 枪";
    				}
    				else if(i==3)
    				{//衣服
    					i=GmPlay.de_goods.intValue(g.iAtts[0], -1, 20);
    					if(i==0)s+="#e种类 女衣";
    					else if(i==1)s+="#e种类 男衣";
    				}
    				else if(i==4)s+="#e种类 腰带";
    				else if(i==5)s+="#e种类 靴子";
    				/////////////打造所需材料
    //				s+="#e所需材料:";
    				for(i=1;i<6;i++)
    				{
    					if(g.iAtts[i]==0)break;
    					s+="#e材料"+i+" "+GmPlay.de_goods.strValue(g.iAtts[i], -1, 4);
    				}
    				break;
    			case 98://显示等级，熟练度
    			case 99:
    			case 100:
    				if(g.iTid==98)s+="#e#c00ff00制造 头盔，腰带";
    				else if(g.iTid==99)s+="#e#c00ff00制造 武器，项链";
    				else if(g.iTid==100)s+="#e#c00ff00制造 衣服，靴子";
    				s+="#e等级 "+g.iAtts[0];
    				s+="#e熟练度 "+g.iAtts[1];
    				break;
    			case 101:
    			case 102:
    			case 103:
    			case 104:
    			case 105:
    				if(g.iTid==101)s+="#e#cb48cc8镶嵌部位 头盔,武器#e#c00ff00伤害 +8";
    				else if(g.iTid==102)s+="#e#cb48cc8镶嵌部位 头盔,衣服#e#c00ff00防御 +12";
    				else if(g.iTid==103)s+="#e#cb48cc8镶嵌部位 衣服,腰带#e#c00ff00气血 +40";
    				else if(g.iTid==104)s+="#e#cb48cc8镶嵌部位 腰带,鞋子#e#c00ff00速度 +8";
    				else if(g.iTid==105)s+="#e#cb48cc8镶嵌部位 项链,鞋子#e#c00ff00灵力 +6";
    				s+="#e#cffff00"+g.iAtts[0]+"级";
    				break;
    			case 119://传送符
    				if(g.iAtts[0]==0)s+="#e#c00ff00未定目的地";
    				else
    				{
    					s+="#e#c00ff00剩余使用次数 "+g.iAtts[1];
    					s+="#e#c00ff00"+GmPlay.de_map.strValue(g.iAtts[2], 0, 1)+"("+g.iAtts[3]/16+","+g.iAtts[4]/16+")";
    				}
    				break;
    			case 154://低级宠物技能书
    			case 155:
    			case 156:
    				s+="#e#c00ff00"+GmPlay.de_skill.strValue(g.iAtts[0], 0, 5);
    				s+="#e#cffffff"+GmPlay.de_skill.strValue(g.iAtts[0], 0, 3);
    				break;
    			case 162://新手礼包
    				s+="#e#c00ff00等级到达"+g.iAtts[0]+"级可开启";
    				break;
    			case 195://丹方
    			case 328://2
    			case 329://3
    			case 330://4
    			case 331://5
    				if(g.iAtts[0]==1)s+="#e#cffffff一级";
    				if(g.iAtts[1]>0)s+="#e#c00ff00"+GmPlay.de_goods.strValue(g.iAtts[1], 0, 4);//丹药名字
    				s+="#e#cb48cc8剩余使用次数:"+g.iAtts[2];
    //				s+="#e#cff00ff配方:";
    				for(i=3;i<7;i++)
    				{//材料1,2,3
    					if(g.iAtts[i]<=0)break;
    //					if(i>3)s+=",";
    //					s+=GmPlay.de_goods.strValue(g.iAtts[i], 0, 4);
    					s+="#e#cffff00配料"+(i-2)+":"+GmPlay.de_goods.strValue(g.iAtts[i], 0, 4);
    				}
    				break;
    			case 332://店里的丹方
    				s+="#e#cffffff一级";
    				break;
    			case 333://店里的丹方
    				s+="#e#cffffff二级";
    				break;
    			case 334://店里的丹方
    				s+="#e#cffffff三级";
    				break;
    			case 335://店里的丹方
    				s+="#e#cffffff四级";
    				break;
    			case 336://店里的丹方
    				s+="#e#cffffff五级";
    				break;
    			case 196://阵书
    				s+="#e#c00ff00"+GameData.sZhenName[g.iAtts[0]];
    				break;
    			case 226://玉灵果，体质，魔力，力量，耐力，敏捷
    			case 227://仙露，木，火，金，土，水
    				if(g.iAtts[0]==0)s+="#e#c00ff00属性：木";
    				else if(g.iAtts[0]==1)s+="#e#c00ff00属性：火";
    				else if(g.iAtts[0]==2)s+="#e#c00ff00属性：金";
    				else if(g.iAtts[0]==3)s+="#e#c00ff00属性：土";
    				else if(g.iAtts[0]==4)s+="#e#c00ff00属性：水";
    				break;
    			case 231://0tid
    			case 232://1skillid
    			case 233://2time
    			case 234:
    			case 235:
    				s+="#e#c00ff00卡片类型："+GmPlay.de_pet.strValue(g.iAtts[0], 0, 1);//变化类型
    				if(g.iTid==231)s+="#e#c00ff00技能要求：一级变身术";
    				else if(g.iTid==232)s+="#e#c00ff00技能要求：二级变身术";
    				else if(g.iTid==233)s+="#e#c00ff00技能要求：三级变身术";
    				else if(g.iTid==234)s+="#e#c00ff00技能要求：四级变身术";
    				else if(g.iTid==235)s+="#e#c00ff00技能要求：五级变身术";
    				//附加技能，属性影响
    				if(g.iAtts[1]>0)s+="#e#c00ff00附加技能："+GmPlay.de_skill.strValue(g.iAtts[1],0,6);
    				if(g.iAtts[3]>0)
    				{//0气血，1灵力，2攻击，3防御，4速度
    					i=(g.iAtts[3]%1000-100);
    					switch((g.iAtts[3]/1000)%10)
    					{
    					case 0://气血
    						s+="#e#c00ff00属性影响："+(i>0?"+"+i:i)+"%气血";
    						break;
    					case 1://灵力
    						s+="#e#c00ff00属性影响："+(i>0?"+"+i:i)+"%灵力";
    						break;
    					case 2://攻击
    						s+="#e#c00ff00属性影响："+(i>0?"+"+i:i)+"%伤害";
    						break;
    					case 3://防御
    						s+="#e#c00ff00属性影响："+(i>0?"+"+i:i)+"%防御";
    						break;
    					case 4://速度
    						s+="#e#c00ff00属性影响："+(i>0?"+"+i:i)+"%速度";
    						break;
    					}
    					
    				}
    				s+="#e#cb48cc8剩余使用次数："+g.iAtts[2];
    				break;
    			case 255://一级种子
    			case 256://2
    			case 257://3
    			case 258://4
    			case 259://5
    				s+="#e#c00ff00种类:"+GmPlay.de_grow.strValue(g.iAtts[0], 0, 1);
    				s+="#e#c00ff00等级:"+GmPlay.de_grow.strValue(g.iAtts[0], 0, 2);
    				s+="#e#c00ff00品质:"+g.iAtts[1];
    				s+="#e#c00ff00五行:"+GameData.sWuXing[g.iAtts[2]];
    				break;
    			case 261://地契
    				if(g.iAtts[0]==0)s+="#e#c00ff00空白地契，可将土地登记其中，便于交易";
    				else
    				{//
    					s+="#e#c00ff00风格:"+MyLand.sLandName[g.iAtts[1]/100];
    					s+="#e#c00ff00风水:"+g.iAtts[2];
    					s+="#e#c00ff00金灵气"+g.iAtts[3]/1000+"#e木灵气"+g.iAtts[3]%1000+"#e水灵气"+g.iAtts[4]/1000+"#e火灵气"+g.iAtts[4]%1000+"#e土灵气"+g.iAtts[5]/1000;
    				}
    				break;
    			case 266://灵石
    			case 267:
    			case 268:
    			case 269:
    			case 270:
    				i=g.iTid-266;
    				s+="#e#c00ff00可提高"+GameData._sWXS[i]+"灵石的灵气";
    				s+="#e#c00ff00可降低"+GameData._sWXK[i]+"灵石的灵气";
    				break;
    			case 271:
    			case 272:
    			case 273:
    			case 274:
    			case 275:
    				s+="#e#c00ff00"+GameData.sWeek[g.iTid-270]+"级果实";
    				s+="#e#c00ff00种类:"+GmPlay.de_grow.strValue(g.iAtts[0], 0, 1);
    				s+="#e#c00ff00品质:"+g.iAtts[1];
    				break;
    			case 276://经验丹
    			case 277://高级经验丹
    				s+="#e#c00ff00品质:"+g.iAtts[0];
    				break;
    			}
    		}
    		GmPlay.sop("tid="+g.iTid);
    		type=GmPlay.de_goods.intValue(g.iTid, -1, 33);
    		if(type!=-1)
    		{//重置人物属性点
    			if(type==1)
    			{
    				s+="#e#cffff00一级丹药";
    				s+="#e#c00ff00品质:"+g.iAtts[0];
    			}
    			if(type==2)s+="#e#cffff00二级丹药";
    			if(type==3)s+="#e#cffff00三级丹药";
    			if(type==4)s+="#e#cffff00四级丹药";
    			GmPlay.sop("tid="+g.iTid);
    			switch(g.iTid)
    			{
    			case 165://安神丸+血蓝1000
    			case 302:
    				s+="#e#cffffff恢复气血"+(g.iAtts[0]*6+300);
    				s+="#e#cffffff恢复魔法"+(g.iAtts[0]*2+100);
    				break;
    			case 166://小还丹+血1000
    			case 303:
    				s+="#e#cffffff恢复气血"+(g.iAtts[0]*9+450);
    				break;
    			case 167://大还丹+血2000
    			case 311:
    				s+="#e#cffffff恢复气血"+(g.iAtts[0]*12+600);
    				break;
    			case 168://护心丸+蓝1000
    			case 310:
    				s+="#e#cffffff恢复魔法"+(g.iAtts[0]*3+150);
    				break;
    			case 169://补心丸+蓝2000
    			case 309:
    				s+="#e#cffffff恢复魔法"+(g.iAtts[0]*5+200);
    				break;
    			case 170://天王补心丹+血蓝2000
    			case 308:
    				s+="#e#cffffff恢复气血"+(g.iAtts[0]*9+450);
    				s+="#e#cffffff恢复魔法"+(g.iAtts[0]*3+150);
    				break;
    			case 171://舒筋活骨散解封1000
    			case 307:
    				s+="#e#cffffff解封并恢复气血"+(g.iAtts[0]*2+100);
    				break;
    			case 172://天仙玉露解封2000
    			case 306:
    				s+="#e#cffffff解封并恢复气血"+(g.iAtts[0]*6+300);
    				break;
    			case 173://还魂丹救活1000
    			case 305:
    				s+="#e#cffffff复活并恢复气血"+(g.iAtts[0]*2+100);
    				break;
    			case 174://九转还魂丹救活2000
    			case 304:
    				s+="#e#cffffff复活并恢复气血"+(g.iAtts[0]*6+300);
    				break;
    				///~~~~~~~~~~~~~~~~~二级丹药
    			case 175://		金乌丹		攻
    				s+="#e#cffffff增加坐骑力量资质";
    				break;
    			case 176://		风神丹		速
    				s+="#e#cffffff增加坐骑敏捷资质";
    				break;
    			case 177://		火灵丹		魔
    				s+="#e#cffffff增加坐骑法力资质";
    				break;
    			case 178://		培元丹		防
    				s+="#e#cffffff增加坐骑耐力资质";
    				break;
    			case 179://		赤血丹		体
    				s+="#e#cffffff增加坐骑体质资质";
    				break;
    			case 180://		青霜丹	
    				s+="#e#cffffff增加200点宠物寿命";
    				break;
    			case 181://		养魂丹		灵气
    				s+="#e#cffffff恢复坐骑灵气";
    				break;
    			case 182://		合气丹		成长
    				s+="#e#cffffff增加坐骑成长";
    				break;
    			case 183://		地灵丹		
    				s+="#e#cffffff使用后立即恢复50点体力，3小时内恢复体力速度翻倍";
    				break;
    			case 184://		天灵丹	
    				s+="#e#cffffff使用后立即恢复人物等级*4+50体力值";
    				break;

    			case 191://涅盘丹
    				s+="#e#c00ff00重置人物属性点";
    				break;
    			}
    		}
    		type=GmPlay.de_goods.intValue(g.iTid, -1, 34);
    		if(type!=-1)
    		{//烹饪
    			switch(g.iTid)
    			{
    			case 197://艾窝窝
    				s+="#e#c00ff00增加宠物寿命=品质*2，有几率被噎住降低资质";
    				break;
    			case 198://三丁包子
    				//漫游恢复
    				s+="#e#c00ff00使用后增加愤怒=15，只能在漫游中使用";
    				break;
    			case 199://双塔鱼
    				s+="#e#c00ff00恢复自身愤怒=品质*1.2，减少自身防御=品质*1，只能在战斗中使用";
    				break;
    			case 200://粉蒸牛肉
    				s+="#e#c00ff00增加宠物寿命=品质/2";
    				break;
    			case 201://赖汤圆
    				s+="#e#c00ff00增加宠物寿命=品质*2，有几率被噎住降低资质";
    				break;
    			case 202://臭豆腐
    				s+="#e#c00ff00使用后增加愤怒=15，只能在战斗中使用";
    				break;
    			case 203://竹简饭
    				s+="#e#c00ff00使用后增加愤怒=品质*0.5，只能在战斗中使用";
    				break;
    			case 204://清汤鱼圆
    				s+="#e#c00ff00使用后增加愤怒=品质*0.8，附加中毒状态，只能在战斗中使用";
    				break;
    			case 205://蛇胆酒
    				s+="#e#c00ff00使用后增加愤怒=品质*1，附加疯狂状态3~4回合，只能在战斗中使用";
    				break;
    			case 206://烤肉
    				s+="#e#c00ff00使用后增加愤怒=品质/2，只能在漫游中使用";
    				break;
    			}
    			s+="#e#cffffff品质"+g.iAtts[0];
    		}
    		if((g.iAtts[7]&1)!=0)s+="#e#ca0a0a0系统绑定";
    		return s;
    	}
    */

    class LearnPetSkill extends BaseClass{
    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=430+60;
    		this.iH=30+30+20+345+5+52+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_learn=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_learn.InitButton("按钮1_110");
    		this.btn_learn.sName="学习";
    		this.btn_learn.Move(this.iX+this.iW-110-30, this.iY+this.iH-52-30, 110, 52);
    		
    		this.lockgoods=null;
    	}

    	Draw()
    	{
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		M3DFast$1.gi().DrawTextEx(this.iX+30, this.iY+30, "选择宠物技能书", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		
    		GoodsDraw.new_DrawGoods(this.iX+30, this.iY+30+30+15, MyGoods.gi().goods[2], null, null);

    		if(this.lockgoods!=null)
    		{
    			GoodsDraw.new_DrawRect(this.iX+30, this.iY+30+30+15, MyGoods.gi().goods[2], this.lockgoods, 0);
    //			GoodsDraw.Draw_Rect(this.iX+20, this.iY+20, MyGoods.gi().goods[2], this.lockgoods, 1);
    			
    			if(this.lockgoods.iTid==154 || this.lockgoods.iTid==155 || this.lockgoods.iTid==156)
    			{
    				M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+this.iH-30-52/2,"学习:"+GmPlay$1.de_skill.strValue(this.lockgoods.iAtts[0], 0, 6), 0xff000000, 30, 101, 1, 1, 0, 0, -2);
    				this.btn_learn.Draw();
    			}
    //			else M3DFast.gi().DrawTextEx(this.iX+20, this.iY+this.iH-40, "选择宠物技能书", 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    		}
    //		else M3DFast.gi().DrawTextEx(this.iX+20, this.iY+this.iH-40, "选择宠物技能书", 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    		

    		
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.lockgoods!=null)
    		{
    			if(this.lockgoods.iTid==154 || this.lockgoods.iTid==155 || this.lockgoods.iTid==156)
    			{
    				if(this.btn_learn.ProcTouch(msg, x, y))
    				{
    					if(this.btn_learn.bCheck())
    					{
    						GmProtocol$1.gi().s_LearnPetSkill(this.lpet.iPid, this.lockgoods.iGid);
    						XStat$1.gi().PopStat(1);
    					}
    					return true;
    				}
    			}
    		}
    		this.lockgoods=GoodsDraw.new_LockGoods(x, y, this.iX+30, this.iY+30+30+15, MyGoods.gi().goods[2], msg);
    		GoodsDraw.NoMove();
    //		if(this.lockgoods.iTid==154 || this.lockgoods.iTid==155 || this.lockgoods.iTid==156);
    //		else
    		{
    //			this.lockgoods=null;
    		}
    		
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    		}
    		return false;
    	}

    }
    LearnPetSkill.Open=function( p)
    {
    	XStat$1.gi().PushStat(XStat$1.GS_LEARNPETSKILL);
    	((XStat$1.gi().LastStat(0))).lpet=p;
    };

    class WashPet extends BaseClass{
    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=200;
    		this.iH=MyPets.mp.iPetCount*24+40+50;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_selectpet=new XButton(GmPlay$1.xani_ui);
    		this.btn_selectpet.InitButton("统一中按钮2");
    		this.btn_selectpet.sName="选择";
    		this.btn_selectpet.Move(this.iX+this.iW-70-20, this.iY+this.iH-40-20, 70, 40);
    		
    		this.iSelectPoint=-1;
    	}


    	
    	Draw()
    	{
    		var i,offx,offy;
    		DrawMode$1.Frame2_MD(this.iX, this.iY, this.iW, this.iH);
    		
    		for(i=0;i<MyPets.mp.iPetCount;i++)
    		{
    			offx=this.iX+20;
    			offy=this.iY+20+i*24;
    			if(this.iSelectPoint==i)
    			{
    				this.pm3f.FillRect_2D(offx,offy, offx+(this.iW-40), offy+24, 0xff0000ff);
    				this.pm3f.DrawTextEx(offx,offy+12, MyPets.mp.pets[i].sName, 0xffffffff, 20, 101, 1, 1, 0, 0, -2);
    			}
    			else this.pm3f.DrawTextEx(offx,offy+12, MyPets.mp.pets[i].sName, 0xff000000, 20, 101, 1, 1, 0, 0, -2);
    		}
    		if(this.iSelectPoint>=0)this.btn_selectpet.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<MyPets.mp.iPetCount;i++)
    		{
    			if(XDefine$1.bInRect(x, y, this.iX+20, this.iY+20+i*24, this.iW-40, 24))
    			{
    				this.iSelectPoint=i;
    			}
    		}
    		if(this.iSelectPoint>=0)
    		{
    			if(this.btn_selectpet.ProcTouch(msg, x, y))
    			{
    				if(this.btn_selectpet.bCheck())
    				{
    					GmProtocol$1.gi().s_WashPet(MyPets.mp.pets[this.iSelectPoint].iPid, this.lockgoods.iGid);
    					XStat$1.gi().PopStat(1);
    				}
    				return true;
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return false;
    	}

    }
    WashPet.Open=function( g)
    {
    	XStat$1.gi().PushStat(XStat$1.GS_WASHPET);
    	((XStat$1.gi().LastStat(0))).lockgoods=g;
    };

    class PetEat extends BaseClass{

    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=430+60;
    		this.iH=30+30+20+345+5+52+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_learn=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_learn.InitButton("按钮1_110");
    		this.btn_learn.sName="食用";
    		this.btn_learn.Move(this.iX+this.iW-110-30, this.iY+this.iH-52-30, 110, 52);
    		
    		this.lockgoods=null;
    	}

    	Draw()
    	{//430
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		M3DFast$1.gi().DrawTextEx(this.iX+30, this.iY+30, "选择仙露，仙桃，丹药或烹饪", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		
    		GoodsDraw.new_DrawGoods(this.iX+30, this.iY+30+30+15, MyGoods.gi().goods[2], null, null);
    		
    //		M3DFast.gi().DrawTextEx(this.iX+30, this.iY+this.iH-40-30, "宠物:"+this.lpet.sName+"("+GmPlay.de_pet.strValue(this.lpet.iTid, 0, 1)+")", 0xff000000, 20, 101, 1, 1, 0, 0, 0);

    		if(this.lockgoods!=null)
    		{
    			GoodsDraw.new_DrawRect(this.iX+30, this.iY+30+30+15, MyGoods.gi().goods[2], this.lockgoods, 0);
    			
    //			if(this.lockgoods.iTid==154 || this.lockgoods.iTid==155 || this.lockgoods.iTid==156)
    			{
    //				M3DFast.gi().DrawTextEx(this.iX+20, this.iY+this.iH-40,"食用:"+GmPlay.de_goods.strValue(this.lockgoods.iTid, 0, 4), 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    				this.btn_learn.Draw();
    			}
    //			else M3DFast.gi().DrawTextEx(this.iX+20, this.iY+this.iH-40, "选择烹饪或药品", 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    		}
    //		else M3DFast.gi().DrawTextEx(this.iX+20, this.iY+this.iH-40, "选择烹饪或药品", 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    //		M3DFast.gi().DrawTextEx(this.iX+20, this.iY+this.iH-30-52/2, "选择烹饪或药品", 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    		
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.lockgoods!=null)
    		{
    //			if(this.lockgoods.iTid==154 || this.lockgoods.iTid==155 || this.lockgoods.iTid==156)
    			{
    				if(this.btn_learn.ProcTouch(msg, x, y))
    				{
    					if(this.btn_learn.bCheck())
    					{
    						GmProtocol$1.gi().s_LearnPetSkill(this.lpet.iPid, this.lockgoods.iGid);
    						XStat$1.gi().PopStat(1);
    					}
    					return true;
    				}
    			}
    		}
    		this.lockgoods=GoodsDraw.new_LockGoods(x, y, this.iX+30, this.iY+30+30+15, MyGoods.gi().goods[2], msg);
    		GoodsDraw.NoMove();
    //		if(this.lockgoods.iTid==154 || this.lockgoods.iTid==155 || this.lockgoods.iTid==156);
    //		else
    		{
    //			this.lockgoods=null;
    		}
    		
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    		}
    		return false;
    	}

    }
    PetEat.Open=function( p)
    {
    	XStat$1.gi().PushStat(XStat$1.GS_PETEAT);
    	((XStat$1.gi().LastStat(0))).lpet=p;
    };

    class Pool {
        constructor(type) {
            this.func = type;
            this.pool = [];
        }

        clear() {
            this.pool = [];
        }

        size() {
            return this.pool.length;
        }

        get() {
            if (this.pool.length) {
                return this.pool.shift();
            } else {
                return new this.func();
            }
        }

        put(obj) {
            if (obj && this.pool.indexOf(obj) < 0) {
                this.pool.push(obj);
            }
        }
    }

    class CallbackInfo {
        constructor() {
            this.reset();
        }

        reset() {
            this.callback = undefined;
            this.target = undefined;
            this.once = false;
        }
    }

    class EventManager {
        constructor() {
            this.pool = new Pool(CallbackInfo);
            this.listeners = {};
        }

        _on(id, callback, target) {
            let info = this.pool.get();
            info.callback = callback;
            info.target = target;
            info.once = false;
            this._off(info.target, id);
            this.listeners[id].push(info);
        }

        _off(target, id) {
            let infos = this.listeners[id];
            if (!infos) return;
            for (let i = infos.length - 1; i >= 0; i--) {
                if (infos[i].target === target) {
                    let info = infos.splice(i, 1)[0];
                    info.reset();
                    this.pool.put(info);
                }
            }
        }

        _once(id, callback, target) {
            let info = this.pool.get();
            info.callback = callback;
            info.target = target;
            info.once = true;
            this._off(info.target, id);
            this.listeners[id].push(info);
        }

        _emit(id, ...args) {
            let infos = this.listeners[id].filter(info => info.callback && info.target);
            for (let info of infos) {
                info.callback.call(info.target, ...args);
                if (info.once) {
                    this._off(info.target, id);
                }
            }
        }

        addListener(id, callback, target) {
            if (!this.listeners[id]) {
                this.listeners[id] = [];
            }
            this._on(String(id), callback, target);
        }

        removeListener(target, id) {
            if (id === undefined) {
                for (let id in this.listeners) {
                    this._off(target, id);
                }
            } else {
                this._off(target, String(id));
            }
        }

        eventOnce(id, callback, target) {
            if (!this.listeners[id]) {
                this.listeners[id] = [];
            }
            this._once(String(id), callback, target);
        }

        dispatchEvent(id, ...args) {
            if (!id || !this.listeners[id]) {
                return;
            }
            this._emit(String(id), ...args);
        }
    }

    const eventMgr = new EventManager();

    class PetsFrame extends BaseClass{
    	
    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=915;
    		this.iH=610;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_skilllist=new Array(12);
    		this.btn_page=new Array(2);
    		for(i=0;i<2;i++)
    		{
    			this.btn_page[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_page[i].Move(this.iX+this.iW-15, this.iY+40+130*i, 50, 140);
    			this.btn_page[i].InitButton("右侧标签");
    			//if(i==0)this.btn_page[i].InitButton("标签按钮上");
    			//else if(i==1)this.btn_page[i].InitButton("标签按钮下");
    			//else this.btn_page[i].InitButton("标签按钮中");
    		}
    		
    		
    		//this.iX+56+i%4*92, this.iY+391+i/4*92
    		
    		this.btn_petlist=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.btn_petlist[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_petlist[i].bSingleButton=true;
    			//this.btn_petlist[i].InitButton("统一按钮2");
    			this.btn_petlist[i].Move(this.iX+56+i%4*92,this.iY+391+parseInt(i/4)*92, 83, 83);
    			this.btn_petlist[i].iNameSize=25;
    		}
    		this.iPetPoint=0;
    		this.aa_pet=null;
    		
    		this.btn_joinfight=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_joinfight.InitButton("按钮1_110");
    		this.btn_joinfight.sName="参 战";
    		this.btn_joinfight.Move(this.iX+471,this.iY+446,110,52);
    		
    		this.btn_fusepet=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_fusepet.InitButton("按钮1_110");
    		this.btn_fusepet.sName="炼 妖";
    		this.btn_fusepet.Move(this.iX+603,this.iY+446,110,52);
    		
    		this.btn_follow=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_follow.InitButton("按钮1_110");
    		this.btn_follow.sName="观 看";
    		this.btn_follow.Move(this.iX+471 ,this.iY+512,110,52);
    		
    		this.btn_changename=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_changename.InitButton("宠物改名按钮");
    		//this.btn_changename.sName="改 名";
    		this.btn_changename.Move(this.iX+300,this.iY+50,60,60);
    		
    		this.iPage=0;
    	/*	btn_base=new XButton(GmPlay.xani_ui);
    		btn_base.InitButton("统一中按钮4");
    		btn_base.sName="基本属性";
    		btn_base.Move(this.iX+390,this.iY,130,40);
    		
    		btn_skill=new XButton(GmPlay.xani_ui);
    		btn_skill.InitButton("统一中按钮4");
    		btn_skill.sName="资质技能";
    		btn_skill.Move(this.iX+390+130+40,this.iY,130,40);
    		*/
    		this.btn_drop=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_drop.InitButton("按钮1_110");
    		this.btn_drop.sName="放 生";
    		this.btn_drop.Move(this.iX+735,this.iY+512,110,52);
    		
    		this.btn_addpoint=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_addpoint.InitButton("按钮1_110");
    		this.btn_addpoint.sName="加 点";
    		this.btn_addpoint.Move(this.iX+735,this.iY+446,110,52);
    		
    		this.btn_learn=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_learn.InitButton("按钮1_110");
    		this.btn_learn.sName="学技能";
    		this.btn_learn.Move(this.iX+460,this.iY+260,110,52);
    		
    		this.btn_wash=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_wash.InitButton("按钮1_110");
    		this.btn_wash.sName="洗 炼";
    		this.btn_wash.Move(this.iX+460+145,this.iY+260,110,52);
    		
    		this.btn_eat=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_eat.InitButton("按钮1_110");
    		this.btn_eat.sName="喂 养";
    		this.btn_eat.Move(this.iX+460+145*2,this.iY+260,110,52);
    		
    		this.in_name=new XInput(GmPlay$1.xani_ui);
    		this.in_name.Move(GmConfig$1.SCRW, GmConfig$1.SCRH, 10,10);
    		this.in_name.sDetail="";
    		this.bEditingName=false;

    		 this.iScrollY=0;
    		 this.iLockScroll=-1;
    	}

    	Draw()
    	{
    		if(MyPets$1.mp.iPetCount<=0)
    		{
    			XStat$1.gi().PopStat(1);
    			return;
    		}
    		var i;
    		var ppet;
    		//DrawMode.Frame3_BK(this.iX, this.iY, this.iW, this.iH,"宠物");
    //		GmPlay.xani_ui3.DrawAnima(this.iX, this.iY, "基本大框",0);

    		//xuc 0327 =============
    		DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH, "宠", "物");

    		var offxx,offyy,offww,offhh;
    		
    		offxx=this.iX+28;
    		offyy=this.iY+28;
    		offww=395;
    		offhh=553;
    		
    		DrawMode$1.new_framein(offxx,offyy,offww,offhh);//左背景
    		
    		if(this.iPage == 0){
    			
    			offxx=offxx+offww+15;
    			offww=450;
    			offhh=385;
    			
    			DrawMode$1.new_framein(offxx,offyy,offww,offhh);//右上背景
    			
    			offyy=offyy+offhh+15;
    			offhh=153;
    		
    			DrawMode$1.new_framein(offxx,offyy,offww,offhh);//右下背景
    		}
    		else{
    			
    			offxx=offxx+offww+15;
    			offww=450;
    			offhh=553;
    			
    			DrawMode$1.new_framein(offxx,offyy,offww,offhh);//右背景
    		}
    		//12.17
    		//if(this.iPage==0)DrawMode.ui3_BaseFrame4(this.iX,this.iY,"宠","物","属","性");
    		//else if(this.iPage==1)DrawMode.ui3_BaseFrame4(this.iX,this.iY,"资","质","技","能");

    		//12.17 宠物图标背景框
    		//DrawMode.ui3_Frame1(this.iX+220, this.iY+40, 180, 180);
    		
    		//12.18
    		//GmPlay.xani_ui3.DrawAnima(this.iX+190, this.iY, "大框分割线",0);
    		
    		//12.17
    		for(i=0;i<2;i++)
    		{
    			if(this.iPage==i)
    			{
    				this.btn_page[i].bMouseIn=true;
    				this.btn_page[i].bMouseDown=true;
    			}
    			this.btn_page[i].Draw();
    //			GmPlay.xani_ui3.DrawAnima(this.btn_page[i].iX, this.btn_page[i].iY, "标签文字_人物",i);
    		
    			//if(i==0)DrawMode.ui3_TagText4(this.btn_page[i].iX, this.btn_page[i].iY,"宠","物","属","性");
    			//else if(i==1)DrawMode.ui3_TagText4(this.btn_page[i].iX, this.btn_page[i].iY,"资","质","技","能");
    			if(this.iPage==0)
    			{	DrawMode$1.new_lableword4(this.iX+this.iW-15, this.iY+50+130*0, 40, 70,true,"宠","物","属","性");
    				DrawMode$1.new_lableword4(this.iX+this.iW-15, this.iY+50+130*1, 40, 70,false,"资","质","技","能");
    			}
    			else{
    				DrawMode$1.new_lableword4(this.iX+this.iW-15, this.iY+50+130*0, 40, 70,false,"宠","物","属","性");
    				DrawMode$1.new_lableword4(this.iX+this.iW-15, this.iY+50+130*1, 40, 70,true,"资","质","技","能");
    			}
    		}

    		this.btn_close.Draw();
    		if(this.iPetPoint>=MyPets$1.mp.iPetCount)this.iPetPoint=0;
    		ppet=MyPets$1.mp.pets[this.iPetPoint];
    		var ox,oy;
    		for(i=0;i<8;i++)
    		{
    //			this.btn_petlist[i].sName=MyPets.mp.pets[i].sName;
    			GmPlay$1.xani_nui2.DrawAnima(this.iX+56+i%4*92,this.iY+391+parseInt(i/4)*92, "宠物头像框",0);

    			if(i>=MyPets$1.mp.iPetCount)continue;
    			ox=this.iX+56+i%4*92;
    			oy=this.iY+391+parseInt(i/4)*92;
    			GmPlay$1.xani_head.DrawAnima_aa(ox,oy,GmPlay$1.de_pet.strValue(MyPets$1.mp.pets[i].iTid, 0, 1),0);//宠物头像
    			
    			if(GmMe$1.me.iFightPid==MyPets$1.mp.pets[i].iPid)
    				GmPlay$1.xani_nui2.DrawAnima(ox,oy, "宠物头像框",1);//参战标签

    			if((parseInt(MyPets$1.mp.pets[i].iFlag/100)%10)!=0)
    			{//系统绑定
    				M3DFast$1.gi().DrawText_2(ox-6,oy+80, "绑", 0xff6bfff4, 26, 101, 1, 1, 0, 0, -3, 4, 0xff000000);
    			}
    			if(this.iPetPoint==i)
    			{//选中的宠物，按钮设为按下状态
    //				this.btn_petlist[i].bMouseIn=true;
    //				this.btn_petlist[i].bMouseDown=true;
    				GmPlay$1.xani_nui2.DrawAnimaEx(ox,oy, "头像选中框",0,101,1,1,0,0,0);//this.iX+50, this.iY+65+i*45, 128, 32
    			}
    			//this.btn_petlist[i].Draw();
    		}
    	//	DrawMode.Frame2_MD(this.iX+150, this.iY+65, this.iW-160, this.iH-75);
    		
    		
    		//////怪物身体
    //		if(this.aa_pet==null || iLastPetPoint!=this.iPetPoint)
    //		{
    //			this.aa_pet=GmPlay.xani_pets[ppet.iTid].InitAnimaWithName("站立_右下",null);
    //			iLastPetPoint=this.iPetPoint;
    //		}
    		GmPlay$1.xani_nui2.DrawAnima(this.iX+28+395/2-260/2,this.iY+112, "宠物背景",0);
    		FireworksEffect.DrawAura(0, this.iX+220, this.iY+280, null, 0);//宠物
    		ppet.aa_body.Draw(this.iX+220, this.iY+280);
    		ppet.aa_body.NextFrame();
    		
    		
    //		for(i=0;i<ppet.iStar;i++)GmPlay.xani_ui4.DrawAnima(this.iX+220+30+i*30, this.iY+40+180-30, "黄色五角星",0);
    //		this.aa_pet.Draw(offx+120, offy+140);
    //		this.aa_pet.NextFrame();
    		
    		PetsFrame.wordframe(this.iX+28+395/2-160/2,this.iY+63,160);
    		M3DFast$1.gi().DrawText_2(this.iX+28+395/2, this.iY+63+16, MyPets$1.mp.pets[this.iPetPoint].sName, 0xffffffff, 22, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		this.btn_changename.Draw();
    		MyPets$1.mp.pets[this.iPetPoint].CalcPetScore();
    		M3DFast$1.gi().DrawText_2(this.iX+28+395/2, this.iY+63+16 + 40, "评分:"+MyPets$1.mp.pets[this.iPetPoint].iScore, 0xffffffff, 26, 101, 1, 1, 0, -2, -2, 3, 0xff000000);

    		//进阶星星
    		for(i=0;i<5;i++)
    		{//ppet.iStar
    			if(i<ppet.iStar)GmPlay$1.xani_nui2.DrawAnima(this.iX+54,this.iY+129+40*i, "宠物进阶星星",1);
    			else GmPlay$1.xani_nui2.DrawAnima(this.iX+54,this.iY+129+40*i, "宠物进阶星星",0);
    //			GmPlay.xani_ui4.DrawAnima(this.iX+220+30+i*30, this.iY+40+180-30, "黄色五角星",0);
    		}
    		
    //		DrawMode.new_frameon(10, 10, 100, 100, 0);
    		
    //		//宠物类型红印
    //		if((ppet.iBaobao&1)!=0)
    //		{//宝宝
    //			if((ppet.iBaobao&2)!=0);//变异宝宝
    //			else;//宝宝
    //		}
    //		else
    //		{//野生
    //			if((ppet.iBaobao&2)!=0);//变异野生
    //			else;//野生
    //		}
    		GmPlay$1.xani_nui2.DrawAnima(this.iX+380,this.iY+173, "宠物类型红印",ppet.iBaobao&3);
    		
    	//	DrawMode.ui3_Text1(this.iX+184,this.iY+341,70,105,"等级",""+ppet.iLev);
    		M3DFast$1.gi().DrawText_2(this.iX+224,this.iY+340, ppet.iLev+"级", 0xffffffff, 22, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(this.iX+340,this.iY+340, "仙露仙桃："+ppet.iFlag%100, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);

    		if(this.iPage==0)
    		{
    	//		btn_base.bMouseIn=true;
    	//		btn_base.bMouseDown=true;
    			PetsFrame.Draw_Base1(this.iX+470,this.iY+60,ppet);
    			PetsFrame.Draw_Base2(this.iX+470,this.iY+190,ppet);
    			
    			this.btn_drop.Draw();
    			this.btn_addpoint.Draw();
    			
    			if(GmMe$1.me.iFightPid==ppet.iPid)
    				{
    					this.btn_joinfight.sName="休 息";
    				}
    			else this.btn_joinfight.sName="参 战";
    			this.btn_joinfight.Draw();
    			this.btn_fusepet.Draw();
    			if(GmMe$1.me.iFollowPid==ppet.iPid)this.btn_follow.sName="隐 藏";
    			else this.btn_follow.sName="跟 随";
    			this.btn_follow.Draw();
    			
    		}
    		else if(this.iPage==1)
    		{
    			this.btn_eat.Draw();
    			this.btn_learn.Draw();
    			this.btn_wash.Draw();
    			
    			this.Draw_Base3(this.iX+460,this.iY+58,ppet);
    		}

    		if(this.bEditingName){
    			this.in_name.onscr();
    			ppet.sName=this.in_name.sDetail;
    			if(this.in_name.bFinished)
    			{//编辑完成//发送到服务器改名
    //				GmPlay.sop("send name");
    				this.bEditingName=false;
    				this.in_name.bFinished=false;
    				GmProtocol$1.gi().s_ChangePetName(ppet.iPid, this.in_name.sDetail);
    			}
    		}
    		
    		if(Confirm1.end(Confirm1.CONFIRM_DROPPET))
    		{
    			if(Confirm1.bConfirm)
    			{//同意丢弃宠物
    				if(GmMe$1.me.bHaveLock && GmMe$1.me.bLocked)EasyMessage.easymsg.AddMessage("未解锁不能放生");
    				else
    				{
    					if(GmMe$1.me.iFightPid==ppet.iPid)GmMe$1.me.iFightPid=0;
    					GmProtocol$1.gi().s_DropPet(ppet.iPid);
    					MyPets$1.mp.RemovePet(ppet.iPid);
    					this.iPetPoint=0;
    				}
    			}
    		}
    		
    		if(Confirm1.end(Confirm1.CONFIRM_WASHPET) || Confirm1.end(Confirm1.CONFIRM_WASHPETBYINGOT))
    		{
    			if(Confirm1.bConfirm)
    			{//洗宝宝
    				GmProtocol$1.gi().s_WashPet(MyPets$1.mp.pets[this.iPetPoint].iPid, this.iWashGid);
    			}
    		}
    		
    		if(AddPoint.end(AddPoint.ADDPOINT_PET))
    		{
    			if(AddPoint.bConfirm)
    			{
    				GmProtocol$1.gi().s_AddPetPoint(ppet.iPid,AddPoint.iModifys[0],AddPoint.iModifys[1],AddPoint.iModifys[2],AddPoint.iModifys[3],AddPoint.iModifys[4]);
    				for(i=0;i<5;i++)ppet.iBaseAtt[i]+=AddPoint.iModifys[i];
    				MyPets$1.CalcFightAtt(ppet);
    			}
    		}
    	}

    	Draw_Base3( x, y, p)
    	{
    		var i;
    		var xx,yy;
    		
    		DrawMode$1.ui3_Text1_4word(x+3, y,110,100,"体质资质",""+p.zz[0]);
    		DrawMode$1.ui3_Text1_4word(x+3, y+40,110,100,"法力资质",""+p.zz[1]);
    		DrawMode$1.ui3_Text1_4word(x+3, y+80,110,100,"力量资质",""+p.zz[2]);
    		DrawMode$1.ui3_Text1_4word(x+3, y+120,110,100,"耐力资质",""+p.zz[3]);
    		DrawMode$1.ui3_Text1_4word(x+3, y+160,110,100,"敏捷资质",""+p.zz[4]);
    		
    		DrawMode$1.ui3_Text1_(x+236, y,67,100,"成长",""+MyPets$1.swapcz(p.cz));
    		
    		if(p.iLife>30000)DrawMode$1.ui3_Text1_(x+236, y+40,67,100,"寿命","永生");
    		else DrawMode$1.ui3_Text1_(x+236, y+40,67,100,"寿命",""+p.iLife);
    		
    		y+=223;
    		x+=6;
    		y+=47;
    		
    		this.iScrollRectX=x;
    		this.iScrollRectY=y;
    		this.iScrollRectW=102*4;
    		this.iScrollRectH=97*2+40;
    		
    		var detailx=-1,detaily=-1,detailp=-1;
    		M3DFast$1.gi().SetViewClip(x-6, y-6, x+400, y+97*2+40);
    		for(i=0;i<12;i++)
    		{
    //			if(p.jn[i]>0)
    			{//有技能
    				xx=x+i%4*102;
    				yy=y+parseInt(i/4)*97-this.iScrollY;
    				if(this.btn_skilllist[i]==null)
    				{
    					this.btn_skilllist[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    					this.btn_skilllist[i].bSingleButton=true;
    				}
    				this.btn_skilllist[i].Move(xx,yy,92,92);
    			//	GmPlay.xani_ui.DrawAnima(xx, yy, "物品格",0);
    				GmPlay$1.xani_nui2.DrawAnima(xx, yy, "技能框",0);
    //				M3DFast.gi().DrawRect_2D(xx, yy, xx+60, yy+60, 0xffffffff);
    				if(i<p.iSkillBlock && p.jn[i]>0)
    				{
    					GmPlay$1.xani_nicon.DrawAnima_aa(xx, yy, GmPlay$1.de_skill.strValue(p.jn[i], 0, 5),0);
    					if(this.btn_skilllist[i].bMouseDown)
    					{
    						detailp=i;
    						detailx=xx;
    						detaily=yy;
    					}
    				}
    				if(i>=p.iSkillBlock)GmPlay$1.xani_nui2.DrawAnima(xx, yy, "技能框",1);
    			}
    		}
    		M3DFast$1.gi().NoClip();
    		if(detailp>=0)MyAttFrame.Skill_Detail(p.jn[detailp], detailx, detaily, -1);
    	}

    	ProcTouch( msg, x, y)
    	{
    		var i;
    		
    		for(i=0;i<2;i++)
    		{
    			if(this.btn_page[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_page[i].bCheck())
    				{
    					//if(i==4)EasyMessage.easymsg.AddMessage("功能暂未开放");
    					//else this.iPage=i;
    					this.iPage = i;
    				}
    			}
    		}
    		
    		
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		for(i=0;i<MyPets$1.mp.iPetCount;i++)
    		{//选择宠物
    			if(this.btn_petlist[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_petlist[i].bCheck())
    				{
    					this.iPetPoint=i;
    				}
    //				return true;
    			}
    		}
    		
    /*		if(btn_base.ProcTouch(msg, x, y))
    		{
    			if(btn_base.bCheck())
    			{
    				this.iPage=0;
    			}
    		}
    		if(btn_skill.ProcTouch(msg, x, y))
    		{
    			if(btn_skill.bCheck())
    			{
    				this.iPage=1;
    			}
    		}
    	*/	
    		if(this.btn_changename.ProcTouch(msg, x, y))
    		{
    			if(this.btn_changename.bCheck())
    			{
    				console.log('改名');
    				this.bEditingName=true;
    				this.in_name.Move(this.btn_changename.iX,this.btn_changename.iY,this.btn_changename.iW,this.btn_changename.iH);
    				this.in_name.sDetail=MyPets$1.mp.pets[this.iPetPoint].sName;
    				this.in_name.ProcTouch(3,GmConfig$1.SCRW+1,GmConfig$1.SCRH+1);
    				eventMgr.eventOnce("onKeyboardComplete",()=>{
    					if(this.in_name.sDetail!='')
    						this.in_name.bFinished = true;
    					else{
    						this.bEditingName = false;
    						this.in_name.sDetail=MyPets$1.mp.pets[this.iPetPoint].sName;
    					}
    				},this);
    			}
    		}
    		if(this.iPage==0)
    		{//参战，跟随，放生，加点
    			if(this.btn_fusepet.ProcTouch(msg, x, y))
    			{
    				if(this.btn_fusepet.bCheck())
    				{
    					XStat$1.gi().PopStat(1);
    					FusePet.Open();
    				}
    			}
    			if(this.btn_joinfight.ProcTouch(msg, x, y))
    			{
    				if(this.btn_joinfight.bCheck())
    				{
    					if(GmMe$1.me.iFightPid==MyPets$1.mp.pets[this.iPetPoint].iPid)
    					{
    						GmMe$1.me.iFightPid=0;
    						GmProtocol$1.gi().s_ChangeFightPet(GmMe$1.me.iFightPid);
    					}
    					else
    					{
    						if(MyPets$1.mp.pets[this.iPetPoint].iLev>GmMe$1.me.rbs.iLev+10)FrameMessage.fm.Open("宠物超过人物10级不会出战");
    						else if(GmMe$1.me.rbs.iLev<GmPlay$1.de_pet.intValue(MyPets$1.mp.pets[this.iPetPoint].iTid,0,2))FrameMessage.fm.Open("参战要求人物达到"+GmPlay$1.de_pet.intValue(MyPets$1.mp.pets[this.iPetPoint].iTid,0,2)+"级");
    						else
    						{
    							GmMe$1.me.iFightPid=MyPets$1.mp.pets[this.iPetPoint].iPid;
    							GmProtocol$1.gi().s_ChangeFightPet(GmMe$1.me.iFightPid);
    						}
    					}
    				}
    			}
    			if(this.btn_follow.ProcTouch(msg, x, y))
    			{
    				if(this.btn_follow.bCheck())
    				{
    					if(GmMe$1.me.iFollowPid==MyPets$1.mp.pets[this.iPetPoint].iPid)GmMe$1.me.iFollowPid=0;
    					else GmMe$1.me.iFollowPid=MyPets$1.mp.pets[this.iPetPoint].iPid;
    					GmProtocol$1.gi().s_ChangeFollowPet(GmMe$1.me.iFollowPid);
    				}
    			}
    			if(this.btn_drop.ProcTouch(msg, x, y))
    			{
    				if(this.btn_drop.bCheck())
    				{
    					Confirm1.start(Confirm1.CONFIRM_DROPPET,"是否确认把#c00ff00["+MyPets$1.mp.pets[this.iPetPoint].sName+"]#o放生？");
    				}
    			}
    			if(this.btn_addpoint.ProcTouch(msg, x, y))
    			{
    				if(this.btn_addpoint.bCheck())
    				{//加点
    					var ppet=MyPets$1.mp.pets[this.iPetPoint];
    					if(MyPets$1.mp.pets[this.iPetPoint].nut<=0)EasyMessage.easymsg.AddMessage("当前没有剩余点数可以加");
    					else AddPoint.start(AddPoint.ADDPOINT_PET,ppet.tz, ppet.fl, ppet.ll, ppet.nl, ppet.mj, ppet.nut);
    				}
    			}
    		}
    		else if(this.iPage==1)
    		{//学习，喂养，点技能
    			if(this.btn_learn.ProcTouch(msg, x, y))
    			{
    				if(this.btn_learn.bCheck())
    				{
    					LearnPetSkill.Open(MyPets$1.mp.pets[this.iPetPoint]);
    				}
    			}
    			if(this.btn_eat.ProcTouch(msg, x, y))
    			{
    				if(this.btn_eat.bCheck())
    				{//食用
    					PetEat.Open(MyPets$1.mp.pets[this.iPetPoint]);
    				}
    			}
    			if(this.btn_wash.ProcTouch(msg, x, y))
    			{
    				if(this.btn_wash.bCheck())
    				{//洗练,
    					if(MyPets$1.mp.pets[this.iPetPoint].iPid==GmMe$1.me.iFightPid)FrameMessage.fm.Open("不能洗练参战宠物");
    					else if((MyPets$1.mp.pets[this.iPetPoint].iBaobao&2)==0)
    					{
    						if(MyGoods.bHaveGoods(160, 1))
    						{
    							this.iWashGid=MyGoods.gi().GetGid(160);
    							Confirm1.start(Confirm1.CONFIRM_WASHPET,"是否确定消耗一个仙灵果对#c00ff00["+MyPets$1.mp.pets[this.iPetPoint].sName+"]#o进行洗练？");
    						}
    						else if(GmMe$1.me.rbs.iInGot>=10)
    						{
    							this.iWashGid=0;
    							Confirm1.start(Confirm1.CONFIRM_WASHPETBYINGOT,"背包中没有仙灵果，是否花费10元宝购买仙灵果对#c00ff00["+MyPets$1.mp.pets[this.iPetPoint].sName+"]#o进行洗练？");
    						}
    						else FrameMessage.fm.Open("背包中没有仙灵果");
    					}
    					else
    					{
    						if(MyGoods.bHaveGoods(161, 1))
    						{
    							this.iWashGid=MyGoods.gi().GetGid(161);
    							Confirm1.start(Confirm1.CONFIRM_WASHPET,"是否确定消耗一个高级仙灵果对#c00ff00["+MyPets$1.mp.pets[this.iPetPoint].sName+"]#o进行洗练？");
    						}
    						else if(GmMe$1.me.rbs.iInGot>=50)
    						{
    							this.iWashGid=0;
    							Confirm1.start(Confirm1.CONFIRM_WASHPETBYINGOT,"背包中没有高级仙灵果，是否花费50元宝购买高级仙灵果对#c00ff00["+MyPets$1.mp.pets[this.iPetPoint].sName+"]#o进行洗练？");
    						}
    						else FrameMessage.fm.Open("背包中没有高级仙灵果");
    					}
    				}
    			}
    			if(this.iLockScroll>0)
    			{
    				if(msg==2)
    				{
    					i=this.iLockScroll-y;
    					this.iLockScroll=y;
    					this.iScrollY+=i;
    					if(this.iScrollY<0)this.iScrollY=0;
    					if(this.iScrollY>50)this.iScrollY=50;
    				}
    				if(msg==3)this.iLockScroll=-1;
    			}
    			if(XDefine$1.bInRect(x, y, this.iScrollRectX, this.iScrollRectY, this.iScrollRectW, this.iScrollRectH))
    			{
    				if(msg==1)
    				{
    					this.iLockScroll=y;
    				}
    			}
    			for(i=0;i<12;i++)
    			{
    				if(this.btn_skilllist[i]==null)continue;
    				this.btn_skilllist[i].ProcTouch(msg,x,y);
    			}
    		}
    		return false;
    	}
    }
    PetsFrame.Open=function()
    {
    	var pf=null;
    	if(MyPets$1.mp.iPetCount>0)
    	{
    		pf=XStat$1.gi().PushStat(XStat$1.GS_PETSFRAME);
    		//默认选中出战宠物
    		var mp=MyPets$1.mp.GetUseingPet();
    		if(mp==null)
    		{
    			for(var i=0;i<MyPets$1.mp.iPetCount;i++)
    			{
    				if(MyPets$1.mp.pets[i].iLife>50)
    				{
    					pf.iPetPoint=i;
    					break;
    				}
    			}
    		}
    		else
    		{
    			for(var i=0;i<MyPets$1.mp.iPetCount;i++)
    			{
    				if(MyPets$1.mp.pets[i]==mp)
    				{
    					pf.iPetPoint=i;
    					break;
    				}
    			}
    		}
    	}
    	else EasyMessage.easymsg.AddMessage("你还没有宠物");
    	///
    //		PetsFrame pf=(PetsFrame)XStat.gi().LastStat(0);
    	return pf;
    };
    PetsFrame.wordframe=function( x, y, w)
    {
    	GmPlay$1.xani_nui2.DrawAnimaEx(x,y, "可变长文字框",0,101,1.0,1.0,0,0,0);//this.iX+50, this.iY+65+i*45, 128, 32
    	GmPlay$1.xani_nui2.DrawAnimaEx(x+15,y, "可变长文字框",1,101,1.0*(w-30)/20,1.0,0,0,0);//this.iX+50, this.iY+65+i*45, 128, 32
    	GmPlay$1.xani_nui2.DrawAnimaEx(x+w-20,y, "可变长文字框",2,101,1.0,1.0,0,0,0);//this.iX+50, this.iY+65+i*45, 128, 32
    };
    PetsFrame.Draw_Base2=function( x, y, p)
    {
    //		DrawMode.Frame1_BR(x, y, 300, 260);
    	
    /*		DrawMode.Data1_BR(x+10, y+10, "体质", ""+p.tz, 50, 70);
    	DrawMode.Data1_BR(x+10, y+10+20, "法力", ""+p.fl, 50, 70);
    	DrawMode.Data1_BR(x+10, y+10+20*2, "力量", ""+p.ll, 50, 70);
    	DrawMode.Data1_BR(x+10, y+10+20*3, "耐力", ""+p.nl, 50, 70);
    	DrawMode.Data1_BR(x+10, y+10+20*4, "敏捷", ""+p.mj, 50, 70);
    	
    	DrawMode.Data1_BR(x+10+160, y+10, "灵力", ""+p.iSpirit, 50, 70);
    	DrawMode.Data1_BR(x+10+160, y+10+20, "伤害", ""+p.iAttack, 50, 70);
    	DrawMode.Data1_BR(x+10+160, y+10+20*2, "防御", ""+p.iDefence, 50, 70);
    	DrawMode.Data1_BR(x+10+160, y+10+20*3, "速度", ""+p.iSpeed, 50, 70);
    	DrawMode.Data1_BR(x+10+160, y+10+20*4, "剩余", ""+p.nut, 50, 70);
    	
    	DrawMode.Data1_BR(x+10, y+10+20*6, "当前经验", ""+p.iExp, 90, 190);
    	DrawMode.Data1_BR(x+10, y+10+20*7, "升级经验", ""+GameData.iUpgradeExp[p.iLev]/3, 90, 190);
    */	
    	
    	//
    	y+=105;
    	DrawMode$1.ui3_Text1_(x, y-60-45,67,100,"体质",""+p.tz);
    	DrawMode$1.ui3_Text1_(x, y-20-45,67,100,"法力",""+p.fl);
    	DrawMode$1.ui3_Text1_(x, y+20-45,67,100,"力量",""+p.ll);
    	DrawMode$1.ui3_Text1_(x, y+60-45,67,100,"耐力",""+p.nl);
    	DrawMode$1.ui3_Text1_(x, y+100-45,67,100,"敏捷",""+p.mj);
    	
    	DrawMode$1.ui3_Text1_(x+210, y-60-45,67,100,"灵力",""+p.iSpirit);
    	DrawMode$1.ui3_Text1_(x+210, y-20-45,67,100,"伤害",""+p.iAttack);
    	DrawMode$1.ui3_Text1_(x+210, y+20-45,67,100,"防御",""+p.iDefence);
    	DrawMode$1.ui3_Text1_(x+210, y+60-45,67,100,"速度",""+p.iSpeed);
    	DrawMode$1.ui3_Text1_(x+210, y+100-45,67,100,"潜能",""+p.nut);
    	
    	//M3DFast.gi().DrawText_2(x+190,y+115-45, "剩余："+p.nut, 0xffffff00, 22, 101, 1, 1, 0, 0, -2, 3, 0xff000000);
    	
    	
    	/*
    	DrawMode.ui3_Text1(x+20, y-60-45,70,90,"体质",""+p.tz);
    	DrawMode.ui3_Text1(x+20, y-20-45,70,90,"法力",""+p.fl);
    	DrawMode.ui3_Text1(x+20, y+20-45,70,90,"力量",""+p.ll);
    	DrawMode.ui3_Text1(x+20, y+60-45,70,90,"耐力",""+p.nl);
    	DrawMode.ui3_Text1(x+20, y+100-45,70,90,"敏捷",""+p.mj);
    	
    	DrawMode.ui3_Text1(x+190, y-60-45,70,90,"灵力",""+p.iSpirit);
    	DrawMode.ui3_Text1(x+190, y-20-45,70,90,"伤害",""+p.iAttack);
    	DrawMode.ui3_Text1(x+190, y+20-45,70,90,"防御",""+p.iDefence);
    	DrawMode.ui3_Text1(x+190, y+60-45,70,90,"速度",""+p.iSpeed);
    //	DrawMode.ui3_Text1(x+40, y-60,90,140,"体质",""+GmMe.me.iRid);
    	M3DFast.gi().DrawText_2(x+190,y+115-45, "剩余："+p.nut, 0xffffff00, 22, 101, 1, 1, 0, 0, -2, 3, 0xff000000);
    	
    	*/
    	
    	
    //	DrawMode.ui3_Text1(this.iX+390,this.iY+40*4,70,90,"体质",""+GmMe.me.rbs.tz);
    	
    	
    };
    PetsFrame.Draw_Base1=function( x, y, p)
    {
    //		DrawMode.Frame1_BR(x, y, 210, 100);
    	
    //		DrawMode.Data1_BR(x+10, y+10, "名称", p.sName, 50, 130);
    //		DrawMode.Data1_BR(x+10, y+30, "等级", ""+p.iLev, 50, 130);
    //		DrawMode.Data1_BR(x+10, y+50, "气血", ""+p.iHp+"/"+p.iMaxHp, 50, 130);
    //		DrawMode.Data1_BR(x+10, y+70, "魔法", ""+p.iMp+"/"+p.iMaxMp, 50, 130);
    //		M3DFast.gi().DrawTextEx(x+10, y+10, p.sName, 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    	
    	
    	//DrawMode.ui3_Text1(x+52, y-60,70,105,"等级",""+p.iLev);
    	GmPlay$1.xani_nui2.DrawAnima(x, y, "提示1",0);
    	M3DFast$1.gi().DrawText_2(x+67/2, y+16, "气血", 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    	GmPlay$1.xani_nui2.DrawAnima(x, y+38, "提示1",0);
    	M3DFast$1.gi().DrawText_2(x+67/2, y+38+16, "魔法", 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    	GmPlay$1.xani_nui2.DrawAnima(x, y+76, "提示1",0);
    	M3DFast$1.gi().DrawText_2(x+67/2, y+76+16, "经验", 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    	
    	
    	var w=67,h=38;
    	
    	GmPlay$1.xani_nui2.DrawAnima(x+w, y, "宠物大血条",0);
    	GmPlay$1.xani_nui2.DrawAnima(x+w, y+h, "宠物大血条",0);
    	GmPlay$1.xani_nui2.DrawAnima(x+w, y+h*2, "宠物大血条",0);

    	M3DFast$1.gi().SetViewClip(x, y, x+w+311*p.iHp/p.iMaxHp, y+480);
    	GmPlay$1.xani_nui2.DrawAnima(x+w+2, y+3, "宠物大血条",1);
    	M3DFast$1.gi().NoClip();
    	M3DFast$1.gi().SetViewClip(x, y, x+w+311*p.iMp/p.iMaxMp, y+480);
    	GmPlay$1.xani_nui2.DrawAnima(x+w+2, y+h+3, "宠物大血条",2);
    	M3DFast$1.gi().NoClip();
    	var l=311;
    	l=l*p.iExp/(GameData$1.iUpgradeExp[p.iLev]/3);
    	M3DFast$1.gi().SetViewClip(x, y,  (x+w+l), y+480);
    	GmPlay$1.xani_nui2.DrawAnima(x+w+2, y+h*2+3, "宠物大血条",3);
    	
    	M3DFast$1.gi().NoClip();

    	M3DFast$1.gi().DrawTextEx(x+w+311/2, y+15,p.iHp+"/"+p.iMaxHp, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    	M3DFast$1.gi().DrawTextEx(x+w+311/2, y+40+13,p.iMp+"/"+p.iMaxMp, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    	M3DFast$1.gi().DrawTextEx(x+w+311/2, y+80+12,p.iExp+"/"+parseInt(GameData$1.iUpgradeExp[p.iLev]/3), 0xffffffff, 20, 101, 1, 1, 0, -2, -2);

    	//DrawMode.ui3_Text2(x+20,y+110-30,90,230,"当前经验",""+p.iExp);
    	//DrawMode.ui3_Text2(x+20,y+150-30,90,230,"升级经验",""+GameData.iUpgradeExp[p.iLev]/3);
    };

    class MyGoods {




    	constructor()
    	{
    		var i,j;
    		this.pm3f=M3DFast$1.xm3f;
    		
    		MyGoods.iW=750;
    		MyGoods.iH=450;
    		MyGoods.iX=(GmConfig$1.SCRW-MyGoods.iW)/2;
    		MyGoods.iY=(GmConfig$1.SCRH-MyGoods.iH)/2;
    		//////////////////////////////////////////////
    		
    		this.iW1=MyGoods.GW*2;
    		this.iH1=MyGoods.GW*3;
    		this.iX1=MyGoods.iX-this.iW1;
    		this.iY1=MyGoods.iY+(this.iH-this.iH1)/2;
    		
    		this.bShow=false;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_ui);
    		this.btn_close.InitButton("属性关闭按钮");
    		this.btn_close.sName="";
    		
    		this.btn_bag1=new XButton(GmPlay$1.xani_ui);
    		this.btn_bag1.InitButton("亮蓝按钮");
    		this.btn_bag1.sName="背包";
    		
    		this.btn_bag2=new XButton(GmPlay$1.xani_ui);
    		this.btn_bag2.InitButton("亮蓝按钮");
    		this.btn_bag2.sName="行囊";
    		
    //		btn_switch[2].bSingleButton=false;
    //		btn_switch[2].InitButton("大按钮2");
    		
    		this.goods=new Array(30);
    		this.goods[1]=new Array(6);//装备
    		for(i=0;i<6;i++)
    		{
    			this.goods[1][i]=new Goods();
    			this.goods[1][i].iOid=1;
    			this.goods[1][i].iPos=i;
    		}
    		this.goods[2]=new Array(20);//背包
    		this.goods[3]=new Array(20);//行囊
    		for(i=0;i<20;i++)
    		{
    			this.goods[2][i]=new Goods();
    			this.goods[2][i].iOid=2;
    			this.goods[2][i].iPos=i;
    			this.goods[3][i]=new Goods();
    			this.goods[3][i].iOid=3;
    			this.goods[3][i].iPos=i;
    		}
    		for(j=10;j<30;j++)
    		{//仓库
    			this.goods[j]=new Array(20);
    			for(i=0;i<20;i++)
    			{
    				this.goods[j][i]=new Goods();
    				this.goods[j][i].iOid=j;
    				this.goods[j][i].iPos=i;
    			}
    		}

    		this.swapgoods=new Goods();
    		
    		this.bLocked=false;
    		this.bDested=false;
    		
    		this.bTiming=false;
    		this.iTouchDelay=0;
    		this.bShowDetail=false;
    	}

    	
    	  GetGid( gtype)
    	{
    		var i;
    		for(i=0;i<20;i++)
    		{
    			if(this.goods[2][i].iGid>0 && this.goods[2][i].iTid==gtype)return this.goods[2][i].iGid;
    		}
    		return -1;
    	}
    	
    	UseGoods()
    	{//检测物品类型，根据物品类型，来判断是装备，还是使用药品，还是其他
    		var i,type;
    		if(this.lockgoods.iOid==1)
    		{//脱下装备
    			for(i=0;i<20;i++)
    			{//背包里找一个空格
    				if(this.goods[2][i].iGid==-1)
    				{
    					this.destgoods=this.goods[2][i];
    					this.MoveGoods(this.lockgoods,this.destgoods);
    					return;
    				}
    			}
    		}
    		if(this.lockgoods.iOid!=2)return;//只有在背包里的物品才能使用
    		type=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, -1, 16);//装备
    		if(type!=-1)
    		{//使用装备，根据部位穿戴
    			this.destgoods=this.goods[1][type];
    			this.MoveGoods(this.lockgoods,this.destgoods);
    			return;
    		}
    		type=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, -1, 33);
    		GmPlay$1.sop(""+this.lockgoods.iTid+",,,"+type);
    		if(type!=-1)
    		{
    			GmProtocol$1.gi().s_UseGoods(this.lockgoods.iGid, 1,"");//if(this.lockgoods.iTid==191)
    			return;
    		}
    		type=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, -1, 27);
    		if(type!=-1)
    		{//草药,可在战斗和pk中使用
    			i=0;
    			var usecount=1;
    			var restorehp=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 1);
    			var restoremp=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 2);
    			while((restorehp!=-1 && GmMe$1.me.rbs.iHp< GmMe$1.me.rbs.iMaxHp) ||
    					(restoremp!=-1 &&  GmMe$1.me.rbs.iMp< GmMe$1.me.rbs.iMaxMp))
    				{//可加血，而且血不满，可加蓝，而且蓝不满
    					if(usecount<=0)break;//符合使用数量
    					if(restorehp!=-1) GmMe$1.me.rbs.iHp+=restorehp;
    					if(restoremp!=-1) GmMe$1.me.rbs.iMp+=restoremp;
    					usecount--;
    					i++;
    				}
    			if(i<=0)
    			{
    				EasyMessage.easymsg.AddMessage("您的状态很好，不需要恢复");
    			}
    			else
    			{
    				GmProtocol$1.gi().s_UseGoods(this.lockgoods.iGid, i,"");
    				this.lockgoods.iCount-=i;
    				if(this.lockgoods.iCount<=0)
    				{
    					this.lockgoods.iGid=-1;
    					this.bLocked=false;
    				}
    				
    				GmMe$1.me.CalcFightAtt();
    			}
    			return;
    		}
    		type=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, -1, 30);//道具
    		if(type!=-1)
    		{
    			if(type==1)
    			{//漫游中使用
    				if(this.lockgoods.iTid==160 || this.lockgoods.iTid==161)
    				{//仙灵果洗宝宝
    					var pf=PetsFrame.Open();
    					if(pf!=null)pf.iPage=1;
    //					WashPet.Open(this.lockgoods);
    				}
    				else if(this.lockgoods.iTid==122)
    				{//小喇叭，输入聊天文字
    					FrameMessage.fm.Open("请在公聊发送窗口选择喇叭频道");
    				}
    				else
    				{
    					GmProtocol$1.gi().s_UseGoods(this.lockgoods.iGid, 1,"");
    					if(this.lockgoods.iTid==119)
    					{//看是否已经定过位置
    						this.bShow=false;//使用了传送符，关闭显示框
    					}
    					if(this.lockgoods.iTid==237)
    					{//vip界面
    						MyAttFrame.Open(3);
    						this.bShow=false;
    					}
    				}
    			}
    			else if(this.lockgoods.iTid==97)FrameMessage.fm.Open("请前往乡水镇找铁匠打造装备");
    			else EasyMessage.easymsg.AddMessage("不能直接使用");
    			return;
    		}
    		type=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, -1, 31);//道具
    		if(type!=-1)
    		{
    			EasyMessage.easymsg.AddMessage("不能直接使用");
    			return;
    		}
    		EasyMessage.easymsg.AddMessage("未知物品使用失败");
    	}
    	MoveGoods( from, to)
    	{
    		var i,j;
    		if(to.iOid==1)
    		{//目标位置是装备位，判断是否满足穿戴条件
    			if(!bCheckEquipment(from,to.iPos))//可佩戴，移动或交换
    			{//检测失败
    				return;
    			}
    		}
    		if(from.iOid==1 && to.iGid!=-1)
    		{//装备位和背包交换
    			if(!bCheckEquipment(to,from.iPos))//可佩戴，移动或交换
    			{//检测失败
    				return;
    			}
    		}
    		if(from.iTid==318 || from.iTid==319 || from.iTid==320 || from.iTid==321 || from.iTid==322 || from.iTid==323)
    		{
    			if(from.iOid==2 && to.iOid!=2)
    			{
    				FrameMessage.fm.Open("礼包不能移动到行囊和仓库");
    				return;
    			}
    		}
    		GmProtocol$1.gi().s_MoveGoods(from.iGid, from.iOid, from.iPos, to.iGid, to.iOid, to.iPos);
    		if(to.iGid==-1)
    		{//移动物品
    			to.copyfrom(from);
    			from.iGid=-1;
    		}
    		else
    		{//交换/叠加物品
    			i=GmPlay$1.de_goods.intValue(from.iTid, 0, 28);
    			if(from.iTid==to.iTid && i>1)
    			{
    				if(to.iCount>=i)
    				{//目标物品满，不改变
    					for(var z=0;z<100;z++)GmPlay$1.sop("zzzzzzzzzzzzzzz");
    				}
    				else if(from.iCount+to.iCount<=i)
    				{
    					to.iCount+=from.iCount;
    					from.iGid=-1;
    				}
    				else
    				{
    					j=from.iCount+to.iCount;
    					to.iCount=i;
    					from.iCount=j-i;
    				}
    			}
    			else
    			{
    				this.swapgoods.copyfrom(to);
    				to.copyfrom(from);
    				from.copyfrom(this.swapgoods);
    			}
    		}
    		if(from.iOid==1 || to.iOid==1)
    		{//装备更换，重新计算人物属性
    			if((from.iOid==1 && from.iPos==2) ||
    					(to.iOid==1 && to.iPos==2))
    			{//是武器，更换效果
    				GmMe$1.me.bwc=true;
    //				FreshWeapon();
    			}
    			GmMe$1.me.CalcFightAtt();
    		}
    	}
    	GetWeaponTid()
    	{
    		if(this.goods[1][2].iGid<=0)return -1;
    		else return this.goods[1][2].iTid;
    	}
    	Open()
    	{
    		XStat$1.gi().PushStat(XStat$1.GS_MYGOODSFRAME);
    		/*
    		if(this.bShow)return;
    		this.bShow=true;
    		this.iBagPoint=0;
    		FreshWeapon();*/
    	}


    	UpdateOneGoods( pls)
    	{
    		var i;
    		var rt=pls.GetNextByte();
    		var gid,tid,rid,oid,pos,count;
    		var pg=null;
    		GmPlay$1.sop("rt="+rt);
    		switch(rt)
    		{
    		case 0://清除一个自己的物品
    			gid=pls.GetNextInt();
    			oid=pls.GetNextByte();
    			pos=pls.GetNextByte();
    			if(oid==1 && pos==2)GmMe$1.me.bwc=true;

    			if(gid==this.goods[oid][pos].iGid)this.goods[oid][pos].iGid=-1;
    			break;
    		case 1://更新一个自己的物品
    			gid=pls.GetNextInt();
    			tid=pls.GetNextShort();
    			rid=pls.GetNextInt();
    			oid=pls.GetNextByte();
    			pos=pls.GetNextByte();
    			count=pls.GetNextByte();

    			if(oid==1 && pos==2)GmMe$1.me.bwc=true;
    			pg=this.goods[oid][pos];

    			pg.iGid=gid;
    			pg.iTid=tid;
    			pg.iCount=count;
    			for(i=0;i<8;i++)pg.iAtts[i]=pls.GetNextInt();
    			GmPlay$1.xani_ngoods.InitAnimaWithName(GmPlay$1.de_goods.strValue(tid, -1, 10), pg.aa);
    			break;
    		}
    	}
    	GetGoods( pls)
    	{//oid:0丢弃，1装备，2背包，3行囊，10-20储物栏
    		var i;
    		var gid,tid,pos;
    		var oid=pls.GetNextByte();
    		var pg=null;

    		GmPlay$1.sop("get this.goods oid="+oid);
    		for(i=0;i<this.goods[oid].length;i++)this.goods[oid][i].iGid=-1;

    		while(true)
    		{
    			gid=pls.GetNextInt();
    			if(gid==-1)break;
    			tid=pls.GetNextShort();//type id
    			pos=pls.GetNextByte();
    			if(oid==1 && pos==2)GmMe$1.me.bwc=true;
    			
    			pg=this.goods[oid][pos];
    //			{
    //				pls.GetNextByte();
    //				for(i=0;i<8;i++)pls.GetNextInt();
    //			}
    			pg.iGid=gid;
    			pg.iTid=tid;
    			pg.iPos=pos;
    			pg.iCount=pls.GetNextByte();
    			for(i=0;i<8;i++)pg.iAtts[i]=pls.GetNextInt();
    			GmPlay$1.xani_ngoods.InitAnimaWithName(GmPlay$1.de_goods.strValue(tid, -1, 10), pg.aa);
    		}
    		if(XStat$1.gi().iXStat==XStat$1.GS_LOADING1)XStat$1.gi().PopStat(1);
    	}
    }
    MyGoods.mg=null;
    MyGoods.gi=function()
    {
    	if(MyGoods.mg==null)MyGoods.mg=new MyGoods();
    	return MyGoods.mg;
    };

    MyGoods.bCheckEquipment=function( g, dpos)
    	{//检测装备是否能佩戴
    		var pos=GmPlay$1.de_goods.intValue(g.iTid, -1, 16);
    		if(pos==-1)
    		{
    			EasyMessage.easymsg.AddMessage("不是装备");
    			return false;
    		}
    		if(pos!=dpos)
    		{//
    			EasyMessage.easymsg.AddMessage("穿戴装备种类不符");
    			return false;
    		}
    		var level=GmPlay$1.de_goods.intValue(g.iTid, -1, 9);//穿戴要求等级
    		if(level!=-1 && GmMe$1.me.rbs.iLev<level)
    		{//
    			var i=(g.iAtts[4]>>10)&0x3ff;
    			var j=(g.iAtts[4]>>20)&0x3ff;
    			if(i==266 || (i==265 && GmMe$1.me.rbs.iLev+5>=level))
    			{//无级别，简易
    			}
    			else if(j==266 || (j==265 && GmMe$1.me.rbs.iLev+5>=level))
    			{//无级别，简易
    			}
    			else
    			{
    				EasyMessage.easymsg.AddMessage("装备等级太高");
    				return false;
    			}
    		}
    		var race=GmPlay$1.de_goods.intValue(g.iTid, -1, 19);//穿戴种族
    		if(race!=-1 && race!=GmMe$1.me.iRace)
    		{
    			EasyMessage.easymsg.AddMessage("装备种族不匹配");
    			return false;
    		}
    		var sex=GmPlay$1.de_goods.intValue(g.iTid, -1, 20);//穿戴性别
    		if(sex!=-1 && sex!=GmMe$1.me.iSex)
    		{
    			EasyMessage.easymsg.AddMessage("装备性别不匹配");
    			return false;
    		}
    		return true;
    	};

    	MyGoods.iHaveGoodsCount=function()
    	{
    		var i,j=0;
    		for(i=0;i<20;i++)
    		{
    			if(MyGoods.mg.goods[2][i].iGid>0)j++;
    		}
    		return j;
    	};
    	MyGoods.bHaveGoods=function( gtype, count)
    	{
    		var i;
    		for(i=0;i<20;i++)
    		{
    			if(MyGoods.mg.goods[2][i].iGid>0 && MyGoods.mg.goods[2][i].iTid==gtype && MyGoods.mg.goods[2][i].iCount>=count)return true;
    		}
    		return false;
    	};

    	MyGoods.iX,MyGoods.iY,MyGoods.iW,MyGoods.iH;

    MyGoods.GW=60;//单个物品格子大小
    MyGoods.GH=60;

    class _VISUALBLOCK
    {/*
    	public int this.iDownFlag;//下标
    	public int this.iNpcId,iSid;
    	public boolean bCurrentBlock;//是否本地的虚拟块
    	public static int MAXBASESEQUENCE=16;
    	public int this.iX,this.iY,this.iR;
    	public int this.iDx,this.iDy;
    	public String this.sNpcName;
    	public int this.iAnimaType,this.iWeapId;
    	public String this.sBaseAniName,this.sAniName;
    	public int this.iActionStat;
    	public AnimaAction this.aa_body,this.aa_weapon;
    	public int this.iFlag;
    	
    	public int this.iStandFlag;//0,1,2,3,10000+petid
    	public String this.sStandName;//
    	public int this.iFaceTo;//0,1,2,3,4,5,6,7
    	
    	public String this.sPopoString;
    	public int iPopoDelay;
    //	public int iLinkToX,iLinkToY;
    	public BASESEQUENCE this.pss;*/
    	
    	constructor( df)
    	{
    		this.iDownFlag=df;
    		var i;
    		this.iR=30;
    		this.sNpcName="";
    		this.sBaseAniName="";
    		this.sAniName="";
    		this.pss=new Array(_VISUALBLOCK.MAXBASESEQUENCE);//
    		for(i=0;i<_VISUALBLOCK.MAXBASESEQUENCE;i++)this.pss[i]=null;
    		this.aa_body=new AnimaAction();
    		this.aa_weapon=new AnimaAction();
    		this.iFlag=0;
    		this.iAnimaType=0;
    		this.iPopoDelay=0;
    	}
    	
    	  ResetStandAnima( x, y)
    	{
    		if(this.iStandFlag<0)return;
    		var i;
    		if(parseInt(this.iStandFlag/10000)==1)
    		{//pet
    			this.iFaceTo=this.GetFace4(x,y);
    			i=this.iStandFlag%10000;//pid
    			if(i>=1000);//变异
    			i=i%1000;
    			GmPlay$1.xani_pets[i].InitAnimaWithName("站立_"+this.FaceTo(this.iFaceTo), this.aa_body);
    		}
    		if(this.iStandFlag==0 || this.iStandFlag==1 || this.iStandFlag==2)
    		{//直接npcid
    			this.iFaceTo=this.GetFace4(x,y);
    			GmPlay$1.xani_stand[this.iStandFlag].InitAnimaWithName(this.sStandName+"_"+this.FaceTo(this.iFaceTo), this.aa_body);
    //			GmPlay.de_npc.strValue(this.iStandFlag, 0, 8);
    		}
    	}
    	
    	 GetFace4( x, y)
    	{
    		if(x<this.iX)
    		{
    			if(y<this.iY)return 1;
    			else return 3;
    		}
    		else
    		{
    			if(y<this.iY)return 7;
    			else return 5;
    		}
    	}
    	 GetFace8( x, y)
    	{
    		var i;

    		i = 360 - XDefine$1.GetAngleXY(this.iDx, this.iDy, this.iX, this.iY);
    		i %= 360;

    		if (45 * 1 - 23 < i && i < 45 * 1 + 23)return 7;
    		else if (45 * 2 - 23 < i && i < 45 * 2 + 23)return 0;
    		else if (45 * 3 - 23 < i && i < 45 * 3 + 23)return 1;
    		else if (45 * 4 - 23 < i && i < 45 * 4 + 23)return 2;
    		else if (45 * 5 - 23 < i && i < 45 * 5 + 23)return 3;
    		else if (45 * 6 - 23 < i && i < 45 * 6 + 23)return 4;
    		else if (45 * 7 - 23 < i && i < 45 * 7 + 23)return 5;
    		else return 6;
    	}
    	
    	 FaceTo( ft)
    	{
    		switch(ft)
    		{
    		case 0:return "上";
    		case 1:return "左上";
    		case 2:return "左";
    		case 3:return "左下";
    		case 4:return "下";
    		case 5:return "右下";
    		case 6:return "右";
    		case 7:return "右上";
    		}
    		return "下";
    	}
    	 ToFace( fc)
    	{
    		if(fc=="上")return 0;
    		else if(fc=="左上")return 1;
    		else if(fc=="左")return 2;
    		else if(fc=="左下")return 3;
    		else if(fc=="下")return 4;
    		else if(fc=="右下")return 5;
    		else if(fc=="右")return 6;
    		else if(fc=="右上")return 7;
    		else return 0;
    	}
    	  ToX( ft)
    	{
    		if(ft==0 || ft==4)return this.iX;
    		if(ft==1 || ft==2 || ft==3)return this.iX-10;
    		return this.iX+10;
    	}
    	  ToY( ft)
    	{
    		if(ft==2 || ft==6)return this.iY;
    		if(ft==0 || ft==1 || ft==7)return this.iY-10;
    		return this.iY+10;
    	}
    }
    _VISUALBLOCK.MAXBASESEQUENCE=16;

    class E_DATA
    {
    	 E_DATA()
    	{
    		
    	}
    	
    	 fitem( iid)
    	{
    		var i;
    		for(i=0;i<this.iItemCount;i++)
    		{
    			if(this.items[i].iItemId==iid)return this.items[i];
    		}
    		return null;
    	}
    	intValue( vid)
    	{
    		return parseInt(this.strValue(vid));
    	}
    	strValue( vid)
    	{
    		var i,j;
    		for(i=0;i<this.iItemCount;i++)
    		{
    			for(j=0;j<this.items[i].iValueCount;j++)
    			{
    				if(this.items[i].values[j].iVid==vid)return this.items[i].values[j].sValue;
    			}
    		}
    		return "-1";
    	}
    }

    class _POINT {
        constructor()
        {
            this.x=0;
            this.y=0;
        }

    	To( xx, yy)
    	{
    		this.x=xx;
    		this.y=yy;
    	}
    	copyfrom( p)
    	{
    		this.x=p.x;
    		this.y=p.y;
    	}
    }

    class SellGoods
    {/*
    	int iGid;
    	int iPrice;
    	int iTid;
    	int iCount;
    	Goods gp;*/
    	constructor()
    	{
    		this.iGid=0;
    		this.gp=null;
    	}
    }
    class SellPets
    {/*
    	int iPid;
    	int iPrice;
    	int iTid;*/
    	constructor()
    	{
    		this.iPid=0;
    	}
    }

    class MySell {

    	constructor()
    	{
    		var i;
    		this.bSelling=false;
    		if(MySell.sg==null)
    		{
    			MySell.sg=new Array(20);//
    			MySell.sp=new Array(8);//
    			for(i=0;i<20;i++)MySell.sg[i]=new SellGoods();
    			for(i=0;i<8;i++)MySell.sp[i]=new SellPets();
    		}
    		else
    		{//第二次摆摊，保持上次摆摊内容
    		}
    		
    		this.iW=900;
    		this.iH=580;
    		
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		
    		this.btn_changename=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_changename.InitButton("宠物改名按钮");
    		
    		this.in_name=new XInput(GmPlay$1.xani_ui);
    		this.in_name.Move(GmConfig$1.SCRW, GmConfig$1.SCRH, 10,10);
    		this.in_name.sDetail="";
    		this.in_name.iLength=8;
    		this.bEditingName=false;
    		
    		this.btn_putup=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_putup.InitButton("按钮1_110");
    		this.btn_putup.sName="上架";

    		this.btn_record=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_record.InitButton("按钮1_110");
    		this.btn_record.sName="记录";
    		
    		this.btn_exit=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_exit.InitButton("按钮1_110");
    		this.btn_exit.sName="收摊";
    	}

    	Draw()
    	{
    		var i,j;
    		var ox,oy;
    		var offx,offy;
    		if(!this.bShow)return;
    		this.iX = Math.floor(GmConfig$1.SCRW-this.iW)/2;
    		this.iY = Math.floor(GmConfig$1.SCRH-this.iH)/2;
    		
    		DrawMode$1.new_baseframe2(this.iX,this.iY,this.iW,this.iH,"摆","摊");
    		
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.Draw();
    		
    		//框子
    		DrawMode$1.new_framein(this.iX+30,this.iY+30,this.iW-60,this.iH-60);
    		
    		//我的摊位名，改名
    //		DrawMode.new_Text(this.iX+this.iW/2-150, this.iY+30+30, 300, this.sSellName);
    		DrawMode$1.new_numberframe(this.iX+30+20, this.iY+30+30-5, 700, this.sSellName);
    //		M3DFast.gi().DrawTextEx(this.iX+30+20, this.iY+30+30+40/2, this.sSellName, 0xff003e57, 40, 101, 1, 1, 0, 0, -2);
    		this.btn_changename.Move(this.iX+30+20+700,this.iY+30+20,60,60);
    		this.btn_changename.Draw();
    		if(this.bEditingName)
    		{
    			this.in_name.onscr();
    			this.sSellName=this.in_name.sDetail;
    			if(this.in_name.bFinished)
    			{//编辑完成//发送到服务器改名
    //				GmPlay.sop("send sell name");
    				this.bEditingName=false;
    				this.in_name.bFinished=false;
    				GmProtocol$1.gi().s_StartSell(6, 0, 0,this.sSellName);
    			}
    		}
    		
    		//道具部分
    		offx=this.iX+30+20;
    		offy=this.iY+30+30+40+30;
    		GmPlay$1.xani_nui3.DrawAnima(offx, offy, "摊位分类框",0);
    		M3DFast$1.gi().DrawTextEx(offx+105/2, offy+33/2, "物品", 0xffffffff, 25, 101, 1, 1, 0, -2, -2);
    		offy+=33+10;
    		this.iGx=offx;
    		this.iGy=offy;
    		GoodsDraw.new_DrawGoods(offx,offy, MyGoods.gi().goods[2], null,null);
    		for(i=0;i<20;i++)
    		{//画锁定框子，已上架的红框
    			if(MySell.sg[i].iGid>0)GoodsDraw.new_DrawRect(offx,offy, MyGoods.gi().goods[2], MySell.sg[i].gp, 1);
    		}
    		
    		var gap=32+20;
    		//宠物部分
    		offx=this.iX+30+20+430+20;
    		offy=this.iY+30+30+40+30;
    		GmPlay$1.xani_nui3.DrawAnima(offx, offy, "摊位分类框",0);
    		M3DFast$1.gi().DrawTextEx(offx+105/2, offy+33/2, "宠物", 0xffffffff, 25, 101, 1, 1, 0, -2, -2);
    		offy += 33+10;
    		this.iPx = offx;
    		this.iPy = offy;
    		DrawMode$1.new_frameon(offx, offy, 345, 175, 0);
    		for(i=0;i<8;i++)
    		{
    			ox=offx+5+i%4*85;
    			oy=offy+5+Math.floor(i/4)*85;
    			
    			GmPlay$1.xani_nui3.DrawAnima(ox,oy, "基本头像框",0);

    			if(i>=MyPets$1.mp.iPetCount)continue;

    			GmPlay$1.xani_head.DrawAnima_aa(ox+3,oy+3,GmPlay$1.de_pet.strValue(MyPets$1.mp.pets[i].iTid, 0, 1),0);//宠物头像

    			if((parseInt(MyPets$1.mp.pets[i].iFlag/100)%10)!=0)
    			{//系统绑定
    				M3DFast$1.gi().DrawText_2(ox-6+3,oy+80+3, "绑", 0xff6bfff4, 26, 101, 1, 1, 0, 0, -3, 4, 0xff000000);
    			}
    			
    			if(this.lockpet==MyPets$1.mp.pets[i])
    			{//选中，显示名字
    				GmPlay$1.xani_nui3.DrawAnimaEx(ox, oy, "物品选中框", 0, 101, 1, 1, 0, 0, 0);
    				DrawMode$1.new_TagText2(this.iPx, this.iPy+175+15, 150, "名称", MyPets$1.mp.pets[i].sName);
    			}
    			for(j=0;j<8;j++)
    			{
    				if(MySell.sp[j].iPid>0 && MyPets$1.mp.pets[i].iPid==MySell.sp[j].iPid)
    				{//上架的，显示价格
    					GmPlay$1.xani_nui3.DrawAnimaEx(ox, oy, "物品选中框", 1, 101, 1, 1, 0, 0, 0);
    					if(this.lockpet==MyPets$1.mp.pets[i])
    					{//显示价格
    						if(MySell.sp[j].iPrice==0)DrawMode$1.new_TagText2(this.iPx, this.iPy+175+15+gap, 150, "价格", "观赏");
    						else DrawMode$1.new_TagText2(this.iPx, this.iPy+175+15+gap, 150, "单价", ""+MySell.sp[j].iPrice);
    					}
    				}
    			}
    		}
    		//名称,单价,总价,铜币
    		//数量，购买
    		
    		//右下角功能按钮
    		this.btn_putup.Move(this.iPx+345-110,this.iPy+175+15,110,52);
    		this.btn_record.Move(this.iPx,this.iPy+175+15+gap*2,110,52);
    		this.btn_exit.Move(this.iPx+345-110,this.iPy+175+15+gap*2,110,52);
    		if(this.lockgoods!=null)
    		{//选中了物品，画选中框
    			GoodsDraw.new_DrawRect(this.iGx, this.iGy, MyGoods.gi().goods[2], this.lockgoods, 0);
    			DrawMode$1.new_TagText2(this.iPx, this.iPy+175+15, 150, "名称", GmPlay$1.de_goods.strValue(this.lockgoods.iTid, -1, 4));
    			this.bPutUp=true;
    			for(i=0;i<20;i++)
    			{
    				if(MySell.sg[i].iGid!=0 && MySell.sg[i].iGid==this.lockgoods.iGid)
    				{//已上架
    					if(MySell.sg[i].iPrice==0)DrawMode$1.new_TagText2(this.iPx, this.iPy+175+15+gap, 150, "价格", "观赏");
    					else DrawMode$1.new_TagText2(this.iPx, this.iPy+175+15+gap, 150, "单价", ""+MySell.sg[i].iPrice);
    					this.bPutUp=false;
    				}
    			}
    			if(this.bPutUp)this.btn_putup.sName="上架";
    			else this.btn_putup.sName="下架";
    			this.btn_putup.Draw();
    		}
    		if(this.lockpet!=null)
    		{
    			this.bPutUp=true;
    			for(i=0;i<MyPets$1.mp.iPetCount;i++)
    			{
    				if(MySell.sp[i].iPid!=0 && MySell.sp[i].iPid==this.lockpet.iPid)
    				{
    					this.bPutUp=false;
    				}
    			}
    			if(this.bPutUp)this.btn_putup.sName="上架";
    			else this.btn_putup.sName="下架";
    			this.btn_putup.Draw();
    		}
    		this.btn_exit.Draw();
    		this.btn_record.Draw();

    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	
    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		var xx,yy;
    		
    		if(this.lockgoods!=null)
    		{//选中了物品，可以点击上架按钮
    			if(this.btn_putup.ProcTouch(msg, x, y))
    			{
    				if(this.btn_putup.bCheck())
    				{
    					if(this.bPutUp)
    					{//锁定的物品上架
    						if(this.lockgoods.iAtts[7]!=0)
    						{
    							EasyMessage.easymsg.AddMessage("绑定物品不可上架");
    							return true;
    						}
    						XStat$1.gi().PushStat(XStat$1.GS_SHELVESFRAME);
    						this.lockpet=null;
    					}
    					else
    					{//下架
    						GmProtocol$1.gi().s_StartSell(2, this.lockgoods.iGid, 0,"");//
    					}
    				}
    				return true;
    			}
    		}
    		if(this.lockpet!=null)
    		{//选择了宠物，上下架
    			if(this.btn_putup.ProcTouch(msg, x, y))
    			{
    				if(this.btn_putup.bCheck())
    				{
    					if(this.bPutUp)
    					{//锁定的宠物上架
    						if((parseInt(this.lockpet.iFlag/100)%10)==0)
    						{
    							XStat$1.gi().PushStat(XStat$1.GS_SHELVESFRAME);
    							this.lockgoods=null;
    						}
    						else EasyMessage.easymsg.AddMessage("绑定宠物不能上架");
    					}
    					else
    					{//下架
    						GmProtocol$1.gi().s_StartSell(4, this.lockpet.iPid, 0,"");//
    					}
    				}
    				return true;
    			}
    		}
    		
    		this.lockgoods=GoodsDraw.new_LockGoods(x,y,this.iGx,this.iGy, MyGoods.gi().goods[2],msg);
    		GoodsDraw.NoMove();
    		if(msg==3 && this.lockgoods!=null && GoodsDraw.bCanProc())
    		{
    		}
    		var ox,oy;
    		this.lockpet=null;
    		for(i=0;i<MyPets$1.mp.iPetCount;i++)
    		{
    			ox=this.iPx+5+i%4*85;
    			oy=this.iPy+5+i/4*85;
    			if(XDefine$1.bInRect(x, y, ox,oy, 80,80))
    			{
    				this.lockpet=MyPets$1.mp.pets[i];
    				break;
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				this.bShow=false;
    			}
    			return true;
    		}
    		if(this.btn_exit.ProcTouch(msg, x, y))
    		{
    			if(this.btn_exit.bCheck())
    			{
    				this.bSelling=false;
    				GmProtocol$1.gi().s_StartSell(5, 0, 0,"");//收摊
    			}
    			return true;
    		}
    		if(this.btn_changename.ProcTouch(msg, x, y))
    		{
    			if(this.btn_changename.bCheck())
    			{
    				this.in_name.Move(this.btn_changename.iX,this.btn_changename.iY,this.btn_changename.iW,this.btn_changename.iH);
    				this.in_name.sDetail=this.sSellName;
    				this.in_name.Move(GmConfig$1.SCRW, GmConfig$1.SCRH, 10,10);
    				this.in_name.ProcTouch(3,GmConfig$1.SCRW+1,GmConfig$1.SCRH+1);
    				this.bEditingName=true;
    			}
    		}
    		if(this.btn_record.ProcTouch(msg, x, y))
    		{
    			if(this.btn_record.bCheck())
    			{
    				var s="";
    				for(i=0;i<10;i++)
    				{
    					s+=MySell.sSellRecord[i];
    					if(i<9)s+="#e";
    				}
    				FrameMessage.fm.Open(s);
    			}
    			return true;
    		}
    		return false;
    	}
    	
    	IndexSell( pls)
    	{
    		var i,j;
    		for(i=0;i<20;i++)MySell.sg[i].iGid=0;
    		for(i=0;i<8;i++)MySell.sp[i].iPid=0;
    		for(i=0;i<20;i++)
    		{
    			j=pls.GetNextByte();
    			if(j==0)break;
    			MySell.sg[i].iGid=pls.GetNextInt();
    			MySell.sg[i].iPrice=pls.GetNextInt();
    			MySell.sg[i].iTid=pls.GetNextInt();
    			MySell.sg[i].gp=null;
    			
    			for(j=0;j<20;j++)
    			{
    				if(MyGoods.gi().goods[2][j].iGid>0 && MyGoods.gi().goods[2][j].iGid==MySell.sg[i].iGid)
    				{
    					MySell.sg[i].gp=MyGoods.gi().goods[2][j];
    				}
    			}
    		}
    		for(i=0;i<8;i++)
    		{
    			j=pls.GetNextByte();
    			if(j==0)break;
    			MySell.sp[i].iPid=pls.GetNextInt();
    			MySell.sp[i].iPrice=pls.GetNextInt();
    			MySell.sp[i].iTid=pls.GetNextInt();
    		}
    	}
    	InitSell( pls)
    	{
    		var i;
    		this.sSellName=pls.GetNextString();
    //		in_sellname.sDetail=pls.GetNextString();
    		this.bSelling=true;
    		//清除出售的物品
    		for(i=0;i<20;i++)
    		{
    //			MySell.sg[i].iGid=0;
    			if(MySell.sg[i].iGid>0)
    			{
    //				GmPlay.sop(""+MySell.sg[i].iGid+"__"+MySell.sg[i].gp.iGid+"__"+MySell.sg[i].iPrice);
    				if(MySell.sg[i].gp==null)MySell.sg[i].iGid=0;
    				else if(MySell.sg[i].gp.iGid!=MySell.sg[i].iGid)MySell.sg[i].iGid=0;
    				else if(MySell.sg[i].gp.iOid!=2)MySell.sg[i].iGid=0;
    				else if(MySell.sg[i].gp.iTid>=101 && MySell.sg[i].gp.iTid<=105)MySell.sg[i].iGid=0;//宝石不上架
    				else
    				{//上架
    					GmProtocol$1.gi().s_StartSell(1, MySell.sg[i].iGid, MySell.sg[i].iPrice,"");
    				}
    			}
    		}
    		for(i=0;i<8;i++)
    		{
    			if(MySell.sp[i].iPid>0)
    			{
    				if(MyPets$1.mp.FindPet(MySell.sp[i].iPid)==null)MySell.sp[i].iPid=0;
    				else GmProtocol$1.gi().s_StartSell(3, MySell.sp[i].iPid, MySell.sp[i].iPrice,"");
    			}
    //			MySell.sp[i].iPid=0;
    		}
    		this.bShow=true;
    		this.lockgoods=null;
    	}
    	
    	AddSellRecord( pls)
    	{
    		var i;
    		for(i=9;i>0;i--)
    		{
    			MySell.sSellRecord[i]=MySell.sSellRecord[i-1];
    		}
    		MySell.sSellRecord[i]=pls.GetNextString();
    	}
    }
    MySell.sSellRecord=["","","","","","","","","",""];

    MySell.ms=null;
    MySell.gi=function()
    {
    	if(MySell.ms==null)MySell.ms=new MySell();
    	return MySell.ms;
    };

    //附近玩家
    class NearRole {
    	
    	constructor()
    	{
    		this.MAXMARK=8;
    		var i,j;
    		this.aa_body=new AnimaAction();
    		this.aa_weapon=new AnimaAction();
    		this.aa_mounts=new AnimaAction();
    		this.iSpeed=8;
    		this.bUseing=false;
    		this.iPopoDelay=0;
    		
    		this.iWeapTid=0;
    		this.iDWeapTid=0;
    		this.iMountsTid=0;
    		this.iDMountsTid=0;
    		
    		this.iChangeType=0;
    		this.iDChangeType=0;
    		
    		this.bsc=true;
    		this.bfc8=false;
    		this.bfc6=false;
    		this.sStat="站立";
    		this.sFace8="左";
    		
    		this.aa_team=new AnimaAction();
    		GmPlay$1.xani_ui.InitAnimaWithName("队伍图标", this.aa_team);
    		this.aa_fighting=new AnimaAction();
    		GmPlay$1.xani_ui.InitAnimaWithName("战斗中头顶", this.aa_fighting);
    		
    		this.sTitle="";
    		this.iFollowPid=0;
    		this.iFollowTid=10000;
    		this.aa_follow=new AnimaAction();
    		
    		this.iMarks=new Array(this.MAXMARK);//
    		for(i=0;i<this.MAXMARK;i++)this.iMarks[i]=new Int32Array(2);
    		
    		this.aa_mts=new Array(6);//
    		this.aa_bds=new Array(6);//
    		this.iColor=new Int32Array(6);//
    		this.aa_cls=new Array(6);//
    		for(i=0;i<6;i++){
    			this.aa_mts[i]=new AnimaAction();
    			this.aa_bds[i]=new AnimaAction();
    			this.aa_cls[i]=new Array(6);
    			this.iColor[i]=0;
    			for(j=0;j<6;j++){
    				this.aa_cls[i][j]=new AnimaAction();
    			}
    		}
    		this.iFace6 = 0;
    	}
    	SetMarks()
    	{
    		var i;
    		for(i=0;i<8;i++)
    		{
    			this.iMarks[i][0]=this.iX;
    			this.iMarks[i][1]=this.iY;
    		}
    	}
    	Go()
    	{
    		var i;
    		if(this.iX==this.iDx && this.iY==this.iDy)
    		{
    //			GmPlay.sop(this.sName+"="+this.iFaceTo+","+this.iDFaceTo);
    			if(this.IsStat("跑步"))this.ChangeStat("站立");
    			if(this.iDFaceTo!=this.iFaceTo)
    			{
    				this.bfc8=true;
    				this.bfc4=true;
    			}
    			this.iFaceTo=this.iDFaceTo;
    			return;
    		}
    		var iTick=parseInt(XDefine$1.llength(this.iX,this.iY,this.iDx,this.iDy)/this.iSpeed);
    		if(iTick<=0)
    		{
    			for(i=this.MAXMARK-1;i>0;i--)
    			{
    				this.iMarks[i][0]=this.iMarks[i-1][0];
    				this.iMarks[i][1]=this.iMarks[i-1][1];
    			}
    			this.iMarks[0][0]=this.iX;
    			this.iMarks[0][1]=this.iY;
    			this.iX=this.iDx;
    			this.iY=this.iDy;
    			if(this.iDFaceTo!=this.iFaceTo)
    			{
    				this.bfc8=true;
    				this.bfc4=true;
    			}
    			this.iFaceTo=this.iDFaceTo;
    			return;
    		}
    		this.FaceTo();
    		for(i=this.MAXMARK-1;i>0;i--)
    		{
    			this.iMarks[i][0]=this.iMarks[i-1][0];
    			this.iMarks[i][1]=this.iMarks[i-1][1];
    		}
    		this.iMarks[0][0]=this.iX;
    		this.iMarks[0][1]=this.iY;
    		this.iX=this.iX+(this.iDx-this.iX)/iTick;
    		this.iY=this.iY+(this.iDy-this.iY)/iTick;
    		if(this.IsStat("站立"))this.ChangeStat("跑步");
    	}

    	 FaceTo()
    	{
    		var i,j;
    		var iFace4;
    		var s;
    		
    		i=360-XDefine$1.GetAngleXY(this.iDx,this.iDy,this.iX,this.iY);
    		i%=360;
    		
    		if(0<=i && i<=90)iFace4=0;
    		else if(90<=i && i<=180)iFace4=3;
    		else if(180<=i && i<=270)iFace4=2;
    		else iFace4=1;
    //		GmPlay.sop("a="+iFace4+",,b="+this.iFaceTo/10);
    		if(iFace4!=parseInt(this.iFaceTo/10))this.bfc4=true;
    		
    		j=this.iFace6;
    		if(0<=i && i<=30)this.iFace6=0;
    		else if(30<i && i<=90)this.iFace6=5;
    		else if(90<i && i<=150)this.iFace6=4;
    		else if(150<i && i<=210)this.iFace6=3;
    		else if(210<i && i<=270)this.iFace6=2;
    		else if(270<i && i<=330)this.iFace6=1;
    		else this.iFace6=0;
    		if(j!=this.iFace6)this.bfc6=true;
    //		GmPlay.sop("ffff="+this.iFace6);
    		
    		s=this.sFace8;
    		if(45*1-23<i && i<45*1+23)
    		{
    			this.iFaceTo=1;
    			this.sFace8="右上";
    		}
    		else if(45*2-23<i && i<45*2+23)
    		{
    			this.iFaceTo=2;
    			this.sFace8="上";
    		}
    		else if(45*3-23<i && i<45*3+23)
    		{
    			this.iFaceTo=3;
    			this.sFace8="左上";
    		}
    		else if(45*4-23<i && i<45*4+23)
    		{
    			this.iFaceTo=4;
    			this.sFace8="左";
    		}
    		else if(45*5-23<i && i<45*5+23)
    		{
    			this.iFaceTo=5;
    			this.sFace8="左下";
    		}
    		else if(45*6-23<i && i<45*6+23)
    		{
    			this.iFaceTo=6;
    			this.sFace8="下";
    		}
    		else if(45*7-23<i && i<45*7+23)
    		{
    			this.iFaceTo=7;
    			this.sFace8="右下";
    		}
    		else
    		{
    			this.iFaceTo=0;
    			this.sFace8="右";
    		}
    		
    		this.iFaceTo=iFace4*10+this.iFaceTo;
    //		if(i<180)
    //		{
    //			this.iFaceTo=1;
    //			sFaceTo="右";
    //		}
    //		else
    //		{
    //			this.iFaceTo=0;
    //			sFaceTo="左";
    //		}
    		if(s!=this.sFace8)this.bfc8=true;
    //		if(j!=this.iFaceTo)bfc=true;
    	}
    	bFaceChanged6()
    	{
    		if(this.bfc6)
    		{
    			this.bfc6=false;
    			return true;
    		}
    		return false;
    	}
    	 bFaceChanged4()
    	{
    		if(this.bfc4)
    		{
    			switch(parseInt(this.iFaceTo/10))
    			{
    			case 0:this.sFace4="右";break;
    			case 1:this.sFace4="右下";break;
    			case 2:this.sFace4="左下";break;
    			case 3:this.sFace4="左";break;
    			}
    			this.bfc4=false;
    			return true;
    		}
    		return false;
    	}
    	bFaceChanged8()
    	{
    		if(this.bfc8)
    		{
    			switch(this.iFaceTo%10)
    			{
    			case 0:this.sFace8="右";break;
    			case 1:this.sFace8="右上";break;
    			case 2:this.sFace8="上";break;
    			case 3:this.sFace8="左上";break;
    			case 4:this.sFace8="左";break;
    			case 5:this.sFace8="左下";break;
    			case 6:this.sFace8="下";break;
    			case 7:this.sFace8="右下";break;
    			}
    			this.bfc8=false;
    			return true;
    		}
    		return false;
    	}
    	 bStatChanged()
    	{
    		if(this.bsc)
    		{
    			this.bsc=false;
    			return true;
    		}
    		return false;
    	}
    	ChangeStat( s)
    	{
    		if(this.sStat!=s)
    		{
    			this.sStat=s;
    			this.bsc=true;
    		}
    	}
    	IsStat( s)
    	{
    		if(this.sStat==s)return true;
    		else return false;
    	}
    	 sSex()
    	{
    		return (this.iSex==0?"女":"男");
    	}
    	 sRace()
    	{
    		if(this.iRace==0)return "人";
    		else if(this.iRace==1)return "魔";
    		else return "仙";
    	}
    	
    	DrawMounts( x, y, faceto, stat, changed)
    	{//1鹿,2狮,3马
    //		if(1==1)return;
    		var i,j=0;
    		var xb=this.iRace*2+this.iSex;
    		var ifaceto=GmMe$1.face_sti(faceto);
    		var istat=GmMe$1.stat_sti(stat);
    		var itype=parseInt(this.iMountsTid/100)-1;
    		var iMountsJjLev=this.iMountsTid%100;
    		var ijj=iMountsJjLev-1;
    //{{"前","人前","后","人后","武器"},{"武器","右翅膀","人右","身体","人左","左翅膀"},{"武器","右翅膀","人右","身体","人左","左翅膀"},{"武器","右翅膀","人右","身体","人左","左翅膀"},{"后","人","武器","前"},{"左翅膀","人左","身体","人右","右翅膀","武器"},{"左翅膀","人左","身体","人右","右翅膀","武器"},{"左翅膀","人左","身体","人右","右翅膀","武器"}},//二阶
    //GmPlay.xani_nmounts[itype]
    		var offy=0;
    		if(changed)this.iOffY=0;
    		var lionoff=0;
    		if(parseInt(this.iMountsTid/100)==2)lionoff=12;
    //		iMountsJjLev--;
    //		GmPlay.sop("itype="+itype+",,,,ijj="+ijj+",,,,istat="+istat+",,,ifaceto="+ifaceto);
    //		this.aa_mts,this.aa_bds，0up     1down      2left     ,3right        ,4middle
    		for(i=0;i<SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto].length;i++)
    		{
    //			GmPlay.sop(i+"="+SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]);
    			if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="左翅膀")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(iMountsJjLev+"_"+stat+"_"+faceto+"_左翅膀",this.aa_mts[2]);
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_mts[2]);
    				this.aa_mts[2].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="右翅膀")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(iMountsJjLev+"_"+stat+"_"+faceto+"_右翅膀",this.aa_mts[3]);
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_mts[3]);
    				this.aa_mts[3].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="前")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(iMountsJjLev+"_"+stat+"_"+faceto+"_前",this.aa_mts[0]);
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_mts[0]);
    				this.aa_mts[0].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="后")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(iMountsJjLev+"_"+stat+"_"+faceto+"_后",this.aa_mts[1]);
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_mts[1]);
    				this.aa_mts[1].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="身体")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(iMountsJjLev+"_"+stat+"_"+faceto+"_身体",this.aa_mts[4]);
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_mts[4]);
    				this.aa_mts[4].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="飘带")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(iMountsJjLev+"_"+stat+"_"+faceto+"_飘带",this.aa_mts[5]);
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_mts[5]);
    				this.aa_mts[5].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人前")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto+"_前",this.aa_bds[0]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto+"_前",0);
    					j=this.aa_bds[0].pani.iAnimaY(this.aa_bds[0]) - 30;
    					if(this.iOffY>j)this.iOffY=j;
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_bds[0]);
    				this.DrawColor(xb,this.aa_bds[0].iFrame,y+offy,x,y+lionoff,0);
    				this.aa_bds[0].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人后")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto+"_后",this.aa_bds[1]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto+"_后",1);
    					j=this.aa_bds[1].pani.iAnimaY(this.aa_bds[1]) - 30;
    					if(this.iOffY>j)this.iOffY=j;
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_bds[1]);
    				this.DrawColor(xb,this.aa_bds[1].iFrame,y+offy,x,y+lionoff,1);
    				this.aa_bds[1].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人左")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto+"_左",this.aa_bds[2]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto+"_左",2);
    					j=this.aa_bds[2].pani.iAnimaY(this.aa_bds[2]) - 30;
    					if(this.iOffY>j)this.iOffY=j;
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_bds[2]);
    				this.DrawColor(xb,this.aa_bds[2].iFrame,y+offy,x,y+lionoff,2);
    				this.aa_bds[2].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人右")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto+"_右",this.aa_bds[3]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto+"_右",3);
    					j=this.aa_bds[3].pani.iAnimaY(this.aa_bds[3]) - 30;
    					if(this.iOffY>j)this.iOffY=j;
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_bds[3]);
    				this.DrawColor(xb,this.aa_bds[3].iFrame,y+offy,x,y+lionoff,3);
    				this.aa_bds[3].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto,this.aa_bds[4]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto,4);
    					j=this.aa_bds[4].pani.iAnimaY(this.aa_bds[4]) - 30;
    					if(this.iOffY>j)this.iOffY=j;
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_bds[4]);
    				this.DrawColor(xb,this.aa_bds[4].iFrame,y+offy,x,y+lionoff,4);
    				this.aa_bds[4].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="武器")
    			{
    				if(changed)
    				{
    					this.iWeapTid=this.iDWeapTid;
    					if(this.iWeapTid>=0)GmPlay$1.xani_weap[xb][SortAnima.WeapFlag(this.iWeapTid)].InitAnimaWithName("骑"+stat+"_"+faceto, this.aa_weapon);
    				}
    				if(this.iWeapTid>=0)
    				{
    					if(SystemOperate.bShowWeapon)DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_weapon);
    					this.aa_weapon.NextFrame();
    				}
    				offy++;
    			}
    		}
    //		iMountsJjLev++;
    //		this.iMountsTid
    //		if (pms == null) {
    //			this.bsc = true;
    //			return;
    //		}
    		//_ANIMASORT_MOUNT[2马][1二阶][0站立1跑步][方向][切割]
    	}
    	ChangeColor( xb, sa, m)
    	{
    		if(!SystemOperate.bShowColor)return;
    		var i;
    		for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    		{
    			if(this.iColor[i]<=0 || this.iColor[i]>=6)continue;
    			GmPlay$1.xani_color[xb][this.iColor[i]-1].InitAnimaWithName(SortAnima._CHANGECOLOR[xb][i]+"_"+sa, this.aa_cls[m][i]);
    		}
    	}
    	DrawColor( xb, frame, offy, x, y, m)
    	{
    		if(!SystemOperate.bShowColor)return;
    		var i;
    		for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    		{
    			if(this.iColor[i]<=0 || this.iColor[i]>=6)continue;
    			this.aa_cls[m][i].iFrame=frame;
    			DrawBuffer.gi().DrawAnima_aa(offy,null, x, y, this.aa_cls[m][i]);
    		}
    	}
    	DrawRole( x,  y, faceto, stat, changed) 
    	{
    		var i;
    		var xb=this.iRace*2+this.iSex;
    		var roff=0;//有坐骑动作起始
    //		if (iFightMid <= 0 || MySell.gi().bSelling)roff=2;
    //		else
    //		{//根据坐骑类型设置起始
    //		}
    		var ifaceto=GmMe$1.face_sti(faceto);
    		var istat=GmMe$1.stat_sti(stat)+roff;
    //		GmPlay.sop("SortAnima="+SortAnima.iii);
    //		GmPlay.sop("xb="+xb+",,,istat="+istat+",,,ifaceto="+ifaceto+",,,"+stat);
    //		GmPlay.sop("AnimaSort._ANIMASORT="+AnimaSort._ANIMASORT.length);
    		var offy=0;
    		for(i=0;i<SortAnima._ANIMASORT[xb][istat][ifaceto].length;i++)
    		{
    //			GmPlay.sop("");
    			if(SortAnima._ANIMASORT[xb][istat][ifaceto][i]=="人物")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName(stat+"_"+faceto, this.aa_body);
    					this.ChangeColor(xb,stat+"_"+faceto,0);
    					this.iOffY = this.aa_body.pani.iAnimaY(this.aa_body) - 30;
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y, this.aa_body);
    				this.DrawColor(xb,this.aa_body.iFrame,y+offy,x,y,0);
    				this.aa_body.NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT[xb][istat][ifaceto][i]=="武器")
    			{
    				if(changed)
    				{
    					this.iWeapTid=this.iDWeapTid;
    					//this.iWeapTid = MyGoods.gi().GetWeaponTid();
    					if(this.iWeapTid>=0)GmPlay$1.xani_weap[xb][SortAnima.WeapFlag(this.iWeapTid)].InitAnimaWithName(stat+"_"+faceto, this.aa_weapon);
    				}
    				//GmPlay.sop(this.sName+"==="+this.iWeapTid+",,,"+SortAnima.WeapFlag(this.iWeapTid));
    				if(this.iWeapTid>=0)
    				{
    //					GmPlay.sop("SortAnima.WeapFlag(this.iWeapTid)="+SortAnima.WeapFlag(this.iWeapTid));
    					if(SystemOperate.bShowWeapon)DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y, this.aa_weapon);
    					this.aa_weapon.NextFrame();
    				}
    //				GmPlay.sop("this.iWeapTid="+this.iWeapTid);
    				offy++;
    			}
    		}
    		// int xb=race*2+sex;
    		// xani_newrole[0]
    	}
    	Draw()
    	{
    		if(JQMode.jq.bJQLock())return;
    		var i;
    		var bchanged=false;
    		if(this.iDMountsTid!=this.iMountsTid)bchanged=true;//坐骑改变
    		this.iMountsTid=this.iDMountsTid;
    		if(this.iDChangeType!=this.iChangeType)bchanged=true;//变身改变
    		this.iChangeType=this.iDChangeType;
    		if(this.iChangeType>0)
    		{//变身状态，改变动画成怪物动画
    			bchanged=this.bStatChanged()|bchanged;
    			bchanged=this.bFaceChanged6()|bchanged;
    			if(bchanged)
    			{
    				if(this.iFace6==0)this.sFace6="右";
    				else if(this.iFace6==1)this.sFace6="右下";
    				else if(this.iFace6==2)this.sFace6="左下";
    				else if(this.iFace6==3)this.sFace6="左";
    				else if(this.iFace6==4)this.sFace6="左上";
    				else if(this.iFace6==5)this.sFace6="右上";
    				
    				if(this.iChangeType>=10000)GmPlay$1.xani_pets[this.iChangeType%10000].InitAnimaWithName("变异_"+this.sStat+"_"+this.sFace6, this.aa_body);
    				else GmPlay$1.xani_pets[this.iChangeType%10000].InitAnimaWithName(this.sStat+"_"+this.sFace6, this.aa_body);
    				this.iOffY = this.aa_body.pani.iAnimaY(this.aa_body) - 30;
    			}
    		}
    		else if(this.iMountsTid>0 && this.iIsSelling==0 && SystemOperate.bShowMount)
    		{//有坐骑
    			bchanged = this.bWeapChanged() | bchanged;//武器变化
    			bchanged=this.bFaceChanged8()|bchanged;
    			bchanged=this.bStatChanged()|bchanged;
    		}
    		else
    		{//没坐骑或摆摊
    			//this.iMountsTid/100   坐骑tid
    			//%100                  jjlev
    			bchanged = this.bStatChanged() | bchanged;//动作变化
    			bchanged = this.bFaceChanged8() | bchanged;//方向变化
    			bchanged = this.bWeapChanged() | bchanged;//武器变化

    //			i=this.iMountsTid/100;
    //			j=this.iMountsTid%100;
    //			if(bchanged)
    //			{
    //				switch(this.iFaceTo/10)
    //				{
    //				case 0:this.sFace4="右";break;
    //				case 1:this.sFace4="右下";break;
    //				case 2:this.sFace4="左下";break;
    //				case 3:this.sFace4="左";break;
    //				}
    //				GmPlay.xani_mounts[i].InitAnimaWithName(j+"_"+this.sStat+"_"+this.sFace4,this.aa_mounts);
    //				GmPlay.xani_role[this.iRace*2+this.iSex].InitAnimaWithName(GmPlay.de_mounts.strValue(i, 0, 2)+j+"_"+this.sStat+"_"+this.sFace4, this.aa_body);
    //				this.iOffY=this.aa_body.pani.iAnimaY(this.aa_body)-30;
    ////				GmPlay.sop(GmPlay.de_mounts.strValue(i, 0, 2)+j+"_"+this.sStat+"_"+this.sFace4);
    ////				GmPlay.sop(this.iMountsTid+"");
    //			}
    		}

    //		if(this.bWeapChanged())
    //		{//获得当前武器栏
    //			this.iWeapTid=this.iDWeapTid;
    //			if(this.iWeapTid>0)
    //			{
    //				if(this.iWeapTid==248 || this.iWeapTid==249 || this.iWeapTid==250)
    //				{//70武器xani_weap70
    //					GmPlay.xani_weap70.InitAnimaWithName(GmMe.sSex(this.iSex)+GmPlay.de_goods.strValue(this.iWeapTid, 0, 4)+"_"+this.sStat+"_"+this.sFace8, this.aa_weapon);
    //				}
    //				else GmPlay.xani_role[this.iRace*2+this.iSex].InitAnimaWithName(GmPlay.de_goods.strValue(this.iWeapTid, 0, 4)+"_"+this.sStat+"_"+this.sFace8, this.aa_weapon);
    //				this.aa_weapon.iFrame=this.aa_body.iFrame;
    //				this.aa_weapon.iDelay=this.aa_body.iDelay;
    //			}
    //		}
    		
    		if(SystemOperate.bShowRole && this.iFollowPid>0 && SystemOperate.bShowFollow)
    		{//展示的宠物
    				{//跟人物对应起来
    					var iFollowX=this.iMarks[5][0];
    					var iFollowY=this.iMarks[5][1];
    					var s="";
    					if(parseInt(this.iFollowTid/1000)==0)s="";
    					else s="变异_";
    					if(iFollowX>this.iX)s+=this.sStat+"_左";
    					else s+=this.sStat+"_右";
    					GmPlay$1.xani_pets[this.iFollowTid%1000].InitAnimaWithName(s, this.aa_follow);//左
    					this.aa_follow.SetFrame(GmPlay$1.iDelay);
    					
    					DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy+iFollowY,null, MapManager.gi().iOffx+iFollowX, MapManager.gi().iOffy+iFollowY, this.aa_follow);//跟随的宠物
    					FireworksEffect.DrawAura(0, MapManager.gi().iOffx+iFollowX, MapManager.gi().iOffy+iFollowY, DrawBuffer.gi(), MapManager.gi().iOffy+iFollowY-1);//附近玩家
    //					DrawBuffer.gi().DrawText(MapManager.gi().iOffy+iFollowY, 1, MapManager.gi().iOffx+iFollowX+1, MapManager.gi().iOffy+iFollowY+30+1, this.sFollowName, 0xff000000,20);
    //					DrawBuffer.gi().DrawText(MapManager.gi().iOffy+iFollowY+1, 1, MapManager.gi().iOffx+iFollowX, MapManager.gi().iOffy+iFollowY+30, this.sFollowName, 0xffffff00,20);
    					DrawBuffer.gi().DrawText_2(MapManager.gi().iOffy+iFollowY-1, 1, MapManager.gi().iOffx+iFollowX, MapManager.gi().iOffy+iFollowY+30, this.sFollowName, 0xffffb080,20,1,0xff000000);
    				}
    		}
    		DrawBuffer.gi().BeginGroup();

    		//2称谓名字
    		if(SystemOperate.bShowName || MyTeam$1.bInTmpTeam(this.iRid))
    		{
    			if(this.sTitle.length>0 && SystemOperate.bShowTitle)
    			{
    				DrawBuffer.gi().DrawText_2(MapManager.gi().iOffy+this.iY, 1, MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY+20, this.sTitle, 0xff80c0ff,20,1,0xff000000);//蓝色
    				DrawBuffer.gi().DrawText_2(MapManager.gi().iOffy+this.iY, 1, MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY+20+20, this.sName, 0xff80ff80,20,1,0xff000000);//绿色
    			}
    			else
    			{
    				DrawBuffer.gi().DrawText_2(MapManager.gi().iOffy+this.iY, 1, MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY+30, this.sName, 0xff80ff80,20,1,0xff000000);
    			}
    		}
    		//3人物
    		if(SystemOperate.bShowRole || MyTeam$1.bInTmpTeam(this.iRid))
    		{
    			//1影子
    			FireworksEffect.DrawAura(this.iAura, MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY, DrawBuffer.gi(), MapManager.gi().iOffy+this.iY);//附近玩家
    			if(this.iChangeType>0)
    			{
    				DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy+this.iY,this.aa_body.xani, MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY, this.aa_body);
    				this.aa_body.NextFrame();
    			}
    			else if(this.iMountsTid>0 && this.iIsSelling==0 && SystemOperate.bShowMount)
    			{
    				this.DrawMounts(MapManager.gi().iOffx+this.iX,MapManager.gi().iOffy+this.iY,this.sFace8,this.sStat,bchanged);
    			}
    			else
    			{
    				this.DrawRole(MapManager.gi().iOffx+this.iX,MapManager.gi().iOffy+this.iY,this.sFace8,this.sStat,bchanged);
    //				this.iWeapTid=this.iDWeapTid;
    //				DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy+this.iY,GmPlay.xani_role[this.iRace*2+this.iSex], MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY, this.aa_mounts);
    //				DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy+this.iY+1,GmPlay.xani_role[this.iRace*2+this.iSex], MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY, this.aa_body);
    //				this.aa_mounts.NextFrame();
    //				this.aa_body.NextFrame();
    			}

    			
    			if(this.iIsLeader==1)
    			{
    				DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy+this.iY,GmPlay$1.xani_ui,MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY+this.iOffY,this.aa_team);
    //				GmPlay.xani_ui.DrawAnima_aa(MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY-120, this.aa_team);
    				GmPlay$1.xani_ui.NextFrame(this.aa_team);
    			}
    			if(this.iFighting==1)
    			{
    				DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy+this.iY,GmPlay$1.xani_ui,MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY+this.iOffY,this.aa_fighting);
    //				GmPlay.xani_ui.DrawAnima_aa(MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY-120, this.aa_team);
    				GmPlay$1.xani_ui.NextFrame(this.aa_fighting);
    			}
    			this.DrawPopo(MapManager.gi().iOffx+this.iX,MapManager.gi().iOffy+this.iY);
    		}

    		if(this.iIsSelling==1 && SystemOperate.bShowSell)
    		{//摆摊中
    			this.iSellWidth=M3DFast$1.gi().GetTextWidth(this.sSellName, 25);
    			i=(this.iSellWidth-60)/30+2;
    			if(i<2)i=2;
    			else if(i>6)i=6;
    			
    			GmPlay$1.xani_ui2.InitAnimaWithName("普通摊位", GmPlay$1.aaa);
    //			GmPlay.xani_ui.InitAnimaWithName("摊位"+i, GmPlay.aaa);
    //			DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy+this.iY,GmPlay.xani_ui, MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY-140, GmPlay.aaa);
    			GmPlay$1.aaa.iFrame=0;DrawBuffer.gi().DrawAnimaEx(MapManager.gi().iOffy+this.iY-2, MapManager.gi().iOffx+this.iX-this.iSellWidth/2-9, MapManager.gi().iOffy+this.iY-140+5, GmPlay$1.aaa, 101, 1, 1, 0, 0, 0);
    			GmPlay$1.aaa.iFrame=1;DrawBuffer.gi().DrawAnimaEx(MapManager.gi().iOffy+this.iY-2, MapManager.gi().iOffx+this.iX-this.iSellWidth/2, MapManager.gi().iOffy+this.iY-140+5, GmPlay$1.aaa, 101, 1.0*this.iSellWidth/10, 1, 0, 0, 0);
    			GmPlay$1.aaa.iFrame=2;DrawBuffer.gi().DrawAnimaEx(MapManager.gi().iOffy+this.iY-2, MapManager.gi().iOffx+this.iX+this.iSellWidth/2, MapManager.gi().iOffy+this.iY-140+5, GmPlay$1.aaa, 101, 1, 1, 0, 0, 0);
    //			DrawBuffer.gi().FillRect(MapManager.gi().iOffy+this.iY, MapManager.gi().iOffx+this.iX-this.iSellWidth/2, MapManager.gi().iOffy+this.iY-140, MapManager.gi().iOffx+this.iX+this.iSellWidth/2, MapManager.gi().iOffy+this.iY-100, 0xff000000);
    //			DrawBuffer.gi().DrawText_2(MapManager.gi().iOffy+this.iY-1, 1, MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY-120, this.sSellName, 0xff40c0ff,25,1,0xff000000);
    			DrawBuffer.gi().DrawText(MapManager.gi().iOffy+this.iY-1, 1, MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY-120, this.sSellName, 0xff40c0ff,25);
    		}
    		DrawBuffer.gi().EndGroup();
    //		DrawBuffer.gi().DrawText(MapManager.gi().iOffy+this.iY+20, 1, MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY+20, this.sName+"["+this.sRace()+"]["+this.sSex()+"]", 0xffffff00,25);

    	}
    	DrawPopo( x, y)
    	{
    		if(this.iPopoDelay<=0)return;

    		this.iPopoDelay--;
    		FormatString.gi().Format(this.sPopoString, 151, 25);
    		x-=FormatString.gi().iW/2;
    		var sy=y+this.iOffY+40-FormatString.gi().iH;
    		DrawBuffer.gi().FillRect(y, x, sy, x+FormatString.gi().iW, sy+FormatString.gi().iH, 0x50000000);
    		FormatString.gi().DrawToBuffer(y+1,x,sy);
    	}
    	bWeapChanged()
    	{
    		if(this.bwc)
    		{
    			this.bwc=false;
    			return true;
    		}
    		return false;
    	}
    }

    class BackToSchool extends BaseClass{

    	constructor( a)
    	{
    		super();
    	}
    	Draw()
    	{
    		if (Confirm1.end(Confirm1.CONFIRM_BACKTOSCHOOL))
    		{//
    			if (Confirm1.bConfirm) 
    			{// 同意，寻路到师门
    				if(GmMe$1.me.rbs.iSchoolId>0)
    				{
    //					MyAI.gi().FindNpc(MyAI._TEACHERID[GmMe.me.rbs.iSchoolId], true);
    					MyAI.gi().FindNpc(BackToSchool.iNpcId, true,true);
    				}
    			}
    			XStat$1.gi().PopStat(1);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		return false;
    	}
    }
    BackToSchool.iNpcId;
    BackToSchool.Open=function( pls)
    {
    	XStat$1.gi().PushStat(XStat$1.GS_BACKTOSCHOOL);
    	BackToSchool.iNpcId=pls.GetNextInt();//npcid???
    	Confirm1.start(Confirm1.CONFIRM_BACKTOSCHOOL, pls.GetNextString());
    };

    class SelectFace {
    	
    	Init()
    	{
    		this.iSelectStat=0;
    	}
    	constructor()
    	{
    		this.aa_face=new AnimaAction();
    		SelectFace.iSelectPage=0;
    		this.btn_up=null;
    		this.btn_down=null;
    	}
    	Draw()
    	{
    		var i,j,p;
    		
    		if(this.btn_up==null)
    		{
    			this.btn_up=new XButton(GmPlay$1.xani_button);
    			this.btn_up.bSingleButton=true;
    			this.btn_up.sName="普通";
    			
    			this.btn_down=new XButton(GmPlay$1.xani_button);
    			this.btn_down.bSingleButton=true;
    			this.btn_down.sName="会员";
    		}

    		this.BW=80;
    		this.BH=80;
    		this.WW=5;
    		this.HH=5;
    		this.iW=this.BW*this.WW;
    		this.iH=this.BH*this.HH+60;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		M3DFast$1.gi().FillRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0x80000000);
    		
    		this.btn_up.Move(this.iX, this.iY+this.BH*this.HH, 120, 60);
    		this.btn_up.Draw();
    		this.btn_down.Move(this.iX+120, this.iY+this.BH*this.HH, 120, 60);
    		this.btn_down.Draw();
    		
    		for(i=0;i<this.WW;i++)
    		{
    			for(j=0;j<this.HH;j++)
    			{
    				p=i+j*this.WW;
    				if(SelectFace.iSelectPage==0 && p>=0 && p<=21)
    				{
    					GmPlay$1.xani_face.InitAnimaWithName("表情"+p, this.aa_face);
    					this.aa_face.SetFrame(GmPlay$1.iDelay);
    					GmPlay$1.xani_face.DrawAnima_aa(this.iX+this.BW/2-GmPlay$1.xani_face.iAnimaW(this.aa_face)/2+i*this.BW, 
    						                                          this.iY+this.BH/2-GmPlay$1.xani_face.iAnimaH(this.aa_face)/2+j*this.BH, this.aa_face);
    				}
    				if(SelectFace.iSelectPage==1 && p>=0 && p<=12)
    				{
    					p+=100;
    					GmPlay$1.xani_face.InitAnimaWithName("表情"+p, this.aa_face);
    					this.aa_face.SetFrame(GmPlay$1.iDelay);
    					GmPlay$1.xani_face.DrawAnima_aa(this.iX+this.BW/2-GmPlay$1.xani_face.iAnimaW(this.aa_face)/2+i*this.BW, 
    						                                          this.iY+this.BH/2-GmPlay$1.xani_face.iAnimaH(this.aa_face)/2+j*this.BH, this.aa_face);
    				}
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i,j,p;
    		if(this.btn_up.ProcTouch(msg, x, y))
    		{
    			if(this.btn_up.bCheck())
    			{
    				SelectFace.iSelectPage=0;
    			}
    		}
    		if(this.btn_down.ProcTouch(msg, x, y))
    		{
    			if(this.btn_down.bCheck())
    			{
    				SelectFace.iSelectPage=1;
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x,y,this.iX,this.iY, this.iW, this.iH))
    		{
    			this.iSelectStat=10;
    			return true;
    		}
    		for(i=0;i<this.WW;i++)
    		{
    			for(j=0;j<this.HH;j++)
    			{
    				p=i+j*this.WW;
    				if((SelectFace.iSelectPage==0 &&p>=0 && p<=21) ||
    						(SelectFace.iSelectPage==1 &&p>=0 && p<=12))
    				{
    					if(XDefine$1.bInRect(x, y, this.iX+i*this.BW, this.iY+j*this.BH, this.BW, this.BH))
    					{
    						this.iSelectPoint=p+SelectFace.iSelectPage*100;
    						if(msg==3)
    						{
    							this.iSelectStat=1;
    							return true;
    						}
    					}
    				}
    			}
    		}
    		return false;
    	}
    }

    SelectFace.iSelectPage;
    SelectFace.sf=null;
    SelectFace.gi=function()
    {
    	if(SelectFace.sf==null)SelectFace.sf=new SelectFace();
    	return SelectFace.sf;
    };

    class SelectColor {

        
    	 
    	
    	 tostr()
    	{
    		var s=parseInt(this.iColor,16);
    		while(s.length<6)s="0"+s;
    		if(s.length>6)s.substring(s.length-6, s.length);
    		return s;
    	}
    	 Init( c)
    	{
    		if(c>=0)
    		{
    			this.iColor=c;
    			this.iR=(c>>16)&0xff;
    			this.iG=(c>>8)&0xff;
    			this.iB=c&0xff;
    		}
    		this.iSelectStat=0;
    	}
    	SelectColor()
    	{
    		this.iR=0xff;
    		this.iG=0xff;
    		this.iB=0xff;
    		this.iColor=0xffffffff;
    	}
    	 Draw()
    	{
    		var i,j;
    		if(this.btn_ok==null)
    		{
    			this.btn_ok=new XButton(GmPlay$1.xani_nui2);
    			this.btn_ok.InitButton("按钮1_110");
    			this.btn_ok.sName="选择";
    		}
    		var offx,offy;
    		this.iW=256+50+110+20;
    		this.iH=256+50+52+20;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		offx=this.iX+25;
    		offy=this.iY+25;
    		i=0xff000000|this.iB;
    		j=15;
    		M3DFast$1.gi().FillRect_2D_ex(offx,offy,offx+256,offy+256, i,0xff00|i,0xffff00|i,0xff0000|i);
    		M3DFast$1.gi().DrawCircle(offx+this.iR, offy+255-this.iG, j+1, j+1, 0xff000000);
    		M3DFast$1.gi().DrawCircle(offx+this.iR, offy+255-this.iG, j, j, 0xffffffff);
    		M3DFast$1.gi().DrawCircle(offx+this.iR, offy+255-this.iG, j-1, j-1, 0xff000000);

    		offx+=256+20;
    		i=0xff000000|(this.iR<<16)|(this.iG<<8);
    		M3DFast$1.gi().FillRect_2D_ex(offx,offy,offx+110,offy+256,i,i|0xff,i|0xff,i);
    		M3DFast$1.gi().DrawCircle(offx+70/2, offy+255-this.iB, j+1, j+1, 0xff000000);
    		M3DFast$1.gi().DrawCircle(offx+70/2, offy+255-this.iB, j, j, 0xffffffff);
    		M3DFast$1.gi().DrawCircle(offx+70/2, offy+255-this.iB, j-1, j-1, 0xff000000);

    		offx=this.iX+25;
    		offy=this.iY+25+256+20;
    		M3DFast$1.gi().FillRect_2D(offx+80,offy,offx+256,offy+52,0xff000000|this.iColor);
    		M3DFast$1.gi().DrawTextEx(offx, offy+52/2, "颜色：", 0xff003e57, 30, 101, 1, 1, 0, 0, -2);
    		
    		offx=this.iX+25+256+20;
    		offy=this.iY+25+256+20;
    		this.btn_ok.Move(offx, offy, 110, 52);
    		this.btn_ok.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(msg==3 && !XDefine$1.bInRect(x,y,this.iX,this.iY, this.iW, this.iH))
    		{
    			this.iSelectStat=10;
    			return true;
    		}
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{
    				this.iSelectStat=1;
    				return true;
    			}
    			return false;
    		}
    		if(XDefine$1.bInRect(x, y, this.iX+25, this.iY+25, 256, 256))
    		{
    			this.iR=x-(this.iX+25);
    			this.iG=255-(y-(this.iY+25));
    			this.iColor=(this.iR<<16)|(this.iG<<8)|this.iB;
    		}
    		if(XDefine$1.bInRect(x, y, this.iX+25+256+20, this.iY+25, 70, 256))
    		{
    			this.iB=255-(y-(this.iY+25));
    			this.iColor=(this.iR<<16)|(this.iG<<8)|this.iB;
    		}
    		return false;
    	}
    }

    SelectColor.sc=new SelectColor();

    class SelectPet extends BaseClass{


    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=250+30+30;
    		this.iH=MyPets$1.mp.iPetCount*50+40;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		if(this.btn_sel==null)
    		{
    			this.btn_sel=new Array(MyPets$1.mp.iPetCount);//
    			
    			for(i=0;i<MyPets$1.mp.iPetCount;i++)
    			{
    				this.btn_sel[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    				this.btn_sel[i].InitButton("3号按钮250_42");
    				this.btn_sel[i].Move(this.iX+30, this.iY+20+i*50, 250, 42);
    //				this.btn_sel[i].iNameSize=30;
    				this.btn_sel[i].sName=MyPets$1.mp.pets[i].sName;
    			}
    		}
    	}


    	Draw()
    	{
    		var i;
    		DrawMode$1.frame_type4("10号框20_20", this.iX, this.iY, this.iW, this.iH, 20, 20);
    		for(i=0;i<MyPets$1.mp.iPetCount;i++)
    		{
    			this.btn_sel[i].Draw();
    		}
    	}
    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<MyPets$1.mp.iPetCount;i++)
    		{
    			if(this.btn_sel[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_sel[i].bCheck())
    				{
    					if(SelectPet.iType==0)PublicChat_Send.AddPet(MyPets$1.mp.pets[i]);
    					else if(SelectPet.iType==1)PrivateChat_Send.AddPet(MyPets$1.mp.pets[i]);
    					XStat$1.gi().PopStat(1);
    				}
    				return true;
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return false;
    	}

    }

    SelectPet.iType=0;
    SelectPet.Open=function( type)
    {
        if(MyPets$1.mp.iPetCount<=0)
        {
            EasyMessage.easymsg.AddMessage("当前没有宠物");
            return;
        }
        SelectPet.iType=type;
        XStat$1.gi().PushStat(XStat$1.GS_SELECTPET);
    };
    // SelectPet.Open=function( g)
    // {
    //     XStat.gi().PushStat(XStat.GS_SELECTPET);
    // }

    class PrivateChat_Send extends BaseClass{
    	
    	////////////////////////////////////////
    //	XButton btn_detail;//查看资料
    	
    //	public boolean bShow;

    	 constructor( ani)
    	{//有记录模式/无记录模式
    		super();
             this.bSend=false;
             
    		this.bSelectColor=false;
    		this.bSelectFace=false;


    		this.btn_voice=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_voice.InitButton("发送语音");
    		
    		// this.btn_color=new XButtonEx2(GmPlay.xani_button);
    		// this.btn_color.InitButton("发送颜色");
    		
    		this.btn_face=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_face.InitButton("发送表情");

    		this.btn_goods=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_goods.InitButton("发送物品");
    		
    		this.btn_pet=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_pet.InitButton("发送宠物");
    		
    		this.btn_team=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_team.InitButton("发送队伍");

    		this.btn_send=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_send.InitButton("发送聊天按钮");
    		this.btn_send.sName="发送";
    		
    		this.btn_record=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_record.InitButton("发送聊天按钮");
    		this.btn_record.sName="记录";
    		
    		this.btn_watch=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_watch.InitButton("发送聊天按钮");
    		this.btn_watch.sName="查看";

    		if(PrivateChat_Send.in_speak==null)
    		{
    			PrivateChat_Send.in_speak=new XInput(GmPlay$1.xani_nui3);
    			PrivateChat_Send.in_speak.bHideText=true;
    		}
    //	PrivateChat_Send.in_speak.OpenInput();
    		PrivateChat_Send.in_speak.sDetail="";
    		
    		this.ResetSize();
    		if(PrivateChat_Send.cext==null)
    		{
    			PrivateChat_Send.cext=new Array(5);//
    			for(var i=0;i<5;i++)PrivateChat_Send.cext[i]=new _EXTDATA();
    			PrivateChat_Send.ClearCext();
    		}
    		
            this.iCurrentColor=0xffffff;
            
             this.iRecordStat=0;
             this.iRecordingShow=0;
    		 this.iRecordDelay=0;
    		 this.iScrollY=0;
    	}
    	  ResetSize()
    	{
    		var i=75;
    		this.iW=560+50-20;
    		if(XRecordFast.iPrivateChatMode==0)
    		{
    //			this.iW=550;
    			this.iH=360;
    			this.iX=(GmConfig$1.SCRW-this.iW)/2;
    			this.iY=(GmConfig$1.SCRH-this.iH)/2-50;
    			
    			PrivateChat_Send.in_speak.Move(this.iX+25, this.iY+25+60+10, this.iW-50, this.iH-25-65-10-25-60-10);
    			
    			this.btn_voice.Move(this.iX+25,this.iY+this.iH-25-65, 64, 65);
    			// this.btn_color.Move(this.iX+25+i,this.iY+this.iH-25-65, 64, 65);
    			this.btn_face.Move(this.iX+25+i*2,this.iY+this.iH-25-65, 64, 65);
    			this.btn_goods.Move(this.iX+25+i*3,this.iY+this.iH-25-65, 64, 65);
    			this.btn_pet.Move(this.iX+25+i*4,this.iY+this.iH-25-65, 64, 65);
    			this.btn_team.Move(this.iX+25+i*5,this.iY+this.iH-25-65, 64, 65);
    			this.btn_send.Move(this.iX+this.iW-90-25,this.iY+this.iH-25-65+2, 90, 60);
    			this.btn_record.Move(this.iX+this.iW-90-25,this.iY+25, 90, 60);
    			this.btn_watch.Move(this.iX+this.iW-90-25-90-10,this.iY+25, 90, 60);
    		}
    		else
    		{
    //			this.iW=550;
    			this.iH=GmConfig$1.SCRH;
    			this.iX=(GmConfig$1.SCRW-this.iW)/2;
    			this.iY=0;
    			PrivateChat_Send.in_speak.Move(this.iX+25, this.iY+this.iH-20-65-10-100, this.iW-50, 100);
    			
    			this.btn_voice.Move(this.iX+25,this.iY+this.iH-20-65, 64, 65);
    			// this.btn_color.Move(this.iX+25+i,this.iY+this.iH-20-65, 64, 65);
    			this.btn_face.Move(this.iX+25+i*2,this.iY+this.iH-20-65, 64, 65);
    			this.btn_goods.Move(this.iX+25+i*3,this.iY+this.iH-20-65, 64, 65);
    			this.btn_pet.Move(this.iX+25+i*4,this.iY+this.iH-20-65, 64, 65);
    			this.btn_team.Move(this.iX+25+i*5,this.iY+this.iH-20-65, 64, 65);
    			this.btn_send.Move(this.iX+this.iW-90-25,this.iY+this.iH-20-65+2, 90, 60);
    			this.btn_record.Move(this.iX+this.iW-90-25,this.iY+20, 90, 60);
    			this.btn_watch.Move(this.iX+this.iW-90-25-90-10,this.iY+20, 90, 60);
    		}
    	}

    	
    	 DrawSelect( offx, offy, pms)
    	{
    		var k;
    		for(k=0;k<5;k++)
    		{
    			switch(pms.exts[k].type)
    			{
    			case 0://物品
    			case 1://宠物
    			case 2://语音
    				pms.lrs_small[k].CopyFrom(FormatString.gi().lrs[k]);
    				if(pms.exts[k].iShowDelay>0)
    				{
    					for(var m=0;m<pms.lrs_small[k].iCount;m++)
    					{
    						var xx1=offx+pms.lrs_small[k].rs[m].iX;
    						var yy1=offy+pms.lrs_small[k].rs[m].iY;
    						var xx2=offx+pms.lrs_small[k].rs[m].iX+pms.lrs_small[k].rs[m].iW;
    						var yy2=offy+pms.lrs_small[k].rs[m].iY+pms.lrs_small[k].rs[m].iH;
    						M3DFast$1.gi().FillRect_2D(xx1,yy1,xx2,yy2, 0xff00ff|(pms.exts[k].iShowDelay<<24));
    					}
    					if(pms.exts[k].iShowDelay>200)pms.exts[k].iShowDelay-=3;
    					else if(pms.exts[k].iShowDelay>150)pms.exts[k].iShowDelay-=6;
    					else if(pms.exts[k].iShowDelay>100)pms.exts[k].iShowDelay-=9;
    					else if(pms.exts[k].iShowDelay>50)pms.exts[k].iShowDelay-=12;
    					else pms.exts[k].iShowDelay=0;
    				}
    				break;
    			}
    		}
    	}
    	 DrawPms( offx, offy, ww, pms)
    	{
    		var k;
    		var detail="#c176b51"+pms.sDetail;
    		for(k=1;k<5;k++)
    		{
    			switch(pms.exts[k].type)
    			{
    			case 0://物品
    				detail=FormatString.gi().InsertLocker(k, detail, "["+GmPlay$1.de_goods.strValue(pms.exts[k].tid, 0, 4)+"]",GameData$1.EXTCOLOR,"#c00c000");
    				break;
    			case 1://宠物
    				detail=FormatString.gi().InsertLocker(k, detail, "["+GmPlay$1.de_pet.strValue(pms.exts[k].tid, 0, 1)+"]",GameData$1.EXTCOLOR,"#c00c000");
    				break;
    			case 2://语音
    				detail=FormatString.gi().InsertLocker(k, detail, "[语音:"+pms.exts[k].detail+"]",GameData$1.EXTCOLOR,"#c00c000");
    				break;
    			}
    		}
    		FormatString.gi().Format(detail, ww-90, SystemOperate.WordSize(24));
    		FormatString.gi().CheckOutRect();
    		for(k=0;k<5;k++)
    		{
    			switch(pms.exts[k].type)
    			{
    			case 0://物品
    			case 1://宠物
    			case 2://语音
    			case 3://人名
    				pms.lrs_small[k].CopyFrom(FormatString.gi().lrs[k]);
    				break;
    			}
    		}
    		
    		var th=FormatString.gi().iH+10+10;//本行高度=对话内容+10+10+24
    		if(th<52)th=52;
    		var dy=offy-th;
    		
    		//如果pms是自己，则在右侧
    		if(pms.iRid==GmMe$1.me.iRid)
    		{
    			pms.ox=offx+ww-52-10-FormatString.gi().iW-10;
    			pms.oy=dy+10;
    			pms.ow=FormatString.gi().iW;
    			pms.oh=FormatString.gi().iH;
    			
    			pms.headx=offx+ww-52;
    			pms.heady=dy;
    			
    			GmPlay$1.xani_head.DrawAnimaEx(offx+ww-52, dy, "新头像"+pms.iRax, 0,101,52.0/80,52.0/80,0,0,0);

    			DrawMode$1.frame_type4("聊天内容框20_20", offx+ww-52-10-(FormatString.gi().iW+20), dy, FormatString.gi().iW+20, FormatString.gi().iH+20, 20, 20);
    			GmPlay$1.xani_frame.DrawAnima(offx+ww-52-10, dy+10,"聊天内容框20_20",10);
    			
    			this.DrawSelect(offx+ww-52-10-FormatString.gi().iW-10, dy+10,pms);
    			FormatString.gi().Draw(offx+ww-52-10-FormatString.gi().iW-10, dy+10);
    		}
    		else
    		{
    			pms.ox=offx+52+10+10;
    			pms.oy=dy+10;
    			pms.ow=FormatString.gi().iW;
    			pms.oh=FormatString.gi().iH;
    			
    			pms.headx=offx;
    			pms.heady=dy;

    			GmPlay$1.xani_head.DrawAnimaEx(offx, dy, "新头像"+pms.iRax, 0,101,52.0/80,52.0/80,0,0,0);

    			DrawMode$1.frame_type4("聊天内容框20_20", offx+52+10, dy, FormatString.gi().iW+20, FormatString.gi().iH+20, 20, 20);
    			GmPlay$1.xani_frame.DrawAnima(offx+52+10, dy+10,"聊天内容框20_20",9);
    			
    			this.DrawSelect(offx+52+10+10, dy+10,pms);
    			FormatString.gi().Draw(offx+52+10+10, dy+10);
    		}
    		return th;
    	}
    	
    	 DrawMessage( x, y, w, h)
    	{
    		x+=10;y+=10;w-=20;h-=20;
    		this.iMx=x;this.iMy=y;this.iMw=w;this.iMh=h;
    		var i;
    		var iDy=y+h+this.iScrollY;
    		var ps=PrivateChatWatch.gi();
    		
    		for(i=0;i<ps.iMessageCount;i++)ps.pms[i].ox=-1;
    		
    		M3DFast$1.gi().SetViewClip(x, y, x+w, y+h);

    		for(i=0;i<ps.iMessageCount;i++)
    		{
    			if(ps.pms[i].iRid==PrivateChat_Send.iRid);
    			else if(ps.pms[i].iRid==GmMe$1.me.iRid && ps.pms[i].iDRid==PrivateChat_Send.iRid);
    			else continue;
    			
    			if(ps.pms[i].bWatched==false)
    			{
    				ps.pms[i].bWatched=true;
    				GmPlay$1.x_record.SavePrivateChat();
    				GmProtocol$1.gi().s_ReviewPrivateChat(ps.pms[i].iSession);//发到服务器
    			}
    			
    			iDy-=this.DrawPms(x,iDy,w,ps.pms[i])+5;

    			if(iDy<=y)break;
    		}
    //		GmPlay.sop(""+ps.iMessageCount+",,,"+i);
    		if(i<ps.iMessageCount)this.bCanScroll=true;
    		else this.bCanScroll=false;
    		M3DFast$1.gi().NoClip();
    	}
    	 Draw()
    	{
    		PrivateChat_Send.in_speak.onscr();
    		DrawMode$1.frame_type4("中等框a52_50", this.iX, this.iY, this.iW, this.iH, 52, 50);
    		DrawMode$1.frame_type4("聊天显示框亮20_20",PrivateChat_Send.in_speak.iX, PrivateChat_Send.in_speak.iY, PrivateChat_Send.in_speak.iW, PrivateChat_Send.in_speak.iH,20,20);
    		if(XRecordFast.iPrivateChatMode==0)
    		{//小框
    			GmPlay$1.xani_head.DrawAnimaEx(this.iX+25, this.iY+25, "新头像"+PrivateChat_Send.iRax, 0,101,60.0/80,60.0/80,0,0,0);
    			if(PrivateChat_Send.iRid==10000)M3DFast$1.gi().DrawTextEx(this.iX+25+65, this.iY+25, "帮派群发:"+PrivateChat_Send.sName, 0xff000000, 30, 101, 1, 1, 0, 0, 0);
    			else M3DFast$1.gi().DrawTextEx(this.iX+25+65, this.iY+25, "名字:"+PrivateChat_Send.sName, 0xff000000, 30, 101, 1, 1, 0, 0, 0);
    			M3DFast$1.gi().DrawTextEx(this.iX+25+65, this.iY+25+35+5, "号码:"+PrivateChat_Send.iRid, 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		}
    		else
    		{//大框
    			GmPlay$1.xani_head.DrawAnimaEx(this.iX+25, this.iY+20, "新头像"+PrivateChat_Send.iRax, 0,101,60.0/80,60.0/80,0,0,0);
    			if(PrivateChat_Send.iRid==10000)M3DFast$1.gi().DrawTextEx(this.iX+25+65, this.iY+20, "帮派群发:"+PrivateChat_Send.sName, 0xff000000, 30, 101, 1, 1, 0, 0, 0);
    			else M3DFast$1.gi().DrawTextEx(this.iX+25+65, this.iY+20, "名字:"+PrivateChat_Send.sName, 0xff000000, 30, 101, 1, 1, 0, 0, 0);
    			M3DFast$1.gi().DrawTextEx(this.iX+25+65, this.iY+20+35+5, "号码:"+PrivateChat_Send.iRid, 0xff000000, 25, 101, 1, 1, 0, 0, 0);

    			DrawMode$1.frame_type4("聊天显示框暗20_20",this.iX+25, this.iY+20+60+10, this.iW-50, this.iH-20-60-10-20-65-10-100-10,20,20);
    			this.DrawMessage(this.iX+25, this.iY+20+60+10, this.iW-50, this.iH-20-60-10-20-65-10-100-10);
    		}

    		var s="#c176b51"+PrivateChat_Send.in_speak.sDetail;
    		for(var i=0;i<4;i++)
    		{
    			if(PrivateChat_Send.cext[i].type>=100)continue;
    			if(s.indexOf("#x"+(i+1))>=0)
    			{
    				if(i==3)
    				{//语音
    					s=s.replace("#x"+(i+1), "#c00c000[语音:"+PrivateChat_Send.cext[i].detail+"]#o");
    				}
    				else s=s.replace("#x"+(i+1), "#c00c000["+PrivateChat_Send.cext[i].name+"]#o");
    			}
    			else PrivateChat_Send.cext[i].type=100;
    		}
    //		s="a bc def";
    //		s=s.replace("bc", "def");
    //		GmPlay.sop1(""+s);
    		FormatString.gi().FormatEx(s, PrivateChat_Send.in_speak.iW-30, 29,0,0,35);//"#c000000"+
    		FormatString.gi().Draw(PrivateChat_Send.in_speak.iX+15, PrivateChat_Send.in_speak.iY+10);

    //		btn_close.Draw();
    		
    		this.btn_voice.Draw();
    		// if(this.iCurrentColor==0xffffff)this.btn_color.Draw();
    		// else M3DFast.gi().FillRect_2D(this.btn_color.iX, this.btn_color.iY, this.btn_color.iX+this.btn_color.iW, this.btn_color.iY+this.btn_color.iH, 0xff000000|this.iCurrentColor);
    		this.btn_face.Draw();
    		this.btn_goods.Draw();
    		this.btn_pet.Draw();
    		this.btn_team.Draw();
    		
    		this.btn_send.Draw();
    		this.btn_record.Draw();
    		this.btn_watch.Draw();

    		// if(this.bSelectColor)SelectColor.sc.Draw();
    		if(this.bSelectFace)SelectFace.gi().Draw();
    		
    		switch(this.iRecordStat)
    		{
    		case 0://开始录音
    			break;
    		case 1://录音中
    			DrawMode$1.frame_type4("语音输入背景20_20", GmConfig$1.SCRW/2-120, GmConfig$1.SCRH/2-120, 240, 240+35+30, 20, 20);
    			DrawMode$1.frame_type1("语音输入字底框20_35", GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2+100+20, 200, 20);
    			var xx=GmConfig$1.SCRW/2-100;
    			var yy=GmConfig$1.SCRH/2+100+20;
    			M3DFast$1.gi().FillRect_2D(xx, yy, xx+200*(GameData$1.VOICETIMEOUT-this.iRecordDelay)/GameData$1.VOICETIMEOUT, yy+35, 0x30ffffff);
    			if(this.iRecordingShow==1)
    			{
    				GmPlay$1.xani_other.DrawAnima(GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2-100, "录音中",0);
    				M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW/2, GmConfig$1.SCRH/2+100+20+35/2, "手指划开，取消录制", 0xffffffff, 18, 101, 1, 1, 0, -2, -2);
    			}
    			else if(this.iRecordingShow==2)
    			{
    				GmPlay$1.xani_other.DrawAnima(GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2-100, "移开手指",0);
    				M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW/2, GmConfig$1.SCRH/2+100+20+35/2, "手指划开，取消发送", 0xffffffff, 18, 101, 1, 1, 0, -2, -2);
    			}
    			break;
    		case 2://开始上传
    			if(GmPlay$1.m_vi.sRecordName!="empty")
    			{
    				if(GmPlay$1.m_vi.iRecordTime<=1000)
    				{
    					EasyMessage.easymsg.AddMessage("录音时间太短");
    					this.iRecordStat=0;
    					break;
    				}
    				this.iRecordDelay=GameData$1.VOICETIMEOUT;
    				PrivateChat_Send.cext[3].type=2;
    				PrivateChat_Send.cext[3].eid=GmPlay$1.m_vi.iRecordTime;
    				if(PrivateChat_Send.in_speak.sDetail.indexOf("#x4")==-1)
    				{
    					PrivateChat_Send.in_speak.sDetail+="#x4";
    					PrivateChat_Send.in_speak.OpenInput();
    				}
    				PrivateChat_Send.cext[3].name="";
    				PrivateChat_Send.cext[3].detail="";
    				
    				GmPlay$1.m_vi.UpLoad();
    				this.iRecordStat=3;
    			}
    			break;
    		case 3://等待上传完
    			if(GmPlay$1.m_vi.sUrlName!="empty")
    			{
    				this.iRecordDelay=GameData$1.VOICETIMEOUT;
    				PrivateChat_Send.cext[3].name=GmPlay$1.m_vi.sUrlName;
    				
    				GmPlay$1.m_vi.StartRecognize();
    				this.iRecordStat=4;
    			}
    			break;
    		case 4://等待翻译完
    			if(GmPlay$1.m_vi.sRecognizeResult!="empty")
    			{//上传完 并 翻译完
    				PrivateChat_Send.cext[3].detail=GmPlay$1.m_vi.sRecognizeResult;
    				
    				this.iRecordStat=0;
    			}
    			break;
    		}
    		if(this.iRecordStat>0)
    		{
    			this.iRecordDelay--;
    			if(this.iRecordDelay<=0)
    			{
    				this.iRecordStat=0;
    				GmPlay$1.m_vi.StopRecord();
    				EasyMessage.easymsg.AddMessage("录音超时取消");
    			}
    		}
    		if(this.bSend)
    		{
    			if(this.iRecordStat==0)
    			{
    				this.bSend=false;
    				this.SendMessage();
    			}
    		}
    	}


    	 ProcTouch( msg, x, y)
    	{
    		if(this.bSelectFace)
    		{
    			if(SelectFace.gi().ProcTouch(msg, x, y))
    			{
    				if(SelectFace.gi().iSelectStat!=0)
    				{
    					if(SelectFace.gi().iSelectStat==1)
    					{
    						PrivateChat_Send.in_speak.sDetail+="#f"+SelectFace.gi().iSelectPoint;
    						PrivateChat_Send.in_speak.OpenInput();
    					}
    					this.bSelectFace=false;
    				}
    			}
    			return true;
    		}
    		if(this.bSelectColor)
    		{
    			if(SelectColor.sc.ProcTouch(msg, x, y))
    			{
    				if(SelectColor.sc.iSelectStat!=0)
    				{
    					if(SelectColor.sc.iSelectStat==1)
    					{//选择了颜色
    						PrivateChat_Send.in_speak.sDetail+="#c"+SelectColor.sc.tostr();
    						this.iCurrentColor=SelectColor.sc.iColor;
    						PrivateChat_Send.in_speak.OpenInput();
    					}
    					this.bSelectColor=false;
    				}
    			}
    			return true;
    		}
    // 		if(this.btn_color.ProcTouch(msg, x, y))
    // 		{
    // 			if(this.btn_color.bCheck())
    // 			{
    // 				this.bSelectColor=true;
    // 				SelectColor.sc.Init(-1);
    // //				PrivateChat_Send.in_speak.sDetail+="#cff0000";
    // 			}
    // 			return true;
    // 		}
    		if(this.btn_face.ProcTouch(msg, x, y))
    		{
    			if(this.btn_face.bCheck())
    			{
    				this.bSelectFace=true;
    				SelectFace.gi().Init();
    			}
    			return true;
    		}

    		if(this.btn_record.ProcTouch(msg, x, y))
    		{
    			if(this.btn_record.bCheck())
    			{
    				if(XRecordFast.iPrivateChatMode==0)XRecordFast.iPrivateChatMode=1;
    				else XRecordFast.iPrivateChatMode=0;
    				this.ResetSize();
    			}
    			return true;
    		}
    		if(this.btn_watch.ProcTouch(msg, x, y))
    		{
    			if(this.btn_watch.bCheck())
    			{
    				GmProtocol$1.gi().s_WatchOn(0, PrivateChat_Send.iRid, 0,"");
    			}
    			return true;
    		}
    		if(this.btn_goods.ProcTouch(msg, x, y))
    		{
    			if(this.btn_goods.bCheck())
    			{
    				SelectGoods.Open(1);
    			}
    			return true;
    		}
    		if(this.btn_pet.ProcTouch(msg, x, y))
    		{
    			if(this.btn_pet.bCheck())
    			{
    				SelectPet.Open(1);
    			}
    			return true;
    		}
    		if(this.btn_team.ProcTouch(msg, x, y))
    		{
    			if(this.btn_team.bCheck())
    			{
    				PrivateChat_Send.AddTeam();
    			}
    			return true;
    		}
    		if(XDefine$1.bInRect(x, y, this.btn_voice.iX, this.btn_voice.iY, this.btn_voice.iW, this.btn_voice.iH))
    		{
    			if(msg==1)
    			{//按下，开始录音
    				if(this.iRecordStat==0)
    				{//暂停背景音乐
    					if(GmPlay$1.m_vi.StartRecord())
    					{
    						this.iRecordStat=1;
    						this.iRecordDelay=GameData$1.VOICETIMEOUT;
    					}
    					else
    					{
    						EasyMessage.easymsg.AddMessage("启动录音失败");
    						return true;
    					}
    				}
    			}
    			else if(msg==3)
    			{//放开手指，发送录音
    				if(this.iRecordStat==1)
    				{
    					GmPlay$1.m_vi.StopRecord();
    					this.iRecordStat=2;
    				}
    			}
    			this.iRecordingShow=1;
    			return true;
    		}
    		else if(this.iRecordStat==1)
    		{//手指移出按钮
    			if(msg==3)
    			{//取消录音
    				GmPlay$1.m_vi.StopRecord();
    				this.iRecordStat=0;
    			}
    			this.iRecordingShow=2;
    			return true;
    		}
    		this.iRecordingShow=0;
    		if(PrivateChat_Send.in_speak.ProcTouch(msg, x, y))
    		{
    		}
    		if(this.btn_send.ProcTouch(msg, x, y))
    		{
    			if(this.btn_send.bCheck())
    			{//发送私聊消息
    				this.bSend=true;
    				if(this.iRecordStat!=0)EasyMessage.easymsg.AddMessage("正在处理中，请稍后...");
    			}
    			return true;
    		}
    		if(XRecordFast.iPrivateChatMode==1)
    		{
    		if(msg==3)
    		{
    			var i,j;
    			var ps=PrivateChatWatch.gi();
    			for(i=0;i<ps.iMessageCount;i++)
    			{
    //				GmPlay.sop(""+pms[i].ox+""+pms[i].oy);
    				if(ps.pms[i].ox==-1)continue;
    				if(XDefine$1.bInRect(x, y, ps.pms[i].headx, ps.pms[i].heady, 52, 52))
    				{
    					if(ps.pms[i].iRid>1000)GmProtocol$1.gi().s_WatchOn(0, ps.pms[i].iRid, 0,"");
    				}
    				if(!XDefine$1.bInRect(x, y, ps.pms[i].ox, ps.pms[i].oy, ps.pms[i].ow, ps.pms[i].oh))continue;
    				for(j=1;j<5;j++)
    				{
    //					GmPlay.sop(""+pms[i].exts[j].type);
    					if(ps.pms[i].exts[j].type>=100)continue;
    					if(ps.pms[i].exts[j].iShowDelay>0)continue;
    				
    					if(ps.pms[i].lrs_small[j].bIn(x-ps.pms[i].ox, y-ps.pms[i].oy))
    					{
    						switch(ps.pms[i].exts[j].type)
    						{
    						case 0://物品
    							GmProtocol$1.gi().s_WatchOn(1, ps.pms[i].exts[j].eid, 0,"");
    							ps.pms[i].exts[j].iShowDelay=255;
    //							EasyMessage.easymsg.AddMessage("正在获取["+pms[i].exts[j].name+"]信息");
    							break;
    						case 1://宠物
    							GmProtocol$1.gi().s_WatchOn(2, ps.pms[i].exts[j].eid, 0,"");
    							ps.pms[i].exts[j].iShowDelay=255;
    //							EasyMessage.easymsg.AddMessage("正在获取["+pms[i].exts[j].name+"]信息");
    							break;
    						case 2://语音
    							GmPlay$1.m_vi.PlayUrlVoice(ps.pms[i].exts[j].name);
    							ps.pms[i].exts[j].iShowDelay=255;
    //							EasyMessage.easymsg.AddMessage("正在播放[语音]信息");
    							break;
    //						case 3://自己
    //							GmProtocol.gi().s_WatchOn(0, ps.pms[i].exts[j].eid, 0,"");
    //							ps.pms[i].exts[j].iShowDelay=255;
    //							EasyMessage.easymsg.AddMessage("正在获取["+pms[i].sName+"]信息");
    //							break;
    						}
    					}
    				}
    			}
    		}
    		
    		if(XDefine$1.bInRect(x,y,this.iMx,this.iMy,this.iMw,this.iMh) && msg==1)
    		{
    			this.bScrolling=true;
    			this.iLockY=y;
    		}
    		if(this.bScrolling)
    		{
    			if(msg==2)
    			{
    				if(y>this.iLockY)
    				{//往前翻
    					if(this.bCanScroll)this.iScrollY+=(y-this.iLockY);
    				}
    				else this.iScrollY+=(y-this.iLockY);
    				
    				if(this.iScrollY<0)this.iScrollY=0;
    				this.iLockY=y;
    			}
    			if(msg==3)this.bScrolling=false;
    		}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return false;
    	}
    	
    	 SendMessage()
    	{
    		if(PrivateChat_Send.in_speak.sDetail.length>100)
    		{
    			EasyMessage.easymsg.AddMessage("文字太长");
    			PrivateChat_Send.in_speak.sDetail="";
    		}
    		else if(PrivateChat_Send.in_speak.sDetail.length>0)
    		{
    			var s=PrivateChat_Send.in_speak.sDetail;
    			for(var i=0;i<4;i++)
    			{
    				if(PrivateChat_Send.cext[i].type>=100)continue;
    				if(s.indexOf("#x"+(i+1))>=0)
    				{
    					if(i==3)
    					{//语音
    						s=s.replace("#x"+(i+1), GameData$1.EXTCOLOR+"[语音:"+PrivateChat_Send.cext[i].detail+"]#o");
    					}
    					else s=s.replace("#x"+(i+1), GameData$1.EXTCOLOR+"["+PrivateChat_Send.cext[i].name+"]#o");
    				}
    				else PrivateChat_Send.cext[i].type=100;
    			}
    			//GmProtocol.gi().s_PublicChat(iChannelPoint,s);
    			GmProtocol$1.gi().s_PrivateChat(PrivateChat_Send.iRid,PrivateChat_Send.sName,s);
    			FriendList$1.gi().Close();
    			FriendList$1.gi().AddTmpChat(PrivateChat_Send.iRid, PrivateChat_Send.sName,PrivateChat_Send.iRax);
    //			PrivateChatWatch.gi().AddSelfMessage(session, rid, name, time, detail)
    			PrivateChat_Send.in_speak.sDetail="";
    			PrivateChat_Send.in_speak.OpenInput();
    			PrivateChat_Send.ClearCext();
    			if(XRecordFast.iPrivateChatMode==0)XStat$1.gi().PopStat(1);
    		}
    		else EasyMessage.easymsg.AddMessage("请先输入文字");
    	}
    }
    PrivateChat_Send.iRid;
    PrivateChat_Send.sName;
    PrivateChat_Send.iRax;
    PrivateChat_Send.in_speak=null;
    PrivateChat_Send.cext=null;
    PrivateChat_Send.AddTeam=function()
    {
        var i;
        if(!MyTeam$1.bTeamLeader())
        {
            EasyMessage.easymsg.AddMessage("队长才能添加");
            return;
    	}
    	if(PrivateChat_Send.cext==null)
    	{
    		PrivateChat_Send.ClearCext();
    	}
        for(i=0;i<3;i++)
        {
            if(PrivateChat_Send.cext[i].type==100)
            {
                PrivateChat_Send.cext[i].type=4;
                
                PrivateChat_Send.cext[i].eid=GmMe$1.me.iRid;
                PrivateChat_Send.cext[i].tid=0;
                PrivateChat_Send.cext[i].name="申请入队";
    			PrivateChat_Send.in_speak.sDetail+="#x"+(i+1);
    			PrivateChat_Send.in_speak.OpenInput();
                return;
            }
        }
        EasyMessage.easymsg.AddMessage("最多添加3个发送项目");
    };
    //	public static PrivateChat pc=new PrivateChat();
    PrivateChat_Send.AddGoods=function( g)
    {
    	var i;
    	if(PrivateChat_Send.cext==null)
    	{
    		PrivateChat_Send.ClearCext();
    	}
        for(i=0;i<3;i++)
        {
            if(PrivateChat_Send.cext[i].type==100)
            {
                PrivateChat_Send.cext[i].type=0;
                PrivateChat_Send.cext[i].eid=g.iGid;
                PrivateChat_Send.cext[i].tid=g.iTid;
                PrivateChat_Send.cext[i].name=GmPlay$1.de_goods.strValue(g.iTid, 0, 4);
    			PrivateChat_Send.in_speak.sDetail+="#x"+(i+1);
    			PrivateChat_Send.in_speak.OpenInput();
                return;
            }
        }
        EasyMessage.easymsg.AddMessage("最多添加3个物品或宠物");
    };
    PrivateChat_Send.AddPet=function( p)
    {
    	var i;
    	if(PrivateChat_Send.cext==null)
    	{
    		PrivateChat_Send.ClearCext();
    	}
        for(i=0;i<3;i++)
        {
            if(PrivateChat_Send.cext[i].type==100)
            {
                PrivateChat_Send.cext[i].type=1;
                PrivateChat_Send.cext[i].eid=p.iPid;
                PrivateChat_Send.cext[i].tid=p.iTid;
                PrivateChat_Send.cext[i].name=GmPlay$1.de_pet.strValue(p.iTid, 0, 1);
    			PrivateChat_Send.in_speak.sDetail+="#x"+(i+1);
    			PrivateChat_Send.in_speak.OpenInput();
                return;
            }
        }
        EasyMessage.easymsg.AddMessage("最多添加3个物品或宠物");
    };
    PrivateChat_Send.OpenChat=function( rid, name, rax)
    {//
        PrivateChat_Send.iRid=rid;
        PrivateChat_Send.sName=name;
        PrivateChat_Send.iRax=rax;
        if(PrivateChat_Send.iRax<0 || PrivateChat_Send.iRax>6)PrivateChat_Send.iRax=6;

        XStat$1.gi().PushStat(XStat$1.GS_PRIVATECHAT);
    //		bShow=true;
    //		PrivateChat_Send.in_speak.sDetail="";
    };

    PrivateChat_Send.ClearCext=function()
    {
        if(PrivateChat_Send.cext==null)
        {
            PrivateChat_Send.cext=new Array(5);//
            for(var i=0;i<5;i++)PrivateChat_Send.cext[i]=new _EXTDATA();
        }
        for(var i=0;i<5;i++)PrivateChat_Send.cext[i].type=100;
    };

    class SelectGoods extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=490;
    		this.iH=405+15+52;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_sel=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_sel.InitButton("按钮1_110");
    		this.btn_sel.sName="选择";
    		this.btn_sel.Move(this.iX+this.iW-110-30, this.iY+this.iH-52-30, 110, 52);
    		
    		this.lockgoods=null;
    	}

    	Draw()
    	{
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		
    		GoodsDraw.new_DrawGoods(this.iX+30, this.iY+30, MyGoods.gi().goods[2], null, null);
    		
    		M3DFast$1.gi().DrawTextEx(this.iX+30, this.iY+this.iH-30-52/2, "选择物品添加到聊天", 0xff003e57, 30, 101, 1, 1, 0, 0, -2);

    		if(this.lockgoods!=null)
    		{
    			GoodsDraw.new_DrawRect(this.iX+30, this.iY+30, MyGoods.gi().goods[2], this.lockgoods, 0);
    			this.btn_sel.Draw();
    		}
    //		else M3DFast.gi().DrawTextEx(this.iX+20, this.iY+this.iH-40, "选择烹饪或药品", 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    		
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.lockgoods!=null)
    		{
    //			if(this.lockgoods.iTid==154 || this.lockgoods.iTid==155 || this.lockgoods.iTid==156)
    			{
    				if(this.btn_sel.ProcTouch(msg, x, y))
    				{
    					if(this.btn_sel.bCheck())
    					{
    						if(SelectGoods.iType==0)PublicChat_Send.AddGoods(this.lockgoods);
    						else if(SelectGoods.iType==1)PrivateChat_Send.AddGoods(this.lockgoods);
    						XStat$1.gi().PopStat(1);
    					}
    					return true;
    				}
    			}
    		}
    		this.lockgoods=GoodsDraw.new_LockGoods(x, y, this.iX+30, this.iY+30, MyGoods.gi().goods[2], msg);
    		GoodsDraw.NoMove();
    //		if(this.lockgoods.iTid==154 || this.lockgoods.iTid==155 || this.lockgoods.iTid==156);
    //		else
    		{
    //			this.lockgoods=null;
    		}
    		
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    		}
    		return false;
    	}

    }
    SelectGoods.iType=0;//0公聊，1私聊

    SelectGoods.Open=function( type)
    {
        SelectGoods.iType=type;
        XStat$1.gi().PushStat(XStat$1.GS_SELECTGOODS);
    };

    class StarEffect {
    	constructor()
    	{
    	}
    	Init3( x, y, r, count)
    	{//圆形星星
    		var i;
    		this.iType=3;
    		this.iCount=count;
    		this.starlist=new Array(this.iCount);////x,y,to,jd
    		for(i=0;i<this.iCount;i++)this.starlist[i]=new Int32Array(4);
    		this.iX=x;
    		this.iY=y;
    		this.iR=r;
    		this.iNowX=x;
    		this.iNowY=y;
    		for(i=0;i<this.iCount;i++)this.starlist[i][0]=-1;
    		this.iStat=0;
    		this.fJd=0;
    	}
    	Init1( x, y, w, h, count)
    	{//矩形星星
    		var i;
    		this.iType=1;
    		this.iCount=count;
    		this.starlist=new Array(this.iCount);////x,y,to
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    		this.iNowX=x;
    		this.iNowY=y;
    		for(i=0;i<this.iCount;i++)
    		{
    			this.starlist[i]=new Int32Array(3);
    			this.starlist[i][0]=-1;
    		}
    		this.iStat=0;
    	}
    	Init2( x, y, r, count)
    	{//向上升直线
    		var i;
    		this.iType=2;
    		this.iCount=count;
    		this.starlist=new Array(this.iCount);////x,y,to
    		this.iX=x;
    		this.iY=y;
    		this.iR=r;
    		for(i=0;i<this.iCount;i++)
    		{
    			this.starlist[i]=new Int32Array(3);
    			this.starlist[i][0]=-1;
    		}
    	}
    	Logic()
    	{
    		var i,j,k,x,y;
    		if(this.iType==1)
    		{//旋转长方形效果
    //			j=3;k=0;
    			j=0;k=2;
    			for(i=0;i<this.iCount;i++)
    			{
    				if(this.starlist[i][0]==-1)
    				{//出现新的星星
    					this.starlist[i][0]=12;
    					this.starlist[i][1]=XDefine$1.GetRand(0,j*2)+this.iNowX-j;
    					this.starlist[i][2]=XDefine$1.GetRand(0,j*2)+this.iNowY-j;
    //					if(this.iStat==0 || this.iStat==2)
    //					{
    //						this.starlist[i][1]=XDefine.GetRand(0,j*2)+this.iNowX-j;
    //						this.starlist[i][2]=this.iNowY;
    //					}
    //					else
    //					{
    //						this.starlist[i][1]=this.iNowX;
    //						this.starlist[i][2]=XDefine.GetRand(0,j*2)+this.iNowY-j;
    //					}
    					  
    					k++;
    					if(k>=2)break;
    				}
    			}//3~16
    			for(i=0;i<this.iCount;i++)
    			{
    				if(this.starlist[i][0]>=0)
    				{
    					this.starlist[i][0]++;
    					if(this.starlist[i][0]>=40)this.starlist[i][0]=-1;
    				}
    			}
    			j=10;
    			switch(this.iStat)
    			{
    			case 0://向下
    				if(this.iNowY<this.iY+this.iH)this.iNowY+=j;
    				else this.iStat=1;
    				break;
    			case 1://向右
    				if(this.iNowX<this.iX+this.iW)this.iNowX+=j;
    				else this.iStat=2;
    				break;
    			case 2://向上
    				if(this.iNowY>this.iY)this.iNowY-=j;
    				else this.iStat=3;
    				break;
    			case 3://向左
    				if(this.iNowX>this.iX)this.iNowX-=j;
    				else this.iStat=0;
    				break;
    			}
    		}
    		else if(this.iType==2)
    		{
    			if(GmPlay$1.iDelay%2==0)
    			{
    				for(i=0;i<this.iCount;i++)
    				{
    					if(this.starlist[i][0]==-1)
    					{//出现直线
    						this.starlist[i][0]=0;
    						do
    						{
    							x=XDefine$1.GetRand(0,this.iR*2)-this.iR;
    							y=XDefine$1.GetRand(0,this.iR*2)-this.iR;
    						}while(x*x+y*y>this.iR*this.iR);
    						this.starlist[i][1]=x;
    						this.starlist[i][2]=y/2;
    						break;
    					}
    				}
    			}
    		}
    		else if(this.iType==3)
    		{
    			this.fJd+=0.15;
    			j=0;k=0;
    			for(i=0;i<this.iCount;i++)
    			{
    				if(this.starlist[i][0]==-1)
    				{//出现新的星星
    					this.starlist[i][0]=16;
    					this.starlist[i][1]= (this.iX+Math.sin(this.fJd+0.1*k)*(this.iR+k)+XDefine$1.GetRand(0,j*2)-j);
    					this.starlist[i][2]= (this.iY+Math.cos(this.fJd+0.1*k)*(this.iR+k)+XDefine$1.GetRand(0,j*2)-j);
    					this.starlist[i][3]=XDefine$1.GetRand(0,360);

    					k++;
    					if(k>=1)break;
    				}
    			}//3~16
    			for(i=0;i<this.iCount;i++)
    			{
    				if(this.starlist[i][0]>=0)
    				{
    					this.starlist[i][0]++;
    					if(this.starlist[i][0]>=40)this.starlist[i][0]=-1;
    				}
    			}
    		}
    	}
    	Draw( offx, offy)
    	{
    		var i,j,k,x,y;
    		if(this.iType==1)
    		{//旋转长方形效果
    			for(i=0;i<this.iCount;i++)
    			{
    				if(this.starlist[i][0]>=0)
    				{//画出星星
    					GmPlay$1.xani_nui1.DrawAnimaEx(offx+this.starlist[i][1], offy+this.starlist[i][2], "黄金星光", this.starlist[i][0]/2, 101, 1,1, 0, 0, 0);
    				}
    			}
    			for(i=0;i<this.iCount;i++)
    			{
    				if(this.starlist[i][0]>=0)
    				{//画出星星
    					GmPlay$1.xani_nui1.DrawAnimaEx(offx+this.starlist[i][1], offy+this.starlist[i][2], "星星心", this.starlist[i][0]/2, 101, 1,1, 0, 0, 0);
    				}
    			}
    		}
    		else if(this.iType==2)
    		{
    			if(GmPlay$1.iDelay%2==0)
    			{
    				for(i=0;i<this.iCount;i++)
    				{
    					if(this.starlist[i][0]==-1)
    					{//出现直线
    						this.starlist[i][0]=0;
    						do
    						{
    							x=XDefine$1.GetRand(0,this.iR*2)-this.iR;
    							y=XDefine$1.GetRand(0,this.iR*2)-this.iR;
    						}while(x*x+y*y>this.iR*this.iR);
    						this.starlist[i][1]=x;
    						this.starlist[i][2]=y/2;
    						break;
    					}
    				}
    			}
    			for(i=0;i<this.iCount;i++)
    			{
    				if(this.starlist[i][0]>=0 && this.starlist[i][2]<0)
    				{//画出直线
    					GmPlay$1.xani_nui1.DrawAnimaEx(offx+this.starlist[i][1], offy+this.starlist[i][2], "单线", this.starlist[i][0]/2, 101, 1, 0.5, 0, 0, 0);
    					//GmPlay.xani_nui1.DrawAnima(offx+this.starlist[i][1], offy+this.starlist[i][2], "冒线条", this.starlist[i][0]/2);
    					this.starlist[i][0]++;
    					if(this.starlist[i][0]>=18)this.starlist[i][0]=-1;
    				}
    			}
    		}
    		else 	if(this.iType==3)
    		{//圆形
    			for(i=0;i<this.iCount;i++)
    			{
    				if(this.starlist[i][0]>=0)
    				{//画出星星
    					GmPlay$1.xani_nui1.DrawAnimaEx(offx+this.starlist[i][1], offy+this.starlist[i][2], "黄金星光", this.starlist[i][0]/2, 101, 1,1, 0, 0, 0);
    				}
    			}
    			for(i=0;i<this.iCount;i++)
    			{
    				if(this.starlist[i][0]>=0)
    				{//画出星星
    					GmPlay$1.xani_nui1.DrawAnimaEx(offx+this.starlist[i][1], offy+this.starlist[i][2], "星星心", this.starlist[i][0]/2, 101, 1,1, this.starlist[i][3], offx+this.starlist[i][1], offy+this.starlist[i][2]);
    				}
    			}
    		}
    	}
    	DrawFront( offx, offy)
    	{
    		var i;
    		if(this.iType==2)
    		{
    			for(i=0;i<this.iCount;i++)
    			{
    				if(this.starlist[i][0]>=0 && this.starlist[i][2]>=0)
    				{//画出直线
    					GmPlay$1.xani_nui1.DrawAnimaEx(offx+this.starlist[i][1], offy+this.starlist[i][2], "单线", this.starlist[i][0]/2, 101, 1, 0.5, 0, 0, 0);
    					//GmPlay.xani_nui1.DrawAnima(offx+this.starlist[i][1], offy+this.starlist[i][2], "冒线条", this.starlist[i][0]/2);
    					this.starlist[i][0]++;
    					if(this.starlist[i][0]>=18)this.starlist[i][0]=-1;
    				}
    			}
    		}
    	}
    }

    class TestRun extends RunFirst
    {
        constructor()
        {
            super();
        }
        InitBefore()
    	{
    		var pf=prunclass.FindFirst("行内容1",10);
    		var pf1=pf.GetCopy();
    		pf1.sName="行内容3";
    		var pc=prunclass.FindFirst("行内容",10);
    		pc.LinkFirst(pf1);
        }
        InitAfter()
    	{
    //		X40_CLASS pc;
    //		pc=(X40_CLASS) prunclass.FindFirst("福源规则按钮",5);
    //		pbtn_fyrule=(XmsCButton) pc.pobj;
        }
        Draw()
    	{
    		this._Draw();
        }
        ProcTouch( msg, x, y)
    	{
    		this._ProcTouch(msg,x,y);
    //		if(pbtn_fyrule!=null && pbtn_fyrule.bCheck())
    //		{//打开福源规则页面
    //			FrameMessage.fm.Open("福源规则");
    //		}
    		return false;
    	}
    }

    class AQStart extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.btn_start=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_start.InitButton("按钮1");
    		this.btn_start.sName="立刻参加";
    		
    		this.btn_later=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_later.InitButton("按钮1");
    		this.btn_later.sName="稍后再去";
    		
    		this.iW=800;
    		this.iH=500;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    	}

    	 Draw()
    	{
    		DrawMode$1.new_bigframe(this.iX,this.iY,this.iW,this.iH);
    		
    		M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2, this.iY+30, "趣味答题", 0xff003e57, 40, 101, 1, 1, 0, -2, 0);
    		M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2, this.iY+30+50, "答题活动已经开启，少侠是否参加？", 0xff003e57, 30, 101, 1, 1, 0, -2, 0);
    		M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2, this.iY+30+50+40, "(活动时间12:00:00~13:00:00)", 0xff003e57, 30, 101, 1, 1, 0, -2, 0);
    		FormatString.gi().FormatEx("#c003e57活动介绍：#e1，共15道题，每次答对可获得经验和绑铜奖励，每题限20秒内回答#e2，累计答错3题计算为失败#e3，完成答题（至少答对12个），可参与额外抽奖#e3，答题途中离开答题页面视为放弃活动，计算为失败", this.iW-60, 30,0, 0, 35);
    		FormatString.gi().Draw(this.iX+30, this.iY+30+50+40+40);
    		
    		this.btn_start.Move(this.iX+40, this.iY+this.iH-40-53, 161, 53);
    		this.btn_start.Draw();
    		
    		this.btn_later.Move(this.iX+this.iW-40-161, this.iY+this.iH-40-53, 161, 53);
    		this.btn_later.Draw();
    	}
    	 ProcTouch( msg, x, y)
    	{
    		if(this.btn_start.ProcTouch(msg, x, y))
    		{
    			if(this.btn_start.bCheck())
    			{//点击开始
    				if(XFight.bFighting)FrameMessage.fm.Open("战斗中不能开始答题活动，请在战斗结束后，点击答题图标重新参与");
    				else if(MyTeam$1.bInTeam())FrameMessage.fm.Open("队伍中不能开始答题活动，请离开队伍后，点击答题图标重新参与");
    				else
    				{
    					AQStart.bShow=false;
    					//发送开始活动消息
    					GmProtocol$1.gi().s_AfternoooQuestion(0, 0, 0);//开始答题
    				}
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(this.btn_later.ProcTouch(msg, x, y))
    		{
    			if(this.btn_later.bCheck())
    			{//
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }
    AQStart.bShow=false;
    AQStart. Open=function()
    {
        XStat$1.gi().PushStat(XStat$1.GS_AQSTART);
    };

    class MyFuBen {
        constructor()
        {
            
        }
    }
    MyFuBen.OpenCreate=function( pls)
    {
        var i;
        var cfb;
        if(XStat$1.gi().iXStat==XStat$1.GS_LOADING1)XStat$1.gi().PopStat(1);
        if(XStat$1.gi().iXStat==XStat$1.GS_CREATEFUBEN)cfb=XStat$1.gi().LastStat(0);
        else cfb=XStat$1.gi().PushStat(XStat$1.GS_CREATEFUBEN);
        
        cfb.iCount=pls.GetNextByte();
        for(i=0;i<cfb.iCount;i++)cfb.ifblist[i]=pls.GetNextInt();
    };
    MyFuBen.OpenManage=function( pls)
    {
        var i;
        var mfb;
        if(XStat$1.gi().iXStat==XStat$1.GS_LOADING1)XStat$1.gi().PopStat(1);
        if(XStat$1.gi().iXStat==XStat$1.GS_MANAGEFUBEN)mfb=XStat$1.gi().LastStat(0);
        else mfb=XStat$1.gi().PushStat(XStat$1.GS_MANAGEFUBEN);
        
        mfb.fuben.iFid=pls.GetNextInt();
        mfb.fuben.iType=pls.GetNextByte();
        mfb.fuben.iRid=pls.GetNextInt();
        mfb.fuben.sName=pls.GetNextString();
        mfb.fuben.iLev=pls.GetNextShort();
        mfb.fuben.ras=pls.GetNextByte();
        mfb.fuben.tm=pls.GetNextString();
        mfb.fuben.sDetail=pls.GetNextString();
        mfb.fuben.iOnLine= pls.GetNextByte();
        
        pls.GetNextByte();//0招募中,1进行中
        
        mfb.iMemberCount=pls.GetNextShort();
        for(i=0;i<mfb.iMemberCount;i++)
        {
            mfb.members[i].sName=pls.GetNextString();
            mfb.members[i].iRid=pls.GetNextInt();
            mfb.members[i].iOnLine=pls.GetNextByte();
        }
        
        mfb.iApplyCount=pls.GetNextShort();
        for(i=0;i<mfb.iApplyCount;i++)
        {
            mfb.applyers[i].sName=pls.GetNextString();
            mfb.applyers[i].iRid=pls.GetNextInt();
            mfb.applyers[i].iOnLine= pls.GetNextByte();
        }
    };
    MyFuBen.OpenApply=function( pls)
    {
        var i;
        var afb;
        if(XStat$1.gi().iXStat==XStat$1.GS_LOADING1)XStat$1.gi().PopStat(1);
        if(XStat$1.gi().iXStat==XStat$1.GS_APPLYFUBEN)afb=XStat$1.gi().LastStat(0);
        else afb=XStat$1.gi().PushStat(XStat$1.GS_APPLYFUBEN);
        
        afb.iTotalLine=pls.GetNextShort();
        afb.iPage=pls.GetNextByte();
        afb.iCount=pls.GetNextByte();
        
        afb.iTotalPage=(afb.iTotalLine-1)/10+1;
        
        for(i=0;i<afb.iCount;i++)
        {
            afb.fblist[i].iFid=pls.GetNextInt();
            afb.fblist[i].iType=pls.GetNextByte();
            afb.fblist[i].iRid=pls.GetNextInt();
            afb.fblist[i].sName=pls.GetNextString();
            afb.fblist[i].iLev=pls.GetNextShort();
            afb.fblist[i].ras=pls.GetNextByte();
            afb.fblist[i].tm=pls.GetNextString();
            afb.fblist[i].sDetail=pls.GetNextString();
            afb.fblist[i].iOnLine= pls.GetNextByte();
        }
    };

    MyFuBen.iStat=0;//0不在副本中，1在副本中未开，2在副本中进行中
    MyFuBen.iFbid;//副本ID
    MyFuBen.iFbType;//副本类型
    MyFuBen.iHead;//头
    MyFuBen.iFbProc;//进度
    MyFuBen.GetStat=function( pls)
    {
        MyFuBen.iStat=pls.GetNextShort();
        MyFuBen.iFbid=pls.GetNextInt();
        MyFuBen.iFbType=pls.GetNextInt();
        MyFuBen.iHead=pls.GetNextInt();
        MyFuBen.iFbProc=pls.GetNextInt();
    };
    MyFuBen.sDetail;//头
    MyFuBen.sTarget;//进度
    MyFuBen.GetTarget=function( pls)
    {
        MyFuBen.sDetail=pls.GetNextString();
        MyFuBen.sTarget=pls.GetNextString();
        FrameMessage.fm.Open("#cffffff"+MyFuBen.sDetail+"#e#c00ff00"+MyFuBen.sTarget);
    };

    class MainHelp extends BaseClass{
    	 constructor( ani)
    	{
    		super();
    		this.sType=["成长历程","装备大全","技能大全","宠物大全","宝石大全"];
    		this.s0_levs=["0~9级","10~19级","20~29级","30~39级","40~49级"];
    		this.s0_detail=[
    				["1.背包中有新手大礼包，打开后获得丰厚的奖励",
    				 "2.找到乡水镇铁匠，打造适合自己的装备"],
    				 ["1.【为民除害任务】：【西阳城】的【西阳城守卫】 接取任务，完成后获得大量经验奖励。",
    					 "2.【门派任务】：每10次任务为一轮，每天前两轮任务双倍奖励，完成任务获得大量经验铜币",
    					 "3.【每日签到】：根据提示完成所有加活跃的任务，当活跃度满20以后，方可签到。奖励有强化符等商城道具，会员获得奖励更多哦。",
    					 "4.【手艺任务】：【郢城】的【铁匠】接取任务，每10次为一轮，完成后获得大量经验和铜币，一轮任务后可随机获得一项手艺",
    					 "5.【每日赛跑】：【临淄城】的【田忌】接取任务，完成后获得大量经验和铜币，并获得一个三级草药。前10名可额外获得商城道具奖励。",
    					 "6.【师徒任务】：师徒二人组队至【临淄城】的【慎到】处领取。完成后师傅获得宠物修炼积分，徒弟获得大量经验和铜币。",
    					 "7.【活动答题】：每周一至周五中午12点至1点可参与，答题可获得大量经验和储备。",
    					 "8.【世界答题】：答出世界频道刷新的题目，即有机会获得丰厚的奖励。",
    					 "9.【智者答题】：找到城镇中的【智者】，答对他提出的问题，有几率获得宝石奖励。"],
    					 ["1.【强盗任务】：【郢城】的【栾千盛】处接取任务。10次为一轮，完成后获得大量经验和铜币。",
    						 "2.【护法任务】：【咸阳】的【商鞅】处接取任务，10次为一轮，完成后获得大量的经验和铜币",
    						 "3.【帮派山贼】：周一至周五13:00至13:40，打败帮派内刷出的山贼，获得大量帮贡。",
    						 "4.【押镖任务】：【临淄城】的【程镖头】处接取任务，完成后获得大量铜币奖励，并有一定几率获得阵法书，还有可能获得红包（里面有200元宝哦）。",
    						"5.【帮派任务】：【青龙任务】【朱雀任务】【玄武任务】，【郢城】的【帮派总管】处进入帮派，完成任务可获取大量帮贡。"],
    						["1.【门派闯关】，每周四晚上8点在【咸阳】、【临淄】或者【郢城】的【门派使者】处领取任务，挑战门派护卫。每过一关都有丰厚的奖励，过关最快的队伍更有高等级宝石领取",
    							"2.【山贼宝图】，山贼于每个整点在野外地图刷出，组队3人或3人以上前往挑战。战斗胜利后获得大量经验和铜币，并有一定几率获得藏宝图",
    							"3.【妖怪叔叔】，可以组队3人或3人以上前往野外挑战妖怪叔叔。战斗胜利后获得大量经验和铜币，并有一定几率获得一级宝石。",
    							"4.【坐骑任务】，咸阳城坐骑仙子处领取。完成后获得酷炫坐骑一只"],
    							["1.【嚣张任务】：在城镇中找到嚣张， 必须5人组队才能进行战斗。战斗胜利后获得大量经验、铜钱、高级宠书、宝石等等 。",
    								"2.【匈奴入侵】：每周一至周四，19:00~20:00，在长城，阴山，云蒙山，匈奴营寨，打败匈奴后获得大量经验和金钱奖励，和一些物品奖励，可能获得匈奴情报，上交还能获得奖励。",
    								"3.【执法任务】：【咸阳城】的【商鞅】接取任务，10次为一轮，任务完成后可以得到1级或2级材料。",
    								"4.【副本】：【咸阳】的【副本官】处创建副本，打败副本主怪可获得大量经验和副本积分，副本积分可以换取高等级装备图纸，二级材料，三级材料，宠物修炼果。",
    								"5.【战队竞技】：在【咸阳】的【神威将军】处创建战队后，战队队长可以挑战比自己排名高的战队，挑战胜利可以提升战队排名。排名越靠前，战队每日声望增长越多。",
    								"6.【战队秘境】：在【咸阳】的【神威将军】处，点击【战队属性】中的【战队秘境】进入秘境，击败秘境主怪可以获得不同等级的封印兽魂（兽魂用于宠物进阶）。",
    								"7.【比武大会】：每周五中午12点~周六中午12点，玩家可以在【咸阳】的【比武接引人】报名，周六和周日下午13点~15点之间分别进行两场比武，比武获胜方可领取宝箱，即使失败也有其他丰厚奖励。"]
    		];
    		this.i0LevPoint=0;
    	
    		this.s1_levs=["0级装备","10级装备","20级装备","30级装备","40级装备","50级装备","60级装备","70级装备","80级装备"];
    		this.s1_setids=[
    				[9,	1,10,3,4,5,6,7,8],
    				[47,53,59,11,19,25,31,37,13],
    				[48,54,60,12,20,26,32,38,14],
    				[49,55,61,43,21,27,33,39,15],
    				[50,56,62,44,22,28,34,40,16],
    				[51,57,63,45,23,29,35,41,17],
    				[52,58,64,46,24,30,36,42,18],
    				[248,249,250,244,245,251,252,253,254],
    				[290,291,292,293,294,295,296,297,298,299,300,301]];
    	
    		this.s2_page=["门派技能","宠物技能","装备特效","装备特技","辅助技能"];
    	
    	
    		 this.s2_sort1=["剑侠居","茅蓬坞","庐医崖","武安阁","溶洞","鬼谷","封神台","仙人洞","神女峰"];//门派技能分类
    		 this.s2_skills1=[[7,8,9,10,11,13],
    				[21,22,23,24,25,26],
    				[34,35,36,37,38,39],
    				[47,48,49,50,51,52],
    				[60,61,62,63,64,65],
    				[73,74,75,76,77,78],
    				[86,87,88,89,90,91],
    				[99,100,101,102,103,104],
    				[112,113,114,115,116,117]];
    	
    	this.s2_sort2=["主动技能","被动技能"];//主动，被动技能
    	
    		 this.s2_skills2=[[192,193,194,195,196,284,206,283],
    				[134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,205,209,212,215,218,221,224,276,279,282]];
    		 this.s2_2ext=[
    				[["烈火","以法术攻击一人","嚣张任务、交易、商店购买宠物技能包"],
    					["水剑","以法术攻击二人","嚣张任务、交易、商店购买宠物技能包"],
    					["风刃","以法术攻击三人","嚣张任务、交易、商店购买宠物技能包"],
    					["流沙","以法术攻击单人,同时有20%几率将其困住一回合","嚣张任务、交易、商店购买宠物技能包"],
    					["招魂","对处于龟息状态的怪物使用,可使其离开战场,如果目标未死亡,吸取其部分气血和魔法","嚣张任务、交易、商店购买宠物技能包"],
    					["奋力一击","物理攻击技能,对目标造成110%物理伤害,忽视目标防御状态","蛮将特有技能,福缘积分兑换"],
    					["生死决","物理攻击技能,70%几率造成双倍伤害,30%几率恢复其气血。消耗等级*2+30魔法","仙女特有技能,福缘积分兑换"],
    					["巫毒","以法术攻击单人,并有几率降低目标物理和法术抗性持续三回合","萨满特有技能,福缘积分兑换"]],
    				[["死守","低级宠物技能书：降低5%所受法术和物理伤害，同时降低5%自身法术和物理伤害#e中级宠物技能书：降低10%所受法术和物理伤害，同时降低10%自身法术和物理伤害#e高级宠物技能书：降低20%所受法术和物理伤害，同时降低20%自身法术和物理伤害，","嚣张活动、交易、商店购买宠物技能书"],
    					["致命","低级宠物技能书：物理攻击时增加5%几率出现伤害结果加倍#e中级宠物技能书：物理攻击时增加10%几率出现伤害结果加倍#e高级宠物技能书：物理攻击时增加20%几率出现伤害结果加倍","嚣张活动、交易、商店购买宠物技能书"],
    					["追击","低级宠物技能书：45%几率连续两次物理攻击，物理伤害降低25%#e中级宠物技能书：55%几率连续两次物理攻击，物理伤害降低25%#e高级宠物技能书：60%几率连续两次物理攻击，物理伤害降低20%","嚣张活动、交易、商店购买宠物技能书"],
    					["急袭","低级宠物技能书：物理攻击效果提高5%#e中级宠物技能书：物理攻击效果提高10%#e高级宠物技能书：物理攻击效果提高20%","嚣张活动、交易、商店购买宠物技能书"],
    					["嗜杀","低级宠物技能书：物理攻击伤害会在85%-115%之间波动#e中级宠物技能书：物理攻击伤害会在85%-120%之间波动#e高级宠物技能书：物理攻击伤害会在90%-120%之间波动","嚣张活动、交易、商店购买宠物技能书"],
    					["吸血","低级宠物技能书：可以将物理攻击效果的10%转化为自身气血#e中级宠物技能书：可以将物理攻击效果的20%转化为自身气血#e高级宠物技能书：可以将物理攻击效果的30%转化为自身气血","嚣张活动、交易、商店购买宠物技能书"],
    					["聚灵","低级宠物技能书：法术攻击时增加5%几率出现伤害结果1.5倍#e中级宠物技能书：法术攻击时增加10%几率出现伤害结果1.5倍#e高级宠物技能书：法术攻击时增加20%几率出现伤害结果1.5倍","嚣张活动、交易、商店购买宠物技能书"],
    					["逆灵","低级宠物技能书：5%几率连续两次法术攻击#e中级宠物技能书：10%几率连续两次法术攻击#e高级宠物技能书：20%几率连续两次法术攻击","嚣张活动、交易、商店购买宠物技能书"],
    					["灵体","低级宠物技能书：法术攻击效果提高5%#e中级宠物技能书：法术攻击效果提高10%#e高级宠物技能书：法术攻击效果提高20%","嚣张活动、交易、商店购买宠物技能书"],
    					["魔魂","低级宠物技能书：法术攻击伤害会在85%-115%之间波动#e中级宠物技能书：法术攻击伤害会在85%-120%之间波动#e高级宠物技能书：法术攻击伤害会在90%-120%之间波动","嚣张活动、交易、商店购买宠物技能书"],
    					["吞灵","低级宠物技能书：受到法术攻击时，有10%几率将所受法术伤害转化为气血#e中级宠物技能书：受到法术攻击时，有20%几率将所受法术伤害转化为气血#e高级宠物技能书：受到法术攻击时，有30%几率将所受法术伤害转化为气血","嚣张活动、交易、商店购买宠物技能书"],
    					["隐身","低级宠物技能书：进入战斗时能隐身2-3回合，拥有此技能物理和法术伤害降低25%#e中级宠物技能书：进入战斗时能隐身3-4回合，拥有此技能物理和法术伤害降低20%#e高级宠物技能书：进入战斗时能隐身4-5回合，拥有此技能物理和法术伤害降低15%","嚣张活动、交易、商店购买宠物技能书"],
    					["火眼","低级宠物技能书：能识破敌人的隐身#e中级宠物技能书：能识破敌人的隐身，同时增加10%的物理命中率#e高级宠物技能书：能识破敌人的隐身，同时增加20%的物理命中率","嚣张活动、交易、商店购买宠物技能书"],
    					["反击","低级宠物技能书：受到物理攻击时有10%几率反击，反击伤害为正常伤害的50%#e中级宠物技能书：受到物理攻击时有20%几率反击，反击伤害为正常伤害的75%#e高级宠物技能书：受到物理攻击时有30%几率反击，反击伤害为正常伤害的100%","嚣张活动、交易、商店购买宠物技能书"],
    					["反噬","低级宠物技能书：受到物理攻击时有20%几率反噬，反噬伤害为所受伤害的20%#e中级宠物技能书：受到物理攻击时有30%几率反噬，反噬伤害为所受伤害的30%#e高级宠物技能书：受到物理攻击时有40%几率反噬，反噬伤害为所受伤害的40%","嚣张活动、交易、商店购买宠物技能书"],
    					["龟息","低级宠物技能书：战斗死亡时不会离开战场#e中级宠物技能书：战斗死亡时不会离开战场，10回合后复活#e高级宠物技能书：战斗死亡时不会离开战场，5回合后复活","嚣张活动、交易、商店购买宠物技能书"],
    					["神恩","低级宠物技能书：战斗死亡时有10%几率复活，恢复50%气血#e中级宠物技能书：战斗死亡时有20%几率复活，恢复75%气血#e高级宠物技能书：战斗死亡时有30%几率复活，恢复100%气血","嚣张活动、交易、商店购买宠物技能书"],
    					["凝神","低级宠物技能书：抵御封印类技能，降低30%自身物理和法术伤害#e中级宠物技能书：抵御封印类技能，降低20%自身物理和法术伤害#e高级宠物技能书：抵御封印类技能，降低10%自身物理和法术伤害","嚣张活动、交易、商店购买宠物技能书"],
    					["幸运","低级宠物技能书：不会受到聚灵攻击，法术攻击能力降低5%#e中级宠物技能书：不会受到聚灵和逆灵攻击，法术攻击能力降低10%#e高级宠物技能书：不会受到聚灵和逆灵攻击，20%几率躲避法术攻击，法术攻击能力降低20%","嚣张活动、交易、商店购买宠物技能书"],
    					["专注","低级宠物技能书：不会受到致命攻击，物理攻击能力降低5%#e中级宠物技能书：不会受到致命和追击攻击，物理攻击能力降低10%#e高级宠物技能书：不会受到致命和追击攻击，20%几率躲避物理攻击，物理攻击能力降低20%","嚣张活动、交易、商店购买宠物技能书"],
    					["迟钝","低级宠物技能书：速度降低5%#e中级宠物技能书：速度降低10%#e高级宠物技能书：速度降低20%","嚣张活动、交易、商店购买宠物技能书"],
    					["敏捷","低级宠物技能书：速度提升5%#e中级宠物技能书：速度提升10%#e高级宠物技能书：速度提升20%","嚣张活动、交易、商店购买宠物技能书"],
    					["防御","低级宠物技能书：防御力增加等级*0.6，法术伤害降低20%#e中级宠物技能书：防御力增加等级*1.2，法术伤害降低15%#e高级宠物技能书：防御力增加等级*1.8，法术伤害降低10%","嚣张活动、交易、商店购买宠物技能书"],
    					["巨力","低级宠物技能书：攻击力增加等级*0.5，如果对方有防御技能，伤害减少20%#e中级宠物技能书：攻击力增加等级*1，如果对方有防御技能，伤害减少20%#e高级宠物技能书：攻击力增加等级*1.5，如果对方有防御技能，伤害减少20%","嚣张活动、交易、商店购买宠物技能书"],
    					["撕裂","低级宠物技能书：物理攻击时，有5%几率使对方流血不止#e中级宠物技能书：物理攻击时，有10%几率使对方流血不止#e高级宠物技能书：物理攻击时，有20%几率使对方流血不止","嚣张活动、交易、商店购买宠物技能书"],
    					["冥思","低级宠物技能书：每回合结束时，自动恢复等级/4魔法#e中级宠物技能书：每回合结束时，自动恢复等级/3魔法#e高级宠物技能书：每回合结束时，自动恢复等级/1.5魔法","嚣张活动、交易、商店购买宠物技能书"],
    					["自愈","低级宠物技能书：每回合结束时，自动恢复等级/2气血#e中级宠物技能书：每回合结束时，自动恢复等级/1.5气血#e高级宠物技能书：每回合结束时，自动恢复等级/1气血","嚣张活动、交易、商店购买宠物技能书"],
    					["招架","低级宠物技能书：有30%的几率招架物理攻击，降低30%所受物理伤害#e中级宠物技能书：有40%的几率招架物理攻击，降低40%所受物理伤害#e高级宠物技能书：有50%的几率招架物理攻击，降低50%所受物理伤害","嚣张活动、交易、商店购买宠物技能书"],
    					["噬魂","低级宠物技能书：对带有龟息术技能怪物的物理、法术伤害效果提高125%#e中级宠物技能书：对带有龟息术技能怪物的物理、法术伤害效果提高150%#e高级宠物技能书：对带有龟息术技能怪物的物理、法术伤害效果提高200%","噬魂豹特有技能、福缘积分兑换"],
    					["血魄","低级宠物技能书：气血增加等级*1.2，物理伤害降低20%#e中级宠物技能书：气血增加等级*1.2，物理伤害降低15%#e高级宠物技能书：气血增加等级*3.6，物理伤害降低10%","嚣张活动、交易、商店购买宠物技能书"]]];
    	
    		 this.s2_skills3=[267,268,269,270,271,272,273];//特效
    		 this.s2_3ext=["腰带","武器"," 项链","鞋子","鞋子","衣服","帽子"];//出现部位
    	
    		 this.s2_skills4=[225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266];
    	
    		 this.s2_skills5=[122,121,123,119,118,120,124,125];
    		 this.s2_details=[
    				["冶金术","学习后可以提高制作武器和项链的能力#e可在【快捷】按钮中使用,使用需消耗体力,且不同等级的锻造术消耗的体力也不同,每使用一次,会增加相应的熟练度,熟练度越高,越容易打造出好的装备。","郢城铁匠-手艺制作技巧、帮派学院-学技能 "],
    				["锻造术","学习后可以提高锻造头盔和腰带的能力#e可在【快捷】按钮中使用,使用需消耗体力,且不同等级的锻造术消耗的体力也不同,每使用一次,会增加相应的熟练度,熟练度越高,越容易打造出好的装备。", "郢城铁匠-手艺制作技巧、帮派学院-学技能"],
    				["裁剪术","学习后可以提高制作衣服和靴子的能力#e可在【快捷】按钮中使用,使用需消耗体力,且不同等级的锻造术消耗的体力也不同,每使用一次,会增加相应的熟练度,熟练度越高,越容易打造出好的装备", "郢城铁匠-手艺制作技巧、帮派学院-学技能"],
    				["炼丹术","学习后可以提高炼丹的能力#e可在【快捷】按钮中使用,炼丹术等级越高,炼丹成功率也越高,丹药品质也越高", "郢城铁匠-手艺制作技巧、帮派学院-学技能"],
    				["强身术","学习后能增加气血上限", "郢城陈子枫-辅助技能、帮派学院-学技能"],
    				["烹饪","学习后可以提高制作食物的能力#e可在【快捷】按钮中使用,使用需消耗体力", "郢城陈子枫-辅助技能、帮派学院-学技能"],
    				["健体","学习后能增加体力上限", "郢城陈子枫-辅助技能、帮派学院-学技能"],
    				["修心","学习后能增加魔法上限", "郢城陈子枫-辅助技能、帮派学院-学技能"]];
    	
    		 this.s3_type=["物攻宠物","法攻宠物","辅助宠物","神兽"];
    		this.s3_petids=[
    				[1,10,4,7,14,6,18,20,24,22,27],
    				[11,13,5,15,6,19,21,26,27],
    				[3,8,9,12,2,4,5,7,14,15,6,18,19,20,21,24,22,23,25,26],
    				[16,28]];
    		 this.s3_details=[
    				[["攻","攻","攻血","攻速","攻防","攻法血","攻血防","攻速","攻速","攻血","攻法"],
    				["法","法","法血","法血","攻法血","法速","法速","法速","法血","攻法"],
    				["防","速","血","血速","血","攻血","法血","攻速","攻防","法血","攻法血","攻血防","法速","攻速","法速","攻速","攻血","法防","血防","法血"],
    				["攻法","攻法"]],
    				[["5力","5力","5力,3耐2血","5力,4力1速","5力,3耐2血","5力,5法,3血2耐","5力,3耐2血,3血2耐","5力,2血2耐1速","5力,2耐2血1速","5力,3血2耐","5力,5法"],
    				["5法","5法","5法,3血2耐","5法,3血2耐","5力,5法,3血2耐","5法,2血2耐1速","5法,2血2耐1速","5法,3血2耐","5力,5法"],
    				["4耐1血","3敏2耐","3血2耐","3耐2血,3速2血","3血2耐","5力,3耐2血","5法,3血2耐","5力,4力1速","5力,3耐2血","5法,3血2耐","5力,5法,3血2耐","5力,3耐2血,3血2耐","5法,2血2耐1速","5力,2血2耐1速","5法,2血2耐1速","5力,2耐2血1速","5力,3血2耐","5法,3耐2血","3血2耐,3耐2血","5法,3血2耐"],
    				["5力,5法","5力,5法"]],
    				[["郊外、西阳山道抓获，交易","大禹水道、平原山陵抓获，交易","云蒙山、烈焰峰抓获，交易","函谷关、长城抓获，交易","长城、阴山抓获，交易","阴山抓获，交易","地下藏宝洞一层、地下藏宝洞二层抓获，交易","古战场抓获，交易","古战场抓获，交易","匈奴营寨、古战场抓获，交易","蜀山抓获，交易"],
    				["平原山陵、巫山抓获，交易","巫山抓获，交易","烈焰峰、函谷关抓获，交易","阴山、地下藏宝洞一层抓获，交易","阴山抓获，交易","地下藏宝洞二层抓获，交易","匈奴营寨抓获，交易","蜀山抓获，交易","蜀山抓获，交易"],
    				["乡水镇郊抓获，交易","西阳山道、渡口抓获，交易","渡口、大禹水道抓获，交易","巫山、太行山抓获，交易","太行山、云蒙山抓获，交易","云蒙山、烈焰峰抓获，交易","烈焰峰、函谷关抓获，交易","函谷关、长城抓获，交易","长城、阴山抓获，交易","阴山、地下藏宝洞一层抓获，交易","阴山抓获，交易","地下藏宝洞一层、地下藏宝洞二层抓获，交易","地下藏宝洞二层抓取，交易","古战场抓获，交易","匈奴营寨抓获，交易","古战场抓获，交易","匈奴营寨、古战场抓获，交易","泰山抓获，交易","泰山、蜀山抓获，交易","蜀山抓获，交易"],
    				["神兽抽奖活动、新区充值活动、福袋兑换","神兽抽奖活动"]]];
    	
    		this.i4_ids=[103,105,104,101,102];
    		this.s4_detail=["基础属性：1级宝石，血量+40#e升级效果：每升一级血量+40，宝石等级没有上限#e镶嵌部位：衣服，腰带#e合成宝石有概率失败，失败后损失一颗宝石#e郢城铁匠处进行宝石合成和镶嵌操作",
    		"基础属性：1级宝石，灵力+6#e升级效果：每升一级灵力+6，宝石等级没有上限#e镶嵌部位：项链，鞋子#e合成宝石有概率失败，失败后损失一颗宝石#e郢城铁匠处进行宝石合成和镶嵌操作",
    		"基础属性：1级宝石，速度+8#e升级效果：每升一级速度+8，宝石等级没有上限#e镶嵌部位：腰带，靴子#e合成宝石有概率失败，失败后损失一颗宝石#e郢城铁匠处进行宝石合成和镶嵌操作",
    		"基础属性：1级宝石，攻击力+8#e升级效果：每升一级攻击力+8，宝石等级没有上限#e镶嵌部位：武器，头盔#e合成宝石有概率失败，失败后损失一颗宝石#e郢城铁匠处进行宝石合成和镶嵌操作",
    		"基础属性：1级宝石，防御+12#e升级效果：每升一级防御+12，宝石等级没有上限#e镶嵌部位：衣服，头盔#e合成宝石有概率失败，失败后损失一颗宝石#e郢城铁匠处进行宝石合成和镶嵌操作"];
    		
    		var i;
    		
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=950;
    		this.iH=550;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2+50;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_type=new Array(5);//
    		
    		for(i=0;i<5;i++)
    		{
    			this.btn_type[i]=new XButtonEx2$1(GmPlay$1.xani_nui5);
    			this.btn_type[i].Move(this.iX-100+1, this.iY+40+i*90, 110, 90);
    			this.btn_type[i].InitButton(this.sType[i]);
    		}
    		this.iTypePoint=0;
    		
    		this.Init_0();
    		this.Init_1();
    		this.Init_2();
    		this.Init_3();
    		this.Init_4();
    	}
    	Draw()
    	{
    		var i;
    		
    		for(i=0;i<5;i++)
    		{
    			this.btn_type[i].Draw();
    			// this.pm3f.DrawText_2(this.btn_type[i].iX+54, this.btn_type[i].iY+68, this.sType[i], 0xff006400, 22, 101, 1, 1, 0, -2, -2, 4, 0xff034031);
    			// this.pm3f.DrawText_2(this.btn_type[i].iX+54, this.btn_type[i].iY+68, this.sType[i], 0xff408040, 22, 101, 1, 1, 0, -2, -2, 4, 0xff034031);
    			this.pm3f.DrawText_2(this.btn_type[i].iX+54, this.btn_type[i].iY+68, this.sType[i], 0xff000000, 22, 101, 1, 1, 0, -2, -2, 4, 0xff000000);
    		}
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		i=this.iTypePoint;
    		GmPlay$1.xani_nui5.DrawAnima_aa(this.btn_type[i].iX,this.btn_type[i].iY, this.sType[i],1);
    		//this.pm3f.DrawText_2(this.btn_type[i].iX+54, this.btn_type[i].iY+68, this.sType[i], 0xffff0000, 24, 101, 1, 1, 0, -2, -2, 4, 0xff034031);
    		this.pm3f.DrawText_2(this.btn_type[i].iX+54, this.btn_type[i].iY+68, this.sType[i], 0xffffffff, 24, 101, 1, 1, 0, -2, -2, 4, 0xff000000);
    //		DrawMode.new_framein(this.iX+25, this.iY+25, this.iW-50, this.iH-50);

    		
    		this.bScorlling=false;
    		switch(this.iTypePoint)
    		{
    		case 0://成长历程
    			M3DFast$1.gi().FillRect_2D(this.iX+25, this.iY+25, this.iX+this.iW-25, this.iY+this.iH-25 , 0x807eb6a6);
    			this.DrawPublicFrame(this.iX+25, this.iY+25, this.iW-50, this.iH-50,this.aa_f4,20,20);
    			this.Draw_0();
    			break;
    		case 1://装备大全
    			M3DFast$1.gi().FillRect_2D(this.iX+25, this.iY+25, this.iX+this.iW-25, this.iY+this.iH-25 , 0x807eb6a6);
    			this.DrawPublicFrame(this.iX+25, this.iY+25, this.iW-50, this.iH-50,this.aa_f4,20,20);
    			this.Draw_1();
    			break;
    		case 2://技能大全
    			this.Draw_2();
    			break;
    		case 3://宠物大全
    			M3DFast$1.gi().FillRect_2D(this.iX+25, this.iY+25, this.iX+this.iW-25, this.iY+this.iH-25 , 0x807eb6a6);
    			this.DrawPublicFrame(this.iX+25, this.iY+25, this.iW-50, this.iH-50,this.aa_f4,20,20);
    			this.Draw_3();
    			break;
    		case 4://宝石大全
    			this.Draw_4();
    			break;
    		}
    		this.btn_close.Draw();
    	}

    	 Init_0()
    	{
    		var i;
    		this.btn0_levs=new Array(5);//
    		for(i=0;i<5;i++)
    		{
    			this.btn0_levs[i]=new XButtonEx2$1(GmPlay$1.xani_nui5);
    			this.btn0_levs[i].Move(this.iX+50, this.iY+50+i*65, 146, 57);
    			this.btn0_levs[i].InitButton("新大按钮");
    			this.btn0_levs[i].sName=this.s0_levs[i];
    		}
    		this.aa_f1=GmPlay$1.xani_frame.InitAnimaWithName("单色内框a20_20", null);
    		this.aa_f2=GmPlay$1.xani_frame.InitAnimaWithName("单色内框b20_20", null);
    //		this.aa_f1=GmPlay.xani_nui5.InitAnimaWithName("内框1", null);
    //		this.aa_f2=GmPlay.xani_nui5.InitAnimaWithName("内框2", null);
    		this.aa_f3=GmPlay$1.xani_nui5.InitAnimaWithName("内框3", null);
    		this.aa_f4=GmPlay$1.xani_nui5.InitAnimaWithName("内框4", null);
    		this.i0LevPoint=0;
    	}

    	 Draw_0()
    	{//成长历程_fd._fontName = "fonts/msyh.ttf";
    		var i,offx,offy;
    		
    		for(i=0;i<5;i++)
    		{
    			if(this.i0LevPoint==i)
    			{
    				this.btn0_levs[i].bMouseDown=true;
    			}
    			this.btn0_levs[i].Draw();
    		}
    		
    		this.DrawPublicFrame(this.iX+220,this.iY+50,680,450,this.aa_f1,20,20);
    		
    		this.iSRX=this.iX+220+20;
    		this.iSRY=this.iY+50+20;
    		this.iSRW=680-40;
    		this.iSRH=450-40;
    		this.pm3f.SetViewClip(this.iSRX,this.iSRY,this.iSRX+this.iSRW,this.iSRY+this.iSRH);
    		this.iSHeight=this.s0_detail[this.i0LevPoint].length*94;
    		this.bScorlling=true;
    		for(i=0;i<this.s0_detail[this.i0LevPoint].length;i++)
    		{
    			offx=this.iX+220+20;
    			offy=this.iY+50+20+94*i-this.iSOffY;
    			if(offy+94<this.iY+50 || offy>this.iY+50+450)continue;
    			this.DrawPublicFrame(offx,offy,640,90,this.aa_f2,20,20);
    			GmPlay$1.xani_nui5.DrawAnima_aa(offx+10,offy+5, this.s0_levs[this.i0LevPoint], i);
    			FormatString.gi().Format(this.s0_detail[this.i0LevPoint][i], 500, 20);
    			FormatString.gi().Draw(offx+110, offy+90/2-FormatString.gi().iH/2);
    		}
    		this.pm3f.NoClip();
    	}
    	/////////////////////////////----------------------1---------------------------------------------



    	 Init_1()
    	{
    		var i;
    		this.i1LevPoint=0;
    		this.bChangeLev=false;
    		this.btn1_clev=new XButtonEx2$1(GmPlay$1.xani_nui5);
    		this.btn1_clev.Move(this.iX+170, this.iY+50, 109, 61);
    		this.btn1_clev.InitButton("新中按钮");
    		this.btn1_clev.sName=this.s1_levs[0];
    		this.btn1_clev.iNameSize=20;
    		this.btn1_levs=new Array(9);//
    		for(i=0;i<9;i++)
    		{
    			this.btn1_levs[i]=new XButtonEx2$1(GmPlay$1.xani_nui5);
    			this.btn1_levs[i].Move(this.iX+170+(i%3)*(109+5), this.iY+50+parseInt(i/3)*(61+5), 109, 61);
    			this.btn1_levs[i].InitButton("新中按钮");
    			this.btn1_levs[i].sName=this.s1_levs[i];
    			this.btn1_levs[i].iNameSize=20;
    		}
    		this.btn1_sets=new Array(12);//
    		for(i=0;i<12;i++)
    		{
    			this.btn1_sets[i]=new XButtonEx2$1(GmPlay$1.xani_nui5);
    			this.btn1_sets[i].InitButton("最大按钮");
    		}
    		this.i1SetPoint=0;
    	}
    	 Draw_1()
    	{
    		var i,j,k,offx,offy;

    //		this.DrawPublicFrame(this.iX+50,this.iY+130,236,380,this.aa_f1,20,20);
    		this.iSRX=this.iX+50;
    		this.iSRY=this.iY+130;
    		this.iSRW=236;
    		this.iSRH=380;
    		this.pm3f.SetViewClip(this.iSRX,this.iSRY,this.iSRX+this.iSRW,this.iSRY+this.iSRH);
    		this.iSHeight=this.s1_setids[this.i1LevPoint].length*(87+5);
    		this.bScorlling=true;
    		for(i=0;i<this.s1_setids[this.i1LevPoint].length;i++)
    		{
    			offx=this.iX+50;
    			offy=this.iY+130+(87+5)*i-this.iSOffY;
    			this.btn1_sets[i].Move(offx,offy, 236, 87);
    			if(offy+94<this.iSRY || offy>this.iSRY+this.iSRH)continue;//cx
    			if(this.i1SetPoint==i)this.btn1_sets[i].bMouseDown=true;
    			this.btn1_sets[i].Draw();
    			GmPlay$1.xani_nui3.DrawAnima(offx+4,offy+3, "物品格子", 0);
    			GmPlay$1.xani_ngoods.DrawAnima_aa(offx+4,offy+3, GmPlay$1.de_goods.strValue(this.s1_setids[this.i1LevPoint][i], 0, 10), 0);
    			this.pm3f.DrawTextEx(offx+100,offy+87/2, GmPlay$1.de_goods.strValue(this.s1_setids[this.i1LevPoint][i], 0, 4), 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    		}
    		this.pm3f.NoClip();
    		this.DrawPublicFrame(this.iX+290,this.iY+45,610,460,this.aa_f1,20,20);
    		
    		offx=this.iX+290;
    		offy=this.iY+45;
    		GmPlay$1.xani_nui3.DrawAnima(offx+15,offy+15, "物品格子", 0);
    		GmPlay$1.xani_ngoods.DrawAnima_aa(offx+15,offy+15, GmPlay$1.de_goods.strValue(this.s1_setids[this.i1LevPoint][this.i1SetPoint], 0, 10), 0);
    		this.pm3f.DrawTextEx(offx+110,offy+15+80/2, GmPlay$1.de_goods.strValue(this.s1_setids[this.i1LevPoint][this.i1SetPoint], 0, 4), 0xffffffff, 30, 101, 1, 1, 0, 0, -2);
    		GmPlay$1.xani_nui5.DrawAnimaEx(offx+15,offy+15+80+15, "分隔线", 0, 101, 55.0, 1, 0, 0, 0);
    		offy+=15+80+15+15;
    		var str="未知";
    		i=GmPlay$1.de_goods.intValue(this.s1_setids[this.i1LevPoint][this.i1SetPoint], -1, 16);//类型
    		j=GmPlay$1.de_goods.intValue(this.s1_setids[this.i1LevPoint][this.i1SetPoint], -1, 19);//种族
    		k=GmPlay$1.de_goods.intValue(this.s1_setids[this.i1LevPoint][this.i1SetPoint], -1, 20);//性别
    		if(i==0)str="头盔";
    		else if(i==1)str="饰品";
    		else if(i==2)
    		{
    			if(j==0)str="剑";
    			else if(j==1)str="刀";
    			else if(j==2)str="枪";
    		}
    		else if(i==3)
    		{
    			if(k==0)str="女衣";
    			else str="铠甲";
    		}
    		else if(i==4)str="腰带";
    		else if(i==5)str="鞋子";
    		str="类型："+str;
    		var gap=31,wsize=25;
    		this.pm3f.DrawTextEx(offx+15,offy, str, 0xff000000, wsize, 101, 1, 1, 0, 0, 0);
    		offy+=gap;
    		this.pm3f.DrawTextEx(offx+15,offy, "基础属性范围：", 0xff000000, wsize, 101, 1, 1, 0, 0, 0);
    		offy+=gap;
    		j=GmPlay$1.de_goods.intValue(this.s1_setids[this.i1LevPoint][this.i1SetPoint], -1, 9);
    		this.pm3f.DrawTextEx(offx+15,offy, "等级："+j, 0xff000000, wsize, 101, 1, 1, 0, 0, 0);
    		offy+=gap;
    		
    		i=GmPlay$1.de_goods.intValue(this.s1_setids[this.i1LevPoint][this.i1SetPoint], -1, 21);
    		if(i>0)
    		{
    			this.pm3f.DrawTextEx(offx+15,offy, "防御：+"+i+"~"+(i*2)+"（图纸打造+"+(i*11/10)+"~"+(i*11/5)+"）", 0xff000000, wsize, 101, 1, 1, 0, 0, 0);
    			offy+=gap;
    		}
    		i=GmPlay$1.de_goods.intValue(this.s1_setids[this.i1LevPoint][this.i1SetPoint], -1, 22);
    		if(i>0)
    		{
    			this.pm3f.DrawTextEx(offx+15,offy, "魔法：+"+i+"~"+(i*2)+"（图纸打造+"+(i*11/10)+"~"+(i*11/5)+"）", 0xff000000, wsize, 101, 1, 1, 0, 0, 0);
    			offy+=gap;
    		}
    		i=GmPlay$1.de_goods.intValue(this.s1_setids[this.i1LevPoint][this.i1SetPoint], -1, 23);
    		if(i>0)
    		{
    			this.pm3f.DrawTextEx(offx+15,offy, "灵力：+"+i+"~"+(i*2)+"（图纸打造+"+(i*11/10)+"~"+(i*11/5)+"）", 0xff000000, wsize, 101, 1, 1, 0, 0, 0);
    			offy+=gap;
    		}
    		i=GmPlay$1.de_goods.intValue(this.s1_setids[this.i1LevPoint][this.i1SetPoint], -1, 24);
    		if(i>0)
    		{
    			this.pm3f.DrawTextEx(offx+15,offy, "气血：+"+i+"~"+(i*2)+"（图纸打造+"+(i*11/10)+"~"+(i*11/5)+"）", 0xff000000, wsize, 101, 1, 1, 0, 0, 0);
    			offy+=gap;
    		}
    		i=GmPlay$1.de_goods.intValue(this.s1_setids[this.i1LevPoint][this.i1SetPoint], -1, 25);
    		if(i>0)
    		{
    			this.pm3f.DrawTextEx(offx+15,offy, "速度：+"+i+"~"+(i*2)+"（图纸打造+"+(i*11/10)+"~"+(i*11/5)+"）", 0xff000000, wsize, 101, 1, 1, 0, 0, 0);
    			offy+=gap;
    		}
    		i=GmPlay$1.de_goods.intValue(this.s1_setids[this.i1LevPoint][this.i1SetPoint], -1, 3);
    		if(i>0)
    		{
    			this.pm3f.DrawTextEx(offx+15,offy, "攻击：+"+i+"~"+(i*2)+"（图纸打造+"+(i*11/10)+"~"+(i*11/5)+"）", 0xff000000, wsize, 101, 1, 1, 0, 0, 0);
    			offy+=gap;
    		}
    		k=j*5+100;
    		this.pm3f.DrawTextEx(offx+15,offy, "耐久度："+k+"/"+k, 0xff000000, wsize, 101, 1, 1, 0, 0, 0);
    		
    		offy=this.iY+this.iH-150;
    		this.pm3f.DrawTextEx(offx+15,offy-20-15, "【郢城】【铁匠】处强化装备，可提升装备属性", 0xff000000, wsize, 101, 1, 1, 0, 0, 0);
    		GmPlay$1.xani_nui5.DrawAnimaEx(offx+15,offy, "分隔线", 0, 101, 55.0, 1, 0, 0, 0);
    		offy+=10;
    		this.pm3f.DrawTextEx(offx+15,offy, "主要获取途径", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		offy+=20+10;
    		this.DrawPublicFrame(offx+15,offy,580,50,this.aa_f2,20,20);
    		if(j==0)this.pm3f.DrawTextEx(offx+15+580/2,offy+25, "装备打造，乡水镇装备店购买，交易", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		else if(j==10)this.pm3f.DrawTextEx(offx+15+580/2,offy+25, "装备打造，西阳城装备店购买，交易", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		else if(j==20)this.pm3f.DrawTextEx(offx+15+580/2,offy+25, "装备打造，郢城装备店购买，交易", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		else if(j==30)this.pm3f.DrawTextEx(offx+15+580/2,offy+25, "装备打造，临淄装备店购买，交易", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		else if(j==40)this.pm3f.DrawTextEx(offx+15+580/2,offy+25, "装备打造，咸阳装备店购买，交易", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		else if(j==50 || j==60)this.pm3f.DrawTextEx(offx+15+580/2,offy+25, "装备打造，挖宝，交易", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		else this.pm3f.DrawTextEx(offx+15+580/2,offy+25, "装备打造，交易", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		
    		//////////////////////
    		
    		this.pm3f.DrawTextEx(this.btn1_clev.iX-120, this.btn1_clev.iY+61/2, "选择等级", 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    		this.DrawPublicFrame(this.btn1_clev.iX-5,this.btn1_clev.iY-5,(109)*1+10,(61)*1+10,this.aa_f3,20,20);
    		this.btn1_clev.sName=this.s1_levs[this.i1LevPoint];
    		this.btn1_clev.Draw();
    		if(this.bChangeLev)
    		{
    			this.DrawPublicFrame(this.btn1_clev.iX-5,this.btn1_clev.iY-5,(109+5)*3+5,(61+5)*3+5,this.aa_f3,20,20);
    			for(i=0;i<9;i++)this.btn1_levs[i].Draw();
    		}
    	}
    	///////////////-----------------------------2--------------------------------------------------


    	 
    	 Init_2()
    	{
    		var i;
    		this.btn2_page=new Array(5);//
    		for(i=0;i<5;i++)
    		{
    			this.btn2_page[i]=new XButtonEx2$1(GmPlay$1.xani_nui5);
    			this.btn2_page[i].Move(this.iX+230+130*i, this.iY+20, 130, 44);
    			this.btn2_page[i].InitButton("标签按钮");
    			this.btn2_page[i].sName=this.s2_page[i];
    			this.btn2_page[i].iNameSize=20;
    		}
    		this.i2PagePoint=0;
    		
    		this.btn2_cschool=new XButtonEx2$1(GmPlay$1.xani_nui5);
    		this.btn2_cschool.Move(this.iX+170, this.iY+80, 109, 61);
    		this.btn2_cschool.InitButton("新中按钮");
    		this.btn2_cschool.sName=this.s2_sort1[0];
    		this.btn2_cschool.iNameSize=20;
    		this.i2SchoolPoint=0;
    		this.btn2_schools=new Array(9);//
    		for(i=0;i<9;i++)
    		{
    			this.btn2_schools[i]=new XButtonEx2$1(GmPlay$1.xani_nui5);
    			this.btn2_schools[i].Move(this.iX+170+(i%3)*(109+5), this.iY+80+parseInt(i/3)*(61+5), 109, 61);
    			this.btn2_schools[i].InitButton("新中按钮");
    			this.btn2_schools[i].sName=this.s2_sort1[i];
    			this.btn2_schools[i].iNameSize=20;
    		}
    		this.bChangeSchool=false;
    		
    		this.btn2_czb=new XButtonEx2$1(GmPlay$1.xani_nui5);
    		this.btn2_czb.Move(this.iX+170, this.iY+80, 109, 61);
    		this.btn2_czb.InitButton("新中按钮");
    		this.btn2_czb.sName=this.s2_sort1[0];
    		this.btn2_czb.iNameSize=20;
    		this.i2ZbPoint=0;
    		this.btn2_zbs=new Array(9);//
    		for(i=0;i<2;i++)
    		{
    			this.btn2_zbs[i]=new XButtonEx2$1(GmPlay$1.xani_nui5);
    			this.btn2_zbs[i].Move(this.iX+170+(i%3)*(109+5), this.iY+80+parseInt(i/3)*(61+5), 109, 61);
    			this.btn2_zbs[i].InitButton("新中按钮");
    			this.btn2_zbs[i].sName=this.s2_sort2[i];
    			this.btn2_zbs[i].iNameSize=20;
    		}
    		this.bChangeZb=false;
    		
    		this.btn2_jnlist=new Array(64);//
    		for(i=0;i<64;i++)
    		{
    			this.btn2_jnlist[i]=new XButtonEx2$1(GmPlay$1.xani_nui5);
    			this.btn2_jnlist[i].InitButton("最大按钮");
    		}
    		this.i2SkillPoint=0;
    	}
    	 Draw_2()
    	{//技能大全
    		var i,offx,offy;
    		for(i=0;i<5;i++)this.btn2_page[i].Draw();
    //		M3DFast.gi().FillRect_2D(this.iX+25, this.iY+20+35, this.iX+this.iW-25, this.iY+this.iH-25 , 0x807eb6a6);
    		offx=this.iX+25;
    		offy=this.iY+20+35;
    		// this.aa_f4.iFrame=9;this.aa_f4.DrawEx(offx,offy, 101, 1.0*(this.iW-50)/20, 1.0*(this.iH-20-35-25)/20, 0, -1, -1);
    		this.DrawPublicFrame(offx,offy, this.iW-50, this.iH-20-35-25,this.aa_f4,20,20);
    		i=this.i2PagePoint;
    		this.btn2_page[i].bMouseDown=true;
    		this.btn2_page[i].Draw();
    		
    		switch(this.i2PagePoint)
    		{
    		case 0://门派技能
    			this.iSRX=this.iX+50;
    			this.iSRY=this.iY+160;
    			this.iSRW=236;
    			this.iSRH=350;
    			this.pm3f.SetViewClip(this.iSRX,this.iSRY,this.iSRX+this.iSRW,this.iSRY+this.iSRH);
    			this.iSHeight=this.s2_skills1[this.i2SchoolPoint].length*(87+5);
    			this.bScorlling=true;
    			for(i=0;i<this.s2_skills1[this.i2SchoolPoint].length;i++)
    			{
    				offx=this.iX+50;
    				offy=this.iY+160+(87+5)*i-this.iSOffY;
    				this.btn2_jnlist[i].Move(offx,offy, 236, 87);
    				if(offy+94<this.iSRY || offy>this.iSRY+this.iSRH)continue;//cx
    				if(this.i2SkillPoint==i)this.btn2_jnlist[i].bMouseDown=true;
    				this.btn2_jnlist[i].Draw();
    				GmPlay$1.xani_nui2.DrawAnimaEx(offx+4+6,offy+3+7, "技能框", 0,101,0.85,0.85,0,0,0);
    				GmPlay$1.xani_nicon.DrawAnimaEx(offx+4+6,offy+3+7, GmPlay$1.de_skill.strValue(this.s2_skills1[this.i2SchoolPoint][i], 0, 5), 0,101,0.85,0.85,0,0,0);
    				this.pm3f.DrawTextEx(offx+100,offy+87/2, GmPlay$1.de_skill.strValue(this.s2_skills1[this.i2SchoolPoint][i], 0, 6), 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    			}
    			this.pm3f.NoClip();
    			
    			i=this.i2SkillPoint;
    			offx=this.iX+290;
    			offy=this.iY+75;
    			this.DrawPublicFrame(offx,offy, 610,430,this.aa_f1,20,20);
    			GmPlay$1.xani_nui2.DrawAnimaEx(offx+20,offy+20, "技能框", 0,101,1,1,0,0,0);
    			GmPlay$1.xani_nicon.DrawAnimaEx(offx+20,offy+20, GmPlay$1.de_skill.strValue(this.s2_skills1[this.i2SchoolPoint][i], 0, 5), 0,101,1,1,0,0,0);
    			this.pm3f.DrawTextEx(offx+120,offy+20+40, GmPlay$1.de_skill.strValue(this.s2_skills1[this.i2SchoolPoint][i], 0, 6), 0xffffffff, 30, 101, 1, 1, 0, 0, -2);
    			GmPlay$1.xani_nui5.DrawAnimaEx(offx+15,offy+20+80+20, "分隔线", 0, 101, 55.0, 1, 0, 0, 0);
    			
    			this.pm3f.DrawTextEx(offx+20,offy+20+80+20+20, "技能描述：", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    			FormatString.gi().FormatEx("#c000000"+GmPlay$1.de_skill.strValue(this.s2_skills1[this.i2SchoolPoint][i], 0, 3), 570, 25, 0, 0, 40);
    			FormatString.gi().Draw(offx+20, offy+20+80+20+40);
    			
    			offy=this.iY+this.iH-150;
    			GmPlay$1.xani_nui5.DrawAnimaEx(offx+15,offy, "分隔线", 0, 101, 55.0, 1, 0, 0, 0);
    			offy+=10;
    			this.pm3f.DrawTextEx(offx+15,offy, "主要获取途径", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			offy+=20+10;
    			this.DrawPublicFrame(offx+15,offy,580,50,this.aa_f2,20,20);
    			this.pm3f.DrawTextEx(offx+15+580/2,offy+25, "使用遁地术回门派学习", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			
    			this.pm3f.DrawTextEx(this.btn2_cschool.iX-120, this.btn2_cschool.iY+61/2, "选择门派", 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    			this.DrawPublicFrame(this.btn2_cschool.iX-5,this.btn2_cschool.iY-5,(109)*1+10,(61)*1+10,this.aa_f3,20,20);
    			this.btn2_cschool.sName=this.s2_sort1[this.i2SchoolPoint];
    			this.btn2_cschool.Draw();
    			if(this.bChangeSchool)
    			{
    				this.DrawPublicFrame(this.btn2_cschool.iX-5,this.btn2_cschool.iY-5,(109+5)*3+5,(61+5)*3+5,this.aa_f3,20,20);
    				for(i=0;i<9;i++)this.btn2_schools[i].Draw();
    			}
    			break;
    		case 1://宠物技能
    			this.iSRX=this.iX+50;
    			this.iSRY=this.iY+160;
    			this.iSRW=236;
    			this.iSRH=350;
    			this.pm3f.SetViewClip(this.iSRX,this.iSRY,this.iSRX+this.iSRW,this.iSRY+this.iSRH);
    			this.iSHeight=this.s2_skills2[this.i2ZbPoint].length*(87+5);
    			this.bScorlling=true;
    			for(i=0;i<this.s2_skills2[this.i2ZbPoint].length;i++)
    			{
    				offx=this.iX+50;
    				offy=this.iY+160+(87+5)*i-this.iSOffY;
    				this.btn2_jnlist[i].Move(offx,offy, 236, 87);
    				if(offy+94<this.iSRY || offy>this.iSRY+this.iSRH)continue;//cx
    				if(this.i2SkillPoint==i)this.btn2_jnlist[i].bMouseDown=true;
    				this.btn2_jnlist[i].Draw();
    				GmPlay$1.xani_nui2.DrawAnimaEx(offx+4+6,offy+3+7, "技能框", 0,101,0.85,0.85,0,0,0);
    				GmPlay$1.xani_nicon.DrawAnimaEx(offx+4+6,offy+3+7, GmPlay$1.de_skill.strValue(this.s2_skills2[this.i2ZbPoint][i], 0, 5), 0,101,0.85,0.85,0,0,0);
    				this.pm3f.DrawTextEx(offx+100,offy+87/2, this.s2_2ext[this.i2ZbPoint][i][0], 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    			}
    			this.pm3f.NoClip();
    			
    			i=this.i2SkillPoint;
    			offx=this.iX+290;
    			offy=this.iY+75;
    			this.DrawPublicFrame(offx,offy, 610,430,this.aa_f1,20,20);
    			GmPlay$1.xani_nui2.DrawAnimaEx(offx+20,offy+20, "技能框", 0,101,1,1,0,0,0);
    			GmPlay$1.xani_nicon.DrawAnimaEx(offx+20,offy+20, GmPlay$1.de_skill.strValue(this.s2_skills2[this.i2ZbPoint][i], 0, 5), 0,101,1,1,0,0,0);
    			this.pm3f.DrawTextEx(offx+120,offy+20+80/2, this.s2_2ext[this.i2ZbPoint][i][0], 0xffffffff, 30, 101, 1, 1, 0, 0, -2);
    			GmPlay$1.xani_nui5.DrawAnimaEx(offx+15,offy+20+80+20, "分隔线", 0, 101, 55.0, 1, 0, 0, 0);
    			
    			offy+=20+80+20+10;
    			FormatString.gi().FormatEx("#c000000"+this.s2_2ext[this.i2ZbPoint][i][1], 570, 25, 0, 0, 30);
    			FormatString.gi().Draw(offx+20, offy);
    			
    			offy=this.iY+this.iH-150;
    			GmPlay$1.xani_nui5.DrawAnimaEx(offx+15,offy, "分隔线", 0, 101, 55.0, 1, 0, 0, 0);
    			offy+=10;
    			this.pm3f.DrawTextEx(offx+15,offy, "主要获取途径", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			offy+=20+10;
    			this.DrawPublicFrame(offx+15,offy,580,50,this.aa_f2,20,20);
    			this.pm3f.DrawTextEx(offx+15+580/2,offy+25, this.s2_2ext[this.i2ZbPoint][i][2], 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			
    			this.pm3f.DrawTextEx(this.btn2_czb.iX-120, this.btn2_czb.iY+61/2, "选择分类", 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    			this.DrawPublicFrame(this.btn2_czb.iX-5,this.btn2_czb.iY-5,(109)*1+10,(61)*1+10,this.aa_f3,20,20);
    			this.btn2_czb.sName=this.s2_sort2[this.i2ZbPoint];
    			this.btn2_czb.Draw();
    			if(this.bChangeZb)
    			{
    				this.DrawPublicFrame(this.btn2_czb.iX-5,this.btn2_czb.iY-5,(109+5)*2+5,(61+5)*1+5,this.aa_f3,20,20);
    				for(i=0;i<2;i++)this.btn2_zbs[i].Draw();
    			}
    			break;
    		case 2://装备特效
    			this.iSRX=this.iX+50;
    			this.iSRY=this.iY+80;
    			this.iSRW=236;
    			this.iSRH=430;
    			this.pm3f.SetViewClip(this.iSRX,this.iSRY,this.iSRX+this.iSRW,this.iSRY+this.iSRH);
    			this.iSHeight=this.s2_skills3.length*(87+5);
    			this.bScorlling=true;
    			for(i=0;i<this.s2_skills3.length;i++)
    			{
    				offx=this.iX+50;
    				offy=this.iY+80+(87+5)*i-this.iSOffY;
    				this.btn2_jnlist[i].Move(offx,offy, 236, 87);
    				if(offy+94<this.iSRY || offy>this.iSRY+this.iSRH)continue;//cx
    				if(this.i2SkillPoint==i)this.btn2_jnlist[i].bMouseDown=true;
    				this.btn2_jnlist[i].Draw();
    				GmPlay$1.xani_nui2.DrawAnimaEx(offx+4+6,offy+3+7, "技能框", 0,101,0.85,0.85,0,0,0);
    				GmPlay$1.xani_nicon.DrawAnimaEx(offx+4+6,offy+3+7, GmPlay$1.de_skill.strValue(this.s2_skills3[i], 0, 5), 0,101,0.85,0.85,0,0,0);
    				this.pm3f.DrawTextEx(offx+100,offy+87/2, GmPlay$1.de_skill.strValue(this.s2_skills3[i], 0, 6), 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    			}
    			this.pm3f.NoClip();
    			
    			i=this.i2SkillPoint;
    			offx=this.iX+290;
    			offy=this.iY+75;
    			this.DrawPublicFrame(offx,offy, 610,430,this.aa_f1,20,20);
    			GmPlay$1.xani_nui2.DrawAnimaEx(offx+20,offy+20, "技能框", 0,101,1,1,0,0,0);
    			GmPlay$1.xani_nicon.DrawAnimaEx(offx+20,offy+20, GmPlay$1.de_skill.strValue(this.s2_skills3[i], 0, 5), 0,101,1,1,0,0,0);
    			this.pm3f.DrawTextEx(offx+120,offy+20+40, GmPlay$1.de_skill.strValue(this.s2_skills3[i], 0, 6), 0xffffffff, 30, 101, 1, 1, 0, 0, -2);
    			GmPlay$1.xani_nui5.DrawAnimaEx(offx+15,offy+20+80+20, "分隔线", 0, 101, 55.0, 1, 0, 0, 0);
    			
    			offy+=20+80+20+20;
    			this.pm3f.DrawTextEx(offx+20,offy, "对应装备："+this.s2_3ext[i], 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    			offy+=40;
    			this.pm3f.DrawTextEx(offx+20,offy, "技能描述：", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    			offy+=20;
    			FormatString.gi().FormatEx("#c000000"+GmPlay$1.de_skill.strValue(this.s2_skills3[i], 0, 3), 570, 25, 0, 0, 40);
    			FormatString.gi().Draw(offx+20, offy);
    			
    			offy=this.iY+this.iH-150;
    			GmPlay$1.xani_nui5.DrawAnimaEx(offx+15,offy, "分隔线", 0, 101, 55.0, 1, 0, 0, 0);
    			offy+=10;
    			this.pm3f.DrawTextEx(offx+15,offy, "主要获取途径", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			offy+=20+10;
    			this.DrawPublicFrame(offx+15,offy,580,50,this.aa_f2,20,20);
    			this.pm3f.DrawTextEx(offx+15+580/2,offy+25, "装备打造", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			break;
    		case 3://装备特技
    			this.iSRX=this.iX+50;
    			this.iSRY=this.iY+80;
    			this.iSRW=236;
    			this.iSRH=430;
    			this.pm3f.SetViewClip(this.iSRX,this.iSRY,this.iSRX+this.iSRW,this.iSRY+this.iSRH);
    			this.iSHeight=this.s2_skills4.length*(87+5);
    			this.bScorlling=true;
    			for(i=0;i<this.s2_skills4.length;i++)
    			{
    				offx=this.iX+50;
    				offy=this.iY+80+(87+5)*i-this.iSOffY;
    				this.btn2_jnlist[i].Move(offx,offy, 236, 87);
    				if(offy+94<this.iSRY || offy>this.iSRY+this.iSRH)continue;//cx
    				if(this.i2SkillPoint==i)this.btn2_jnlist[i].bMouseDown=true;
    				this.btn2_jnlist[i].Draw();
    				GmPlay$1.xani_nui2.DrawAnimaEx(offx+4+6,offy+3+7, "技能框", 0,101,0.85,0.85,0,0,0);
    				GmPlay$1.xani_nicon.DrawAnimaEx(offx+4+6,offy+3+7, GmPlay$1.de_skill.strValue(this.s2_skills4[i], 0, 5), 0,101,0.85,0.85,0,0,0);
    				this.pm3f.DrawTextEx(offx+100,offy+87/2, GmPlay$1.de_skill.strValue(this.s2_skills4[i], 0, 6), 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    			}
    			this.pm3f.NoClip();
    			
    			i=this.i2SkillPoint;
    			offx=this.iX+290;
    			offy=this.iY+75;
    			this.DrawPublicFrame(offx,offy, 610,430,this.aa_f1,20,20);
    			GmPlay$1.xani_nui2.DrawAnimaEx(offx+20,offy+20, "技能框", 0,101,1,1,0,0,0);
    			GmPlay$1.xani_nicon.DrawAnimaEx(offx+20,offy+20, GmPlay$1.de_skill.strValue(this.s2_skills4[i], 0, 5), 0,101,1,1,0,0,0);
    			this.pm3f.DrawTextEx(offx+120,offy+20+40, GmPlay$1.de_skill.strValue(this.s2_skills4[i], 0, 6), 0xffffffff, 30, 101, 1, 1, 0, 0, -2);
    			GmPlay$1.xani_nui5.DrawAnimaEx(offx+15,offy+20+80+20, "分隔线", 0, 101, 55.0, 1, 0, 0, 0);
    			
    			offy+=20+80+20+20;
    			this.pm3f.DrawTextEx(offx+20,offy, "消耗愤怒："+GmPlay$1.de_skill.strValue(this.s2_skills4[i], 0, 35), 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    			offy+=40;
    			this.pm3f.DrawTextEx(offx+20,offy, "技能描述：", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    			offy+=20;
    			FormatString.gi().FormatEx("#c000000"+GmPlay$1.de_skill.strValue(this.s2_skills4[i], 0, 3), 570, 25, 0, 0, 40);
    			FormatString.gi().Draw(offx+20, offy);
    			
    			offy=this.iY+this.iH-150;
    			GmPlay$1.xani_nui5.DrawAnimaEx(offx+15,offy, "分隔线", 0, 101, 55.0, 1, 0, 0, 0);
    			offy+=10;
    			this.pm3f.DrawTextEx(offx+15,offy, "主要获取途径", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			offy+=20+10;
    			this.DrawPublicFrame(offx+15,offy,580,50,this.aa_f2,20,20);
    			this.pm3f.DrawTextEx(offx+15+580/2,offy+25, "装备打造", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			break;
    		case 4://辅助技能
    			this.iSRX=this.iX+50;
    			this.iSRY=this.iY+80;
    			this.iSRW=236;
    			this.iSRH=430;
    			this.pm3f.SetViewClip(this.iSRX,this.iSRY,this.iSRX+this.iSRW,this.iSRY+this.iSRH);
    			this.iSHeight=this.s2_skills5.length*(87+5);
    			this.bScorlling=true;
    			for(i=0;i<this.s2_skills5.length;i++)
    			{
    				offx=this.iX+50;
    				offy=this.iY+80+(87+5)*i-this.iSOffY;
    				this.btn2_jnlist[i].Move(offx,offy, 236, 87);
    				if(offy+94<this.iSRY || offy>this.iSRY+this.iSRH)continue;//cx
    				if(this.i2SkillPoint==i)this.btn2_jnlist[i].bMouseDown=true;
    				this.btn2_jnlist[i].Draw();
    				GmPlay$1.xani_nui2.DrawAnimaEx(offx+4+6,offy+3+7, "技能框", 0,101,0.85,0.85,0,0,0);
    				GmPlay$1.xani_nicon.DrawAnimaEx(offx+4+6,offy+3+7, GmPlay$1.de_skill.strValue(this.s2_skills5[i], 0, 5), 0,101,0.85,0.85,0,0,0);
    				this.pm3f.DrawTextEx(offx+100,offy+87/2, GmPlay$1.de_skill.strValue(this.s2_skills5[i], 0, 6), 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    			}
    			this.pm3f.NoClip();
    			
    			i=this.i2SkillPoint;
    			offx=this.iX+290;
    			offy=this.iY+75;
    			this.DrawPublicFrame(offx,offy, 610,430,this.aa_f1,20,20);
    			GmPlay$1.xani_nui2.DrawAnimaEx(offx+20,offy+20, "技能框", 0,101,1,1,0,0,0);
    			GmPlay$1.xani_nicon.DrawAnimaEx(offx+20,offy+20, GmPlay$1.de_skill.strValue(this.s2_skills5[i], 0, 5), 0,101,1,1,0,0,0);
    			this.pm3f.DrawTextEx(offx+120,offy+20+40, GmPlay$1.de_skill.strValue(this.s2_skills5[i], 0, 6), 0xffffffff, 30, 101, 1, 1, 0, 0, -2);
    			GmPlay$1.xani_nui5.DrawAnimaEx(offx+15,offy+20+80+20, "分隔线", 0, 101, 55.0, 1, 0, 0, 0);
    			
    			offy+=20+80+20+20;
    			this.pm3f.DrawTextEx(offx+20,offy, "技能描述：", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    			offy+=20;
    			FormatString.gi().FormatEx("#c000000"+this.s2_details[i][1], 570, 25, 0, 0, 40);
    			FormatString.gi().Draw(offx+20, offy);
    			
    			offy=this.iY+this.iH-150;
    			GmPlay$1.xani_nui5.DrawAnimaEx(offx+15,offy, "分隔线", 0, 101, 55.0, 1, 0, 0, 0);
    			offy+=10;
    			this.pm3f.DrawTextEx(offx+15,offy, "主要获取途径", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			offy+=20+10;
    			this.DrawPublicFrame(offx+15,offy,580,50,this.aa_f2,20,20);
    			this.pm3f.DrawTextEx(offx+15+580/2,offy+25, this.s2_details[i][2], 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			break;
    		}
    	}
    	/////////////////------------------------------------------3---宠物-------------------------


    	
    	 Init_3()
    	{
    		var i;
    		this.i3Type=0;
    		this.bChangePT=false;
    		this.btn3_cpt=new XButtonEx2$1(GmPlay$1.xani_nui5);
    		this.btn3_cpt.Move(this.iX+170, this.iY+50, 109, 61);
    		this.btn3_cpt.InitButton("新中按钮");
    		this.btn3_cpt.sName=this.s3_type[0];
    		this.btn3_cpt.iNameSize=20;
    		this.btn3_pts=new Array(4);//
    		for(i=0;i<4;i++)
    		{
    			this.btn3_pts[i]=new XButtonEx2$1(GmPlay$1.xani_nui5);
    			this.btn3_pts[i].Move(this.iX+170+(i%2)*(109+5), this.iY+50+parseInt(i/2)*(61+5), 109, 61);
    			this.btn3_pts[i].InitButton("新中按钮");
    			this.btn3_pts[i].sName=this.s3_type[i];
    			this.btn3_pts[i].iNameSize=20;
    		}
    		this.btn3_pets=new Array(36);//
    		for(i=0;i<36;i++)
    		{
    			this.btn3_pets[i]=new XButtonEx2$1(GmPlay$1.xani_nui5);
    			this.btn3_pets[i].InitButton("最大按钮");
    		}
    		this.i3PetPoint=0;
    		this.btn3_skills=new Array(5);//
    		for(i=0;i<5;i++)
    		{
    			this.btn3_skills[i]=new XButtonEx2$1(GmPlay$1.xani_nui5);
    			this.btn3_skills[i].bSingleButton=true;
    //			this.btn3_skills[i].SetCheckRect(x, y, w, h)
    		}
    		this.i3ShowSkillDetail=-1;
    	}
    	 Draw_3()
    	{
    		var i,j,k,offx,offy;
    		this.iSRX=this.iX+50;
    		this.iSRY=this.iY+130;
    		this.iSRW=236;
    		this.iSRH=380;
    		this.pm3f.SetViewClip(this.iSRX,this.iSRY,this.iSRX+this.iSRW,this.iSRY+this.iSRH);
    		this.iSHeight=this.s3_petids[this.i3Type].length*(87+5);
    		this.bScorlling=true;
    		for(i=0;i<this.s3_petids[this.i3Type].length;i++)
    		{
    			offx=this.iX+50;
    			offy=this.iY+130+(87+5)*i-this.iSOffY;
    			this.btn3_pets[i].Move(offx,offy, 236, 87);
    			if(offy+94<this.iSRY || offy>this.iSRY+this.iSRH)continue;//cx
    			if(this.i3PetPoint==i)this.btn3_pets[i].bMouseDown=true;
    			this.btn3_pets[i].Draw();
    			GmPlay$1.xani_nui2.DrawAnima(offx+7,offy+5, "宠物头像框",0);
    			GmPlay$1.xani_head.DrawAnima_aa(offx+7,offy+5,GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][i], 0, 1),0);
    			this.pm3f.DrawTextEx(offx+100,offy+87/2, GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][i], 0, 1), 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    		}
    		this.pm3f.NoClip();
    		this.DrawPublicFrame(this.iX+290,this.iY+45,610,460,this.aa_f1,20,20);
    		
    		offx=this.iX+290;
    		offy=this.iY+45;
    		this.DrawPublicFrame(offx+15,offy+15,130,180,this.aa_f2,20,20);
    		this.pm3f.DrawTextEx(offx+15+130/2,offy+15+20, GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 1), 0xff000000, 20, 101, 1, 1, 0, -2, -2);
    		GmPlay$1.xani_nui2.DrawAnima(offx+15+130/2-80/2,offy+15+40, "宠物头像框",0);
    		GmPlay$1.xani_head.DrawAnima_aa(offx+15+130/2-80/2,offy+15+40, GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 1), 0);
    		this.pm3f.DrawTextEx(offx+15+130/2,offy+15+20+80+35, "培养方向:"+this.s3_details[0][this.i3Type][this.i3PetPoint], 0xff000000, 20, 101, 1, 1, 0, -2, -2);
    		this.pm3f.DrawTextEx(offx+15+130/2,offy+15+20+80+35+25, "携带等级:"+GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 2), 0xff000000, 20, 101, 1, 1, 0, -2, -2);

    		offx+=15+130;
    		this.pm3f.DrawTextEx(offx+120,offy+5,"普通资质",0xff000000,25,101,1,1,0,-2,0);
    		DrawMode$1.ui3_Text1_4word(offx+10, offy+30,110,110,"体质资质",GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 3)+"~"+GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 24));
    		DrawMode$1.ui3_Text1_4word(offx+10, offy+30+38,110,110,"法力资质",GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 9)+"~"+GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 25));
    		DrawMode$1.ui3_Text1_4word(offx+10, offy+30+38*2,110,110,"力量资质",GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 10)+"~"+GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 22));
    		DrawMode$1.ui3_Text1_4word(offx+10, offy+30+38*3,110,110,"耐力资质",GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 11)+"~"+GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 23));
    		DrawMode$1.ui3_Text1_4word(offx+10, offy+30+38*4,110,110,"敏捷资质",GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 12)+"~"+GmPlay$1.de_pet.strValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 36));
    		DrawMode$1.ui3_Text1_4word(offx+10, offy+30+38*5,110,110,"成长",MyPets$1.swapcz(GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 13))+"~"+MyPets$1.swapcz(GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 21)));
    		
    		offx+=225;
    		this.pm3f.DrawTextEx(offx+110,offy+5,"变异资质",0xff000000,25,101,1,1,0,-2,0);
    		i=GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 3);
    		j=GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 24);
    		DrawMode$1.ui3_Text1_4word(offx+10, offy+30,110,110,"体质资质",(i+(j-i)/2)+"~"+(j+100*3));
    		i=GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 9);
    		j=GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 25);
    		DrawMode$1.ui3_Text1_4word(offx+10, offy+30+38*1,110,110,"法力资质",(i+(j-i)/2)+"~"+(j+100*2));
    		i=GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 10);
    		j=GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 22);
    		DrawMode$1.ui3_Text1_4word(offx+10, offy+30+38*2,110,110,"力量资质",(i+(j-i)/2)+"~"+(j+100));
    		i=GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 11);
    		j=GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 23);
    		DrawMode$1.ui3_Text1_4word(offx+10, offy+30+38*3,110,110,"耐力资质",(i+(j-i)/2)+"~"+(j+100));
    		i=GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 12);
    		j=GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 36);
    		DrawMode$1.ui3_Text1_4word(offx+10, offy+30+38*4,110,110,"敏捷资质",(i+(j-i)/2)+"~"+(j+100));
    		DrawMode$1.ui3_Text1_4word(offx+10, offy+30+38*5,110,110,"成长",MyPets$1.swapcz(GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 13))+"~"+MyPets$1.swapcz(GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 21)));

    		offx=this.iX+290;
    		offy+=240-2;
    		this.pm3f.DrawTextEx(offx+15, offy-5, "可能携带技能：", 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    		this.DrawPublicFrame(offx+15,offy+25,580,100,this.aa_f2,20,20);
    		k=0;
    		var i_showx=-1,i_showy=-1,i_showid=-1;
    		for(i=0;i<5;i++)
    		{
    			j=GmPlay$1.de_pet.intValue(this.s3_petids[this.i3Type][this.i3PetPoint], 0, 14+i);
    			if(j<=0)continue;
    			GmPlay$1.xani_nui2.DrawAnimaEx(offx+20+k*95+5,offy+35, "技能框", 0,101,1,1,0,0,0);
    			GmPlay$1.xani_nicon.DrawAnimaEx(offx+20+k*95+5,offy+35, GmPlay$1.de_skill.strValue(j, 0, 5), 0,101,1,1,0,0,0);
    			this.btn3_skills[i].Move(offx+20+k*95+5,offy+35, 90,90);
    //			if(this.i3ShowSkillDetail==k)
    			if(this.btn3_skills[i].bMouseDown)
    			{
    				i_showid=j;
    				i_showx=offx+20+k*95+5;
    				i_showy=offy+35;
    			}
    			k++;
    		}
    		this.i3SkillCount=k;
    		offy+=107;
    		this.pm3f.DrawTextEx(offx+15, offy+35, "加点推荐：", 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    		this.DrawPublicFrame(offx+15+130,offy+30,450,30,this.aa_f2,20,20);
    		this.pm3f.DrawTextEx(offx+15+130+450/2, offy+30+30/2, this.s3_details[1][this.i3Type][this.i3PetPoint], 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		offy+=42;
    		this.pm3f.DrawTextEx(offx+15, offy+35, "宠物获取途径：", 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    		this.DrawPublicFrame(offx+15+130,offy+30,450,30,this.aa_f2,20,20);
    		this.pm3f.DrawTextEx(offx+15+130+450/2, offy+30+30/2, this.s3_details[2][this.i3Type][this.i3PetPoint], 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    //		GmPlay.xani_nui5.DrawAnimaEx(offx+20,offy+20+80+20, "分隔线", 0, 101, 55.0f, 1, 0, 0, 0);
    		
    		this.pm3f.DrawTextEx(this.btn3_cpt.iX-120, this.btn3_cpt.iY+61/2, "选择类型", 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    		this.DrawPublicFrame(this.btn3_cpt.iX-5,this.btn3_cpt.iY-5,(109)*1+10,(61)*1+10,this.aa_f3,20,20);
    		this.btn3_cpt.sName=this.s3_type[this.i3Type];
    		this.btn3_cpt.Draw();
    		if(this.bChangePT)
    		{
    			this.DrawPublicFrame(this.btn3_cpt.iX-5,this.btn3_cpt.iY-5,(109+5)*2+5,(61+5)*2+5,this.aa_f3,20,20);
    			for(i=0;i<4;i++)this.btn3_pts[i].Draw();
    		}
    		if(i_showid>=0)
    		{
    			MyAttFrame.Skill_Detail(i_showid, i_showx, i_showy, -1);
    		}
    	}
    	
    	//////---------------------------4---宝石----------------------------------

    	 Init_4()
    	{
    		var i;
    		this.btn4_stone=new Array(5);//
    		for(i=0;i<5;i++)
    		{
    			this.btn4_stone[i]=new XButtonEx2$1(GmPlay$1.xani_nui5);
    			this.btn4_stone[i].InitButton("最大按钮");
    //			this.btn4_stone[i].sName=s4_type[i];
    		}
    		this.i4StonePoint=0;
    	}
    	 Draw_4()
    	{
    		var i,j,k,offx,offy;
    		this.iSRX=this.iX+50;
    		this.iSRY=this.iY+50;
    		this.iSRW=236;
    		this.iSRH=460;
    		this.pm3f.SetViewClip(this.iSRX,this.iSRY,this.iSRX+this.iSRW,this.iSRY+this.iSRH);
    		this.iSHeight=this.i4_ids.length*(87+5);
    		this.bScorlling=true;
    		for(i=0;i<this.i4_ids.length;i++)
    		{
    			offx=this.iX+50;
    			offy=this.iY+50+(87+5)*i-this.iSOffY;
    			this.btn4_stone[i].Move(offx,offy, 236, 87);
    			if(offy+94<this.iSRY || offy>this.iSRY+this.iSRH)continue;//cx
    			if(this.i4StonePoint==i)this.btn4_stone[i].bMouseDown=true;
    			this.btn4_stone[i].Draw();
    			GmPlay$1.xani_nui3.DrawAnima(offx+4,offy+3, "物品格子", 0);
    			GmPlay$1.xani_ngoods.DrawAnima_aa(offx+4,offy+3, GmPlay$1.de_goods.strValue(this.i4_ids[i], 0, 10), 0);
    			this.pm3f.DrawTextEx(offx+100,offy+87/2, GmPlay$1.de_goods.strValue(this.i4_ids[i], 0, 4), 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    		}
    		this.pm3f.NoClip();
    		this.DrawPublicFrame(this.iX+290,this.iY+45,610,460,this.aa_f1,20,20);
    		
    		var igid=this.i4_ids[this.i4StonePoint];
    		offx=this.iX+290;
    		offy=this.iY+45;
    		GmPlay$1.xani_nui3.DrawAnima(offx+15,offy+15, "物品格子", 0);
    		GmPlay$1.xani_ngoods.DrawAnima_aa(offx+15,offy+15, GmPlay$1.de_goods.strValue(igid, 0, 10), 0);
    		this.pm3f.DrawTextEx(offx+110,offy+15+80/2, GmPlay$1.de_goods.strValue(igid, 0, 4), 0xffffffff, 30, 101, 1, 1, 0, 0, -2);
    		GmPlay$1.xani_nui5.DrawAnimaEx(offx+15,offy+15+80+15, "分隔线", 0, 101, 55.0, 1, 0, 0, 0);
    		offy+=15+80+15+15;

    //		offy+=20+80+20+10;
    		FormatString.gi().FormatEx("#c000000"+this.s4_detail[this.i4StonePoint], 570, 25, 0, 0, 40);
    		FormatString.gi().Draw(offx+20, offy);

    		offy=this.iY+this.iH-150;
    //		this.pm3f.DrawTextEx(offx+15,offy-20-15, "【郢城】【铁匠】处强化装备，可提升装备属性", 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    		GmPlay$1.xani_nui5.DrawAnimaEx(offx+15,offy, "分隔线", 0, 101, 55.0, 1, 0, 0, 0);
    		offy+=10;
    		this.pm3f.DrawTextEx(offx+15,offy, "主要获取途径", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		offy+=20+10;
    		this.DrawPublicFrame(offx+15,offy,580,50,this.aa_f2,20,20);
    		this.pm3f.DrawTextEx(offx+15+580/2,offy+25, "封印叔叔任务，保卫西阳活动，交易", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    	}
    	
    	 DrawPublicFrame( x, y, w, h, aa, ww, hh)
    	{
    		
    		if(aa==this.aa_f1)
    		{
    			M3DFast$1.gi().FillRect_2D(x,y, x+w, y+h, 0xff68b5ad);
    			return;
    		}
    		if(aa==this.aa_f2)
    		{
    			M3DFast$1.gi().FillRect_2D(x,y, x+w, y+h, 0xff37c2c8);
    			return;
    		}
    		if(aa==this.aa_f3)
    		{
    			M3DFast$1.gi().FillRect_2D(x,y, x+w, y+h, 0xff000000);
    			return;
    		}
    		if(aa==this.aa_f4)
    		{
    			M3DFast$1.gi().FillRect_2D(x,y, x+w, y+h, 0xff9bced8);
    			return;
    		}
    		aa.iFrame=0;aa.DrawEx(-x, y, 101, 1, 1, 0, -2, -2);
    		aa.iFrame=1;aa.DrawEx(x+w/2-ww/2 ,y, 101, 1.0*(w-ww*2)/ww, 1, 0, -2, -2);
    		aa.iFrame=2;aa.DrawEx(x+w-ww, y, 101, 1, 1, 0, -2, -2);
    		
    		aa.iFrame=3;aa.DrawEx(x+w-ww ,y+h/2-hh/2, 101, 1.0, 1.0*(h-hh*2)/hh, 0, -2, -2);
    		aa.iFrame=4;aa.DrawEx(-(x+w-ww), y+h-hh, 101, 1, 1, 0, -2, -2);

    		aa.iFrame=5;aa.DrawEx(x+w/2-ww/2 ,y+h-hh, 101, 1.0*(w-ww*2)/ww, 1, 0, -2, -2);
    		aa.iFrame=6;aa.DrawEx(x, y+h-hh, 101, 1, 1, 0, -2, -2);
    		aa.iFrame=7;aa.DrawEx(-x ,y+h/2-hh/2, 101, 1.0, 1.0*(h-hh*2)/hh, 0, -2, -2);
    		
    		if(aa==this.aa_f1)
    		{
    			M3DFast$1.gi().FillRect_2D(x,y, x+w, y+h, 0xff68b5ad);
    //			var xx=x+ww-1;
    //			var yy=y+hh-1;
    //			var www=w-ww*2;
    //			var hhh=h-hh*2;
    //			M3DFast.gi().FillRect_2D(xx,yy, xx+www, yy+hhh, 0xff68b5ad);
    		}
    		else
    		{
    			aa.iFrame=8;aa.DrawEx(x+ww-1, y+hh-1, 101, 1.0*(w-ww*2+2)/ww, 1.0*(h-hh*2+2)/hh, 0, -1, -1);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i,j;
    		if(this.bScorlling && this.iSHeight>this.iSRH)
    		{
    			if(msg==1 && XDefine$1.bInRect(x, y, this.iSRX,this.iSRY,this.iSRW,this.iSRH))
    			{
    				if(this.iTypePoint==0)this.bLockScorll=true;
    				this.iLockX=x;this.iLockY=y;
    			}
    			if(msg==2 && this.iTypePoint==1 && Math.abs(this.iLockY-y)>10 && XDefine$1.bInRect(x, y, this.iSRX,this.iSRY,this.iSRW,this.iSRH))
    			{
    				this.bLockScorll=true;
    				for(i=0;i<this.s1_setids[this.i1LevPoint].length;i++)this.btn1_sets[i].SetNormal();
    			}
    			if(msg==2 && this.iTypePoint==2 && Math.abs(this.iLockY-y)>10 && XDefine$1.bInRect(x, y, this.iSRX,this.iSRY,this.iSRW,this.iSRH))
    			{
    				this.bLockScorll=true;
    				for(i=0;i<64;i++)this.btn2_jnlist[i].SetNormal();
    			}
    			if(msg==2 && this.iTypePoint==3 && Math.abs(this.iLockY-y)>10 && XDefine$1.bInRect(x, y, this.iSRX,this.iSRY,this.iSRW,this.iSRH))
    			{
    				this.bLockScorll=true;
    				for(i=0;i<36;i++)this.btn3_pets[i].SetNormal();
    			}
    			if(msg==2 && this.iTypePoint==4 && Math.abs(this.iLockY-y)>10 && XDefine$1.bInRect(x, y, this.iSRX,this.iSRY,this.iSRW,this.iSRH))
    			{
    				this.bLockScorll=true;
    				for(i=0;i<5;i++)this.btn4_stone[i].SetNormal();
    			}
    			if(this.bLockScorll)
    			{
    				if(msg==2)
    				{
    					j=this.iSHeight-this.iSRH;
    					this.iSOffY-=(y-this.iLockY);
    					this.iLockX=x;this.iLockY=y;
    					if(this.iSOffY<0)this.iSOffY=0;
    					if(this.iSOffY>j)this.iSOffY=j;
    				}
    				if(msg==3)this.bLockScorll=false;
    				return true;
    			}
    		}
    		switch(this.iTypePoint)
    		{
    		case 0:
    			for(i=0;i<5;i++)
    			{
    				if(this.btn0_levs[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn0_levs[i].bCheck())
    					{
    						this.i0LevPoint=i;
    						this.iSOffY=0;
    					}
    				}
    			}
    			break;
    		case 1:
    			if(this.bChangeLev)
    			{
    				for(i=0;i<9;i++)
    				{
    					if(this.btn1_levs[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn1_levs[i].bCheck())
    						{
    							this.btn1_levs[i].SetNormal();
    							this.bChangeLev=false;
    							this.i1LevPoint=i;
    							this.i1SetPoint=0;
    							this.iSOffY=0;
    						}
    					}
    				}
    				if(!XDefine$1.bInRect(x,y,this.btn1_clev.iX, this.btn1_clev.iY, (109+5)*3,(61+5)*3))this.bChangeLev=false;
    				return true;
    			}
    			if(XDefine$1.bInRect(x,y,this.iSRX,this.iSRY,this.iSRW,this.iSRH))
    			{
    				for(i=0;i<this.s1_setids[this.i1LevPoint].length;i++)
    				{
    					if(this.btn1_sets[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn1_sets[i].bCheck())this.i1SetPoint=i;
    					}
    				}
    			}
    			if(this.btn1_clev.ProcTouch(msg, x, y))
    			{
    				if(this.btn1_clev.bCheck())
    				{
    					this.btn1_clev.SetNormal();
    					this.bChangeLev=true;
    				}
    				return true;
    			}
    			break;
    		case 2://技能大全
    			for(i=0;i<5;i++)
    			{
    				if(this.btn2_page[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn2_page[i].bCheck())
    					{
    						this.i2PagePoint=i;
    						this.i2SkillPoint=0;
    						this.iSOffY=0;
    					}
    				}
    			}
    			switch(this.i2PagePoint)
    			{
    			case 0:
    				if(this.bChangeSchool)
    				{
    					for(i=0;i<9;i++)
    					{
    						if(this.btn2_schools[i].ProcTouch(msg, x, y))
    						{
    							if(this.btn2_schools[i].bCheck())
    							{
    								this.btn2_schools[i].SetNormal();
    								this.bChangeSchool=false;
    								this.i2SchoolPoint=i;
    								this.i2SkillPoint=0;
    								this.iSOffY=0;
    							}
    						}
    					}
    					if(!XDefine$1.bInRect(x,y,this.btn2_cschool.iX, this.btn2_cschool.iY, (109+5)*3,(61+5)*3))this.bChangeSchool=false;
    					return true;
    				}
    				if(XDefine$1.bInRect(x,y,this.iSRX,this.iSRY,this.iSRW,this.iSRH))
    				{
    					for(i=0;i<this.s2_skills1[this.i2SchoolPoint].length;i++)
    					{
    						if(this.btn2_jnlist[i].ProcTouch(msg, x, y))
    						{
    							if(this.btn2_jnlist[i].bCheck())
    							{
    								this.i2SkillPoint=i;
    							}
    						}
    					}
    				}
    				if(this.btn2_cschool.ProcTouch(msg, x, y))
    				{
    					if(this.btn2_cschool.bCheck())
    					{
    						this.btn2_cschool.SetNormal();
    						this.bChangeSchool=true;
    					}
    				}
    				break;
    			case 1://宠物技能
    				if(this.bChangeZb)
    				{
    					for(i=0;i<2;i++)
    					{
    						if(this.btn2_zbs[i].ProcTouch(msg, x, y))
    						{
    							if(this.btn2_zbs[i].bCheck())
    							{
    								this.btn2_zbs[i].SetNormal();
    								this.bChangeZb=false;
    								this.i2ZbPoint=i;
    								this.i2SkillPoint=0;
    								this.iSOffY=0;
    							}
    						}
    					}
    					if(!XDefine$1.bInRect(x,y,this.btn2_czb.iX, this.btn2_czb.iY, (109+5)*2,(61+5)*1))this.bChangeZb=false;
    					return true;
    				}
    				if(XDefine$1.bInRect(x,y,this.iSRX,this.iSRY,this.iSRW,this.iSRH))
    				{
    					for(i=0;i<this.s2_skills2[this.i2ZbPoint].length;i++)
    					{
    						if(this.btn2_jnlist[i].ProcTouch(msg, x, y))
    						{
    							if(this.btn2_jnlist[i].bCheck())
    							{
    								this.i2SkillPoint=i;
    							}
    						}
    					}
    				}
    				if(this.btn2_czb.ProcTouch(msg, x, y))
    				{
    					if(this.btn2_czb.bCheck())
    					{
    						this.btn2_czb.SetNormal();
    						this.bChangeZb=true;
    					}
    				}
    				break;
    			case 2:
    				if(XDefine$1.bInRect(x,y,this.iSRX,this.iSRY,this.iSRW,this.iSRH))
    				{
    					for(i=0;i<this.s2_skills3.length;i++)
    					{
    						if(this.btn2_jnlist[i].ProcTouch(msg, x, y))
    						{
    							if(this.btn2_jnlist[i].bCheck())
    							{
    								this.i2SkillPoint=i;
    							}
    						}
    					}
    				}
    				break;
    			case 3:
    				if(XDefine$1.bInRect(x,y,this.iSRX,this.iSRY,this.iSRW,this.iSRH))
    				{
    					for(i=0;i<this.s2_skills4.length;i++)
    					{
    						if(this.btn2_jnlist[i].ProcTouch(msg, x, y))
    						{
    							if(this.btn2_jnlist[i].bCheck())
    							{
    								this.i2SkillPoint=i;
    							}
    						}
    					}
    				}
    				break;
    			case 4://辅助技能
    				if(XDefine$1.bInRect(x,y,this.iSRX,this.iSRY,this.iSRW,this.iSRH))
    				{
    					for(i=0;i<this.s2_skills5.length;i++)
    					{
    						if(this.btn2_jnlist[i].ProcTouch(msg, x, y))
    						{
    							if(this.btn2_jnlist[i].bCheck())
    							{
    								this.i2SkillPoint=i;
    							}
    						}
    					}
    				}
    				break;
    			}
    			break;
    		case 3://宠物
    			this.i3ShowSkillDetail=-1;
    			
    			if(this.bChangePT)
    			{
    				for(i=0;i<4;i++)
    				{
    					if(this.btn3_pts[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn3_pts[i].bCheck())
    						{
    							this.btn3_pts[i].SetNormal();
    							this.bChangePT=false;
    							this.i3Type=i;
    							this.i3PetPoint=0;
    							this.iSOffY=0;
    						}
    					}
    				}
    				if(!XDefine$1.bInRect(x,y,this.btn3_cpt.iX, this.btn3_cpt.iY, (109+5)*2,(61+5)*2))this.bChangePT=false;
    				return true;
    			}
    			if(XDefine$1.bInRect(x,y,this.iSRX,this.iSRY,this.iSRW,this.iSRH))
    			{
    				for(i=0;i<this.s3_petids[this.i3Type].length;i++)
    				{
    					if(this.btn3_pets[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn3_pets[i].bCheck())
    						{
    							this.i3PetPoint=i;
    						}
    					}
    				}
    			}
    			for(i=0;i<this.i3SkillCount;i++)
    			{
    				if(this.btn3_skills[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn3_skills[i].bCheck())
    					{
    						this.i3ShowSkillDetail=i;
    					}
    				}
    			}
    			if(this.btn3_cpt.ProcTouch(msg, x, y))
    			{
    				if(this.btn3_cpt.bCheck())
    				{
    					this.btn3_cpt.SetNormal();
    					this.bChangePT=true;
    				}
    				return true;
    			}
    			break;
    		case 4://宝石
    			if(XDefine$1.bInRect(x,y,this.iSRX,this.iSRY,this.iSRW,this.iSRH))
    			{
    				for(i=0;i<this.i4_ids.length;i++)
    				{
    					if(this.btn4_stone[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn4_stone[i].bCheck())
    						{
    							this.i4StonePoint=i;
    						}
    					}
    				}
    			}
    			break;
    		}
    		for(i=0;i<5;i++)
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		for(i=0;i<5;i++)
    		{
    			if(this.btn_type[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_type[i].bMouseDown)
    				{
    					this.iTypePoint=i;
    					this.iSOffY=0;
    				}
    			}
    		}
    		return false;
    	}
    }
    MainHelp.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_MAINHELP);
    };

    class _DOWNFILE
    {//所需下载的文件列表
    	constructor()
    	{

    	}
    //	public String sName,sWriteTo;//包含相对路径的文件名
    //	public String sMD5;
    //	public int iProc,iFileSize;
    //	public byte iFlag;//0初始化，10下载中，20成功下载，30下载失败，40,50结束
    	InitData( name, md5, size)
    	{
    		this.sName=name;
    		this.sMD5=md5;
    		this.iFileSize=size;
    		this.iFlag=0;
    	}
    	bProcing()
    	{
    		if(iFlag==10)return true;
    		return false;
    	}
    	bSuccress()
    	{
    		if(iFlag==20)return true;
    		else return false;
    	}
    	bFailed()
    	{
    		if(iFlag==30)return true;
    		else return false;
    	}
    }

    /*
    //import com.umeng.analytics.MobclickAgent;
    //import com.tencent.mid.api.MidService;
    //import com.tencent.stat.StatService;

    import XDefine from "../../../config/XDefine"
    import PublicInterface from "../../../zero/Interface/PublicInterface"
    import MapManager from "../../../map/MapManager"
    import XInput from "../../../engine/control/XInput"
    import WavFast from "../../../engine/sound/WavFast"
    import GmPlay from "../../../engtst/mgm/GmPlay"
    import GmProtocol from "../../../engtst/mgm/GmProtocol"
    import XStat from "../../../engtst/mgm/XStat"
    //import android.app.Activity;
    //import android.content.Context;
    //import android.content.pm.ActivityInfo;
    //import android.os.Bundle;
    //import android.os.Handler;
    //import android.os.Message;
    //import android.text.Editable;
    //import android.text.InputFilter;
    //import android.text.InputType;
    //import android.text.TextWatcher;
    //import android.view.KeyEvent;
    //import android.view.View;
    //import android.view.ViewGroup;
    //import android.view.Window;
    //import android.view.WindowManager;
    //import android.view.ViewGroup.LayoutParams;
    //import android.view.inputmethod.EditorInfo;
    //import android.view.inputmethod.InputMethodManager;
    //import android.widget.EditText;
    //import android.widget.TextView;
    //android:screenOrientation="landscape"
    	private MyView _mView;

    	public EditText inputEditText;
    	
    	public XInput in_doing;
    	public boolean bEditing;
    	
    	public static main mMain;
     	
       
        @Override
        onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            
            mMain=this;
            PublicInterface.mMain=this;
    		this.requestWindowFeature(Window.FEATURE_NO_TITLE);
    		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
            getWindow().setFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON, WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
            
            
            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);//强制为横屏
    //        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);//竖屏
            
    		_mView = new MyView(this);
    		
    		 setContentView(_mView);
            
    		inputEditText= new EditText(this);
    		bEditing=false;

    //		inputEditText.setInputType(InputType.TYPE_CLASS_NUMBER);  
    //		inputEditText.setText("hello");
    //		inputEditText.setSingleLine(singleLine);
    		
    		LayoutParams vg=new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
    		main.mMain.addContentView(inputEditText, vg);
    		inputEditText.setVisibility(View.INVISIBLE);
    		inputEditText.setSingleLine(true);
    //		inputEditText.setText("hello");
    		inputEditText.setBackgroundColor(0);
    		inputEditText.setTextColor(0);
    		inputEditText.addTextChangedListener(watcher);
    		
    		inputEditText.setOnEditorActionListener(new EditText.OnEditorActionListener() {
    	        public boolean onEditorAction( v, int actionId, KeyEvent event)
    	        {
    	            if (actionId == EditorInfo.IME_ACTION_DONE)
    	            {
    	            	in_doing.sDetail=inputEditText.getText().toString();
    	            	in_doing.bDetailChanged=true;
    ////////	            	GmPlay.sop(inputEditText.getText().toString());
    	            	inputEditText.setVisibility(View.INVISIBLE);
    	            	in_doing.bFinished=true;
    	            }
    //	            else in_doing.sDetail=inputEditText.getText().toString();
    //	            GmPlay.sop("sdfsdfsdf");
    	            return false;
    	        }
    	    });
    		
    		PublicInterface.gi().Init();
    		
    		StatService.startStatService(this, "AF2JX7FD9B5E", com.tencent.stat.common.StatConstants.VERSION);
    		GmProtocol.sMid=MidService.getMid(this);

        }
        private TextWatcher watcher = new TextWatcher()
        {   
    	    beforeTextChanged( s, int start, int count, int after)
         	{  
    	        // TODO Auto-generated method stub        
    	    }  
            onTextChanged( s, int start, int before,  int count) 
            {  
      //          GmPlay.sop("text:"+s);
            	String ss=inputEditText.getText().toString();
            	if(in_doing.bNumber)
            	{
                	int i;
                	String s2;
                	if(ss.length>10)s2=ss.substring(0, 9);
                	else s2=ss;
                	if(s2.length>0)i=parseInt(s2);
                	else i=0;
                	if(i>in_doing.iMaxNumber)i=in_doing.iMaxNumber;
                	in_doing.sDetail=""+i;
            		if(in_doing.sDetail.length>0 && ss!=in_doing.sDetail)
            		{
            			inputEditText.setText(in_doing.sDetail);
            			inputEditText.setSelection(in_doing.sDetail.length);
            		}
     //      		GmPlay.sop(""+in_doing.iMaxNumber);
            	}
            	else in_doing.sDetail=ss;
            	in_doing.bDetailChanged=true;
            }
    		afterTextChanged( s) {
    			// TODO Auto-generated method stub
    		}
        };
        protected void onResume()
        {
        	super.onResume();
        	MobclickAgent.onResume(this);
        	
        	WavFast.bPause=false;
       // 	StatService.onResume(this);
        }
        protected void onPause()
        {
        	super.onPause();
        	MobclickAgent.onPause(this);
        	
        	WavFast.bPause=true;
        	PublicInterface.gi().Pause();
     //   	StatService.onPause(this);
        }
        protected void onDestroy()
        {
    		super.onDestroy();
    		System.out.println("________onDestroy_____________________");
    //		android.os.Process.killProcess(android.os.Process.myPid());
    		PublicInterface.gi().Exit();
    	}
        doit()
        {
    //		main.mMain.inputEditText.setFocusable(true);
    //		main.mMain.inputEditText.setFocusableInTouchMode(true);
        	GmPlay.sop("doit:"+in_doing.sDetail);
        	inputEditText.setText(in_doing.sDetail);
        	inputEditText.setFilters(new InputFilter[]{new InputFilter.LengthFilter(in_doing.iLength)});
        	if(in_doing.bNumber)
        	{
        		inputEditText.setInputType(InputType.TYPE_CLASS_NUMBER);
        	}
        	else
        	{
        		inputEditText.setInputType(InputType.TYPE_CLASS_TEXT);
        	}
    //    	inputEditText.layout(500, 500, 600, 600);

        	inputEditText.setVisibility(View.VISIBLE);
    //    	GmPlay.sop("in_doing.sDetail.length"+in_doing.sDetail.length);
    //    	if(in_doing.sDetail.length>0)
        		inputEditText.setSelection(in_doing.sDetail.length);
        	inputEditText.setFocusable(true);
        	
    		InputMethodManager m=(InputMethodManager)main.mMain.getSystemService(Context.INPUT_METHOD_SERVICE);
    		m.showSoftInput(inputEditText, InputMethodManager.SHOW_FORCED);
    		bEditing=true;
        }
    	public Handler mHandler = new Handler() 
    	{
    		@Override
    		handle( msg)
    		{
    			super.handleMessage(msg);
    			switch (msg.what)
    			{
    			case 1:
    				in_doing=(XInput)msg.obj;
    				doit();
    				break;
    			case 3:
    				if(in_doing!=null)
    				{
    					in_doing.sDetail=inputEditText.getText().toString();
    					in_doing.bDetailChanged=true;
    					in_doing.bFinished=true;
    				}
    				InputMethodManager m=(InputMethodManager)main.mMain.getSystemService(Context.INPUT_METHOD_SERVICE);
    //				m.hideSoftInputFromWindow(inputEditText.getWindowToken(),InputMethodManager.HIDE_NOT_ALWAYS);
    				
    //				m.hideSoftInputFromWindow(getCurrentFocus().getApplicationWindowToken(),0);
    				m.hideSoftInputFromWindow(inputEditText.getWindowToken(),0);
    //				m.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS); // 显示软键盘,控件ID可以是 EditText,TextView ((InputMethodManager)getSystemService(INPUT_METHOD_SERVICE)).showSoftInput(控件ID, 0);

    				inputEditText.setVisibility(View.INVISIBLE);
    				break;
    			case PublicInterface.MESSAGE_LOGIN:
    				PublicInterface.gi()._Login();
    				break;
    			case PublicInterface.MESSAGE_EXIT:
    				PublicInterface.gi()._Exit();
    				break;
    			}
    		}
    	};
    	
    	@Override
    	public boolean onKeyDown( keyCode, KeyEvent event) {
    		engtst.mgm.GmPlay.sop("onKeyDown.."+keyCode);
    		switch (keyCode) {
    		case KeyEvent.KEYCODE_BACK:
    			if(MapManager.gi().iMapChangeing!=0)
    			{
    				MapManager.gi().iMapChangeing=0;
    				return true;
    			}
    			else if(XStat.gi().iXStat==XStat.GS_EXITCONFIRM || XStat.gi().iXStat==XStat.GS_KICKOUT)
    			{
    				return true;
    			}
    			else if(XStat.gi().iXStat==XStat.GS_GAMEING)
    			{
    				PublicInterface.gi().Exit();
    				//XStat.gi().PushStat(XStat.GS_EXITCONFIRM);
    				return true;
    			}
    			else
    			{
    				if(XStat.gi().LastStatType(1)==0)
    				{
    					PublicInterface.gi().Exit();
    				}
    				else XStat.gi().PopStat(1);
    				return true;
    //				XStat.gi().PopStat(1);
    //				if(XStat.gi().iXStat!=0)return true;
    //				else PublicInterface.gi().Exit();
    			}
    //			GmPlay.sop("XStat.gi().iXStat="+XStat.gi().iXStat);
    //			if(XStat.gi().iXStat!=0)return true;
    //			break;
    		case KeyEvent.KEYCODE_HOME:
    			break;
    		}
    		return super.onKeyDown(keyCode, event);
    	}
    }*/

    class _OneFinger
    {
        constructor()
        {
            this.iFingerId=_OneFinger.FREEFINGER;
            this.m_TouchStack=new Array(_OneFinger.MAXTOUCHSTACK);
            for(var i=0;i<_OneFinger.MAXTOUCHSTACK;i++)
            {
                this.m_TouchStack[i]=new Object();
            }
            this.iStackPoint=-1;
            this.iProcPoint=-1;
        }
        Push(type,x,y)
        {
            // XDefine.sop("type="+type);
            this.iStackPoint++;
            var i=this.iStackPoint%_OneFinger.MAXTOUCHSTACK;
            this.m_TouchStack[i].type=type;
            this.m_TouchStack[i].x=x;
            this.m_TouchStack[i].y=y;
        }
        Pop()
        {
            if(this.iProcPoint>=this.iStackPoint)return null;
            this.iProcPoint++;
            var i=this.iProcPoint%_OneFinger.MAXTOUCHSTACK;
    //this.iProcPoint>=this.iStackPoint && 
            if(this.m_TouchStack[i].type==XTouchManager.TYPE_UP)this.iFingerId=_OneFinger.FREEFINGER;
            return this.m_TouchStack[i];
        }
        TouchDown(fid,x,y)
        {
            this.iFingerId=fid;
            this.Push(XTouchManager.TYPE_DOWN,x,y);
        }
        TouchMove(x,y)
        {
            this.Push(XTouchManager.TYPE_MOVE,x,y);
        }
        TouchUp(x,y)
        {
            this.Push(XTouchManager.TYPE_UP,x,y);
        }
    }
    _OneFinger.FREEFINGER=-1;
    _OneFinger.MAXTOUCHSTACK=16;


    class XTouchManager {
        constructor()
        {

        }

        Init()
        {
            this.fingers=new Array(XTouchManager.MAXFINGERCOUNT);
            for(var i=0;i<XTouchManager.MAXFINGERCOUNT;i++)
            {
                this.fingers[i]=new _OneFinger();
            }
        }
        FindSinger(fid)
        {
            for(var i=0;i<XTouchManager.MAXFINGERCOUNT;i++)
            {
                if(this.fingers[i].iFingerId==fid)
                {
                    return this.fingers[i];
                }
            }
            return null;
        }
        _test()
        {
            var j=0;
            for(var i=0;i<XTouchManager.MAXFINGERCOUNT;i++)
            {
                if(this.fingers[i].iFingerId==_OneFinger.FREEFINGER)j++;
            }
            return j+","+this.fingers[0].iProcPoint+","+this.fingers[0].iStackPoint;
        }
        TouchDown(fid,x,y)
        {
            var pfinger=this.FindSinger(_OneFinger.FREEFINGER);
            if(pfinger!=null)pfinger.TouchDown(fid,x,y);
            // else XDefine.sop("error");
            XTouchManager.TOUCH_STAT=1;
        }
        TouchMove(fid,x,y)
        {
            var pfinger=this.FindSinger(fid);
            if(pfinger!=null)pfinger.TouchMove(x,y);
            if(XTouchManager.TOUCH_STAT!=3)XTouchManager.TOUCH_STAT=2;
        }
        TouchUp(fid,x,y)
        {
            var pfinger=this.FindSinger(fid);
            if(pfinger!=null)pfinger.TouchUp(x,y);
            // else XDefine.sop("error2");
            XTouchManager.TOUCH_STAT=3;
        }
        PopTouch()
        {
            var i;
            for(i=0;i<XTouchManager.MAXFINGERCOUNT;i++)
            {
                var ret=this.fingers[i].Pop();
                if(ret!=null)return ret;
            }
            return null;
        }
    }

    XTouchManager.TOUCH_STAT=3;
    XTouchManager.MAXFINGERCOUNT=8;
    XTouchManager.TYPE_DOWN=1;
    XTouchManager.TYPE_MOVE=2;
    XTouchManager.TYPE_UP=3;
    XTouchManager.TOUCH_DOWN=1;
    XTouchManager.TOUCH_MOVE=2;
    XTouchManager.TOUCH_UP=3;
    XTouchManager.ptouch=null;
    XTouchManager.gi=function()
    {
        if(XTouchManager.ptouch==null)XTouchManager.ptouch=new XTouchManager();
        return XTouchManager.ptouch;
    };

    /*import XStat from "../engine/XStat"

    import M2DFast from "../engine/graphic/M2DFast"
    import XDefine from "./XDefine"
    import GmConfig from "../game/GmConfig";
    import GmRes from "../game/GmRes";

    import XNetFast from "./XNetFast"
    import PackageTools from "./PackageTools"
    import PublicInterface from "./interface/PublicInterface"

    import XWavFast from "./XWavFast"
    import GmSet from "../game/play/GmSet";
    import GmSave from "../game/play/GmSave";*/

    class XOLE {
        constructor()
        {
            this.startTime  = Date.now();
            this.frameCount = 0;
            /*
            // GmEffect.gi();
            Laya.SoundManager.autoReleaseSound=false;
            this.pntf=XNetFast.gi();
            this.ppi=PublicInterface.gi();
            // var pls=PackageTools.gi();
            // pls.iOffset=0;
            // pls.InsertInt(123);
            // pls.InsertString("hello");
            // this.pntf.Send(2000,pls.databuf,pls.iOffset);
            XDefine.sop("start");

            this.iErrorDelay=0;
            this.sErrorDetail="";
            GmRes.rid_loading=M2DFast.gi().LoadImage("res/pic/logo.png",true);

            GmSet.gi().Init();
            // for(var i=0;i<30;i++)XNumber.gi(i);
            */
        }
        SetError(s)
        {
            this.iErrorDelay=5*30;
            this.sErrorDetail=s;
        }
        Init()
        {
            XInput.make_handle();
            Laya.timer.frameLoop(3, this, this.OnTimer);
            Laya.stage.on(Laya.Event.MOUSE_DOWN, this, _mouse_down_func);
            Laya.stage.on(Laya.Event.MOUSE_MOVE, this, _mouse_move_func);
            Laya.stage.on(Laya.Event.MOUSE_UP, this, _mouse_up_func);

            Laya.stage.on(Laya.Event.FOCUS, this, _onFocus);//焦点回来
            Laya.stage.on(Laya.Event.BLUR, this, _onBlur);

    //        XStat.gi().PushStat(XStat.STAT_LOADING);
            XTouchManager.gi().Init();
        }

        
        OnTimer()
        {
            // this.frameCount++;
            // const currentTime = Date.now();
            // const elapsedTime = currentTime - this.startTime;
            // if (elapsedTime >= 1000) {
            //   const fps = this.frameCount / (elapsedTime / 1000);
            //   console.log(`帧率: ${fps.toFixed(2)}`);
            //   this.frameCount = 0;
            //   this.startTime = currentTime;
            // }

            XInput.HandleLogic2();
            // if(XInput.lock_x!=null)XInput.lock_x.bShowing=false;
            PublicInterface.gi().Logic();
            XOLE.iDelay++;
            // if(!GmMap.bWaiting && GmMap.iMapStat<16 && XTouchManager.TOUCH_STAT==3 && !GmMap.bPaused)
            // {//减速
            //     if(XOLE.iSlowDelay<20)XOLE.iSlowDelay++;
            //     XOLE.iSlowDelay=0;
            // }
            // else if(XOLE.iSlowDelay>15)XOLE.iSlowDelay--;
            // else XOLE.iSlowDelay=0;

            // if(XOLE.iSlowDelay>=20)XOLE.iSlowRate=10;
            // else XOLE.iSlowRate=1;
            
    //        XDefine.InitSecond();

            GmConfig$1.SYSW=Laya.stage.width;
            GmConfig$1.SYSH=Laya.stage.height;
            GmConfig$1.OX=(GmConfig$1.SYSW-1280)/2;
            SystemOperate.BASEW=Laya.stage.width;
            SystemOperate.BASEH=Laya.stage.height;
            SystemOperate.SetScreenMode(6);
            //GmConfig.SYSW=width;
            //GmConfig.SYSH=height;

            //SystemOperate.SetScreenMode(6);

            M3DFast$1.gi().Clear();

            GmPlay$1.gi().GmTimer();
            PublicInterface.gi().DrawBoundRect();

            // if(XInput.input_handle!=null)
            // {
            //     if(XInput.lock_x!=null)// && XInput.lock_x.bShowing)
            //     {
            //         XInput.lock_x.sDetail=XInput.input_handle.text;
            //         // XInput.input_handle.pos(XInput.lock_x.iX,XInput.lock_x.iY);
            //         // XInput.input_handle.width=XInput.lock_x.iW;
            //         // XInput.input_handle.height=XInput.lock_x.iH;

            //         // XInput.input_handle.pos(0,0);
            //         // XInput.input_handle.width=Laya.stage.width;
            //         // XInput.input_handle.height=Laya.stage.height;
            //     }
            //     else
            //     {
            //         XInput.input_handle.pos(-1,-1);
            //         XInput.input_handle.width=1;
            //         XInput.input_handle.height=1;
            //     }
            // }
            XInput.HandleLogic();
            return;

            XStat.gi().Draw();

            while(true)
            {
                var ret=XTouchManager.gi().PopTouch();
                if(ret==null)break;
                XStat.gi().ProcTouch(ret.type,ret.x,ret.y);
            }
            this.pntf.Logic();
            this.ppi.Logic();

            // GmSave.gi().LoadLogic();
            GmSave.gi().SaveLogic();
            // GmSave.gi().SaveLogic();

            if(this.iErrorDelay>0)
            {
                this.iErrorDelay--;
                M2DFast.gi().DrawTextEx(320+2,400+2,this.sErrorDetail,0xffffff,45,100,1,1,0,-2,-2);
                M2DFast.gi().DrawTextEx(320,400,this.sErrorDetail,0xff0000,45,100,1,1,0,-2,-2);
            }

            // if(XOLE.iSlowDelay>15)
            // {
            //     M2DFast.pm2f.FillRect(0,0,Laya.stage.width,Laya.stage.height,0,1,(XOLE.iSlowDelay-15)*6);
            //     if(XOLE.iSlowDelay>=20)
            //     {
            //         // GmMap.gi().DrawKeepItem2();
            //     }
            // }

            // Laya.SoundManager.autoStopMusic=false;
            // M2DFast.gi().DrawTextEx(100,100,"背景音乐（不包括音效）是否静音"+Laya.SoundManager.musicMuted,0xffffff,30,100,1,1,0,-1,-1);
            // M2DFast.gi().DrawTextEx(100,100+40,"失去焦点后是否自动停止背景音乐"+Laya.SoundManager.autoStopMusic,0xffffff,30,100,1,1,0,-1,-1);
            // M2DFast.gi().DrawTextEx(100,100+40*2,"背景音乐和所有音效是否静音"+Laya.SoundManager.muted,0xffffff,30,100,1,1,0,-1,-1);
            // M2DFast.gi().DrawTextEx(100,100+40*3,"所有音效（不包括背景音乐）是否静音"+Laya.SoundManager.soundMuted,0xffffff,30,100,1,1,0,-1,-1);
            // M2DFast.gi().DrawTextEx(100,100+40*4,"音效音量"+Laya.SoundManager.soundVolume,0xffffff,30,100,1,1,0,-1,-1);
    // XDefine.showdebug();


            // M2DFast.gi().DrawTextEx(200,700,this.iCheckCount+",,"+XTouchManager.gi()._test(),0xffffff,50,101,1,1,0,-2,-2);
            // M2DFast.gi().DrawTextEx(720,1280,"+",0xffffff,50,101,1,1,0,-2,-2);

            // M2DFast.gi().DrawRect(0,0,640,1136,0xff0000)
            // M2DFast.gi().DrawCircle(100,100,100,0xff0000);
            // M2DFast.gi().DrawTextEx(100,100,Laya.Browser.clientWidth+","+Laya.Browser.clientHeight,0xffffff,50,101,1,1,0,-2,-2);

            // M2DFast.gi().DrawTextEx(100,200,Laya.stage.width+","+Laya.stage.height,0xffffff,50,101,1,1,0,-2,-2);

            

            // M2DFast.gi().DrawTextEx(0,0,"abc",0xffffff,30,101,1,1,this.iDelay++,-2,-2);
            // M2DFast.gi().DrawTextEx(0,0,"def",0xffffff,30,101,1,1,this.iDelay,-2,-2);
            // M2DFast.gi().DrawTextEx(0,0,"ghi",0xffffff,30,101,1,1,this.iDelay,-3,-3);
            
        }
        get_file_string(fn)
        {
            var pls=this.get_file_data(fn);
            return pls.byteToString(pls.databuf,pls.iLength);
        }
        get_file_data(fn)
        {
            for(var i=0;i<XOLE.data_all.length;i+=2)
            {
                if(fn==XOLE.data_all[i])
                {
                    var pls=PackageTools.gi();
                    pls.GetData2(XOLE.data_all[i+1]);
                    pls.Decode_base64();
                    return pls;
                }
            }
            return null;
        }
    }
    XOLE._float=function(distance,offset)
    {
        var i=(XOLE.iDelay+offset)%(distance*2);
        if(i<distance)return i;
        else return distance*2-i;
    };
    XOLE.data_all=null;

    XOLE.iSlowRate=1;
    XOLE.iSlowDelay=0;
    XOLE.iDelay=0;
    XOLE.pole=null;
    XOLE.gi=function()
    {
        if(XOLE.pole==null)XOLE.pole=new XOLE();
        return XOLE.pole;
    };

    function _mouse_down_func()
    {
        TouchManager.gi().touch_down(0,Laya.stage.mouseX,Laya.stage.mouseY);
    //    XTouchManager.gi().TouchDown(0,Laya.stage.mouseX,Laya.stage.mouseY);
    }
    function _mouse_move_func()
    {
        TouchManager.gi().touch_move(Laya.stage.mouseX,Laya.stage.mouseY);
    //    XTouchManager.gi().TouchMove(0,Laya.stage.mouseX,Laya.stage.mouseY);
    }
    function _mouse_up_func()
    {
        TouchManager.gi().touch_up(0,Laya.stage.mouseX,Laya.stage.mouseY);
    //    XTouchManager.gi().TouchUp(0,Laya.stage.mouseX,Laya.stage.mouseY);
    };

    function _onFocus()
    {
        //XOLE.gi().SetError("_onFocus");
    };

    function _onBlur()
    {
        //XOLE.gi().SetError("_onBlur");
    };

    class _CHECKFILE
    {
    //	public String sName,sMd5;
    constructor()
    {

    }
    }

    class LeadPage  extends BaseClass {

    	GetFreeDownload()
    	{
    		var i;
    		for(i=0;i<this.MAXTHREAD;i++)
    		{
    			if(this.downlist[i].bwaiting())return this.downlist[i];
    		}
    		return null;
    	}
    	
    	constructor()
    	{
    		super();
    		this.iStat=0;
    		LeadPage.sLeadAddr="http://"+GameData$1.sDSURL+":9999/";
    		LeadPage.sResAddr="http://"+GameData$1.sDSURL+":7999/7gol_test/";
    		LeadPage.sLeadAddr=XDefine$1.BASE_URL;
    		this.pls=new PackageTools(256*1024);
    		LeadPage.sResSeverList=new Array(16);




    		this.MAXTHREAD=8;
    		this.background=-1;
    		
    		this.iLocalApkVersion=GameData$1.APKVersion;
    		//if(this.pls.InitDataFromSD(GameData.sSDTo+"currentversion.dat"))this.iLocalResVersion=this.pls.GetNextInt();//读取本地资源版本号
    		//else 
    		this.iLocalResVersion=0;
    		
    		this.iNewApkVersion=-1;
    		this.iNewResVersion=-1;
    		/*
    		this.down_lead=new _DOWNFILE();
    		this.down_lead.InitData("lead.dat", null, 0);
    		this.down_resfrom=new _DOWNFILE();
    		this.down_resfrom.InitData("resfrom.dat", null, 0);
    		this.down_apkfrom=new _DOWNFILE();
    		this.down_apkfrom.InitData("apkfrom.dat", null, 0);
    		
    		this.down_apkaddr=new _DOWNFILE();
    		this.down_apkaddr.InitData("apkaddr.dat", null, 0);
    		
    		this.down_apk=new _DOWNFILE();
    //		this.down_apk.InitData("apkaddr.dat", null, 0);
    		
    		this.down_detail=new _DOWNFILE();
    		this.down_detail.InitData("updatedetail.dat", null, 0);
    		*/
    		var i;
    		this.downlist=new Array(this.MAXTHREAD);//
    		for(i=0;i<this.MAXTHREAD;i++)
    		{
    			this.downlist[i]=new _DOWNLOAD();
    		}
    		
    		this.bCheckFinish=false;
    		///this.thread_check=new Thread(this);
    		///this.thread_check.start();
    		
    	
    		///	LeadPage.digest = MessageDigest.getInstance("MD5");

    		
    		this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_local);
    		this.btn_ok.InitButton("通用按钮1");
    		this.btn_ok.sName="确  定";
    		this.btn_ok.iNameSize=SystemOperate.WordSize(30);
    		
    		this.btn_cancel=new XButtonEx2$1(GmPlay$1.xani_local);
    		this.btn_cancel.InitButton("通用按钮1");
    		this.btn_cancel.sName="取  消";
    		this.btn_cancel.iNameSize=SystemOperate.WordSize(30);
    		
    		

    		this.sDetail="";
    		this.iProcTo=-1;
    		this.iRetry=5;
    		this.sError="";
    		this.MAXBUF=1024*64;
    		this.iThreadStat=0;
    		this.iCheckProc=0;
    	}
    	dpics( type)
    	{
    		if(this.background<0)
    		{
    			var i= XDefine$1.grnd(0,5);
    			this.background=M3DFast$1.gi().LoadFromFile("localres/logo/kj"+i+".xxx",-1,true);
    		}
    		
    		M3DFast$1.gi().DrawImageEx(0, 0, 0, this.background, 0, 0, 1280, 720, 101, SystemOperate.BASEW/1280, 1, 0, 0, 0);
    	}
    	
    	// LoadFinished(path,p,stat,data)
    	// {
    	// 	if(data==null)
    	// 	{
    	// 		XDefine.sop("Load Fail , Retry ..."+path);
    	// 		Ld(path,Laya.Handler.create(p, p.LoadFinished,[path,p,stat]),null,stat==20?Laya.Loader.BUFFER:Laya.Loader.TEXT);
    	// 		return;
    	// 	}
    	// 	switch(stat)
    	// 	{
    	// 	case 20:

    	// 		break;
    	// 	case 22:
    	// 		this.bLoadFinished22=true;
    	// 		XOLE.data_all=data.split("*");
    	// 		break;
    	// 	}
    	// }
    	LoadProc(pt)
    	{
    		console.log("proc to : "+pt);
    	}
    	LoadLeadData(path,data)
    	{
    		if(data==null)
    		{
    			Laya.loader.load(path,Laya.Handler.create(this, this.LoadLeadData,[path]),null,Laya.Loader.BUFFER);
    			return;
    		}
    		this.bLoadFinished20=true;
    		this.pls.GetData3(data);
    		this.iNewApkVersion=this.pls.GetNextInt();
    		this.iNewResVersion=this.pls.GetNextInt();
    		var i=this.pls.GetNextInt();
    		if(GameVersion$1.QUDAO==0)this.iNewResVersion=i;
    		GmPlay$1.sLoginIp=this.pls.GetNextString();//login ip;
    		GmPlay$1.iLoginPort=this.pls.GetNextInt();//login port
    		XDefine$1.sop(GmPlay$1.sLoginIp+"==="+GmPlay$1.iLoginPort);
    	}
    	Draw()
    	{
    		var i,j,k;
    		
    		this.dpics(0);//画背景
    		M3DFast$1.gi().CheckImageLoaded();
    //		if(GameData.bShowAbout)
    //		{
    //			M3DFast.gi().DrawTextEx(12,18, "当前版本：v1.9.15", 0xffffffff, 28, 101, 1, 1, 0, 0, 0);//当前版本号：1.客户端版本.资源版本
    /////			if(this.iNewApkVersion>=0)M3DFast.gi().DrawTextEx(12,58, "最新版本：1."+this.iNewApkVersion+"."+this.iNewResVersion, 0xffffffff, 28, 101, 1, 1, 0, 0, 0);//当前版本号			
    //		}
    //		else
    //		{
    		M3DFast$1.gi().DrawTextEx(12,18, "当前版本：1."+this.iLocalApkVersion+"."+this.iLocalResVersion, 0xffffffff, 28, 101, 1, 1, 0, 0, 0);//当前版本号：1.客户端版本.资源版本
    		if(this.iNewApkVersion>=0)M3DFast$1.gi().DrawTextEx(12,58, "最新版本：1."+this.iNewApkVersion+"."+this.iNewResVersion, 0xffffffff, 28, 101, 1, 1, 0, 0, 0);//当前版本号
    //		}
    //		if(GameVersion.QUDAO==0)M3DFast.gi().DrawTextEx(600,18, "调试信息："+this.iStat, 0xffffffff, 28, 101, 1, 1, 0, 0, 0);

    		M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW-168,0, "健康游戏忠告", 0xffffffff, 25, 101, 1, 1, 0, -2, 0);
    		M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW,30, "抵制不良游戏，拒绝盗版游戏。", 0xffffffff, 25, 101, 1, 1, 0, -3, 0);
    		M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW,30*2, "注意自我保护，谨防受骗上当。", 0xffffffff, 25, 101, 1, 1, 0, -3, 0);
    		M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW,30*3, "适度游戏益脑，沉迷游戏伤身。", 0xffffffff, 25, 101, 1, 1, 0, -3, 0);
    		M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW,30*4, "合理安排时间，享受健康生活。", 0xffffffff, 25, 101, 1, 1, 0, -3, 0);

    		if(!LeadPage.bInited)
    		{
    			M3DFast$1.gi().DrawTextEx(5,GmConfig$1.SCRH-5, "正在初始化", 0xffffffff, 28, 101, 1, 1, 0, 0, -3);
    			LeadPage.bInited=true;//cx_flag等待渠道登陆成功后设置为true
    			return;
    		}
    		switch(this.iStat)
    		{
    		case 0://判断是否首次登陆,并且有资源包
    			this.iStat=20;//已有目录，直接检测资源版本
    			this.sDetail="正在打开";
    			break;
    		case 20://获取本地资源版本号，下载版本校验文件
    			XDefine$1.sop(LeadPage.sLeadAddr+"lead.dat");
    			this.LoadLeadData(LeadPage.sLeadAddr+"lead.dat");
    			this.bLoadFinished20=false;
    			this.iStat=21;
    			this.sDetail="正在获取版本信息，请保持网络畅通";
    			break;
    		case 21://获取版本校验文件进行对比
    			if(this.bLoadFinished20)
    			{//版本文件下载完，打开校验
    				this.iStat=102;
    				// XDefine.sop(LeadPage.sLeadAddr+"res/data.b64");
    				// Ld(LeadPage.sLeadAddr+"res/data.b64",Laya.Handler.create(this, this.LoadFinished,[LeadPage.sLeadAddr+"res/data.b64",this,22]),Laya.Handler.create(this, this.LoadProc),Laya.Loader.TEXT);
    				// this.bLoadFinished22=false;
    			}

    			//if(this.down_lead.iFileSize>0)this.iProcTo=this.down_lead.iProc*100/this.down_lead.iFileSize;
    			this.sDetail="正在对比版本信息，请保持网络畅通";
    			break;
    		case 22://下载数据包
    			if(this.bLoadFinished22)
    			{
    				this.iStat=102;
    			}
    			this.sDetail="载入中";
    			break;
    		// case 30://获取资源下载地址
    		// 	if(this.pls.bLoadSuccess)
    		// 	{//版本文件下载完，打开校验
    		// 			LeadPage.iResSeverCount=this.pls.GetNextInt();
    		// 			for(i=0;i<LeadPage.iResSeverCount;i++)
    		// 			{
    		// 				LeadPage.sResSeverList[i]=this.pls.GetNextString();//资源路径
    		// 				if(GameVersion.QUDAO==0)
    		// 				{
    		// 					LeadPage.sResSeverList[i]="http://"+GameData.sDSURL+":7999/7gol_test/";
    		// 				}
    		// 			}
    		// 			LeadPage.iResSeverPoint=0;
    		// 			this.iStat=31;//开始检测资源
    		// 	}
    		// 	//if(this.down_resfrom.iFileSize>0)this.iProcTo=this.down_resfrom.iProc*100/this.down_resfrom.iFileSize;
    		// 	this.sDetail="正在获取资源地址，请保持网络畅通";
    		// 	break;
    		// case 31://下载资源检查对比文件detail.dat
    		// 	this.pls.InitDataFromURL(LeadPage.sResSeverList[LeadPage.iResSeverPoint]+"updatedetail.dat",this.LoadFinished);
    		// 	this.iStat=32;
    		// 	this.sDetail="正在获取资源列表，请保持网络畅通";
    		// 	break;
    		// case 32://等待detail下载完
    		// 	if(this.pls.bLoadSuccess)
    		// 	{//版本文件下载完，打开校验
    		// 			this.pls.GetNextInt();//资源版本
    		// 			this.pls.GetNextInt();//apk版本
    		// 			j=this.pls.GetNextInt();//目录数
    		// 			this.iNewFileCount=this.pls.GetNextInt();//文件数
    		// 			if(this.iNewFileCount<500)
    		// 			{
    		// 				this.iStat=200;
    		// 				this.sError="E8";
    		// 				break;
    		// 			}
    					
    		// 			for(i=0;i<j;i++)
    		// 			{//目录列表
    		// 				this.pls.GetNextString();
    		// 			}
    					
    		// 			//新文件列表
    		// 			this.newfiles=new Array(this.iNewFileCount);//
    		// 			for(i=0;i<this.iNewFileCount;i++)
    		// 			{
    		// 				this.newfiles[i]=new Object();
    		// 				this.newfiles[i].sName=this.pls.GetNextString();
    		// 				this.newfiles[i].sMD5=this.pls.GetNextString();
    		// 				this.newfiles[i].iFileSize=this.pls.GetNextInt();
    		// 				//if(i<500)XDefine.sop(i+","+this.newfiles[i].sName+","+this.newfiles[i].sMD5+","+this.newfiles[i].iFileSize);
    		// 			}
    		// 			this.iStat=103;
    		// 	}
    		// 	//if(this.down_detail.iFileSize>0)this.iProcTo=this.down_detail.iProc*100/this.down_detail.iFileSize;
    		// 	this.sDetail="正在获取资源列表，请保持网络畅通";
    		// 	break;
    		case 102:
    			if(GmPlay$1.gi().InitAnimaAndData())this.iStat=103;
    			this.sDetail="正在载入数据，请保持网络畅通";
    			break;
    		case 103://正在连接服务器
    			if(PublicInterface.QUDAO!=0)
    			{
    				if(PublicInterface.gi().iStat==10)
    				{
    					
    				}
    			}
    			else if(GmPlay$1.xntf.bConnected)
    			{
    				XStat$1.gi().PopStat(1);
    				XStat$1.gi().PushStat(XStat$1.GS_FASTLOGIN);
    				return;
    			}
    			this.sDetail="正在登陆";
    			break;
    		case 200://显示错误信息
    			DrawMode$1.local_titleframe(GmConfig$1.SCRW/2-200, GmConfig$1.SCRH/2-150, 400, 300,true);
    			M3DFast$1.gi().DrawText_2(GmConfig$1.SCRW/2, GmConfig$1.SCRH/2-150+SystemOperate.WordSize(40), "提  示", 0xfffaffcc, SystemOperate.WordSize(50), 101, 1, 1, 0, -2, -2,4,0xff056070);
    //			FormatString.gi().Format("#cfaffcc"+this.sDetail, 340, SystemOperate.WordSize(30));
    			FormatString.gi().FormatEx("#cfaffcc"+this.sDetail, 340, SystemOperate.WordSize(30), 0, 0, SystemOperate.WordSize(35));
    			FormatString.gi().Draw(GmConfig$1.SCRW/2-170, GmConfig$1.SCRH/2-150+100);
    			this.btn_ok.Move(GmConfig$1.SCRW/2-100-141/2, GmConfig$1.SCRH/2+150-49-40, 141, 49);
    			this.btn_ok.Draw();
    			this.btn_cancel.Move(GmConfig$1.SCRW/2+100-141/2, GmConfig$1.SCRH/2+150-49-40, 141, 49);
    			this.btn_cancel.Draw();
    			this.sDetail=this.sError;
    			break;
    		}
    		if(this.iProcTo>=0)
    		{
    			if(this.iProcTo>100)this.iProcTo=100;
    			GmPlay$1.xani_local.DrawAnima(GmConfig$1.SCRW-100,GmConfig$1.SCRH-50, "跑步载入", GmPlay$1.iDelay);
    			M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW-100,GmConfig$1.SCRH-50+20, (this.iProcTo)+"%", 0xffffffff, 28, 101, 1, 1, 0, -2, -2);
    			M3DFast$1.gi().FillRect_2D(0, GmConfig$1.SCRH-2,  (this.iProcTo*GmConfig$1.SCRW/100), GmConfig$1.SCRH, 0xffffff00);
    		}
    		if(this.iStat!=200)
    		{
    			switch((GmPlay$1.iDelay/5)%3)
    			{
    			case 0:
    				this.sDetail+=".";
    				break;
    			case 1:
    				this.sDetail+="..";
    				break;
    			case 2:
    				this.sDetail+="...";
    				break;
    			}
    		}
    		M3DFast$1.gi().DrawTextEx(5,GmConfig$1.SCRH-5, this.sDetail, 0xffffffff, 28, 101, 1, 1, 0, 0, -3);
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.iStat==200)
    		{
    			if(this.btn_ok.ProcTouch(msg, x, y))
    			{
    				if(this.btn_ok.bCheck())
    				{
    					this.iStat=0;
    				}
    			}
    			if(this.btn_cancel.ProcTouch(msg, x, y))
    			{
    				if(this.btn_cancel.bCheck())
    				{
    					PublicInterface.gi().Exit();
    				}
    			}
    		}
    		return false;
    	}



    	run() {
    		var i,j;
    		while(LeadPage.bProcThread)
    		{
    			if(this.iThreadStat==1)
    			{//解压
    				var FOS;
    				var ins;
    				for(i=0;i<this.iNewFileCount;i++)
    				{
    					this.iProcTo=i*100/this.iNewFileCount;

    						ins=this.pls.mRes.getAssets().open("datapackage/"+this.newfiles[i].sName);
    						FOS = new FileOutputStream(GameData$1.sSDTo+this.newfiles[i].sName);
    						while(true)
    						{
    							j=ins.read(this.pls.databuf, 0, 1024*256);
    							if(j<=0)break;
    							FOS.write(this.pls.databuf, 0, j);
    						}
    						FOS.close();
    						ins.close();

    				}
    				this.iThreadStat=0;
    				this.bCheckFinish=true;
    			}
    			if(this.iThreadStat==2)
    			{//下载更新
    				this.iUpdateLength=0;
    				this.iUpdateFileCount=this.iNewFileCount;
    				this.iProcLength=0;
    				this.iProcFileCount=0;
    				for(i=0;i<this.iNewFileCount;i++)
    				{
    //					if(GameData.APKVersion>=iApkVersion || !GameData.bAutoUpdateAPK)
    					{//本地客户端版本 >= 服务器版本，不自动更新
    						if(this.newfiles[i].sName=="7gol.apk")
    						{
    							this.newfiles[i].iFlag=50;
    							this.iUpdateFileCount--;
    							continue;
    						}
    					}

    					this.newfiles[i].iFlag=0;//需要更新
    					this.iUpdateLength+=this.newfiles[i].iFileSize;
    				}
    				this.iCheckProc=0;
    				this.indir(new File(GameData$1.sSDTo));
    				this.iThreadStat=0;
    				this.bCheckFinish=true;
    			}
    			if(this.iThreadStat==3)
    			{
    				GmPlay$1.gp.InitAnimaAndData();
    				this.iThreadStat=0;
    				this.bCheckFinish=true;
    			}
    	
    				Thread.sleep(100);

    		}
    	}
    	indir( dir)
    	{
    		var i;
    		var flist=dir.listFiles();
    		for(i=0;i<flist.length;i++)
    		{
    			if(flist[i].isDirectory())this.indir(flist[i]);
    			else LeadPage.checkfile(flist[i]);
    		}
    	}
    	 
    	checkfile( f)
    	{
    		var i;
    		this.iCheckProc++;
    		this.iProcTo=this.iCheckProc*100/this.iNewFileCount;
    		var name=f.getPath();
    		var md5;
    		var iFileSize=0;
    		var _in = null;
    		
    		name=name.substring(GameData$1.sSDTo.length, name.length);
    		this.sChecking=name;
    		var len;

    		    _in = new FileInputStream(f);
    		    LeadPage.digest.reset();
    		    while ((len = _in.read(LeadPage.mybuf)) != -1)
    		    {
    			     LeadPage.digest.update(LeadPage.mybuf, 0, len);
    			     iFileSize+=len;
    		    }
    		    md5=XDefine$1.toHexString(LeadPage.digest.LeadPage.digest());
    		    _in.close();

    		//正常情况，跟newfile比对
    		for(i=0;i<this.iNewFileCount;i++)
    		{
    			if(this.newfiles[i].iFlag==50)continue;
    			if(this.newfiles[i].iFileSize==iFileSize)
    			{//长度相同
    				if(this.newfiles[i].sMD5.equals(md5))
    				{//校验相同
    					if(this.newfiles[i].sName.equals(name))
    					{//名字相同
    						this.newfiles[i].iFlag=50;//不需要更新
    						this.iUpdateFileCount--;
    						this.iUpdateLength-=this.newfiles[i].iFileSize;
    						return;
    					}
    				}
    			}
    		}
    		//没有找到对应，删除此文件//f.delete();//GmPlay.sop("delete "+name);
    	}
    	savecurrentversion()
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(this.iLocalResVersion);
    		this.pls.SaveDataToSD(GameData$1.sSDTo+"currentversion.dat");
    		//保存同步版本号
    		//保存所有文件对应md5
    		var i;
    		this.pls.iOffset=0;
    		this.pls.InsertInt(this.iNewFileCount);
    		for(i=0;i<this.iNewFileCount;i++)
    		{
    			this.pls.InsertString(this.newfiles[i].sName);
    			this.pls.InsertString(this.newfiles[i].sMD5);
    		}
    		this.pls.SaveDataToSD(GameData$1.sSDTo+"currentcheck.dat");
    	}
    }
    	LeadPage.iCheckCount;
    	LeadPage.iProcDest;
    	LeadPage.iResSeverCount=0,LeadPage.iResSeverPoint=0;

    	LeadPage.apk_path;
    	LeadPage.apk_name;

    	LeadPage.checkfile;
    	LeadPage.CheckFile=function( fn)
    	{
    		var i;
    		var smd5=getFileMD5(new File(GameData$1.sSDTo+fn));
    		for(i=0;i<LeadPage.iCheckCount;i++)
    		{
    			if(fn==LeadPage.checkfile[i].sName)
    			{
    				if(smd5==LeadPage.checkfile[i].sMd5)return true;
    				else break;
    			}
    		}
    		//校验出错，关闭客户端
    		var f=new File(GameData$1.sSDTo+"currentversion.dat");
    		f.delete();
    		PublicInterface.gi().Exit();
    		return false;
    	};
    	LeadPage.getFileMD5=function( file) 
    	{
    		if (!file.isFile())return "false";
    		var ss;
    		var _in = null;
    		var len;

    		    _in = new FileInputStream(file);
    		    LeadPage.digest.reset();
    		    while ((len = _in.read(LeadPage.mybuf)) != -1) {
    		     LeadPage.digest.update(LeadPage.mybuf, 0, len);
    		    }
    		    ss=XDefine$1.toHexString(LeadPage.digest.LeadPage.digest());
    		    _in.close();

    		return ss;
    	};
    	
    	LeadPage.iProcDest;
    //	int this.iProcTo=-1;

    LeadPage.sLeadSeverList=["http://"+GameData$1.sDSURL+":6666/","http://115.28.16.199:9999/"];
    	
    LeadPage.iResSeverCount=0,LeadPage.iResSeverPoint=0;
    LeadPage.sResSeverList=new Array(6);//

    LeadPage.digest;

    LeadPage.bInited=false;

    LeadPage.mybuf=new Int8Array(1024*64);
    	
    LeadPage.bProcThread=true;

    class _DOWNLOAD
    {
    	constructor()
    	{

    	}
    	/*
    	public int iStat;//当前状态
    	public _DOWNFILE downfile;

    	public String sUrl;//下载地址
    	public String sWriteTo;//写入
    //	public String sMD5;//md5校验码
    //	public int iFileSize;//文件长度
    //	public int iProc;//当前下载进度
    	public int iEid;//错误编号
    	
    	byte downbuf;
    	MessageDigest digest;
    	Thread thread;
    	
    	public _DOWNLOAD()
    	{
    		iStat=0;
    		downbuf=new Array(1024*5);//
    		try {
    			digest = MessageDigest.getInstance("MD5");
    		} catch (NoSuchAlgorithmException e) {
    			// TODO Auto-generated catch block
    			e.printStackTrace();
    		}
            thread = new Thread(this);
            thread.start();
    	}
    	public boolean bwaiting()
    	{
    		if(iStat==0)return true;
    		return false;
    	}
    	downloadstart( sever,_DOWNFILE df)
    	{////DownSever+"updateversion.dat", GameData.sSDTo+"updateversion.dat", "",0);
    		downfile=df;
    		sUrl=sever+df.sName;
    		sWriteTo=GameData.sSDTo+df.sName;
    		
    		df.sWriteTo=sWriteTo;

    		downfile.iProc=0;
    		downfile.iFlag=10;//开始下载
    //		iProc=0;
    		iStat=1;//开始下载
    	}
    	downloadfinish()
    	{
    		iStat=2;
    	}
    	error( i)
    	{
    		0  url错误
    		1 获取文件大小失败
    		2 文件长度不符
    		3 没有下载流，无法获取文件
    		4 打开写入文件流失败
    		5 未知原因下载失败
    		
    		iStat=10;
    		iEid=i;
    	}
    	run() {
    		while(LeadPage.bProcThread)
    		{
    //			if(MainMenu.bExitThread)return;
    			try {
    				switch(iStat)
    				{
    				case 1:
    					downloadfile(this);
    					break;
    				case 5://下载成功
    					downfile.iFlag=20;
    					iStat=0;
    					break;
    				case 10://下载失败
    					downfile.iFlag=30;
    					iStat=0;
    					break;
    				default:
    					Thread.sleep(50);
    				}
    			} catch (InterruptedException e) {
    				// TODO Auto-generated catch block
    				e.printStackTrace();
    			}
    		}
    	}
    	void downloadfile(_DOWNLOAD pdown)
    	{
    		URL Url=null;
    		InputStream is=null;
    		FileOutputStream FOS=null;
    		var fileSize;
    		
    		try {
    			GmPlay.sop("download from "+pdown.sUrl);
    			Url = new URL(pdown.sUrl);
    		} catch (MalformedURLException e) {
    			// TODO Auto-generated catch block
    			e.printStackTrace();
    			pdown.error(0);
    			return;
    		}
    //		var extlog=0;
    		//////////////////////////////////////////////////////////////
    		URLConnection conn;
    		try {
    //			extlog=1;
    			conn = Url.openConnection();
    //			extlog=2;
    			conn.connect();
    //			extlog=3;
    			is = conn.getInputStream();
    //			extlog=4;
    			fileSize = conn.getContentLength();// 根据响应获取文件大小
    			if (fileSize <= 0) 
    			{ // 获取内容长度为0
    				pdown.error(1);
    				return;
    			}
    			if(pdown.downfile.iFileSize>0 && pdown.downfile.iFileSize!=fileSize)
    			{//文件长度不等
    				GmPlay.sop("a="+pdown.downfile.iFileSize+",b="+fileSize);
    //				pdown.error(2);
    //				return;
    			}
    			if(pdown.downfile.iFileSize==0)pdown.downfile.iFileSize=fileSize;
    			if (is == null) 
    			{ // 没有下载流
    				pdown.error(3);
    				return;
    			}
    			try {//如已有，替换要先删除
    				File fPath = new File(pdown.sWriteTo);
    				if(fPath.exists())
    				{//没有目录，创建目录
    					fPath.delete();
    				}
    				GmPlay.sop("write to "+pdown.sWriteTo);
    				FOS = new FileOutputStream(pdown.sWriteTo);
    			} catch (Exception e) {
    				e.printStackTrace();
    				pdown.error(4);
    				return;
    			} // 创建写入文件内存流，
    			var numread;
    			try {
    				digest.reset();
    				while ((numread = is.read(downbuf)) != -1) 
    				{
    //					GmPlay.sop("numread="+numread);
    					digest.update(downbuf, 0, numread);
    					FOS.write(downbuf, 0, numread);
    //					pdown.iProc+=numread;//下载进度
    					pdown.downfile.iProc+=numread;//下载进度
    				}
    				FOS.close();
    				if(pdown.downfile.sMD5!=null && pdown.downfile.sMD5.length>0)
    				{
    					String ss=XDefine.toHexString(digest.digest());
    //					GmPlay.sop(pdown.sMD5+"=="+ss);
    					if(pdown.downfile.sMD5!=ss)
    					{
    						GmPlay.sop("MD5 error:"+pdown.downfile.sMD5.compareTo(ss)+","+pdown.downfile.sMD5.length+","+ss.length);
    						pdown.error(7);
    						return;
    					}
    				}
    			} catch (Exception e) {
    				// TODO Auto-generated catch block
    				e.printStackTrace();
    				pdown.error(6);
    				return;
    			}
    			is.close();
    		} catch (IOException e) {
    			// TODO Auto-generated catch block
    			e.printStackTrace();
    			pdown.error(5);
    //			GmPlay.sop("extlog="+extlog);
    			return;
    		}
    		pdown.iStat=5;
    	}*/
    }

    class _CHECKFILE$1
    {
    //	public String sName,sMd5;
    constructor()
    {

    }
    }

    class MainMenu  extends BaseClass
    {//检测更新
    //	String DownSever="http://42.121.105.109:7999/7gol/";
    //	String DownSever="http://115.28.16.199:7999/7gol/";


    	 constructor( ani)
    	{
    		super();
    		MainMenu.pics=new Array(3);//
    		for(var i=0;i<3;i++)MainMenu.pics[i]=new Int32Array(2);
    		MainMenu.pics[0][0]=-1;
    		MainMenu.pics[0][1]=-1;
    //		MainMenu.pics[1][0]=M3DFast.gi().LoadFromFile("bk/ba.xxx",-1,false);
    //		MainMenu.pics[1][1]=M3DFast.gi().LoadFromFile("bk/bb.xxx",-1,false);
    //		MainMenu.pics[2][0]=M3DFast.gi().LoadFromFile("bk/ca.xxx",-1,false);
    //		MainMenu.pics[2][1]=M3DFast.gi().LoadFromFile("bk/cb.xxx",-1,false);
    		var i;
    		this.pm3f=M3DFast$1.xm3f;
    		
    		this.iStat=10;
    		
    		this.downlist=new Array(this.MAXTHREAD);//
    		for(i=0;i<this.MAXTHREAD;i++)
    		{
    			this.downlist[i]=new _DOWNLOAD();
    		}
    		
    		this.down_version=new _DOWNFILE();
    		this.down_version.InitData("updateversion.dat", null, 0);
    		this.down_detail=new _DOWNFILE();
    		this.down_detail.InitData("updatedetail.dat", null, 0);
    		
    		this.down_apkversion=new _DOWNFILE();
    		this.down_apkversion.InitData("apkversion.dat", null, 0);
    		
    		this.down_apk=new _DOWNFILE();
    		this.down_apk.InitData("7gol.apk", null, 0);
    		

    			MainMenu.digest = MessageDigest.getInstance("MD5");

    		this.pls=new PackageTools(128*1024);
    		
    		this.fPath = new File(GameData$1.sSDTo);
    		if(!this.fPath.exists())
    		{//没有目录，创建目录
    			this.fPath.mkdir();
    			
    			this.iStat=0;//第一次安装，
    		}
    		if(!this.fPath.isDirectory())
    		{
    			this.fPath.delete();
    			this.fPath.mkdir();
    		}
    		if(GmPlay$1.bCheckRes)
    		{//删除三个文件，重新检测
    			this.fPath=new File(GameData$1.sSDTo+"currentcheck.dat");
    			if(this.fPath.exists())
    			{
    				this.fPath.delete();
    			}
    			this.fPath=new File(GameData$1.sSDTo+"updateversion.dat");
    			if(this.fPath.exists())
    			{
    				this.fPath.delete();
    			}
    			//把
    			SystemOperate.iNearRoleCount=25;
    //			SystemOperate.iPictureBuffer=SystemOperate.iPictureBuffer/2;
    		}
    		
    		this.fPath = new File(GameData$1.sSDTo+"7gol.apk");
    		if(this.fPath.exists())
    		{//存在
    			if(this.fPath.isDirectory())
    			{//是目录删掉
    				this.fPath.delete();
    			}
    		}
    		
    		MainMenu.mybuf=new Array(this.MAXBUF);//
    		this.bCheckFinish=false;
    		this.thread_check=new Thread(this);
    		//-------------------------------------------------------------
    		
    		this.btn_update=null;
    		this.btn_exit=null;
    	//	btn_later=null;

    	 this.bm=true;
    	 this.iRetry=10;
    	 this.iDecPoint;//解压指向
    	 this.xdown;
    	 this.sError="";
    	
    	}
    	
    	//--------------------------------------------------
    	checkfile( f)
    	{
    		var i;
    		var name=f.getPath();
    		var md5;
    		var iFileSize=0;
    		var _in = null;
    		
    		name=name.substring(GameData$1.sSDTo.length, name.length);
    		this.sChecking=name;
    		var len;

    		    _in = new FileInputStream(f);
    		    MainMenu.digest.reset();
    		    while ((len = _in.read(MainMenu.mybuf)) != -1)
    		    {
    			     MainMenu.digest.update(MainMenu.mybuf, 0, len);
    			     iFileSize+=len;
    		    }
    		    md5=XDefine$1.toHexString(MainMenu.digest.MainMenu.digest());
    		    _in.close();

    		//正常情况，跟newfile比对
    		for(i=0;i<this.iNewFileCount;i++)
    		{
    			if(this.newfiles[i].iFlag==50)continue;
    //			//什么情况下不更新apk
    //			if(this.newfiles[i].sName=="7gol.apk")
    //			{
    //				if(!GameData.bAutoUpdateAPK)
    //				{//自主更新apk文件
    //					if(!(GameData.APKVersion<this.iApkVersion))
    //					{
    //						this.newfiles[i].iFlag=50;//不需要更新
    //						this.iUpdateFileCount--;
    //						this.iUpdateLength-=this.newfiles[i].iFileSize;
    //						return;
    //					}
    //				}
    //			}
    			if(this.newfiles[i].iFileSize==iFileSize)
    			{//长度相同
    				if(this.newfiles[i].sMD5.equals(md5))
    				{//校验相同
    					if(this.newfiles[i].sName.equals(name))
    					{//名字相同
    						this.newfiles[i].iFlag=50;//不需要更新
    						this.iUpdateFileCount--;
    						this.iUpdateLength-=this.newfiles[i].iFileSize;
    						return;
    					}
    				}
    			}
    		}
    		//没有找到对应，删除此文件
    //		f.delete();
    		GmPlay$1.sop("delete "+name);
    	}
    	indir( dir)
    	{
    		var i;
    		var flist=dir.listFiles();
    		for(i=0;i<flist.length;i++)
    		{
    			if(flist[i].isDirectory())
    			{
    				this.indir(flist[i]);
    			}
    			else
    			{//文件
    				MainMenu.checkfile(flist[i]);
    			}
    		}
    	}
    	savecurrentversion()
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(this.iOldVersion);
    		this.pls.SaveDataToSD(GameData$1.sSDTo+"currentversion.dat");
    		//保存同步版本号
    		//保存所有文件对应md5
    		var i;
    		this.pls.iOffset=0;
    		this.pls.InsertInt(this.iNewFileCount);
    		for(i=0;i<this.iNewFileCount;i++)
    		{
    			this.pls.InsertString(this.newfiles[i].sName);
    			this.pls.InsertString(this.newfiles[i].sMD5);
    		}
    		this.pls.SaveDataToSD(GameData$1.sSDTo+"currentcheck.dat");
    	}
    	run()
    	 {
    		var i;

    		this.iUpdateLength=0;
    		this.iUpdateFileCount=this.iNewFileCount;
    		this.iProcLength=0;
    		this.iProcFileCount=0;
    		for(i=0;i<this.iNewFileCount;i++)
    		{
    //			if(GameData.APKVersion>=this.iApkVersion || !GameData.bAutoUpdateAPK)
    			{//本地客户端版本 >= 服务器版本，不自动更新
    				if(this.newfiles[i].sName=="7gol.apk")
    				{
    					this.newfiles[i].iFlag=50;
    					this.iUpdateFileCount--;
    					continue;
    				}
    			}

    			this.newfiles[i].iFlag=0;//需要更新
    			this.iUpdateLength+=this.newfiles[i].iFileSize;
    		}
    		this.indir(new File(GameData$1.sSDTo));
    		
    		this.bCheckFinish=true;
    	}
    	
    	GetFreeDownload()
    	{
    		var i;
    		for(i=0;i<this.MAXTHREAD;i++)
    		{
    			if(this.downlist[i].bwaiting())return this.downlist[i];
    		}
    		return null;
    	}

    	Draw()
    	{
    		if(this.btn_update==null)
    		{
    			this.btn_update=new XButton(GmPlay$1.xani_back);
    			this.btn_update.InitButton("统一中按钮4");

    			this.btn_exit=new XButton(GmPlay$1.xani_back);
    			this.btn_exit.InitButton("统一中按钮4");
    		}
    		var i,j,k,m;
    		var offx,offy;
    		var pdown;
    //		GmPlay.xani_back.DrawAnimaEx(0, 0, "大背景", 0, 101, 1.0f*GmConfig.SCRW/800, 1.0f*GmConfig.SCRH/480, 0, 0, 0);
    		dMainMenu.pics(0);
    		
    		this.iW=GmConfig$1.SCRW/2;
    		this.iH=GmConfig$1.SCRH/2;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		this.pm3f.FillRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0x80000000);
    		offx=this.iX+30;
    		offy=this.iY+30;
    		var intent;
    		switch(this.iStat)
    		{
    		case 0://第一次运行，判断本地是否带有资源包，是，则复制本地资源包到7gol目录下
    			if(this.pls.InitDataFromResFile("datapackage/updatedetail.dat"))
    			{//本地有数据文件，开始复制
    				this.pls.GetNextInt();//资源版本
    				this.pls.GetNextInt();//apk版本
    				j=this.pls.GetNextInt();//目录数
    				this.iNewFileCount=this.pls.GetNextInt();//文件数
    				
    				for(i=0;i<j;i++)
    				{
    					this.fPath = new File(GameData$1.sSDTo+this.pls.GetNextString());
    					if(!this.fPath.exists())
    					{//没有目录，创建目录
    						this.fPath.mkdir();
    					}
    					else if(!this.fPath.isDirectory())
    					{
    						this.fPath.delete();
    						this.fPath.mkdir();
    					}
    				}
    				
    				//新文件列表
    				this.newfiles=new Array(this.iNewFileCount);//
    				for(i=0;i<this.iNewFileCount;i++)
    				{
    					this.newfiles[i]=new _DOWNFILE();
    					this.newfiles[i].sName=this.pls.GetNextString();
    					this.newfiles[i].sMD5=this.pls.GetNextString();
    					this.newfiles[i].iFileSize=this.pls.GetNextInt();
    				}
    				this.iStat=1;
    				this.iDecPoint=0;
    				this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2, "正在解压文件...", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    			}
    			else this.iStat=10;//本地没有数据文件，直接跳转
    			break;
    		case 1://解压大包中的文件
    			var FOS;
    			var ins;
    			for(j=0;j<10;j++)
    			{
    				if(this.iDecPoint>=this.iNewFileCount)
    				{
    					this.iStat=10;
    					break;
    				}


    					ins=this.pls.mRes.getAssets().open("datapackage/"+this.newfiles[this.iDecPoint].sName);
    					FOS = new FileOutputStream(GameData$1.sSDTo+this.newfiles[this.iDecPoint].sName);
    					while(true)
    					{
    						i=ins.read(this.pls.databuf, 0, 1024*128);
    						if(i<=0)break;
    						FOS.write(this.pls.databuf, 0, i);
    					}
    					FOS.close();
    					ins.close();

    				
    				this.iDecPoint++;
    			}
    			this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2, "正在解压文件"+this.iDecPoint*100/this.iNewFileCount+"%", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    			break;
    		case 10://开启下载updateversion.dat
    			pdown=this.GetFreeDownload();
    			if(pdown!=null)
    			{
    				pdown.downloadstart(GameData$1.sUpdateSeverList[MainMenu.iSeverPoint],this.down_version);
    				this.iStat=11;
    				this.xdown=pdown;
    			}
    			this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2, "正在检测客户端版本...", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    			break;
    		case 11://等待版本文件下载完
    			if(this.down_version.bSuccress())
    			{//版本文件下载完，打开校验
    				if(this.pls.InitDataFromSD(this.xdown.sWriteTo))
    				{//打开成功
    					this.iNewVersion=this.pls.GetNextInt();
    					this.iApkVersion=this.pls.GetNextInt();
    					this.iStat=12;
    				}
    				else
    				{
    					this.iStat=200;
    					this.sError="E1:"+this.xdown.sWriteTo;
    				}
    			}
    			if(this.down_version.bFailed())
    			{//下载错误
    				if(this.iRetry>0)
    				{
    //					this.down_version.iFlag=0;
    					this.iStat=10;
    					this.iRetry--;
    					break;
    				}
    				this.iStat=200;
    				this.sError="E2:校验失败";
    			}
    			this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2, "正在检测客户端版本...", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    			if(this.down_version.bProcing())
    			{
    				if(this.down_version.iFileSize>0)this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2+40, ""+this.down_version.iProc*100/this.down_version.iFileSize+"%", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			}
    			break;
    		case 12:
    			if(this.pls.InitDataFromSD(GameData$1.sSDTo+"currentversion.dat"))
    			{//打开本地版本文件
    //				GmPlay.sop1("this.iOldVersion="+this.iOldVersion+",,,this.iNewVersion="+this.iNewVersion);
    				this.iOldVersion=this.pls.GetNextInt();
    				if(this.iNewVersion!=this.iOldVersion)// || GameData.APKVersion<this.iApkVersion)
    				{
    					pdown=this.GetFreeDownload();
    					if(pdown!=null)
    					{
    						pdown.downloadstart(GameData$1.sUpdateSeverList[MainMenu.iSeverPoint],this.down_detail);
    						this.iStat=20;
    						this.xdown=pdown;
    					}
    					this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2, "正在进行数据校验...", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    				}
    				else this.iStat=100;
    			}
    			else
    			{//本地无版本文件，进行校验
    				pdown=this.GetFreeDownload();
    				if(pdown!=null)
    				{
    					pdown.downloadstart(GameData$1.sUpdateSeverList[MainMenu.iSeverPoint],this.down_detail);
    					this.iStat=20;
    					this.xdown=pdown;
    				}
    				this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2, "正在进行数据校验...", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    			}
    			break;
    		case 20://等待下载detail
    			if(this.down_detail.bSuccress())
    			{//版本文件下载完，打开校验
    				if(this.pls.InitDataFromSD(this.xdown.sWriteTo))
    				{//打开成功
    					this.pls.GetNextInt();//资源版本
    					this.pls.GetNextInt();//apk版本
    					j=this.pls.GetNextInt();//目录数
    					this.iNewFileCount=this.pls.GetNextInt();//文件数
    					if(this.iNewFileCount<500)
    					{
    						this.iStat=200;
    						this.sError="E8";
    						break;
    					}
    					
    					for(i=0;i<j;i++)
    					{
    						this.fPath = new File(GameData$1.sSDTo+this.pls.GetNextString());
    						if(!this.fPath.exists())
    						{//没有目录，创建目录
    							this.fPath.mkdir();
    						}
    						else if(!this.fPath.isDirectory())
    						{
    							this.fPath.delete();
    							this.fPath.mkdir();
    						}
    					}
    					
    					//新文件列表
    					this.newfiles=new Array(this.iNewFileCount);//
    					for(i=0;i<this.iNewFileCount;i++)
    					{
    						this.newfiles[i]=new _DOWNFILE();
    						this.newfiles[i].sName=this.pls.GetNextString();
    						this.newfiles[i].sMD5=this.pls.GetNextString();
    						this.newfiles[i].iFileSize=this.pls.GetNextInt();
    					}
    					this.sChecking="无";
    					this.bCheckFinish=false;
    					this.thread_check.start();
    					this.iStat=21;
    				}
    				else
    				{
    					this.iStat=200;
    					this.sError="E3:"+this.xdown.sWriteTo;
    				}
    			}
    			this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2, "正在进行数据校验...", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    			if(this.down_detail.bProcing())
    			{
    				if(this.down_detail.iFileSize>0)this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2+40, ""+this.down_detail.iProc*100/this.down_detail.iFileSize+"%", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			}
    			if(this.down_detail.bFailed())
    			{
    				this.iStat=200;
    				this.sError="E4";
    			}
    			break;
    		case 21://本地文件校验
    			if(this.bCheckFinish)
    			{//完成本地文件的校验，退出
    				if(this.iUpdateFileCount==0)
    				{//版本号也要重新保存，否则重复校验
    					this.iOldVersion=this.iNewVersion;
    					this.savecurrentversion();
    					this.iStat=100;
    				}
    				else this.iStat=30;//开始下载文件
    			}
    			this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2, "正在进行数据校验...", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    			this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2+40, this.sChecking, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			break;
    		case 30://显示多少数据需要更新，是否更新
    			this.pm3f.DrawTextEx(offx,offy, "有 "+this.iUpdateFileCount+" 个文件需要更新", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			//1,048,576
    			this.pm3f.DrawTextEx(offx,offy+30, "合计下载"+this.iUpdateLength/1024+"K("+1.0*(this.iUpdateLength/10486)/100+"M)", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    //			this.pm3f.DrawTextEx(offx,offy+60, "不更新可能导致无法正常游戏，", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			this.pm3f.DrawTextEx(offx,offy+60, "是否马上更新？", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			
    			this.btn_update.Move(this.iX+20, this.iY+this.iH-40-20, 130, 40);
    			this.btn_update.sName="马上更新";
    			this.btn_update.Draw();
    			
    			this.btn_exit.Move(this.iX+this.iW-20-130, this.iY+this.iH-40-20, 130, 40);
    			this.btn_exit.sName="退出游戏";
    			this.btn_exit.Draw();
    			break;
    		case 31://更新文件
    			j=0;
    			for(i=0;i<this.iNewFileCount;i++)
    			{
    				if(this.newfiles[i].iFlag==0)
    				{//需要更新
    					pdown=this.GetFreeDownload();
    					if(pdown==null)break;//更新线程已满
    					pdown.downloadstart(GameData$1.sUpdateSeverList[MainMenu.iSeverPoint],this.newfiles[i]);
    				}
    			}
    			k=0;
    			for(i=0;i<this.iNewFileCount;i++)
    			{
    				if(this.newfiles[i].iFlag==10)
    				{//正在更新中
    					j+=this.newfiles[i].iProc;//下载中文件已下载大小
    				}
    				else if(this.newfiles[i].iFlag==20)
    				{//下载成功
    					this.iProcLength+=this.newfiles[i].iFileSize;
    					this.iProcFileCount++;
    					this.newfiles[i].iFlag=40;
    				}
    				else if(this.newfiles[i].iFlag==30)
    				{//下载失败
    					this.newfiles[i].iFlag=0;
    //					this.iStat=32;
    					
    //					this.iStat=31;
    				}
    				if(this.newfiles[i].iFlag<20)k++;
    			}
    			if(k==0)
    			{//更新完毕，写入当前版本号
    				this.iOldVersion=this.iNewVersion;
    				this.savecurrentversion();
    				this.iStat=100;
    			}
    //			this.pm3f.DrawTextEx(offx,offy, "当前下载："+downloading.sName, 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    //			this.pm3f.DrawTextEx(offx,offy+30, "文件大小："+this.downlist[0].iProc/1024+"/"+downloading.iFileSize/1024+"K", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			
    			this.pm3f.DrawTextEx(offx,offy+30*0, "总文件数："+this.iProcFileCount+"/"+this.iUpdateFileCount, 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			i=(this.iProcLength+j);//已完成
    			j=this.iUpdateLength;
    			this.pm3f.DrawTextEx(offx,offy+30*1, "已完成："+i/1024+"K("+1.0*(i/10486)/100+"M)", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			this.pm3f.DrawTextEx(offx,offy+30*2, "总大小："+j/1024+"K("+1.0*(j/10486)/100+"M)", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			
    			j=this.iUpdateLength-i;//未完成
    			if(i>0)
    			{
    				this.lnow=XDefine$1.get_ms();
    				this.lcalc=(this.lnow-this.lstart)/1000;//已经下载的秒数
    				if(this.lcalc<=0)this.lcalc=1;
    //				this.pm3f.DrawTextEx(offx, offy+30*3, "平均速度："+1.0f*(i/this.lcalc*100/1024)/100+"k/s", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    				this.pm3f.DrawTextEx(offx, offy+30*3, "平均速度："+i/this.lcalc/1024+"K/s", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    				this.pm3f.DrawTextEx(offx, offy+30*4, "已用时间："+XDefine$1.SecondToTime(this.lcalc), 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    				this.pm3f.DrawTextEx(offx, offy+30*5, "预计还需："+XDefine$1.SecondToTime(this.lcalc*j/i), 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			}
    			break;
    		case 32://下载
    			this.pm3f.DrawTextEx(offx,offy, "下载出错，检查网络连接是否正常("+this.downlist[0].iEid+")", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			
    			this.btn_update.Move(this.iX+20, this.iY+this.iH-40-20, 130, 40);
    			this.btn_update.sName="重试";
    			this.btn_update.Draw();
    			
    			this.btn_exit.Move(this.iX+this.iW-20-130, this.iY+this.iH-40-20, 130, 40);
    			this.btn_exit.sName="退出游戏";
    			this.btn_exit.Draw();
    			
    //			btn_later.Move(this.iX+this.iW/2-130/2, this.iY+this.iH-40-20, 130, 40);
    //			btn_later.sName="暂不更新";
    //			btn_later.Draw();
    			break;
    		case 110://下载版本校验文件
    			if(this.down_apkversion.bSuccress())
    			{//版本文件下载完，打开校验
    				if(this.pls.InitDataFromSD(GameData$1.sSDTo+"apkversion.dat"))
    				{//打开成功
    					j=this.pls.GetNextShort();
    					for(i=0;i<j;i++)
    					{
    						k=this.pls.GetNextShort();
    						m=this.pls.GetNextShort();
    						this.pls.GetNextString();//对应客户端文件的md5
    //						GmPlay.sop1("版本编号:"+k+",版本号:"+m);
    						if(k==i && k==GameVersion$1.QUDAO)
    						{//渠道对应
    							if(GameData$1.APKVersion<m)
    							{//下载apk来更新
    								this.iStat=111;
    								pdown=this.GetFreeDownload();
    								if(pdown!=null)
    								{
    									pdown.downloadstart(GameData$1.sUpdateClientList[MainMenu.iSeverPoint]+GameVersion$1.QUDAO+"/",this.down_apk);
    								}
    							}
    							else
    							{//不下载，直接进入游戏
    								this.iStat=102;
    							}
    							break;
    						}
    					}
    				}
    				else
    				{
    					this.iStat=200;
    					this.sError="E5";
    				}
    			}
    			if(this.down_apkversion.bFailed())
    			{//下载错误
    				this.iStat=200;
    				this.sError="E6";
    			}
    			this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2, "正在检测客户端版本...", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    			if(this.down_apkversion.bProcing())
    			{
    				if(this.down_apkversion.iFileSize>0)this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2+40, ""+this.down_apkversion.iProc*100/this.down_apkversion.iFileSize+"%", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			}
    			break;
    		case 111://等待客户端下载完成
    			if(this.down_apk.bSuccress())
    			{
    				intent = new Intent(Intent.ACTION_VIEW);  
    				intent.setDataAndType(Uri.fromFile(new File(GameData$1.sSDTo+"7gol.apk")),"application/vnd.android.package-archive");  
    				PublicInterface.mMain.startActivity(intent);  
    				PublicInterface.gi().Exit();
    			}
    			if(this.down_apk.bFailed())
    			{//下载错误
    				this.iStat=200;
    				this.sError="E7";
    			}
    			this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2, "正在下载最新客户端...", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    			if(this.down_apk.bProcing())
    			{
    				if(this.down_apk.iFileSize>0)this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2+40, ""+this.down_apk.iProc*100/this.down_apk.iFileSize+"%", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			}
    			break;
    		case 100:
    			if(GameVersion$1.bAutoUpdateAPK)
    			{//自主更新apk文件
    				GmPlay$1.sop1("版本:"+GameData$1.APKVersion+","+this.iApkVersion);
    				if(GameData$1.APKVersion<this.iApkVersion)
    				{//下载客户端版本校验文件
    					pdown=this.GetFreeDownload();
    					if(pdown!=null)
    					{
    						pdown.downloadstart(GameData$1.sUpdateClientList[MainMenu.iSeverPoint],this.down_apkversion);
    					}
    					this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2, "正在检测客户端版本...", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);

    					this.iStat=110;
    					
    					break;
    				}
    			}
    		case 102:
    /*			if(apkfile!=null)
    			{

    			}*/
    			this.iStat=101;
    			this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2, "载入中...", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    			/*载入版本检测文件*/
    			if(this.pls.InitDataFromSD(GameData$1.sSDTo+"currentcheck.dat"))
    			{//有这个文件
    				MainMenu.iCheckCount=this.pls.GetNextInt();
    				MainMenu.checkfile=new Array(MainMenu.iCheckCount);//
    				for(i=0;i<MainMenu.iCheckCount;i++)
    				{
    					MainMenu.checkfile[i]=new _CHECKFILE$1();
    					MainMenu.checkfile[i].sName=this.pls.GetNextString();
    					MainMenu.checkfile[i].sMd5=this.pls.GetNextString();
    				}
    			}
    			else
    			{//没找到，重新检测
    				pdown=this.GetFreeDownload();
    				if(pdown!=null)
    				{
    					pdown.downloadstart(GameData$1.sUpdateSeverList[MainMenu.iSeverPoint],this.down_detail);
    					this.iStat=20;
    				}
    			}
    			break;
    		case 101:
    			MainMenu.bExitThread=true;
    			GmPlay$1.gp.InitAnimaAndData();
    			this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2, "载入中...", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);

    			XStat$1.gi().PopStat(1);
    			XStat$1.gi().PushStat(XStat$1.GS_FASTLOGIN);
    			break;
    		case 200:
    			this.pm3f.DrawTextEx(offx,offy, "连接出错，检查网络连接是否正常", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			if(this.sError.length>0)
    			{
    				this.pm3f.DrawTextEx(offx,offy+50, this.sError, 0xffffffff, 20, 101, 1, 1, 0, 0, 0);				
    			}
    			if(MainMenu.iSeverPoint<3)
    			{
    				MainMenu.iSeverPoint++;
    				this.iStat=10;
    				this.iRetry=10;
    			}
    			break;
    		}
    //		btn_fastlogin.Draw();
    //		btn_message.Draw();
    		
    		
    //		this.pm3f.FillRect_2D(0, GmConfig.SCRH-30, GmConfig.SCRW, GmConfig.SCRH, 0x80000000);
    //		this.pm3f.DrawTextEx(0, GmConfig.SCRH, "第一次封测版", 0xffffffff, 30, 101, 1, 1, 0, 0, -3);
    //		i=iDelay*10%200;
    //		if(i>=100)i=200-i;
    //		this.pm3f.DrawTextEx(GmConfig.SCRW, GmConfig.SCRH, "任意触摸开始游戏", 0xffffffff,30,i,1,1,0,-3,-3);
    //		iDelay++;
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		if(this.iStat==30 || this.iStat==32)
    		{
    //			if(btn_later.ProcTouch(msg, x, y))
    //			{
    //				if(btn_later.bCheck())
    //				{
    //					this.iStat=101;
    //				}
    //				return true;
    //			}
    			if(this.btn_update.ProcTouch(msg, x, y))
    			{
    				if(this.btn_update.bCheck())
    				{
    					this.lstart=XDefine$1.get_ms();
    					this.iStat=31;
    				}
    				return true;
    			}
    			if(this.btn_exit.ProcTouch(msg, x, y))
    			{
    				if(this.btn_exit.bCheck())
    				{
    //					this.iStat=101;
    					PublicInterface.gi().Exit();
    				}
    				return true;
    			}
    		}
    //		if(btn_fastlogin.ProcTouch(msg, x, y))
    //		{
    //			if(btn_fastlogin.bCheck())
    //			{
    //				XStat.gi().PushStat(XStat.GS_FASTLOGIN);
    //			}
    //		}
    //		if(btn_message.ProcTouch(msg, x, y))
    //		{
    //			if(btn_message.bCheck())
    //			{
    //				if(this.bm)GmPlay.x_wav.StartWav(0, true);
    //				else GmPlay.x_wav.StopWav(0);
    //				this.bm=!this.bm;
    //			}
    //		}

    		return false;
    	}

    }
    MainMenu.iCheckCount;
    MainMenu.checkfile;
    MainMenu.digest;
    MainMenu.mybuf;
    MainMenu.bExitThread=false;
    MainMenu.pics;

    MainMenu.dpics=function( type)
    {
    	if(MainMenu.pics[0][0]<0)MainMenu.pics[0][0]=M3DFast$1.gi().LoadFromFile("bk/aa.xxx",-1,false);
    	if(MainMenu.pics[0][1]<0)MainMenu.pics[0][1]=M3DFast$1.gi().LoadFromFile("bk/ab.xxx",-1,false);

    	M3DFast$1.gi().DrawImageEx(0, 0, 0, MainMenu.pics[0][0], 0, 0, 512, 480, 101, 1, 1, 0, 0, 0);
    	M3DFast$1.gi().DrawImageEx(0, 512, 0, MainMenu.pics[0][1], 0, 0, 800-512, 480, 101, 1, 1, 0, 0, 0);
    };

    MainMenu.CheckFile=function( fn)
    	{
    		var i;
    		var smd5=getFileMD5(new File(GameData$1.sSDTo+fn));
    		for(i=0;i<MainMenu.iCheckCount;i++)
    		{
    			if(fn==MainMenu.checkfile[i].sName)
    			{
    				if(smd5==MainMenu.checkfile[i].sMd5)return true;
    				else break;
    			}
    		}
    		//校验出错，关闭客户端
    		var f=new File(GameData$1.sSDTo+"currentversion.dat");
    		f.delete();
    		PublicInterface.gi().Exit();
    		return false;
    	};
    	MainMenu.getFileMD5=function( file) 
    	{
    		if (!file.isFile())return "false";
    		var ss;
    		var _in = null;
    		var len;

    		    _in = new FileInputStream(file);
    		    MainMenu.digest.reset();
    		    while ((len = _in.read(MainMenu.mybuf)) != -1) {
    		     MainMenu.digest.update(MainMenu.mybuf, 0, len);
    		    }
    		    ss=XDefine$1.toHexString(MainMenu.digest.MainMenu.digest());
    		    _in.close();
    		   
    		return ss;
    	};
    	MainMenu.iSeverPoint=0;

    class _POST
    {/*
    	public String sTitle;
    	public String sDetail;
    	public String sDate;
    	public String sAuthor;
    	public int iSeverID;*/
    	constructor()
    	{

    	}
    }

    //每次进入游戏的弹窗公告
    class GamePost {
    	
    	
    	constructor()
    	{
    		this.iStat=200;
    		
    		this.down_post=new _DOWNFILE();
    		this.down_post.InitData("post.dat", null, 0);
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    //		this.btn_close.sName="关闭";
    		
    		this.btn_up=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_up.InitButton("按钮1");
    		this.btn_up.sName="上一条";
    		
    		this.btn_down=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_down.InitButton("按钮1");
    		this.btn_down.sName="下一条";

    		this.bLock=false;
    	}
    	
    	Draw()
    	{
    		if(GmMe$1.me.iRid<=0)return;
    		var i;
    		var pls;
    		switch(this.iStat)
    		{
    		case 0://开始，下载post.dat
    			LeadPage.bProcThread=true;
    //			MainMenu.bExitThread=false;
    			this.dproc=new _DOWNLOAD();
    			
    			this.dproc.downloadstart(LeadPage.sResSeverList[LeadPage.iResSeverPoint], this.down_post);
    			this.iStat=10;
    //			GmPlay.sop1("===="+LeadPage.sResSeverList[LeadPage.iResSeverPoint]);
    //			GmPlay.sop1("===="+GameData.sUpdateSeverList[MainMenu.iSeverPoint]);
    			break;
    		case 10:
    //			GmPlay.sop1("===ddd");
    			if(this.down_post.bSuccress())
    			{//
    //				GmPlay.sop1("===success");
    				pls=GmPlay$1.gp.pls;
    				if(pls.InitDataFromSD(this.down_post.sWriteTo))
    				{//打开成功，读取数据
    					pls.GetNextByte();
    					this.iPostCount=pls.GetNextInt();
    					this.posts=new Array(this.iPostCount);//
    					for(i=0;i<this.iPostCount;i++)
    					{
    //						GmPlay.sop1("===success c"+i);
    						this.posts[i]=new _POST();
    						this.posts[i].sTitle=pls.GetNextString();
    						pls.GetNextData();
    						this.posts[i].sDetail=pls.DataToString();
    						this.posts[i].sDate=pls.GetNextString();
    						this.posts[i].sAuthor=pls.GetNextString();
    						this.posts[i].iSeverID=pls.GetNextInt();
    						if(this.posts[i].iSeverID==0)continue;
    						if(this.posts[i].iSeverID!=XRecordFast.iLastSever)
    						{
    							i--;
    							this.iPostCount--;
    						}
    					}
    //					GmPlay.sop("this.iPostCount="+this.iPostCount+",,,,GmMe.me.rbs.iLev"+GmMe.me.rbs.iLev);
    					if(this.iPostCount>0)
    					{
    						this.iStat=20;
    						this.iPostPoint=this.iPostCount-1;
    						this.iW=400;
    						this.iH=400;
    						this.iX=(GmConfig$1.SCRW-this.iW)/2;
    						this.iY=(GmConfig$1.SCRH-this.iH)/2;
    						this.iTextOff=0;
    						if(GmMe$1.me.rbs.iLev<25)this.iStat=200;
    					}
    					else this.iStat=200;
    				}
    				else
    				{
    					this.iStat=200;
    //					sError="E1:"+xdown.sWriteTo;
    				}
    			}
    			if(this.down_post.bFailed())
    			{//下载错误
    //				GmPlay.sop("failed");
    				this.iStat=200;
    			}
    //			pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2, "正在检测客户端版本...", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    			if(this.down_post.bProcing())
    			{
    //				if(this.down_post.iFileSize>0)pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2+40, ""+down_version.iProc*100/down_version.iFileSize+"%", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			}
    //			GmPlay.sop("this.iStat="+this.iStat);
    			break;
    		case 20://弹出显示
    //			GmPlay.sop("this.iPostCount="+this.iPostCount);
    			this.DrawDetail();
    			break;
    		case 200:
    			LeadPage.bProcThread=false;
    //			MainMenu.bExitThread=true;
    			this.iStat=300;
    			break;
    		}
    	}
    	Clear()
    	{
    		if(this.iStat<200)this.iStat=200;
    	}
    	DrawDetail()
    	{
    //		GmPlay.sop("draw......");
    		var offx,offy;
    		var offw,offh;

    		this.iW=800;
    		this.iH=480;

    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;

    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		DrawMode$1.new_framein(this.iX+25, this.iY+35, this.iW-50, this.iH-65);
    		GmPlay$1.xani_nui2.DrawAnima(this.iX+this.iW/2,this.iY,"公告栏标题",0);
    		
    	//	M3DFast.gi().DrawText_2(this.iX+this.iW/2, this.iY+70, this.posts[this.iPostPoint].sTitle, 0xffff0000, 30, 101, 1, 1, 0, -2,-2, 2, 0xff000000);
    		M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2, this.iY+70, this.posts[this.iPostPoint].sTitle, 0xffff0000, 32, 101, 1, 1, 0, -2,-2);
    		
    		offx=this.iX+25;
    		offy=this.iY+95;
    		offw=this.iW-50;
    		offh=this.iH-200;
    		M3DFast$1.gi().SetViewClip(offx, offy+5,offx+offw,offy+offh-5);
    		FormatString.gi().FormatEx("#c1e5c6b"+this.posts[this.iPostPoint].sDetail, offw-50, 25, 0, 0xff000000, 32);
    //		FormatString.gi().Format("#c1e5c6b"+this.posts[this.iPostPoint].sDetail, offw-50, 25);
    		this.iTextH=FormatString.gi().iH;
    		if(this.iTextH+this.iTextOff<offh-10)this.iTextOff=offh-10-this.iTextH;
    		if(this.iTextOff>0)this.iTextOff=0;
    		FormatString.gi().Draw(offx+25,offy+5+this.iTextOff);
    		M3DFast$1.gi().NoClip();
    //		GmPlay.sop("this.iTextH="+this.iTextH+",,,this.iTextOff="+this.iTextOff+",,,offh="+offh);
    //		GmPlay.sop("abc="+this.posts[this.iPostPoint].sDetail);

    		this.btn_up.Move(this.iX+100, this.iY+this.iH-100, 161, 53);
    		this.btn_up.Draw();

    		this.btn_down.Move(this.iX+this.iW-100-161, this.iY+this.iH-100, 161, 53);
    		this.btn_down.Draw();
    		
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.Draw();
    		if(1==1)return;
    		
    //		offx=this.iX+20;
    //		offy=this.iY+60+20;
    //		offw=this.iW-40;
    //		offh=this.iH-60-40-20-10-20;
    //		DrawMode.ui3_DefineFrame(this.iX, this.iY, this.iW, this.iH);
    //		M3DFast.gi().DrawText_2(this.iX+this.iW/2, this.iY+35, this.posts[this.iPostPoint].sTitle, 0xffffffff, 30, 101, 1, 1, 0, -2,-2, 2, 0xff000000);
    		M3DFast$1.gi().DrawText_2(this.iX+this.iW/2, this.iY+65, this.posts[this.iPostPoint].sDate, 0xffffffff, 20, 101, 1, 1, 0, -2,-2, 2, 0xff000000);

    //		DrawMode.ui3_Frame3(offx, offy,offw,offh);
    		M3DFast$1.gi().SetViewClip(offx, offy+5,offx+offw,offy+offh-5);
    		FormatString.gi().FormatEx(this.posts[this.iPostPoint].sDetail, offw-10, 20, 2, 0xff000000, 20);
    		this.iTextH=FormatString.gi().iH;
    		if(this.iTextH+this.iTextOff<offh-10)this.iTextOff=offh-10-this.iTextH;
    		if(this.iTextOff>0)this.iTextOff=0;
    		FormatString.gi().Draw(offx+5,offy+5+this.iTextOff);
    		M3DFast$1.gi().NoClip();
    		
    		M3DFast$1.gi().DrawText_2(this.iX+this.iW/2, this.iY+this.iH-20-20, (this.iPostPoint+1)+"/"+(this.iPostCount), 0xffffffff, 30, 101, 1, 1, 0, -2,-2, 2, 0xff000000);
    //		if(this.iPostPoint>0)
    		{
    			this.btn_up.Move(this.iX+100, this.iY+this.iH-100, 161, 53);
    			this.btn_up.Draw();
    		}
    //		if(this.iPostPoint<this.iPostCount-1)
    		{
    			this.btn_down.Move(this.iX+this.iW-100-161, this.iY+this.iH-100, 161, 53);
    			this.btn_down.Draw();
    		}
    		

    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		if(this.iStat==20)
    		{
    			
    			{
    				if(this.btn_up.ProcTouch(msg, x, y))
    				{
    					if(this.btn_up.bCheck())
    					{
    						if(this.iPostPoint>0)this.iPostPoint--;
    					}
    					return true;
    				}
    			}
    			
    			{
    				if(this.btn_down.ProcTouch(msg, x, y))
    				{
    					if(this.btn_down.bCheck())
    					{
    						if(this.iPostPoint<this.iPostCount-1)this.iPostPoint++;
    					}
    					return true;
    				}
    			}
    			if(this.btn_close.ProcTouch(msg, x, y))
    			{
    				if(this.btn_close.bCheck())
    				{
    					this.iStat=200;
    				}
    				return true;
    			}
    			if(msg==2 && this.bLock)
    			{
    				this.iTextOff+=(y-this.iLockY);
    				this.iLockY=y;
    				return true;
    			}
    			if(msg==3 && this.bLock)
    			{
    				this.bLock=false;
    				return true;
    			}
    			if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    			{
    				var offx,offy;
    				var offw,offh;
    				offx=this.iX+20;
    				offy=this.iY+60;
    				offw=this.iW-40;
    				offh=this.iH-60-40-20-10;
    				if(XDefine$1.bInRect(x, y, offx, offy, offw, offh) && msg==1)
    				{
    					this.bLock=true;
    					this.iLockY=y;
    				}
    			}
    			else this.iStat=200;
    			return true;
    		}
    		return false;
    	}


    }
    GamePost.gp=null;
    GamePost.gi=function()
    {
    	if(GamePost.gp==null)GamePost.gp=new GamePost();
    	return GamePost.gp;
    };

    class _EXTBUF
    {
    /*	public String detail,s1,s2,s3;
    	public int type1,type2,type3;
    	public int cs1,cs2,cs3;*/
    	constructor()
    	{

    	}
    };

    class ExtHelp extends BaseClass{

    	
    	
    	constructor( ani)
    	{
    		super();
    		var i;
    		this.extsel=new Array(3);//
    		this.extsel[0]=new _EXTSEL();
    		this.extsel[1]=new _EXTSEL();
    		this.extsel[2]=new _EXTSEL();
    		this.iX=GmConfig$1.SCRW/4;
    		this.iW=GmConfig$1.SCRW*3/5;
    		
    		this.iH=GmConfig$1.SCRH*5/16;
    		this.iY=GmConfig$1.SCRH-this.iH;
    		if(GmConfig$1.SCRH==720)this.fRate=1;
    		else this.fRate=1.0*GmConfig$1.SCRH/720;
    		this.fRate=1;
    		this.aa=GmPlay$1.xani_ui4.InitAnimaWithName("琴清", null);
    		
    		this.btn1_aa=GmPlay$1.xani_ui4.InitAnimaWithName("引导按钮1", null);
    		this.btn2_aa=GmPlay$1.xani_ui4.InitAnimaWithName("引导按钮2", null);
    		
    		this.btn_sel=new Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.btn_sel[i]=new XButton(GmPlay$1.xani_ui);
    			
    			this.btn_sel[i].bSingleButton=true;
    		}
    	}
    	
    	
    	
    	Draw()
    	{
    		FrameMessage.fm.bShow=false;
    		EasyMessage.easymsg.Clear();
    //		GamePost.gi().Clear();
    		var i,w,h;
    		i=1;
    		DrawMode$1.ui4_FrameDown(this.iX, this.iY, this.iW, this.iH);
    //		M3DFast.gi().FillRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0xa0000000);
    		this.aa.DrawEx(this.iX, GmConfig$1.SCRH, 101, this.fRate,this.fRate, 0, 0, 0);

    		FormatString.gi().FormatEx("#c00ff00"+this.sDetail,  (this.iW-this.fRate*100), (this.fRate*(ExtHelp.iWordSize)), 1, 0xff000000, (this.fRate*(ExtHelp.iWordSize+ExtHelp.iWordSize/6)));
    		while(FormatString.gi().iH>this.iH-(this.fRate*(38+16))-20)
    		{
    			ExtHelp.iWordSize--;
    			FormatString.gi().FormatEx("#c00ff00"+this.sDetail,  (this.iW-this.fRate*100), (this.fRate*(ExtHelp.iWordSize)), 1, 0xff000000, (this.fRate*(ExtHelp.iWordSize+ExtHelp.iWordSize/6)));
    		}
    //		FormatString.gi().Format(this.sDetail, iW-80, (this.fRate*30));
    		FormatString.gi().Draw( (this.iX+this.fRate*90), this.iY+10);
    		
    		//38*4=152
    		w= (this.fRate*(152+16));
    		h= (this.fRate*(38+16));
    		for(i=0;i<3;i++)
    		{
    			if(this.extsel[i].type==0)continue;
    			this.btn_sel[i].Move(this.iX+(this.fRate*180)+(w+10)*i, GmConfig$1.SCRH-h-10, w, h);
    			if(this.btn_sel[i].bMouseDown)
    			{
    				this.btn1_aa.iFrame=1;
    				this.btn2_aa.iFrame=1;
    			}
    			else
    			{
    				this.btn1_aa.iFrame=0;
    				this.btn2_aa.iFrame=0;
    			}
    			if(i<2)this.btn1_aa.DrawEx(this.btn_sel[i].iX,this.btn_sel[i].iY, 101, this.fRate, this.fRate, 0, 0, 0);
    			else this.btn2_aa.DrawEx(this.btn_sel[i].iX,this.btn_sel[i].iY, 101, this.fRate, this.fRate, 0, 0, 0);
    //			M3DFast.gi().DrawTextEx(this.btn_sel[i].iX+this.btn_sel[i].iW/2,this.btn_sel[i].iY+this.btn_sel[i].iH/2,this.extsel[i].sel,0x80ffffff,(this.fRate*38),101,1,1,0,-2,-2);
    			M3DFast$1.gi().DrawText_2(this.btn_sel[i].iX+this.btn_sel[i].iW/2,this.btn_sel[i].iY+this.btn_sel[i].iH/2,this.extsel[i].sel,0x80000000,(this.fRate*38),101,1,1,0,-2,-2, 1, 0xffffffff);
    		}
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		var i;

    		for(i=0;i<3;i++)
    		{
    			if(this.btn_sel[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_sel[i].bCheck())
    				{
    					switch(this.extsel[i].type)
    					{
    					case 1://选择引导模式,1普通，2语音，3跳过
    						if(this.extsel[i].cs==1)
    						{//普通引导
    							BeginersGuide.iEventGuide=74;
    							//GmPlay.sop("aaaaaaaaaaaaaaaaaaaaaaaa");
    						}
    						XRecordFast.iExtHelp=this.extsel[i].cs;
    						GmPlay$1.x_record.SaveTo(XDefine$1.RECORDFILENAME);
    						XStat$1.gi().PopStat(1);
    						break;
    					case 2://确定,关闭引导窗口
    						XStat$1.gi().PopStat(1);
    						break;
    					case 3://自动寻路
    						XStat$1.gi().PopStat(1);
    						VisualBlock.iLastProcBase=-1;
    						//mapdialog.bDialoging=false;
    						MyAI.gi().FindNpc(this.extsel[i].cs,false,false);
    						break;
    					case 4://上一条
    						PreviousHelp();
    						break;
    					case 5://打开beginersguide
    						BeginersGuide.iEventGuide=this.extsel[i].cs;
    						XStat$1.gi().PopStat(1);
    						break;
    					}
    				}
    				return true;
    			}
    		}
    		return true;
    	}
    }

    ExtHelp.iWordSize;
    ExtHelp.iShowDelay=0;
    ExtHelp.iHead;
    ExtHelp.iTall;
    ExtHelp.iPrev;
    ExtHelp.extbuf=null;

    ExtHelp.eh;

    ExtHelp.Open=function()
    	{
    		var i,j;
    		if(ExtHelp.extbuf==null)
    		{
    			ExtHelp.iHead=0;
    			ExtHelp.iTall=0;
    			ExtHelp.iPrev=0;//向前指向
    			ExtHelp.extbuf=new Array(8);//
    			for(i=0;i<8;i++)
    			{
    				ExtHelp.extbuf[i]=new _EXTBUF();
    			}
    		}
    	//	GmPlay.sop1("222222=");
    		if(XStat$1.gi().iXStat!=XStat$1.GS_GAMEING && 
    				XStat$1.gi().iXStat!=XStat$1.GS_MYGOODSFRAME)return;
    	//	GmPlay.sop1("33333=");
    		if(XFight.bFighting)return;
    		if(BeginersGuide.gi().iGuideing!=-1)return;
    	//	GmPlay.sop1("44444=");
    		if(XStat$1.gi().bHaveStat(XStat$1.GS_EXTHELP))return;//当前正在提示中也要跳过
    	//	GmPlay.sop1("5555=");
    		if(ExtHelp.iShowDelay>0)
    		{
    			ExtHelp.iShowDelay--;
    			return;
    		}
    //		GmPlay.sop("ss"+ExtHelp.iShowDelay);
    		if(ExtHelp.iHead<ExtHelp.iTall)
    		{
    			j=ExtHelp.iHead%8;
    			ExtHelp.iHead++;
    	//		GmPlay.sop1("1111111111111111111="+j);
    			ExtHelp.eh=XStat$1.gi().PushStat(XStat$1.GS_EXTHELP);
    			_Init(ExtHelp.extbuf[j].detail,ExtHelp.extbuf[j].type1,ExtHelp.extbuf[j].cs1,ExtHelp.extbuf[j].s1,
    					ExtHelp.extbuf[j].type2,ExtHelp.extbuf[j].cs2,ExtHelp.extbuf[j].s2,
    					ExtHelp.extbuf[j].type3,ExtHelp.extbuf[j].cs3,ExtHelp.extbuf[j].s3);
    			

    //			GmPlay.sop1("22222222222");
    			ExtHelp.iShowDelay=20;//两次出框之间有3秒延迟
    		}
    	};
    	ExtHelp.PreviousHelp=function()
    	{//ExtHelp.iPrev往前
    		if(XStat$1.gi().iXStat!=XStat$1.GS_EXTHELP)return;
    		if(ExtHelp.iPrev<=0 || ExtHelp.iPrev<=ExtHelp.iTall-6)return;
    		else ExtHelp.iPrev--;
    		
    		var j=ExtHelp.iPrev%8;
    		if(ExtHelp.extbuf[j].type1==0)
    		{
    			ExtHelp.extbuf[j].type1=4;
    			//ExtHelp.extbuf[j].cs1
    			ExtHelp.extbuf[j].s1="上一条";
    		}
    		_Init(ExtHelp.extbuf[j].detail,ExtHelp.extbuf[j].type1,ExtHelp.extbuf[j].cs1,ExtHelp.extbuf[j].s1,
    				ExtHelp.extbuf[j].type2,ExtHelp.extbuf[j].cs2,ExtHelp.extbuf[j].s2,
    				ExtHelp.extbuf[j].type3,ExtHelp.extbuf[j].cs3,ExtHelp.extbuf[j].s3);
    ////		var j;
    //		if(ExtHelp.iHead<=0 || ExtHelp.iHead<=ExtHelp.iTall-8)return;
    //		else ExtHelp.iHead--;
    ////		j=ExtHelp.iHead%8;
    ////		if(ExtHelp.extbuf[j].type1==0 && ExtHelp.iHead>0 && ExtHelp.iHead>ExtHelp.iTall-8)
    ////		{
    ////			ExtHelp.extbuf[j].type1=4;
    ////			ExtHelp.extbuf[j].cs1=0;
    ////			ExtHelp.extbuf[j].s1="上一条";
    ////		}
    	};

    	ExtHelp.Init=function( pls)
    	{
    		if(1==1)return;
    		var i=ExtHelp.iTall%8;

    		ExtHelp.extbuf[i].detail=pls.GetNextString();
    		ExtHelp.extbuf[i].type1=pls.GetNextByte();
    		ExtHelp.extbuf[i].cs1=pls.GetNextInt();
    		ExtHelp.extbuf[i].s1=pls.GetNextString();
    		ExtHelp.extbuf[i].type2=pls.GetNextByte();
    		ExtHelp.extbuf[i].cs2=pls.GetNextInt();
    		ExtHelp.extbuf[i].s2=pls.GetNextString();
    		ExtHelp.extbuf[i].type3=pls.GetNextByte();
    		ExtHelp.extbuf[i].cs3=pls.GetNextInt();
    		ExtHelp.extbuf[i].s3=pls.GetNextString();
    		
    		if(ExtHelp.iTall>0)
    		{
    			var eb=ExtHelp.extbuf[(ExtHelp.iTall-1)%8];
    			if(eb.detail==ExtHelp.extbuf[i].detail)
    			{
    				if(this.ExtHelp.iHead<ExtHelp.iTall)return;
    			}
    		}
    		ExtHelp.iTall++;
    		/*
    		ExtHelp.eh=(ExtHelp) XStat.gi().PushStat(XStat.GS_EXTHELP);
    		ExtHelp.eh.sDetail=pls.GetNextString();
    		ExtHelp.eh.extsel[0].type=pls.GetNextByte();
    		ExtHelp.eh.extsel[0].cs=pls.GetNextInt();;
    		ExtHelp.eh.extsel[0].sel=pls.GetNextString();
    		ExtHelp.eh.extsel[1].type=pls.GetNextByte();
    		ExtHelp.eh.extsel[1].cs=pls.GetNextInt();;
    		ExtHelp.eh.extsel[1].sel=pls.GetNextString();
    		ExtHelp.eh.extsel[2].type=pls.GetNextByte();
    		ExtHelp.eh.extsel[2].cs=pls.GetNextInt();;
    		ExtHelp.eh.extsel[2].sel=pls.GetNextString();*/
    	};
    	ExtHelp.Initex=function( detail,
    			 type0, cs0, sel0,
    			 type1, cs1, sel1,
    			 type2, cs2, sel2)
    	{
    		if(1==1)return;
    //		GmPlay.sop("inited ---- "+detail);
    		var i=ExtHelp.iTall%8;
    		ExtHelp.extbuf[i].detail=detail;
    		ExtHelp.extbuf[i].type1=type0;
    		ExtHelp.extbuf[i].cs1=cs0;
    		ExtHelp.extbuf[i].s1=sel0;
    		ExtHelp.extbuf[i].type2=type1;
    		ExtHelp.extbuf[i].cs2=cs1;
    		ExtHelp.extbuf[i].s2=sel1;
    		ExtHelp.extbuf[i].type3=type2;
    		ExtHelp.extbuf[i].cs3=cs2;
    		ExtHelp.extbuf[i].s3=sel2;
    		ExtHelp.iTall++;
    	};
    	ExtHelp._Init=function( detail,
    			 type0, cs0, sel0,
    			 type1, cs1, sel1,
    			 type2, cs2, sel2)
    	{
    		ExtHelp.eh.sDetail=detail;
    		ExtHelp.eh.extsel[0].type=type0;
    		ExtHelp.eh.extsel[0].cs=cs0;
    		ExtHelp.eh.extsel[0].sel=sel0;
    		ExtHelp.eh.extsel[1].type=type1;
    		ExtHelp.eh.extsel[1].cs=cs1;
    		ExtHelp.eh.extsel[1].sel=sel1;
    		ExtHelp.eh.extsel[2].type=type2;
    		ExtHelp.eh.extsel[2].cs=cs2;
    		ExtHelp.eh.extsel[2].sel=sel2;
    		ExtHelp.iWordSize=38;
    	};

    class E_ITEM
    {
    	constructor()
    	{
    		
    	}
    	
    	intValue( vid)
    	{
    		return parseInt(this.strValue(vid));
    	}
    	strValue( vid)
    	{
    		var i;
    		for(i=0;i<this.iValueCount;i++)
    		{
    			if(this.values[i].iVid==vid)return this.values[i].sValue;
    		}
    		return "-1";
    	}
    }

    class NormalItem
    {
    //	public int iItemId;
    //	public int iProc;
    constructor()
    {
    	
    }
    }

    class NormalMission
    {
    //	public int iMid;
    //	public int iType;//=0
    //	public int iMPoint;//de_mission point
    	
    	constructor()
    	{
    		var i;
    		this.bUseing=false;
    		this.sName="";
    		this.iItemCount=0;
    		this.ni=new Array(NormalMission.MAXNORMALITEM);
    		for(i=0;i<NormalMission.MAXNORMALITEM;i++)
    		{
    			this.ni[i]=new NormalItem();
    		}
    		this.bDetailed=false;
    	}
    }
    NormalMission.MAXNORMALITEM=10;

    class SpecialItem
    {
    /*	public int iMType;//0条件， 1奖励
    	public int iSType;//0物品条件
    	public int iV1,iV2,iV3;
    	public int iProc;
    	public String sDetail;*/
    	constructor()
    	{
    		this.sDetail="";
    	}
    }

    class SpecialMission
    {
    /*	public int iMid;
    	
    	public int iType;//>=1
    	public String sDetail;//detail
    	public int iMPoint;//特殊任务类型
    	public int iCount;//当前次数
    	*/
    	constructor()
    	{
    		var i;
    		this.bUseing=false;
    		this.iItemCount=0;
    		this.si=new Array(SpecialMission.MAXSPECIALITEM);//
    		for(i=0;i<SpecialMission.MAXSPECIALITEM;i++)
    		{
    			this.si[i]=new SpecialItem();
    		}
    		this.sName="";
    		this.bDetailed=false;
    	}
    }
    SpecialMission.MAXSPECIALITEM=10;

    class MissionFrame extends BaseClass
    {
    	
    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		MissionFrame.iW=800;
    		MissionFrame.iH=600;
    		
    		MissionFrame.iX=(GmConfig$1.SCRW-MissionFrame.iW)/2;
    		MissionFrame.iY=(GmConfig$1.SCRH-MissionFrame.iH)/2;
    		
    		this.iNameW=130;
    		
    		this.iPoint=-1;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(MissionFrame.iX+MissionFrame.iW-35, MissionFrame.iY-25, 60, 60);
    		
    		
    		this.btn_missionNamelist=new Array(MyMission.MAXMISSIONCOUNT);//
    		for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    		{
    			this.btn_missionNamelist[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_missionNamelist[i].InitButton("按钮2");
    //			this.btn_missionNamelist[i].Move(MissionFrame.iX+50, MissionFrame.iY+45+i*50, 128, 32);
    		}
    		
    		
    		this.btn_sort=new Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.btn_sort[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_sort[i].InitButton("htab4");
    			this.btn_sort[i].Move(MissionFrame.iX+MissionFrame.iW-15, MissionFrame.iY+i*50+20, 140, 50);
    		}
    		this.btn_sort[0].sName="全部";
    		this.btn_sort[1].sName="门派任务";
    		this.btn_sort[2].sName="剧情任务";
    		
    		this.btn_cancel=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_cancel.InitButton("按钮1");
    		this.btn_cancel.sName="取消任务";
    		this.btn_cancel.Move(MissionFrame.iX+MissionFrame.iW-25-20-110-195-195, MissionFrame.iY+MissionFrame.iH-25-20-53, 161, 53);
    		
    		this.btn_findway=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_findway.InitButton("按钮1");
    		this.btn_findway.sName="自动寻路";
    		this.btn_findway.Move(MissionFrame.iX+MissionFrame.iW-25-20-110-195, MissionFrame.iY+MissionFrame.iH-25-20-53, 161, 53);
    		
    		this.btn_prompt=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_prompt.InitButton("按钮1_110");
    		this.btn_prompt.sName="提 示";
    		this.btn_prompt.Move(MissionFrame.iX+MissionFrame.iW-25-20-110, MissionFrame.iY+MissionFrame.iH-25-20-53, 110, 53);
    		
    		this.bOpenPrompt=false;
    		this.bShowPrompt=false;
    		
    		this.btn_page=new Array(2);//
    		for(i=0;i<2;i++)
    		{
    			this.btn_page[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_page[i].InitButton("右侧标签");
    			this.btn_page[i].Move(MissionFrame.iX+MissionFrame.iW-15, MissionFrame.iY+40+125*i, 50, 140);
    		}
    		
    		this.btn_go=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_go.InitButton("普通按钮140_55");
    		this.btn_go.sName="前往";

    		this.iPage=0;
    		this.iScrollY=0;
    		this.iLockStat=0;
    		
    		this.pc_main=XmsEngine.pxe.FindMain("七国");
    		this.pc_mission=this.pc_main.FindFirst("可接任务列表", 3);
    		
    		this.btn_price=new Array(5);//
    		for(i=0;i<5;i++)
    		{
    			this.btn_price[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_price[i].bSingleButton=true;
    		}
    		this.pc_price=new Array(5);//
    		this.ishowdetail=-1;
    		this.gd=new Goods();
    	}
    	DrawNormalMission( nm)
    	{//剧情任务
    		var i;
    		var st;
    		var pde=MyMission.de_mission.fdata(nm.iMPoint);
    		
    		FormatString.gi().FormatEx(MyMission.de_mission.strValue(nm.iMPoint, 0, 23), this.iDw-20, 24,0,0,32);
    		FormatString.gi().Draw(this.iDx1+10,this.iDy1+10);
    		st="";
    		
    		if(this.bOpenPrompt)this.sPrompt="提示：#e";
    //		GmPlay.sop("nm.iItemCount="+nm.iItemCount);
    		for(i=0;i<nm.iItemCount;i++)
    		{
    //			GmPlay.sop("nm.ni[i].iItemId="+nm.ni[i].iItemId);
    			var pie=pde.fitem(nm.ni[i].iItemId);
    			if(pie==null)continue;
    			switch(pie.iType)
    			{
    			case 10://npc对话'
    				MyAI.gi().iDestNpcId=pde.intValue(5);
    				MyAI.gi().sDestDetail=pde.strValue(16);
    				this.bCanFindWay=true;
    				st+="#e#cffffff目标"+(i+1)+":#c00ff00"+pie.strValue(16);
    				if(this.bOpenPrompt)
    				{
    					var npcid,mapid,atx,aty;
    					npcid=pie.intValue(5);
    					mapid=GmPlay$1.de_npc.intValue(npcid, 0, 4);
    					atx=GmPlay$1.de_npc.intValue(npcid, 0, 5);
    					aty=GmPlay$1.de_npc.intValue(npcid, 0, 6);
    					this.sPrompt+="#cff0000"+GmPlay$1.de_npc.strValue(npcid, 0, 1)+"#cffffff在#cff0000"+GmPlay$1.de_map.strValue(mapid, 0, 1);
    					if(atx>0 && aty>0)this.sPrompt+="("+atx/16+","+aty/16+")";
    				}
    				break;
    			case 14://杀怪
    				st+="#e#cffffff目标"+(i+1)+":#c00ff00"+pie.strValue(17);
    				if(this.bOpenPrompt)
    				{
    					this.sPrompt+="#cff0000"+pie.strValue(17);
    				}
    				break;
    			case 15://交物品
    				MyAI.gi().iDestNpcId=pde.intValue(33);
    				MyAI.gi().sDestDetail=pde.strValue(18);
    				this.bCanFindWay=true;
    				st+="#e#cffffff目标"+(i+1)+":#c00ff00"+pie.strValue(18);
    				if(this.bOpenPrompt)
    				{
    					this.sPrompt+="#cff0000"+pie.strValue(17);
    				}
    				break;
    			case 20://npc战斗
    				MyAI.gi().iDestNpcId=pde.intValue(15);
    				MyAI.gi().sDestDetail=pde.strValue(24);
    				this.bCanFindWay=true;
    				st+="#e#cffffff目标"+(i+1)+":#c00ff00"+pie.strValue(24);
    				if(this.bOpenPrompt)
    				{
    					var npcid,mapid,atx,aty;
    					npcid=pie.intValue(15);
    					mapid=GmPlay$1.de_npc.intValue(npcid, 0, 4);
    					atx=GmPlay$1.de_npc.intValue(npcid, 0, 5);
    					aty=GmPlay$1.de_npc.intValue(npcid, 0, 6);
    //					GmPlay.sop("a="+npcid+",b="+mapid);
    					this.sPrompt+="#cff0000"+GmPlay$1.de_npc.strValue(npcid, 0, 1)+"#cffffff在#cff0000"+GmPlay$1.de_map.strValue(mapid, 0, 1);
    					if(atx>0 && aty>0)this.sPrompt+="("+atx/16+","+aty/16+")";
    					this.sPrompt+="#e#c0000ff需战斗#e建议组队前往";
    				}
    				break;
    			case 26://捕捉怪物
    				st+="#e#cffffff目标"+(i+1)+":#c00ff00"+pie.strValue(32);
    				break;
    			}
    //			GmPlay.sop("="+pie.iType);
    		}
    		
    		if(this.bOpenPrompt)
    		{
    			this.bOpenPrompt=false;
    			this.bShowPrompt=true;
    		}
    		if(st.length>2)
    		{
    			do
    			{
    				//GmPlay.sop(s);
    				var tmp=st.substring(0, 2);
    				//GmPlay.sop(tmp);
    				if(tmp=="#e")
    				{
    					st=st.substring(2, st.length);
    				}
    				else break;
    			}
    			while(st.length>2);
    		}
    		FormatString.gi().FormatEx(st, this.iDw-20, 24,0,0,26);
    		FormatString.gi().Draw(this.iDx2+10,this.iDy2+10);
    	}
    	DrawSpecialMission( sm)
    	{
    		var i,j;
    		var st;
    		FormatString.gi().FormatEx(sm.sDetail, this.iDw-20, 24,0,0,32);
    		FormatString.gi().Draw(this.iDx1+10,this.iDy1+10);
    		st="";
    //		if(sm.iMPoint==1 || sm.iMPoint==35)
    		{
    			if(this.bCC(sm.iMPoint))
    			{
    				this.bCanCancel=true;
    				this.iCancelMid=sm.iMid;
    			}
    		}
    		if(this.bOpenPrompt)this.sPrompt="提示：#e";
    		for(i=0;i<sm.iItemCount;i++)
    		{
    			if(sm.si[i].iMType==0)
    			{//任务目标
    				if(sm.si[i].iSType==9)
    				{//杀怪数量
    					st+="#e#cffffff目标"+(i+1)+":#c00ff00"+sm.si[i].sDetail+"("+sm.si[i].iProc+"/"+sm.si[i].iV2+")";
    				}
    				else if(sm.si[i].iProc>=100)
    				{//绿色完成
    					st+="#e#cffffff目标"+(i+1)+":#c00ff00"+sm.si[i].sDetail+"(已完成)";//+"#c00ff00(完成)";
    				}
    				else
    				{//黄色未完成
    					switch(sm.si[i].iSType)
    					{
    					case 1://找到npc  v1npcid
    					case 5://与静态npc战斗
    					case 7://找到静态npc，需要对话完成
    					case 8://与静态npc战斗
    						MyAI.gi().iDestNpcId=sm.si[i].iV1;
    						MyAI.gi().sDestDetail=sm.si[i].sDetail;
    						this.bCanFindWay=true;
    						break;
    					case 12://等待剩余时间
    						//GmPlay.sop("aa"+(GmPlay.iNowMillis-GmMe.iMillis)/1000);//从进入游戏到现在，过去了多少秒
    						//GmPlay.sop("bb"+(sm.si[i].iV1-GmMe.iSecond));//
    						j=(sm.si[i].iV1-(GmPlay$1.iNowMillis-GmMe$1.iMillis)/1000-GmMe$1.iSecond)/60;
    						//
    						sm.si[i].sDetail="剩余"+j+"分钟";
    						break;
    					}
    					st+="#e#cffffff目标"+(i+1)+":#cffff00"+sm.si[i].sDetail;
    					if(this.bOpenPrompt)
    					{
    						switch(sm.si[i].iSType)
    						{
    						case 0://找到物品 v1物品id v2物品数量 v3进度
    							var gtype;
    							gtype=GmPlay$1.de_goods.intValue(sm.si[i].iV1, 0, 16);
    							if(gtype>=0)
    							{
    								this.sPrompt+="#e#cffffff装备可通过图纸+材料打造获得";
    								switch(GmPlay$1.de_goods.intValue(sm.si[i].iV1, 0, 9))
    								{
    								case 0:this.sPrompt+="#e#cffffff0级装备可在乡水镇装备商人处购买";break;
    								case 10:this.sPrompt+="#e#cffffff10级装备可在西阳城装备商人处购买";break;
    								case 20:this.sPrompt+="#e#cffffff20级装备可在郢城装备商人处购买";break;
    								case 30:this.sPrompt+="#e#cffffff30级装备可在临淄城装备商人处购买";break;
    								case 40:this.sPrompt+="#e#cffffff40级装备可在咸阳城装备商人处购买";break;
    								case 50:
    								case 60:
    									break;
    								}
    								break;
    							}
    							gtype=GmPlay$1.de_goods.intValue(sm.si[i].iV1, 0, 27);
    							if(gtype>=0)
    							{
    								if(gtype<=2)
    								{
    									switch(sm.si[i].iV1)
    									{
    									case 65:this.sPrompt+="#e#cffffff竹叶可在【乡水镇】药品商购买";break;
    									case 66:this.sPrompt+="#e#cffffff香草可在【乡水镇】或【西阳城】药品商购买";break;
    									case 67:this.sPrompt+="#e#cffffff薄荷可在【西阳城】或【郢城】药品商购买";break;
    									case 68:this.sPrompt+="#e#cffffff夏枯草可在【乡水镇】药品商购买";break;
    									case 69:this.sPrompt+="#e#cffffff石蜜可在【乡水镇】或【西阳城】药品商购买";break;
    									case 70:this.sPrompt+="#e#cffffff止血草可在【西阳城】药品商购买";break;
    									case 71:this.sPrompt+="#e#cffffff甘草可在【乡水镇】或【郢城】药品商购买";break;
    									case 72:this.sPrompt+="#e#cffffff勺药可在【乡水镇】或【临淄】药品商购买";break;
    									case 73:this.sPrompt+="#e#cffffff蜂蜜可在【西阳城】或【临淄】药品商购买";break;
    									case 74:this.sPrompt+="#e#cffffff松脂可在【西阳城】药品商购买";break;
    									
    									case 75:this.sPrompt+="#e#cffffff云母可在【郢城】药品商购买";break;
    									case 76:this.sPrompt+="#e#cffffff麝香可在【临淄】药品商购买";break;
    									case 77:this.sPrompt+="#e#cffffff赤芝可在【咸阳】药品商购买";break;
    									case 78:this.sPrompt+="#e#cffffff人参可在【郢城】药品商购买";break;
    									case 79:this.sPrompt+="#e#cffffff鹿茸可在【临淄】药品商购买";break;
    									case 80:this.sPrompt+="#e#cffffff熊胆可在【临淄】或【咸阳】药品商购买";break;
    									case 81:this.sPrompt+="#e#cffffff雄黄可在【郢城】或【咸阳】药品商购买";break;
    									case 82:this.sPrompt+="#e#cffffff当归可在【临淄】或【咸阳】药品商购买";break;
    									case 83:this.sPrompt+="#e#cffffff白石英可在【郢城】或【咸阳】药品商购买";break;
    									case 84:this.sPrompt+="#e#cffffff紫石英可在【咸阳】药品商购买";break;
    									}
    								}
    								else this.sPrompt+="3级草药通过挖宝或副本获得";
    								break;
    							}
    							/*
     咸阳药店  ：当归，白石英，紫石英，赤芝，熊胆，雄黄
    							 * */
    							gtype=GmPlay$1.de_goods.intValue(sm.si[i].iV1, 0, 24);
    							if(gtype>=0)
    							{
    								if(gtype<=2)this.sPrompt+="#e#cffffff1级和2级材料可在野外战斗中掉落，也可在挖宝时获得";
    								else this.sPrompt+="3级材料通过挖宝获得或副本掉落";
    								break;
    							}
    							break;
    						case 1://找到npc  v1npcid
    						case 5://与静态npc战斗
    						case 7://找到静态npc，需要对话完成
    						case 8://与静态npc战斗
    							var npcid,mapid,atx,aty;
    							npcid=sm.si[i].iV1;
    							mapid=GmPlay$1.de_npc.intValue(npcid, 0, 4);
    							atx=GmPlay$1.de_npc.intValue(npcid, 0, 5);
    							aty=GmPlay$1.de_npc.intValue(npcid, 0, 6);
    							this.sPrompt+="#cff0000"+GmPlay$1.de_npc.strValue(npcid, 0, 1)+"#cffffff在#cff0000"+GmPlay$1.de_map.strValue(mapid, 0, 1);
    							if(atx>0 && aty>0)this.sPrompt+="("+atx/16+","+aty/16+")";
    							break;
    						case 2://与动态npc战斗(强盗任务，师门冒充)
    						case 6://与动态npc交谈
    						case 9://杀狼
    							this.sPrompt+="仔细查看任务描述";
    							break;
    						case 3://抓到宠物上交
    							this.sPrompt+="#cffffff";
    							switch(sm.si[i].iV1)
    							{
    							case 3:this.sPrompt+="野猪在郊外抓";break;
    							case 1:this.sPrompt+="狼在郊外或西阳山道抓";break;
    							case 8:this.sPrompt+="盗贼在西阳山道或渡口抓";break;
    							case 9:this.sPrompt+="僵尸在渡口或大禹水道抓";break;
    							case 10:this.sPrompt+="鲛人在大禹水道或平原山陵抓";break;
    							case 11:this.sPrompt+="花魅在平原山陵或巫山抓";break;
    							case 12:this.sPrompt+="狐狸精在巫山或太行山抓";break;
    							case 2:this.sPrompt+="阴灵在太行山或云蒙山抓";break;
    							case 4:this.sPrompt+="机关兽在云蒙山或烈焰峰抓";break;
    							case 5:this.sPrompt+="火妖在烈焰峰或函谷关抓";break;
    							case 7:this.sPrompt+="修罗在函谷关或长城抓";break;
    							case 14:this.sPrompt+="小刑天在长城或阴山抓";break;
    							case 15:this.sPrompt+="蛟龙在阴山抓";break;
    							}
    							break;
    						case 4://巡逻
    							this.sPrompt+="在任务提示地图来回走动";
    							break;
    						}
    					}
    				}
    			}
    		}
    		st+="#e";
    		for(i=0;i<sm.iItemCount;i++)
    		{
    			if(sm.si[i].iMType==1)
    			{//任务奖励
    				st+="#e任务奖励"+(i+1)+":";
    			}
    		}
    		if(this.bOpenPrompt)
    		{
    			this.bOpenPrompt=false;
    			this.bShowPrompt=true;
    		}
    		if(st.length>2)
    		{
    			do
    			{
    				//GmPlay.sop(s);
    				var tmp=st.substring(0, 2);
    				//GmPlay.sop(tmp);
    				if(tmp=="#e")
    				{
    					st=st.substring(2, st.length);
    				}
    				else break;
    			}
    			while(st.length>2);
    		}
    		FormatString.gi().FormatEx(st, this.iDw-20, 24,0,0,26);
    		FormatString.gi().Draw(this.iDx2+10,this.iDy2+10);
    	}
    	
    	Draw_0()
    	{//已接任务
    		var offx,offy,w,h;
    		offx=MissionFrame.iX+25+185+20;
    		offy=MissionFrame.iY+25;
    		w=MissionFrame.iW-185-50-20;
    		h=MissionFrame.iH-50;
    		this.iDw=w-40;
    		DrawMode$1.new_framein(offx,offy,w,h);
    		
    		M3DFast$1.gi().DrawText_2(offx+20, offy+20, "任务描述", 0xffffe0a0, 28, 101, 1, 1, 0, 0, 0, 3, 0xff000000);
    		this.iDx1=offx+20;
    		this.iDy1=offy+20+30;
    		DrawMode$1.new_frameon(this.iDx1,this.iDy1, this.iDw, 180,0);
    		
    		offy+=20+30+180;
    		M3DFast$1.gi().DrawText_2(offx+20, offy+20, "任务目标", 0xffffe0a0, 28, 101, 1, 1, 0, 0, 0, 3, 0xff000000);
    		this.iDx2=offx+20;
    		this.iDy2=offy+20+30;
    		DrawMode$1.new_frameon(this.iDx2,this.iDy2, this.iDw, 180,0);
    		
    		var i,x,y;
    		//左侧名称列表
    		offx=MissionFrame.iX+25;
    		offy=MissionFrame.iY+25;
    		w=185;
    		h=MissionFrame.iH-50;
    		DrawMode$1.new_framein(offx,offy,w,h);
    		offy+=10;
    		
    		DrawMode$1.frame_type1("列表标题a20_50", offx+10, offy, w-20, 20);
    		M3DFast$1.gi().DrawTextEx(offx+w/2,offy+25, "剧情任务", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    		offy+=50;
    		this.iCount=0;
    		for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    		{
    			if(MyMission.m.nmlist[i].bUseing)
    			{
    //				if(iFilter!=0 && iFilter!=2)continue;
    				x=offx+10;
    				y=offy;
    				offy+=50;
    				
    				this.pm3f.FillRect_2D(x, y, x+w-20, y+50,this.iCount%2==0?0xff3c739a:0xff6b98b9);
    				if(this.iPoint==this.iCount)
    				{
    					//this.pm3f.FillRect_2D(x, y, x+w-20, y+50,0xff6b98b9);
    					this.DrawNormalMission(MyMission.m.nmlist[i]);
    					DrawMode$1.frame_type2("黄色透明框a25_25", x, y, w-20, 50,25,25);
    				}
    				
    				this.pm3f.DrawTextEx(x+(w-20)/2,y+25, MyMission.m.nmlist[i].sName, 0xffffffff, 25, 101, 1, 1, 0, -2, -2);
    				this.btn_missionNamelist[this.iCount].Move(x, y, w-20, 50);
    				
    				this.iCount++;
    			}
    		}
    		DrawMode$1.frame_type1("列表标题a20_50", offx+10, offy, w-20, 20);
    		M3DFast$1.gi().DrawTextEx(offx+w/2,offy+25, "普通任务", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    		offy+=50;
    		for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    		{
    			if(MyMission.m.smlist[i].bUseing)
    			{
    				if(MyMission.m.smlist[i].iType==1)
    				{//门派任务
    //					if(iFilter!=0 && iFilter!=1)continue;
    				}
    				x=offx+10;
    				y=offy;
    				offy+=50;
    				this.pm3f.FillRect_2D(x, y, x+w-20, y+50,this.iCount%2==0?0xff3c739a:0xff6b98b9);
    				if(this.iPoint==this.iCount)
    				{
    					//this.pm3f.FillRect_2D(x, y, x+w-20, y+50,0xff6b98b9);
    					this.DrawSpecialMission(MyMission.m.smlist[i]);
    					DrawMode$1.frame_type2("黄色透明框a25_25", x, y, w-20, 50,25,25);
    				}
    				this.pm3f.DrawTextEx(x+(w-20)/2,y+25, MyMission.m.smlist[i].sName, 0xffffffff, 25, 101, 1, 1, 0, -2, -2);
    				this.btn_missionNamelist[this.iCount].Move(x, y, w-20, 50);
    				
    				this.iCount++;
    			}
    		}
    		if(this.bCanCancel)this.btn_cancel.Draw();
    		if(this.bCanFindWay)this.btn_findway.Draw();
    		this.btn_prompt.Draw();
    	}
    	 bCC( mp)
    	{
    		var pc=this.pc_mission.pca.phead;
    		var pc_id;
    		var pn;
    		var pw;
    		while(pc!=null)
    		{
    			pc_id=pc.FindClass("任务id列表");
    			if(pc_id!=null)
    			{
    				pn=pc_id.pca.phead;
    				while(pn!=null)
    				{
    					if(mp==pn.iNumber)
    					{
    						pw=pc.FindWord("是否可放弃");
    						if(pw!=null)
    						{
    							if(pw.pword=="是")return true;
    						}
    						return false;
    					}
    					pn=pn.pdown;
    				}
    			}
    			pc=pc.pdown;
    		}
    		return false;
    	}
    	 IsInList( pc)
    	{///是否在已接列表中
    		var i;
    		var pn=pc.pca.phead;
    		while(pn!=null)
    		{
    			for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    			{
    				if(MyMission.m.smlist[i].bUseing)
    				{
    					if(MyMission.m.smlist[i].iMPoint==pn.iNumber)return true;
    				}
    			}
    			pn=pn.pdown;
    		}
    		return false;
    	}
    	 IsFinished( name)
    	{
    		if(name=="门派任务")
    		{
    			if((GmMe$1.me.iFlag[1]%1000)>=20)return true;
    		}
    		else if(name=="除害任务")
    		{
    			if((GmMe$1.me.iFlag[12]&(1<<6))!=0)return true;
    		}
    		else if(name=="追捕强盗")
    		{
    			if((GmMe$1.me.iFlag[1]/1000%1000)>=30)return true;
    		}
    		else if(name=="押镖任务")
    		{
    			if((GmMe$1.me.iFlag[1]/1000%1000)>=15)return true;
    		}
    		else if(name=="宝图任务")
    		{
    			if((GmMe$1.me.iFlag[60]&0xf)>=10)return true;
    		}
    		else if(name=="每日赛跑")
    		{
    			if((GmMe$1.me.iFlag[15]&32)!=0)return true;
    		}
    		else if(name=="护法任务")
    		{
    			if((GmMe$1.me.iFlag[9]%1000)>=30)return true;
    		}
    		else if(name=="帮派-玄武任务")
    		{
    			if((GmMe$1.me.iFlag[15]&2)!=0)return true;
    		}
    		else if(name=="帮派-朱雀任务")
    		{
    			if((GmMe$1.me.iFlag[15]&4)!=0)return true;
    		}
    		else if(name=="帮派-青龙任务")
    		{
    			if((GmMe$1.me.iFlag[15]&1)!=0)return true;
    		}
    		else if(name=="帮派-白虎任务")
    		{
    			if((GmMe$1.me.iFlag[15]&128)!=0)return true;
    		}
    		else if(name=="手艺任务")
    		{
    			if((GmMe$1.me.iFlag[15]&16)!=0)return true;
    		}
    		else if(name=="执法任务")
    		{
    			if((GmMe$1.me.iFlag[10]%1000)>=10)return true;
    		}
    		else if(name=="跑环任务")
    		{
    //			return true;
    		}

    		return false;
    	}
    	Draw_1()
    	{//可接任务
    		var offx,offy,w,h;
    		var x,y;
    		
    		offx=MissionFrame.iX+25+185+20;
    		offy=MissionFrame.iY+25;
    		w=MissionFrame.iW-185-50-20;
    		h=MissionFrame.iH-50;
    		this.iDw=w-40;
    		DrawMode$1.new_framein(offx,offy,w,h);
    		
    		M3DFast$1.gi().DrawText_2(offx+20, offy+20, "任务简介", 0xffffe0a0, 28, 101, 1, 1, 0, 0, 0, 3, 0xff000000);
    		this.iDx1=offx+20;
    		this.iDy1=offy+20+30;
    		DrawMode$1.new_frameon(this.iDx1,this.iDy1, this.iDw, 180,0);
    		
    		offy+=20+30+180;
    		M3DFast$1.gi().DrawText_2(offx+20, offy+20, "任务奖励", 0xffffe0a0, 28, 101, 1, 1, 0, 0, 0, 3, 0xff000000);
    		this.iDx2=offx+20;
    		this.iDy2=offy+20+30;
    		DrawMode$1.new_frameon(this.iDx2,this.iDy2, this.iDw, 180,0);

    		var pc=this.pc_mission.pca.phead;
    		var pn;
    		var pw;
    		var pc_point=null;
    		
    		offx=MissionFrame.iX+25;
    		offy=MissionFrame.iY+25;
    		w=185;
    		h=MissionFrame.iH-50;
    		DrawMode$1.new_framein(offx,offy,w,h);
    		offy+=10;
    		
    		DrawMode$1.frame_type1("列表标题a20_50", offx+10, offy, w-20, 20);
    		M3DFast$1.gi().DrawTextEx(offx+w/2,offy+25, "可接任务", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    		offy+=50;
    		
    		this.CX=MissionFrame.iX+25;
    		this.CY=MissionFrame.iY+25+10+50;
    		this.CW=185;
    		this.CH=MissionFrame.iH-120;
    		M3DFast$1.gi().SetViewClip(this.CX,this.CY,this.CX+this.CW,this.CY+this.CH);
    		this.iCount=0;
    		while(pc!=null)
    		{
    //			GmPlay.sop(""+pc.sName);
    			pn=pc.FindNumber("出现等级");
    			if(GmMe$1.me.rbs.iLev<pn.iNumber);//等级未达
    			else if(this.IsInList(pc.FindClass("任务id列表")));//已接
    			else if(this.IsFinished(pc.sName));//已完成上限
    			else
    			{
    //				GmPlay.sop("show");
    				x=offx+10;
    				y=offy-this.iScrollY;
    				offy+=50;

    				this.pm3f.FillRect_2D(x, y, x+w-20, y+50,this.iCount%2==0?0xff3c739a:0xff6b98b9);
    				if(this.iPoint==this.iCount)
    				{
    					pc_point=pc;
    					DrawMode$1.frame_type2("黄色透明框a25_25", x, y, w-20, 50,25,25);
    				}
    				
    				this.pm3f.DrawTextEx(x+(w-20)/2,y+25, pc.sName, 0xffffffff, 25, 101, 1, 1, 0, -2, -2);
    				this.btn_missionNamelist[this.iCount].Move(x, y, w-20, 50);
    				
    				this.iCount++;
    			}
    			pc=pc.pdown;
    		}
    		M3DFast$1.gi().NoClip();
    		this.iPriceCount=0;
    		if(pc_point!=null)
    		{//画简介
    			pw=pc_point.FindWord("任务简介");
    			FormatString.gi().FormatEx(pw.pword, this.iDw-20, 24,0,0,32);
    			FormatString.gi().Draw(this.iDx1+10, this.iDy1+10);
    			
    			pc=pc_point.FindClass("任务奖励");
    			pc=pc.pca.phead;
    			while(pc!=null)
    			{
    				pn=pc.FindNumber("物品id");
    				pw=pc.FindWord("物品介绍");
    				GmPlay$1.xani_nui3.DrawAnima(this.iDx2+50+this.iPriceCount*120, this.iDy2+50, "物品格子",0);
    				GmPlay$1.xani_ngoods.DrawAnima_aa(this.iDx2+50+this.iPriceCount*120, this.iDy2+50, GmPlay$1.de_goods.strValue(pn.iNumber, 0, 10),0);
    			//	GmPlay.sop(""+GmPlay.de_goods.strValue(pn_gid.iNumber, 0, 10));
    				
    				this.pc_price[this.iPriceCount]=pc;
    				this.btn_price[this.iPriceCount].Move(this.iDx2+50+this.iPriceCount*120, this.iDy2+50, 80,80);
    				this.iPriceCount++;
    				pc=pc.pdown;
    			}
    			
    			pn=pc_point.FindNumber("前往npcid");
    			if(pn!=null)
    			{
    				this.iGoToNpcId=pn.iNumber;
    				this.btn_go.Move(MissionFrame.iX+MissionFrame.iW-25-140-20, MissionFrame.iY+MissionFrame.iH-25-55-20, 140, 55);
    				this.btn_go.Draw();
    			}
    			else this.iGoToNpcId=-1;
    		}
    		
    		if(this.ishowdetail>=0)
    		{//物品介绍
    			pn=this.pc_price[this.ishowdetail].FindNumber("物品id");
    			pw=this.pc_price[this.ishowdetail].FindWord("物品介绍");
    			if(pw!=null)
    			{
    				GoodsDraw.new_DrawDetailEx1(pn.iNumber,this.btn_price[this.ishowdetail].iX, this.btn_price[this.ishowdetail].iY,pw.pword);
    			}
    			else
    			{
    				this.gd.SetAtt(0, pn.iNumber, 1, 0, 0, 0, 0, 0, 0, 0, 0);
    				GoodsDraw.new_DrawDetail(this.gd,this.btn_price[this.ishowdetail].iX, this.btn_price[this.ishowdetail].iY,0);
    			}
    		}
    	}
    	Draw()
    	{
    		var i;
    		
    		this.bCanCancel=false;
    		this.bCanFindWay=false;
    		//12.20   画左按钮图标、文字、以及 基本大框
    //		DrawMode.ui3_BaseFrame4(MissionFrame.iX,MissionFrame.iY,"快","捷","操","作");
    //		DrawMode.ui3_BaseFrame2(MissionFrame.iX,MissionFrame.iY,"任","务");
    		DrawMode$1.new_baseframe2(MissionFrame.iX, MissionFrame.iY, MissionFrame.iW, MissionFrame.iH, "任", "务");

    		//12.18
    //		GmPlay.xani_ui3.DrawAnima(MissionFrame.iX+210, MissionFrame.iY, "大框分割线",0);
    		this.btn_close.Draw();
    		
    		for(i=0;i<2;i++)
    		{
    			if(this.iPage==i)
    			{
    				this.btn_page[i].bMouseIn=true;
    				this.btn_page[i].bMouseDown=true;
    			}
    			this.btn_page[i].Draw();
    			
    			DrawMode$1.new_lableword4(MissionFrame.iX+MissionFrame.iW-15, MissionFrame.iY+50+130*0-4, 40, 70,this.iPage==0,"已","接","任","务");
    			DrawMode$1.new_lableword4(MissionFrame.iX+MissionFrame.iW-15, MissionFrame.iY+50+130*1-8, 40, 70,this.iPage==1,"可","接","任","务");
    		}
    		
    		switch(this.iPage)
    		{
    		case 0://已接任务
    			this.Draw_0();
    			break;
    		case 1://可接任务
    			this.Draw_1();
    			break;
    		}

    		if(Confirm1.end(Confirm1.CONFIRM_CANCELMISSION))
    		{
    			if(Confirm1.bConfirm)
    			{//同意放弃
    				GmProtocol$1.gi().s_CancelMission(this.iCancelMid);
    //				XStat.gi().PopStat(1);
    			}
    		}
    		
    		if(this.bShowPrompt)
    		{
    			FrameMessage.fm.Open(this.sPrompt);
    			this.bShowPrompt=false;
    //			w=400;
    //			FormatString.gi().Format(this.sPrompt, w-40, 20);
    //			h=FormatString.gi().iH+40;
    //			x=(GmConfig.SCRW-w)/2;
    //			y=(GmConfig.SCRH-h)/2;
    //			DrawMode.Frame2_MD(x, y, w, h);
    //			FormatString.gi().Draw(x+20, y+20);
    		}
    //		for(i=0;i<3;i++)
    //		{
    //			if(iFilter==i)
    //			{
    //				this.btn_sort[i].bMouseIn=true;
    //				this.btn_sort[i].bMouseDown=true;
    //			}
    //			this.btn_sort[i].Draw();
    //		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;

    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		for(i=0;i<2;i++)
    		{
    			if(this.btn_page[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_page[i].bCheck())
    				{
    					this.iPage=i;
    					this.iPoint=0;
    				}
    			}
    		}
    		
    		if(this.iPage==0)
    		{
    			
    			if(this.bShowPrompt)
    			{
    				if(msg==3)this.bShowPrompt=false;
    				return true;
    			}
    			
    			for(i=0;i<this.iCount;i++)
    			{
    				if(this.btn_missionNamelist[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_missionNamelist[i].bCheck())
    					{
    						this.iPoint=i;
    					}
    				}
    			}
    			
    //			if(msg==3 && !XDefine.bInRect(x, y, MissionFrame.iX, MissionFrame.iY,MissionFrame.iW, MissionFrame.iH))
    //			{
    //				XStat.gi().PopStat(1);
    //			}
    			if(this.btn_prompt.ProcTouch(msg, x, y))
    			{
    				if(this.btn_prompt.bCheck())
    				{
    					this.bOpenPrompt=true;
    				}
    			}
    			if(this.bCanFindWay)
    			{
    				if(this.btn_findway.ProcTouch(msg, x, y))
    				{
    					if(this.btn_findway.bCheck())
    					{
    						MyAI.gi().FindNpc(MyAI.gi().iDestNpcId,false,false);
    						XStat$1.gi().PopStat(1);
    					}
    				}
    			}
    			if(this.bCanCancel)
    			{
    				if(this.btn_cancel.ProcTouch(msg, x, y))
    				{
    					if(this.btn_cancel.bCheck())
    					{
    						Confirm1.start(Confirm1.CONFIRM_CANCELMISSION,"是否花费10000铜币放弃该任务?");
    					}
    				}
    			}
    		}
    		else if(this.iPage==1)
    		{
    			this.ishowdetail=-1;
    			
    			if(this.iLockStat==2)
    			{
    				this.iScrollY+=(this.iLockY-y);
    				this.iLockY=y;
    				
    				if(this.iScrollY>this.iCount*50-this.CH+60)this.iScrollY=this.iCount*50-this.CH+60;
    				if(this.iScrollY<0)this.iScrollY=0;
    				if(msg==3)this.iLockStat=0;
    				return true;
    			}
    			for(i=0;i<this.iCount;i++)
    			{
    				if(this.btn_missionNamelist[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_missionNamelist[i].bCheck())
    					{
    						this.iPoint=i;
    					}
    				}
    			}
    			if(this.iGoToNpcId>0)
    			{
    				if(this.btn_go.ProcTouch(msg, x, y))
    				{
    					if(this.btn_go.bCheck())
    					{
    						if(this.iGoToNpcId==10000)MyAI.gi().FindNpc(GameData$1.iMasterids[GmMe$1.me.rbs.iSchoolId], true, true);
    						else MyAI.gi().FindNpc(this.iGoToNpcId, true, true);
    						XStat$1.gi().PopStat(1);
    					}
    				}
    			}
    			if(XDefine$1.bInRect(x, y, this.CX, this.CY, this.CW, this.CH))
    			{
    				if(msg==1)
    				{
    					this.iLockY=y;
    					this.iLockStat=1;
    				}
    				if(msg==2 && this.iLockStat==1)
    				{
    					if(Math.abs(this.iLockY-y)>15)
    					{
    						this.iLockStat=2;
    					}
    				}
    			}
    			else this.iLockStat=0;
    			
    			for(i=0;i<this.iPriceCount;i++)
    			{
    				if(this.btn_price[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_price[i].bCheck())
    					{
    						this.ishowdetail=i;
    					}
    				}
    			}
    		}
    //		for(i=0;i<3;i++)
    //		{
    //			if(this.btn_sort[i].ProcTouch(msg, x, y))
    //			{
    //				if(this.btn_sort[i].bCheck())
    //				{
    //					iFilter=i;
    //					this.iPoint=0;
    //				}
    //			}
    //		}
    		return false;
    	}
    }
    MissionFrame.Open=function( page)
    {
    	var mf=XStat$1.gi().PushStat(XStat$1.GS_MISSIONFRAME);
    	mf.iPage=page;
    	mf.iPoint=0;
    };

    MissionFrame.iX,MissionFrame.iY,MissionFrame.iW,MissionFrame.iH;

    class Mounts {
    /*	public String this.sAnimaName;
    	public int iMid;
    	public String this.sName;
    	public int iTid,this.iJjLev,this.iLingQi;//类型，进阶等级，灵气
    	public int this.att;//属性
    	public int this.zz;//资质
    	public int this.maxzz;//资质上限
    	public int this.cz,this.maxcz;//成长，成长上限
    	public int this.iLev,this.iMaxLev,this.iExp;//等级，等级上限，经验
    	public int this.iBSD;//饱食度
    	public int this.iFlag;//每日标记

    	public int this.nut;
    	public int this.tz,this.fl,this.ll,this.nl,this.mj;
    	public int this.iMaxHp,this.iMaxMp;
    	public int this.iSpirit,this.iSpeed,this.iAttack,this.iDefence;
    	
    	public int this.iMaxLingQi;*/
    	
    	constructor()
    	{
    		this.iMid=-1;
    		this.att=new Int32Array(5);
    		this.zz=new Int32Array(5);
    		this.maxzz=new Int32Array(5);
    	}
    	CalcFightAtt()
    	{
    		var i=this.iLev*5;//当前可能的属性上限
    		var j=this.att[0]+this.att[1]+this.att[2]+this.att[3]+this.att[4];//当前已加属性
    		this.nut=i-j;//剩余属性点//潜力点

    		this.tz=this.att[0]+10+this.iLev;
    		this.fl=this.att[1]+10+this.iLev;
    		this.ll=this.att[2]+10+this.iLev;
    		this.nl=this.att[3]+10+this.iLev;
    		this.mj=this.att[4]+10+this.iLev;

    		this.iMaxHp=this.iLev*this.zz[0]+this.tz*this.cz*6;
    		this.iMaxMp=this.iLev*this.zz[1]+this.fl*this.cz*6;
    		this.iSpirit=this.iLev*(this.zz[1]+1640)*(this.cz+1000)/7500+this.tz*300+this.fl*700+this.ll*400+this.nl*200;
    		this.iSpeed=this.zz[4]*this.mj;
    		this.iAttack=this.iLev*this.zz[2]*(1400+this.cz)/750+this.cz*this.ll;
    		this.iDefence=this.iLev*this.zz[3]*(1900/3+this.cz)/750+this.cz*this.nl*4/3;

    		this.iMaxHp=parseInt((this.iMaxHp+500)/1000);
    		this.iMaxMp=parseInt((this.iMaxMp+500)/1000);
    		this.iSpirit=parseInt((this.iSpirit+500)/1000);
    		this.iAttack=parseInt((this.iAttack+500)/1000);
    		this.iDefence=parseInt((this.iDefence+500)/1000);
    		this.iSpeed=parseInt((this.iSpeed+500)/1000);
    		
    		if(this.iJjLev==1)this.iMaxLingQi=50;
    		else if(this.iJjLev==2)this.iMaxLingQi=100;
    		else if(this.iJjLev==3)this.iMaxLingQi=200;
    	}
    }

    class FeedMounts extends BaseClass{


    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=430+60;
    		this.iH=30+30+20+345+5+52+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_feed=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_feed.InitButton("按钮1_110");
    		this.btn_feed.sName="喂食";
    		this.btn_feed.Move(this.iX+this.iW-110-30, this.iY+this.iH-52-30, 110, 52);

    		this.lockgoods=null;
    	}

    	Draw()
    	{
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		M3DFast$1.gi().DrawTextEx(this.iX+30, this.iY+30, "选择丹药或烹饪", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		
    		GoodsDraw.new_DrawGoods(this.iX+30, this.iY+30+30+15, MyGoods.gi().goods[2], null, null);

    		if(this.lockgoods!=null)
    		{
    			GoodsDraw.new_DrawRect(this.iX+30, this.iY+30+30+15, MyGoods.gi().goods[2], this.lockgoods, 0);
    			
    //			if(this.lockgoods.iTid>=175 && this.lockgoods.iTid<=184)
    			{
    //				M3DFast.gi().DrawTextEx(this.iX+20, this.iY+this.iH-40,"学习:"+GmPlay.de_skill.strValue(this.lockgoods.iAtts[0], 0, 6), 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    				this.btn_feed.Draw();
    			}
    //			else M3DFast.gi().DrawTextEx(this.iX+20, this.iY+this.iH-40, "选择烹饪或丹药", 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    		}
    //		else M3DFast.gi().DrawTextEx(this.iX+20, this.iY+this.iH-40, "选择烹饪或丹药", 0xff000000, 20, 101, 1, 1, 0, 0, 0);

    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.lockgoods!=null)
    		{
    //			if(this.lockgoods.iTid==154 || this.lockgoods.iTid==155 || this.lockgoods.iTid==156)
    			{
    				if(this.btn_feed.ProcTouch(msg, x, y))
    				{
    					if(this.btn_feed.bCheck())
    					{
    						GmProtocol$1.gi().s_FeedMounts(FeedMounts.pms.iMid, this.lockgoods.iGid,this.lockgoods.iTid);
    						XStat$1.gi().PopStat(1);
    					}
    					return true;
    				}
    			}
    		}
    		this.lockgoods=GoodsDraw.new_LockGoods(x, y, this.iX+30, this.iY+30+30+15, MyGoods.gi().goods[2], msg);
    		GoodsDraw.NoMove();
    //		if(this.lockgoods.iTid==154 || this.lockgoods.iTid==155 || this.lockgoods.iTid==156);
    //		else
    		{
    //			this.lockgoods=null;
    		}
    		
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    		}
    		return false;
    	}

    }
    FeedMounts.pms;

    FeedMounts.Open=function( p)
    {
    	XStat$1.gi().PushStat(XStat$1.GS_FEEDMOUNTS);
    	FeedMounts.pms=p;
    };

    class MountsFrame extends BaseClass{

    	constructor( ani)
    	{
    		super();
    		var i,j;
    		
    		this.iW = 830;
    		this.iH = 620;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_button);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX + this.iW - 35, this.iY - 25, 60, 60);
    		
    		this.btn_mountslist=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.btn_mountslist[i]=new XButton(GmPlay$1.xani_button);
    			this.btn_mountslist[i].InitButton("2号按钮150_60");
    			this.btn_mountslist[i].Move(this.iX + 50, this.iY + 50 + i * 65, 150, 60);
    		}
    		this.iMountsPoint=0;
    		
    		this.btn_joinfight=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_joinfight.InitButton("1号按钮90_60");
    		this.btn_joinfight.Move(this.iX + 270 - 70 - 30, this.iY + 65 + 200, 70, 40);
    		this.btn_joinfight.sName="骑乘";
    		
    		this.iPage=0;
    		this.btn_page=new Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.btn_page[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_page[i].InitButton("2号按钮150_60");
    		}
    		this.btn_page[0].sName="属性";
    		this.btn_page[1].sName="资质";
    		this.btn_page[2].sName="技能";
    		
    		this.btn_drop=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_drop.InitButton("1号按钮90_60");
    		this.btn_drop.Move(this.iX+390+10,this.iY+65+80+200,70,40);
    		this.btn_drop.sName="放生";
    		
    		this.btn_addpoint=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_addpoint.InitButton("1号按钮90_60");
    		this.btn_addpoint.Move(this.iX+390+290/2-70/2,this.iY+65+80+200,70,40);
    		this.btn_addpoint.sName="加点";
    		
    		this.btn_train=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_train.InitButton("1号按钮90_60");
    		this.btn_train.Move(this.iX+390+290-80,this.iY+65+80+200,70,40);
    		this.btn_train.sName="驯养";
    		/////////////////
    		this.btn_jj=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_jj.InitButton("1号按钮90_60");
    		this.btn_jj.Move(this.iX+390+10,this.iY+65+80+200,70,40);
    		this.btn_jj.sName="进阶";
    		
    		this.btn_feed=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_feed.InitButton("1号按钮90_60");
    		this.btn_feed.Move(this.iX+390+290-80,this.iY+65+80+200,70,40);
    		this.btn_feed.sName="喂食";
    		
    		this.aa_mts=new Array(6);//
    		this.aa_bds=new Array(6);//
    		this.aa_cls=new Array(6);//
    		for(i=0;i<6;i++)
    		{
    			this.aa_mts[i]=new AnimaAction();
    			this.aa_bds[i]=new AnimaAction();
    			this.aa_cls[i]=new Array(5);
    			for(j=0;j<5;j++)
    			{
    				this.aa_cls[i][j]=new AnimaAction();
    			}
    		}
    		this.aa_weapon=new AnimaAction();
    		
    		this.bChanged=true;



    		MountsFrame.cur = this;   //后来添加的
    	}

    	ChangeColor( xb, sa, m)
    	{
    		if(!SystemOperate.bShowColor)return;
    		var i;
    		for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    		{
    			if(GmMe$1.me.iColor[i]<=0 || GmMe$1.me.iColor[i]>=6)continue;
    			GmPlay$1.xani_color[xb][GmMe$1.me.iColor[i]-1].InitAnimaWithName(SortAnima._CHANGECOLOR[xb][i]+"_"+sa, this.aa_cls[m][i]);
    //			GmPlay.sop(""+SortAnima._CHANGECOLOR[xb][i]+"_"+sa);
    		}
    	}
    	DrawColor( xb, frame, offy, x, y, m)
    	{
    		if(!SystemOperate.bShowColor)return;
    		var i;
    		for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    		{
    			if(GmMe$1.me.iColor[i]<=0 || GmMe$1.me.iColor[i]>=6)continue;
    			this.aa_cls[m][i].iFrame=frame;
    			this.aa_cls[m][i].Draw(x, y);
    //			DrawBuffer.gi().DrawAnima_aa(offy,null, , );
    		}
    	}
    	
    	DrawMounts( x, y, pms, changed, withme)
    	{//1鹿,2狮,3马
    		var faceto="右下";
    		var stat="站立";
    //		if(1==1)return;
    		var i;
    		var xb=GmMe$1.me.iRace*2+GmMe$1.me.iSex;
    		var ifaceto=GmMe$1.face_sti(faceto);
    		var istat=GmMe$1.stat_sti(stat);
    		var itype=pms.iTid-1;
    		var ijj=pms.iJjLev-1;
    //{{"前","人前","后","人后","武器"},{"武器","右翅膀","人右","身体","人左","左翅膀"},{"武器","右翅膀","人右","身体","人左","左翅膀"},{"武器","右翅膀","人右","身体","人左","左翅膀"},{"后","人","武器","前"},{"左翅膀","人左","身体","人右","右翅膀","武器"},{"左翅膀","人左","身体","人右","右翅膀","武器"},{"左翅膀","人左","身体","人右","右翅膀","武器"}},//二阶
    //GmPlay.xani_nmounts[itype]
    		var offy=0;
    		var lionoff=0;
    		if(pms.iTid==2)lionoff=12;
    //		iMountsJjLev--;
    //		GmPlay.sop("itype="+itype+",,,,ijj="+ijj+",,,,istat="+istat+",,,ifaceto="+ifaceto);
    //		this.aa_mts,this.aa_bds，0up     1down      2left     ,3right        ,4middle
    		for(i=0;i<SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto].length;i++)
    		{
    //			GmPlay.sop(i+"="+SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]);
    			if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="左翅膀")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(pms.iJjLev+"_"+stat+"_"+faceto+"_左翅膀",this.aa_mts[2]);



    				}



    				this.aa_mts[2].Draw(x, y+lionoff);
    				this.aa_mts[2].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="右翅膀")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(pms.iJjLev+"_"+stat+"_"+faceto+"_右翅膀",this.aa_mts[3]);
    				}
    				this.aa_mts[3].Draw( x, y+lionoff);
    				this.aa_mts[3].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="前")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(pms.iJjLev+"_"+stat+"_"+faceto+"_前",this.aa_mts[0]);
    				}
    				this.aa_mts[0].Draw( x, y+lionoff);
    				this.aa_mts[0].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="后")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(pms.iJjLev+"_"+stat+"_"+faceto+"_后",this.aa_mts[1]);
    				}
    				this.aa_mts[1].Draw(x, y+lionoff);
    				this.aa_mts[1].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="身体")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(pms.iJjLev+"_"+stat+"_"+faceto+"_身体",this.aa_mts[4]);
    				}
    				this.aa_mts[4].Draw(x, y+lionoff);
    				this.aa_mts[4].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="飘带")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(pms.iJjLev+"_"+stat+"_"+faceto+"_飘带",this.aa_mts[5]);
    				}
    				this.aa_mts[5].Draw(x, y+lionoff);
    				this.aa_mts[5].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人前" && withme)
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto+"_前",this.aa_bds[0]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto+"_前",0);
    				}
    				this.aa_bds[0].Draw(x, y+lionoff);
    				this.DrawColor(xb,this.aa_bds[0].iFrame,y+offy,x,y+lionoff,0);
    				this.aa_bds[0].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人后" && withme)
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto+"_后",this.aa_bds[1]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto+"_后",1);
    				}
    				this.aa_bds[1].Draw(x, y+lionoff);
    				this.DrawColor(xb,this.aa_bds[1].iFrame,y+offy,x,y+lionoff,1);
    				this.aa_bds[1].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人左" && withme)
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto+"_左",this.aa_bds[2]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto+"_左",2);
    				}
    				this.aa_bds[2].Draw(x, y+lionoff);
    				this.DrawColor(xb,this.aa_bds[2].iFrame,y+offy,x,y+lionoff,2);
    				this.aa_bds[2].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人右" && withme)
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto+"_右",this.aa_bds[3]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto+"_右",3);
    				}
    				this.aa_bds[3].Draw(x, y+lionoff);
    				this.DrawColor(xb,this.aa_bds[3].iFrame,y+offy,x,y+lionoff,3);
    				this.aa_bds[3].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人" && withme)
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto,this.aa_bds[4]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto,4);
    				}
    				this.aa_bds[4].Draw(x, y+lionoff);
    				this.DrawColor(xb,this.aa_bds[4].iFrame,y+offy,x,y+lionoff,4);
    				this.aa_bds[4].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="武器" && withme)
    			{
    				if(changed)
    				{
    					this.iWeapTid = MyGoods.gi().GetWeaponTid();
    					if(this.iWeapTid>=0)GmPlay$1.xani_weap[xb][SortAnima.WeapFlag(this.iWeapTid)].InitAnimaWithName("骑"+stat+"_"+faceto, this.aa_weapon);
    				}
    				if(this.iWeapTid>=0)
    				{
    					this.aa_weapon.Draw(x, y+lionoff);
    					this.aa_weapon.NextFrame();
    				}
    				offy++;
    			}
    		}
    //		iMountsJjLev++;
    //		iMountsTid
    //		if (pms == null) {
    //			bsc = true;
    //			return;
    //		}
    		//_ANIMASORT_MOUNT[2马][1二阶][0站立1跑步][方向][切割]
    	}
    	Draw()
    	{
    		if(MyMounts.mm.iMountsCount<=0)
    		{
    			XStat$1.gi().PopStat(1);
    			return;
    		}
    		DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH, "坐", "骑");
    		this.btn_close.Draw();

    		DrawMode$1.new_framein(this.iX + 25, this.iY + 25, 190, this.iH - 50);
    		var i;
    		if(this.iMountsPoint>=MyMounts.mm.iMountsCount)this.iMountsPoint=0;
    		var pms=MyMounts.mm.mounts[this.iMountsPoint];
    		for(i=0;i<MyMounts.mm.iMountsCount;i++)
    		{
    			this.btn_mountslist[i].sName=MyMounts.mm.mounts[i].sName;
    			if(this.iMountsPoint==i)
    			{//选中的宠物，按钮设为按下状态
    				this.btn_mountslist[i].bMouseIn=true;
    				this.btn_mountslist[i].bMouseDown=true;
    			}
    			this.btn_mountslist[i].Draw();
    		}
    		
    		var offx = this.iX + 25+190+20;
    		var offy = this.iY + 25;
    		
    		DrawMode$1.new_framein(offx,offy, 190, this.iH - 50);
    		FireworksEffect.DrawAura(0, offx + 95, offy + 240, null, 0);//坐骑
    		this.btn_joinfight.Move(offx + 190 - 20 - 90, this.iY + this.iH - 50 - 60, 90, 60);
    		if(GmMe$1.me.iFightMid==pms.iMid)
    		{
    			this.btn_joinfight.sName="下骑";
    			this.DrawMounts(offx + 95, offy + 240, pms, this.bChanged, true);
    //			aa_body.Draw(offx+120, offy+160);
    //			aa_body.NextFrame();
    		}
    		else
    		{
    			this.btn_joinfight.sName="骑乘";
    			this.DrawMounts(offx + 95, offy + 240, pms, this.bChanged, false);
    		}
    		this.bChanged=false;
    		this.btn_joinfight.Draw();
    		
    		DrawMode$1.ui3_Text1(offx+10, offy+300, 70, 100, "名称", pms.sName);
    		DrawMode$1.ui3_Text1(offx + 10, offy + 300 + 40 * 1, 70, 100, "等级", pms.iLev+ "/"+pms.iMaxLev);
    		DrawMode$1.ui3_Text1(offx + 10, offy + 300 + 40 * 2, 70, 100, "气血", ""+pms.iMaxHp);
    		DrawMode$1.ui3_Text1(offx + 10, offy + 300 + 40 * 3, 70, 100, "魔法", ""+pms.iMaxMp);
    		
    		offx = this.iX + 25 + 190 + 20+190+20;
    		DrawMode$1.new_framein(offx, offy, 360, this.iH - 50);
    		this.btn_page[this.iPage].bMouseDown=true;
    		this.btn_page[this.iPage].bMouseIn=true;
    		if(this.iPage==0)
    		{
    			MountsFrame.Draw_Base2(offx + 20, offy + 20+60+20+40, pms);

    			this.btn_drop.Move(offx + 20, this.iY + this.iH - 50 - 60, 90, 60);
    			this.btn_addpoint.Move(offx + 360/2-90/2, this.iY + this.iH - 50 - 60, 90, 60);
    			this.btn_train.Move(offx + 360 - 20 - 90, this.iY + this.iH - 50 - 60, 90, 60);
    			this.btn_drop.Draw();
    			this.btn_addpoint.Draw();
    			this.btn_train.Draw();
    		}
    		else if(this.iPage==1)
    		{
    			MountsFrame.Draw_Base3(offx + 20, offy + 20+60+20, pms);

    			this.btn_jj.Move(offx + 20, this.iY + this.iH - 50 - 60, 90, 60);
    			this.btn_feed.Move(offx + 360 - 20 - 90, this.iY + this.iH - 50 - 60, 90, 60);
    			this.btn_jj.Draw();
    			this.btn_feed.Draw();
    		}
    		this.btn_page[0].Move(offx + 20, offy + 20, 150, 60);
    		this.btn_page[1].Move(offx + 360-20-150, offy + 20, 150, 60);
    		for (i = 0; i<2; i++)this.btn_page[i].Draw();
    		
    		if(Confirm1.end(Confirm1.CONFIRM_DROPMOUNTS))
    		{
    			if(Confirm1.bConfirm)
    			{//同意丢弃宠物
    //				Mounts pms=MyMounts.mm.mounts[this.iMountsPoint];
    				if(GmMe$1.me.bHaveLock && GmMe$1.me.bLocked)EasyMessage.easymsg.AddMessage("未解锁不能放生");
    				else
    				{
    					if(GmMe$1.me.iFightMid==pms.iMid)
    					{
    						GmMe$1.me.iFightMid=0;
    						GmMe$1.me.bsc=true;
    					}
    					GmProtocol$1.gi().s_DropMounts(pms.iMid);
    					MyMounts.mm.RemoveMounts(pms.iMid);
    					this.iMountsPoint=0;
    				}
    			}
    		}
    		if(Confirm1.end(Confirm1.CONFIRM_JJMOUNTS))
    		{
    			if(Confirm1.bConfirm)
    			{//同意丢弃宠物
    //				Mounts pms=MyMounts.mm.mounts[this.iMountsPoint];
    				GmProtocol$1.gi().s_JJMounts(pms.iMid);
    			}
    		}
    		
    		if(AddPoint.end(AddPoint.ADDPOINT_MOUNTS))
    		{
    			if(AddPoint.bConfirm)
    			{
    				for(i=0;i<5;i++)pms.att[i]+=AddPoint.iModifys[i];
    				pms.CalcFightAtt();
    				GmProtocol$1.gi().s_AddMountsPoint(pms.iMid,AddPoint.iModifys[0],AddPoint.iModifys[1],AddPoint.iModifys[2],AddPoint.iModifys[3],AddPoint.iModifys[4]);
    			}
    		}
    	}
    	
    	
    	
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		var pms=MyMounts.mm.mounts[this.iMountsPoint];
    		if(this.iPage==0)
    		{
    			if(this.btn_drop.ProcTouch(msg, x, y))
    			{
    				if(this.btn_drop.bCheck())
    				{//丢弃当前坐骑
    					Confirm1.start(Confirm1.CONFIRM_DROPMOUNTS,"是否确认放生？");
    				}
    				return true;
    			}
    			if(this.btn_train.ProcTouch(msg, x, y))
    			{
    				if(this.btn_train.bCheck())
    				{//驯养坐骑,lev*4*10*2+100
    					var usexp=pms.iLev*4*10*2+100;
    					if(pms.iLev>=GmMe$1.me.rbs.iLev)EasyMessage.easymsg.AddMessage("坐骑不能超过人物等级");
    					else if(pms.iLev>=pms.iMaxLev)EasyMessage.easymsg.AddMessage("坐骑等级已达上限");
    					else if(GmMe$1.me.rbs.iPower<10)EasyMessage.easymsg.AddMessage("体力不足10点");
    					else if(GmMe$1.me.rbs.iExp<usexp)EasyMessage.easymsg.AddMessage("人物经验不足");
    					else
    					{
    						GmMe$1.me.rbs.iExp-=usexp;
    						pms.iExp+=usexp;
    						GmMe$1.me.rbs.iPower-=10;
    						GmProtocol$1.gi().s_TrainMounts(pms.iMid);
    						XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    					}
    				}
    				return true;
    			}
    			if(this.btn_addpoint.ProcTouch(msg, x, y))
    			{
    				if(this.btn_addpoint.bCheck())
    				{
    					if(pms.nut<=0)EasyMessage.easymsg.AddMessage("当前没有剩余点数可以加");
    					else AddPoint.start(AddPoint.ADDPOINT_MOUNTS,pms.tz,pms.fl,pms.ll,pms.nl,pms.mj,pms.nut);
    				}
    			}
    		}
    		else if(this.iPage==1)
    		{//资质页面
    			if(this.btn_feed.ProcTouch(msg, x, y))
    			{
    				if(this.btn_feed.bCheck())
    				{//喂食，打开选择物品页面
    					FeedMounts.Open(pms);
    				}
    				return true;
    			}
    			if(this.btn_jj.ProcTouch(msg, x, y))
    			{
    				if(this.btn_jj.bCheck())
    				{//进阶
    					if(pms.iJjLev>=3)EasyMessage.easymsg.AddMessage("坐骑已是最高阶");
    					else if(pms.iLev<pms.iMaxLev || pms.iLingQi<pms.iMaxLingQi)
    					{
    						FrameMessage.fm.Open("坐骑灵气和等级达到上限后才能进阶");
    						//FrameMessage.fm.Open(",,"+pms.iLev+",,"+pms.iMaxLev+",,"+pms.iLingQi+",,"+pms.iMaxLingQi);
    					}
    					else
    					{
    						Confirm1.start(Confirm1.CONFIRM_JJMOUNTS,"进阶后#e#c00ff00资质上限=当前资质*110%#e成长上限=当前成长*110%#e#cffffff是否确认进阶？");
    					}
    				}
    				return true;
    			}
    		}

    		for(i=0;i<MyMounts.mm.iMountsCount;i++)
    		{
    			if(this.btn_mountslist[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_mountslist[i].bCheck())
    				{
    					this.iMountsPoint=i;
    					this.bChanged=true;
    				}
    //				return true;
    			}
    		}
    		if(this.btn_joinfight.ProcTouch(msg, x, y))
    		{
    			if(this.btn_joinfight.bCheck())
    			{
    				if(GmMe$1.me.iFightMid==pms.iMid)
    				{
    					GmMe$1.me.iFightMid=0;
    					GmProtocol$1.gi().s_ChangeFightMounts(0);
    					this.bChanged=true;
    					GmMe$1.me.CalcFightAtt();
    				}
    				else
    				{
    					if(MySell.gi().bSelling)
    					{
    						EasyMessage.easymsg.AddMessage("摆摊中不能骑乘");
    					}
    					else
    					{
    						GmMe$1.me.iFightMid=pms.iMid;
    						GmProtocol$1.gi().s_ChangeFightMounts(pms.iMid);
    						this.bChanged=true;
    						GmMe$1.me.CalcFightAtt();
    					}
    				}
    				GmMe$1.me.bsc=true;
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		for(i=0;i<2;i++)
    		{
    			if(this.btn_page[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_page[i].bCheck())
    				{
    					this.iPage=i;
    				}
    			}
    		}
    		return false;
    	}

    }
    MountsFrame.Draw_Base2=function( x, y, p)
    	{
    		DrawMode$1.ui3_Text1(x, y, 60, 90, "体质", ""+p.tz);
    		DrawMode$1.ui3_Text1(x, y + 40 * 1, 60, 90, "法力", ""+p.fl);
    		DrawMode$1.ui3_Text1(x, y + 40 * 2, 60, 90, "力量", ""+p.ll);
    		DrawMode$1.ui3_Text1(x, y + 40 * 3, 60, 90, "耐力", ""+p.nl);
    		DrawMode$1.ui3_Text1(x, y + 40 * 4, 60, 90, "敏捷", ""+p.mj);

    		DrawMode$1.ui3_Text1(x + 170, y, 60, 90, "灵力", ""+p.iSpirit);
    		DrawMode$1.ui3_Text1(x + 170, y + 40 * 1, 60, 90, "伤害", ""+p.iAttack);
    		DrawMode$1.ui3_Text1(x + 170, y + 40 * 2, 60, 90, "防御", ""+p.iDefence);
    		DrawMode$1.ui3_Text1(x + 170, y + 40 * 3, 60, 90, "速度", ""+p.iSpeed);
    		DrawMode$1.ui3_Text1(x + 170, y + 40 * 4, 60, 90, "剩余", ""+p.nut);

    		DrawMode$1.ui3_Text1(x , y + 40 * 6, 120, 200, "当前经验", ""+p.iExp);
    		DrawMode$1.ui3_Text1(x , y + 40 * 7, 120, 200, "升级经验", ""+parseInt(GameData$1.iUpgradeExp[p.iLev] / 3));
    	};
    	
    MountsFrame.Draw_Base3=function( x, y, p)
    	{
    		DrawMode$1.ui3_Text1(x, y + 40 * 0, 120, 200, "体质资质", p.zz[0] +"/"+p.maxzz[0]);
    		DrawMode$1.ui3_Text1(x, y + 40 * 1, 120, 200, "法力资质", p.zz[1] +"/"+p.maxzz[1]);
    		DrawMode$1.ui3_Text1(x, y + 40 * 2, 120, 200, "力量资质", p.zz[2] +"/"+ p.maxzz[2]);
    		DrawMode$1.ui3_Text1(x, y + 40 * 3, 120, 200, "耐力资质", p.zz[3] +"/"+p.maxzz[3]);
    		DrawMode$1.ui3_Text1(x, y + 40 * 4, 120, 200, "敏捷资质", p.zz[4] +"/"+p.maxzz[4]);
    		DrawMode$1.ui3_Text1(x, y + 40 * 5, 120, 200, "成长", MyPets$1.swapcz(p.cz)+ "/"+MyPets$1.swapcz(p.maxcz));

    		if (p.iJjLev == 1)DrawMode$1.ui3_Text1(x, y + 40 * 6, 120, 200, "阶段", "初级");
    		else if (p.iJjLev == 2)DrawMode$1.ui3_Text1(x, y + 40 * 6, 120, 200, "阶段", "中级");
    		else if (p.iJjLev == 3)DrawMode$1.ui3_Text1(x, y + 40 * 6, 120, 200, "阶段", "高级");

    		DrawMode$1.ui3_Text1(x, y + 40 * 7, 120, 200, "灵气", p.iLingQi+ "/"+ p.iMaxLingQi);
    		DrawMode$1.ui3_Text1(x, y + 40 * 8, 120, 200, "饱食度", p.iBSD / 10+ "/100");
    	};

    class MyMounts {
    	
    	constructor()
    	{
    		var i;
    		this.iMountsCount=0;
    		this.mounts=new Array(8);
    		for(i=0;i<8;i++)
    		{
    			this.mounts[i]=new Mounts();
    		}
    	}
    	
    	UpdateOneMounts( pls)
    	{
    		var i,j;
    		var type=pls.GetNextByte();
    		var mid=pls.GetNextInt();
    		if(type==0)
    		{//去掉一个坐骑
    			this.RemoveMounts(mid);
    		}
    		else
    		{//更新或增加一个坐骑
    			for(i=0;i<8;i++)
    			{//找到已有，更新数据
    				if(this.mounts[i].iMid==mid)break;
    			}
    			if(i>=8)
    			{//没有找到，寻找一个空位放入
    				for(i=0;i<8;i++)
    				{
    					if(this.mounts[i].iMid<=0)break;
    				}
    			}
    			if(i>=8)return;//没有空位，异常
    			
    			this.mounts[i].iMid=mid;
    			this.mounts[i].iTid=pls.GetNextShort();
    			this.mounts[i].sName=pls.GetNextString();
    	//		GmPlay.sop(""+i+","+this.mounts[i].sName);
    			this.mounts[i].iJjLev=pls.GetNextByte();
    			this.mounts[i].iLingQi=pls.GetNextShort();

    			for(j=0;j<5;j++)this.mounts[i].att[j]=pls.GetNextShort();
    			for(j=0;j<5;j++)this.mounts[i].zz[j]=pls.GetNextShort();
    			for(j=0;j<5;j++)this.mounts[i].maxzz[j]=pls.GetNextShort();

    			this.mounts[i].cz=pls.GetNextShort();
    			this.mounts[i].maxcz=pls.GetNextShort();

    			this.mounts[i].iLev=pls.GetNextShort();
    			this.mounts[i].iMaxLev=pls.GetNextShort();
    			this.mounts[i].iExp=pls.GetNextInt();

    			this.mounts[i].iBSD=pls.GetNextShort();

    			this.mounts[i].iFlag=pls.GetNextInt();
    //			GmPlay.sop(""+this.mounts[i].iJjLev+"_站立_右下"+this.mounts[i].iTid);
    			this.mounts[i].sAnimaName=GmPlay$1.de_mounts.strValue(this.mounts[i].iTid, 0, 2);
    			
    			
    			
    			this.mounts[i].CalcFightAtt();
    			if(this.mounts[i].iMid==GmMe$1.me.iFightMid)GmMe$1.me.CalcFightAtt();



    //后面修改的
                // 通知打开的 MountsFrame 刷新（若界面正打开）
                if (typeof MountsFrame !== "undefined" && MountsFrame.cur) {
                    MountsFrame.cur.bChanged = true;
                }


    		}
    		
    		this.iMountsCount=0;
    		for(i=0;i<8;i++)if(this.mounts[i].iMid>0)this.iMountsCount++;
    	}
    	
    	RemoveMounts( mid)
    	{
    		var i;
    		for(i=0;i<8;i++)
    		{
    			if(this.mounts[i].iMid==mid)break;
    		}
    		if(i>=8)return;
    		var tmp=this.mounts[i];
    		for(;i<7;i++)
    		{
    			this.mounts[i]=this.mounts[i+1];
    		}
    		this.mounts[7]=tmp;
    		this.mounts[7].iMid=-1;
    		this.iMountsCount=0;
    		for(i=0;i<8;i++)if(this.mounts[i].iMid>0)this.iMountsCount++;
    	}
    	 FindMounts( mid)
    	{
    		var i;
    		for(i=0;i<8;i++)
    		{
    			if(this.mounts[i].iMid>0 && mid==this.mounts[i].iMid)return this.mounts[i];
    		}
    		return null;
    	}
    }
    MyMounts.mm=new MyMounts();

    class TeamRequestList 
    {// 申请列表
    	/*
    		public int iRid;
    		public String sName;
    		public int iRas;
    		public int iSchoolId;
    		public int iLev;
    		public Int32Array iColor=new Array(10);//
    		public int iWeapTid;
    		public String sMapName;
    */
    		constructor() 
    		{
    			this.iRid = 0;
    			this.iColor=new Int32Array(10);
    		}
    		copyfrom( t)
    		{
    			this.iRid=t.iRid;
    			this.sName=t.sName;
    			this.iRas=t.iRas;
    			this.iSchoolId=t.iSchoolId;
    			this.iLev=t.iLev;
    			for(var i=0;i<10;i++)this.iColor[i]=t.iColor[i];
    			this.iWeapTid=t.iWeapTid;
    			this.sMapName=t.sMapName;
    		}
    }

    //活跃度

    class _ALIST
    {/*
    	public String sName,sDetail;
    	public int proc,max,add;*/
    	constructor()
    	{

    	}
    }
    class _APRICE
    {/*
    	public int iNeed;
    	public int iExp,iMoney;
    	public int tid1,tcount1,tid2,tcount2;*/
    	constructor()
    	{

    	}
    }


    class PromptActivity extends BaseClass{


    	constructor( ani)
    	{
    		super();
    		this.MAXALIST=15;
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=1100;
    		this.iH=600;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.iPage=0;
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		
    		this.btn_go=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_go.InitButton("按钮2");
    		this.btn_go.sName="前往";
    		this.iPoint=0;
    		this.btn_list=new Array(20);//
    		for(i=0;i<20;i++)
    		{
    			this.btn_list[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		}
    		this.InitBtnAnima();
    		
    		this.se=new StarEffect();
    		this.se.Init3(0, 0, 50, 50);
    		
    		this.btn_get=new Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.btn_get[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_get[i].bSingleButton=true;
    		}
    		this.iShowGet=-1;
    		this.btn_gift=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_gift.InitButton("礼包按钮");
    		this.btn_gift.sName="领  取";
    		
    		this.btn_page=new Array(4);//
    		for(i=0;i<4;i++)
    		{
    			this.btn_page[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_page[i].InitButton("右侧标签");
    		}
    		
    //		this.btn_list2=new Array(10);//
    		this.iPoint2=0;this.iCount2=0;
    		this.btn_week=new Array(7);//
    //		for(i=0;i<10;i++)
    //		{
    //			this.btn_list2[i]=new XButtonEx2(GmPlay.xani_nui2);
    //		}
    		for(i=0;i<7;i++)
    		{
    			this.btn_week[i]=new XButtonEx2$1(GmPlay$1.xani_nui2); 
    			this.btn_week[i].InitButton("按钮2");
    		}
    		this.btn_week[0].sName="星期日";
    		this.btn_week[1].sName="星期一";
    		this.btn_week[2].sName="星期二";
    		this.btn_week[3].sName="星期三";
    		this.btn_week[4].sName="星期四";
    		this.btn_week[5].sName="星期五";
    		this.btn_week[6].sName="星期六";
    		this.iWeek=0;
    		
    		this.btn_cont=new Array(7);//
    		for(i=0;i<7;i++)
    		{
    			this.btn_cont[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_cont[i].InitButton("按钮2");
    		}
    		this.btn_cont[0].sName="游戏背景";
    		this.btn_cont[1].sName="新手玩法";
    		this.btn_cont[2].sName="高手进阶";
    		this.btn_cont[3].sName="门派介绍";
    		
    		this.btn_qd=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_qd.InitButton("按钮4");
    		this.btn_qd.sName="签  到";
    		
    		this.btn_vip=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_vip.InitButton("按钮3");
    		if(GmMe$1.me.iFlag[40]<=0)this.btn_vip.sName="开通vip";
    		else this.btn_vip.sName="续费vip";
    		////////////////////////////////////////////
    		
    		this.alist=new Array(this.MAXALIST);//
    		this.btn_prompt=new Array(this.MAXALIST);//
    		this.aprice=new Array(this.MAXALIST);//
    		for(i=0;i<this.MAXALIST;i++)
    		{
    			this.alist[i]=new _ALIST();
    			this.btn_prompt[i]=new XButtonEx1(GmPlay$1.xani_ui3);
    			this.btn_prompt[i].InitButton("统一按钮1");
    			this.btn_prompt[i].sName="提 示";
    			this.aprice[i]=new _APRICE();
    		}
    		
    		
    	}

    	InitBtnAnima()
    	{
    		var i;
    		if(this.iPage==0)
    		{
    			this.iCount=12;
    			for(i=0;i<this.iCount;i++)
    			{
    				this.btn_list[i].InitButton(PromptActivity._ADetail[this.iPage][i][0]);
    			}
    		}
    		if(this.iPage==1)
    		{
    			this.iCount2=0;
    			if(this.iWeek==2)
    			{
    				this.btn_list[this.iCount2].InitButton(PromptActivity._ADetail[this.iPage][0][0]);
    				this.btn_list[this.iCount2].exts[0]=0;
    				this.iCount2++;
    			}
    			if(this.iWeek==3)
    			{
    				this.btn_list[this.iCount2].InitButton(PromptActivity._ADetail[this.iPage][1][0]);
    				this.btn_list[this.iCount2].exts[0]=1;
    				this.iCount2++;
    			}
    			if(this.iWeek==6 || this.iWeek==7 || this.iWeek==0)
    			{
    				this.btn_list[this.iCount2].InitButton(PromptActivity._ADetail[this.iPage][2][0]);
    				this.btn_list[this.iCount2].exts[0]=2;
    				this.iCount2++;
    			}
    			if(this.iWeek==5 || this.iWeek==6 || this.iWeek==7 || this.iWeek==0)
    			{
    				this.btn_list[this.iCount2].InitButton(PromptActivity._ADetail[this.iPage][3][0]);
    				this.btn_list[this.iCount2].exts[0]=3;
    				this.iCount2++;
    			}
    			this.btn_list[this.iCount2].InitButton(PromptActivity._ADetail[this.iPage][4][0]);
    			this.btn_list[this.iCount2].exts[0]=4;
    			this.iCount2++;
    			this.btn_list[this.iCount2].InitButton(PromptActivity._ADetail[this.iPage][5][0]);
    			this.btn_list[this.iCount2].exts[0]=5;
    			this.iCount2++;
    			this.btn_list[this.iCount2].InitButton(PromptActivity._ADetail[this.iPage][6][0]);
    			this.btn_list[this.iCount2].exts[0]=6;
    			this.iCount2++;
    			this.btn_list[this.iCount2].InitButton(PromptActivity._ADetail[this.iPage][7][0]);
    			this.btn_list[this.iCount2].exts[0]=7;
    			this.iCount2++;
    		}
    		if(this.iPage==3)
    		{
    			if(iBtn3==0)
    			{//游戏介绍
    			}
    			else if(iBtn3==1)
    			{//新手玩法
    				this.iCount=9;
    				for(i=0;i<this.iCount;i++)
    				{
    					this.btn_list[i].InitButton(PromptActivity._ADetail[2][i][0]);
    				}
    			}
    			else if(iBtn3==2)
    			{//高手进阶
    				this.iCount=12;
    				for(i=0;i<this.iCount;i++)
    				{
    					this.btn_list[i].InitButton(PromptActivity._ADetail[3][i][0]);
    				}
    			}
    			else if(iBtn3==3)
    			{//门派特色
    				this.iCount=9;
    				for(i=0;i<this.iCount;i++)
    				{
    					this.btn_list[i].InitButton(PromptActivity._ADetail[4][i][0]);
    				}
    			}
    		}
    	}
    	Draw_0()
    	{
    		var i,j,k,m,n;
    		var offx,offy,offw,offh;
    		offx=this.iX+30;
    		offy=this.iY+30;
    		offw=840;
    		offh=300;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		
    		offy=this.iY+300+30+15;
    		offh=220;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		
    		offx=this.iX+840+30+15;
    		offy=this.iY+30;
    		offw=180;
    		offh=535;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		
    		for(i=0;i<this.iCount;i++)
    		{
    			offx=this.iX+30+20+i%7*117;
    			offy=this.iY+30+18+i/7*140;
    			this.btn_list[i].Move(offx,offy, 100, 100);
    			this.btn_list[i].Draw();
    			
    			GmPlay$1.xani_nui2.DrawAnima(offx+50-78/2, offy+100+3, "活跃进度框",0);
    			if(this.alist[i].add>0)
    			{
    				M3DFast$1.gi().DrawTextEx(offx+50-78/2+5, offy+100+3+15, this.alist[i].proc+"/"+this.alist[i].max, 0xffffffff, 18, 101, 1, 1, 0, -1, -2);
    				M3DFast$1.gi().DrawTextEx(offx+50+78/2-5, offy+100+3+15, "+"+this.alist[i].add, 0xff00ff00, 18, 101, 1, 1, 0, -3, -2);
    			}
    			else M3DFast$1.gi().DrawTextEx(offx+50, offy+100+3+15, this.alist[i].proc+"/"+this.alist[i].max, 0xffffffff, 18, 101, 1, 1, 0, -2, -2);
    			if(this.iPoint==i)
    			{//画选中，画介绍文字
    				FormatString.gi().FormatEx("#c003e57"+PromptActivity._ADetail[this.iPage][i][1], 800, 30, 0, 0, 40);
    				FormatString.gi().Draw(this.iX+30+20, this.iY+300+30+15+20);
    				this.se.Logic();
    				this.se.Draw(offx+50, offy+50);
    			}
    		}
    		if(this.iPoint==0 || this.iPoint==1 || this.iPoint==2 || this.iPoint==3 || this.iPoint==4 || this.iPoint==6 || this.iPoint==7 || this.iPoint==9 || this.iPoint==10 || this.iPoint==11)
    		{
    			this.btn_go.Move(this.iX+30+840-20-145, this.iY+300+30+15+220-20-56, 145, 56);
    			this.btn_go.Draw();
    		}
    		
    		offx=this.iX+840+30+15;
    		offy=this.iY+30;
    		M3DFast$1.gi().DrawText_2(offx+90, this.iY+60, "今日活跃度", 0xff3de1e1, 25, 101, 1, 1, 0, -2, -2, 4, 0xff003e57);
    		M3DFast$1.gi().DrawText_2(offx+90, this.iY+95, ""+this.iNumber, 0xffffff00, 30, 101, 1, 1, 0, -2, -2, 4, 0xff003e57);
    		
    //		M3DFast.gi().SetViewClip(offx+5, offy+5, offx+w1-5+35, offy+h1-5+5);
    		
    		if(this.iAPPoint+2>=this.iAPCount)k=(this.iAPPoint+2)-this.iAPCount;
    		else k=0;
    		for(i=0;i<3;i++)
    		{
    			j=i+this.iAPPoint-1-k;
    			
    			this.btn_get[i].SetCheckRect(-1, -1, -1, -1);
    //			GmPlay.sop(""+j+"=apc="+this.iAPCount);
    			if(j>=0 && j<this.iAPCount)
    			{//可显示,300宽，60x4
    //				GmPlay.sop("tt"+this.aprice[j].iExp);
    				m=offx+180/2;
    				n=offy+90+i*163;
    				M3DFast$1.gi().DrawTextEx(m,n-5, "活跃度达到"+this.aprice[j].iNeed+"可领", 0xff003e57, 20, 101, 1, 1, 0, -2, 0);
    				
    				this.btn_get[i].SetCheckRect(offx+(180-94)/2, offy+110+i*163, 94,94);
    				this.btn_get[i].exts[0]=j;
    				GmPlay$1.xani_nui2.DrawAnima(offx+(180-94)/2+7, offy+110+i*163+7, "礼品格子",0);
    				if(i<2)GmPlay$1.xani_nui2.DrawAnima(offx+(180-94)/2, offy+110+i*163, "礼品箭头",0);
    				
    				//礼品包包
    				GmPlay$1.xani_nui2.DrawAnima(offx+(180-94)/2, offy+110+i*163, "礼品包包",this.iNumber<this.aprice[j].iNeed?6:j);
    				
    				if(this.iAPPoint>j)
    				{//已领
    					GmPlay$1.xani_nui2.DrawAnima(offx+(180-94)/2, offy+110+i*163, "已领标记",0);
    //					M3DFast.gi().DrawTextEx(m+30-50,n+30-25, "已领标记", 0xffff0000, 50, 101, 1, 1, 30, m+30,n+30 );
    				}
    			}
    		}
    	}

    	draw_get( j)
    	{
    		var offx,offy,offw,offh;
    		var p=0;
    		var m,n;
    		
    		offw=465;
    		offh=381;
    		offx=(GmConfig$1.SCRW-offw)/2;
    		offy=(GmConfig$1.SCRH-offh)/2;
    		
    		GmPlay$1.xani_nui2.DrawAnima(offx,offy,"礼包背景框",0);
    		
    		
    		if(this.aprice[j].iExp>0)
    		{
    			m=offx+60+p%2*190;
    			n=offy+100+p/2*100;
    			
    			GmPlay$1.xani_nui2.DrawAnima(m,n, "礼品格子",1);
    			GmPlay$1.xani_ngoods.DrawAnima(m,n, "物品经验", 0);
    			M3DFast$1.gi().DrawTextEx(m+80,n+80, ""+this.aprice[j].iExp, 0xffffffff, 20, 101, 1, 1, 0, -3, -3);
    			
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+11, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+11+11, "经验", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+45, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+45+11, "x 1", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			p++;
    		}
    		if(this.aprice[j].iMoney>0)
    		{
    			m=offx+60+p%2*190;
    			n=offy+100+p/2*100;
    			
    			GmPlay$1.xani_nui2.DrawAnima(m,n, "礼品格子",1);
    			GmPlay$1.xani_ngoods.DrawAnima(m,n, "物品钱", 0);
    			M3DFast$1.gi().DrawTextEx(m+80,n+80, ""+this.aprice[j].iMoney, 0xffffffff, 20, 101, 1, 1, 0, -3, -3);
    			
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+11, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+11+11, "金钱", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+45, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+45+11, "x 1", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			p++;
    		}
    		if(this.aprice[j].tid1>0 && this.aprice[j].tcount1>0)
    		{
    			m=offx+60+p%2*190;
    			n=offy+100+p/2*100;
    			
    			GmPlay$1.xani_nui2.DrawAnima(m,n, "礼品格子",1);
    			GmPlay$1.xani_ngoods.DrawAnima_aa(m, n, GmPlay$1.de_goods.strValue(this.aprice[j].tid1, -1, 10),0);
    			
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+11, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+11+11, GmPlay$1.de_goods.strValue(this.aprice[j].tid1, -1, 4), 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+45, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+45+11, "x "+this.aprice[j].tcount1, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			p++;
    		}
    		if(this.aprice[j].tid2>0 && this.aprice[j].tcount2>0)
    		{
    			m=offx+60+p%2*190;
    			n=offy+100+p/2*100;
    			
    			GmPlay$1.xani_nui2.DrawAnima(m,n, "礼品格子",1);
    			GmPlay$1.xani_ngoods.DrawAnima_aa(m, n, GmPlay$1.de_goods.strValue(this.aprice[j].tid2, -1, 10),0);
    			  
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+11, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+11+11, GmPlay$1.de_goods.strValue(this.aprice[j].tid2, -1, 4), 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+45, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+45+11, "x "+this.aprice[j].tcount2, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			p++;
    		}
    		this.btn_gift.Move( offx+(offw-134)/2, offy+offh-44-40,134,44);
    		this.btn_gift.Draw();
    	}

    	Draw_1()
    	{
    		var i,j,k;
    		var offx,offy,offw,offh;
    		offx=this.iX+30;
    		offy=this.iY+30;
    		offw=840;
    		offh=300;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		
    		offy=this.iY+300+30+15;
    		offh=220;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		
    		offx=this.iX+840+30+15;
    		offy=this.iY+30;
    		offw=180;
    		offh=535;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		
    		for(i=0;i<7;i++)
    		{
    			this.btn_week[i].Move(this.iX+903, this.iY+52+i*73, 145, 56);
    			if(this.iWeek==i)this.btn_week[i].bMouseDown=true;
    			this.btn_week[i].Draw();
    		}
    		
    		for(i=0;i<this.iCount2;i++)
    		{
    			offx=this.iX+30+20+i%7*117;
    			offy=this.iY+30+30+i/7*140;
    			this.btn_list[i].Move(offx,offy, 100, 100);
    			this.btn_list[i].Draw();
    			
    			if(this.iPoint2==i)
    			{//画选中，画介绍文字
    				FormatString.gi().FormatEx("#c003e57"+PromptActivity._ADetail[this.iPage][this.btn_list[i].exts[0]][1], 800, 30, 0, 0, 40);
    				FormatString.gi().Draw(this.iX+30+20, this.iY+300+30+15+20);
    				this.se.Logic();
    				this.se.Draw(offx+50, offy+50);
    			}
    		}
    	}
    	Draw_3()
    	{
    		var i,j,k,m,n;
    		var offx,offy,offw,offh;
    		
    		offx=this.iX+840+30+15;
    		offy=this.iY+30;
    		offw=180;
    		offh=535;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		for(i=0;i<4;i++)
    		{
    			this.btn_cont[i].Move(this.iX+903, this.iY+52+i*73, 145, 56);
    			if(iBtn3==i)this.btn_cont[i].bMouseDown=true;
    			this.btn_cont[i].Draw();
    		}
    		if(iBtn3==0)
    		{//游戏介绍
    			offx=this.iX+30;
    			offy=this.iY+30;
    			offw=840;
    			offh=535;
    			
    			DrawMode$1.new_framein(offx,offy,offw,offh);
    			M3DFast$1.gi().DrawText_2(offx+offw/2, offy+40, "游戏背景", 0xffffff00, 50, 101, 1, 1, 0, -2,-2, 3, 0xff000000);
    			FormatString.gi().FormatEx("# # #c000000春秋战国期间，七雄争霸，豪杰雄起。谋臣运筹帷幄，将士浴血沙场。战争此起彼伏，局势变化跌宕。#e# # 时代赋予三界风云人物神圣使命去掌控国家生死存亡、左右民族荣辱兴衰。#e# # 人族、魔族、仙族率领九大门派弟子卷入了这场声势浩大的征战之中。#e# # 岁月长河涤荡两千余载，那些璀璨的智慧和生命依然熠熠发光，依然动人心魄......", 800, 30, 0, 0, 45);
    //			FormatString.gi().Format("春秋一百多年，经过不断兼并，战国初年，约有十几个国。大国有秦，魏，韩，燕，赵，齐，楚，即“战国七雄”。在战国时期涌现了一批伟大的人物，主宰了历史，扭转了乾坤。战国时期，各国人民都踊跃学习本领，希望在乱世之中能够成就一番事业，有志青年投奔人、魔、仙大师级人物门下拜师学艺，勇闯天下。人族，魔族，仙族都卷进了这场举世的大混战之中，三界中所有智慧和能量都得到了极大的发挥。 然而在战火弥漫的战国时期，爱情，亲情，友情光芒不仅仅没有被滚滚硝烟湮没，反而更加令人荡气回肠，回味无穷", 800, 20);
    			FormatString.gi().Draw(offx+20, offy+80-15);
    		}
    		else if(iBtn3==1 || iBtn3==2 || iBtn3==3)
    		{
    			offx=this.iX+30;
    			offy=this.iY+30;
    			offw=840;
    			offh=260;
    			DrawMode$1.new_framein(offx,offy,offw,offh);
    			
    			offy=this.iY+260+30+15;
    			offh=260;
    			DrawMode$1.new_framein(offx,offy,offw,offh);
    			
    			for(i=0;i<this.iCount;i++)
    			{
    				offx=this.iX+30+20+i%7*117;
    				offy=this.iY+30+18+i/7*120;
    				this.btn_list[i].Move(offx,offy, 100, 100);
    				this.btn_list[i].Draw();
    				
    //				GmPlay.xani_nui2.DrawAnima(offx+50-78/2, offy+100+3, "活跃进度框",0);
    //				if(this.alist[i].add>0)
    //				{
    //					M3DFast.gi().DrawTextEx(offx+50-78/2+5, offy+100+3+15, this.alist[i].proc+"/"+this.alist[i].max, 0xffffffff, 18, 101, 1, 1, 0, -1, -2);
    //					M3DFast.gi().DrawTextEx(offx+50+78/2-5, offy+100+3+15, "+"+this.alist[i].add, 0xff00ff00, 18, 101, 1, 1, 0, -3, -2);
    //				}
    //				else M3DFast.gi().DrawTextEx(offx+50, offy+100+3+15, this.alist[i].proc+"/"+this.alist[i].max, 0xffffffff, 18, 101, 1, 1, 0, -2, -2);
    				if(this.iPoint3==i)
    				{//画选中，画介绍文字
    					FormatString.gi().FormatEx("#c003e57"+PromptActivity._ADetail[iBtn3+1][i][1], 800, 30, 0, 0, 40);
    					FormatString.gi().Draw(this.iX+30+20, this.iY+260+30+15+10);
    					this.se.Logic();
    					this.se.Draw(offx+50, offy+50);
    				}
    			}
    		}
    	}
    	Draw_2()
    	{
    		var i,j,k,m,n;
    		var offx,offy,offw,offh;
    		
    		offx=this.iX+30;
    		offy=this.iY+30;
    		offw=360;
    		offh=250;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		//日期部分45*8=320+40=360
    		GmPlay$1.xani_nui2.DrawAnima(offx+(offw-80)/2, offy+5, "月份底",0);//80*32
    		M3DFast$1.gi().DrawText_2(offx+offw/2, offy+5+16, GameData$1.sBigNum[this.iMonth]+"月", 0xff3de1e5, 24, 101, 1, 1, 0, -2, -2, 3, 0xff003e57);
    		
    //		pa.iTodayWeek=pls.GetNextByte();
    //		pa.iTodayDay=3;
    //		pa.iMaxDay=31;
    //		pa.iMonth=3;//计算1号是周几
    		
    //		if(GmPlay.iDelay%30==0)
    //		{
    //			this.iTodayWeek++;
    //			this.iTodayWeek%=7;
    //		}
    		j=this.iTodayWeek-this.iTodayDay;
    		while(true)
    		{//得到1号是周几0~6
    			if(j>=7)j-=7;
    			else if(j<0)j+=7;
    			else break;
    		}
    //		GmPlay.sop("j="+j);
    		for(i=0;i<7;i++)
    		{//
    			M3DFast$1.gi().DrawTextEx(offx+i*45+45, offy+55, GameData$1.sWeek[i], 0xff003e57, 20, 101, 1, 1, 0, -2, -2);
    		}
    		this.qdtime=0;
    		for(i=1;i<=this.iMaxDay;i++)
    		{
    			k=i+j;
    			m=offx+(k%7)*45+45;
    			n=offy+85+k/7*27-(j==6?27:0);
    			
    			if(i==this.iTodayDay)
    			{
    				M3DFast$1.gi().FillRect_2D(m-15, n-15, m+15, n+15, 0x30000000);
    			}
    			M3DFast$1.gi().DrawTextEx(m,n, ""+i, 0xff000000, 20, 101, 1, 1, 0, -2, -2);

    			if((GmMe$1.me.iFlag[50]&(1<<(i-1)))!=0)
    			{
    				GmPlay$1.xani_nui2.DrawAnima(m-16,n-15, "签过圈",0);
    				this.qdtime++;//累计签到次数
    			}
    		}
    		
    		
    		
    		
    		//基本领取
    		offx+=360+15;
    		offw=35+80+35+80+35+80+35;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		M3DFast$1.gi().DrawText_2(offx+30, offy+42, "当前活跃", 0xff3de1e5, 30, 101, 1, 1, 0, 0, -2, 3, 0xff003e57);
    		M3DFast$1.gi().DrawText_2(offx+30+30*4+5, offy+42, ""+this.iNumber, 0xffffff00, 50, 101, 1, 1, 0, 0, -2, 3, 0xff003e57);
    		M3DFast$1.gi().DrawTextEx(offx+30+30*4+5+50+10, offy+42, "达到20可签到", 0xff003e57, 24, 101, 1, 1, 0, 0, -2);
    		m=offx+35;
    		n=offy+85;
    		GmPlay$1.xani_nui2.DrawAnima(m,n, "礼品格子",0);//lev*4*80
    		GmPlay$1.xani_ngoods.DrawAnima(m,n, "物品经验", 0);
    		M3DFast$1.gi().DrawTextEx(m+80,n+80, ""+GmMe$1.me.rbs.iLev*4*80*2, 0xffffffff, 20, 101, 1, 1, 0, -3, -3);
    		
    		m+=80+35;
    		GmPlay$1.xani_nui2.DrawAnima(m,n, "礼品格子",0);//lev*4*80
    		GmPlay$1.xani_ngoods.DrawAnima(m,n, "物品钱", 0);
    		M3DFast$1.gi().DrawTextEx(m+80,n+80, ""+GmMe$1.me.rbs.iLev*4*80, 0xffffffff, 20, 101, 1, 1, 0, -3, -3);
    		
    		m+=80+35;
    		GmPlay$1.xani_nui2.DrawAnima(m,n, "礼品格子",0);//lev*4*80
    		GmPlay$1.xani_ngoods.DrawAnima(m,n, "双倍经验卡", 0);
    		M3DFast$1.gi().DrawTextEx(m+80,n+80, "x1", 0xffffffff, 20, 101, 1, 1, 0, -3, -3);
    		
    		if((GmMe$1.me.iFlag[50]&(1<<(this.iTodayDay-1)))!=0)
    		{
    			M3DFast$1.gi().DrawTextEx(offx+offw/2,offy+offh-85/2, "已签到", 0xff003e57, 40, 101, 1, 1, 0, -2, -2);
    		}
    		else
    		{
    			this.btn_qd.Move(offx+(offw-141)/2, offy+offh-85/2-49/2, 141, 49);
    			this.btn_qd.Draw();
    		}
    		
    		//特殊领取
    		offx+=35+80+35+80+35+80+35+15;
    		offw=270;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		for(i=0;i<7;i++)
    		{
    			if(this.qdtime<PromptActivity._SPECIALDAY[i])break;
    		}
    		if(i<7)
    		{
    			j=PromptActivity._SPECIALDAY[i]-this.qdtime;
    			if(j==1 && (GmMe$1.me.iFlag[50]&(1<<(this.iTodayDay-1)))==0)M3DFast$1.gi().DrawTextEx(offx+offw/2, offy+42, "本次签到可获得", 0xff003e57, 24, 101, 1, 1, 0, -2, -2);
    			else M3DFast$1.gi().DrawTextEx(offx+offw/2, offy+42, "继续签到"+j+"次后可获得", 0xff003e57, 24, 101, 1, 1, 0, -2, -2);
    			m=offx+35;
    			n=offy+85;
    			GmPlay$1.xani_nui2.DrawAnima(m,n, "礼品格子",0);//lev*4*80
    			if(i==0)GmPlay$1.xani_ngoods.DrawAnima(m,n, "传送符",0);
    			else if(i==1)GmPlay$1.xani_ngoods.DrawAnima(m,n, "仙灵果",0);
    			else if(i==2)GmPlay$1.xani_ngoods.DrawAnima(m,n, "替身木偶",0);
    			else if(i==3)GmPlay$1.xani_ngoods.DrawAnima(m,n, "装备制造图纸",0);
    			else if(i==4)GmPlay$1.xani_ngoods.DrawAnima(m,n, "青霜丹",0);
    			else if(i==5)GmPlay$1.xani_ngoods.DrawAnima(m,n, "高级仙灵果",0);
    			else if(i==6)GmPlay$1.xani_ngoods.DrawAnima(m,n, "装备制造图纸",0);
    			
    			m+=80+35;
    			GmPlay$1.xani_nui2.DrawAnima(m,n, "礼品格子",0);//lev*4*80
    			GmPlay$1.xani_ngoods.DrawAnima(m,n, "三倍经验卡", 0);
    			GmPlay$1.xani_nui2.DrawAnima(m,n, "会员专属", 0);
    			
    			this.btn_vip.Move(offx+(offw-141)/2, offy+offh-85/2-49/2, 141, 49);
    			this.btn_vip.Draw();
    		}
    		offx=this.iX+30;
    		offy+=250+15;
    		offw=this.iW-60;
    		offh=280;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		j=(1040-128*7)/8;
    		for(i=0;i<7;i++)
    		{//特殊日子奖励
    			this.DrawSpecial(offx+j+(j+128)*i,offy+15,i);
    		}
    	}

    	 DrawSpecial( x, y, num)
    	{//1100-60=1040=x*7+y*8=128*7+y*8
    		if(PromptActivity.aa_specialframe==null)PromptActivity.aa_specialframe=GmPlay$1.xani_nui2.InitAnimaWithName("特殊奖励框", null);
    		if(PromptActivity.aa_specialframe2==null)PromptActivity.aa_specialframe2=GmPlay$1.xani_nui2.InitAnimaWithName("特殊奖励框2", null);
    		var w,h;
    		w=128;
    		h=250;
    		if(this.qdtime<PromptActivity._SPECIALDAY[num])
    		{
    			M3DFast$1.gi().FillRect_2D(x+5, y+5, x+w-10,y+h-10 , 0xff399392);
    			PromptActivity.aa_specialframe.iFrame=0;PromptActivity.aa_specialframe.Draw(x, y);
    			PromptActivity.aa_specialframe.iFrame=1;PromptActivity.aa_specialframe.Draw(x+w, y);
    			PromptActivity.aa_specialframe.iFrame=2;PromptActivity.aa_specialframe.Draw(x+w, y+h);
    			PromptActivity.aa_specialframe.iFrame=3;PromptActivity.aa_specialframe.Draw(x, y+h);
    			PromptActivity.aa_specialframe.iFrame=4;PromptActivity.aa_specialframe.DrawEx(x+20, y, 101, 1.0*(w-20-20)/20, 1, 0, 0, 0);
    			PromptActivity.aa_specialframe.iFrame=5;PromptActivity.aa_specialframe.DrawEx(x, y+20, 101, 1, 1.0*(h-20-20)/20, 0, 0, 0);
    			PromptActivity.aa_specialframe.iFrame=6;PromptActivity.aa_specialframe.DrawEx(x+w, y+20, 101, 1, 1.0*(h-20-20)/20, 0, 0, 0);
    			PromptActivity.aa_specialframe.iFrame=7;PromptActivity.aa_specialframe.DrawEx(x+20, y+h, 101, 1.0*(w-20-20)/20, 1, 0, 0, 0);
    			M3DFast$1.gi().DrawText_2(x+w/2,y+20, "签到"+PromptActivity._SPECIALDAY[num]+"次获得", 0xffffff00, 20, 101, 1, 1, 0, -2, -2,3, 0xff000000);
    		}
    		else
    		{
    			M3DFast$1.gi().FillRect_2D(x+5, y+5, x+w-10,y+h-10 , 0xff3c739a);
    			PromptActivity.aa_specialframe2.iFrame=0;PromptActivity.aa_specialframe2.Draw(x, y);
    			PromptActivity.aa_specialframe2.iFrame=1;PromptActivity.aa_specialframe2.Draw(x+w, y);
    			PromptActivity.aa_specialframe2.iFrame=2;PromptActivity.aa_specialframe2.Draw(x+w, y+h);
    			PromptActivity.aa_specialframe2.iFrame=3;PromptActivity.aa_specialframe2.Draw(x, y+h);
    			PromptActivity.aa_specialframe2.iFrame=4;PromptActivity.aa_specialframe2.DrawEx(x+20, y, 101, 1.0*(w-20-20)/20, 1, 0, 0, 0);
    			PromptActivity.aa_specialframe2.iFrame=5;PromptActivity.aa_specialframe2.DrawEx(x, y+20, 101, 1, 1.0*(h-20-20)/20, 0, 0, 0);
    			PromptActivity.aa_specialframe2.iFrame=6;PromptActivity.aa_specialframe2.DrawEx(x+w, y+20, 101, 1, 1.0*(h-20-20)/20, 0, 0, 0);
    			PromptActivity.aa_specialframe2.iFrame=7;PromptActivity.aa_specialframe2.DrawEx(x+20, y+h, 101, 1.0*(w-20-20)/20, 1, 0, 0, 0);
    			M3DFast$1.gi().DrawText_2(x+w/2,y+20, "已获得", 0xffffff00, 24, 101, 1, 1, 0, -2, -2,3, 0xff000000);
    		}
    		
    		GmPlay$1.xani_nui2.DrawAnima(x+(w-80)/2,y+45, "礼品格子",0);
    		if(num==0)GmPlay$1.xani_ngoods.DrawAnima(x+(w-80)/2,y+45, "传送符",0);
    		else if(num==1)GmPlay$1.xani_ngoods.DrawAnima(x+(w-80)/2,y+45, "仙灵果",0);
    		else if(num==2)GmPlay$1.xani_ngoods.DrawAnima(x+(w-80)/2,y+45, "替身木偶",0);
    		else if(num==3)GmPlay$1.xani_ngoods.DrawAnima(x+(w-80)/2,y+45, "装备制造图纸",0);
    		else if(num==4)GmPlay$1.xani_ngoods.DrawAnima(x+(w-80)/2,y+45, "青霜丹",0);
    		else if(num==5)GmPlay$1.xani_ngoods.DrawAnima(x+(w-80)/2,y+45, "高级仙灵果",0);
    		else if(num==6)GmPlay$1.xani_ngoods.DrawAnima(x+(w-80)/2,y+45, "装备制造图纸",0);
    		
    		GmPlay$1.xani_nui2.DrawAnima(x+(w-80)/2,y+150, "礼品格子",0);
    		GmPlay$1.xani_ngoods.DrawAnima(x+(w-80)/2,y+150, "三倍经验卡",0);
    		GmPlay$1.xani_nui2.DrawAnima(x+(w-80)/2,y+150, "会员专属", 0);
    	}
    	Draw()
    	{
    		var i;
    		DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH, "活", "动");

    		for(i=0;i<4;i++)
    		{
    			this.btn_page[i].Move(this.iX+this.iW-15, this.iY+40+130*i, 50, 130);
    			if(this.iPage==i)this.btn_page[i].bMouseDown=true;
    			this.btn_page[i].Draw();
    			DrawMode$1.new_lableword2(this.iX+this.iW-15, this.iY+40+130*i, 40, 130,this.iPage==i,PromptActivity._ALable[i][0],PromptActivity._ALable[i][1]);
    		}
    		
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.Draw();
    		switch(this.iPage)
    		{
    		case 0://活跃
    			this.Draw_0();
    			break;
    		case 1://活动
    			this.Draw_1();
    			break;
    		case 2://签到
    			this.Draw_2();
    			break;
    		case 3://玩法
    			this.Draw_3();
    			break;
    		}
    		if(this.iShowGet>=0 && this.iShowGet<this.iAPCount)
    		{//领取当前活跃度奖励的框
    			this.draw_get(this.iShowGet);
    		}

    //		GmPlay.xani_nui2.DrawAnima(10, 10, "世界抢答",0);
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		var offx,offy,offw,offh;

    		if(this.iShowGet>=0)
    		{
    			offw=465;
    			offh=381;
    			offx=(GmConfig$1.SCRW-offw)/2;
    			offy=(GmConfig$1.SCRH-offh)/2;
    			if(msg==3 && !XDefine$1.bInRect(x, y,offx,offy,offw,offh))this.iShowGet=-1;
    			if(this.btn_gift.ProcTouch(msg, x, y))
    			{
    				if(this.btn_gift.bCheck())
    				{
    					if(this.iNumber<this.aprice[this.iShowGet].iNeed)EasyMessage.easymsg.AddMessage("活跃度未达不能领取");
    					else if(this.iShowGet<this.iAPPoint)EasyMessage.easymsg.AddMessage("此档奖励已领过");
    					else GmProtocol$1.gi().s_PromptActivity(1, this.iShowGet);
    					this.iShowGet=-1;
    				}
    			}
    			return true;
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		for(i=0;i<4;i++)
    		{
    			if(this.btn_page[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_page[i].bCheck())
    				{
    					this.iPage=i;
    					this.iWeek=this.iTodayWeek;
    //					this.iWeek=0;//设置今天周几?
    					
    					iBtn3=0;
    					this.iPoint3=0;
    					this.InitBtnAnima();
    				}
    			}
    		}
    		if(this.iPage==0)
    		{
    			if(this.btn_go.ProcTouch(msg, x, y))
    			{
    				if(this.btn_go.bCheck())
    				{
    					if(this.iPoint==0)
    					{
    						if(GmMe$1.me.rbs.iLev<10)FrameMessage.fm.Open("升到10级，加入门派后才能领取师门任务。#e完成引导剧情即可升到10级以上");
    						else if(GmMe$1.me.rbs.iSchoolId==0)FrameMessage.fm.Open("自动寻路前往门派....#e加入门派后才能领取师门任务");
    						else
    						{//public final static String sSchools[ ]={"无","剑侠居","茅蓬坞","庐医崖","武安阁","溶洞","鬼谷","封神台","仙人洞","神女峰"};
    							//使用遁地术
    							if(MyTeam$1.bNoTeam())
    							{
    								if(GmMe$1.me.rbs.iSchoolId>0)
    								{
    									GmProtocol$1.gi().s_UseSkill(0,0,0,0,0,0,0);
    									XStat$1.gi().PopStat(1);
    									MapManager.gi().iMapChangeing=100;
    									FrameMessage.fm.Open("点击右下角“快捷”按钮，使用“遁地术”即可快速回到门派");
    								}
    							}
    							else EasyMessage.easymsg.AddMessage("队伍中不能使用遁地术");
    //							if(GmMe.me.rbs.iSchoolId==1)MyAI.gi().FindNpc(5);
    //							if(GmMe.me.rbs.iSchoolId==2)MyAI.gi().FindNpc(6);
    //							if(GmMe.me.rbs.iSchoolId==3)MyAI.gi().FindNpc(7);
    //							if(GmMe.me.rbs.iSchoolId==4)MyAI.gi().FindNpc(21);
    //							if(GmMe.me.rbs.iSchoolId==5)MyAI.gi().FindNpc(22);
    //							if(GmMe.me.rbs.iSchoolId==6)MyAI.gi().FindNpc(23);
    //							if(GmMe.me.rbs.iSchoolId==7)MyAI.gi().FindNpc(24);
    //							if(GmMe.me.rbs.iSchoolId==8)MyAI.gi().FindNpc(25);
    //							if(GmMe.me.rbs.iSchoolId==9)MyAI.gi().FindNpc(26);
    						}
    					}
    					if(this.iPoint==1)
    					{//除害
    						MyAI.gi().FindNpc(20,true,true);
    						XStat$1.gi().PopStat(1);
    					}
    					if(this.iPoint==2)
    					{//赛跑
    						MyAI.gi().FindNpc(56,true,true);
    						XStat$1.gi().PopStat(1);
    					}
    					if(this.iPoint==3)
    					{//护法
    						MyAI.gi().FindNpc(35,true,true);
    						XStat$1.gi().PopStat(1);
    					}
    					if(this.iPoint==4)
    					{//强盗
    						MyAI.gi().FindNpc(62,true,true);
    						XStat$1.gi().PopStat(1);
    					}
    					if(this.iPoint==6)
    					{//手艺
    						MyAI.gi().FindNpc(74,true,true);
    						XStat$1.gi().PopStat(1);
    					}
    					if(this.iPoint==7)
    					{//押镖
    						MyAI.gi().FindNpc(34,true,true);
    						FrameMessage.fm.Open("程镖头每过一段时间会改变位置，要在临淄四处找找哦");
    						XStat$1.gi().PopStat(1);
    					}
    					if(this.iPoint==9 || this.iPoint==10 || this.iPoint==11)
    					{//帮派任务
    						MyAI.gi().FindNpc(76,true,true);
    						XStat$1.gi().PopStat(1);
    					}
    				}
    			}
    			

    			for(i=0;i<this.iCount;i++)
    			{
    				if(this.btn_list[i].ProcTouch(msg,x,y))
    				{
    					if(this.btn_list[i].bCheck())
    					{
    						this.iPoint=i;
    						//this.iAPPoint++;
    					}
    					return true;
    				}
    			}
    			for(i=0;i<3;i++)
    			{
    				if(this.btn_get[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_get[i].bCheck())
    					{
    						this.iShowGet=this.btn_get[i].exts[0];
    					}
    					return true;
    				}
    			}
    		}
    		else if(this.iPage==1)
    		{
    			for(i=0;i<7;i++)
    			{
    				if(this.btn_week[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_week[i].bCheck())
    					{
    						this.iPoint2=0;
    						this.iWeek=i;
    						this.InitBtnAnima();
    					}
    				}
    			}
    			for(i=0;i<this.iCount2;i++)
    			{
    				if(this.btn_list[i].ProcTouch(msg,x,y))
    				{
    					if(this.btn_list[i].bCheck())
    					{
    						this.iPoint2=i;
    					}
    					return true;
    				}
    			}
    		}
    		else if(this.iPage==2)
    		{//点击签到，开通vip
    			if((GmMe$1.me.iFlag[50]&(1<<(this.iTodayDay-1)))==0)
    			{
    				if(this.btn_qd.ProcTouch(msg, x, y))
    				{
    					if(this.btn_qd.bCheck())
    					{//点击了签到
    						if((GmMe$1.me.iFlag[50]&(1<<(this.iTodayDay-1)))!=0)
    						{
    							EasyMessage.easymsg.AddMessage("今日已签到过");
    						}
    						else GmProtocol$1.gi().s_GetCodeReward(5, "");
    					}
    					return true;
    				}
    			}
    			if(this.btn_vip.ProcTouch(msg, x, y))
    			{
    				if(this.btn_vip.bCheck())
    				{
    					XStat$1.gi().PopStat(1);
    					MyAttFrame.Open(3);
    				}
    				return true;
    			}
    		}
    		else if(this.iPage==3)
    		{
    			for(i=0;i<4;i++)
    			{
    				if(this.btn_cont[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_cont[i].bCheck())
    					{
    						this.iPoint3=0;
    						iBtn3=i;
    						this.InitBtnAnima();
    					}
    				}
    			}
    			if(iBtn3==1 || iBtn3==2 || iBtn3==3)
    			{
    				for(i=0;i<this.iCount;i++)
    				{
    					if(this.btn_list[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn_list[i].bCheck())
    						{
    							this.iPoint3=i;
    						}
    						return true;
    					}
    				}
    			}
    		}
    		
    //		if(bScroll1)
    //		{
    //			if(msg==2)
    //			{
    //				i=y-iScrollY;
    //				iScrollY=y;
    //				iOffY1-=i;
    //				if(iOffY1<0)iOffY1=0;
    //				if(iOffY1>iMaxOffY1)iOffY1=iMaxOffY1;
    //			}
    //			if(msg==3)bScroll1=false;
    //			return true;
    //		}
    //		if(this.btn_get.ProcTouch(msg, x, y))
    //		{
    //			if(this.btn_get.bCheck())
    //			{//活跃度领取
    //				if(this.iNumber<this.aprice[this.iPoint].iNeed)EasyMessage.easymsg.AddMessage("活跃度未达不能领取");
    //				else
    //				{
    //					GmProtocol.gi().s_PromptActivity(1, this.iPoint);
    //					XStat.gi().PushStat(XStat.GS_LOADING1);
    //				}
    //			}
    //			return true;
    //		}
    		
    	//	offx=this.iX+78;
    	//	offy=this.iY+20+100-30;
    		
    //		if(XDefine.bInRect(x, y, this.iX+78, this.iY+20+70, 300+35, 300))
    //		{
    //			for(i=0;i<this.iACount;i++)
    //			{
    //				if(this.btn_prompt[i].ProcTouch(msg, x, y))
    //				{
    //					if(this.btn_prompt[i].bCheck())
    //					{
    //						FrameMessage.fm.Open(this.alist[i].sDetail);
    //					}
    //					return true;
    //				}
    //			}
    //		}
    //		if(msg==1 && XDefine.bInRect(x, y, this.iX+78, this.iY+20+70, 300+35, 300))
    //		{
    //			bScroll1=true;
    //			iScrollY=y;
    //		}
    //		if(msg==3 && !XDefine.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    //		{
    //			XStat.gi().PopStat(1);
    //		}
    		return false;
    	}
    }
    PromptActivity._ADetail=[
    	[["师门任务","人物等级>=10级#e10级加入门派后，找门派师傅领取任务，每天的前两轮（会员三轮）任务获得双倍奖励。"],
    	["为民除害","人物等级>=10级#e在[西阳城守卫]处领取，任务完成后会获得大量的经验奖励。"],
    	["每日赛跑","人物等级>=20级#e在[临淄城]的[田忌]处领取，完成可获得大量经验和金钱奖励，并获得一个三级草药。每天前十名更能额外获得道具奖励。#e任务可自动寻路完成"],
    	["护法任务","人物等级>=20级#e在[咸阳]的[商鞅]处领取任务，完成获得大量的经验和金钱，10次为一轮，完成每轮的第十次任务可获得制作装备的材料。"],
    	["追捕强盗","人物等级>=20级#e可以在[郢城]的[栾千盛]处领取追捕强盗任务，要求至少3人组队才能领取，完成获取经验金钱奖励，10次为一轮，第10次队长必定获得装备制造图纸，其他队员有几率获得道具奖励。"],
    	["擂台切磋","在西阳城中间的擂台，跟其他玩家切磋一下，不管输赢都会获得2点活跃哦。"],
    	["手艺任务","在郢城的铁匠接取任务，完成任务后会获得大量的经验和金钱，以及高熟练的打造手艺！"],
    	["押镖任务","人物等级>=20级#e可前往[临淄城]找[程镖头]领取押镖任务，完成获得大量金钱奖励，并有一定几率获取阵法书，还有可能获得红包（#cff0000里面有200元宝哦#o）。"],
    	["消灭山贼","人物等级>=30级#e每天整点，在随机野外地图刷出10只山贼，至少3人组队才能与山贼战斗，打败山贼获得大量的经验和金钱奖励，并有较大几率获得藏宝图。"],
    	["帮派青龙","人物等级>=20级#e在[郢城]的[帮派总管]处加入帮派，进入帮派领地，在帮派的领地里面去找青龙堂总管，领取任务，完成任务可获得大量的经验、金钱和帮贡"],
    	["帮派玄武","人物等级>=20级#e在帮派的领地里面去找玄武堂总管，领取任务，完成任务可获得大量的经验、金钱和帮贡（帮贡可在学院点帮派修炼）"],
    	["帮派朱雀","人物等级>=20级#e在帮派的领地里面去找朱雀堂总管，领取任务，完成任务可获得大量的经验、金钱和帮贡，在第10次并能获取丹方，是炼丹的必备品。"]],

    	[["门派闯关","每周四20:00点在[咸阳]或[临淄]的[门派活动使者]处领取任务，然后根据任务挑战门派护卫。每闯过一关都有丰厚的奖励，闯关速度最快的队伍更有高等级稀有宝石领取。"],
    	["保卫西阳","每周一20:00点在大禹水道，平原山陵，函谷关，太行山四个地图刷新怪物向西阳城进攻，玩家阻挡怪物，阻止怪物进入西阳城，打败怪物会获得丰厚的奖励，保卫西阳城成功，在西阳城更有稀有宝箱出现。"],
    	["比武大会","每周五中午12点~周六中午12点，玩家可以在[咸阳]的[比武接引人]报名，周六和周日下午13点~15点之间分别进行两场比武，比武获胜方可领取宝箱，即使失败也有其他丰厚奖励"],
    	["帮派之战","每周五，周六，周日的19点~20点在[咸阳]的[帮战接引先锋]处进入帮战场地（帮主需提前报名），获胜帮派的成员将会获得100点帮贡和大量经验，并在帮战场地内刷出大量宝箱"],
    	["封印叔叔","在挖宝时，有一定几率挖出妖怪叔叔，玩家组队去封印妖怪叔叔，会获得稀有的宝石和大量的经验金钱。"],
    	["挑战嚣张","每天系统会在城市中刷新出4种嚣张妖怪（有点嚣张、比较嚣张、很嚣张、太嚣张）每种怪物每天可挑战一次，挑战成功，有几率获取丰厚的奖励（如高级宠物技能包）"],
    	["战队竞技","在[咸阳]的[神威将军]处创建战队后，战队队长可以挑战比自己排名高的战队，挑战胜利可以提升战队排名。排名越靠前，战队每日声望增长越多"],
    	["跑环","玩家在郢城的吉祥处领取跑环任务，完成跑环任务可获得相应等级的装备图纸。"]],
    	
    	//新手玩法
    	[["师门任务","人物等级>=10级#e10级加入门派后，找门派师傅领取任务，每天的前两轮（会员三轮）任务获得双倍奖励。"],
    	["为民除害","人物等级>=10级#e在[西阳城守卫]处领取，任务完成后会获得大量的经验奖励。"],
    	["每日赛跑","人物等级>=10级#e在[临淄城]的[田忌]处领取，完成获得大量经验和金钱奖励，并获得一个三级草药。每天前十名更能额外获得道具奖励。#e任务可自动寻路完成"],
    	["世界抢答","人物等级>=10级#e每隔一段时间，系统会发出一道题目，可在世界频道回答，最先答对的两名玩家各获得一颗宝石，并从前二十名答对的玩家中抽取4名给予66666铜币奖励"],
    	["智者答题","无等级要求#e在各城市，每隔一段时间会随机出现一个智者，第一个答对智者问题的人可获得经验和金钱奖励，并有一定几率获得一颗宝石"],
    	["押镖任务","人物等级>=20级#e可前往[临淄城]找[程镖头]领取押镖任务，完成获得大量金钱奖励，并有一定几率获取阵法书，还有可能获得红包（#cff0000里面有200元宝哦#o）。"],
    	["追捕强盗","人物等级>=20级#e可以在[郢城]的[栾千盛]处领取追捕强盗任务，要求至少3人组队才能领取，完成获取经验金钱奖励，10次为一轮，第10次队长必定获得装备制造图纸，其他队员有几率获得道具奖励。"],
    	["护法任务","人物等级>=20级#e在[咸阳]的[商鞅]处领取任务，完成获得大量的经验和金钱，10次为一轮，完成每轮的第十次任务可获得制作装备的材料。"],
    	["帮派任务","人物等级>=20级#e在[郢城]的[帮派总管]处加入帮派，进入帮派领地，在帮派领地内可领取各种帮派任务，完成获得经验、金钱和帮贡，不同任务还有额外奖励"]],
    	//高手进阶
    	[["消灭山贼","人物等级>=30级#e每天整点，在随机野外地图刷出10只山贼，至少3人组队才能与山贼战斗，打败山贼获得大量的经验和金钱奖励，并有较大几率获得藏宝图。"],
    	["封印叔叔","在挖宝时，有一定几率挖出妖怪叔叔，玩家组队去封印妖怪叔叔，会获得稀有的宝石和大量的经验金钱。"],
    	["挑战嚣张","每天系统会在城市中刷新出4种嚣张妖怪（有点嚣张、比较嚣张、很嚣张、太嚣张）每种怪物每天可挑战一次，挑战成功，有几率获取丰厚的奖励（如高级宠物技能包）"],
    	["门派闯关","每周二20:00点在[咸阳]或[临淄]的[门派活动使者]处领取任务，然后根据任务挑战门派护卫。每闯过一关都有丰厚的奖励，闯关速度最快的队伍更有高等级稀有宝石领取。"],
    	["保卫西阳","每周三20:00点在大禹水道，平原山陵，函谷关，太行山四个地图刷新怪物向西阳城进攻，玩家阻挡怪物，阻止怪物进入西阳城，打败怪物会获得丰厚的奖励，保卫西阳城成功，在西阳城更有稀有宝箱出现。"],
    	["比武大会","每周五中午12点~周六中午12点，玩家可以在[咸阳]的[比武接引人]报名，周六和周日下午13点~15点之间分别进行两场比武，比武获胜方可领取宝箱，即使失败也有其他丰厚奖励"],
    	["帮派之战","每周五，周六，周日的19点~20点在[咸阳]的[帮战接引先锋]处进入帮战场地（帮主需提前报名），获胜帮派的成员将会获得100点帮贡和大量经验，并在帮战场地内刷出大量宝箱"],
    	["战队竞技","在[咸阳]的[神威将军]处创建战队后，战队队长可以挑战比自己排名高的战队，挑战胜利可以提升战队排名。排名越靠前，战队每日声望增长越多"],
    	["战队秘境","战队队长可在[咸阳]的[神威将军]处开启秘境，需要消耗战队声望，战队秘境里掉落大量的稀有道具，以及宠物进阶所必须的封印兽魂"],
    	["副本挑战","人物等级>=40级#e在[咸阳]的[副本官]处创建自己的副本，也可申请加入其他玩家创建的副本。副本会掉落大量的稀有物品道具。"],
    	["跑环","人物等级>=50级#e在[郢城]的[吉祥]处领取跑环任务，完成跑环任务可获得大量经验快速升级，每50环还可获得相应等级的装备图纸和手艺。"],
    	["师徒任务","在[临淄]的[慎到]处拜师或收徒，师徒二人组队在慎到处领取师徒任务，任务会给与大量的经验和金钱奖励。徒弟出师后，师傅可获得宠物修炼积分"]],
    	//门派介绍
    	[["剑侠居","要求种族：人族#e门派特色：物理攻击型，具有超高物理输出、点杀能力。 #e推荐加点：5力、4力1敏、4力1体。#e●剑侠居算是最热门的一个门派，容易上手，输出可观，是练级不可缺少的一员，相对的装备也比较贵，后期的剑侠居，拥有较高的暴击率，在竞技玩法中更是点杀的一大利器。"],
    	["茅棚坞","要求种族：人族#e门派特色：辅助型，具有高速度和强大的封印能力。 #e推荐加点：3敏2体、2敏3体、2敏2体1耐。#e●引以为傲的是速度，同样配置的情况下，先出手的绝对是茅棚，速度决定了竞技玩法的主动权，轮轴术也能很好的利用在卡敏战术中，迷雾让己方的胜率几率更大化，练级时，一个奇谋也能加快脚步。"],
    	["庐医崖","要求种族：人族#e门派特色：辅助型、具有强大的加血和救人技能。#e推荐加点：3体2耐、2体2耐1法、2体2敏1耐。#e●作为七国里唯一的纯奶妈，具有强大的加血技能和救人技能，是各种高端任务、活动，竞技玩法不可缺少的一员。"],
    	["溶洞","要求种族：魔族#e门派特色：法术攻击型，具有最高法系伤害。#e推荐加点：5法、4法1体#e●输出比封神高，但是目标数量比封神少，总伤害算起来反而不如封神了，不过做为七国的两大法系门派，溶洞更注重于多手段控制，相比封神来说没那么单调。"],
    	["鬼谷","要求种族：魔族#e门派特色：辅助型，具有强大的封印和解封技能。#e推荐加点：3敏2体、2敏3体。#e●作为封系，鬼谷最大的特点就是可以为己方解封，还有增加封印几率的增益，在竞技玩法中也是一大强将。"],
    	["武安阁","要求种族：魔族#e门派特色：物理攻击型、具有强大的物理攻击能力。#e推荐加点：5力、4力1敏、4力1体。#e●两大物理伤害的武安阁，点杀能力一点都不比剑侠居低，乱舞后还不用休息，单缺点就是太消耗蓝，续航能力不足。在竞技玩法和练级中，与剑侠居有同等的地位。"],
    	["封神台","要求种族：仙族#e门派特点：法术伤害型、具有强大群秒技能#e推荐加点：5法、4法1体#e●两大法系之一，练级最受欢迎的门派，当然你要有一定的装备，不然小心免费回城。七国里的怪物理攻击较高，所以很多玩家都注重于物理防御，导致在竞技玩法中，法系的输出也相当的可观。"],
    	["仙人洞","要求种族：仙族#e门派特点：辅助攻击型，具有固定伤害和持续恢复，以及各种增益。#e推荐加点：3体2耐、2体2耐1速#e●在前期，玩家伤害普遍不高，血量也低的时候，仙人洞的固定伤害就是一大利器，又肉又能输出，是前期练级最重要的一员。"],
    	["神女峰","要求种族：仙族#e门派特点：辅助攻击型，具有单体高伤、复活、持续蓝恢复、封印#e推荐加点：4力1体、3力2法(攻击型)、3体2耐(辅助型)#e●神女是又能输出又能复活又能封的门派，绝对可以省下奶妈与控制的位置，多加一个输出，大大加快练级速度。"]],
    	//实力提升
    	[["人物升级",""],
    	["装备打造",""],
    	["修炼提升",""],
    	["宠物进阶",""],
    	["坐骑养成",""]],
    	//辅助能力
    	[["辅助技能",""],
    	["剧情技能",""],
    	["家园种植",""]],
    ];

    PromptActivity.Open=function( pls)
    	{
    		var pa;
    		if(XStat$1.gi().iXStat==XStat$1.GS_LOADING1)XStat$1.gi().PopStat(1);
    		if(XStat$1.gi().iXStat==XStat$1.GS_PROMPTACTIVITY)pa=XStat$1.gi().LastStat(0);
    		else pa=XStat$1.gi().PushStat(XStat$1.GS_PROMPTACTIVITY);

    		var i=0;
    		while(true)
    		{
    			if(pls.GetNextByte()==0)break;
    			pa.alist[i].sName=pls.GetNextString();
    			pa.alist[i].proc=pls.GetNextByte();
    			pa.alist[i].max=pls.GetNextByte();
    			pa.alist[i].add=pls.GetNextByte();
    			pa.alist[i].sDetail=pls.GetNextString();
    			i++;
    		}
    		pa.iACount=i;
    		pa.iNumber=pls.GetNextShort();
    		pa.iAPPoint=pls.GetNextByte();//当前礼品指向
    		pa.iAPCount=pls.GetNextByte();//礼品包数量
    		for(i=0;i<pa.iAPCount;i++)
    		{
    			pa.aprice[i].iNeed=pls.GetNextShort();
    			pa.aprice[i].iExp=pls.GetNextInt();
    			pa.aprice[i].iMoney=pls.GetNextInt();
    			
    			pa.aprice[i].tid1=pls.GetNextShort();
    			pa.aprice[i].tcount1=pls.GetNextByte();
    			pa.aprice[i].tid2=pls.GetNextShort();
    			pa.aprice[i].tcount2=pls.GetNextByte();
    		}
    		pa.iTodayWeek=pls.GetNextByte();
    		pa.iTodayDay=pls.GetNextByte();
    		pa.iMaxDay=pls.GetNextByte();
    		pa.iMonth=pls.GetNextByte();
    //		pa.iTodayDay=20;
    //		pa.iMaxDay=31;
    //		pa.iMonth=3;
    //		GmPlay.sop("iweek="+pa.iWeek);
    	};

    PromptActivity._SPECIALDAY=[1,3,7,10,15,20,28];
    PromptActivity._SPECIALTID=[ ];
    PromptActivity.aa_specialframe=null;
    PromptActivity.aa_specialframe2=null;

    PromptActivity._ALable=[["活","跃"],
    		["活","动"],
    		["签","到"],
    		["玩","法"]
    ];

    class TeamZhen extends BaseClass{

    	constructor( ani)
    	{
    		super();
    		var i,j;
    		
    		this.iW=900;
    		this.iH=600;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_zhen=new Array(8);//
    		for(i=0;i<6;i++)
    		{
    			this.btn_zhen[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_zhen[i].InitButton("按钮2_121");
    			this.btn_zhen[i].sName=TeamZhen._ZHEN[i+1][0];
    		}
    		
    		this.se=new StarEffect();
    		this.se.Init1(0, 0, 120, 48, 50);
    		
    		this.aa_body=new Array(5);//
    		this.aa_weapon=new Array(5);//
    		this.aa_cls=new Array(5);//
    		for(i=0;i<5;i++)
    		{
    			this.aa_body[i]=null;
    			this.aa_weapon[i]=null;
    			this.aa_cls[i]=new Array(5);
    			for(j=0;j<5;j++)this.aa_cls[i][j]=new AnimaAction();
    		}
    		this.aa_add=GmPlay$1.xani_nui2.InitAnimaWithName("增减提示", null);
    		
    		this.poslist=new Array(5);//
    		for(i=0;i<5;i++)this.poslist[i]=new Int32Array(2);
    		this.iLockPos=-1;
    		
    		this.btn_ts=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_ts.InitButton("感叹提示");
    		this.btn_ts.Move(this.iX+this.iW-120, this.iY+this.iH-120, 65, 65);
    		
    		this.bShowKe=false;
    	}

    	Draw()
    	{
    		var i,j,k;
    		var offx,offy;
    		
    		DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH, "阵", "法");
    		this.btn_close.Draw();
    		
    		DrawMode$1.new_framein(this.iX+25, this.iY+25, 150, this.iH-50);
    		for(i=0;i<6;i++)
    		{
    			if((GmMe$1.me.iFlag[14]&(1<<i))==0 || !MyTeam$1.bTeamLeader())
    			{//没有此阵，不是队长
    				this.btn_zhen[i].bDisable=true;
    			}
    			if(GmMe$1.iTeamZhen==i)
    			{
    				this.btn_zhen[i].bMouseDown=true;
    				this.btn_zhen[i].bMouseIn=true;
    			}
    			this.btn_zhen[i].Move(this.iX+25+15, this.iY+25+15+(48+15)*i, 121, 48);
    			this.btn_zhen[i].Draw();
    			if(GmMe$1.iTeamZhen==i)
    			{
    				this.se.Logic();
    				this.se.Draw(this.iX+25+15, this.iY+25+15+(48+15)*i);
    			}
    		}
    		
    		offx=this.iX+300;
    		offy=this.iY+360;
    		DrawMode$1.new_framein(this.iX+25+150+25, this.iY+25, this.iW-150-75, this.iH-50);

    		for(j=0;j<3;j++)
    		{
    			for(i=0;i<5;i++)
    			{
    				offx=this.iX+300+80*i+80*j;
    				offy=this.iY+360-60*i+60*j;
    				if(TeamZhen._ZHENSTAND[GmMe$1.iTeamZhen][j][i]>0)
    				{
    					if(TeamZhen._ZHENSTAND[GmMe$1.iTeamZhen][j][i]==1)GmPlay$1.xani_nui2.DrawAnima(offx, offy, "地上格子",1);
    					else if(TeamZhen._ZHENSTAND[GmMe$1.iTeamZhen][j][i]>1)GmPlay$1.xani_nui2.DrawAnima(offx, offy, "地上格子",2);
    					
    					this.poslist[TeamZhen._ZHENSTAND[GmMe$1.iTeamZhen][j][i]-1][0]=offx;
    					this.poslist[TeamZhen._ZHENSTAND[GmMe$1.iTeamZhen][j][i]-1][1]=offy;
    				}
    				else GmPlay$1.xani_nui2.DrawAnima(offx, offy, "地上格子",0);
    				
    //				M3DFast.gi().DrawTextEx(offx, offy, ""+i+","+j, 0xffffffff, 50, 101, 1, 1, 0, 0, 0);
    			}
    		}
    		if(this.iLockPos>0)
    		{
    			GmPlay$1.xani_nui2.DrawAnima(this.poslist[this.iLockPos][0],this.poslist[this.iLockPos][1], "地上格子",3);
    		}
    		DrawBuffer.gi().ClearBuffer();
    		for(j=0;j<3;j++)
    		{
    			for(i=0;i<5;i++)
    			{
    				offx=this.iX+300+80*i+80*j;
    				offy=this.iY+360-60*i+60*j;
    				if(TeamZhen._ZHENSTAND[GmMe$1.iTeamZhen][j][i]>0)
    				{
    					//画点上的人
    					this.Draw_role(offx,offy,TeamZhen._ZHENSTAND[GmMe$1.iTeamZhen][j][i]-1);
    					//画对应位置的加成
    					//Draw_add(offx,offy,TeamZhen._ZHENSTAND[GmMe.iTeamZhen][j][i]-1);
    				}
    				
    //				M3DFast.gi().DrawTextEx(offx, offy, ""+i+","+j, 0xffffffff, 50, 101, 1, 1, 0, 0, 0);
    			}
    		}
    		DrawBuffer.gi().SortAndDraw();

    		if(!MyTeam$1.bFullTeam())M3DFast$1.gi().DrawTextEx(this.iX+25+150+25+25, this.iY+this.iH-60, "提示：组满5人阵型才会生效", 0xffff0000, 20, 101, 1, 1, 0, 0, 0);
    		else M3DFast$1.gi().DrawTextEx(this.iX+25+150+25+25, this.iY+this.iH-60, "提示：队长点击格子可交换队员位置", 0xffff0000, 20, 101, 1, 1, 0, 0, 0);

    //		M3DFast.gi().DrawTextEx(this.iX+this.iW, this.iY+this.iH-60, "提示：队长点击格子可交换队员位置", 0xffff0000, 20, 101, 1, 1, 0, 0, 0);
    		this.btn_ts.Draw();
    		
    		if(this.bShowKe)
    		{
    			offx=this.iX+this.iW-120-7*80+30;
    			offy=this.iY+this.iH-120-7*30+30;
    			M3DFast$1.gi().FillRect_2D(offx, offy, offx+7*80, offy+7*30, 0xa0000000);
    			
    			M3DFast$1.gi().FillRect_2D(offx, offy+GmMe$1.iTeamZhen*30+30, offx+7*80, offy+GmMe$1.iTeamZhen*30+60, 0xa0ff0000);
    			for(i=0;i<7;i++)
    			{
    				for(j=0;j<7;j++)
    				{
    					M3DFast$1.gi().DrawTextEx(offx+i*80+40, offy+j*30+15, TeamZhen._ZHEN[j][i], 0xffffffff, 20, 101, 1, 1, 0, -2,-2);
    				}
    			}
    		}
    	}

    	Draw_role( offx, offy, i)
    	{//增减提示
    		var j;
    		var xb;
    		var nr;
    		if(MyTeam$1.iTmpTeamRid[i]==Gameing.gameing.me.iRid)
    		{//自己
    			xb=GmMe$1.me.iRace*2+GmMe$1.me.iSex;
    			DrawBuffer.gi().BeginGroup();
    			FireworksEffect.DrawAura(0,offx, offy,DrawBuffer.gi(),offy);
    			if(this.aa_body[i]==null)
    			{
    				this.aa_body[i]=GmPlay$1.xani_newrole[GmMe$1.me.iRace*2+GmMe$1.me.iSex].InitAnimaWithName("战斗站立_左上", null);
    				for(j=0;j<SortAnima._CHANGECOLOR[xb].length;j++)
    				{
    					if(GmMe$1.me.iColor[j]<=0 || GmMe$1.me.iColor[j]>=6)continue;
    					GmPlay$1.xani_color[xb][GmMe$1.me.iColor[j]-1].InitAnimaWithName(SortAnima._CHANGECOLOR[xb][j]+"_战斗站立_左上", this.aa_cls[i][j]);
    				}
    			}
    //			GmPlay.sop("tid="+GmMe.me.iWeapTid);
    			
    			if(this.aa_weapon[i]==null && GmMe$1.me.iWeapTid>=0)
    			{
    				this.aa_weapon[i]=GmPlay$1.xani_weap[GmMe$1.me.iRace*2+GmMe$1.me.iSex][SortAnima.WeapFlag(GmMe$1.me.iWeapTid)].InitAnimaWithName("战斗站立_左上", null);
    			}

    			DrawBuffer.gi().DrawAnima_aa(offy, null,offx, offy, this.aa_body[i]);
    			for(j=0;j<SortAnima._CHANGECOLOR[xb].length;j++)
    			{
    				if(GmMe$1.me.iColor[j]<=0 || GmMe$1.me.iColor[j]>=6)continue;
    				this.aa_cls[i][j].iFrame=this.aa_body[i].iFrame;
    				DrawBuffer.gi().DrawAnima_aa(offy, null, offx, offy, this.aa_cls[i][j]);
    			}
    			if(this.aa_weapon[i]!=null && GmMe$1.me.iWeapTid>=0)
    			{
    				DrawBuffer.gi().DrawAnima_aa(offy, null,offx, offy, this.aa_weapon[i]);
    				this.aa_weapon[i].NextFrame();
    			}
    			this.aa_body[i].NextFrame();
    			DrawBuffer.gi().DrawText_2(offy, 1,offx,offy+20,GmMe$1.me.sName, 0xff80ff80, 20, 1, 0xff000000);
    			DrawBuffer.gi().EndGroup();
    //			\(MapManager.gi().iOffx + this.iX, MapManager.gi().iOffy + this.iY + 30,sName, 0xff80ff80, 20, 1, 0xff000000);
    //			DrawName(offx,offy,GmMe.me.sName,GameData.sSchools[GmMe.me.rbs.iSchoolId],GmMe.me.rbs.iLev);
    		}
    		else
    		{//其他人
    			nr=Gameing.gameing.findnrs(MyTeam$1.iTmpTeamRid[i]);
    			if(nr!=null)
    			{
    				xb=nr.iRace*2+nr.iSex;
    				DrawBuffer.gi().BeginGroup();
    				FireworksEffect.DrawAura(0,offx, offy,DrawBuffer.gi(),offy);
    				if(this.aa_body[i]==null)
    				{
    					this.aa_body[i]=GmPlay$1.xani_newrole[nr.iRace*2+nr.iSex].InitAnimaWithName("战斗站立_左上", null);
    					for(j=0;j<SortAnima._CHANGECOLOR[xb].length;j++)
    					{
    						if(nr.iColor[j]<=0 || nr.iColor[j]>=6)continue;
    						GmPlay$1.xani_color[xb][nr.iColor[j]-1].InitAnimaWithName(SortAnima._CHANGECOLOR[xb][j]+"_战斗站立_左上", this.aa_cls[i][j]);
    					}
    				}
    				if(this.aa_weapon[i]==null && nr.iWeapTid>=0)
    				{
    					this.aa_weapon[i]=GmPlay$1.xani_weap[nr.iRace*2+nr.iSex][SortAnima.WeapFlag(nr.iWeapTid)].InitAnimaWithName("战斗站立_左上", null);
    				}

    				DrawBuffer.gi().DrawAnima_aa(offy, null,offx, offy, this.aa_body[i]);
    				for(j=0;j<SortAnima._CHANGECOLOR[xb].length;j++)
    				{
    					if(nr.iColor[j]<=0 || nr.iColor[j]>=6)continue;
    					this.aa_cls[i][j].iFrame=this.aa_body[i].iFrame;
    					DrawBuffer.gi().DrawAnima_aa(offy, null, offx, offy, this.aa_cls[i][j]);
    				}
    				if(this.aa_weapon[i]!=null && nr.iWeapTid>=0)
    				{
    					DrawBuffer.gi().DrawAnima_aa(offy, null,offx, offy, this.aa_weapon[i]);
    					this.aa_weapon[i].NextFrame();
    				}
    				this.aa_body[i].NextFrame();
    				
    				DrawBuffer.gi().DrawText_2(offy, 1,offx,offy+20,nr.sName, 0xff80ff80, 20, 1, 0xff000000);
    				DrawBuffer.gi().EndGroup();
    //				M3DFast.gi().DrawText_2(offx, offy+20, nr.sName, 0xff80ff80, 20, 101, 1, 1, 0, -2, 0, 1, 0xff000000);
    //				DrawName(offx,offy,nr.sName,GameData.sSchools[nr.iSchoolId],nr.iLev);
    			}
    		}
    		var k=0;
    		switch(TeamZhen._ZHENADD[GmMe$1.iTeamZhen][i].length)
    		{
    		case 1:
    			k=25;
    			break;
    		case 2:
    			k=35;
    			break;
    		case 3:
    			k=45;
    			break;
    		}
    		for(j=0;j<TeamZhen._ZHENADD[GmMe$1.iTeamZhen][i].length;j++)
    		{//58*21
    			DrawBuffer.gi().DrawAnima_aa(offy+1, null, offx, offy+j*20-k, this.aa_add);
    			DrawBuffer.gi().DrawText(offy+2, 1, offx+58/2, offy+21/2+j*20-k, TeamZhen._ZHENADD[GmMe$1.iTeamZhen][i][j], 0xffffffff, 16);
    		}
    	}

    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.bShowKe)
    		{
    			if(msg==3)this.bShowKe=false;
    			return true;
    		}
    		if(this.btn_ts.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ts.bCheck())
    			{//查看相克情况
    				this.bShowKe=true;
    			}
    			return true;
    		}
    		for(i=0;i<6;i++)
    		{
    			if(this.btn_zhen[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_zhen[i].bCheck())
    				{
    					GmMe$1.iTeamZhen=i;
    					GmProtocol$1.gi().s_ChangeZhen(i);
    //					EasyMessage.easymsg.AddMessage("5人组队阵法才可生效");
    				}
    			}
    		}
    		for(i=1;i<5;i++)
    		{//看是否在菱形内
    			if(XDefine$1.bInLX(x, y, this.poslist[i][0], this.poslist[i][1], 148, 112))
    			{
    				if(msg==1 && this.iLockPos>0 && this.iLockPos!=i)
    				{//交换
    					GmProtocol$1.gi().s_TeamOperate(8,this.iLockPos,i);
    					this.iLockPos=-1;
    				}
    				else
    				{//选中
    					this.iLockPos=i;
    				}
    				return true;
    			}
    		}
    		this.iLockPos=-1;
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    			return true;
    		}
    		return false;
    	}
    }
    TeamZhen._ZHEN=[
    	["          ","普通阵","天罡阵","八卦阵","疾风阵","飞龙阵","聚星阵"],
    	["普通阵","0%",     "-5%",   "-5%",   "-5%",   "-5%",    "-5%"],
    	["天罡阵","5%",     "0%",    "-5%",    "5%",    "10%",   "-10%"],
    	["八卦阵","5%",     "5%",     "0%",     "10%",  "-10%", "-5%"],
    	["疾风阵","5%",     "-5%",   "-10%",  "0%",   "5%",      "10%"],
    	["飞龙阵","5%",     "-10%", "10%",    "-5%", "0%",      "5%"],
    	["聚星阵","5%",     "10%",   "5%",     "-10%","-5%",    "0%"]];
    //1物攻，2物防，3法攻，4法防，5+速，6-速，7+封，8+物爆，9+法爆
    TeamZhen._ZHENADD=[
    	[[ ],[ ],[ ],[ ],[ ]],
    	
    	[["+5%物攻","+5%法攻"],//天罡，攻
    	["+5%物攻","+5%法攻"],
    	["+5%物攻","+5%法攻"],
    	["+5%物攻","+5%法攻"],
    	["+5%物攻","+5%法攻"]],
    	
    	[["+3%物防","+3%法防"],//八卦，防
    	["+5%法防"],
    	["+5%法防"],
    	["+5%物防"],
    	["+5%物防"]],
    	
    	[["+5%速度"],//疾风，速度
    	["+5%速度"],
    	["+5%速度"],
    	["+5%速度"],
    	["+5%速度"]],
    	
    	[["+8%物暴"],//飞龙，法术
    	["+5%法攻"],
    	["+5%法攻"],
    	["+5%速度"],
    	["+5%速度"]],
    	
    	[["+8%法攻"],//聚星，搭配
    	["+5%封中"],
    	["+5%法防"],
    	["+5%物防"],
    	["+5%物防"]],
    ];
    TeamZhen._ZHENSTAND=[
    	[[0,0,0,0,0],//普通阵
    	[4,2,1,3,5],
    	[0,0,0,0,0]],
    	
    	[[0,0,0,0,0],//天罡阵
    	[4,2,0,3,5],
    	[0,0,1,0,0]],
    	
    	[[0,0,0,0,0],//八卦阵
    	[4,0,0,0,5],
    	[0,2,1,3,0]],
    	
    	[[0,0,0,0,0],//疾风阵
    	[4,0,1,0,5],
    	[0,2,0,3,0]],
    	
    	[[0,0,0,0,0],//飞龙阵
    	[0,2,0,3,0],
    	[4,0,1,0,5]],
    	
    	[[0,0,0,0,0],//聚星阵
    	[0,2,0,3,0],
    	[0,4,1,5,0]]
    ];
    TeamZhen.CleanAnima=function()
    {
    	var i;
    	if(!XStat$1.gi().CheckStat(XStat$1.GS_TEAMZHEN))return;
    	var to=XStat$1.gi().LastStat(0);
    	for(i=0;i<5;i++)
    	{
    		to.aa_body[i]=null;
    		to.aa_weapon[i]=null;
    	}
    	to.iLockPos=-1;
    	//检查队伍列表页面，也要置null
    };
    TeamZhen.Open=function()
    {
    	var tz;
    	if(XStat$1.gi().iXStat==XStat$1.GS_TEAMZHEN)tz=XStat$1.gi().LastStat(0);
    	else tz=XStat$1.gi().PushStat(XStat$1.GS_TEAMZHEN);
    };

    class _NEARROLES
    {//附近玩家列表
    /*	public int iRid;
    	public String sName;
    	public int iLev;
    	public int iRaX;
    	public int iSchool;
    	public boolean bApplyed;//申请者，提示同意/拒绝
    	*/
    	copy( nr)
    	{
    		this.iRid=nr.iRid;
    		this.sName=nr.sName;
    		this.iLev=nr.iLev;
    		this.iRaX=nr.iRaX;
    		this.iSchool=nr.iSchool;
    		this.bApplyed=nr.bApplyed;
    	}
    	swap( nr)
    	{
    		var i;
    		var s;
    		var b;
    		i=this.iRid;
    		this.iRid=nr.iRid;
    		nr.iRid=i;
    		
    		s=this.sName;
    		this.sName=nr.sName;
    		nr.sName=s;
    		
    		i=this.iLev;
    		this.iLev=nr.iLev;
    		nr.iLev=i;
    		
    		i=this.iRaX;
    		this.iRaX=nr.iRaX;
    		nr.iRaX=i;
    		
    		i=this.iSchool;
    		this.iSchool=nr.iSchool;
    		nr.iSchool=i;
    		
    		b=this.bApplyed;
    		this.bApplyed=nr.bApplyed;
    		nr.bApplyed=b;
    	}
    }

    class TeamOperate extends BaseClass{
    	



    	_rolelist( pls)
    	{
    		var i,j;
    		if(pls.GetNextByte()==1)this.iNRCount=0;
    		j=this.iNRCount;
    		while(true)
    		{
    			i=pls.GetNextInt();
    			if(i==0)break;
    			this.nrs[j]=new _NEARROLES();
    			this.nrs[j].iRid=i;
    			this.nrs[j].sName=pls.GetNextString();
    			this.nrs[j].iLev=pls.GetNextShort();
    			i=pls.GetNextByte();
    			this.nrs[j].iRaX=i%10;
    			this.nrs[j].iSchool=parseInt(i/10);
    			this.nrs[j].bApplyed=false;
    			j++;
    			if(j>=TeamOperate.MAXNEARROLE)break;
    		}
    		this.iNRCount=j;
    	}
    	remove_from_list( rid)
    	{
    		var i;
    		for(i=0;i<this.iNRCount;i++)
    		{
    			if(this.nrs[i].iRid==rid)
    			{//去除这个
    				this.iNRCount--;
    				for(;i<this.iNRCount;i++)
    				{
    					this.nrs[i].copy(this.nrs[i+1]);
    				}
    				return;
    			}
    		}
    	}
    	
    	constructor( ani)
    	{
    		super();
    		var i,j;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=1100;
    		this.iH=585;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		
    		this.btn_zf=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_zf.InitButton("按钮2");
    		this.btn_zf.sName="设置阵法";
    		
    		this.btn_dest=new XButton(GmPlay$1.xani_nui4);
    		this.btn_dest.InitButton("队伍目标改变");
    		this.btn_dest.bSingleButton=true;
    //		this.btn_dest.sName="设置宗旨";
    		
    		this.btn_change=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_change.InitButton("按钮2");
    		this.btn_change.sName="升为队长";
    		
    		this.chk_autoback=new XCheckBox(GmPlay$1.xani_button);
    		this.chk_autoback.InitBox("复选框50_53");
    		if((GmMe$1.me.iFlag[2]&2048)==0)this.chk_autoback.bTrue=true;
    		else this.chk_autoback.bTrue=false;
    		this.chk_autoback.sDetail="自动响应召回";
    		
    		this.btn_fastsend=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_fastsend.InitButton("按钮2");
    		this.btn_fastsend.sName="发送队伍";
    		
    		this.btn_autoteam=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_autoteam.InitButton("按钮2");
    		this.btn_autoteam.sName="自动匹配";

    		this.bLock=false;

    		this.iNRCount=0;
    		this.nrs=new Array(TeamOperate.MAXNEARROLE);//
    		for(i=0;i<TeamOperate.MAXNEARROLE;i++)this.nrs[i]=null;
    		this.iOffY=0;
    		this.iLockY=-1;
    		this.iLockDelay=100;
    		this.iRolePoint=-1;
    		
    		this.iOBCount=0;
    		this.bResetOBC=false;

    		this.btn_operate=new Array(12);//
    		for(i=0;i<12;i++)this.btn_operate[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		
    		this.iPage=0;
    		this.btn_page=new Array(2);//
    		for(i=0;i<2;i++)
    		{
    			this.btn_page[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_page[i].InitButton("右侧标签");
    			this.btn_page[i].Move(this.iX+this.iW-15, this.iY+40+125*i, 50, 140);
    		}

    		
    		this.btn_refuse=new Array(TeamOperate.MAXLIST);//
    		this.btn_roles=new Array(TeamOperate.MAXLIST);//
    		this.btn_away=new Array(TeamOperate.MAXLIST);//
    		this.aa_body=new Array(TeamOperate.MAXLIST);//
    		this.aa_weapon=new Array(TeamOperate.MAXLIST);//
    		this.aa_cls=new Array(TeamOperate.MAXLIST);//
    		this.btn_watch=new Array(TeamOperate.MAXLIST);//
    		for(i=0;i<TeamOperate.MAXLIST;i++)
    		{
    			this.aa_cls[i]=new Array(5);
    			this.btn_watch[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_watch[i].InitButton("队伍查看50_50");
    			
    			this.btn_refuse[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_refuse[i].sName="拒绝";//踢出
    			this.btn_refuse[i].InitButton("按钮1_110");

    			this.btn_roles[i]=new XButton(ani);
    //			this.btn_roles[i].sName=""+(i+1);
    			this.btn_roles[i].bSingleButton=true;
    			
    			this.btn_away[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_away[i].InitButton("队伍暂离72_42");
    			this.btn_away[i].sName="暂离";
    			this.btn_away[i].iNameSize=25;

    			this.aa_body[i]=null;
    			this.aa_weapon[i]=null;
    			for(j=0;j<5;j++)this.aa_cls[i][j]=new AnimaAction();
    		}
    		this.iScrollX=0;
    		if(TeamOperate.trl==null)
    		{
    			TeamOperate.trl=new Array(TeamOperate.MAXLIST);//
    			for(i=0;i<TeamOperate.MAXLIST;i++)TeamOperate.trl[i]=new TeamRequestList();
    			TeamOperate.iRequestCount=0;
    		}
    		this.bLock=true;
    	}
    	DrawName( offx, offy, name, school, lev, map)
    	{
    		this.pm3f.DrawTextEx(offx,offy+55, name, 0xffffffff, 20, 101, 1, 1, 0, -2,-2);
    		
    		this.pm3f.DrawTextEx(offx-50,offy+55+40, school, 0xffffffff, 20, 101, 1, 1, 0, -1,-2);
    		this.pm3f.DrawTextEx(offx+50,offy+55+40, ""+lev, 0xffffffff, 20, 101, 1, 1, 0, -3,-2);
    		
    		this.pm3f.DrawTextEx(offx,offy+55+80, map, 0xffffffff, 20, 101, 1, 1, 0, -2,-2);
    	}
    	
    	Draw()
    	{
    		if(MyTeam$1.bNoTeam())
    		{
    			XStat$1.gi().PopStat(1);
    			return;
    		}
    		
    		if(MyTeam$1.bTeamLeader())this.iW=1100;
    		else this.iW=1100-360-50;
    		this.iH=585;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH, "队", "伍");
    		DrawMode$1.new_framein(this.iX+30, this.iY+30, 630, this.iH-60);
    		
    		this.btn_close.Move(this.iX+this.iW-35, this.iY+-25, 60, 60);
    		this.btn_close.Draw();
    		
    		if(this.iPage==0)this.Draw_0();
    		else this.Draw_1();
    		
    		if(MyTeam$1.bTeamLeader())
    		{
    			this.Draw_near();//附近玩家
    			
    			for(var i=0;i<2;i++)
    			{
    				if(this.iPage==i)
    				{
    					this.btn_page[i].bMouseIn=true;
    					this.btn_page[i].bMouseDown=true;
    				}
    				this.btn_page[i].Draw();
    			}

    			DrawMode$1.new_lableword4(this.iX+this.iW-15, this.iY+50+125*0-4, 40, 70,this.iPage==0,"我","的","队","伍");
    			DrawMode$1.new_lableword4(this.iX+this.iW-15, this.iY+50+125*1-4, 40, 70,this.iPage==1,"申","请","列","表");
    		}
    		else
    		{
    			if(this.iPage==1)this.iPage=0;
    		}
    		
    //		M3DFast.gi().FillRect_2D(this.iX+50, this.iY+180, this.iX+50+120*5, this.iY+180+300+65, 0x80ffffff);
    	}
    	Draw_1()
    	{
    		var i,j,offx,offy;
    		var xb;

    		this.btn_zf.Move(this.iX+50, this.iY+50, 145, 56);
    		this.btn_change.Move(this.iX+50+120*5-145-10, this.iY+50, 145, 56);
    		this.btn_fastsend.Move(this.iX+50+280+10, this.iY+50+65, 145, 56);
    		this.btn_autoteam.Move(this.iX+50+280+10+145+10, this.iY+50+65, 145, 56);
    		this.btn_dest.Move(this.iX+50, this.iY+50+65, 280, 54);
    		
    		this.btn_zf.Draw();
    		if(MyTeam$1.bTeamLeader())
    		{
    			this.btn_fastsend.Draw();
    			if(MyTeam$1.bLeaderAutoTeaming)this.btn_autoteam.sName="匹配中...";
    			else this.btn_autoteam.sName="自动匹配";
    			this.btn_autoteam.Draw();
    		}
    		
    //		this.btn_dest.Draw();
    		this.Draw_Target();
    		
    		M3DFast$1.gi().SetViewClip(this.iX+50, this.iY+180, this.iX+50+120*5, this.iY+180+300+65);
    		for(i=0;i<TeamOperate.iRequestCount;i++)
    		{
    			offx=this.iX+50+i*120+55-this.iScrollX;
    			offy=this.iY+180+150;
    			
    			GmPlay$1.xani_nui2.DrawAnima(offx-55, offy-150, "队伍人物格子1",0);
    			if(this.bLock==true && this.iLockPoint1==i)DrawMode$1.frame_type2("黄色透明框a25_25", offx-55,offy-150, 110, 180, 25, 25);

    			this.btn_roles[i].Move(offx-55, offy-150, 110,180);
    			this.btn_refuse[i].Move(offx-55, offy+310-150, 110, 52); 
    			this.btn_away[i].Move(offx-55+110-72, offy+180-42-150, 72, 42);
    			this.btn_watch[i].Move(offx-55+110-50, offy-150, 50, 50);
    			
    			GmPlay$1.xani_nui1.DrawAnimaEx(offx,offy, "选中角色底", GmPlay$1.iDelay, 101, 0.5, 0.5, 0, -2, -2);

    			{//其他人
    				xb=TeamOperate.trl[i].iRas;
    				
    				if(this.aa_body[i]==null)
    				{
    					this.aa_body[i]=GmPlay$1.xani_newrole[xb].InitAnimaWithName("站立_下", null);
    					for(j=0;j<SortAnima._CHANGECOLOR[xb].length;j++)
    					{
    						if(TeamOperate.trl[i].iColor[j]<=0 || TeamOperate.trl[i].iColor[j]>=6)continue;
    						GmPlay$1.xani_color[xb][TeamOperate.trl[i].iColor[j]-1].InitAnimaWithName(SortAnima._CHANGECOLOR[xb][j]+"_站立_下", this.aa_cls[i][j]);
    					}
    				}
    				if(TeamOperate.trl[i].iWeapTid>=0 && this.aa_weapon[i]==null)
    				{
    					this.aa_weapon[i]=GmPlay$1.xani_weap[TeamOperate.trl[i].iRas][SortAnima.WeapFlag(TeamOperate.trl[i].iWeapTid)].InitAnimaWithName("站立_下", null);
    				}
    				
    				this.aa_body[i].Draw(offx,offy);
    				for(j=0;j<SortAnima._CHANGECOLOR[xb].length;j++)
    				{
    					if(TeamOperate.trl[i].iColor[j]<=0 || TeamOperate.trl[i].iColor[j]>=6)continue;
    					this.aa_cls[i][j].iFrame=this.aa_body[i].iFrame;
    					this.aa_cls[i][j].Draw(offx,offy);
    				}
    				if(this.aa_weapon[i]!=null && TeamOperate.trl[i].iWeapTid>=0)
    				{
    					this.aa_weapon[i].Draw(offx,offy);
    					this.aa_weapon[i].NextFrame();
    				}
    				this.aa_body[i].NextFrame();
    				this.DrawName(offx,offy,TeamOperate.trl[i].sName,GameData$1.sSchools[TeamOperate.trl[i].iSchoolId],TeamOperate.trl[i].iLev,TeamOperate.trl[i].sMapName);
    			}
    			
    			this.btn_refuse[i].sName="同意";
    			this.btn_refuse[i].Draw();

    			this.btn_away[i].sName="拒绝";
    			this.btn_away[i].Draw();

    			this.btn_watch[i].Draw();
    		}
    		M3DFast$1.gi().NoClip();
    		if(TeamOperate.iRequestCount<=5)this.iScrollW=0;
    		else this.iScrollW=(TeamOperate.iRequestCount-5)*120;
    		if(!this.bLockX)
    		{
    			if(this.iScrollX<0)this.iScrollX=0;
    			if(this.iScrollX>this.iScrollW)this.iScrollX=this.iScrollW;
    		}
    	}

    	Draw_Target()
    	{
    		DrawMode$1.frame_type1("队伍目标40_54", this.btn_dest.iX, this.btn_dest.iY, this.btn_dest.iW, 40);
    //		if(MyTeam.iTeamTarget==0)TeamOperate.sZz="无目标";
    //		else 
    			if(MyTeam$1.iTeamTarget>=0 && MyTeam$1.iTeamTarget<8)
    		{
    			TeamOperate.sZz=TeamCreate._TARGET[MyTeam$1.iTeamTarget]+"   "+MyTeam$1.iLev1+"级~"+MyTeam$1.iLev2+"级";
    		}
    		M3DFast$1.gi().DrawText_2(this.btn_dest.iX+20, this.btn_dest.iY+27, TeamOperate.sZz, 0xff003e57, 24, 101, 1, 1, 0, 0, -2, 3,0xffffffff);
    	}
    	Draw_0()
    	{
    		var i,j,offx,offy;
    		var xb;

    		this.btn_zf.Move(this.iX+50, this.iY+50, 145, 56);
    		this.chk_autoback.Move(this.iX+50+350, this.iY+50, 50, 53);
    		this.btn_change.Move(this.iX+50+120*5-145-10, this.iY+50, 145, 56);
    		this.btn_dest.Move(this.iX+50, this.iY+50+65, 280, 54);
    		this.btn_fastsend.Move(this.iX+50+280+10, this.iY+50+65, 145, 56);
    		this.btn_autoteam.Move(this.iX+50+280+10+145+10, this.iY+50+65, 145, 56);

    		this.btn_zf.Draw();
    		if(MyTeam$1.bTeamLeader())
    		{
    			this.btn_fastsend.Draw();
    			if(MyTeam$1.bLeaderAutoTeaming)this.btn_autoteam.sName="匹配中...";
    			else this.btn_autoteam.sName="自动匹配";
    			this.btn_autoteam.Draw();
    		}
    		else
    		{
    			this.chk_autoback.Draw();
    		}
    //		this.btn_dest.Draw();
    		this.Draw_Target();

    		for(i=0;i<5;i++)
    		{
    			offy=this.iY+180;
    			
    			GmPlay$1.xani_nui2.DrawAnima(this.iX+50+i*120, offy, "队伍人物格子1",0);
    			
    			if(MyTeam$1.iTmpTeamRid[i]==0)continue;

    			this.btn_roles[i].Move(this.iX+50+i*120, offy, 110,180);
    			this.btn_refuse[i].Move(this.iX+50+i*120, offy+310, 110, 52); 
    			this.btn_away[i].Move(this.iX+50+i*120+110-72, offy+180-42, 72, 42);
    			this.btn_watch[i].Move(this.iX+50+i*120+110-50, offy, 50, 50);
    			
    			offx=this.iX+50+i*120+55;
    			offy=this.iY+180+150;
    			GmPlay$1.xani_nui1.DrawAnimaEx(offx,offy, "选中角色底", GmPlay$1.iDelay, 101, 0.5, 0.5, 0, -2, -2);
    			if(MyTeam$1.iTmpTeamRid[i]==GmMe$1.me.iRid)
    			{//自己
    				xb=GmMe$1.me.iRace*2+GmMe$1.me.iSex;
    				if(this.aa_body[i]==null)
    				{
    					this.aa_body[i]=GmPlay$1.xani_newrole[GmMe$1.me.iRace*2+GmMe$1.me.iSex].InitAnimaWithName("站立_下", null);
    					for(j=0;j<SortAnima._CHANGECOLOR[xb].length;j++)
    					{
    						if(GmMe$1.me.iColor[j]<=0 || GmMe$1.me.iColor[j]>=6)continue;
    						GmPlay$1.xani_color[xb][GmMe$1.me.iColor[j]-1].InitAnimaWithName(SortAnima._CHANGECOLOR[xb][j]+"_站立_下", this.aa_cls[i][j]);
    					}
    				}
    //				GmPlay.sop("tid="+GmMe.me.iWeapTid);
    				
    				if(this.aa_weapon[i]==null && GmMe$1.me.iWeapTid>=0)
    				{
    					this.aa_weapon[i]=GmPlay$1.xani_weap[GmMe$1.me.iRace*2+GmMe$1.me.iSex][SortAnima.WeapFlag(GmMe$1.me.iWeapTid)].InitAnimaWithName("站立_下", null);
    				}

    				if(MyTeam$1.iTeamRid[i]==0)this.aa_body[i].DrawEx(offx, offy, 50, 1, 1, 0, 0, 0);
    				else this.aa_body[i].Draw(offx,offy);
    				for(j=0;j<SortAnima._CHANGECOLOR[xb].length;j++)
    				{
    					if(GmMe$1.me.iColor[j]<=0 || GmMe$1.me.iColor[j]>=6)continue;
    					this.aa_cls[i][j].iFrame=this.aa_body[i].iFrame;
    					if(MyTeam$1.iTeamRid[i]==0)this.aa_cls[i][j].DrawEx(offx, offy, 50, 1, 1, 0, 0, 0);
    					else this.aa_cls[i][j].Draw(offx,offy);
    				}
    				if(this.aa_weapon[i]!=null && GmMe$1.me.iWeapTid>=0)
    				{
    					if(MyTeam$1.iTeamRid[i]==0)this.aa_weapon[i].DrawEx(offx, offy, 50, 1, 1, 0, 0, 0);
    					else this.aa_weapon[i].Draw(offx,offy);
    					this.aa_weapon[i].NextFrame();
    				}
    				this.aa_body[i].NextFrame();
    				this.DrawName(offx,offy,GmMe$1.me.sName,GameData$1.sSchools[GmMe$1.me.rbs.iSchoolId],GmMe$1.me.rbs.iLev,MyTeam$1.sMapName[i]);
    			}
    			else
    			{//其他人
    				xb=MyTeam$1.iRas[i];
    				if(this.aa_body[i]==null)
    				{
    					this.aa_body[i]=GmPlay$1.xani_newrole[xb].InitAnimaWithName("站立_下", null);
    					for(j=0;j<SortAnima._CHANGECOLOR[xb].length;j++)
    					{
    						if(MyTeam$1.iColor[i][j]<=0 || MyTeam$1.iColor[i][j]>=6)continue;
    						GmPlay$1.xani_color[xb][MyTeam$1.iColor[i][j]-1].InitAnimaWithName(SortAnima._CHANGECOLOR[xb][j]+"_站立_下", this.aa_cls[i][j]);
    					}
    				}
    				if(this.aa_weapon[i]==null && MyTeam$1.iWeapTid[i]>=0)
    				{
    					this.aa_weapon[i]=GmPlay$1.xani_weap[MyTeam$1.iRas[i]][SortAnima.WeapFlag(MyTeam$1.iWeapTid[i])].InitAnimaWithName("站立_下", null);
    				}

    				if(MyTeam$1.iTeamRid[i]==0)this.aa_body[i].DrawEx(offx, offy, 50, 1, 1, 0, 0, 0);
    				else this.aa_body[i].Draw(offx,offy);
    				for(j=0;j<SortAnima._CHANGECOLOR[xb].length;j++)
    				{
    					if(MyTeam$1.iColor[i][j]<=0 || MyTeam$1.iColor[i][j]>=6)continue;
    					this.aa_cls[i][j].iFrame=this.aa_body[i].iFrame;
    					if(MyTeam$1.iTeamRid[i]==0)this.aa_cls[i][j].DrawEx(offx, offy, 50, 1, 1, 0, 0, 0);
    					else this.aa_cls[i][j].Draw(offx,offy);
    				}
    				if(this.aa_weapon[i]!=null && MyTeam$1.iWeapTid[i]>=0)
    				{
    					this.aa_weapon[i].Draw(offx,offy);
    					if(MyTeam$1.iTeamRid[i]==0)this.aa_weapon[i].DrawEx(offx, offy, 50, 1, 1, 0, 0, 0);
    					else this.aa_weapon[i].NextFrame();
    				}
    				this.aa_body[i].NextFrame();
    				this.DrawName(offx,offy,MyTeam$1.sName[i],GameData$1.sSchools[MyTeam$1.iSchoolId[i]],MyTeam$1.iLev[i],MyTeam$1.sMapName[i]);
    			}
    			
    			if(this.bLock==true)
    			{
    				if(this.iLockPoint1==i)DrawMode$1.frame_type2("黄色透明框a25_25", this.iX+50+i*120,this.iY+180, 110, 180, 25, 25);
    				else if(this.iLockPoint1>=0 && this.iLockPoint1<5 && MyTeam$1.iTeamRid[this.iLockPoint1]>0)M3DFast$1.gi().DrawTextEx(this.iX+50+i*120+55,this.iY+180+100, "点击交换", 0xffffff00, 25, 101, 1, 1, 0, -2, -2);
    			}
    			
    			if(MyTeam$1.bTeamLeader())
    			{//自己是队长，可以解散和踢其他所有人
    				if(i==0)
    				{
    					this.btn_refuse[i].sName="解散";
    					this.btn_refuse[i].Draw();
    				}
    				else
    				{
    					this.btn_refuse[i].sName="请离";
    					this.btn_refuse[i].Draw();
    				}
    				if(MyTeam$1.iTeamRid[i]<=0)
    				{//此人处于暂离状态，显示召回按钮
    					this.btn_away[i].sName="召回";
    					this.btn_away[i].Draw();
    				}
    			}
    			else if(MyTeam$1.iTmpTeamRid[i]==GmMe$1.me.iRid)
    			{//只能自己离队
    				
    				
    				this.btn_refuse[i].sName="离队";
    				this.btn_refuse[i].Draw();
    				
    				if(MyTeam$1.iTeamRid[i]<=0)
    				{//自己处于暂离状态
    					this.btn_away[i].sName="归队";
    				}
    				else this.btn_away[i].sName="暂离";
    				this.btn_away[i].Draw();
    			}
    			this.btn_watch[i].Draw();
    		}
    		


    		if(!MyTeam$1.bTeamLeader())
    		{
    			this.btn_change.Move(this.iX+50+120*5-145-10, this.iY+50+70, 145, 56);
    			this.btn_change.sName="申请带队";
    			this.btn_change.Draw();
    			return;
    		}

    		if(this.bLock && this.iLockPoint1>0)
    		{
    			this.btn_change.sName="升为队长";
    			this.btn_change.Draw();
    		}
    	}
    	 Draw_near()
    	{
    		var i;
    		var offx,offy;
    		//队长才能看到附近玩家列表
    		offx=this.iX+30+630+20;
    		offy=this.iY+30;
    		var offw=360+30;
    		DrawMode$1.new_framein(offx,offy, offw, this.iH-60);//95*5=475+30=505
    //		var offh=550;
    		M3DFast$1.gi().DrawText_2(offx+offw/2, offy+30, "附 近 玩 家("+this.iNRCount+")", 0xff000000, 30, 101, 1, 1, 0, -2, -2, 3, 0xff80ffff);
    		offx+=15;
    		offy+=55;
    		M3DFast$1.gi().SetViewClip(offx, offy, offx+360, offy+95*4);
    		offy-=this.iOffY;
    		if(this.bResetOBC)this.iOBCount=0;
    		for(i=0;i<this.iNRCount;i++)
    		{
    			if(offy<this.iY+85-95 || offy>this.iY+85+95*4)
    			{
    				offy+=95;
    				continue;
    			}
    			GmPlay$1.xani_nui2.DrawAnima(offx, offy, "队伍列表标签",this.iRolePoint==i?1:0);
    			GmPlay$1.xani_head.DrawAnima(offx+4, offy+4, "新头像"+(this.nrs[i].iRaX), 0);
    			M3DFast$1.gi().DrawTextEx(offx+4+83+10, offy+25, this.nrs[i].sName, 0xffffffff, 30, 101, 1, 1, 0, 0, -2);
    			M3DFast$1.gi().DrawTextEx(offx+4+83+10, offy+65, GameData$1.sSchools[this.nrs[i].iSchool]+" 等级"+this.nrs[i].iLev, 0xffffffff, 20, 101, 1, 1, 0, 0, -2);
    			
    			if(this.bResetOBC)
    			{//重设按钮
    				this.btn_operate[this.iOBCount].exts[0]=this.nrs[i].iRid;
    				if(this.nrs[i].bApplyed)
    				{//申请者，同意，拒绝
    					if(this.iRolePoint==i)
    					{//选中时为拒绝
    						this.btn_operate[this.iOBCount].InitButton("拒绝入队");
    						this.btn_operate[this.iOBCount].exts[1]=0;
    					}
    					else
    					{
    						//没选中为同意
    						this.btn_operate[this.iOBCount].InitButton("同意入队");
    						this.btn_operate[this.iOBCount].exts[1]=1;
    					}
    					this.btn_operate[this.iOBCount].Move(offx+offw-130, offy+(95-60)/2, 90, 60);
    				}
    				else
    				{//邀请
    					this.btn_operate[this.iOBCount].InitButton("邀请入队");
    					this.btn_operate[this.iOBCount].Move(offx+offw-130, offy+(95-60)/2, 90, 60);
    					this.btn_operate[this.iOBCount].exts[1]=2;
    				}
    				this.iOBCount++;
    			}
    //			M3DFast.gi().DrawTextEx(offx+offw-60, offy+95/2, this.nrs[i].bApplyed?"同意":"邀请", 0xffffffff, 30, 101, 1, 1, 0, -2, -2);
    			//tl[i].sName
    			offy+=95;
    		}
    		for(i=0;i<this.iOBCount;i++)
    		{
    			this.btn_operate[i].Draw();
    		}
    		M3DFast$1.gi().NoClip();
    		this.iLockDelay++;
    		this.bResetOBC=false;
    		this.bResetOBC=true;
    	}

    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.iPage==1)
    		{///申请列表操作
    			if(this.bLockX)
    			{
    				if(msg==2)
    				{
    					this.iScrollX+=(this.iLockX-x);
    					this.iLockX=x;
    				}
    				if(msg==3)
    				{
    					this.bLockX=false;
    				}
    				return true;
    			}
    		}
    		if(MyTeam$1.bTeamLeader())//是队长才能滑动右边附近玩家
    		{//滑动申请列表
    			for(i=0;i<2;i++)
    			{
    				if(this.btn_page[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_page[i].bCheck())
    					{
    						if(this.iPage!=i)
    						{
    							this.iPage=i;
    							TeamOperate.CleanAnima();
    						}
    					}
    					return true;
    				}
    			}
    			if(this.btn_fastsend.ProcTouch(msg, x, y))
    			{
    				if(this.btn_fastsend.bCheck())
    				{
    					PublicChat_Send.bOpenInput=false;
    					PublicChat_Send.Open();
    					PublicChat_Send.in_speak.sDetail="";
    					PublicChat_Send.ClearCext();
    					PublicChat_Send.AddTeam();
    				}
    				return true;
    			}
    			if(this.btn_autoteam.ProcTouch(msg, x, y))
    			{
    				if(this.btn_autoteam.bCheck())
    				{
    					GmProtocol$1.gi().s_TeamOperate(25,0,0);
    				}
    				return true;
    			}
    			if(this.bLock && this.iLockPoint1>0)
    			{//锁定，并且不是第一个，提升队长（跟自己交换）
    				if(this.btn_change.ProcTouch(msg, x, y))
    				{
    					if(this.btn_change.bCheck())
    					{
    						GmProtocol$1.gi().s_TeamOperate(8,this.iLockPoint1,0);
    						this.bLock=false;
    					}
    					return true;
    				}
    			}
    			if(this.btn_dest.ProcTouch(msg, x, y))
    			{
    				if(this.btn_dest.bCheck())
    				{//设置宗旨
    					TeamDest.Open();
    				}
    				return true;
    			}
    			var offx=this.iX+30+630+20+15;
    			var offy=this.iY+30+55;
    			if(XDefine$1.bInRect(x, y, offx, offy, 360, 95*4))
    			{
    				for(i=0;i<this.iOBCount;i++)
    				{
    					if(this.btn_operate[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn_operate[i].bCheck())
    						{
    							if(this.btn_operate[i].exts[1]==0)
    							{//拒绝
    								GmProtocol$1.gi().s_TeamOperate(5,this.btn_operate[i].exts[0],0);
    								this.remove_from_list(this.btn_operate[i].exts[0]);
    								this.bResetOBC=true;
    							}
    							else if(this.btn_operate[i].exts[1]==1)
    							{//同意
    								GmProtocol$1.gi().s_TeamOperate(4,this.btn_operate[i].exts[0],0);
    								this.remove_from_list(this.btn_operate[i].exts[0]);
    								this.bResetOBC=true;
    							}
    							else
    							{//邀请
    								GmProtocol$1.gi().s_TeamOperate(6,this.btn_operate[i].exts[0],0);
    								this.remove_from_list(this.btn_operate[i].exts[0]);
    								this.bResetOBC=true;
    							}
    						}
    						return true;
    					}
    				}
    				if(msg==1)
    				{//按下
    					this.iLockDelay=0;
    					this.iLockY=y;
    				}
    				else if(msg==2 && this.iLockY>0)
    				{//移动
    					this.iOffY+=(this.iLockY-y);
    					this.iLockY=y;
    					this.bResetOBC=true;
    				}
    				else if(msg==3 && this.iLockY>0)
    				{
    					this.iOffY+=(this.iLockY-y);
    					this.iLockY=-1;
    					this.bResetOBC=true;
    					if(this.iLockDelay<6)
    					{//选中
    						this.iRolePoint=(y-offy+this.iOffY)/95;
    						GmPlay$1.sop("iTeamPoint="+this.iRolePoint+",,,"+this.iOffY);
    					}
    				}
    				i=(this.iNRCount-4)*95;
    				if(i<0)i=0;
    				if(this.iOffY<0)this.iOffY=0;
    				if(this.iOffY>i)this.iOffY=i;
    				return true;
    			}
    		}
    		else
    		{
    			if(this.chk_autoback.ProcTouch(msg, x, y))
    			{
    				if(this.chk_autoback.bTrue)GmProtocol$1.gi().s_setflag(2, 11, 0);
    				else GmProtocol$1.gi().s_setflag(2, 11, 1);
    			}
    			if(this.btn_change.ProcTouch(msg, x, y))
    			{//申请队长
    				if(this.btn_change.bCheck())
    				{
    					GmProtocol$1.gi().s_TeamOperate(23,0,0);
    				}
    				return true;
    			}
    		}
    		this.iLockY=-1;
    		
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(this.btn_zf.ProcTouch(msg, x, y))
    		{//设置/查看阵法
    			if(this.btn_zf.bCheck())
    			{
    				TeamZhen.Open();
    			}
    			return true;
    		}
    //		if(msg==3 && !XDefine.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    //		{
    //			XStat.gi().PopStat(1);
    //			return true;
    //		}
    		if(this.iPage==0)
    		{
    			for(i=0;i<5;i++)
    			{
    				if(MyTeam$1.iTmpTeamRid[i]==0)continue;

    				if(this.btn_watch[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_watch[i].bCheck())
    					{
    						GmProtocol$1.gi().s_WatchOn(0, MyTeam$1.iTmpTeamRid[i], 0, "");
    					}
    					return true;
    				}
    				if(this.btn_away[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_away[i].bCheck())
    					{
    						if(MyTeam$1.bTeamLeader())
    						{//队长
    							if(MyTeam$1.iTeamRid[i]==0)
    							{//召回暂离的队员
    								GmProtocol$1.gi().s_TeamOperate(22,MyTeam$1.iTmpTeamRid[i],0);
    							}
    						}
    						else
    						{//队员
    							if(MyTeam$1.iTeamRid[i]==0)
    							{//归队
    								GmProtocol$1.gi().s_TeamOperate(21,0,0);
    							}
    							else
    							{//暂离
    								GmProtocol$1.gi().s_TeamOperate(20,0,0);
    							}
    						}
    					}
    					break;
    				}
    				if(this.btn_roles[i].ProcTouch(msg, x, y))
    				{//交换成员
    					if(this.btn_roles[i].bCheck())
    					{//如果我是队长，第一次点击锁定，第二次点击与目标交换
    						if(MyTeam$1.bTeamLeader())
    						{//是队长
    							if(!this.bLock)
    							{
    								this.bLock=true;
    								this.iLockPoint1=i;
    							}
    							else
    							{//第二次点击，进行交换
    								if(this.iLockPoint1!=i)GmProtocol$1.gi().s_TeamOperate(8,this.iLockPoint1,i);
    								this.bLock=false;
    							}
    						}
    					}
    				}
    				if(this.btn_refuse[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_refuse[i].bCheck())
    					{
    						if(MyTeam$1.bTeamLeader())
    						{//自己是队长，可以随便踢人
    							if(i==0)
    							{//队长，自己离队
    								GmProtocol$1.gi().s_TeamOperate(1,GmMe$1.me.iRid,0);//'
    								XStat$1.gi().PopStat(1);
    							}
    							else
    							{//把队员踢出
    								GmProtocol$1.gi().s_TeamOperate(2,MyTeam$1.iTmpTeamRid[i],0);//'
    							}
    							MyTeam$1.iTeamRid[i]=0;
    							MyTeam$1.iTmpTeamRid[i]=0;
    						}
    						else if(MyTeam$1.iTmpTeamRid[i]==GmMe$1.me.iRid)
    						{//自己离队
    							GmProtocol$1.gi().s_TeamOperate(1,GmMe$1.me.iRid,0);//'
    //							GmMe.me.iTeamRid[i]=0;
    							XStat$1.gi().PopStat(1);
    						}
    					}
    				}
    			}
    		}
    		else if(this.iPage==1)
    		{///申请列表操作
    //			if(this.bLockX)
    //			{
    //				if(msg==2)
    //				{
    //					this.iScrollX+=(this.iLockX-x);
    //					this.iLockX=x;
    //				}
    //				if(msg==3)
    //				{
    //					this.bLockX=false;
    //				}
    //				return true;
    //			}
    			if(XDefine$1.bInRect(x, y, this.iX+50, this.iY+180, 120*5, 300+65))
    			{
    				for(i=0;i<TeamOperate.iRequestCount;i++)
    				{
    					if(this.btn_watch[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn_watch[i].bCheck())
    						{
    							GmProtocol$1.gi().s_WatchOn(0, TeamOperate.trl[i].iRid, 0, "");
    						}
    						return true;
    					}
    					if(this.btn_away[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn_away[i].bCheck())
    						{//拒绝
    							GmProtocol$1.gi().s_TeamOperate(5,TeamOperate.trl[i].iRid,0);
    							TeamOperate.RemoveFromRequest(TeamOperate.trl[i].iRid);
    						}
    						return true;
    					}
    					if(this.btn_roles[i].ProcTouch(msg, x, y))
    					{//交换成员
    						if(this.btn_roles[i].bCheck())
    						{//如果我是队长，第一次点击锁定，第二次点击与目标交换
    //							if(MyTeam.bTeamLeader())
    //							{//是队长
    //								if(!this.bLock)
    //								{
    //									this.bLock=true;
    //									this.iLockPoint1=i;
    //								}
    //								else
    //								{//第二次点击，进行交换
    //									if(this.iLockPoint1!=i)GmProtocol.gi().s_TeamOperate(8,this.iLockPoint1,i);
    //									this.bLock=false;
    //								}
    //							}
    						}
    					}
    					if(this.btn_refuse[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn_refuse[i].bCheck())
    						{//同意
    							GmProtocol$1.gi().s_TeamOperate(4,TeamOperate.trl[i].iRid,0);
    							TeamOperate.RemoveFromRequest(TeamOperate.trl[i].iRid);
    						}
    						return true;
    					}
    				}

    				if(msg==1)
    				{
    					this.bLockX=true;
    					this.iLockX=x;
    				}
    			}
    		}
    		return false;
    	}
    }
    TeamOperate.MAXNEARROLE=128;

    TeamOperate.rolelist=function( pls)
    	{
    		if(!XStat$1.gi().CheckStat(XStat$1.GS_TEAMOPERATE))return;
    		var to=XStat$1.gi().LastStat(0);
    		to._rolelist(pls);
    	};
    TeamOperate.CleanAnima=function()
    	{
    		var i;
    //		if(!XStat.gi().CheckStat(XStat.GS_TEAMOPERATE))return;
    //		TeamOperate to=(TeamOperate)XStat.gi().LastStat(0);
    		var to=XStat$1.gi().FindStat(XStat$1.GS_TEAMOPERATE);
    		if(to==null)return;
    		for(i=0;i<TeamOperate.MAXLIST;i++)
    		{
    			to.aa_body[i]=null;
    			to.aa_weapon[i]=null;
    		}
    	};
     TeamOperate.ResetWeapon=function( tid, sex, stat, aaw)
    	{
    		var race=GmPlay$1.de_goods.intValue(tid, 0, 19);
    		aaw=GmPlay$1.xani_weap[race*2+sex][SortAnima.WeapFlag(tid)].InitAnimaWithName(stat, aaw);
    //		if(tid==248 || tid==249 || tid==250)
    //		{//70武器xani_weap70
    //			aaw=GmPlay.xani_weap70.InitAnimaWithName(GmMe.sSex(sex)+GmPlay.de_goods.strValue(tid, 0, 4)+stat, aaw);
    //		}
    //		else aaw=GmPlay.xani_role[race*2+sex].InitAnimaWithName(GmPlay.de_goods.strValue(tid, 0, 4)+stat, aaw);
    		return aaw;
    	};
    TeamOperate.trl;
    TeamOperate.MAXLIST=32;
    //	public static int requestlist=new int[32][2];//最多32个申请(id,vmid)，切换地图时清空
    TeamOperate.iRequestCount=0;
    	
    TeamOperate.sZz="无";//队伍宗旨
    	
    TeamOperate.Open=function( page)
    	{
    		var to=XStat$1.gi().PushStat(XStat$1.GS_TEAMOPERATE);
    		to.iPage=page;
    	};
    	
    TeamOperate.AddTeamRequest=function( pls)
    	{
    		var i,j;
    		var rid=pls.GetNextInt();
    		TeamOperate.RemoveFromRequest(rid);

    		if(!TeamOperate.trl || !TeamOperate.trl.length) return;

    		for(i=TeamOperate.MAXLIST-1;i>0;i--)
    		{
    			TeamOperate.trl[i].copyfrom(TeamOperate.trl[i-1]);
    		}

    		TeamOperate.trl[0].iRid=rid;
    		TeamOperate.trl[0].sName=pls.GetNextString();
    		TeamOperate.trl[0].iRas=pls.GetNextByte();
    		TeamOperate.trl[0].iSchoolId=pls.GetNextByte();
    		TeamOperate.trl[0].iLev=pls.GetNextShort();
    		j=pls.GetNextShort();
    		TeamOperate.trl[0].iColor[0]=j&7;
    		TeamOperate.trl[0].iColor[1]=(j>>3)&7;
    		TeamOperate.trl[0].iColor[2]=(j>>6)&7;
    		TeamOperate.trl[0].iColor[3]=(j>>9)&7;
    		TeamOperate.trl[0].iColor[4]=(j>>12)&7;
    		TeamOperate.trl[0].iWeapTid=pls.GetNextShort();
    		TeamOperate.trl[0].sMapName=pls.GetNextString();
    		
    		if(TeamOperate.iRequestCount<TeamOperate.MAXLIST)TeamOperate.iRequestCount++;
    		
    		FastButton.gi().bRequestFlash=true;
    	};
    	TeamOperate.RemoveFromRequest=function( rid)
    	{
    		var i,j=0;
    		for(i=0;i<TeamOperate.iRequestCount;i++)
    		{
    			if(TeamOperate.trl[i].iRid==rid)j=1;
    			if(j==1 && i<TeamOperate.iRequestCount-1)
    			{
    				TeamOperate.trl[i].copyfrom(TeamOperate.trl[i+1]);
    			}
    		}
    		if(j==1)TeamOperate.iRequestCount--;
    		TeamOperate.CleanAnima();
    	};

    class FastButton{
    //	StarEffect se;

    	constructor()
    	{
    		this.bShow=false;

    		this.iTeamButtonDelay=0;
    		this.bRequestFlash=false;

    		this.btn_oc=new XButtonEx2$1(GmPlay$1.xani_frame);
    		this.btn_oc.InitButton("右下底框72_72");

    		this.bOpening=false;
    		this.bCloseing=false;
    		this.iModifyX=0;

    		this.btn_list1=new Array(8);//
    		this.btn_list2=new Array(3);//
    		this.btn_list3=new Array(5);//

    		this.btn_team=new XButtonEx2$1(GmPlay$1.xani_icon);
    		this.btn_team.InitButton("队伍");
    		this.btn_fast=new XButtonEx2$1(GmPlay$1.xani_icon);
    		this.btn_fast.InitButton("快捷");

    		this.btn_bag=new XButtonEx2$1(GmPlay$1.xani_icon);
    		this.btn_bag.InitButton("背包");
    		this.btn_mission=new XButtonEx2$1(GmPlay$1.xani_icon);
    		this.btn_mission.InitButton("任务");
    		this.btn_gov=new XButtonEx2$1(GmPlay$1.xani_icon);
    		this.btn_gov.InitButton("帮派");
    		this.btn_mounts=new XButtonEx2$1(GmPlay$1.xani_icon);
    		this.btn_mounts.InitButton("坐骑");
    		this.btn_fuben=new XButtonEx2$1(GmPlay$1.xani_icon);
    		this.btn_fuben.InitButton("副本");
    		this.btn_system=new XButtonEx2$1(GmPlay$1.xani_icon);
    		this.btn_system.InitButton("系统");

    		var offx=0;
    		if(PublicInterface.gi().iLHX>0)offx=PublicInterface.gi().iLHX;
    		this.btn_act=new XButtonEx2$1(GmPlay$1.xani_icon);
    		this.btn_act.Move(5+offx,90, 72, 72);
    		this.btn_act.InitButton("活动");
    		this.btn_mall=new XButtonEx2$1(GmPlay$1.xani_icon);
    		this.btn_mall.Move(5+offx,90+79+10, 72,72);
    		this.btn_mall.InitButton("商城");
    		this.btn_aq=new XButtonEx2$1(GmPlay$1.xani_icon);
    		this.btn_aq.Move(5+offx,90+79+10+79+10, 72,72);
    		this.btn_aq.InitButton("答题图标");
    		this.btn_aq.sAnimaName="答题";
    		this.btn_help=new XButtonEx2$1(GmPlay$1.xani_icon);
    		this.btn_help.Move(5+offx,90+79+10+79+10, 72,72);
    		this.btn_help.InitButton("帮助");
    		this.btn_qq=new XButtonEx2$1(GmPlay$1.xani_icon);
    		this.btn_qq.Move(5+offx,90+79+10+79+10, 72,72);
    		this.btn_qq.InitButton("引导");

    		this.bCloseing=false;
    		this.bOpening=true;
    		this.bShow=true;
    		this.iModifyX=0;

    		this.aa_effect=GmPlay$1.xani_skill.InitAnimaWithName("起死回生_右",null);

    		this.btn_list2[0]=this.btn_fast;
    		this.btn_list2[1]=this.btn_team;
    		this.iBtnCount2=2;

    //		this.se=new StarEffect();
    //		this.se.Init3(0, 0, 37, 50);
    	}
    	Draw()
    	{
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return;
    		if(this.bOpening)
    		{
    			this.iModifyX+=15;
    			if(this.iModifyX>=FastButton.MODIFYW)
    			{
    				this.iModifyX=FastButton.MODIFYW;
    				this.bOpening=false;
    			}
    		}
    		if(this.bCloseing)
    		{
    			this.iModifyX-=15;
    			if(this.iModifyX<0)
    			{
    				this.iModifyX=0;
    				this.bCloseing=false;
    				this.bShow=false;
    			}
    		}
    		var i=0;
    		var wsize=22;
    //		this.btn_mall.Move(GmConfig.SCRW-80, 90, 80, 80);
    //		this.btn_mall.Draw();
    //		M3DFast.gi().DrawText_2(this.btn_mall.iX+40, this.btn_mall.iY+80, this.btn_mall.sAnimaName, 0xffffffff, wsize, 101, 1, 1, 0, -2, -3,3,0xff000000);

    		if(this.bShow)
    		{
    			if(this.iTeamButtonDelay>0)this.iTeamButtonDelay--;
    			
    			this.btn_list1[i++]=this.btn_system;
    			if(GmMe$1.me.rbs.iLev>=40)this.btn_list1[i++]=this.btn_fuben;
    			if(GmMe$1.me.rbs.iLev>=30)this.btn_list1[i++]=this.btn_mounts;
    			if(GmMe$1.me.rbs.iLev>=20)this.btn_list1[i++]=this.btn_gov;
    			this.btn_list1[i++]=this.btn_mission;
    			this.btn_list1[i++]=this.btn_bag;
    			this.iBtnCount1=i;
    			
    			for(i=0;i<this.iBtnCount1;i++)
    			{
    				this.btn_list1[i].Move(GmConfig$1.SCRW-80-this.iModifyX*(i+1),GmConfig$1.SCRH-84, 72, 72);
    			}
    			for(i=0;i<this.iBtnCount1;i++)
    			{
    				this.btn_list1[i].Draw();
    				M3DFast$1.gi().DrawText_2(this.btn_list1[i].iX+36, this.btn_list1[i].iY+71, this.btn_list1[i].sAnimaName, 0xfffdf5e8, wsize, 101, 1, 1, 0, -2, -3,3,0xff1a0000);
    			}
    			for(i=0;i<this.iBtnCount2;i++)
    			{
    				this.btn_list2[i].Move(GmConfig$1.SCRW-80,GmConfig$1.SCRH-80-this.iModifyX*(i+1), 72, 72);
    			}
    			if (this.bRequestFlash && GmPlay$1.iDelay / 2 % 2 == 0)this.btn_team.Move(this.btn_team.iX+2,this.btn_team.iY+2, 72, 72);
    			for(i=0;i<this.iBtnCount2;i++)
    			{
    				this.btn_list2[i].Draw();
    				M3DFast$1.gi().DrawText_2(this.btn_list2[i].iX+36, this.btn_list2[i].iY+71, this.btn_list2[i].sAnimaName, 0xfffdf5e8, wsize, 101, 1, 1, 0, -2, -3,3,0xff1a0000);
    			}
    		}
    		this.btn_oc.Move(GmConfig$1.SCRW-80,GmConfig$1.SCRH-84, 72, 72);
    		this.btn_oc.Draw();
    		GmPlay$1.xani_icon.DrawAnimaEx(GmConfig$1.SCRW-80-12, GmConfig$1.SCRH-84-12, "开关箭头",0, 101, 1, 1, 180-this.iModifyX*180/FastButton.MODIFYW, -2,-2);
    //		GmPlay.xani_nui3.DrawAnimaEx(GmConfig.SCRW-80, GmConfig.SCRH-80, "开关高光",0, 101, 1, 1, 0,0,0);
    		/*
    		if(GmMe.me.rbs.iLev<20)
    		{
    			this.aa_effect.Draw(this.btn_help.iX+30, this.btn_help.iY+70);
    		}
    		this.aa_effect.Draw(this.btn_act.iX+30, this.btn_act.iY+70);
    		this.aa_effect.NextFrame();
    		*/
    //		this.se.Logic();
    //		if(GmMe.me.rbs.iLev<20)this.se.Draw(this.btn_help.iX+37, this.btn_help.iY+37);
    //		this.btn_help.Draw();
    		
    		this.btn_list3[0]=this.btn_act;
    		this.btn_list3[1]=this.btn_mall;
    		this.btn_list3[2]=this.btn_help;
    		this.iBtnCount3=3;
    		if(AQStart.bShow)
    		{
    			this.btn_list3[3]=this.btn_aq;
    			this.iBtnCount3++;
    		}
    		var offx=0;
    		if(PublicInterface.gi().iLHX>0)offx=PublicInterface.gi().iLHX;
    		for(i=0;i<this.iBtnCount3;i++)
    		{
    			this.btn_list3[i].Move(5+offx,90+89*i, 72, 72);
    			this.btn_list3[i].Draw();
    			M3DFast$1.gi().DrawText_2(this.btn_list3[i].iX+36, this.btn_list3[i].iY+71, this.btn_list3[i].sAnimaName, 0xfffdf5e8, wsize, 101, 1, 1, 0, -2, -3,3,0xff1a0000);
    		}
    /*		this.btn_act.Draw();
    		M3DFast.gi().DrawText_2(this.btn_act.iX+40, this.btn_act.iY+80, this.btn_act.sAnimaName, 0xffffffff, wsize, 101, 1, 1, 0, -2, -3,3,0xff000000);
    		this.btn_mall.Draw();
    		M3DFast.gi().DrawText_2(this.btn_mall.iX+40, this.btn_mall.iY+80, this.btn_mall.sAnimaName, 0xffffffff, wsize, 101, 1, 1, 0, -2, -3,3,0xff000000);
    		if(AQStart.bShow)
    		{
    			this.btn_aq.Draw();
    			M3DFast.gi().DrawText_2(this.btn_aq.iX+40, this.btn_aq.iY+80, "答题", 0xffffffff, wsize, 101, 1, 1, 0, -2, -3,3,0xff000000);
    		}*/

    		if(ExtHelp.iHead>0 && XRecordFast.iExtHelp!=3)
    		{//GmMe.me.rbs.iLev<20 && 
    			this.btn_qq.Draw();
    			M3DFast$1.gi().DrawText_2(this.btn_qq.iX+40, this.btn_qq.iY+80, this.btn_qq.sAnimaName, 0xffffffff, wsize, 101, 1, 1, 0, -2, -3,3,0xff000000);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(ExtHelp.iHead>0 && XRecordFast.iExtHelp!=3)
    		{
    			if(this.btn_qq.ProcTouch(msg, x, y))
    			{
    				if(this.btn_qq.bCheck())
    				{
    					ExtHelp.iPrev=ExtHelp.iTall;//指向最后，往前
    					ExtHelp.iHead=ExtHelp.iTall;
    					ExtHelp.eh=XStat$1.gi().PushStat(XStat$1.GS_EXTHELP);
    					ExtHelp.PreviousHelp();
    				}
    				return true;
    			}
    		}
    //		if(this.btn_help.ProcTouch(msg, x, y))
    //		{
    //			if(this.btn_help.bCheck())
    //			{
    //				XStat.gi().PushStat(XStat.GS_NOVICEHELP);
    //			}
    //			return true;
    //		}
    		if(this.btn_act.ProcTouch(msg, x, y))
    		{
    			if(this.btn_act.bCheck())
    			{
    				GmProtocol$1.gi().s_PromptActivity(0, 0);//请求获得活跃度数据
    				XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    			}
    			return true;
    		}
    		if(this.btn_mall.ProcTouch(msg, x, y))
    		{
    			if(this.btn_mall.bCheck())
    			{
    				GmProtocol$1.gi().s_IngotMall(0, 0);
    			}
    			return true;
    		}
    		if(this.btn_help.ProcTouch(msg, x, y))
    		{
    			if(this.btn_help.bCheck())
    			{
    				MainHelp.Open();
    			}
    			return true;
    		}
    		if(AQStart.bShow)
    		{
    			if(this.btn_aq.ProcTouch(msg, x, y))
    			{
    				if(this.btn_aq.bCheck())
    				{
    					AQStart.Open();
    				}
    				return true;
    			}
    		}

    		if(this.btn_oc.ProcTouch(msg, x, y))
    		{
    			if(this.btn_oc.bCheck())
    			{
    				if(this.bShow)
    				{
    					this.bCloseing=true;
    					this.bOpening=false;
    					this.iModifyX=FastButton.MODIFYW;
    				}
    				else
    				{
    					this.bCloseing=false;
    					this.bOpening=true;
    					this.bShow=true;
    					this.iModifyX=0;
    				}
    			}
    			return true;
    		}
    		if(!this.bShow)return false;
    //		public XButtonEx2 this.btn_bag;//背包，
    //		public XButtonEx2 this.btn_mission;//任务，
    //		XButtonEx2 this.btn_gov;//帮派，20
    //		XButtonEx2 this.btn_mounts;//坐骑//坐骑，30
    //		XButtonEx2 this.btn_fuben;//副本//副本，40
    //		XButtonEx2 this.btn_system;//系统
    		if(this.btn_bag.ProcTouch(msg, x, y))
    		{
    			if(this.btn_bag.bCheck())
    			{
    //				TestRun.Run(100000, GmPlay.pxe.FindMain("工作项目测试"),new TestRun());
    				MyGoods.gi().Open();
    			}
    			return true;
    		}
    		if(this.btn_mission.ProcTouch(msg, x, y))
    		{
    			if(this.btn_mission.bCheck())
    			{
    //				if(GameVersion.QUDAO==0)XmsEngine.pxe.RunXms(XmsEngine.XS_TESTRUN);//TestRun.Run(100000, GmPlay.pxe.FindMain("工作项目测试"),new TestRun());
    //				else 
    					MissionFrame.Open(0);
    			}
    			return true;
    		}
    		if(GmMe$1.me.rbs.iLev>=20)
    		{
    			if(this.btn_gov.ProcTouch(msg, x, y))
    			{
    				if(this.btn_gov.bCheck())
    				{
    					if(MyGov.mg.iRealGid==-1)
    					{
    //						EasyMessage.easymsg.AddMessage("你还未加入帮派");
    						GmProtocol$1.gi().s_NewGovOperate(0,0,0,0,0,"");//获得帮派id列表
    						GmProtocol$1.gi().s_NewGovOperate(2,0,0,0,0,"");//获得已申请列表
    //						GmProtocol.gi().s_GetGovList(0);
    					}
    					else
    					{//获得帮派基本信息，打开帮派属性页面
    						GmProtocol$1.gi().s_NewGovOperate(3,0,0,0,0,"");
    					}
    				}
    				return true;
    			}
    		}
    		if(GmMe$1.me.rbs.iLev>=30)
    		{
    			if(this.btn_mounts.ProcTouch(msg, x, y))
    			{
    				if(this.btn_mounts.bCheck())
    				{//打开坐骑页面
    					if(MyMounts.mm.iMountsCount>0)XStat$1.gi().PushStat(XStat$1.GS_MOUNTSFRAME);
    					else EasyMessage.easymsg.AddMessage("你还没有坐骑");
    				}
    				return true;
    			}
    		}
    		if(GmMe$1.me.rbs.iLev>=40)
    		{
    			if(this.btn_fuben.ProcTouch(msg, x, y))
    			{
    				if(this.btn_fuben.bCheck())
    				{//打开坐骑页面
    					if(MyFuBen.iStat==0)
    					{//不在副本中，打开申请表
    						GmProtocol$1.gi().s_FuBen(2,0);
    					}
    					else if(MyFuBen.iStat==1)
    					{//在副本中，打开管理页面
    						GmProtocol$1.gi().s_FuBen(1,0);
    					}
    					else if(MyFuBen.iStat==2)
    					{
    						FrameMessage.fm.Open("#cffffff"+MyFuBen.sDetail+"#e#c00ff00"+MyFuBen.sTarget);
    					}
    				}
    				return true;
    			}
    		}
    		if(this.btn_system.ProcTouch(msg, x, y))
    		{
    			if(this.btn_system.bCheck())
    			{
    				XStat$1.gi().PushStat(XStat$1.GS_SYSTEMOPERATE);
    			}
    			return true;
    		}
    		/*
    		var i;
    		for(i=0;i<this.iBtnCount1;i++)
    		{
    			if(this.btn_list1[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_list1[i].bCheck())
    				{
    					switch(i)
    					{
    					case 4://背包，
    						MyGoods.gi().Open();
    						break;
    					case 3://任务，
    						MissionFrame.Open();
    						break;
    					case 2://帮派，
    						if(MyGov.mg.iRealGid==-1)EasyMessage.easymsg.AddMessage("你还未加入帮派");
    						else
    						{
    							XStat.gi().PushStat(XStat.GS_GOVFRAME);
    						}
    						break;
    					case 1://商城
    						GmProtocol.gi().s_IngotMall(0, 0);
    						break;
    					case 0://系统
    						XStat.gi().PushStat(XStat.GS_SYSTEMOPERATE);
    						break;
    					}
    				}
    				return true;
    			}
    		}*/
    		if (this.iTeamButtonDelay == 0)
    		{
    			if (this.btn_team.ProcTouch(msg, x, y)) 
    			{
    				if (this.btn_team.bCheck()) 
    				{
    					if (MyTeam$1.bNoTeam()) 
    					{//没队，打开申请页面cx
    						TeamCreate.Open();
    //						GmProtocol.gi().s_TeamOperate(0, 0, 0);// 组队
    						this.iTeamButtonDelay = 30;
    					} 
    					else 
    					{// 自己在队伍里面,打开队伍操作界面
    						var to=XStat$1.gi().PushStat(XStat$1.GS_TEAMOPERATE);
    						//发送请求，获取附近玩家和申请列表
    						GmProtocol$1.gi().s_TeamOperate(10,0,0);
    						if (this.bRequestFlash)
    						{// 申请页面
    //							((TeamOperate) XStat.gi().LastStat(0)).iModePoint = 1;
    							this.bRequestFlash = false;
    							to.iPage=1;
    						}
    						// GmProtocol.gi().s_TeamOperate(1,0);//离开/解散队伍
    					}
    				}
    				return true;
    			}
    		}
    //		if(this.btn_team.ProcTouch(msg, x, y))
    //		{
    //			if(this.btn_team.bCheck())
    //			{//打开队伍界面
    //			}
    //			return true;
    //		}
    		if(this.btn_fast.ProcTouch(msg, x, y))
    		{
    			if(this.btn_fast.bCheck())
    			{//打开快捷操作页面
    				XStat$1.gi().PushStat(XStat$1.GS_FASTOPERATE);
    			}
    			return true;
    		}
    		
    		return false;
    	}
    }

    FastButton.MODIFYW=85;
    FastButton.fb=null;
    FastButton.gi=function()
    {
    	if(FastButton.fb==null)FastButton.fb=new FastButton();
    	return FastButton.fb;
    };

    class _TEAMLIST
    {/*
    	public int iRid;
    	public String sName;
    	public int iMapId;
    	public int iLev;
    	public int iRaX;
    	public int iSchool;
    	public int iTarget;
    	public int iTargetMap;
    	public int iCount;//队伍人数
    	*/
    	swap( t)
    	{
    		var i;
    		var s;
    		i=t.iRid;
    		t.iRid=this.iRid;
    		this.iRid=i;
    		
    		s=t.sName;
    		t.sName=this.sName;
    		this.sName=s;
    		
    		i=t.iMapId;
    		t.iMapId=this.iMapId;
    		this.iMapId=i;
    		
    		i=t.iLev;
    		t.iLev=this.iLev;
    		this.iLev=i;
    		
    		i=t.iRaX;
    		t.iRaX=this.iRaX;
    		this.iRaX=i;
    		
    		i=t.iSchool;
    		t.iSchool=this.iSchool;
    		this.iSchool=i;
    		
    		i=t.iTarget;
    		t.iTarget=this.iTarget;
    		this.iTarget=i;
    		
    		i=t.iTargetMap;
    		t.iTargetMap=this.iTargetMap;
    		this.iTargetMap=i;
    		
    		i=t.iCount;//队伍人数
    		t.iCount=this.iCount;
    		this.iCount=i;
    		
    		i=t.iSort;
    		t.iSort=this.iSort;
    		this.iSort=i;
    	}
    	
    	constructor()
    	{
    		this.btn_apply=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_apply.InitButton("按钮1_110");
    //		btn_apply.sName="一键申请";
    	}
    }

    class TeamCreate extends BaseClass{
    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.iW=1020;
    		this.iH=610;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		
    		this.btn_applyall=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_applyall.InitButton("按钮1");
    		this.btn_applyall.sName="一键申请";
    		
    		this.btn_autoteam=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_autoteam.InitButton("按钮1");
    		this.btn_autoteam.sName="自动匹配";
    		
    		this.btn_fresh=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_fresh.InitButton("按钮1");
    		this.btn_fresh.sName="刷新";
    		
    		this.btn_create=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_create.InitButton("按钮1");
    		this.btn_create.sName="创建队伍";
    		
    		this.btncs=new Array(16);////组队类型,地图参数
    		this.btn_dest=new Array(16);//
    		for(i=0;i<16;i++)
    		{
    			this.btncs[i]=new Int32Array(5);
    			this.btn_dest[i]=new XButton(GmPlay$1.xani_nui4);
    		}
    		this.iDestPoint=0;
    		this.iOpenPoint=-1;
    		this.iOffH=0;
    		this.iShowH=85*5+15;
    		this.ResetButton(true);
    		this.bLocked1=false;
    		this.bLocked2=false;

    		this.iTlCount=0;
    		this.tl=new Array(64);//
    		this.iOffY=0;
    		this.iLockY=-1;
    		this.iTeamPoint=-1;
    	}
    	
    	ResetButton( dopen)
    	{
    		var op;
    		this.iDestCount=0;
    		this.btn_dest[this.iDestCount].InitButton("组队类型1");
    		this.btn_dest[this.iDestCount].sName="附近";
    		this.btncs[this.iDestCount][0]=0;
    		this.btncs[this.iDestCount][1]=0;
    		this.btncs[this.iDestCount][2]=0;//无
    		this.btncs[this.iDestCount][3]=0;
    		this.btncs[this.iDestCount][4]=80;
    		this.iDestCount++;
    		
    		if(GmMe$1.me.rbs.iLev>=10)
    		{
    			this.btn_dest[this.iDestCount].InitButton("组队类型1");
    			this.btn_dest[this.iDestCount].sName="为民除害";
    			this.btncs[this.iDestCount][0]=1;
    			this.btncs[this.iDestCount][1]=0;
    			this.btncs[this.iDestCount][2]=0;
    			this.btncs[this.iDestCount][3]=10;
    			this.btncs[this.iDestCount][4]=80;
    //			if(this.iOpenPoint==1)this.btncs[this.iDestCount][2]=1;//箭头向上
    //			else this.btncs[this.iDestCount][2]=2;//箭头向下
    			this.iDestCount++;
    		}
    		if(GmMe$1.me.rbs.iLev>=20)
    		{
    			this.btn_dest[this.iDestCount].InitButton("组队类型1");
    			this.btn_dest[this.iDestCount].sName="追捕强盗";
    			this.btncs[this.iDestCount][0]=2;
    			this.btncs[this.iDestCount][1]=0;
    			this.btncs[this.iDestCount][2]=0;//无
    			this.btncs[this.iDestCount][3]=20;
    			this.btncs[this.iDestCount][4]=80;
    			this.iDestCount++;
    		}
    		if(GmMe$1.me.rbs.iLev>=30)
    		{
    			this.btn_dest[this.iDestCount].InitButton("组队类型1");
    			this.btn_dest[this.iDestCount].sName="山贼宝图";
    			this.btncs[this.iDestCount][0]=3;
    			this.btncs[this.iDestCount][1]=0;
    			this.btncs[this.iDestCount][2]=0;//无
    			this.btncs[this.iDestCount][3]=30;
    			this.btncs[this.iDestCount][4]=80;
    			this.iDestCount++;
    		}
    		if(GmMe$1.me.rbs.iLev>=40)
    		{
    			this.btn_dest[this.iDestCount].InitButton("组队类型1");
    			this.btn_dest[this.iDestCount].sName="挑战嚣张";
    			this.btncs[this.iDestCount][0]=4;
    			this.btncs[this.iDestCount][1]=0;
    			this.btncs[this.iDestCount][2]=0;//无
    			this.btncs[this.iDestCount][3]=40;
    			this.btncs[this.iDestCount][4]=80;
    			this.iDestCount++;
    		}
    		if(GmMe$1.me.rbs.iLev>=20)
    		{
    			this.btn_dest[this.iDestCount].InitButton("组队类型1");
    			this.btn_dest[this.iDestCount].sName="封印叔叔";
    			this.btncs[this.iDestCount][0]=5;
    			this.btncs[this.iDestCount][1]=0;
    			this.btncs[this.iDestCount][2]=0;//无
    			this.btncs[this.iDestCount][3]=20;
    			this.btncs[this.iDestCount][4]=80;
    			this.iDestCount++;
    		}
    		this.btn_dest[this.iDestCount].InitButton("组队类型1");
    		this.btn_dest[this.iDestCount].sName="定时活动";
    		this.btncs[this.iDestCount][0]=99;
    		this.btncs[this.iDestCount][1]=0;
    		if(dopen)this.iOpenPoint=this.iDestCount;
    		op=this.iDestCount;
    		if(this.iOpenPoint==op)this.btncs[this.iDestCount][2]=1;//箭头向上
    		else this.btncs[this.iDestCount][2]=2;//箭头向下
    		this.btncs[this.iDestCount][3]=20;
    		this.btncs[this.iDestCount][4]=80;
    		this.iDestCount++;
    		
    		if(this.iOpenPoint==op)
    		{//定时活动
    			if(GmMe$1.me.rbs.iLev>=30)
    			{
    				this.btn_dest[this.iDestCount].InitButton("组队类型2");
    				this.btn_dest[this.iDestCount].sName="门派闯关";
    				this.btncs[this.iDestCount][0]=6;
    				this.btncs[this.iDestCount][1]=0;
    				this.btncs[this.iDestCount][2]=0;//无
    				this.btncs[this.iDestCount][3]=30;
    				this.btncs[this.iDestCount][4]=80;
    				this.iDestCount++;
    				
    				this.btn_dest[this.iDestCount].InitButton("组队类型2");
    				this.btn_dest[this.iDestCount].sName="保卫西阳";
    				this.btncs[this.iDestCount][0]=7;
    				this.btncs[this.iDestCount][1]=0;
    				this.btncs[this.iDestCount][2]=0;//无
    				this.btncs[this.iDestCount][3]=30;
    				this.btncs[this.iDestCount][4]=80;
    				this.iDestCount++;
    			}
    		}
    		this.iDestH=this.iDestCount*85-5+40;
    	}
    	

    	Draw()
    	{
    		var i,j;
    		var offx,offy;
    		var offw,offh;
    		DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH,"组","队");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.Draw();
    		
    		if(!this.bLocked1)
    		{
    			if(this.iOffH>0)this.iOffH/=2;
    			if(this.iDestH<this.iShowH)i=this.iDestH;
    			else i=this.iShowH;
    			j=this.iDestH+this.iOffH;
    			if(j<i)
    			{
    				this.iOffH+=(i-j)/2;
    			}
    		}
    		if(!this.bLocked2)
    		{
    			if(this.iOffY>0)this.iOffY/=2;
    			if(this.iTlCount*83<83*5+30)i=this.iTlCount*83;
    			else i=83*5+30;
    			j=this.iTlCount*83+this.iOffY;
    			if(j<i)
    			{
    				this.iOffY+=(i-j)/2;
    			}
    		}
    		offx=this.iX+30;offy=this.iY+30;
    		offw=270;offh=this.iH-60;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		M3DFast$1.gi().SetViewClip(offx+20, offy+20, offx+20+230, offy+20+this.iShowH);
    		for(i=0;i<this.iDestCount;i++)
    		{
    			this.btn_dest[i].Move(offx+20, offy+20+i*85+this.iOffH, 230, 80);
    			if(i==this.iDestPoint)
    			{
    				this.btn_dest[i].bMouseIn=true;
    				this.btn_dest[i].bMouseDown=true;
    			}
    			this.btn_dest[i].Draw();
    			if(this.btncs[i][2]==1)GmPlay$1.xani_nui4.DrawAnima(this.btn_dest[i].iX, this.btn_dest[i].iY, "组队目录开关",1);
    			else if(this.btncs[i][2]==2)GmPlay$1.xani_nui4.DrawAnima(this.btn_dest[i].iX, this.btn_dest[i].iY, "组队目录开关",0);
    		}
    		M3DFast$1.gi().NoClip();
    		
    		this.btn_create.Move(offx+offw/2-161/2, offy+offh-20-53, 161, 53);
    		this.btn_create.Draw();

    		offx=this.iX+30+270+20;offy=this.iY+30;
    		offw=this.iW-30-30-270-20;offh=this.iH-60;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    //		M3DFast.gi().DrawText_2(offx+offw/2, offy+30, "附 近 队 伍("+this.iTlCount+")", 0xff000000, 30, 101, 1, 1, 0, -2, -2, 3, 0xff80ffff);
    		this.btn_applyall.Move(offx+20, offy+offh-20-53, 161, 53);
    		this.btn_applyall.Draw();
    		
    		if(MyTeam$1.bSingleAutoTeaming)this.btn_autoteam.sName="匹配中...";
    		else this.btn_autoteam.sName="自动匹配";
    		this.btn_autoteam.Move(offx+20+161+70, offy+offh-20-53, 161, 53);
    		this.btn_autoteam.Draw();
    		
    		this.btn_fresh.Move(offx+20+161+70+161+70, offy+offh-20-53, 161, 53);
    		this.btn_fresh.Draw();
    		
    		if(this.iTlCount<=0)
    		{
    			M3DFast$1.gi().DrawTextEx(offx+offw/2, offy+offh/2-40, "当前目标没有队伍", 0xff003e57, 35, 101, 1, 1, 0, -2, -2);
    		}
    		
    		offx+=20;
    		offy+=20;
    		
    		M3DFast$1.gi().SetViewClip(offx, offy, offx+630, offy+83*5+30);
    		offy+=this.iOffY;
    		for(i=0;i<this.iTlCount;i++)
    		{
    			GmPlay$1.xani_nui4.DrawAnima(offx, offy, "队伍条",0);
    			GmPlay$1.xani_nui4.DrawAnima(offx, offy, "队伍条",this.tl[i].iCount);
    			GmPlay$1.xani_head.DrawAnimaEx(offx+8, offy+8, "新头像"+(this.tl[i].iRaX), 0, 101, 0.8, 0.8, 0, 0, 0);
    //			GmPlay.xani_head.DrawAnima(offx+4, offy+4, "新头像"+(this.tl[i].iRaX), 0);
    			M3DFast$1.gi().DrawTextEx(offx+8+80, offy+20, this.tl[i].sName, 0xffffffff, 22, 101, 1, 1, 0, 0, -2);
    			M3DFast$1.gi().DrawTextEx(offx+8+80, offy+57, GameData$1.sSchools[this.tl[i].iSchool], 0xffffffff, 22, 101, 1, 1, 0, 0, -2);
    			M3DFast$1.gi().DrawTextEx(offx+8+80+70, offy+57, this.tl[i].iLev+"级", 0xffffff00, 22, 101, 1, 1, 0, 0, -2);
    			
    			M3DFast$1.gi().DrawTextEx(offx+375, offy+27, GmPlay$1.de_map.strValue(this.tl[i].iMapId, 0, 1), 0xffffffff, 20, 101, 1, 1, 0, -3, -2);
    			if(this.tl[i].iTarget>0 && this.tl[i].iTarget<5)M3DFast$1.gi().DrawTextEx(offx+385, offy+27, TeamCreate._TARGET[this.tl[i].iTarget], 0xffffffff, 20, 101, 1, 1, 0, 0, -2);
    			M3DFast$1.gi().DrawTextEx(offx+390, offy+61, this.tl[i].iCount+"/5", 0xff000000, 20, 101, 1, 1, 0, -2, -2);
    			
    			this.tl[i].btn_apply.Move(offx+500, offy+78/2-52/2, 110, 52);
    			if(MapManager.gi().iCurrentMapId==this.tl[i].iMapId)this.tl[i].btn_apply.sName="申请";
    			else this.tl[i].btn_apply.sName="前往";
    			if(this.tl[i].bApplyed)M3DFast$1.gi().DrawTextEx(this.tl[i].btn_apply.iX+this.tl[i].btn_apply.iW/2,this.tl[i].btn_apply.iY+this.tl[i].btn_apply.iH/2,"已申请",0xff003e57,30,101,1,1,0,-2,-2);
    			else this.tl[i].btn_apply.Draw();
    			//this.tl[i].sName
    			offy+=83;
    		}
    		M3DFast$1.gi().NoClip();
    		

    	}
    	
    	
    	ProcTouch( msg, x, y)
    	{
    		if(msg==3)
    		{
    			if(this.bLocked1)
    			{
    				this.bLocked1=false;
    				return true;
    			}
    			if(this.bLocked2)
    			{
    				this.bLocked2=false;
    				return true;
    			}
    		}
    		
    		var i,j;
    		var offx,offy;

    		offx=this.iX+30;
    		offy=this.iY+30;
    		if(XDefine$1.bInRect(x, y, offx, offy, 270, 20+this.iShowH))
    		{
    			for(i=0;i<this.iDestCount;i++)
    			{
    				if(this.btn_dest[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_dest[i].bCheck())
    					{//点击任意一个按钮，获取队伍信息
    						this.iDestPoint=i;
    						if(this.btncs[i][0]==99)
    						{//开关除害地图
    							if(this.iOpenPoint<0)this.iOpenPoint=i;
    							else this.iOpenPoint=-1;
    							this.ResetButton(false);
    						}
    						GmProtocol$1.gi().s_TeamOperate(12, this.btncs[this.iDestPoint][0], this.btncs[this.iDestPoint][1]);//获取对应队伍
    					}
    				}
    			}
    			if(msg==1)this.iLockY=y;
    			if(msg==2)
    			{
    				if(!this.bLocked1)
    				{
    					i=this.iLockY-y;
    					if(i<-15 || i>15)
    					{//取消按键按下状态
    						this.bLocked1=true;
    						for(i=0;i<this.iDestCount;i++)this.btn_dest[i].bMouseDown=false;
    					}
    				}
    			}
    		}
    		if(msg==2)
    		{
    			if(this.bLocked1)
    			{
    				i=this.iLockY-y;
    				this.iOffH-=i;
    				this.iLockY=y;
    				return true;
    			}
    		}
    		
    		offx=this.iX+30+270+20+20;offy=this.iY+30+20;
    		if(XDefine$1.bInRect(x, y, offx, offy, 630, 83*5+30))
    		{//前往/申请按钮
    			for(i=0;i<this.iTlCount;i++)
    			{
    				if(this.tl[i].bApplyed)continue;
    				if(this.tl[i].btn_apply.ProcTouch(msg, x, y))
    				{
    					if(this.tl[i].btn_apply.bCheck())
    					{//申请或前往
    						if(MapManager.gi().iCurrentMapId==this.tl[i].iMapId)
    						{//this.tl[i].btn_apply.sName="申请";
    							GmProtocol$1.gi().s_TeamOperate(3, this.tl[i].iRid, 0);
    							this.tl[i].bApplyed=true;
    						}
    						else
    						{//this.tl[i].btn_apply.sName="前往";
    							if(MyAI.gi().FindMap(this.tl[i].iMapId, -1, -1,false,true))
    							{
    								TeamCreate.iWaitingApplyMapId=this.tl[i].iMapId;
    								TeamCreate.iWaitingApplyRid=this.tl[i].iRid;
    							}
    							XStat$1.gi().PopStat(1);
    						}
    					}
    				}
    			}
    			if(msg==1)this.iLockY=y;
    			if(msg==2)
    			{
    				if(!this.bLocked2)
    				{
    					i=this.iLockY-y;
    					if(i<-15 || i>15)
    					{//取消按键按下状态
    						this.bLocked2=true;
    //						for(i=0;i<this.iDestCount;i++)this.btn_dest[i].bMouseDown=false;
    					}
    				}
    			}
    		}
    		if(msg==2)
    		{
    			if(this.bLocked2)
    			{
    				i=this.iLockY-y;
    				this.iOffY-=i;
    				this.iLockY=y;
    				return true;
    			}
    		}

    		if(this.btn_create.ProcTouch(msg, x, y))
    		{
    			if(this.btn_create.bCheck())
    			{
    //				if(this.btncs[this.iDestPoint][0]<0 || this.btncs[this.iDestPoint][0]>7)EasyMessage.easymsg.AddMessage("请先选择队伍目标");
    //				else
    				{
    				GmProtocol$1.gi().s_TeamOperate(0, this.btncs[this.iDestPoint][0], this.btncs[this.iDestPoint][1]);// 组队
    				XStat$1.gi().PopStat(1);
    				FastButton.gi().iTeamButtonDelay=30;
    				}
    			}
    			return true;
    		}
    		if(this.btn_fresh.ProcTouch(msg, x, y))
    		{
    			if(this.btn_fresh.bCheck())
    			{//刷新
    				GmProtocol$1.gi().s_TeamOperate(12, this.btncs[this.iDestPoint][0], this.btncs[this.iDestPoint][1]);//获取对应队伍
    			}
    			return true;
    		}
    		if(this.btn_applyall.ProcTouch(msg, x, y))
    		{
    			if(this.btn_applyall.bCheck())
    			{//一键申请
    				j=0;
    				for(i=0;i<this.iTlCount;i++)
    				{
    					if(this.tl[i].bApplyed)continue;
    					if(MapManager.gi().iCurrentMapId==this.tl[i].iMapId)
    					{//this.tl[i].btn_apply.sName="申请";
    						GmProtocol$1.gi().s_TeamOperate(3, this.tl[i].iRid, 0);
    						this.tl[i].bApplyed=true;
    						j++;
    					}
    				}
    				if(j==0)EasyMessage.easymsg.AddMessage("附近没有队伍可申请");
    			}
    			return true;
    		}

    		if(this.btn_autoteam.ProcTouch(msg, x, y))
    		{
    			if(this.btn_autoteam.bCheck())
    			{
    				if(this.btncs[this.iDestPoint][0]<0 || this.btncs[this.iDestPoint][0]>7)EasyMessage.easymsg.AddMessage("请先选择队伍目标");
    				else
    				{
    					GmProtocol$1.gi().s_TeamOperate(25,this.btncs[this.iDestPoint][0],0);
    				}
    			}
    			return true;
    		}

    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    TeamCreate.iWaitingApplyMapId=0;//
    TeamCreate.iWaitingApplyRid=0;//等待申请目标ID
    TeamCreate._LEV_MAP=[
    	[10,14,18,19], //渡口 大禹水道
    	[15,19,18,19,20], //渡口 大禹水道 平原山陵
    	[20,24,19,20,21], //大禹水道 平原山陵 巫山
    	[25,29,20,21,22], //平原山陵 巫山 太行山
    	[30,34,21,22,23], //巫山 太行山 云蒙山
    	[35,39,22,23,24], //太行山 云蒙山 烈焰峰
    	[40,44,23,24,25],//云蒙山 烈焰峰 函谷关
    	[45,49,24,25,26], //烈焰峰 函谷关 长城
    	[50,54,25,26,27], //函谷关 长城 阴山
    	[55,59,26,27,35], //长城 阴山 地1
    	[60,64,27,35,36], //阴山 地1地2
    	[65,69,25,26,50 ],//地1 地2 匈奴营寨
    	[70,72,36,50,51], //地2 匈奴营寨 古战场
    	[73,74,50,51,52], //匈奴营寨 古战场 泰山
    	[75,76,51,52,53], //古战场 泰山 蜀山
    	[77,100,52,53] //泰山 蜀山
    	];
    TeamCreate._TARGET=[
    				"无目标",
    				"为民除害",//1
    				"追捕强盗",
    				"山贼宝图",
    				"挑战嚣张",//4
    				"封印叔叔",
    				"门派闯关",
    				"保卫西阳"//7
    		];

    		TeamCreate.Open=function()
    		{
    			if(XStat$1.gi().CheckStat(XStat$1.GS_TEAMCREATE))return;
    			XStat$1.gi().PushStat(XStat$1.GS_TEAMCREATE);
    			//发送获取周围队伍列表申请
    			GmProtocol$1.gi().s_TeamOperate(12,0,0);
    		};

    		TeamCreate.teamlist=function( pls)
    	{
    		if(!XStat$1.gi().CheckStat(XStat$1.GS_TEAMCREATE))return;
    		var tc=XStat$1.gi().LastStat(0);
    		var i,j=0;
    		tc.iTlCount=0;
    		while(true)
    		{
    			i=pls.GetNextInt();
    			if(i==0)break;
    			tc.tl[j]=new _TEAMLIST();
    			tc.tl[j].iRid=i;
    			tc.tl[j].sName=pls.GetNextString();
    			tc.tl[j].iMapId=pls.GetNextShort();
    			tc.tl[j].iLev=pls.GetNextShort();
    			i=pls.GetNextByte();
    			tc.tl[j].iRaX=i%10;
    			tc.tl[j].iSchool=parseInt(i/10);
    			tc.tl[j].iTarget=pls.GetNextByte();
    			tc.tl[j].iTargetMap=pls.GetNextShort();
    			tc.tl[j].iCount=pls.GetNextByte();
    			tc.tl[j].bApplyed=false;
    			tc.tl[j].iSort=GmMe$1.me.rbs.iLev-tc.tl[j].iLev;
    			if(tc.tl[j].iSort<0)tc.tl[j].iSort=-tc.tl[j].iSort;
    			j++;
    			if(j>=60)break;
    		}
    		tc.iTlCount=j;
    		
    		//根据等级差，队伍人数排序
    		for(i=0;i<tc.iTlCount-1;i++)
    		{
    			for(j=i+1;j<tc.iTlCount;j++)
    			{
    				if(tc.tl[i].iSort>tc.tl[j].iSort)
    				{//等级越接近，放到越前面
    					tc.tl[i].swap(tc.tl[j]);
    				}
    			}
    		}
    		//////////////////////////////
    //		for(i=1;i<7;i++)
    //		{
    //			tc.tl[i]=new _TEAMLIST();
    //			tc.tl[i].iRid=tc.tl[0].iRid;
    //			tc.tl[i].sName=tc.tl[0].sName+i;
    //			tc.tl[i].iLev=tc.tl[0].iLev;
    //			tc.tl[i].iRaX=tc.tl[0].iRaX;
    //			tc.tl[i].iSchool=tc.tl[0].iSchool;
    //			tc.tl[i].sTarget=tc.tl[0].sTarget;
    //		}
    //		tc.iTlCount=7;
    		
    	};

    class PublicChat_Send extends BaseClass{
    //公聊发送框
    	constructor( ani)
    	{
    		super();
    		var i;
    		
    		this.iW=560+50-20;
    		this.iH=360;
    		
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2-50;
    //		this.iY=0;
    		
    		this.btn_channel=new Array(7);//
    		for(i=0;i<7;i++)
    		{
    			this.btn_channel[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_channel[i].Move(this.iX+25+i*80,this.iY+25, 60, 60);
    			this.btn_channel[i].InitButton("频道选择");
    		}
    		this.btn_channel[0].sName="当";
    		this.btn_channel[1].sName="队";
    		this.btn_channel[2].sName="门";
    		this.btn_channel[3].sName="帮";
    		this.btn_channel[4].sName="世";
    		this.btn_channel[5].sName="传";
    		this.btn_channel[6].sName="叭";
    //		btn_close=new XButton(GmPlay.xani_ui);
    //		btn_close.Move(this.iX+this.iW-60,this.iY, 60, 60);
    //		btn_close.InitButton("统一关闭按钮");
    		
    		this.bSelectColor=false;
    		this.bSelectFace=false;
    		
    		i=75;
    		
    		this.btn_voice=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_voice.Move(this.iX+25,this.iY+this.iH-25-65, 64, 65);
    		this.btn_voice.InitButton("发送语音");
    		
    		// this.btn_color=new XButtonEx2(GmPlay.xani_button);
    		// this.btn_color.Move(this.iX+25+i,this.iY+this.iH-25-65, 64, 65);
    		// this.btn_color.InitButton("发送颜色");
    		
    		this.btn_face=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_face.Move(this.iX+25+i+i,this.iY+this.iH-25-65, 64, 65);
    		this.btn_face.InitButton("发送表情");

    		this.btn_goods=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_goods.Move(this.iX+25+i+i+i,this.iY+this.iH-25-65, 64, 65);
    		this.btn_goods.InitButton("发送物品");
    		
    		this.btn_pet=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_pet.Move(this.iX+25+i+i+i+i,this.iY+this.iH-25-65, 64, 65);
    		this.btn_pet.InitButton("发送宠物");
    		
    		this.btn_team=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_team.Move(this.iX+25+i*5,this.iY+this.iH-25-65, 64, 65);
    		this.btn_team.InitButton("发送队伍");

    		this.btn_send=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_send.Move(this.iX+this.iW-90-25,this.iY+this.iH-25-65+2, 90, 60);
    		this.btn_send.InitButton("发送聊天按钮");
    		this.btn_send.sName="发送";
    		
    //		btn_close=new XButtonEx1(GmPlay.xani_nui2);
    //		btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    //		btn_close.InitButton("关闭按钮");
    //		btn_close.sName="发送";
    		
    //		if(PublicChat_Send.in_speak==null)
    		{
    			PublicChat_Send.in_speak=new XInput(GmPlay$1.xani_nui3);
    			PublicChat_Send.in_speak.Move(this.iX+25, this.iY+25+60+10, this.iW-50, this.iH-25-65-10-25-60-10);
    			PublicChat_Send.in_speak.bHideText=true;
    		}
    		if(PublicChat_Send.bOpenInput)PublicChat_Send.in_speak.OpenInput();
    		PublicChat_Send.bOpenInput=true;
    		
    //		this.iCurrentColor=SelectColor.sc.iColor;
    		this.iCurrentColor=0xffffff;

    		if(PublicChat_Send.cext==null)
    		{
    			PublicChat_Send.cext=new Array(5);//
    			for(i=0;i<5;i++)PublicChat_Send.cext[i]=new _EXTDATA();
    			PublicChat_Send.ClearCext();
    		}

    		this.iRecordDelay=0;
    		this.iRecordStat=0;
    		this.iRecordingShow=0;
    		 this.bSend=false;
    	}

    	Draw()
    	{
    		if(PublicChat_Send.iChannelPoint<0)PublicChat_Send.iChannelPoint=0;
    		if(PublicChat_Send.iChannelPoint>6)PublicChat_Send.iChannelPoint=6;
    		var i;
    		var s;
    		DrawMode$1.frame_type4("中等框a52_50", this.iX, this.iY, this.iW, this.iH, 52, 50);
    		DrawMode$1.frame_type4("聊天显示框亮20_20",PublicChat_Send.in_speak.iX, PublicChat_Send.in_speak.iY, PublicChat_Send.in_speak.iW, PublicChat_Send.in_speak.iH,20,20);
    		
    //		DrawMode.ui3_DefineFrame(this.iX, this.iY, this.iW, this.iH);
    //		DrawMode.Frame2_MD(this.iX, this.iY, this.iW, this.iH);
    //		DrawMode.Frame3_BK(this.iX, this.iY, this.iW, this.iH, "公聊");
    //		DrawMode.Frame1_BR(this.iX+20, this.iY+70, this.iW-40, this.iH-70-80);
    //		M3DFast.gi().DrawTextEx(this.iX+20, this.iY+20, "公聊", 0xff000000, 40, 101, 1, 1, 0, 0, 0);
    		for(i=0;i<7;i++)
    		{
    			if(PublicChat_Send.iChannelPoint==i)
    			{
    				this.btn_channel[i].bMouseIn=true;
    				this.btn_channel[i].bMouseDown=true;
    			}
    			this.btn_channel[i].Draw();
    		}
    		PublicChat_Send.in_speak.onscr();
    //		PublicChat_Send.in_speak.Draw();
    		
    		s="#c176b51"+PublicChat_Send.in_speak.sDetail;
    		for(i=0;i<4;i++)
    		{
    			if(PublicChat_Send.cext[i].type>=100)continue;
    			if(s.indexOf("#x"+(i+1))>=0)
    			{
    				if(i==3)
    				{//语音
    					s=s.replace("#x"+(i+1), "#c00c000[语音:"+PublicChat_Send.cext[i].detail+"]#o");
    				}
    				else s=s.replace("#x"+(i+1), "#c00c000["+PublicChat_Send.cext[i].name+"]#o");
    			}
    			else PublicChat_Send.cext[i].type=100;
    		}
    //		s="a bc def";
    //		s=s.replace("bc", "def");
    //		GmPlay.sop1(""+s);
    		FormatString.gi().FormatEx(s, PublicChat_Send.in_speak.iW-30, 29,0,0,35);//"#c000000"+
    		FormatString.gi().Draw(PublicChat_Send.in_speak.iX+15, PublicChat_Send.in_speak.iY+10);

    //		btn_close.Draw();
    		
    		this.btn_voice.Draw();
    		// if(this.iCurrentColor==0xffffff)this.btn_color.Draw();
    		// else M3DFast.gi().FillRect_2D(this.btn_color.iX, this.btn_color.iY, this.btn_color.iX+this.btn_color.iW, this.btn_color.iY+this.btn_color.iH, 0xff000000|this.iCurrentColor);
    		this.btn_face.Draw();
    		this.btn_goods.Draw();
    		this.btn_pet.Draw();
    		this.btn_team.Draw();
    		
    		this.btn_send.Draw();

    		// if(this.bSelectColor)SelectColor.sc.Draw();
    		if(this.bSelectFace)SelectFace.gi().Draw();
    		
    		switch(this.iRecordStat)
    		{
    		case 0://开始录音
    			break;
    		case 1://录音中
    			DrawMode$1.frame_type4("语音输入背景20_20", GmConfig$1.SCRW/2-120, GmConfig$1.SCRH/2-120, 240, 240+35+30, 20, 20);
    			DrawMode$1.frame_type1("语音输入字底框20_35", GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2+100+20, 200, 20);
    			var xx=GmConfig$1.SCRW/2-100;
    			var yy=GmConfig$1.SCRH/2+100+20;
    			M3DFast$1.gi().FillRect_2D(xx, yy, xx+200*(GameData$1.VOICETIMEOUT-this.iRecordDelay)/GameData$1.VOICETIMEOUT, yy+35, 0x30ffffff);
    			if(this.iRecordingShow==1)
    			{
    				GmPlay$1.xani_other.DrawAnima(GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2-100, "录音中",0);
    				M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW/2, GmConfig$1.SCRH/2+100+20+35/2, "手指划开，取消录制", 0xffffffff, 18, 101, 1, 1, 0, -2, -2);
    			}
    			else if(this.iRecordingShow==2)
    			{
    				GmPlay$1.xani_other.DrawAnima(GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2-100, "移开手指",0);
    				M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW/2, GmConfig$1.SCRH/2+100+20+35/2, "手指划开，取消发送", 0xffffffff, 18, 101, 1, 1, 0, -2, -2);
    			}
    			break;
    		case 2://开始上传
    			if(GmPlay$1.m_vi.sRecordName!="empty")
    			{
    				if(GmPlay$1.m_vi.iRecordTime<=1000)
    				{
    					EasyMessage.easymsg.AddMessage("录音时间太短");
    					this.iRecordStat=0;
    					break;
    				}
    				this.iRecordDelay=GameData$1.VOICETIMEOUT;
    				PublicChat_Send.cext[3].type=2;
    				PublicChat_Send.cext[3].eid=GmPlay$1.m_vi.iRecordTime;
    				if(PublicChat_Send.in_speak.sDetail.indexOf("#x4")==-1)
    				{
    					PublicChat_Send.in_speak.sDetail+="#x4";
    					PublicChat_Send.in_speak.OpenInput();
    				}
    				PublicChat_Send.cext[3].name="";
    				PublicChat_Send.cext[3].detail="";
    				
    				GmPlay$1.m_vi.UpLoad();
    				this.iRecordStat=3;
    			}
    			break;
    		case 3://等待上传完
    			if(GmPlay$1.m_vi.sUrlName!="empty")
    			{
    				this.iRecordDelay=GameData$1.VOICETIMEOUT;
    				PublicChat_Send.cext[3].name=GmPlay$1.m_vi.sUrlName;
    				
    				GmPlay$1.m_vi.StartRecognize();
    				this.iRecordStat=4;
    			}
    			break;
    		case 4://等待翻译完
    			if(GmPlay$1.m_vi.sRecognizeResult!="empty")
    			{//上传完 并 翻译完
    				PublicChat_Send.cext[3].detail=GmPlay$1.m_vi.sRecognizeResult;
    				
    				this.iRecordStat=0;
    			}
    			break;
    		}
    		if(this.iRecordStat>0)
    		{
    			this.iRecordDelay--;
    			if(this.iRecordDelay<=0)
    			{
    				this.iRecordStat=0;
    				GmPlay$1.m_vi.StopRecord();
    				EasyMessage.easymsg.AddMessage("录音超时取消");
    			}
    		}
    		if(this.bSend)
    		{
    			if(this.iRecordStat==0)
    			{
    				this.bSend=false;
    				this.SendMessage();
    			}
    		}
    	}

    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.bSelectFace)
    		{
    			if(SelectFace.gi().ProcTouch(msg, x, y))
    			{
    				if(SelectFace.gi().iSelectStat!=0)
    				{
    					if(SelectFace.gi().iSelectStat==1)
    					{
    						PublicChat_Send.in_speak.sDetail+="#f"+SelectFace.gi().iSelectPoint;
    						PublicChat_Send.in_speak.OpenInput();
    					}
    					this.bSelectFace=false;
    				}
    			}
    			return true;
    		}
    		if(this.bSelectColor)
    		{
    			if(SelectColor.sc.ProcTouch(msg, x, y))
    			{
    				if(SelectColor.sc.iSelectStat!=0)
    				{
    					if(SelectColor.sc.iSelectStat==1)
    					{//选择了颜色
    						PublicChat_Send.in_speak.sDetail+="#c"+SelectColor.sc.tostr();
    						PublicChat_Send.in_speak.OpenInput();
    						this.iCurrentColor=SelectColor.sc.iColor;
    					}
    					this.bSelectColor=false;
    				}
    			}
    			return true;
    		}
    // 		if(this.btn_color.ProcTouch(msg, x, y))
    // 		{
    // 			if(this.btn_color.bCheck())
    // 			{
    // 				this.bSelectColor=true;
    // 				SelectColor.sc.Init(-1);
    // //				PublicChat_Send.in_speak.sDetail+="#cff0000";
    // 			}
    // 			return true;
    // 		}
    		if(this.btn_face.ProcTouch(msg, x, y))
    		{
    			if(this.btn_face.bCheck())
    			{
    				this.bSelectFace=true;
    				SelectFace.gi().Init();
    			}
    			return true;
    		}
    		if(this.btn_goods.ProcTouch(msg, x, y))
    		{
    			if(this.btn_goods.bCheck())
    			{
    				SelectGoods.Open(0);
    			}
    			return true;
    		}
    		if(this.btn_pet.ProcTouch(msg, x, y))
    		{
    			if(this.btn_pet.bCheck())
    			{
    				SelectPet.Open(0);
    			}
    			return true;
    		}
    		if(this.btn_team.ProcTouch(msg, x, y))
    		{
    			if(this.btn_team.bCheck())
    			{
    				PublicChat_Send.AddTeam();
    			}
    			return true;
    		}
    		if(XDefine$1.bInRect(x, y, this.btn_voice.iX, this.btn_voice.iY, this.btn_voice.iW, this.btn_voice.iH))
    		{
    			if(msg==1)
    			{//按下，开始录音
    				if(this.iRecordStat==0)
    				{//暂停背景音乐
    					if(GmPlay$1.m_vi.StartRecord())
    					{
    						this.iRecordStat=1;
    						this.iRecordDelay=GameData$1.VOICETIMEOUT;
    					}
    					else
    					{
    						EasyMessage.easymsg.AddMessage("启动录音失败");
    						return true;
    					}
    				}
    			}
    			else if(msg==3)
    			{//放开手指，发送录音
    				if(this.iRecordStat==1)
    				{
    					GmPlay$1.m_vi.StopRecord();
    					this.iRecordStat=2;
    				}
    			}
    			this.iRecordingShow=1;
    			return true;
    		}
    		else if(this.iRecordStat==1)
    		{//手指移出按钮
    			if(msg==3)
    			{//取消录音
    				GmPlay$1.m_vi.StopRecord();
    				this.iRecordStat=0;
    			}
    			this.iRecordingShow=2;
    			return true;
    		}
    		this.iRecordingShow=0;

    		for(i=0;i<7;i++)
    		{
    			if(this.btn_channel[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_channel[i].bCheck())
    				{
    //					if(i==5)EasyMessage.easymsg.AddMessage("传闻频道每次发送花费2000铜币");
    					if(i==6)
    					{
    						if(MyGoods.bHaveGoods(122, 1))PublicChat_Send.iChannelPoint=i;
    						else EasyMessage.easymsg.AddMessage("背包中没有小喇叭");
    					}
    					else PublicChat_Send.iChannelPoint=i;
    				}
    			}
    		}
    		if(PublicChat_Send.in_speak.ProcTouch(msg, x, y))
    		{
    		}
    		if(this.btn_send.ProcTouch(msg, x, y))
    		{
    			if(this.btn_send.bCheck())
    			{
    				this.bSend=true;
    				if(this.iRecordStat!=0)EasyMessage.easymsg.AddMessage("正在处理中，请稍后...");
    			}
    			return true;
    		}
    //		if(btn_close.ProcTouch(msg, x, y))
    //		{
    //			if(btn_close.bCheck())
    //			{
    //				XStat.gi().PopStat(1);
    //			}
    //		}
    		if(XDefine$1.bOnRect(x, y, this.iX, this.iY, this.iW, this.iH))return true;
    		else if(msg==3)XStat$1.gi().PopStat(1);
    		return false;
    	}

    	 SendMessage()
    	{
    		var i;
    		if(PublicChat_Send.in_speak.sDetail.length>100)
    		{
    			EasyMessage.easymsg.AddMessage("文字太长");
    			PublicChat_Send.in_speak.sDetail="";
    		}
    		else if(PublicChat_Send.in_speak.sDetail.length>0)
    		{
    			var s=PublicChat_Send.in_speak.sDetail;
    			for(i=0;i<4;i++)
    			{
    				if(PublicChat_Send.cext[i].type>=100)continue;
    				if(s.indexOf("#x"+(i+1))>=0)
    				{
    					if(i==3)
    					{//语音
    						s=s.replace("#x"+(i+1), GameData$1.EXTCOLOR+"[语音:"+PublicChat_Send.cext[i].detail+"]#o");
    					}
    					else s=s.replace("#x"+(i+1), GameData$1.EXTCOLOR+"["+PublicChat_Send.cext[i].name+"]#o");
    				}
    				else PublicChat_Send.cext[i].type=100;
    			}
    			GmProtocol$1.gi().s_PublicChat(PublicChat_Send.iChannelPoint,s);
    			
    			PublicChat_Send.in_speak.sDetail="";
    			PublicChat_Send.ClearCext();
    			XStat$1.gi().PopStat(1);
    		}
    		else EasyMessage.easymsg.AddMessage("请先输入文字");
    	}
    }

    PublicChat_Send.iChannelPoint=0;
    PublicChat_Send.in_speak=null;
    PublicChat_Send.cext=null;
    	
    PublicChat_Send.AddTeam=function()
    	{
    		var i;
    		if(!MyTeam$1.bTeamLeader())
    		{
    			EasyMessage.easymsg.AddMessage("队长才能添加");
    			return;
    		}
    		if(PublicChat_Send.cext==null)
    		{
    			PublicChat_Send.ClearCext();
    		}
    		for(i=0;i<3;i++)
    		{
    			if(PublicChat_Send.cext[i].type==100)
    			{
    				PublicChat_Send.cext[i].type=4;
    				
    				PublicChat_Send.cext[i].eid=GmMe$1.me.iRid;
    				PublicChat_Send.cext[i].tid=0;
    				PublicChat_Send.cext[i].name="申请入队";
    				PublicChat_Send.in_speak.sDetail+=TeamCreate._TARGET[MyTeam$1.iTeamTarget]+""+MyTeam$1.iLev1+"级~"+MyTeam$1.iLev2+"级"+"#x"+(i+1);
    				PublicChat_Send.in_speak.OpenInput();
    				return;
    			}
    		}
    		EasyMessage.easymsg.AddMessage("最多添加3个发送项目");
    	};
    	PublicChat_Send.AddGoods=function( g)
    	{
    		var i;
    		if(PublicChat_Send.cext==null)
    		{
    			PublicChat_Send.ClearCext();
    		}
    		for(i=0;i<3;i++)
    		{
    			if(PublicChat_Send.cext[i].type==100)
    			{
    				PublicChat_Send.cext[i].type=0;
    				PublicChat_Send.cext[i].eid=g.iGid;
    				PublicChat_Send.cext[i].tid=g.iTid;
    				PublicChat_Send.cext[i].name=GmPlay$1.de_goods.strValue(g.iTid, 0, 4);
    				PublicChat_Send.in_speak.sDetail+="#x"+(i+1);
    				PublicChat_Send.in_speak.OpenInput();
    				return;
    			}
    		}
    		EasyMessage.easymsg.AddMessage("最多添加3个物品或宠物");
    	};
    	PublicChat_Send.AddPet=function( p)
    	{
    		var i;
    		if(PublicChat_Send.cext==null)
    		{
    			PublicChat_Send.ClearCext();
    		}
    		for(i=0;i<3;i++)
    		{
    			if(PublicChat_Send.cext[i].type==100)
    			{
    				PublicChat_Send.cext[i].type=1;
    				PublicChat_Send.cext[i].eid=p.iPid;
    				PublicChat_Send.cext[i].tid=p.iTid;
    				PublicChat_Send.cext[i].name=GmPlay$1.de_pet.strValue(p.iTid, 0, 1);
    				PublicChat_Send.in_speak.sDetail+="#x"+(i+1);
    				PublicChat_Send.in_speak.OpenInput();
    				return;
    			}
    		}
    		EasyMessage.easymsg.AddMessage("最多添加3个物品或宠物");
    	};
    	PublicChat_Send.bOpenInput=true;
    	PublicChat_Send.Open=function()
    	{
    		XStat$1.gi().PushStat(XStat$1.GS_SENDPUBLICCHAT);
    //		((PublicChat)(XStat.gi().LastStat(0))).PublicChat_Send.in_speak.OpenInput();
        };
    	PublicChat_Send.ClearCext=function()
    	{
    		var i;
    		if(PublicChat_Send.cext==null)
    		{
    			PublicChat_Send.cext=new Array(5);//
    			for(i=0;i<5;i++)PublicChat_Send.cext[i]=new _EXTDATA();
    		}
    		for(i=0;i<5;i++)PublicChat_Send.cext[i].type=100;
    	};

    class SetChatValue extends BaseClass{

    	 constructor( a)
    	{
    		super();
             this._FCLIST=["当前频道","队伍频道","门派频道","帮派频道","世界频道","传闻频道","系统频道"];
             this._AUTO=["当前语音","队伍语音","门派语音","帮派语音","世界语音","传闻语音"];
             this._FAST=["当前语音","队伍语音","门派语音","帮派语音","世界语音","传闻语音"];


    		this.iW=200*3+25*4;
    		this.iH=570;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		var i;
    		
    		this.chk_fchannel=new Array(8);//
    		this.chk_autoplay=new Array(8);//
    		this.chk_fastvoice=new Array(8);//
    		for(i=0;i<7;i++)
    		{
    			this.chk_fchannel[i]=new XCheckBox(GmPlay$1.xani_button);
    			this.chk_fchannel[i].InitBox("复选框50_53");
    			if((XRecordFast.iFilterChannel&(1<<i))==0)this.chk_fchannel[i].bTrue=false;
    			else this.chk_fchannel[i].bTrue=true;
    			this.chk_fchannel[i].sDetail=this._FCLIST[i];
    		}
    		for(i=0;i<6;i++)
    		{
    			this.chk_autoplay[i]=new XCheckBox(GmPlay$1.xani_button);
    			this.chk_autoplay[i].InitBox("复选框50_53");
    			if((XRecordFast.iAutoPlay&(1<<i))==0)this.chk_autoplay[i].bTrue=false;
    			else this.chk_autoplay[i].bTrue=true;
    			this.chk_autoplay[i].sDetail=this._AUTO[i];
    			
    			this.chk_fastvoice[i]=new XCheckBox(GmPlay$1.xani_button);
    			this.chk_fastvoice[i].InitBox("复选框50_53");
    			if((XRecordFast.iFastVoice&(1<<i))==0)this.chk_fastvoice[i].bTrue=false;
    			else this.chk_fastvoice[i].bTrue=true;
    			this.chk_fastvoice[i].sDetail=this._FAST[i];
            }
            

     	}

    	Draw()
    	{
    		var i;
    		var offx,offy,w,h;
    		DrawMode$1.frame_type4("中等框a52_50", this.iX, this.iY, this.iW, this.iH, 52, 50);
    		
    		h=this.iH-50;
    		w=200;
    		offx=this.iX+25;
    		offy=this.iY+25;
    		DrawMode$1.frame_type4("聊天显示框暗20_20", offx,offy, 200, this.iH-50, 20, 20);
    		DrawMode$1.frame_type4("单色内框a20_20", offx+20,offy+20, 200-40, 50, 20, 20);
    		M3DFast$1.gi().DrawTextEx(offx+100, offy+20+25, "频道过滤", 0xff176b51, 30, 101, 1, 1, 0, -2, -2);
    		for(i=0;i<7;i++)
    		{
    			this.chk_fchannel[i].Move(offx+20, offy+20+50+20+i*60, 50, 50);
    			this.chk_fchannel[i].Draw();
    		}
    		
    		offx+=225;
    		DrawMode$1.frame_type4("聊天显示框暗20_20", offx,offy, 200, this.iH-50, 20, 20);
    		DrawMode$1.frame_type4("单色内框a20_20", offx+20,offy+20, 200-40, 50, 20, 20);
    		M3DFast$1.gi().DrawTextEx(offx+100, offy+20+25, "自动播放", 0xff176b51, 30, 101, 1, 1, 0, -2, -2);
    		for(i=0;i<6;i++)
    		{
    			this.chk_autoplay[i].Move(offx+20, offy+20+50+20+i*60, 50, 50);
    			this.chk_autoplay[i].Draw();
    		}
    		
    		offx+=225;
    		DrawMode$1.frame_type4("聊天显示框暗20_20", offx,offy, 200, this.iH-50, 20, 20);
    		DrawMode$1.frame_type4("单色内框a20_20", offx+20,offy+20, 200-40, 50, 20, 20);
    		M3DFast$1.gi().DrawTextEx(offx+100, offy+20+25, "快捷语音", 0xff176b51, 30, 101, 1, 1, 0, -2, -2);
    		for(i=0;i<6;i++)
    		{
    			this.chk_fastvoice[i].Move(offx+20, offy+20+50+20+i*60, 50, 50);
    			this.chk_fastvoice[i].Draw();
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<7;i++)
    		{
    			if(this.chk_fchannel[i].ProcTouch(msg, x, y))
    			{
    				XRecordFast.iFilterChannel=XRecordFast.iFilterChannel&(~(1<<i));
    				if(this.chk_fchannel[i].bTrue)XRecordFast.iFilterChannel|=(1<<i);
    			}
    		}
    		for(i=0;i<6;i++)
    		{
    			if(this.chk_autoplay[i].ProcTouch(msg, x, y))
    			{
    				XRecordFast.iAutoPlay=XRecordFast.iAutoPlay&(~(1<<i));
    				if(this.chk_autoplay[i].bTrue)XRecordFast.iAutoPlay|=(1<<i);
    			}
    			if(this.chk_fastvoice[i].ProcTouch(msg, x, y))
    			{
    				XRecordFast.iFastVoice=XRecordFast.iFastVoice&(~(1<<i));
    				if(this.chk_fastvoice[i].bTrue)XRecordFast.iFastVoice|=(1<<i);
    			}
    		}
    		if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH) && msg==3)XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    SetChatValue.Open=function()
    {
        XStat$1.gi().PushStat(XStat$1.GS_SETCHATVALUE);
    };

    class PublicChat_BigFrame extends BaseClass{
    	InitButton()
    	{
    		if(this.bInited)return;
    		var i;
    		this.btn_set=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_set.InitButton("聊天设置");
    		
    		this.btn_face=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_face.InitButton("发送表情");
    		
    		this.btn_send=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_send.InitButton("发送聊天按钮");
    		this.btn_send.sName="发送";
    		
    		this.in_words=new XInput(GmPlay$1.xani_ui);
    		this.in_words.sDetail="";
    		this.in_words.sBackPrompt="点击这里输入聊天信息";
    		this.in_words.iBackSize=20;
    		this.in_words.iTextSize=30;
    		this.in_words.iTextColor=0xff176b51;
    		
    		this.btn_channel=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.btn_channel[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_channel[i].InitButton("频道选择");
    		}
    		this.btn_channel[0].sName="全";
    		this.btn_channel[1].sName="当";
    		this.btn_channel[2].sName="队";
    		this.btn_channel[3].sName="门";
    		this.btn_channel[4].sName="帮";
    		this.btn_channel[5].sName="世";
    		this.btn_channel[6].sName="传";
    		this.btn_channel[7].sName="系";
    		
    		this.btn_voice=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_voice.InitButton("发送语音");
    		
    		this.btn_opensend=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_opensend.InitButton("打开公聊输入框");
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_frame);
    		this.btn_close.InitButton("聊天半屏关闭框45_106");
    		
    		this.bInited=true;
    	}
    	constructor( ani)
    	{
    		super();
    		var i;
    		///////////////////////////////////////////////////////////////////////
    		this.chk_switch=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.chk_switch[i]=new XCheckBox(GmPlay$1.xani_nui3);
    			this.chk_switch[i].InitBox("统一勾选");
    			this.chk_switch[i].Move(this.iX+this.iW-25-50-60, this.iY+25+55*i, 50, 50);
    			this.chk_switch[i].bTrue=true;
    			if(i>0)this.chk_switch[i].bTrue=PublicChat_SmallFrame.gi().bMessageSwitch[i-1];
    		}

    		this.chk_switch[1].sDetail="当前";
    		this.chk_switch[2].sDetail="队伍";
    		this.chk_switch[3].sDetail="门派";
    		this.chk_switch[4].sDetail="帮派";
    		this.chk_switch[5].sDetail="世界";
    		this.chk_switch[6].sDetail="传闻";

    		this.bScrolling=false;

    		this.iRecordDelay=0;
    		this.iRecordStat=0;
    		this.iVoiceChannelPoint=0;
    		this.iRecordingShow=0;
    	}
    	 DrawSelect( offx, offy, pms)
    	{
    		var k;
    		for(k=0;k<5;k++)
    		{
    			switch(pms.exts[k].type)
    			{
    			case 0://物品
    			case 1://宠物
    			case 2://语音
    				pms.lrs_big[k].CopyFrom(FormatString.gi().lrs[k]);
    				if(pms.exts[k].iShowDelay>0)
    				{
    					for(var m=0;m<pms.lrs_big[k].iCount;m++)
    					{
    						var xx1=offx+pms.lrs_big[k].rs[m].iX;
    						var yy1=offy+pms.lrs_big[k].rs[m].iY;
    						var xx2=offx+pms.lrs_big[k].rs[m].iX+pms.lrs_big[k].rs[m].iW;
    						var yy2=offy+pms.lrs_big[k].rs[m].iY+pms.lrs_big[k].rs[m].iH;
    						M3DFast$1.gi().FillRect_2D(xx1,yy1,xx2,yy2, 0xff00ff|(pms.exts[k].iShowDelay<<24));
    					}
    					if(pms.exts[k].iShowDelay>200)pms.exts[k].iShowDelay-=3;
    					else if(pms.exts[k].iShowDelay>150)pms.exts[k].iShowDelay-=6;
    					else if(pms.exts[k].iShowDelay>100)pms.exts[k].iShowDelay-=9;
    					else if(pms.exts[k].iShowDelay>50)pms.exts[k].iShowDelay-=12;
    					else pms.exts[k].iShowDelay=0;
    				}
    				break;
    			}
    		}
    	}
    	 DrawPms( offx, offy, ww, channel, pms)
    	{
    		var k;
    		var ps=PublicChat_SmallFrame.gi();
    		var detail="#c176b51"+pms.sMessage;
    		for(k=1;k<5;k++)
    		{
    			switch(pms.exts[k].type)
    			{
    			case 0://物品
    				detail=FormatString.gi().InsertLocker(k, detail, "["+GmPlay$1.de_goods.strValue(pms.exts[k].tid, 0, 4)+"]",GameData$1.EXTCOLOR,"#c00c000");
    				break;
    			case 1://宠物
    				detail=FormatString.gi().InsertLocker(k, detail, "["+GmPlay$1.de_pet.strValue(pms.exts[k].tid, 0, 1)+"]",GameData$1.EXTCOLOR,"#c00c000");
    				break;
    			case 2://语音
    				detail=FormatString.gi().InsertLocker(k, detail, "[语音:"+pms.exts[k].detail+"]",GameData$1.EXTCOLOR,"#c00c000");
    				break;
    			case 4://队伍
    				detail=FormatString.gi().InsertLocker(k, detail, "[申请入队]",GameData$1.EXTCOLOR,"#c00c000");
    				break;
    			}
    		}
    		FormatString.gi().Format(detail, ww-90, SystemOperate.WordSize(24));
    		FormatString.gi().CheckOutRect();
    		for(k=0;k<5;k++)
    		{
    			switch(pms.exts[k].type)
    			{
    			case 0://物品
    			case 1://宠物
    			case 2://语音
    			case 3://人名
    			case 4://队伍
    				pms.lrs_big[k].CopyFrom(FormatString.gi().lrs[k]);
    				break;
    			}
    		}
    		
    		var th=FormatString.gi().iH+10+10+24;//本行高度=对话内容+10+10+24
    		var dy=offy-th;
    		
    		//如果pms是自己，则在右侧
    		if(pms.iRid==GmMe$1.me.iRid)
    		{
    			pms.ox=offx+ww-52-10-FormatString.gi().iW-10;
    			pms.oy=dy+24+10;
    			pms.ow=FormatString.gi().iW;
    			pms.oh=FormatString.gi().iH;
    			
    			pms.headx=offx+ww-52;
    			pms.heady=dy;
    			
    			GmPlay$1.xani_head.DrawAnimaEx(offx+ww-52, dy, "新头像"+pms.iRax, 0,101,52.0/80,52.0/80,0,0,0);
    			GmPlay$1.xani_frame.DrawAnima(offx+ww-52-10-24, dy, "聊天频道框24_24",0);
    			M3DFast$1.gi().DrawTextEx(offx+ww-52-10-24+12, dy+12, ps._CHANNELSHORT[channel], ps._CHANNELCOLORI[channel], 20, 101, 1, 1, 0, -2, -2);
    			M3DFast$1.gi().DrawTextEx(offx+ww-52-10-24-5, dy+12, pms.sName, 0xff176b51, 24, 101, 1, 1, 0, -3, -2);
    			DrawMode$1.frame_type4("聊天内容框20_20", offx+ww-52-10-(FormatString.gi().iW+20), dy+24, FormatString.gi().iW+20, FormatString.gi().iH+20, 20, 20);
    			GmPlay$1.xani_frame.DrawAnima(offx+ww-52-10, dy+24,"聊天内容框20_20",10);
    			
    			this.DrawSelect(offx+ww-52-10-FormatString.gi().iW-10, dy+24+10,pms);
    			FormatString.gi().Draw(offx+ww-52-10-FormatString.gi().iW-10, dy+24+10);
    		}
    		else
    		{
    			pms.ox=offx+52+10+10;
    			pms.oy=dy+24+10;
    			pms.ow=FormatString.gi().iW;
    			pms.oh=FormatString.gi().iH;
    			
    			pms.headx=offx;
    			pms.heady=dy;

    			GmPlay$1.xani_head.DrawAnimaEx(offx, dy, "新头像"+pms.iRax, 0,101,52.0/80,52.0/80,0,0,0);
    			GmPlay$1.xani_frame.DrawAnima(offx+52+10, dy, "聊天频道框24_24",0);
    			M3DFast$1.gi().DrawTextEx(offx+52+10+12, dy+12, ps._CHANNELSHORT[channel], ps._CHANNELCOLORI[channel], 20, 101, 1, 1, 0, -2, -2);
    			M3DFast$1.gi().DrawTextEx(offx+52+10+24+5, dy+12, pms.sName, 0xff176b51, 24, 101, 1, 1, 0, 0, -2);
    			DrawMode$1.frame_type4("聊天内容框20_20", offx+52+10, dy+24, FormatString.gi().iW+20, FormatString.gi().iH+20, 20, 20);
    			GmPlay$1.xani_frame.DrawAnima(offx+52+10, dy+24,"聊天内容框20_20",9);
    			
    			this.DrawSelect(offx+52+10+10, dy+24+10,pms);
    			FormatString.gi().Draw(offx+52+10+10, dy+24+10);
    		}
    		return th;
    	}
    	 DrawPmsEx( offx, offy, ww, channel, pms)
    	{//系统频道
    		var ps=PublicChat_SmallFrame.gi();
    		var detail=ps._CHANNELCOLORS[channel]+pms.sMessage;
    		FormatString.gi().Format(detail, ww-60, SystemOperate.WordSize(24));
    		var th=FormatString.gi().iH+10;//本行高度=对话内容+10+10
    		var dy=offy-th;
    		
    		GmPlay$1.xani_frame.DrawAnima(offx, dy, "聊天频道框24_24",0);
    		M3DFast$1.gi().DrawTextEx(offx+12, dy+12, ps._CHANNELSHORT[channel], ps._CHANNELCOLORI[channel], 20, 101, 1, 1, 0, -2, -2);
    		FormatString.gi().Draw(offx+24+10, dy);

    		return th;
    	}
    	DrawMessage( x, y, w, h)
    	{
    		x+=10;y+=10;w-=20;h-=20;
    		this.iMx=x;this.iMy=y;this.iMw=w;this.iMh=h;
    		var i,j;
    		var iDy=y+h+this.iScrollY;
    		var ps=PublicChat_SmallFrame.gi();
    		
    		for(i=0;i<ps.iMessageCount;i++)ps.pms[i].ox=-1;
    		
    		M3DFast$1.gi().SetViewClip(x, y, x+w, y+h);

    		for(i=0;i<ps.iMessageCount;i++)
    		{
    			if(this.iChannelPoint==1 && ps.pms[i].channel!=0)continue;
    			else if(this.iChannelPoint==2 && ps.pms[i].channel!=1)continue;
    			else if(this.iChannelPoint==3 && ps.pms[i].channel!=2)continue;
    			else if(this.iChannelPoint==4 && ps.pms[i].channel!=3)continue;
    			else if(this.iChannelPoint==5 && ps.pms[i].channel!=4 && ps.pms[i].channel!=50)continue;
    			else if(this.iChannelPoint==6 && ps.pms[i].channel!=5)continue;
    			else if(this.iChannelPoint==7 && ps.pms[i].channel!=6 && ps.pms[i].channel!=7)continue;

    			if(ps.pms[i].channel==0)j=0;//当前
    			else if(ps.pms[i].channel==1)j=1;//队伍
    			else if(ps.pms[i].channel==2)j=2;//门派
    			else if(ps.pms[i].channel==3)j=3;//帮派
    			else if(ps.pms[i].channel==4 || ps.pms[i].channel==50)j=4;//世界，喇叭
    			else if(ps.pms[i].channel==5)j=5;//传闻
    			else if(ps.pms[i].channel==6)j=6;//系统
    			else if(ps.pms[i].channel==7)j=7;//副本
    			else continue;
    //			j=this.iChannelPoint-1;
    			if(j<=5)
    			{//当前，队伍，门派，帮派，世界,传闻
    				iDy-=this.DrawPms(x,iDy,w,j,ps.pms[i])+5;
    			}
    			else
    			{//系统
    				iDy-=this.DrawPmsEx(x,iDy,w,j,ps.pms[i])+5;
    			}
    			if(iDy<=y)break;
    		}
    		if(i<PublicChat_SmallFrame.gi().iMessageCount)this.bCanScroll=true;
    		else this.bCanScroll=false;
    		M3DFast$1.gi().NoClip();
    	}
    	Draw()
    	{
    		if(!this.bShow)return;

    		this.InitButton();
    		var i;
    		var offx,offy;
    		
    		if(this.bOpening)
    		{
    			if(this.iX<0-this.iW/5)this.iX+=this.iW/5;
    			else
    			{
    				this.iX=PublicInterface.gi().iLHX;
    				this.bOpening=false;
    			}
    		}
    		else if(this.bCloseing)
    		{
    			if(this.iX>-this.iW)this.iX-=this.iW/5;
    			else
    			{
    				this.iX=-this.iW;
    				this.bCloseing=false;
    				this.bShow=false;
    				return;
    			}
    		}
    		
    		this.btn_close.Move(this.iX+this.iW, this.iY+GmConfig$1.SCRH/2-106/2, 45, 106);
    		this.btn_close.Draw();

    		DrawMode$1.frame_type4("中等框a52_50", this.iX, this.iY, this.iW, this.iH, 52, 50);
    		
    		offx=this.iX+15;
    		offy=this.iY+15;
    		this.btn_set.Move(offx,offy, 64, 65);
    		this.btn_set.Draw();
    		
    		offx+=64+5;
    		this.in_words.Move(offx,offy+9, 235, 47);
    		DrawMode$1.frame_type1("输入框a20_47",this.in_words.iX,this.in_words.iY,this.in_words.iW,20);
    		this.in_words.DrawText();
    		this.in_words.onscr();
    		
    		offx+=235+5;
    		this.btn_face.Move(offx, offy, 64, 65);
    		this.btn_face.Draw();
    		
    		offx+=64+5;
    		this.btn_send.Move(offx, offy+2, 90, 60);
    		this.btn_send.Draw();
    		
    		offx=this.iX+15;
    		offy+=64+5;
    		for(i=0;i<8;i++)
    		{
    			this.btn_channel[i].Move(offx+2, offy+i*60, 60, 60);
    			this.btn_channel[i].Draw();
    		}
    		
    		var ww=400;
    		var hh=this.iH-15-15-64-5;
    		DrawMode$1.frame_type4("聊天显示框暗20_20",offx+64+5, offy, ww,hh,20,20);
    		this.DrawMessage(offx+64+5,offy,ww,hh);//聊天内容
    		
    		this.btn_opensend.Move(this.iX+15, this.iY+this.iH-15-65, 64, 65);
    		this.btn_opensend.Draw();
    		
    		this.btn_voice.Move(this.iX+15, this.iY+this.iH-15-65-5-65, 64, 65);
    		this.btn_voice.Draw();
    		
    		for(i=0;i<8;i++)
    		{
    			if(this.iChannelPoint==i)
    			{
    				this.btn_channel[i].bMouseIn=true;
    				this.btn_channel[i].bMouseDown=true;
    			}
    			this.btn_channel[i].Draw();
    		}
    		
    		if(this.bSelectFace)SelectFace.gi().Draw();
    		
    		switch(this.iRecordStat)
    		{
    		case 0://开始录音
    			break;
    		case 1://录音中
    			DrawMode$1.frame_type4("语音输入背景20_20", GmConfig$1.SCRW/2-120, GmConfig$1.SCRH/2-120, 240, 240+35+30, 20, 20);
    			DrawMode$1.frame_type1("语音输入字底框20_35", GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2+100+20, 200, 20);
    			var xx=GmConfig$1.SCRW/2-100;
    			var yy=GmConfig$1.SCRH/2+100+20;
    			M3DFast$1.gi().FillRect_2D(xx, yy, xx+200*(GameData$1.VOICETIMEOUT-this.iRecordDelay)/GameData$1.VOICETIMEOUT, yy+35, 0x30ffffff);
    			if(this.iRecordingShow==1)
    			{
    				GmPlay$1.xani_other.DrawAnima(GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2-100, "录音中",0);
    				M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW/2, GmConfig$1.SCRH/2+100+20+35/2, "手指划开，取消录制", 0xffffffff, 18, 101, 1, 1, 0, -2, -2);
    			}
    			else if(this.iRecordingShow==2)
    			{
    				GmPlay$1.xani_other.DrawAnima(GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2-100, "移开手指",0);
    				M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW/2, GmConfig$1.SCRH/2+100+20+35/2, "手指划开，取消发送", 0xffffffff, 18, 101, 1, 1, 0, -2, -2);
    			}
    			break;
    		case 2://开始上传
    			if(GmPlay$1.m_vi.sRecordName!="empty")
    			{
    				this.iRecordDelay=GameData$1.VOICETIMEOUT;
    				GmPlay$1.m_vi.UpLoad();
    				this.iRecordStat=3;
    			}
    			break;
    		case 3://等待上传完
    			if(GmPlay$1.m_vi.sUrlName!="empty")
    			{
    				this.iRecordDelay=GameData$1.VOICETIMEOUT;
    				GmPlay$1.m_vi.StartRecognize();
    				this.iRecordStat=4;
    			}
    			break;
    		case 4://等待翻译完
    			if(GmPlay$1.m_vi.sRecognizeResult!="empty")
    			{//上传完 并 翻译完
    				if(GmPlay$1.m_vi.iRecordTime<=1000)
    				{
    					EasyMessage.easymsg.AddMessage("录音时间太短");
    					this.iRecordStat=0;
    					break;
    				}
    				PublicChat_Send.ClearCext();
    				
    				PublicChat_Send.cext[3].type=2;
    				PublicChat_Send.cext[3].eid=GmPlay$1.m_vi.iRecordTime;
    				PublicChat_Send.cext[3].name=GmPlay$1.m_vi.sUrlName;
    				PublicChat_Send.cext[3].detail=GmPlay$1.m_vi.sRecognizeResult;
    				this.iRecordStat=0;

    				GmProtocol$1.gi().s_PublicChat(this.iVoiceChannelPoint,GameData$1.EXTCOLOR+"[语音:"+PublicChat_Send.cext[3].detail+"]#o");
    			}
    			break;
    		}
    		if(this.iRecordStat>0)
    		{
    			this.iRecordDelay--;
    			if(this.iRecordDelay<=0)
    			{
    				this.iRecordStat=0;
    				GmPlay$1.m_vi.StopRecord();
    				EasyMessage.easymsg.AddMessage("录音超时取消");
    			}
    		}
    	}


    	ProcTouch( msg, x, y)
    	{
    		if(!this.bShow)return false;
    		var i,j;
    		if(this.bSelectFace)
    		{
    			if(SelectFace.gi().ProcTouch(msg, x, y))
    			{
    				if(SelectFace.gi().iSelectStat!=0)
    				{
    					if(SelectFace.gi().iSelectStat==1)this.in_words.sDetail+="#f"+SelectFace.gi().iSelectPoint;
    					this.bSelectFace=false;
    				}
    			}
    			return true;
    		}
    		if(this.btn_close.bMouseDown)
    		{
    			if(msg==2)
    			{//左右
    				this.iX-=(this.iLockX-x);
    				this.iLockX=x;
    				if(this.iX>0)this.iX=0;
    			}
    			else if(msg==3)
    			{
    				if(Math.abs(this.iLockX_old-x)<10)this.bCloseing=true;
    				else if(this.iX<-this.iW/2)this.bCloseing=true;
    				else this.bOpening=true;
    				this.btn_close.bMouseDown=false;
    				this.btn_close.iAnimaStat=11;
    			}
    			return true;
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bMouseDown)
    			{
    				this.iLockX=x;
    				this.iLockX_old=x;
    			}
    			if(this.btn_close.bCheck())
    			{
    				this.bCloseing=true;
    			}
    			return true;
    		}
    		if(this.btn_opensend.ProcTouch(msg, x, y))
    		{
    			if(this.btn_opensend.bCheck())
    			{
    				PublicChat_Send.Open();
    				PublicChat_Send.iChannelPoint=this.iChannelPoint-1;
    			}
    			return true;
    		}

    		for(i=0;i<8;i++)
    		{
    			if(this.btn_channel[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_channel[i].bCheck())
    				{
    					if(this.iChannelPoint!=i)
    					{
    						this.iChannelPoint=i;
    						this.iScrollY=0;
    					}
    				}
    			}
    		}

    		if(XDefine$1.bInRect(x, y, this.btn_voice.iX, this.btn_voice.iY, this.btn_voice.iW, this.btn_voice.iH))
    		{
    			if(msg==1)
    			{//按下，开始录音
    				if(this.iChannelPoint==0)EasyMessage.easymsg.AddMessage("不能在全部频道发言");
    				else if(this.iChannelPoint==7)EasyMessage.easymsg.AddMessage("不能在系统频道发言");
    				else if(this.iChannelPoint==2 && MyTeam$1.bNoTeam())EasyMessage.easymsg.AddMessage("还未组队");
    				else if(this.iChannelPoint==3 && GmMe$1.me.rbs.iSchoolId<=0)EasyMessage.easymsg.AddMessage("还未加入门派");
    				else if(this.iChannelPoint==4 && MyGov.mg.iRealGid<=0)EasyMessage.easymsg.AddMessage("还未加入帮派");
    				else if(this.iRecordStat==0)
    				{//暂停背景音乐
    					if(GmPlay$1.m_vi.StartRecord())
    					{
    						this.iRecordStat=1;
    						this.iRecordDelay=GameData$1.VOICETIMEOUT;
    					}
    					else
    					{
    						EasyMessage.easymsg.AddMessage("启动录音失败");
    						return true;
    					}
    					this.iVoiceChannelPoint=this.iChannelPoint-1;
    				}
    			}
    			else if(msg==3)
    			{//放开手指，发送录音
    				if(this.iRecordStat==1)
    				{
    					GmPlay$1.m_vi.StopRecord();
    					this.iRecordStat=2;
    				}
    			}
    			this.iRecordingShow=1;
    			return true;
    		}
    		else if(this.iRecordStat==1)
    		{//手指移出按钮
    			if(msg==3)
    			{//取消录音
    				GmPlay$1.m_vi.StopRecord();
    				this.iRecordStat=0;
    			}
    			this.iRecordingShow=2;
    			return true;
    		}
    		this.iRecordingShow=0;
    		if(msg==3)
    		{
    			var ps=PublicChat_SmallFrame.gi();
    			for(i=0;i<ps.iMessageCount;i++)
    			{
    //				GmPlay.sop(""+pms[i].ox+""+pms[i].oy);
    				if(ps.pms[i].ox==-1)continue;
    				if(XDefine$1.bInRect(x, y, ps.pms[i].headx, ps.pms[i].heady, 52, 52))
    				{
    					if(ps.pms[i].iRid>1000)GmProtocol$1.gi().s_WatchOn(0, ps.pms[i].iRid, 0,"");
    				}
    				if(!XDefine$1.bInRect(x, y, ps.pms[i].ox, ps.pms[i].oy, ps.pms[i].ow, ps.pms[i].oh))continue;
    				for(j=1;j<5;j++)
    				{
    //					GmPlay.sop(""+pms[i].exts[j].type);
    					if(ps.pms[i].exts[j].type>=100)continue;
    					if(ps.pms[i].exts[j].iShowDelay>0)continue;
    				
    					if(ps.pms[i].lrs_big[j].bIn(x-ps.pms[i].ox, y-ps.pms[i].oy))
    					{
    						switch(ps.pms[i].exts[j].type)
    						{
    						case 0://物品
    							GmProtocol$1.gi().s_WatchOn(1, ps.pms[i].exts[j].eid, 0,"");
    							ps.pms[i].exts[j].iShowDelay=255;
    //							EasyMessage.easymsg.AddMessage("正在获取["+pms[i].exts[j].name+"]信息");
    							break;
    						case 1://宠物
    							GmProtocol$1.gi().s_WatchOn(2, ps.pms[i].exts[j].eid, 0,"");
    							ps.pms[i].exts[j].iShowDelay=255;
    //							EasyMessage.easymsg.AddMessage("正在获取["+pms[i].exts[j].name+"]信息");
    							break;
    						case 2://语音
    							GmPlay$1.m_vi.PlayUrlVoice(ps.pms[i].exts[j].name);
    							ps.pms[i].exts[j].iShowDelay=255;
    //							EasyMessage.easymsg.AddMessage("正在播放[语音]信息");
    							break;
    //						case 3://自己
    //							GmProtocol.gi().s_WatchOn(0, ps.pms[i].exts[j].eid, 0,"");
    //							ps.pms[i].exts[j].iShowDelay=255;
    //							EasyMessage.easymsg.AddMessage("正在获取["+pms[i].sName+"]信息");
    //							break;
    						case 4://队伍
    							if(MyTeam$1.bInTeam())EasyMessage.easymsg.AddMessage("已有队伍");
    							else GmProtocol$1.gi().s_TeamOperate(3,ps.pms[i].exts[j].eid,0);
    							ps.pms[i].exts[j].iShowDelay=255;
    							break;
    						}
    					}
    				}
    			}
    		}
    		
    		if(this.btn_send.ProcTouch(msg,x,y))
    		{
    			if(this.btn_send.bCheck())
    			{
    				if(this.iChannelPoint==0)EasyMessage.easymsg.AddMessage("不能在全部频道发言");
    				else if(this.iChannelPoint==7)EasyMessage.easymsg.AddMessage("不能在系统频道发言");
    				else if(this.in_words.sDetail.length>100)
    				{
    					EasyMessage.easymsg.AddMessage("文字太长");
    					this.in_words.sDetail="";
    				}
    				else if(this.in_words.sDetail.length>0)
    				{
    					PublicChat_Send.ClearCext();
    					GmProtocol$1.gi().s_PublicChat(this.iChannelPoint-1,this.in_words.sDetail);
    					
    					this.in_words.sDetail="";
    				}
    				else EasyMessage.easymsg.AddMessage("请先输入文字");
    			}
    		}
    		if(this.btn_face.ProcTouch(msg, x, y))
    		{
    			if(this.btn_face.bCheck())
    			{
    				this.bSelectFace=true;
    				SelectFace.gi().Init();
    			}
    			return true;
    		}
    		if(this.in_words.ProcTouch(msg, x, y))return true;
    		if(this.btn_set.ProcTouch(msg, x, y))
    		{
    			if(this.btn_set.bCheck())
    			{
    				SetChatValue.Open();
    			}
    			return true;
    		}
    		
    		if(XDefine$1.bInRect(x,y,this.iMx,this.iMy,this.iMw,this.iMh) && msg==1)
    		{
    			this.bScrolling=true;
    			this.iLockY=y;
    		}
    		if(this.bScrolling)
    		{
    			if(msg==2)
    			{
    				if(y>this.iLockY)
    				{//往前翻
    					if(this.bCanScroll)this.iScrollY+=(y-this.iLockY);
    				}
    				else this.iScrollY+=(y-this.iLockY);
    				
    				if(this.iScrollY<0)this.iScrollY=0;
    				this.iLockY=y;
    			}
    			if(msg==3)this.bScrolling=false;
    		}
    		if(XDefine$1.bInRect(x,y,this.iX,this.iY,this.iW,this.iH))return true;
    		return false;
    	}
    }

    PublicChat_BigFrame.bg=null;
    PublicChat_BigFrame.gi=function()
    {
    	if(PublicChat_BigFrame.bg==null)PublicChat_BigFrame.bg=new PublicChat_BigFrame(null);
    	return PublicChat_BigFrame.bg;
    };
    	
    PublicChat_BigFrame.Open=function()
    {
    	var bg=PublicChat_BigFrame.gi();
    //		XStat.gi().PushStat(XStat.GS_FULLCHATFRAME);
        bg.iW=500;
        bg.iH=GmConfig$1.SCRH;
        
        bg.iX=-bg.iW;
        bg.iY=0;
        
        bg.bShow=true;
        bg.bOpening=true;
    //		bg.iChannelPoint=0;//指向当前频道
        bg.iScrollY=0;
        
        bg.InitButton();
        for(var i=0;i<8;i++)bg.btn_channel[i].SetNormal();
        
        bg.bSelectFace=false;
    };

    class PublicMessage
    {
    /*	public int channel;//频道
    	public int iRid;//发送者ID
    	public String sName;//发送者名字
    	public int iRax;//种族，性别
    	public int iFlag;//各种标记
    	public String sMessage;
    	
    	public _EXTDATA exts[ ];
    	public LockRect lrs_small[ ];
    	public LockRect lrs_big[ ];
    	
    	public int ox,oy,ow,oh;
    	public int headx,heady;
    	*/
    	 constructor()
    	{
    		var i;
    		this.sName="";
    		this.sMessage="";
    		this.exts=new Array(5);//
    		this.lrs_small=new Array(5);//
    		this.lrs_big=new Array(5);//
    		for(i=0;i<5;i++)
    		{
    			this.exts[i]=new _EXTDATA();
    			this.lrs_small[i]=new LockRect();
    			this.lrs_big[i]=new LockRect();
    		}
    	}
    	copyfrom( pm)
    	{
    		this.channel=pm.channel;
    		this.iRid=pm.iRid;
    		this.sName=pm.sName;
    		this.iRax=pm.iRax;
    		this.iFlag=pm.iFlag;
    		this.sMessage=pm.sMessage;
    		this.exts[0].copyfrom(pm.exts[0]);
    		this.exts[1].copyfrom(pm.exts[1]);
    		this.exts[2].copyfrom(pm.exts[2]);
    		this.exts[3].copyfrom(pm.exts[3]);
    		this.exts[4].copyfrom(pm.exts[4]);
    	}
    }

    class PublicChat_SmallFrame {
    	//左下角聊天框

    	 constructor()
    	{
    		var i;
    		this.pm3f=M3DFast$1.gi();
    		
    		this.bMessageSwitch=new Array(10);//
    		for(i=0;i<10;i++)this.bMessageSwitch[i]=true;//各频道开关默认打开

    		PublicChat_SmallFrame.iW=480-5;//GmConfig.SCRW*2/5;
    		PublicChat_SmallFrame.iH=160;//125;
    		
    		PublicChat_SmallFrame.iModifyW=PublicChat_SmallFrame.iW;
    		PublicChat_SmallFrame.iModifyH=PublicChat_SmallFrame.iH;
    		
    		this.bOpen=true;
    		this.bOpening=false;
    		this.bCloseing=false;
    		//最最左下角

    		this.btn_open=null;
    		this.btn_speak=null;
    		this.btn_close=null;
    		this.btn_full=null;
    		this.btn_voice=null;
    		
    		this.pms=new Array(PublicChat_SmallFrame.MAXMESSAGE);//
    		for(i=0;i<PublicChat_SmallFrame.MAXMESSAGE;i++)
    		{
    			this.pms[i]=new PublicMessage();
    		}
    		this.iMessageCount=0;
    		
    		PublicChat_SmallFrame.bLock=false;
    		
    		this.sSpeakers=new Array(32);//
    		this.iSpeakerCount=-1;
    		this.iSpeakerX=0;
            this.iSpeakerWidth=0;
            
             this.iRecordDelay=0;
             this.iRecordStat=0;
             this.iVoiceChannelPoint=0;
             this.iRecordingShow=0;
            this._CHANNELSHORT=["当","队","门","帮","世","传","系","副"];
            this._CHANNELCOLORS=["#cffffff","#cff8000","#cff0000","#c00ff00","#c00ffff","#c80a0ff","#cffff00","#cff00ff"];
        //	public String this._CHANNELCOLORS={"#c00ffff","#cff8000","#cff0000","#c00ff00","#cffffff","#c80a0ff","#cffff00","#cff00ff"};
            this._CHANNELCOLORI=[0xffffffff,0xffff8000,0xffff0000,0xff00ff00,0xff00ffff,0xff80a0ff,0xffffff00,0xffff00ff];
        //	public int this._CHANNELCOLORI={0xff00ffff,0xffff8000,0xffff0000,0xff00ff00,0xffffffff,0xff80a0ff,0xffffff00,0xffff00ff};

    	}
    	 AddSpeaker( name, msg)
    	{
    		if(this.iSpeakerCount==-1)
    		{
    			this.iSpeakerCount=1;
    			this.sSpeakers[1]=name+":"+msg;
    			this.NextSpeaker();
    		}
    		else if(this.iSpeakerCount<30)
    		{
    			this.iSpeakerCount++;
    			this.sSpeakers[this.iSpeakerCount]=name+":"+msg;
    		}
    	}
    	 DrawSpeaker()
    	{
    		if(this.iSpeakerCount<0)return;
    		if(this.iSpeakerX+this.iSpeakerWidth<0)this.NextSpeaker();
    		this.iSpeakerX-=(GmConfig$1.SCRW/100);
    //		this.pm3f.FillRect_2D(this.iSpeakerX, 60, this.iSpeakerX+this.iSpeakerWidth, 60+30, 0x80000000);
    		this.pm3f.FillRect_2D(0, 60, GmConfig$1.SCRW, 60+30, 0x80000000);
    		this.pm3f.DrawTextEx(this.iSpeakerX, 60+15, this.sSpeakers[0], 0xffffffff, 30, 101, 1, 1, 0, 0, -2);
    	}
    	 NextSpeaker()
    	{
    		var i;
    		for(i=0;i<this.iSpeakerCount;i++)
    		{
    			this.sSpeakers[i]=this.sSpeakers[i+1];
    		}
    		this.iSpeakerCount--;
    		this.iSpeakerWidth=this.pm3f.GetTextWidth(this.sSpeakers[0], 30);
    		this.iSpeakerX=GmConfig$1.SCRW;
    	}

    	DrawMessage( iX, iY)
    	{
    		var i,j,k;
    		var iDy=GmConfig$1.SCRH-10;
    		var x,y,w,h;
    		var detail="";
    		var offx,offy;
    		x=iX+36;
    		y=iY;
    		w=PublicChat_SmallFrame.iW-40;
    		h=PublicChat_SmallFrame.iH;
    		for(i=0;i<this.iMessageCount;i++)this.pms[i].ox=-1;

    		this.pm3f.SetViewClip(x-40+3, y+3, x+w-3, y+h-3);
    		for(i=0;i<this.iMessageCount;i++)
    		{
    			if(this.pms[i].channel<10)
    			{
    				if(!this.bMessageSwitch[this.pms[i].channel])continue;//过滤信息
    			}

    			if((XRecordFast.iFilterChannel&1)==0 && this.pms[i].channel==0)continue;
    			if((XRecordFast.iFilterChannel&2)==0 && this.pms[i].channel==1)continue;
    			if((XRecordFast.iFilterChannel&4)==0 && this.pms[i].channel==2)continue;
    			if((XRecordFast.iFilterChannel&8)==0 && this.pms[i].channel==3)continue;
    			if((XRecordFast.iFilterChannel&16)==0 && (this.pms[i].channel==4 || this.pms[i].channel==50))continue;
    			if((XRecordFast.iFilterChannel&32)==0 && this.pms[i].channel==5)continue;
    			if((XRecordFast.iFilterChannel&64)==0 && (this.pms[i].channel==6 || this.pms[i].channel==7))continue;
    			switch(this.pms[i].channel)
    			{
    			case 0://当前
    			case 1://队伍
    			case 2://门派
    			case 3://帮派
    			case 4://世界
    			case 50://喇叭
    				detail="["+this.pms[i].sName+"]:"+this.pms[i].sMessage;
    				break;
    			case 5://传闻
    			case 6://系统
    			case 7://副本
    				if(this.pms[i].sName=="")detail=this.pms[i].sMessage;//传闻天蓝
    				else detail="["+this.pms[i].sName+"]:"+this.pms[i].sMessage;
    				break;
    			}
    			
    			

    	//			M3DFast.gi().FillRect_2D(x, iDy-FormatString.gi().iH, x+w, iDy, 0x80000000);

    			j=this.pms[i].channel;
    			if(j==50)j=4;
    			if(j<0 || j>7)j=0;
    			detail=this._CHANNELCOLORS[j]+detail;
    			
    			for(k=0;k<5;k++)
    			{
    				switch(this.pms[i].exts[k].type)
    				{
    				case 0://物品
    					detail=FormatString.gi().InsertLocker(k, detail, "["+GmPlay$1.de_goods.strValue(this.pms[i].exts[k].tid, 0, 4)+"]",GameData$1.EXTCOLOR,"#c00ff00");
    //					GmPlay.sop(detail);
    					break;
    				case 1://宠物
    					detail=FormatString.gi().InsertLocker(k, detail, "["+GmPlay$1.de_pet.strValue(this.pms[i].exts[k].tid, 0, 1)+"]",GameData$1.EXTCOLOR,"#c00ff00");
    					break;
    				case 2://语音
    					detail=FormatString.gi().InsertLocker(k, detail, "[语音:"+this.pms[i].exts[k].detail+"]",GameData$1.EXTCOLOR,"#c00ff00");
    					break;
    				case 3://名字
    					detail=FormatString.gi().InsertLocker(k, detail, "["+this.pms[i].sName+"]",this._CHANNELCOLORS[j],this._CHANNELCOLORS[j]);
    					break;
    				case 4://队伍
    					detail=FormatString.gi().InsertLocker(k, detail, "[申请入队]",GameData$1.EXTCOLOR,"#c00ff00");
    					break;
    				}
    			}
    			FormatString.gi().Format(detail,w,SystemOperate.WordSize(24));
    //			GmPlay.sop("i="+i+",,"+detail);
    			FormatString.gi().CheckOutRect();
    			offx=x;
    			offy=iDy-FormatString.gi().iH;
    			for(k=0;k<5;k++)
    			{
    				switch(this.pms[i].exts[k].type)
    				{
    				case 0://物品
    				case 1://宠物
    				case 2://语音
    				case 3://自己名字
    				case 4://队伍
    					this.pms[i].lrs_small[k].CopyFrom(FormatString.gi().lrs[k]);
    					if(this.pms[i].exts[k].iShowDelay>0)
    					{
    						for(var m=0;m<this.pms[i].lrs_small[k].iCount;m++)
    						{
    							var xx1=offx+this.pms[i].lrs_small[k].rs[m].iX;
    							var yy1=offy+this.pms[i].lrs_small[k].rs[m].iY;
    							var xx2=offx+this.pms[i].lrs_small[k].rs[m].iX+this.pms[i].lrs_small[k].rs[m].iW;
    							var yy2=offy+this.pms[i].lrs_small[k].rs[m].iY+this.pms[i].lrs_small[k].rs[m].iH;
    							M3DFast$1.gi().FillRect_2D(xx1,yy1,xx2,yy2, 0xff00ff|(this.pms[i].exts[k].iShowDelay<<24));
    //							GmPlay.sop("i="+i+",,,x="+xx1+",,,,y="+yy1+",,,,,x2="+xx2+",,,y2="+yy2+",,,ox="+offx+",,,oy="+offy);
    //							GmPlay.sop("check x="+this.pms[i].lrs_small[k].rs[m].iX+"    check y="+this.pms[i].lrs_small[k].rs[m].iY);
    //							M3DFast.gi().DrawTextEx(xx1, yy1, "@@@@@@@@@@@", 0xffffffff, 30, 101, 1, 1, 0, 0, 0);
    						}
    						if(this.pms[i].exts[k].iShowDelay>200)this.pms[i].exts[k].iShowDelay-=3;
    						else if(this.pms[i].exts[k].iShowDelay>150)this.pms[i].exts[k].iShowDelay-=6;
    						else if(this.pms[i].exts[k].iShowDelay>100)this.pms[i].exts[k].iShowDelay-=9;
    						else if(this.pms[i].exts[k].iShowDelay>50)this.pms[i].exts[k].iShowDelay-=12;
    						else this.pms[i].exts[k].iShowDelay=0;
    					}
    					break;
    				}
    			}
    			
    //				GmPlay.xani_frame.DrawAnima(x-18-12, iDy-FormatString.gi().iH+1, "聊天频道框24_24",0);
    //				M3DFast.gi().DrawTextEx(x-18, iDy-FormatString.gi().iH+12+1, this._CHANNELSHORT[j], this._CHANNELCOLORI[j], 20, 101, 1, 1, 0, -2, -2);
    			GmPlay$1.xani_frame.DrawAnima(x-16-12, iDy-FormatString.gi().iH+FormatString.gi().iLineH[0]-24-1, "聊天频道框24_24",0);
    			M3DFast$1.gi().DrawTextEx(x-16, iDy-FormatString.gi().iH+12+FormatString.gi().iLineH[0]-24-1, this._CHANNELSHORT[j], this._CHANNELCOLORI[j], 20, 101, 1, 1, 0, -2, -2);

    			FormatString.gi().Draw(x, iDy-FormatString.gi().iH);
    			this.pms[i].ox=x;
    			this.pms[i].oy=iDy-FormatString.gi().iH;
    			this.pms[i].ow=FormatString.gi().iW;
    			this.pms[i].oh=FormatString.gi().iH;
    			iDy-=FormatString.gi().iH;
    	//		iDy-=SystemOperate.WordSize(2);
    			if(iDy<=y)break;
    //			this.pm3f.DrawTextEx(iX, iY+PublicChat_SmallFrame.iH-20*(i+1), , 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		}
    		this.pm3f.NoClip();
    		
    //		for(i=0;i<this.iMessageCount;i++)this.pms[i].bSelected=false;
    	}
    	LoadButtons()
    	{
    		if(this.btn_open==null)
    		{
    			this.btn_open=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_open.InitButton("左下开关2");
    //			this.btn_open.bCheckByRect=true;
    		}
    		if(this.btn_close==null)
    		{
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("左下开关1");
    //		this.btn_close.bCheckByRect=true;
    		}
    		if(this.btn_speak==null)
    		{
    		this.btn_speak=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_speak.InitButton("左下发言");
    //		this.btn_speak.bCheckByRect=true;
    		}
    		if(this.btn_full==null)
    		{
    		this.btn_full=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_full.InitButton("左下展开");
    //		this.btn_full.bCheckByRect=true;
    		}
    		if(this.btn_voice==null)
    		{
    			this.btn_voice=new Array(10);//
    			for(var i=0;i<6;i++)
    			{
    				this.btn_voice[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    				this.btn_voice[i].InitButton("喇叭按钮60_60");
    			}
    		}
    	}
    	 Draw()
    	{
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return;
    		this.LoadButtons();
    		var i=5;
    		if(this.bOpening)
    		{
    			if(PublicChat_SmallFrame.iModifyW+PublicChat_SmallFrame.iW/i<PublicChat_SmallFrame.iW)PublicChat_SmallFrame.iModifyW+=PublicChat_SmallFrame.iW/i;
    			else PublicChat_SmallFrame.iModifyW=PublicChat_SmallFrame.iW;
    			
    			if(PublicChat_SmallFrame.iModifyH+PublicChat_SmallFrame.iH/i<PublicChat_SmallFrame.iH)PublicChat_SmallFrame.iModifyH+=PublicChat_SmallFrame.iH/i;
    			else PublicChat_SmallFrame.iModifyH=PublicChat_SmallFrame.iH;
    			
    			if(PublicChat_SmallFrame.iModifyW==PublicChat_SmallFrame.iW && PublicChat_SmallFrame.iModifyH==PublicChat_SmallFrame.iH)
    			{
    				this.bOpening=false;
    				this.bOpen=true;
    			}
    		}
    		else if(this.bCloseing)
    		{
    //			GmPlay.sop("aaa="+PublicChat_SmallFrame.iModifyW+",,,bbb="+PublicChat_SmallFrame.iW);
    			if(PublicChat_SmallFrame.iModifyW>0)PublicChat_SmallFrame.iModifyW-=PublicChat_SmallFrame.iW/i;
    			else PublicChat_SmallFrame.iModifyW=0;
    			
    			if(PublicChat_SmallFrame.iModifyH>0)PublicChat_SmallFrame.iModifyH-=PublicChat_SmallFrame.iH/i;
    			else PublicChat_SmallFrame.iModifyH=0;
    			
    			if(PublicChat_SmallFrame.iModifyW==0 && PublicChat_SmallFrame.iModifyH==0)
    			{
    				this.bCloseing=false;
    				this.bOpen=false;
    			}
    		}
    //		GmPlay.sop("PublicChat_SmallFrame.iW="+PublicChat_SmallFrame.iW+",,,,,iModify="+PublicChat_SmallFrame.iModifyW+",,this.bCloseing="+this.bCloseing+",,,this.bOpening="+this.bOpening);
    //		GmPlay.sop("GmConfig.SCRW="+GmConfig.SCRW+",l,,GmConfig.SCRH="+GmConfig.SCRH);
    var iX=0;
    var iY=GmConfig$1.SCRH-PublicChat_SmallFrame.iModifyH;
    //		this.pm3f.FillRect_2D(iX, iY, iX+PublicChat_SmallFrame.iModifyW, iY+PublicChat_SmallFrame.iModifyH, 0x80000000);
    		if(PublicChat_SmallFrame.iModifyW>0 && PublicChat_SmallFrame.iModifyH>0)
    		{
    			this.pm3f.FillRect_2D(iX,iY,iX+PublicChat_SmallFrame.iModifyW,iY+PublicChat_SmallFrame.iModifyH, 0x80000000);
    		}

    		if(this.bOpen)this.DrawMessage(iX,iY);

    		this.btn_open.Move(0, GmConfig$1.SCRH-60, 60, 60);
    		this.btn_open.SetCheckRect(0, GmConfig$1.SCRH-60, 60, 60);
    //		this.btn_open.Move(0, GmConfig.SCRH-(PublicChat_SmallFrame.iModifyH+60)/2, 60, 60);
    //		this.btn_open.SetCheckRect(0, GmConfig.SCRH-(PublicChat_SmallFrame.iModifyH+60)/2, 60, 60);

    		this.btn_close.Move(PublicChat_SmallFrame.iModifyW-60, GmConfig$1.SCRH-(PublicChat_SmallFrame.iModifyH+60)/2, 60, 60);
    		this.btn_close.SetCheckRect(PublicChat_SmallFrame.iModifyW-60, GmConfig$1.SCRH-(PublicChat_SmallFrame.iModifyH+60)/2, 60, 60);

    //////////////////////////////////////////////////////////////////////////////////////
    var offx=0;
    if(PublicInterface.gi().iLHX>0)offx=PublicInterface.gi().iLHX;
    var offy=GmConfig$1.SCRH-PublicChat_SmallFrame.iModifyH-80;
    var ww=72,hh=72;
    		this.btn_speak.Move(offx, offy, ww, hh);
    		this.btn_speak.SetCheckRect(offx, offy, ww, hh);
    		offx+=80;
    		this.btn_full.Move(offx, offy, ww, hh);
    		this.btn_full.SetCheckRect(offx, offy, ww, hh);
    		offx+=80;
    		for(i=0;i<6;i++)
    		{//根据设置
    			if((XRecordFast.iFastVoice&(1<<i))!=0)
    			{
    				this.btn_voice[i].Move(offx, offy, ww, hh);
    				offx+=80;
    			}
    		}
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    		if(this.bOpen || this.bOpening || this.bCloseing)
    		{	
    			GmPlay$1.xani_frame.DrawAnima(this.btn_speak.iX,this.btn_speak.iY, "右下底框72_72",0);
    			GmPlay$1.xani_icon.DrawAnima(this.btn_speak.iX,this.btn_speak.iY, "公聊发送",0);
    			
    			GmPlay$1.xani_frame.DrawAnima(this.btn_full.iX,this.btn_full.iY, "右下底框72_72",0);
    			GmPlay$1.xani_icon.DrawAnima(this.btn_full.iX,this.btn_full.iY, "公聊半屏",0);
    //			this.btn_speak.Draw();
    //			this.btn_full.Draw();
    //			j=-1;
    			for(i=0;i<6;i++)
    			{
    				if((XRecordFast.iFastVoice&(1<<i))!=0)
    				{
    					GmPlay$1.xani_frame.DrawAnima(this.btn_voice[i].iX,this.btn_voice[i].iY, "右下底框72_72",0);
    //					DrawMode.new_framepc(this.btn_voice[i].iX,this.btn_voice[i].iY,this.btn_voice[i].iW,this.btn_voice[i].iH);
    					GmPlay$1.xani_icon.DrawAnima(this.btn_voice[i].iX,this.btn_voice[i].iY, "公聊话筒",0);
    //					M3DFast.gi().DrawText_2(this.btn_voice[i].iX+ww-10,this.btn_voice[i].iY+10,this._CHANNELSHORT[i],0xffffec80,40,101,1,1,0,-2,-2,4,0xff00244d);
    					M3DFast$1.gi().DrawText_2(this.btn_voice[i].iX+ww-10,this.btn_voice[i].iY+10,this._CHANNELSHORT[i],0xffffffff,30,101,1,1,0,-2,-2,4,0xff00244d);
    				}
    //				this.btn_voice[i].Draw();
    			}
    			
    			switch(this.iRecordStat)
    			{
    			case 0://开始录音
    				break;
    			case 1://录音中
    				DrawMode$1.frame_type4("语音输入背景20_20", GmConfig$1.SCRW/2-120, GmConfig$1.SCRH/2-120, 240, 240+35+30, 20, 20);
    				DrawMode$1.frame_type1("语音输入字底框20_35", GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2+100+20, 200, 20);
    				var xx=GmConfig$1.SCRW/2-100;
    				var yy=GmConfig$1.SCRH/2+100+20;
    				M3DFast$1.gi().FillRect_2D(xx, yy, xx+200*(GameData$1.VOICETIMEOUT-this.iRecordDelay)/GameData$1.VOICETIMEOUT, yy+35, 0x30ffffff);
    				if(this.iRecordingShow==1)
    				{
    					GmPlay$1.xani_other.DrawAnima(GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2-100, "录音中",0);
    					M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW/2, GmConfig$1.SCRH/2+100+20+35/2, "手指划开，取消录制", 0xffffffff, 18, 101, 1, 1, 0, -2, -2);
    				}
    				else if(this.iRecordingShow==2)
    				{
    					GmPlay$1.xani_other.DrawAnima(GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2-100, "移开手指",0);
    					M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW/2, GmConfig$1.SCRH/2+100+20+35/2, "手指划开，取消发送", 0xffffffff, 18, 101, 1, 1, 0, -2, -2);
    				}
    				break;
    			case 2://开始上传
    				if(GmPlay$1.m_vi.sRecordName!="empty")
    				{
    					this.iRecordDelay=GameData$1.VOICETIMEOUT;
    					GmPlay$1.m_vi.UpLoad();
    					this.iRecordStat=3;
    				}
    				break;
    			case 3://等待上传完
    				if(GmPlay$1.m_vi.sUrlName!="empty")
    				{
    					this.iRecordDelay=GameData$1.VOICETIMEOUT;
    					GmPlay$1.m_vi.StartRecognize();
    					this.iRecordStat=4;
    				}
    				break;
    			case 4://等待翻译完
    				if(GmPlay$1.m_vi.sRecognizeResult!="empty")
    				{//上传完 并 翻译完
    					if(GmPlay$1.m_vi.iRecordTime<=1000)
    					{
    						EasyMessage.easymsg.AddMessage("录音时间太短");
    						this.iRecordStat=0;
    						break;
    					}
    					PublicChat_Send.ClearCext();
    					
    					PublicChat_Send.cext[3].type=2;
    					PublicChat_Send.cext[3].eid=GmPlay$1.m_vi.iRecordTime;
    					PublicChat_Send.cext[3].name=GmPlay$1.m_vi.sUrlName;
    					PublicChat_Send.cext[3].detail=GmPlay$1.m_vi.sRecognizeResult;
    					this.iRecordStat=0;

    					GmProtocol$1.gi().s_PublicChat(this.iVoiceChannelPoint,GameData$1.EXTCOLOR+"[语音:"+PublicChat_Send.cext[3].detail+"]#o");
    				}
    				break;
    			}
    			
    			this.btn_close.Move(PublicChat_SmallFrame.iModifyW-60, GmConfig$1.SCRH-(PublicChat_SmallFrame.iModifyH+60)/2, 60, 60);
    		}
    		if(this.iRecordStat>0)
    		{
    			this.iRecordDelay--;
    			if(this.iRecordDelay<=0)
    			{
    				this.iRecordStat=0;
    				GmPlay$1.m_vi.StopRecord();
    				EasyMessage.easymsg.AddMessage("录音超时取消");
    			}
    		}
    		if(this.bOpening || this.bCloseing);
    		else
    		{
    			if(this.bOpen)this.btn_close.Draw();
    			else this.btn_open.Draw();
    		}
    	}
    	SwichFrame()
    	{//开关窗口
    		if(this.bOpening)
    		{
    			this.bOpening=false;
    			this.bCloseing=true;
    		}
    		else if(this.bCloseing)
    		{
    			this.bOpening=true;
    			this.bCloseing=false;
    		}
    		else if(this.bOpen)
    		{
    			this.bOpening=false;
    			this.bCloseing=true;
    		}
    		else if(!this.bOpen)
    		{
    			this.bOpening=true;
    			this.bCloseing=false;
    		}
    	}
    	 ProcTouch( msg, x, y)
    	{
    		var iX=0;
    		var iY=GmConfig$1.SCRH-PublicChat_SmallFrame.iModifyH;
    //		GmPlay.sop("m  x="+x+",y="+y);
    		if(PublicChat_SmallFrame.bLock)
    		{//拖动框体大小
    			switch(msg)
    			{
    			case 2:
    				PublicChat_SmallFrame.iW=PublicChat_SmallFrame.iW+(x-this.iLockX);
    				if(PublicChat_SmallFrame.iW<240-5)PublicChat_SmallFrame.iW=240-5;
    //				iY=iY+(y-this.iLockY);
    //				if(iY>GmConfig.SCRH-50-60)iY=GmConfig.SCRH-50-60;
    //				PublicChat_SmallFrame.iH=GmConfig.SCRH-iY;
    				PublicChat_SmallFrame.iH=PublicChat_SmallFrame.iH-(y-this.iLockY);
    				if(PublicChat_SmallFrame.iH<50+60)PublicChat_SmallFrame.iH=50+60;
    				
    				if(x>this.iLockX && PublicChat_SmallFrame.iW>GmConfig$1.SCRW-40)PublicChat_SmallFrame.iW=GmConfig$1.SCRW;
    				if(PublicChat_SmallFrame.iW>GmConfig$1.SCRW)PublicChat_SmallFrame.iW=GmConfig$1.SCRW;
    				if(y<this.iLockY && PublicChat_SmallFrame.iH>GmConfig$1.SCRH-40)PublicChat_SmallFrame.iH=GmConfig$1.SCRH;
    				if(PublicChat_SmallFrame.iH>GmConfig$1.SCRH)PublicChat_SmallFrame.iH=GmConfig$1.SCRH;
    				this.iLockX=x;
    				this.iLockY=y;
    				
    				PublicChat_SmallFrame.iModifyW=PublicChat_SmallFrame.iW;
    				PublicChat_SmallFrame.iModifyH=PublicChat_SmallFrame.iH;
    				break;
    			case 3:
    				PublicChat_SmallFrame.bLock=false;
    				break;
    			}
    			return true;
    		}
    		
    		if(!this.bOpen && this.btn_open.ProcTouch(msg, x, y))
    		{
    			if(this.btn_open.bCheck())
    			{
    				this.SwichFrame();
    			}
    			return true;
    		}
    		if(this.bOpen && this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				this.SwichFrame();
    			}
    			return true;
    		}
    //		if(btn_channel.ProcTouch(msg, x, y))
    //		{
    //			return true;
    //		}
    //		if(in_speak.ProcTouch(msg, x, y))
    //		{
    //			return true;
    //		}
    		var i,j;
    		if(this.bOpen)
    		{
    			if(this.btn_speak.ProcTouch(msg, x, y))
    			{//
    				if(this.btn_speak.bCheck())
    				{
    					PublicChat_Send.Open();
    //					BackToSchool.Open("asdf");
    				}
    				return true;
    			}
    			if(this.btn_full.ProcTouch(msg, x, y))
    			{
    				if(this.btn_full.bCheck())
    				{
    					PublicChat_BigFrame.Open();
    				}
    				return true;
    			}
    			j=-1;
    			for(i=0;i<6;i++)
    			{//根据设置
    				if((XRecordFast.iFastVoice&(1<<i))!=0)
    				{
    					if(XDefine$1.bInRect(x, y, this.btn_voice[i].iX, this.btn_voice[i].iY, this.btn_voice[i].iW, this.btn_voice[i].iH))
    					{
    						if(this.iRecordStat==0 && msg==1)
    						{
    							if(i==1 && MyTeam$1.bNoTeam())
    							{
    								EasyMessage.easymsg.AddMessage("还未组队");
    								return true;
    							}
    							if(i==2 && GmMe$1.me.rbs.iSchoolId<=0)
    							{
    								EasyMessage.easymsg.AddMessage("还未加入门派");
    								return true;
    							}
    							if(i==3 && MyGov.mg.iRealGid<=0)
    							{
    								EasyMessage.easymsg.AddMessage("还未加入帮派");
    								return true;
    							}
    						}
    						if(this.iRecordStat>=2)
    						{
    							return true;
    						}
    						j=i;
    						if(msg==1)
    						{//按下，开始录音
    							if(this.iRecordStat==0)
    							{//暂停背景音乐
    								if(GmPlay$1.m_vi.StartRecord())
    								{
    									this.iRecordStat=1;
    									this.iRecordDelay=GameData$1.VOICETIMEOUT;
    								}
    								else
    								{
    									EasyMessage.easymsg.AddMessage("启动录音失败");
    									return true;
    								}
    								this.iVoiceChannelPoint=i;
    							}
    						}
    						else if(msg==3)
    						{//放开手指，发送录音
    							if(this.iRecordStat==1)
    							{
    								if(j==this.iVoiceChannelPoint)
    								{
    									GmPlay$1.m_vi.StopRecord();
    									this.iRecordStat=2;
    								}
    								else
    								{
    									GmPlay$1.m_vi.StopRecord();
    									this.iRecordStat=0;
    								}
    							}
    						}
    					}
    				}
    			}
    			if(this.iRecordStat==1)
    			{
    				if(j==this.iVoiceChannelPoint)
    				{//手指在按钮上
    					this.iRecordingShow=1;
    				}
    				else
    				{//手指移出按钮
    					if(msg==2)
    					{//提示松开手指停止录音
    					
    					}
    					if(msg==3)
    					{//取消录音
    						GmPlay$1.m_vi.StopRecord();
    						this.iRecordStat=0;
    					}
    					this.iRecordingShow=2;
    				}
    				return true;
    			}
    			this.iRecordingShow=0;
    //			GmPlay.sop(""+msg+",,,"+this.iMessageCount);
    			if(msg==3)
    			{
    				for(i=0;i<this.iMessageCount;i++)
    				{
    //					GmPlay.sop(""+this.pms[i].ox+""+this.pms[i].oy);
    					if(this.pms[i].ox==-1)continue;
    					if(!XDefine$1.bInRect(x, y, this.pms[i].ox, this.pms[i].oy, this.pms[i].ow, this.pms[i].oh))continue;
    					for(j=0;j<5;j++)
    					{
    						GmPlay$1.sop(""+this.pms[i].exts[j].type);
    						if(this.pms[i].exts[j].type>=100)continue;
    						if(this.pms[i].exts[j].iShowDelay>0)continue;
    					
    						if(this.pms[i].lrs_small[j].bIn(x-this.pms[i].ox, y-this.pms[i].oy))
    						{
    							switch(this.pms[i].exts[j].type)
    							{
    							case 0://物品
    								GmProtocol$1.gi().s_WatchOn(1, this.pms[i].exts[j].eid, 0,"");
    								this.pms[i].exts[j].iShowDelay=255;
    //								EasyMessage.easymsg.AddMessage("正在获取["+this.pms[i].exts[j].name+"]信息");
    								break;
    							case 1://宠物
    								GmProtocol$1.gi().s_WatchOn(2, this.pms[i].exts[j].eid, 0,"");
    								this.pms[i].exts[j].iShowDelay=255;
    //								EasyMessage.easymsg.AddMessage("正在获取["+this.pms[i].exts[j].name+"]信息");
    								break;
    							case 2://语音
    								GmPlay$1.m_vi.PlayUrlVoice(this.pms[i].exts[j].name);
    								this.pms[i].exts[j].iShowDelay=255;
    //								EasyMessage.easymsg.AddMessage("正在播放[语音]信息");
    								break;
    							case 3://自己
    								//GmPlay.sop("~~~~~~~~~~~~~"+i+"~"+j+"~~"+this.pms[i].exts[j].eid);
    								if(this.pms[i].exts[j].eid>1000)GmProtocol$1.gi().s_WatchOn(0, this.pms[i].exts[j].eid, 0,"");
    								this.pms[i].exts[j].iShowDelay=255;
    //								EasyMessage.easymsg.AddMessage("正在获取["+this.pms[i].sName+"]信息");
    								break;
    							case 4://队伍
    								if(MyTeam$1.bInTeam())EasyMessage.easymsg.AddMessage("已有队伍");
    								else
    								{
    									GmProtocol$1.gi().s_TeamOperate(3,this.pms[i].exts[j].eid,0);
    								}
    								this.pms[i].exts[j].iShowDelay=255;
    								break;
    							}
    						}
    					}
    				}
    			}
    		}

    		if(XDefine$1.bInRect(x, y, iX+PublicChat_SmallFrame.iW-60, iY, 60, 60))
    		{
    			if(msg==1)
    			{
    				PublicChat_SmallFrame.bLock=true;
    				this.iLockX=x;
    				this.iLockY=y;
    				return true;
    			}
    		}

    		PublicChat_SmallFrame.bLock=false;

    		if(XDefine$1.bInRect(x, y, iX, iY, PublicChat_SmallFrame.iModifyW, PublicChat_SmallFrame.iModifyH))return true;
    		return false;
    	}

    	GetMessage( pls)
    	{
    		var channel=pls.GetNextByte();
    		var rid=pls.GetNextInt();
    		var name=pls.GetNextString();
    		var rax=pls.GetNextByte();
    		var flag=pls.GetNextByte();
    		var detail=pls.GetNextString();
    		if(channel==50)
    		{//小喇叭
    			this.AddSpeaker(name,detail);
    //			return;
    		}

    		this.AddMessage(channel,rid,name,rax,flag,detail,pls);
    //		FormatString.gi().Format(ts2, 100);
    		if(channel==0 || channel==1)
    		{//当前，看发送者是否在附近玩家列表内，是则头上冒气泡框
    			if(rid==GmMe$1.me.iRid)
    			{
    				GmMe$1.me.sPopoString=detail;
    				GmMe$1.me.iPopoDelay=200;
    			}
    			else
    			{
    				var nr=Gameing.gameing.findnrs(rid);
    				if(nr!=null)
    				{
    					nr.sPopoString=detail;
    					nr.iPopoDelay=200;
    				}
    			}
    		}
    	}
    	 AddMessage( channel, rid, name, rax, flag, message, pls)
    	{
    		var i;
    		if(this.iMessageCount>=PublicChat_SmallFrame.MAXMESSAGE)this.iMessageCount=PublicChat_SmallFrame.MAXMESSAGE-1;
    		for(i=this.iMessageCount;i>0;i--)
    		{
    			this.pms[i].copyfrom(this.pms[i-1]);
    		}
    //		GmPlay.sop("channel="+channel);
    		this.pms[0].channel=channel;
    		this.pms[0].iRid=rid;
    		this.pms[0].sName=name;
    		this.pms[0].iRax=rax;
    		this.pms[0].iFlag=flag;
    		this.pms[0].sMessage=message;
    		
    		if(channel==5 && rid<1000)
    		{
    			this.pms[0].iRax=6;
    			this.pms[0].sName="某某";
    		}
    		if(channel<5)
    		{
    			this.pms[0].exts[0].type=3;//自己名字
    			this.pms[0].exts[0].eid=rid;
    		}
    		else this.pms[0].exts[0].type=100;
    		for(i=1;i<5;i++)
    		{
    			if(pls==null)break;
    			if(pls.iOffset>=pls.iLength)
    			{
    				this.pms[0].exts[i].type=100;
    				continue;
    			}
    			this.pms[0].exts[i].type=pls.GetNextByte();
    			switch(this.pms[0].exts[i].type)
    			{
    			case 0://物品
    			case 1://宠物
    			case 4://队伍
    				this.pms[0].exts[i].eid=pls.GetNextInt();
    				this.pms[0].exts[i].tid=pls.GetNextShort();
    				break;
    			case 2://语音
    				this.pms[0].exts[i].eid=pls.GetNextInt();
    				this.pms[0].exts[i].name=pls.GetNextString();
    				this.pms[0].exts[i].detail=pls.GetNextString();
    				if((XRecordFast.iAutoPlay&1)!=0 && channel==0)GmPlay$1.m_vi.PlayUrlVoice(this.pms[0].exts[i].name);
    				else if((XRecordFast.iAutoPlay&2)!=0 && channel==1)GmPlay$1.m_vi.PlayUrlVoice(this.pms[0].exts[i].name);
    				else if((XRecordFast.iAutoPlay&4)!=0 && channel==2)GmPlay$1.m_vi.PlayUrlVoice(this.pms[0].exts[i].name);
    				else if((XRecordFast.iAutoPlay&8)!=0 && channel==3)GmPlay$1.m_vi.PlayUrlVoice(this.pms[0].exts[i].name);
    				else if((XRecordFast.iAutoPlay&16)!=0 && (channel==4 || channel==50))GmPlay$1.m_vi.PlayUrlVoice(this.pms[0].exts[i].name);
    				else if((XRecordFast.iAutoPlay&32)!=0 && channel==5)GmPlay$1.m_vi.PlayUrlVoice(this.pms[0].exts[i].name);
    				break;
    			}
    //			GmPlay.sop(this.pms[0].exts[i].type+",,"+i+",,"+this.pms[0].exts[i].eid+",,"+this.pms[0].exts[i].detail);
    		}
    		
    		this.iMessageCount++;
    	}
    }

    PublicChat_SmallFrame.iW;PublicChat_SmallFrame.iH;
    PublicChat_SmallFrame.iModifyW;PublicChat_SmallFrame.iModifyH;
    PublicChat_SmallFrame.bLock;
    PublicChat_SmallFrame.MAXMESSAGE=100;
    PublicChat_SmallFrame.chat=null;
    PublicChat_SmallFrame.gi=function()
    {
    	if(PublicChat_SmallFrame.chat==null)PublicChat_SmallFrame.chat=new PublicChat_SmallFrame();
    	return PublicChat_SmallFrame.chat;
    };


     PublicChat_SmallFrame.CHANNEL_DANGQIAN =0;
      PublicChat_SmallFrame.CHANNEL_DUIWU =1;
      PublicChat_SmallFrame.CHANNEL_MENPAI =2;
      PublicChat_SmallFrame.CHANNEL_BANGPAI =3;
      PublicChat_SmallFrame.CHANNEL_SHIJIE= 4;
      PublicChat_SmallFrame.CHANNEL_CHUANWEN =5;
      PublicChat_SmallFrame.CHANNEL_XITONG =6;
      PublicChat_SmallFrame.CHANNEL_FUBEN =7;

    class FightMember {

    	constructor()
    	{
    		var i,j;
    		this.iWeapTid=-1;
    		this.aa_body=new AnimaAction();
    		this.aa_weapon=new AnimaAction();
    		this.iStatus=new Int32Array(FightMember.iMaxStatusCount);//
    		this.aa_status=new Array(FightMember.iMaxStatusCount);//
    		for(i=0;i<FightMember.iMaxStatusCount;i++)
    		{
    			this.aa_status[i]=null;
    		}
    		this.ianPoint=0;
    		this.bActed=true;
            
            this.an_list=new Array (this.MAXLIST);
    		this.aa_cls=new Array(6);//
    		this.iColor=new Int32Array(6);//
    		for(i=0;i<6;i++)
    		{
    //			aa_mts[i]=new AnimaAction();
    //			aa_bds[i]=new AnimaAction();
    			this.aa_cls[i]=new Array(5);
    			for(j=0;j<5;j++)
    			{
    				this.aa_cls[i][j]=new AnimaAction();
    			}
    			this.iColor[i]=0;
            }
            
            this.rotajd=0;
    	}
    	FaceTo( front)
    	{
    		if(front)
    		{
    			if(this.iPos<20)
    			{
    				this.sFaceTo="_左上";
    				this.sSkillFaceTo="_左";
    			}
    			else
    			{
    				this.sFaceTo="_右下";
    				this.sSkillFaceTo="_右";
    			}
    		}
    		else
    		{
    			if(this.iPos<20)
    			{
    				this.sFaceTo="_右下";
    				this.sSkillFaceTo="_右";
    			}
    			else
    			{
    				this.sFaceTo="_左上";
    				this.sSkillFaceTo="_左";
    			}
    		}
    	}
    	Clear()
    	{
    		var i;
    		for(i=0;i<FightMember.iMaxStatusCount;i++)
    		{//状态持续回合
    			this.iStatus[i]=0;
    			this.aa_status[i]=null;
    		}
    		this.bUseing=false;
    		this.iMaxHp=1;
    		this.iWeapTid=-1;
    		this.nr=null;
    		this.bMe=false;
    		this.iActDelay=0;
    		this.iFlying=0;
    		this.ianPoint=0;
    		this.bActed=false;
    		this.iPopoDelay=0;
    		this.iRace_Sex=-1;
    		this.iShowSNDelay=0;
    	}
    	ChangeStatus( stat, last)
    	{
    		if(stat>=0 && stat<FightMember.iMaxStatusCount)this.iStatus[stat]=last;
    //		GmPlay.sop("stat="+stat+",last="+last);
    	}
    	ActionStatus()
    	{
    		var i;
    		for(i=0;i<FightMember.iMaxStatusCount;i++)
    		{
    			if(this.iStatus[i]>0)
    			{
    //				GmPlay.sop("zzz stat="+i+",last="+this.iStatus[i]);
    				this.iStatus[i]--;
    			}
    		}
    	}
    	AddAnima( s)
    	{
    		if(!this.bUseing)return;
    //		if(this.ianPoint>=6)this.ianPoint=0;
    		if(this.iType==1 && parseInt(this.iTid/10000)!=0)this.an_list[this.ianPoint]="变异_"+s;
    		else if(this.iType==2 && this.iSpecialType==2 && parseInt(this.iTid/10000)!=0)this.an_list[this.ianPoint]="变异_"+s;
    		else this.an_list[this.ianPoint]=s;
    		this.ianPoint++;
    	}
    	PopAnima()
    	{
    		if(this.ianPoint==0)return;
    		this.ianPoint--;
    		for(var i=0;i<this.ianPoint;i++)
    		{
    			this.an_list[i]=this.an_list[i+1];
    		}
    	}
    	SetBaseAnima( s)
    	{
    		if(this.iType==1 && parseInt(this.iTid/10000)!=0)this.an_base="变异_"+s;
    		else if(this.iType==2 && this.iSpecialType==2 && parseInt(this.iTid/10000)!=0)this.an_base="变异_"+s;
    		else this.an_base=s;
    		if(this.bBaseWaiting)
    		{
    			this.ChangeAnima(this.an_base);
    		}
    	}
    	ChangeAnima( s)
    	{
    		if(this.iType==0 || (this.iType==2 && this.iSpecialType==1))
    		{//人形
    			XDefine$1.sop(""+this.iRace_Sex);
    			GmPlay$1.xani_newrole[this.iRace_Sex].InitAnimaWithName(s+this.sFaceTo, this.aa_body);
    			//换色
    //			GmPlay.sop(""+this.iColor[0]+",,,,"+this.iColor[1]);
    			this.ChangeColor(this.iRace_Sex,s+this.sFaceTo,0);
    			if(this.iWeapTid>0)GmPlay$1.xani_weap[this.iRace_Sex][SortAnima.WeapFlag(this.iWeapTid)].InitAnimaWithName(s+this.sFaceTo, this.aa_weapon);
    			return;
    		}
    //		switch(GameVersion.QUDAO)
    //		{
    //		case 0:
    ////			if(this.iRace_Sex==0 || this.iRace_Sex==1 || this.iRace_Sex==3 || this.iRace_Sex==4 || this.iRace_Sex==5)
    //			if(this.iRace_Sex==0 || this.iRace_Sex==1)
    //			{
    //				if(this.iType==0 || (this.iType==2 && this.iSpecialType==1))
    //				{
    //					GmPlay.xani_newrole[this.iRace_Sex].InitAnimaWithName(s+this.sFaceTo, this.aa_body);
    //					if(this.iWeapTid>0)GmPlay.xani_weap[this.iRace_Sex][SortAnima.WeapFlag(this.iWeapTid)].InitAnimaWithName(s+this.sFaceTo, this.aa_weapon);
    //					return;
    //				}
    //			}
    //			break;
    //		}
    		this.xani.InitAnimaWithName(s+this.sFaceTo,this.aa_body);
    //		if(this.iWeapTid>0)
    //		{
    ////			GmPlay.sop("zzzzzzzzzzzzzz="+GmMe.me.weapname(this.iTid, iWeapLev)+"_"+s+this.sFaceTo);
    //			if(this.iWeapTid==248 || this.iWeapTid==249 || this.iWeapTid==250)
    //			{//70武器this.xani_weap70
    //				GmPlay.xani_weap70.InitAnimaWithName(GmMe.sSex(this.iSex)+GmPlay.de_goods.strValue(this.iWeapTid, 0, 4)+"_"+s+this.sFaceTo, this.aa_weapon);
    //			}
    //			else this.xani.InitAnimaWithName(GmPlay.de_goods.strValue(this.iWeapTid, 0, 4)+"_"+s+this.sFaceTo,this.aa_weapon);
    //		}
    	}
    	NextAnima()
    	{
    		if(this.ianPoint>0)
    		{
    			this.ChangeAnima(this.an_list[0]);
    			this.PopAnima();
    			this.bBaseWaiting=false;
    		}
    		else
    		{
    			this.ChangeAnima(this.an_base);
    			this.bBaseWaiting=true;
    		}
    	}
    	NextFrame()
    	{
    		if(this.bBaseWaiting && this.ianPoint>0)
    		{
    			this.NextAnima();
    		}
    		else if(this.aa_body.NextFrame())
    		{
    			this.NextAnima();
    		}
    		else if(this.iWeapTid>0)
    		{
    			this.aa_weapon.iFrame=this.aa_body.iFrame;
    			//this.aa_weapon.NextFrame();
    		}
    	}

    	InitSN( skillid)
    	{
    		this.sShowSNDetail=GmPlay$1.de_skill.strValue(skillid, 0, 6);
    		if(this.sShowSNDetail=="-1")return;
    		this.iShowSNDelay=100;
    	}
    	ShowSN()
    	{
    		if(this.iShowSNDelay<=0)return;
    	}

    	FightPopo( x, y, h)
    	{
    		if(this.iPopoDelay<=0)return;
    		
    		this.iPopoDelay--;
    		FormatString.gi().Format(this.sPopoString, 151, 25);
    		x-=FormatString.gi().iW/2;
    		var sy=y+h+40-FormatString.gi().iH;
    		DrawBuffer.gi().FillRect(y, x, sy, x+FormatString.gi().iW, sy+FormatString.gi().iH, 0x50000000);
    		FormatString.gi().DrawToBuffer(y+1,x,sy);
    	}
    	
    	ChangeColor( xb, sa, m)
    	{
    		if(!SystemOperate.bShowColor)return;
    		var i;
    		for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    		{
    			if(this.iColor[i]<=0 || this.iColor[i]>=6)continue;
    			GmPlay$1.xani_color[xb][this.iColor[i]-1].InitAnimaWithName(SortAnima._CHANGECOLOR[xb][i]+"_"+sa, this.aa_cls[m][i]);
    			GmPlay$1.sop(""+SortAnima._CHANGECOLOR[xb][i]+"_"+sa);
    		}
    	}
    	DrawColor( xb, frame, offy, x, y, m)
    	{
    		if(!SystemOperate.bShowColor)return;
    		var i;
    		for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    		{
    			if(this.iColor[i]<=0 || this.iColor[i]>=6)continue;
    			this.aa_cls[m][i].iFrame=frame;
    //			DrawBuffer.gi().DrawAnima_aa(offy,null, x, y, this.aa_cls[m][i]);
    			DrawBuffer.gi().DrawAnimaEx(offy, x, y, this.aa_cls[m][i],this.iStatus[38]>0?50:101,1,1,0,0,0);
    			
    			//this.iStatus[38]>0?50:101
    		}
    	}
    	
    	frame_type1( name, x, y, w, bw)
    	{//横向框
    		GmPlay$1.xani_frame.InitAnimaWithName(name, GmPlay$1.aaa);
    		if(w<bw*2)
    		{
    			GmPlay$1.aaa.iFrame=0;
    			DrawBuffer.gi().DrawAnimaEx(this.iY+5, x, y, GmPlay$1.aaa, 101, 1.0*w/2/bw, 1, 0, 0, 0);
    			GmPlay$1.aaa.iFrame=2;
    			DrawBuffer.gi().DrawAnimaEx(this.iY+5, x+w/2, y, GmPlay$1.aaa, 101, 1.0*w/2/bw, 1, 0, 0, 0);
    //			GmPlay.xani_frame.DrawAnimaEx(x, y, name, 0, 101, 1.0f*w/2/bw, 1, 0, 0, 0);
    //			GmPlay.xani_frame.DrawAnimaEx(x+w/2, y, name, 2, 101, 1.0f*w/2/bw, 1, 0, 0, 0);
    		}
    		else
    		{
    			GmPlay$1.aaa.iFrame=1;
    			DrawBuffer.gi().DrawAnimaEx(this.iY+5, x+bw/2, y, GmPlay$1.aaa, 101, 1.0*(w-bw)/bw, 1, 0, 0, 0);
    	
    			GmPlay$1.aaa.iFrame=0;
    			DrawBuffer.gi().DrawAnimaEx(this.iY+5, x, y, GmPlay$1.aaa, 101, 1, 1, 0, 0, 0);
    			
    			GmPlay$1.aaa.iFrame=2;
    			DrawBuffer.gi().DrawAnimaEx(this.iY+5, x+w-bw, y, GmPlay$1.aaa, 101, 1, 1, 0, 0, 0);
    			
    //			GmPlay.xani_frame.DrawAnimaEx(x+bw/2, y, name, 1, 101, 1.0f*(w-bw)/bw, 1, 0, 0, 0);
    //			
    //			GmPlay.xani_frame.DrawAnima_aa(x,y,name,0);
    //			GmPlay.xani_frame.DrawAnima_aa(x+w-bw,y,name,2);
    		}
    	}

    	Draw()
    	{
    		var i,j,k,m,by;
    		var BLOODSIZE=72;
    		if(this.iPos!=5 && this.iPos!=25)
    		{
    			k=BLOODSIZE*this.iHp/this.iMaxHp;
    			//
    //			by=-this.pani.iAnimaY(this.aa_body)+10;
    			by=115;
    			if(this.iPos<20 || this.iStatus[16]>0)
    			{//己方血条
    //				DrawBuffer.gi().FillRect(this.iY+3, this.iX-BLOODSIZE/2, this.iY-by, this.iX+BLOODSIZE/2,this.iY-by+8, 0xfffcdc08);
    //				DrawBuffer.gi().FillRect(this.iY+4, this.iX-BLOODSIZE/2+1, this.iY-by+1, this.iX+BLOODSIZE/2-1,this.iY-by+8-1, 0xff451c0e);
    //				if(k>0)DrawBuffer.gi().FillRect(this.iY+5, this.iX-BLOODSIZE/2+1, this.iY-by+1, this.iX-BLOODSIZE/2+k-1,this.iY-by+8-1, 0xffff0000);
    				GmPlay$1.xani_frame.InitAnimaWithName("血条外框76_13", GmPlay$1.aaa);
    				DrawBuffer.gi().DrawAnima_aa(this.iY+4, null, this.iX-76/2, this.iY-by-10, GmPlay$1.aaa);
    				this.frame_type1("血条10_9",this.iX-76/2+2, this.iY-by-10+2,k,10);
    				//(this.iY+4,null,this.iX-76/2,this.iY-by-10,GmPlay.aaa);
    				//frame_type1
    				if(!this.bActed)DrawBuffer.gi().DrawAnima_aa(this.iY+5, null, this.iX, this.iY-by-15, GmPlay$1.aa_fightready);//准备
    			}
    			//头顶使用技能名称
    			if(this.iShowSNDelay>0)
    			{
    				this.iShowSNDelay-=5;
    				
    				GmPlay$1.xani_skills[0].InitAnimaWithName("技能名称背景", GmPlay$1.aaa);
    				if(this.iShowSNDelay>75)i=30-(this.iShowSNDelay-75);
    				else i=30;
    				if(this.iShowSNDelay<25)j=this.iShowSNDelay*4;
    				else j=101;
    				DrawBuffer.gi().DrawAnimaEx(this.iY+5, this.iX-60, this.iY-by-20, GmPlay$1.aaa, j, 1.0*i/30, 1.0*i/30, 0, 0, 0);
    				
    				if(this.iShowSNDelay<25)j=this.iShowSNDelay*10;
    				else j=0xff;
    				DrawBuffer.gi().DrawText(this.iY+6, 0, this.iX-60, this.iY-by-20-i, this.sShowSNDetail, (j<<24)|0xffffff, i);
    			}
    			
    			var c=0x00ffffff;//0xff80ff80
    //			if(this.bActed)c=0x00ffffff;
    //			else c=0x00ff0000;
    			FireworksEffect.DrawAura(0,this.iX, this.iY,DrawBuffer.gi(),this.iY-2);//战斗中影子
    //			DrawBuffer.gi().DrawText(this.iY+1, 1,this.iX,this.iY+20, this.sName, 0xa0000000|c, 20);//名字
    			if(this.bActed)
    			{
    				DrawBuffer.gi().DrawText_2(this.iY+1, 1,this.iX,this.iY+20, this.sName, 0xff80ff80, 20,1,0xff000000);
    				DrawBuffer.gi().DrawText(this.iY+GmConfig$1.SCRH, 1,this.iX,this.iY+20, this.sName, 0x6080ff80, 20);//颜色覆盖			
    			}
    			else
    			{
    				DrawBuffer.gi().DrawText_2(this.iY+1, 1,this.iX,this.iY+20, this.sName, 0xffff8000, 20,1,0xff000000);
    				DrawBuffer.gi().DrawText(this.iY+GmConfig$1.SCRH, 1,this.iX,this.iY+20, this.sName, 0x60ffb080, 20);//颜色覆盖			
    			}

    //			DrawBuffer.gi().DrawText(this.iY+GmConfig.SCRH, 1,this.iX,this.iY+20, this.sName, 0x60ff00ff, 20);//颜色覆盖
    			
    			if(this.iFlying>10)
    			{
    /*				String ss="";
    				if(this.iType==1 && this.iTid/10000!=0)ss="变异_";
    				if(iFly/2%2==0)this.xani.InitAnimaWithName(ss+"被攻击_右",this.aa_body);
    				else this.xani.InitAnimaWithName(ss+"被攻击_左",this.aa_body);*/

    				if(this.iFlying%2==0)
    				{
    					this.FaceTo(true);
    					this.SetBaseAnima("被攻击");
    				}
    				else
    				{
    					this.FaceTo(false);
    					this.SetBaseAnima("被攻击");
    				}
    			}
    			i=0;k=0;
    			if(this.iStatus[18]>0)//疯狂状态
    			{
    				i=XDefine$1.GetRand(-2,2);
    				k=XDefine$1.GetRand(-2,2);
    			}
    //			if(this.sFaceTo=="_左上")
    //			{
    //				if(this.iWeapTid>0)DrawBuffer.gi().DrawAnima_aa(this.iY-1, this.xani, this.iX+i, this.iY+k, this.aa_weapon);
    //			}

    			DrawBuffer.gi().DrawAnimaEx(this.iY, this.iX+i, this.iY+k, this.aa_body,this.iStatus[38]>0?50:101,1,1,0,0,0);//隐身
    			if(this.iType==0 || (this.iType==2 && this.iSpecialType==1))//人形
    			{//染色
    //				GmPlay.sop("dc");
    				this.DrawColor(this.iRace_Sex,this.aa_body.iFrame,this.iY+1, this.iX+i, this.iY+k,0);
    				if(this.iWeapTid>0)DrawBuffer.gi().DrawAnima_aa(this.iY+2, this.xani, this.iX+i, this.iY+k, this.aa_weapon);
    			}

    //			if(this.sFaceTo!="_左上")
    			{
    //				if(this.iWeapTid>0)DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX+i, this.iY+k, this.aa_weapon);
    			}
    			
    			if(!this.bActed)
    			{//没出手,准备中
    				if(this.iActDelay%2==0)this.NextFrame();
    //				DrawMode.frame_type1(String name,int x,int y,int w,int bw);
    			}
    			else this.NextFrame();
    			this.iActDelay++;
    			
    			if(this.bMe)
    			{
    				GmMe$1.me.DrawPopo(this.iX, this.iY+10);
    			}
    			else if(this.nr!=null)
    			{
    				if(this.nr.sName==this.sName)this.nr.DrawPopo(this.iX, this.iY+10);
    				else this.nr=null;
    			}
    			
    			this.FightPopo(this.iX,this.iY+10,this.xani.iAnimaY(this.aa_body)-30);
    		}

    		var offx,offy;
    		this.rotajd+=0.1;
    		//状态
    		for(i=0;i<FightMember.iMaxStatusCount;i++)
    		{
    			if(this.iStatus[i]>0)
    			{
    				switch(i)
    				{
    				case 0://+物攻
    				case 1://+物防
    				case 2://+法攻
    				case 3://+法防
    				case 4://+速度
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_ui.InitAnimaWithName("祝福标记"+this.sSkillFaceTo, null);
    					
    					this.aa_status[i].iFrame= i;
    					if(this.iPos<20)DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX+30, this.iY-90, this.aa_status[i]);
    					else DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX-30, this.iY-90, this.aa_status[i]);
    					break;
    				case 5://狂暴诀
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[4].InitAnimaWithName("狂暴_持续", null);
    					DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani,this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 6://定心诀
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[4].InitAnimaWithName("定心诀_持续", null);
    					DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 7://魔甲术
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[4].InitAnimaWithName("魔甲术"+this.sSkillFaceTo, null);
    					if(this.sSkillFaceTo=="_左")DrawBuffer.gi().DrawAnima_aa(this.iY-3, this.xani,this.iX, this.iY, this.aa_status[i]);
    					else DrawBuffer.gi().DrawAnima_aa(this.iY+3,this.xani ,this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 8://壁垒
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[4].InitAnimaWithName("壁垒_持续", null);
    					DrawBuffer.gi().DrawAnimaEx(this.iY+1, this.iX, this.iY, this.aa_status[i], 101, 2, 2, 0, -2, -2);
    					this.aa_status[i].NextFrame();
    					break;
    				case 10://+物攻
    				case 11://+物防
    				case 12://+法攻
    				case 13://+法防
    				case 14://+速度
    				case 15://休息标记
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_ui.InitAnimaWithName("诅咒标记"+this.sSkillFaceTo, null);
    					
    					this.aa_status[i].iFrame= ( i-10);
    					if(this.iPos<20)DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX+30, this.iY-90, this.aa_status[i]);
    					else DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX-30, this.iY-90, this.aa_status[i]);
    					break;
    				case 20://陷阱
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[2].InitAnimaWithName("陷阱_持续", null);
    					DrawBuffer.gi().DrawAnimaEx(this.iY-2, this.iX, this.iY, this.aa_status[i],101,2,2,0,-2, -2);
    					this.aa_status[i].NextFrame();
    					break;
    				case 21://火牢
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[5].InitAnimaWithName("火牢_持续", null);
    					DrawBuffer.gi().DrawAnimaEx(this.iY-2,  this.iX, this.iY, this.aa_status[i],101,1,1,0,0,0);
    					this.aa_status[i].NextFrame();
    					break;
    				case 22://飞钳术
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[6].InitAnimaWithName("飞箝术_持续", null);
    					DrawBuffer.gi().DrawAnima_aa(this.iY-1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 23://仙绫缚
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[8].InitAnimaWithName("仙绫缚_持续", null);
    					DrawBuffer.gi().DrawAnima_aa(this.iY-1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 24://眩晕
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skill.InitAnimaWithName("眩晕"+this.sSkillFaceTo, null);
    					DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 25://流沙
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[11].InitAnimaWithName("流沙_持续", null);
    					//DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					DrawBuffer.gi().DrawAnimaEx(this.iY+1, this.iX, this.iY, this.aa_status[i], 101, 2, 2, 0, -2, -2);
    					this.aa_status[i].NextFrame();
    					break;
    				case 27://巫毒
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[11].InitAnimaWithName("巫毒_持续", null);
    					//DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					DrawBuffer.gi().DrawAnimaEx(this.iY+1, this.iX, this.iY, this.aa_status[i], 101, 2, 2, 0, -2, -2);
    					this.aa_status[i].NextFrame();
    					break;
    				case 28://心如止水
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[12].InitAnimaWithName("心如止水"+this.sSkillFaceTo, null);
    					DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 29://幽冥鬼眼
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[12].InitAnimaWithName("幽冥鬼眼"+this.sSkillFaceTo, null);
    					DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 30://火甲术
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[5].InitAnimaWithName("火甲术"+this.sSkillFaceTo, null);
    					if(this.sSkillFaceTo=="_左")DrawBuffer.gi().DrawAnimaEx(this.iY-3,  this.iX, this.iY, this.aa_status[i],101,1,1,0,0,0);
    					else DrawBuffer.gi().DrawAnimaEx(this.iY+3,  this.iX, this.iY, this.aa_status[i],101,1,1,0,0,0);
    					this.aa_status[i].NextFrame();
    					break;
    				case 31://火灵诀
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[5].InitAnimaWithName("火灵诀_持续", null);
    					DrawBuffer.gi().DrawAnimaEx(this.iY+2, this.iX, this.iY, this.aa_status[i],101,1,1,0,0,0);
    					this.aa_status[i].NextFrame();
    					break;
    				case 32://凝神诀
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[6].InitAnimaWithName("凝神诀"+this.sSkillFaceTo, null);
    					DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 34://五行甲
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[9].InitAnimaWithName("五行甲"+this.sSkillFaceTo, null);
    					DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 35://定天弓
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[8].InitAnimaWithName("定天弓"+this.sSkillFaceTo, null);
    					if(this.sSkillFaceTo=="_左")DrawBuffer.gi().DrawAnima_aa(this.iY-2, this.xani, this.iX, this.iY, this.aa_status[i]);
    					else DrawBuffer.gi().DrawAnima_aa(this.iY+2, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 36://灵动九天
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[8].InitAnimaWithName("灵动九天_持续"+this.sSkillFaceTo, null);
    					if(this.sSkillFaceTo=="_左")DrawBuffer.gi().DrawAnima_aa(this.iY+3,this.xani, this.iX, this.iY, this.aa_status[i]);
    					else DrawBuffer.gi().DrawAnima_aa(this.iY-3,this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 37://凝神聚气
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[1].InitAnimaWithName("凝神聚气_持续", null);
    					offx= (Math.cos(this.rotajd)*60);
    					offy= (Math.sin(this.rotajd)*30);
    					DrawBuffer.gi().DrawAnima_aa(this.iY+offy, this.xani, this.iX+offx, this.iY+offy, this.aa_status[i]);
    					offx= (Math.cos(this.rotajd+XDefine$1.PI*2/3)*60);
    					offy= (Math.sin(this.rotajd+XDefine$1.PI*2/3)*30);
    					DrawBuffer.gi().DrawAnima_aa(this.iY+offy, this.xani, this.iX+offx, this.iY+offy, this.aa_status[i]);
    					offx= (Math.cos(this.rotajd+XDefine$1.PI*4/3)*60);
    					offy= (Math.sin(this.rotajd+XDefine$1.PI*4/3)*30);
    					DrawBuffer.gi().DrawAnima_aa(this.iY+offy, this.xani, this.iX+offx, this.iY+offy, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 39://天魔甲
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[12].InitAnimaWithName("天魔甲"+this.sSkillFaceTo, null);
    					DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 40://迷雾
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[2].InitAnimaWithName("迷雾_左", null);
    					if(this.iPos==5)m=0;
    					else m=2;
    					for(j=m;j<m+2;j++)
    					{
    						for(k=0;k<5;k++)
    						{
    							DrawBuffer.gi().DrawAnimaEx(GmConfig$1.SCRH, XFight.gi().fat[j][k].iOx, XFight.gi().fat[j][k].iOy-100, this.aa_status[i],101,3,3,0,-2, -2);
    						}
    					}
    					//DrawBuffer.gi().DrawAnimaEx(GmConfig.SCRH, this.iX, this.iY, this.aa_status[i],101,1,1,0,0,0);
    					this.aa_status[i].NextFrame();
    					break;
    				case 41://兵诡
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[2].InitAnimaWithName("兵诡_左", null);
    					if(this.iPos==5)m=0;
    					else m=2;
    					j=(XFight.gi().fat[m][0].iOx+XFight.gi().fat[m][1].iOx+XFight.gi().fat[m+1][0].iOx+XFight.gi().fat[m+1][1].iOx)/4;
    					k=(XFight.gi().fat[m][0].iOy+XFight.gi().fat[m][1].iOy+XFight.gi().fat[m+1][0].iOy+XFight.gi().fat[m+1][1].iOy)/4;
    					DrawBuffer.gi().DrawAnimaEx(k,j,k, this.aa_status[i],101,2,2,0,-2, -2);
    					j=(XFight.gi().fat[m][0].iOx+XFight.gi().fat[m][2].iOx+XFight.gi().fat[m+1][0].iOx+XFight.gi().fat[m+1][2].iOx)/4;
    					k=(XFight.gi().fat[m][0].iOy+XFight.gi().fat[m][2].iOy+XFight.gi().fat[m+1][0].iOy+XFight.gi().fat[m+1][2].iOy)/4;
    					DrawBuffer.gi().DrawAnimaEx(k,j,k, this.aa_status[i],101,2,2,0,-2, -2);
    					this.aa_status[i].NextFrame();
    					break;
    				case 42://天阵
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[9].InitAnimaWithName("天阵"+this.sSkillFaceTo, null);
    					DrawBuffer.gi().DrawAnimaEx(1, this.iX, this.iY, this.aa_status[i], 101, 2, 2, 0, -2, -2);
    //					DrawBuffer.gi().DrawAnima_aa(1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 43://地阵
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[9].InitAnimaWithName("地阵"+this.sSkillFaceTo, null);
    					DrawBuffer.gi().DrawAnimaEx(1, this.iX, this.iY, this.aa_status[i], 101, 2, 2, 0, -2, -2);
    					//DrawBuffer.gi().DrawAnima_aa(0, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 44://神灵护佑
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[12].InitAnimaWithName("神灵护佑"+this.sSkillFaceTo, null);
    					//DrawBuffer.gi().DrawAnima_aa(0, this.xani, this.iX, this.iY, this.aa_status[i]);
    					DrawBuffer.gi().DrawAnimaEx(0, this.iX, this.iY, this.aa_status[i], 101, 2, 2, 0, -2, -2);
    					this.aa_status[i].NextFrame();
    					break;
    				case 18://疯狂状态
    					break;
    				case 19://奇谋命中
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[2].InitAnimaWithName("奇谋_持续", null);
    					DrawBuffer.gi().DrawAnimaEx(this.iY+1, this.iX, this.iY, this.aa_status[i], 101, 2, 2, 0, -2, -2);
    					this.aa_status[i].NextFrame();
    					break;
    				case 17://宠物11-撕裂
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[11].InitAnimaWithName("撕裂"+this.sSkillFaceTo, null);
    					DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 33://sc7-灵智术
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[7].InitAnimaWithName("灵智术"+this.sSkillFaceTo, null);
    					DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				case 50://仙甲术
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[7].InitAnimaWithName("仙甲术"+this.sSkillFaceTo, null);
    					if(this.sSkillFaceTo=="_左")DrawBuffer.gi().DrawAnima_aa(this.iY-3, this.xani,this.iX, this.iY, this.aa_status[i]);
    					else DrawBuffer.gi().DrawAnima_aa(this.iY+3,this.xani ,this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    					
    				case 100://五行灵体效果
    				case 101:
    				case 102:
    				case 103:
    				case 104:
    					if(this.aa_status[i]==null)this.aa_status[i]=GmPlay$1.xani_skills[0].InitAnimaWithName("五行灵体"+(i-100), null);
    					DrawBuffer.gi().DrawAnimaEx(this.iY+1, this.iX, this.iY, this.aa_status[i], 101, 2, 2, 0, -2, -2);
    					//DrawBuffer.gi().DrawAnima_aa(this.iY+1, this.xani, this.iX, this.iY, this.aa_status[i]);
    					this.aa_status[i].NextFrame();
    					break;
    				}
    			}
    		}
    	}
    }

    FightMember.iMaxStatusCount=200;

    class LearnSkill extends BaseClass{

    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=900;
    		this.iH=620;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		/////////////////////////////////////////////////////////////////////////////////////////////////
    		
    		this.iMainSkillId=new Int32Array(LearnSkill.MAXSKILLCOUNT);//
    		this.btn_main=new Array(LearnSkill.MAXSKILLCOUNT);//
    		for(i=0;i<LearnSkill.MAXSKILLCOUNT;i++)
    		{
    			this.btn_main[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_main[i].bSingleButton=true;
    		}
    //		this.btn_main[0].Move(this.iX+90, this.iY+10, 60, 60);
    //		this.btn_main[1].Move(this.iX+10, this.iY+30, 60, 60);
    //		this.btn_main[2].Move(this.iX+120-65, this.iY+100, 60, 60);
    //		this.btn_main[3].Move(this.iX+120+5, this.iY+100, 60, 60);
    //		this.btn_main[4].Move(this.iX+170, this.iY+30, 60, 60);

    		this.iUseSkillId=new Int32Array(LearnSkill.MAXSKILLCOUNT);//
    		this.btn_use=new Array(LearnSkill.MAXSKILLCOUNT);//
    		for(i=0;i<LearnSkill.MAXSKILLCOUNT;i++)
    		{
    			this.btn_use[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_use[i].bSingleButton=true;
    		}

    		this.iMainPoint=-1;
    		this.iUsePoint=-1;
    		this.InitSkill();
    //		this.btn_learn.Move(this.iX+this.iW-80-5-20, this.iY+this.iH-50-5-20, 70, 40);
    		this.btn_learn=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_learn.InitButton("按钮1_110");
    		this.btn_learn.Move(this.iX+this.iW-155, this.iY+this.iH-100, 110, 52);
    		this.btn_learn.sName="学  习";
    	}
    	InitSkill()
    	{
    		var i,j,k;
    		k=1;
    		for(i=0;i<GmPlay$1.de_skill.iDataCount;i++)
    		{
    			j=GmPlay$1.de_skill.intValue(GmPlay$1.de_skill.datas[i].iDid, -1, 1);
    			if(j==0)
    			{//主技能A
    				j=GmPlay$1.de_skill.intValue(GmPlay$1.de_skill.datas[i].iDid, -1, 2);
    				if(j==GmMe$1.me.rbs.iSchoolId)
    				{//门派对应
    					this.iMainSkillId[0]=GmPlay$1.de_skill.datas[i].iDid;
    				}
    			}
    			else if(j==1)
    			{//主技能B
    				j=GmPlay$1.de_skill.intValue(GmPlay$1.de_skill.datas[i].iDid, -1, 2);
    				if(j==GmMe$1.me.rbs.iSchoolId)
    				{//门派对应
    					this.iMainSkillId[k]=GmPlay$1.de_skill.datas[i].iDid;
    					k++;
    				}
    			}
    		}
    	}
    	Draw()
    	{
    		var i,j,k;
    		var offx,offy;
    		var sid,lev;
    		var dx,dy;
    //		DrawMode.Frame2_MD(this.iX, this.iY, this.iW, this.iH);
    //		DrawMode.ui3_DefineFrame(this.iX, this.iY, this.iW, this.iH);
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		
    		DrawMode$1.new_framein(this.iX+25, this.iY+25, 270, 570);
    		for(i=0;i<LearnSkill.MAXSKILLCOUNT;i++)
    		{
    			offx=this.iX+25+20;
    			offy=this.iY+25+20+i*90;
    			this.btn_main[i].Move(offx,offy, 230, 80);
    			if(this.iMainPoint==i)GmPlay$1.xani_nui2.DrawAnima(offx,offy, "选择主技能",1);
    			else GmPlay$1.xani_nui2.DrawAnima(offx,offy, "选择主技能",0);
    //			this.btn_main[i].Draw();
    			GmPlay$1.xani_nicon.DrawAnima_aa(offx,offy, GmPlay$1.de_skill.strValue(GameData$1.iSchoolSkillId[GmMe$1.me.rbs.iSchoolId][i], 0, 5), 0);//技能图标
    			this.pm3f.DrawTextEx(offx+95,offy+25, GmPlay$1.de_skill.strValue(GameData$1.iSchoolSkillId[GmMe$1.me.rbs.iSchoolId][i], -1, 6), 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    			this.pm3f.DrawTextEx(offx+95, offy+60, GmMe$1.me.rbs.iSchoolSkill[i]+"级", 0xffffffff, 20, 101, 1, 1, 0, 0, -2);
    //			if(this.iMainPoint==i)
    //			{
    //				this.pm3f.DrawTextEx(this.iX+20+60, this.iY+20+i*60+8, GmPlay.de_skill.strValue(GameData.iSchoolSkillId[GmMe.me.rbs.iSchoolId][i], -1, 6), 0xffffffff, 25, 101, 1, 1, 0, 0, 0);
    //				this.pm3f.DrawTextEx(this.iX+20+60, this.iY+20+i*60+35, "Lv."+GmMe.me.rbs.iSchoolSkill[i], 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    //			}
    //			else
    //			{
    //				this.pm3f.DrawTextEx(this.iX+20+60, this.iY+20+i*60+8, GmPlay.de_skill.strValue(GameData.iSchoolSkillId[GmMe.me.rbs.iSchoolId][i], -1, 6), 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    //				this.pm3f.DrawTextEx(this.iX+20+60, this.iY+20+i*60+35, "Lv."+GmMe.me.rbs.iSchoolSkill[i], 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    //			}
    		}
    		dx=this.iX+25+270+15+15;
    		dy=this.iY+25+270+7+15;
    		GmPlay$1.xani_nui2.DrawAnima(dx,dy, "技能说明框",0);
    		// M3DFast.gi().FillRect_2D(dx,dy, dx+535, dy+110, 0xffff0000);

    		offx=this.iX+25+270+15;
    		offy=this.iY+25;
    		DrawMode$1.new_framein(offx,offy, 565, 570);
    		M3DFast$1.gi().FillRect_2D(offx+15,offy+15, offx+550, dy-15, 0xff649ea8);
    		// GmPlay.xani_nui2.DrawAnima(offx+15,offy+15, "子技能大框",0);
    		this.iUseSkillCount=0;
    		if(this.iMainPoint>=0)
    		{
    			sid=GameData$1.iSchoolSkillId[GmMe$1.me.rbs.iSchoolId][this.iMainPoint];
    			lev=GmMe$1.me.rbs.iSchoolSkill[this.iMainPoint];
    			
    			if(this.iUsePoint==-1)
    			{
    				M3DFast$1.gi().DrawText_2(dx+5, dy+18, GmPlay$1.de_skill.strValue(sid, 0, 6), 0xff3de1e5, 28, 101, 1, 1, 0, 0, -2, 4, 0xff003e57);

    				k=GmPlay$1.de_skill.intValue(sid, 0, 7);
    				if(k==1)M3DFast$1.gi().DrawTextEx(dx+120, dy+18, "战斗中使用", 0xff3de1e5, 24, 101, 1, 1, 0, 0, -2);
    				else if(k==0)M3DFast$1.gi().DrawTextEx(dx+120, dy+18, "漫游中使用", 0xff3de1e5, 24, 101, 1, 1, 0, 0, -2);
    				else if(k==3)M3DFast$1.gi().DrawTextEx(dx+120, dy+18, "被动技能", 0xff3de1e5, 24, 101, 1, 1, 0, 0, -2);
    				
    				FormatString.gi().Format(GmPlay$1.de_skill.strValue(sid, 0, 3), 514, 20);
    				FormatString.gi().Draw(dx+5, dy+38);
    			}
    			for(i=0;i<5;i++)
    			{//包含子技能
    				j=GmPlay$1.de_skill.intValue(sid, i, 4);
    				if(j==-1)break;
    				this.iUseSkillId[i]=j;
    				offx=this.iX+25+270+15+15+7;
    				offy=this.iY+25+15+7+i*84;
    				if(this.iUsePoint==i)
    				{
    					GmPlay$1.xani_nui2.DrawAnima(offx, offy, "选择子技能",0);

    					M3DFast$1.gi().DrawText_2(dx+5, dy+18, GmPlay$1.de_skill.strValue(j, 0, 6), 0xff3de1e5, 28, 101, 1, 1, 0, 0, -2, 4, 0xff003e57);

    					k=GmPlay$1.de_skill.intValue(j, 0, 7);
    					if(k==1)M3DFast$1.gi().DrawTextEx(dx+120, dy+18, "战斗中使用", 0xff3de1e5, 24, 101, 1, 1, 0, 0, -2);
    					else if(k==0)M3DFast$1.gi().DrawTextEx(dx+120, dy+18, "漫游中使用", 0xff3de1e5, 24, 101, 1, 1, 0, 0, -2);
    					else if(k==3)M3DFast$1.gi().DrawTextEx(dx+120, dy+18, "被动技能", 0xff3de1e5, 24, 101, 1, 1, 0, 0, -2);
    					
    					FormatString.gi().Format(GmPlay$1.de_skill.strValue(j, 0, 3), 514, 20);
    					FormatString.gi().Draw(dx+5, dy+38);
    				}
    				else GmPlay$1.xani_nui2.DrawAnima(offx, offy, "选择子技能",1);
    				this.btn_use[i].Move(offx,offy,520,84);
    //				this.btn_use[i].Draw();
    				GmPlay$1.xani_nicon.DrawAnima_aa(offx+2,offy+2, GmPlay$1.de_skill.strValue(j, 0, 5), 0);//技能图标

    				this.pm3f.DrawTextEx(offx+95,offy+25, GmPlay$1.de_skill.strValue(j, -1, 6), 0xffffffff, 25, 101, 1, 1, 0, 0, -2);//名称
    				k=GmPlay$1.de_skill.intValue(j, -1, 9);
    				this.pm3f.DrawTextEx(offx+95,offy+60, "要求"+GmPlay$1.de_skill.strValue(GmPlay$1.de_skill.intValue(j, -1, 8), -1, 6)+">="+k+"级", lev>=k?0xff00ff00:0xffff0000, 20, 101, 1, 1, 0, 0, -2);
    				
    //				{
    //					MyAttFrame.Skill_Detail(j, this.btn_use[i].iX, this.btn_use[i].iY, -1);
    //				}
    			}
    			this.iUseSkillCount=i;
    			
    			offx=this.iX+25+270+15+15;
    			offy=this.iY+25+270+7+110+7+18;
    			GmPlay$1.xani_nui2.DrawAnima(offx, offy, "提示1",2);
    			M3DFast$1.gi().DrawTextEx(offx+110/2, offy+32/2, "当前经验", 0xffffffff, 24, 101, 1, 1, 0, -2,-2);
    			GmPlay$1.xani_nui2.DrawAnima(offx+110, offy, "提示2",0);
    			M3DFast$1.gi().DrawTextEx(offx+110+120/2, offy+32/2, ""+GmMe$1.me.rbs.iExp, 0xffffffff, 24, 101, 1, 1, 0, -2,-2);
    			
    			offy+=40;
    			GmPlay$1.xani_nui2.DrawAnima(offx, offy, "提示1",2);
    			M3DFast$1.gi().DrawTextEx(offx+110/2, offy+32/2, "当前铜币", 0xffffffff, 24, 101, 1, 1, 0, -2,-2);
    			GmPlay$1.xani_nui2.DrawAnima(offx+110, offy, "提示2",0);
    			M3DFast$1.gi().DrawTextEx(offx+110+120/2, offy+32/2, ""+GmMe$1.me.rbs.iMoney, 0xffffffff, 24, 101, 1, 1, 0, -2,-2);
    			
    			offy+=40;
    			GmPlay$1.xani_nui2.DrawAnima(offx, offy, "提示1",2);
    			M3DFast$1.gi().DrawTextEx(offx+110/2, offy+32/2, "绑铜", 0xffffffff, 24, 101, 1, 1, 0, -2,-2);
    			GmPlay$1.xani_nui2.DrawAnima(offx+110, offy, "提示2",0);
    			M3DFast$1.gi().DrawTextEx(offx+110+120/2, offy+32/2, ""+GmMe$1.me.rbs.iReserve, 0xffffffff, 24, 101, 1, 1, 0, -2,-2);
    			
    			offx=this.iX+25+270+15+15+304;
    			offy=this.iY+25+270+7+110+7+18;
    			GmPlay$1.xani_nui2.DrawAnima(offx, offy, "提示1",2);
    			M3DFast$1.gi().DrawTextEx(offx+110/2, offy+32/2, "所需经验", 0xffffffff, 24, 101, 1, 1, 0, -2,-2);
    			GmPlay$1.xani_nui2.DrawAnima(offx+110, offy, "提示2",0);
    			M3DFast$1.gi().DrawTextEx(offx+110+120/2, offy+32/2, ""+parseInt(GameData$1.iUpgradeExp[lev]/6), 0xffffffff, 24, 101, 1, 1, 0, -2,-2);
    			
    			offy+=40;
    			GmPlay$1.xani_nui2.DrawAnima(offx, offy, "提示1",2);
    			M3DFast$1.gi().DrawTextEx(offx+110/2, offy+32/2, "所需铜币", 0xffffffff, 24, 101, 1, 1, 0, -2,-2);
    			GmPlay$1.xani_nui2.DrawAnima(offx+110, offy, "提示2",0);
    			M3DFast$1.gi().DrawTextEx(offx+110+120/2, offy+32/2, ""+parseInt(GameData$1.iUpgradeMoney[lev]/18), 0xffffffff, 24, 101, 1, 1, 0, -2,-2);
    			
    //			DrawMode.Data1_BR(this.iX+220+10, this.iY+170, "花费经验",""+GameData.iUpgradeExp[lev]/6, 90, 140);
    //			DrawMode.Data1_BR(this.iX+220+10, this.iY+195, "当前经验",""+GmMe.me.rbs.iExp, 90, 140);
    //
    //			
    //			DrawMode.Data1_BR(this.iX+220+10, this.iY+240, "花费金钱",""+GameData.iUpgradeMoney[lev]/18, 90, 140);
    //			DrawMode.Data1_BR(this.iX+220+10, this.iY+265, "当前金钱",""+GmMe.me.rbs.iMoney, 90, 140);
    //			DrawMode.Data1_BR(this.iX+220+10, this.iY+290, "绑铜",""+GmMe.me.rbs.iReserve, 90, 140);
    			
    			this.btn_learn.Draw();
    			
    //			for(i=0;i<LearnSkill.MAXSKILLCOUNT;i++)
    //			{
    //				if(this.btn_main[i].bMouseDown)
    //				{
    //					MyAttFrame.Skill_Detail(GameData.iSchoolSkillId[GmMe.me.rbs.iSchoolId][i], this.btn_main[i].iX, this.btn_main[i].iY, GmMe.me.rbs.iSchoolSkill[i]);
    //				}
    //			}
    		}

    		this.btn_close.Draw();

    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		///////////////////////////////////
    		var i;
    		for(i=0;i<6;i++)
    		{
    			if(this.btn_main[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_main[i].bMouseDown)
    //				if(this.btn_main[i].bCheck())
    				{
    					this.iMainPoint=i;
    					this.iUsePoint=-1;
    				}
    			}
    		}
    		for(i=0;i<this.iUseSkillCount;i++)
    		{
    			if(this.btn_use[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_use[i].bMouseDown)
    //				if(this.btn_use[i].bCheck())
    				{
    					this.iUsePoint=i;
    				}
    			}
    		}
    		if(this.iMainPoint>=0)
    		{
    			if(this.btn_learn.ProcTouch(msg, x, y))
    			{
    				if(this.btn_learn.bCheck())
    				{
    					if(GmMe$1.me.rbs.iSchoolSkill[this.iMainPoint]>=GmMe$1.me.rbs.iLev+10)
    					{
    						EasyMessage.easymsg.AddMessage("不能超过人物等级10级");
    					}
    					else if(this.iMainPoint>0 && GmMe$1.me.rbs.iSchoolSkill[this.iMainPoint]>=GmMe$1.me.rbs.iSchoolSkill[0])
    					{//
    						EasyMessage.easymsg.AddMessage("不能超过主技能等级");
    					}
    					else if(parseInt(GameData$1.iUpgradeExp[GmMe$1.me.rbs.iSchoolSkill[this.iMainPoint]]/6)>GmMe$1.me.rbs.iExp)
    					{
    						EasyMessage.easymsg.AddMessage("当前经验不足");
    					}
    					else if(parseInt(GameData$1.iUpgradeMoney[GmMe$1.me.rbs.iSchoolSkill[this.iMainPoint]]/18)>GmMe$1.me.rbs.iMoney+GmMe$1.me.rbs.iReserve)
    					{
    						EasyMessage.easymsg.AddMessage("当前铜币不足");
    					}
    					else
    					{//升级
    						GmProtocol$1.gi().s_learnschoolskill(GameData$1.iSchoolSkillId[GmMe$1.me.rbs.iSchoolId][this.iMainPoint],this.iMainPoint);
    						GmMe$1.me.rbs.iExp-=parseInt(GameData$1.iUpgradeExp[GmMe$1.me.rbs.iSchoolSkill[this.iMainPoint]]/6);
    						if(GmMe$1.me.rbs.iReserve>=parseInt(GameData$1.iUpgradeExp[GmMe$1.me.rbs.iSchoolSkill[this.iMainPoint]]/18))
    						{
    							GmMe$1.me.rbs.iReserve-=parseInt(GameData$1.iUpgradeExp[GmMe$1.me.rbs.iSchoolSkill[this.iMainPoint]]/18);
    						}
    						else
    						{
    							i=parseInt(GameData$1.iUpgradeExp[GmMe$1.me.rbs.iSchoolSkill[this.iMainPoint]]/18)-GmMe$1.me.rbs.iReserve;
    							GmMe$1.me.rbs.iReserve=0;
    							GmMe$1.me.rbs.iMoney-=i;
    						}
    						
    						GmMe$1.me.rbs.iSchoolSkill[this.iMainPoint]++;
    					}
    				}
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    LearnSkill.MAXSKILLCOUNT=6;

    class XFightRoleSkill {

    	constructor()
    	{
            this.MAXSKILLCOUNT=10;

    		this.iFightSkillId=new Int32Array(this.MAXSKILLCOUNT);//
    		this.btn_skills=new Array(this.MAXSKILLCOUNT);//
    		this.iW=20+130*3+80+20;
    		this.iH=345;
    		this.iX=GmConfig$1.SCRW-this.iW-20;
    		this.iY=GmConfig$1.SCRH-this.iH-20;
    	}
    	InitFightSkill()
    	{//初始化我可用的技能列表
    		this.iW=30+130*3+80+30;
    		this.iH=30+150*2;
    		this.iX=GmConfig$1.SCRW-this.iW-20;
    		this.iY=GmConfig$1.SCRH-this.iH-20;
    		this.btn_skills[0]=null;
    		var i,j,k,o,m,n;
    		for(i=0;i<this.MAXSKILLCOUNT;i++)
    		{
    			this.iFightSkillId[i]=-1;
    		}
    		this.iFightSkillCount=0;
    		if(GmMe$1.me.rbs.iLev<30)
    		{//没入门派，花拳绣腿
    			this.iFightSkillId[this.iFightSkillCount++]=1201;
    			this.iShowPoint=-1;
    		}
    		if(GmMe$1.me.rbs.iSchoolId==0)return;
    		for(i=0;i<LearnSkill.MAXSKILLCOUNT;i++)
    		{
    			j=GameData$1.iSchoolSkillId[GmMe$1.me.rbs.iSchoolId][i];
    			for(k=0;k<10;k++)
    			{
    				o=GmPlay$1.de_skill.intValue(j, k, 4);//得到子技能ID
    				if(o<=0)break;
    				m=GmPlay$1.de_skill.intValue(o, 0, 9);//对主技能等级要求
    				n=GmPlay$1.de_skill.intValue(o, 0, 7);//使用场景,0漫游，1战斗，2通用
    				if(GmMe$1.me.rbs.iSchoolSkill[i]>=m)o+=1000;//主技能等级达到，可使用
    //				if(n>=0)o+=n*1000;
    //				GmPlay.sop("j="+j+",o="+o+",p1="+p1+",p2="+p2+",GmMe.me.rbs.iSchoolSkill[i]="+GmMe.me.rbs.iSchoolSkill[i]+",m="+m);
    				if(n==0)continue;
    //				if(o<1000)continue;//主技能未达
    				this.iFightSkillId[this.iFightSkillCount++]=o;
    			}
    		}
    		i=GmMe$1.me.iFlag[33]%10;
    		if(XFight.gi().iFightType==XFight.FIGHTWITH_DARK && i>0)
    		{//无影手
    			this.iFightSkillId[this.iFightSkillCount++]=1203;
    		}
    //		i=GmMe.me.iFlag[33]/10%10;
    //		if(i>0)
    //		{//变化术
    //		}
    		this.iShowPoint=-1;
    	}
    	DrawFightSkill()
    	{
    		this.iW=30+130*3+80+30;
    		this.iH=30+150*2;
    		this.iX=GmConfig$1.SCRW-this.iW-20;
    		this.iY=GmConfig$1.SCRH-this.iH-20;
    		var i,c;
    		if(this.iFightSkillCount>0 && this.btn_skills[0]==null)
    		{
    			for(i=0;i<this.iFightSkillCount;i++)
    			{
    				this.btn_skills[i]=new XButtonEx2$1(GmPlay$1.xani_nicon);
    				this.btn_skills[i].InitButton(GmPlay$1.de_skill.strValue(this.iFightSkillId[i]%1000, 0, 5));
    				this.btn_skills[i].Move(this.iX+30+(i%4)*130, this.iY+30+parseInt(i/4)*150, 80, 80);
    			}
    		}
    		DrawMode$1.new_framepc(this.iX, this.iY, this.iW, this.iH);

    //		GmPlay.xani_nicon.DrawAnima_aa(x, y, GmPlay.de_skill.strValue(sid, 0, 5),0);
    		var idt=-1;
    		for(i=0;i<this.iFightSkillCount;i++)
    		{
    			GmPlay$1.xani_nicon.DrawAnimaEx((this.btn_skills[i].iX-((this.btn_skills[i].fScale-1)*80/2)), (this.btn_skills[i].iY-((this.btn_skills[i].fScale-1)*80/2)), "技能外框",0, 101, this.btn_skills[i].fScale, this.btn_skills[i].fScale, 0, 0, 0);
    //			GmPlay.xani_nicon.DrawAnima(this.btn_skills[i].iX, this.btn_skills[i].iY, "技能外框",0);
    			this.btn_skills[i].Draw();
    			if(this.btn_skills[i].bMouseDown)idt=i;
    			if(this.iFightSkillId[i]>1000)c=0xfffeeede;
    			else c=0xffff0000;
    			M3DFast$1.gi().DrawTextEx(this.btn_skills[i].iX+40,this.btn_skills[i].iY+80+15, GmPlay$1.de_skill.strValue(this.iFightSkillId[i]%1000, 0, 6), c, 25, 101, 1, 1, 0, -2, 0);
    //			if(this.iShowPoint==i)M3DFast.gi().FillRect_2D(this.iX, this.iY+i*60, this.iX+this.iW, this.iY+i*60+60, 0xffb0b0b0);

    //			M3DFast.gi().DrawTextEx(this.iX+70, this.iY+i*60+15, GmPlay.de_skill.strValue(this.iFightSkillId[i]%1000, 0, 6), c, 30, 101, 1, 1, 0, 0, 0);
    //			GmPlay.xani_skill.DrawAnima_aa(this.iX, this.iY+i*60, GmPlay.de_skill.strValue(this.iFightSkillId[i]%1000, 0, 5), 0);
    		}
    		if(idt>=0)
    		{
    			MyAttFrame.Skill_Detail(this.iFightSkillId[idt]%1000, this.btn_skills[idt].iX,this.btn_skills[idt].iY, -1);
    		}
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<this.iFightSkillCount;i++)
    		{
    			if(this.btn_skills[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_skills[i].bCheck())
    				{
    					this.iShowPoint=i;
    					if(this.iFightSkillId[i]<=1000)
    					{//不可使用
    						EasyMessage.easymsg.AddMessage("技能等级不足无法使用");
    					}
    					else
    					{
    						this.iUseSkillId=this.iFightSkillId[i]%1000;
    						this.iSelectTarget=GmPlay$1.de_skill.intValue(this.iUseSkillId, 0, 23);
    						this.btn_skills[i].SetNormal();
    						return true;
    					}
    				}
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX-20, this.iY-20, this.iW+40, this.iH+40))
    		{
    				this.iUseSkillId=-1;
    				return true;
    		}
    		return false;
    	}
    }

    XFightRoleSkill.xfs=new XFightRoleSkill();

    //特技
    class XFightSpecialSkill {

    	
    	constructor()
    	{
            this.MAXSKILLCOUNT=10;

    		this.iGoodsSkillId=new Int32Array(this.MAXSKILLCOUNT);////装备技能
    //		aa_goods=new Array(this.MAXSKILLCOUNT);//
    		this.btn_skills=new Array(this.MAXSKILLCOUNT);//
    	}
    	InitSpecialSkill()
    	{
    		var i,j,k;
    		for(i=0;i<this.MAXSKILLCOUNT;i++)
    		{
    			this.iGoodsSkillId[i]=-1;
    			this.btn_skills[i]=new XButtonEx2$1(GmPlay$1.xani_ngoods);
    		}
    		
    		this.iSkillCount=0;
    		for(i=0;i<6;i++)
    		{//看装备技能
    			if(MyGoods.gi().goods[1][i].iGid<=0)continue;
    			j=MyGoods.gi().goods[1][i].iAtts[4];
    			k=j&0x3ff;//技能ID
    			if(k<=0)continue;
    			this.btn_skills[this.iSkillCount].InitButton(GmPlay$1.de_goods.strValue(MyGoods.gi().goods[1][i].iTid, -1, 10));
    			this.iGoodsSkillId[this.iSkillCount++]=k;
    		}

    		this.iShowPoint=-1;
    		
    		this.iW=30+130*2+80+30;
    		if(this.iSkillCount>2)this.iH=30+150*2;
    		else this.iH=30+150*1;
    		this.iX=GmConfig$1.SCRW-this.iW-20;
    		this.iY=GmConfig$1.SCRH-this.iH-20;
    		
    //		for(i=0;i<this.iSkillCount;i++)
    //		{
    //			this.btn_skills[i].Move(this.iX+30+(i%3)*130, this.iY+30+(i/3)*150, 80, 80);
    //		}
    	}
    	DrawSpecialSkill()
    	{
    		this.iW=30+130*2+80+30;
    		if(this.iSkillCount>2)this.iH=30+150*2;
    		else this.iH=30+150*1;
    		this.iX=GmConfig$1.SCRW-this.iW-20;
    		this.iY=GmConfig$1.SCRH-this.iH-20;
    		var i,j,c;
    		
    		DrawMode$1.new_framepc(this.iX, this.iY, this.iW, this.iH);
    		
    		for(i=0;i<this.iSkillCount;i++)
    		{
    			this.btn_skills[i].Move(this.iX+30+(i%3)*130, this.iY+30+(i/3)*150, 80, 80);
    			GmPlay$1.xani_nicon.DrawAnimaEx((this.btn_skills[i].iX-((this.btn_skills[i].fScale-1)*80/2)), (this.btn_skills[i].iY-((this.btn_skills[i].fScale-1)*80/2)), "技能外框",0, 101, this.btn_skills[i].fScale, this.btn_skills[i].fScale, 0, 0, 0);
    //			GmPlay.xani_nicon.DrawAnima(this.btn_skills[i].iX, this.btn_skills[i].iY, "技能外框",0);
    			this.btn_skills[i].Draw();

    			j=GmPlay$1.de_skill.intValue(this.iGoodsSkillId[i], 0, 35);
    			if(MyGoods.gi().goods[1][4].iGid>0 && ((MyGoods.gi().goods[1][4].iAtts[4]>>10)&0x3ff)==267)j=j*8/10;
    			if(j<=GmMe$1.me.rbs.iAnger)c=0xfffeeede;
    			else c=0xffff0000;
    			
    			M3DFast$1.gi().DrawTextEx(this.btn_skills[i].iX+40,this.btn_skills[i].iY+80+15, GmPlay$1.de_skill.strValue(this.iGoodsSkillId[i], 0, 6), c, 22, 101, 1, 1, 0, -2, 0);
    			M3DFast$1.gi().DrawTextEx(this.btn_skills[i].iX+40,this.btn_skills[i].iY+80+15+24, "SP:"+j+"/"+GmMe$1.me.rbs.iAnger, c, 20, 101, 1, 1, 0, -2, 0);

    //			M3DFast.gi().DrawTextEx(this.iX+70, this.iY+i*60+6, GmPlay.de_skill.strValue(this.iGoodsSkillId[i], 0, 6), c, 30, 101, 1, 1, 0, 0, 0);
    //			M3DFast.gi().DrawTextEx(this.iX+70, this.iY+i*60+36, "消耗SP:"+j, 0xff0080ff, 16, 101, 1, 1, 0, 0, 0);//GmPlay.de_skill.strValue(this.iGoodsSkillId[i], 0, 35)
    //			//GmPlay.xani_ui3.InitAnimaWithName("背包格子背景", null);
    //			GmPlay.xani_ui3.DrawAnima(this.iX, this.iY+i*60, "背包格子背景",0);
    //			aa_goods[i].Draw(this.iX, this.iY+i*60);
    //			GmPlay.xani_skill.DrawAnima_aa(this.iX, this.iY+i*60, GmPlay.de_skill.strValue(this.iGoodsSkillId[i], 0, 5), 0);
    		}
    		if(this.iShowPoint>=0 && this.iShowPoint<this.iSkillCount)
    		{
    			MyAttFrame.Skill_Detail(this.iGoodsSkillId[this.iShowPoint], this.iX, this.iY+this.iShowPoint*60+30, -1);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i,j;
    		for(i=0;i<this.iSkillCount;i++)
    		{
    			if(this.btn_skills[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_skills[i].bCheck())
    				{
    					this.btn_skills[i].SetNormal();
    					this.iShowPoint=i;
    					//看愤怒是否够
    					j=GmPlay$1.de_skill.intValue(this.iGoodsSkillId[i], 0, 35);
    					if(MyGoods.gi().goods[1][4].iGid>0 && ((MyGoods.gi().goods[1][4].iAtts[4]>>10)&0x3ff)==267)j=j*8/10;
    					if(j>GmMe$1.me.rbs.iAnger)
    					{//愤怒不足
    						EasyMessage.easymsg.AddMessage("怒气不足，可能使用失败");
    						//EasyMessage.easymsg.AddMessage("怒气不足无法使用");
    						this.iUseSkillId=this.iGoodsSkillId[i];
    						this.iSelectTarget=GmPlay$1.de_skill.intValue(this.iUseSkillId, 0, 36);
    						return true;
    					}
    					else
    					{
    						this.iUseSkillId=this.iGoodsSkillId[i];
    						this.iSelectTarget=GmPlay$1.de_skill.intValue(this.iUseSkillId, 0, 36);
    						return true;
    					}
    				}
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX-20, this.iY-20, this.iW+40, this.iH+40))
    		{
    				this.iUseSkillId=-1;
    				return true;
    		}
    		return false;
    	}
    }
    XFightSpecialSkill.xss=new XFightSpecialSkill();

    class _EFFECT
    {
    /*	public boolean bUseing;
    	public AnimaAction aa,aa1;
    	public int iX,iY;
    	public int iTX,iTY;
    	public int iTFrame;//到达目标剩余帧数
    	public int iRa;//飞刀旋转角度
    	public int iType;//0普通，1飞刀
    	public int iRate;//缩放比例，10正常
    	public int iSkillId;*/
    	constructor()
    	{
    		this.bUseing=false;
    		this.aa=new AnimaAction();
    		this.aa1=new AnimaAction();
    	}
    }
    class XFightEffect {

    	
    //	_EFFECT list_sky[ ];
    //	_EFFECT this.list_middle[ ];
    //	_EFFECT list_ground[ ];
    	
    	
    	constructor()
    	{
    		var i;
    //		list_sky=new Array(XFightEffect.MAXEFFECT);//
    //		for(i=0;i<XFightEffect.MAXEFFECT;i++)list_sky[i]=new _EFFECT();
    		
    		this.list_middle=new Array(XFightEffect.MAXEFFECT);//
    		for(i=0;i<XFightEffect.MAXEFFECT;i++)this.list_middle[i]=new _EFFECT();
    		
    //		list_ground=new Array(XFightEffect.MAXEFFECT);//
    //		for(i=0;i<XFightEffect.MAXEFFECT;i++)list_ground[i]=new _EFFECT();
    	}
    	AddDarts( x, y, tx, ty, type, frame)
    	{
    		var i;
    		for(i=0;i<XFightEffect.MAXEFFECT;i++)
    		{
    			if(!this.list_middle[i].bUseing)
    			{
    				this.list_middle[i].bUseing=true;
    				this.list_middle[i].iX=x;
    				this.list_middle[i].iY=y-60;
    				this.list_middle[i].iRate=10;
    				this.list_middle[i].iSkillId=type;//飞刀类型
    				this.list_middle[i].iType=1;//飞刀
    				this.list_middle[i].iTFrame=frame;
    				this.list_middle[i].iTX=tx;
    				this.list_middle[i].iTY=ty-60;
    				this.list_middle[i].iRa=XDefine$1.GetAngleXY(x, y,tx, ty);
    				if(this.list_middle[i].iRa<0)this.list_middle[i].iRa+=360;
    				//GmPlay.sop("jd==="+this.list_middle[i].iRa+"("+x+","+y+","+tx+","+ty+")");
    				switch(type)
    				{
    				case 0://载入飞刀动画
    					GmPlay$1.xani_skills[0].InitAnimaWithName("飞刀",this.list_middle[i].aa);
    					break;
    				case 1://
    				case 2:
    				case 3:
    				case 4:
    				case 5:
    					GmPlay$1.xani_skills[0].InitAnimaWithName("五行攻击"+type,this.list_middle[i].aa);
    					break;
    				case 6:
    					GmPlay$1.xani_skills[8].InitAnimaWithName("穿云箭",this.list_middle[i].aa);
    					break;
    				default:
    					GmPlay$1.xani_skills[0].InitAnimaWithName("飞刀",this.list_middle[i].aa);
    					break;
    				}
    				break;
    			}
    		}
    	}
    	AddEffect( x, y, effectid, rot)
    	{//位置，效果id,是否旋转
    		//根据效果id获得效果名称，是否翻转
    		var i;
    		if(effectid>=XFightEffect.EFFECTNAME.length)return;
    //		GmPlay.sop1("add effect  = "+effectid);
    		for(i=0;i<XFightEffect.MAXEFFECT;i++)
    		{
    			if(!this.list_middle[i].bUseing)
    			{
    				this.list_middle[i].bUseing=true;
    				this.list_middle[i].iX=x;
    				this.list_middle[i].iY=y;
    				this.list_middle[i].iRate=10;
    				this.list_middle[i].iSkillId=effectid;
    				this.list_middle[i].iType=0;
    				
    				switch(effectid)
    				{
    				case 9://迷雾
    				case 11://兵诡
    					break;
    				case 54://普通攻击
    				case 61://加血效果
    				case 62://加蓝效果
    					GmPlay$1.xani_skills[0].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid],this.list_middle[i].aa);
    					break;
    				case 0://浩然剑气--------------------------------------------------------------------------------
    				case 1://"无双剑法",//1
    				case 2://"幻影剑法",//2
    				case 57://幻影剑法2
    				case 3://"凝神聚气",//3
    				case 4://"虎啸",//4
    				case 5://"先发制人",//5
    					GmPlay$1.xani_skills[1].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"_右":"_左"),this.list_middle[i].aa);
    					this.list_middle[i].iRate=20;
    					break;
    				case 6://陷阱---------------------------------------------------------------------------------------
    				case 8://轮轴术
    				case 10://奇谋
    					GmPlay$1.xani_skills[2].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"_右":"_左"),this.list_middle[i].aa);
    					this.list_middle[i].iRate=20;
    					break;
    				case 7://烈焰阵
    					GmPlay$1.xani_skills[2].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"1_右":"1_左"),this.list_middle[i].aa);
    					GmPlay$1.xani_skills[2].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"2_右":"2_左"),this.list_middle[i].aa1);
    					this.list_middle[i].iRate=20;
    					break;
    				case 12://推宫过血-------------------------------------------------------------------------------
    				case 15://"气功",//15
    				case 16://"知己知彼",//16
    				case 17://"针灸",//17
    					GmPlay$1.xani_skills[3].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"_右":"_左"),this.list_middle[i].aa);
    					this.list_middle[i].iRate=20;
    					break;
    				case 13://起死回生
    				case 14://"练气化神",//14
    					GmPlay$1.xani_skills[3].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"1_右":"1_左"),this.list_middle[i].aa);
    					GmPlay$1.xani_skills[3].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"2_右":"2_左"),this.list_middle[i].aa1);
    					this.list_middle[i].iRate=20;
    					break;
    					
    				case 18://狂暴使用
    				case 19://连环刀
    				case 20://乱舞
    				case 21://定心诀
    				case 23://壁垒
    					GmPlay$1.xani_skills[4].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"_右":"_左"),this.list_middle[i].aa);
    					this.list_middle[i].iRate=20;
    					break;
    					
    				case 24://火流星
    					GmPlay$1.xani_skills[5].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"1_右":"1_左"),this.list_middle[i].aa);
    					GmPlay$1.xani_skills[5].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"2_右":"2_左"),this.list_middle[i].aa1);
    					this.list_middle[i].iRate=20;
    					break;

    				case 25://"毒火术",//17
    				case 26://火牢
    				case 27://炎爆术
    				case 28://火甲术
    				case 29://火灵决
    					GmPlay$1.xani_skills[5].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"_右":"_左"),this.list_middle[i].aa);
    					this.list_middle[i].iRate=20;
    					if(effectid==28)this.list_middle[i].iRate=10;
    					break;
    					
    				case 30://飞箝术
    				case 32://鬼谷刀法
    				case 33://散势法
    				case 34://清心咒
    				case 35://鬼符
    					GmPlay$1.xani_skills[6].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"_右":"_左"),this.list_middle[i].aa);
    					this.list_middle[i].iRate=20;
    					break;
    					
    				case 60://唤雨新
    					GmPlay$1.xani_skills[7].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"_右":"_左"),this.list_middle[i].aa);
    					this.list_middle[i].iRate=30;
    					break;
    				case 36://"呼风",//36
    				case 40://"天神助威",//40
    				case 41://"灵智术",//41
    					GmPlay$1.xani_skills[7].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"_右":"_左"),this.list_middle[i].aa);
    					this.list_middle[i].iRate=20;
    					break;
    				case 37://"唤雨",//37
    				case 38://"天雷封魔",//38
    				case 39://"仙甲术",//39
    					GmPlay$1.xani_skills[7].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"_右":"_左"),this.list_middle[i].aa);
    					break;
    					
    				case 42://天阵
    				case 43://地阵
    					break;
    				case 44://五行击
    				case 46://弧虚法
    				case 47://归元法
    					GmPlay$1.xani_skills[9].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"_右":"_左"),this.list_middle[i].aa);
    					this.list_middle[i].iRate=20;
    					break;
    					
    				case 48://穿云箭爆
    				case 50://驱魔符
    				case 51://天地同寿
    				case 52://灵动
    				case 53://仙绫缚
    					GmPlay$1.xani_skills[8].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"_右":"_左"),this.list_middle[i].aa);
    					this.list_middle[i].iRate=20;
    					break;
    					
    				case 56://生死决
    				case 63://奋力一击
    				case 64://烈火
    				case 65://水箭
    				case 66://风刃
    				case 67://流沙
    				case 68://巫毒
    				case 69://招魂
    					GmPlay$1.xani_skills[11].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"_右":"_左"),this.list_middle[i].aa);
    					this.list_middle[i].iRate=20;
    					break;
    				case 58://出场烟雾
    				case 59://五行攻击爆炸
    					GmPlay$1.xani_skills[0].InitAnimaWithName(XFightEffect.EFFECTNAME[effectid],this.list_middle[i].aa);
    					this.list_middle[i].iRate=20;
    					break;
    				default:
    					GmPlay$1.xani_skill.InitAnimaWithName(XFightEffect.EFFECTNAME[effectid]+(rot?"_右":"_左"),this.list_middle[i].aa);
    					break;
    				}
    				break;
    			}
    		}
    	}
    	AddEffect2( x, y, ext, en, rot)
    	{
    		var i;
    		for(i=0;i<XFightEffect.MAXEFFECT;i++)
    		{
    			if(!this.list_middle[i].bUseing)
    			{
    				this.list_middle[i].bUseing=true;
    				this.list_middle[i].iX=x;
    				this.list_middle[i].iY=y;
    				this.list_middle[i].iRate=ext%100;
    				GmPlay$1.xani_skills[parseInt(ext/100)].InitAnimaWithName(en+(rot?"_右":"_左"),this.list_middle[i].aa);
    				this.list_middle[i].iSkillId=-1;
    				this.list_middle[i].iType=0;
    				break;
    			}
    		}
    	}
    	/*0 other
    	 * 1~9 人物
    	 * 10 装备
    	 * 11 宠物
    	 * */
    	DrawGround()
    	{
    		var i;
    		//排序
    		for(i=0;i<XFightEffect.MAXEFFECT;i++)
    		{
    			if(this.list_middle[i].bUseing)
    			{
    				if(this.list_middle[i].iType==1)
    				{//飞刀飞行
    					DrawBuffer.gi().DrawAnimaEx(GmConfig$1.SCRH, this.list_middle[i].iX, this.list_middle[i].iY, this.list_middle[i].aa,101,0.1*this.list_middle[i].iRate, 0.1*this.list_middle[i].iRate,this.list_middle[i].iRa,-2,-2);
    					this.list_middle[i].iX=this.list_middle[i].iTX+(this.list_middle[i].iX-this.list_middle[i].iTX)*this.list_middle[i].iTFrame/(this.list_middle[i].iTFrame+1);
    					this.list_middle[i].iY=this.list_middle[i].iTY+(this.list_middle[i].iY-this.list_middle[i].iTY)*this.list_middle[i].iTFrame/(this.list_middle[i].iTFrame+1);
    					
    					if(this.list_middle[i].iTFrame<=0)
    					{
    						this.list_middle[i].bUseing=false;
    					}
    					else this.list_middle[i].iTFrame--;
    					this.list_middle[i].aa.NextFrame();
    					continue;
    				}
    //				GmPlay.sop("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa="+this.list_middle[i].iX+","+this.list_middle[i].iY);
    //				this.list_middle[i].aa.Draw(this.list_middle[i].iX, this.list_middle[i].iY);
    //				this.list_middle[i].aa.DrawEx(this.list_middle[i].iX, this.list_middle[i].iY, 101, 0.1f*this.list_middle[i].iRate, 0.1f*this.list_middle[i].iRate, 0, -1, -1);
    //				this.list_middle[i].aa.DrawEx(this.list_middle[i].iX, this.list_middle[i].iY, 101, 1,1, 0, 0, 0);
    				
    //				this.list_middle[i].aa.DrawEx(this.list_middle[i].iX, this.list_middle[i].iY, 101, 0.1f*this.list_middle[i].iRate, 0.1f*this.list_middle[i].iRate, 0, -1, -1);
    				if(this.list_middle[i].iSkillId==7 ||
    						this.list_middle[i].iSkillId==13 ||
    						this.list_middle[i].iSkillId==14 ||
    						this.list_middle[i].iSkillId==24)
    				{//0先地面，1天空
    					DrawBuffer.gi().DrawAnimaEx(this.list_middle[i].iY-1, this.list_middle[i].iX, this.list_middle[i].iY, this.list_middle[i].aa,101,0.1*this.list_middle[i].iRate, 0.1*this.list_middle[i].iRate,0,-2,-2);
    					DrawBuffer.gi().DrawAnimaEx(GmConfig$1.SCRH, this.list_middle[i].iX, this.list_middle[i].iY, this.list_middle[i].aa1,101,0.1*this.list_middle[i].iRate, 0.1*this.list_middle[i].iRate,0,-2,-2);
    					this.list_middle[i].aa1.NextFrame();
    				}
    				else
    				{
    					DrawBuffer.gi().DrawAnimaEx(GmConfig$1.SCRH, this.list_middle[i].iX, this.list_middle[i].iY, this.list_middle[i].aa,101,0.1*this.list_middle[i].iRate, 0.1*this.list_middle[i].iRate,0,-2,-2);
    				}
    				
    				if(this.list_middle[i].aa.NextFrame())
    				{
    					this.list_middle[i].bUseing=false;
    				}
    			}
    		}
    	}
    	DrawMiddle()
    	{
    	}
    	DrawSky()
    	{
    	}
    }

    XFightEffect.EFFECTNAME=["浩然剑气",//0
    "无双剑法",//1
    "幻影剑法1",//2
    "凝神聚气",//3
    "虎啸",//4
    "先发制人",//5

    "陷阱",//6
    "烈焰阵",//7
    "轮轴术",//8
    "迷雾",//9         不用，直接结果
    "奇谋",//10
    "兵诡",//11      不用，直接结果

    "推功过血",//12
    "起死回生",//13
    "练气化神",//14
    "气功",//15
    "知己知彼",//16
    "针灸",//17

    "狂暴前奏",//18
    "连环刀",//19
    "乱舞",//20乱舞
    "定心诀",//21
    "魔甲术",//22
    "壁垒",//23

    "火流星",//24
    "毒火术",//25
    "火牢",//26
    "炎爆术",//27
    "火甲术",//28
    "火灵诀",//29

    "飞箝术",//30
    "凝神诀",//31
    "鬼谷刀法",//32
    "散势法",//33
    "清心咒",//34
    "鬼符",//35

    "呼风",//36
    "唤雨",//37
    "天雷封魔",//38
    "仙甲术",//39
    "天神助威",//40
    "灵智术前奏",//41

    "天阵",//42
    "地阵",//43
    "五行击",//44
    "五行甲",//45
    "孤虚法",//46
    "归元法",//47

    "穿云箭爆",//48
    "定天弓",//49
    "驱魔符",//50
    "天地同寿",//51
    "灵动九天",//52
    "仙绫缚",//53

    "普通攻击",//54普通攻击
    "暴击",//55暴击

    "生死决",//56生死决

    "幻影剑法2",//57
    "出场烟雾",//58
    "五行攻击爆炸",//59

    "唤雨新",//60
    "加血效果",//61
    "加蓝效果",//62

    "奋力一击",//63
    "烈火",//64
    "水箭",//65
    "风刃",//66
    "流沙",//67
    "巫毒",//68
    "招魂",//69
    ];
    XFightEffect.MAXEFFECT=64;

    XFightEffect.fe=new XFightEffect();

    class NumberEffectOle
    {
    /*	public boolean bUseing;
    	public int iNumber;
    	public int iType;//0加血还是1减血(红/绿)
    	public int iX,iY;
    	public int iProc;*/
    	 NumberEffectOle()
    	{
    		bUseing=false;
    	}
    }
    class NumberEffect {
    	
    	constructor()
    	{
    		var i;
    		this.MAXNUMBEREFFECT=20;
    		this.neo=new Array(this.MAXNUMBEREFFECT);//
    		for(i=0;i<this.MAXNUMBEREFFECT;i++)
    		{
    			this.neo[i]=new NumberEffectOle();
            }
            this.nlist=new Int8Array(8);
    	}
    	AddEffect( x, y, num)
    	{
    		var i;
    		if(num==0)return;
    		for(i=0;i<this.MAXNUMBEREFFECT;i++)
    		{
    			if(!this.neo[i].bUseing)
    			{
    				if(num>0)
    				{//加血
    					this.neo[i].iNumber=num;
    					this.neo[i].iType=0;
    				}
    				else
    				{//减血
    					this.neo[i].iNumber=-num;
    					this.neo[i].iType=1;
    				}
    				this.neo[i].iX=x;
    				this.neo[i].iY=y;
    				this.neo[i].iProc=0;
    				this.neo[i].bUseing=true;
    				return;
    			}
    		}
    	}
    	
    	DrawNeo11( pne)
    	{
    		if(this.aa_add==null)
    		{
    			this.aa_add=GmPlay$1.xani_ui.InitAnimaWithName("加血数字", null);
    			this.aa_sub=GmPlay$1.xani_ui.InitAnimaWithName("减血数字", null);
    		}
    		var i,j;
    		var count=0;
    		i=pne.iNumber;
    		while(i>0)
    		{
    			this.nlist[count++]=i%10;
    			i/=10;
    		}
    		if(count==0)
    		{
    			this.nlist[0]=0;
    			count=1;
    		}
    		var w=12;
    		var offy;
    		j=pne.iProc;
    		for(i=count-1;i>=0;i--)
    		{
    			if(j>=0 && j<3)
    			{
    				offy=-j*5;
    			}
    			else if(j>=3 && j<6)
    			{
    				offy=-(6-j)*5;
    			}
    			else offy=0;
    			j-=2;
    			if(pne.iType==0)
    			{
    				this.aa_add.iFrame= this.nlist[i];
    				this.aa_add.Draw(pne.iX+(count-1)*w/2-i*w, pne.iY+offy);
    			}
    			else
    			{
    				this.aa_sub.iFrame=this.nlist[i];
    				this.aa_sub.Draw(pne.iX+(count-1)*w/2-i*w, pne.iY+offy);
    			}
    		}
    	
    		pne.iProc++;
    		if(pne.iProc>=count*6+5)pne.bUseing=false;
    	}
    	 DrawNeo( pne)
    	{
    		if(this.aa_add==null)
    		{
    			this.aa_add=GmPlay$1.xani_ui4.InitAnimaWithName("加血数字", null);
    			this.aa_sub=GmPlay$1.xani_ui4.InitAnimaWithName("掉血数字", null);
    		}
    		var i,j;
    		var count=0;
    		i=pne.iNumber;
    		while(i>0)
    		{
    			this.nlist[count++]=i%10;
    			i=parseInt(i/10);
    		}
    		if(count==0)
    		{
    			this.nlist[0]=0;
    			count=1;
    		}
    		var w=20;
    		var offy;
    		j=pne.iProc;
    		for(i=count-1;i>=0;i--)
    		{
    			if(j>=0 && j<3)
    			{
    				offy=-j*10;
    			}
    			else if(j>=3 && j<6)
    			{
    				offy=-(6-j)*10;
    			}
    			else offy=0;
    			j-=2;
    			if(pne.iType==0)
    			{
    				this.aa_add.iFrame= this.nlist[i];
    				this.aa_add.Draw(pne.iX+(count-1)*w/2-i*w, pne.iY+offy);
    			}
    			else
    			{
    				this.aa_sub.iFrame=this.nlist[i];
    				this.aa_sub.Draw(pne.iX+(count-1)*w/2-i*w, pne.iY+offy);
    			}
    		}
    	
    		pne.iProc++;
    		if(pne.iProc>=count*6+6)pne.bUseing=false;
    	}
    	Draw()
    	{
    		var i,c;
    		for(i=0;i<this.MAXNUMBEREFFECT;i++)
    		{
    			if(this.neo[i].bUseing)
    			{
    				this.DrawNeo(this.neo[i]);
    				/*
    				if(this.neo[i].iType==0)c=0xff00ff00;
    				else c=0xffff0000;
    				M3DFast.gi().DrawTextEx(this.neo[i].iX, this.neo[i].iY, ""+this.neo[i].iNumber, c, 30, 101, 1, 1, 0, -2, -2);
    				this.neo[i].iY--;
    				this.neo[i].iProc++;
    				if(this.neo[i].iProc>=20)this.neo[i].bUseing=false;*/
    			}
    		}
    	}
    	
    	Draw_TimeNumber( x, y, num)
    	{
    		if(num<10)GmPlay$1.xani_nui4.DrawAnimaEx(x, y, "倒计时数字", num, 101, 1, 1, 0, 0, 0);
    		else if(num<100)
    		{
    			GmPlay$1.xani_nui4.DrawAnimaEx(x-25, y, "倒计时数字", num/10, 101, 1, 1, 0, 0, 0);
    			GmPlay$1.xani_nui4.DrawAnimaEx(x+25, y, "倒计时数字", num%10, 101, 1, 1, 0, 0, 0);
    		}
    	}
    	Draw_RoundNumber( x, y, num)
    	{
    		if(num<10)GmPlay$1.xani_nui4.DrawAnimaEx(x, y, "回合数字", num, 101, 1, 1, 0, 0, 0);
    		else if(num<100)
    		{
    			GmPlay$1.xani_nui4.DrawAnimaEx(x-15, y, "回合数字", num/10, 101, 1, 1, 0, 0, 0);
    			GmPlay$1.xani_nui4.DrawAnimaEx(x+15, y, "回合数字", num%10, 101, 1, 1, 0, 0, 0);
    		}
    		else if(num<1000)
    		{
    			GmPlay$1.xani_nui4.DrawAnimaEx(x-30, y, "回合数字", num/100, 101, 1, 1, 0, 0, 0);
    			GmPlay$1.xani_nui4.DrawAnimaEx(x, y, "回合数字", num/10%10, 101, 1, 1, 0, 0, 0);
    			GmPlay$1.xani_nui4.DrawAnimaEx(x+30, y, "回合数字", num%10, 101, 1, 1, 0, 0, 0);
    		}
    	}
    }
    NumberEffect.ne=new NumberEffect();

    class AutoFightFrame {
    	

    	
    	constructor()
    	{
    		this.iAutoFightLast=0;

    		this.iW=83;
            this.iH=83;
            
             this.wsize=22;
    	}

    	 Draw()
    	{
    		if(this.iAutoFightLast<=0)return;
    		if(this.btn_cancel==null)
    		{
    			this.btn_cancel=new XButtonEx2$1(GmPlay$1.xani_nui4);
    			this.btn_cancel.InitButton("战斗_自动");
    		}
    		this.iX=GmConfig$1.SCRW-80;
    		this.iY=GmConfig$1.SCRH-80-10;
    		this.btn_cancel.Move(this.iX,this.iY,this.iW,this.iH);
    //		DrawMode.DrawFrame2(this.iX, this.iY, this.iW, this.iH);
    //		M3DFast.gi().DrawTextEx(this.iX+this.iW/2, this.iY+30, "剩余自动 "+this.iAutoFightLast+" 回合", 0xffffffff, 20, 101, 1, 1, 0, -2, 0);
    		this.btn_cancel.Draw();
    		if(GmMe$1.me.iFlag[20]>0)
    		{
    			this.iAutoFightLast=AutoFightFrame.AUTOLAST;
    			M3DFast$1.gi().DrawText_2(this.btn_cancel.iX+40, this.btn_cancel.iY+80, "无限", 0xffffffff, this.wsize, 101, 1, 1, 0, -2, -3,3,0xff000000);

    //			M3DFast.gi().DrawText_2(this.iX+41, this.iY+41, "无限", 0xffff0000, 30, 101, 1, 1, 0, -2, -2, 3, 0xffffff00);
    		}
    		else
    		{
    			M3DFast$1.gi().DrawText_2(this.btn_cancel.iX+40, this.btn_cancel.iY+80, ""+this.iAutoFightLast, 0xffffffff, this.wsize, 101, 1, 1, 0, -2, -3,3,0xff000000);

    //			NumberEffect.ne.Draw_RoundNumber(this.iX+83/2,this.iY+55,this.iAutoFightLast);
    		}
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		if(this.iAutoFightLast<=0)return false;
    		if(this.btn_cancel!=null && this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{
    				this.iAutoFightLast=0;
    			}
    			return true;
    		}
    		if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))return true;
    		return false;
    	}
    }

    AutoFightFrame.AUTOLAST=100;
    AutoFightFrame.aff=new AutoFightFrame();

    class DiePrompt extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.btn_ids=new Int32Array(15);//
    		this.btn_open=new Array(4);//
    		for(i=0;i<4;i++)
    		{
    			this.btn_open[i]=new XButtonEx2$1(GmPlay$1.xani_nui4);
    		}
    		this.InitButton();
    	}

    	
    	 InitButton()
    	{//根据情况初始化按钮
    		var i,p=0;
    		this.iBtnCount=0;
    		this.btn_ids[p++]=0;
    		this.btn_ids[p++]=1;
    		
    		if(GmMe$1.me.rbs.iLev<20)
    		{//10-20
    			this.btn_ids[p++]=2;
    			if(GmMe$1.me.rbs.nut>0)this.btn_ids[p++]=3;
    			if(GmMe$1.me.iFightPid<=0)this.btn_ids[p++]=4;
    			else
    			{
    //				GmPlay.sop(""+GmMe.me.iFightPid);
    				var pet=MyPets$1.mp.FindPet(GmMe$1.me.iFightPid);
    //				GmPlay.sop(""+pet);
    				if(pet==null)this.btn_ids[p++]=4;
    				else
    				{
    					if(pet.nut>0)this.btn_ids[p++]=4;
    				}
    			}
    			this.btn_ids[p++]=5;
    		}
    		else if(GmMe$1.me.rbs.iLev<30)
    		{//20-30
    			if(MyGov.mg.iRealGid>0)
    			{
    				this.btn_ids[p++]=6;
    				this.btn_ids[p++]=7;
    			}
    			this.btn_ids[p++]=8;
    			this.btn_ids[p++]=9;
    		}
    		else
    		{//30-40
    			if(MyMounts.mm.iMountsCount>0)this.btn_ids[p++]=10;
    			if(MyGov.mg.iRealGid>0)
    			{
    				this.btn_ids[p++]=11;
    				this.btn_ids[p++]=12;
    			}
    			this.btn_ids[p++]=13;
    			this.btn_ids[p++]=14;
    		}
    		
    		if(p>4)p=4;
    		for(i=0;i<p;i++)
    		{
    			
    			this.btn_open[i].InitButton("提示"+DiePrompt._PROMPTS[this.btn_ids[i]][1]);
    			this.btn_open[i].Move(GmConfig$1.SCRW/2-170/2-170-40+i*170, 340, 80, 80);
    			this.btn_open[i].sAnimaName=DiePrompt._PROMPTS[this.btn_ids[i]][1];
    		}
    		this.iBtnCount=p;
    	}

    	Draw()
    	{
    		var i;
    		M3DFast$1.gi().FillRect_2D(0, 0, GmConfig$1.SCRW, GmConfig$1.SCRH, 0x80000000);
    		//画背景
    		GmPlay$1.xani_nui4.DrawAnima(GmConfig$1.SCRW/2, 280, "死亡提示框",0);
    		//损失经验
    		if(DiePrompt.iLostExp>0 || DiePrompt.iLostMoney>0)
    		{
    			var s="死亡损失";
    			if(DiePrompt.iLostExp>0)s+=DiePrompt.iLostExp+"经验，";
    			if(DiePrompt.iLostMoney>0)s+=DiePrompt.iLostMoney+"金钱";
    			M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW/2, 300, s, 0xff98d9ed, 20, 101, 1, 1, 0, -2, 0);
    		}
    		else M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW/2, 300, DiePrompt.sDetail, 0xff98d9ed, 20, 101, 1, 1, 0, -2, 0);
    		//画中间按钮
    		for(i=0;i<this.iBtnCount;i++)
    		{
    			this.btn_open[i].Draw();
    			M3DFast$1.gi().DrawText_2(this.btn_open[i].iX+40, this.btn_open[i].iY+80, this.btn_open[i].sAnimaName, 0xffffffff, 26, 101, 1, 1, 0, -2, -2,3,0xff000000);
    			M3DFast$1.gi().DrawTextEx(this.btn_open[i].iX+40, this.btn_open[i].iY+80+22, DiePrompt._PROMPTS[this.btn_ids[i]][2], 0xff9ac2b9, 15, 101, 1, 1, 0, -2, -2);
    		}
    		
    		M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW/2, 460, "胜败乃江湖常事，少侠请提升实力再战", 0xffffffff, 20, 101, 1, 1, 0, -2, 0);
    		
    		M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW/2, 540-2, "点击空白处消失", 0xff9ac2b9, 20, 101, 1, 1, 0, -2, -2);

    	}
    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<this.iBtnCount;i++)
    		{
    			if(this.btn_open[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_open[i].bCheck())
    				{
    					switch(this.btn_ids[i])
    					{
    					case 0://升级
    						GmProtocol$1.gi().s_PromptActivity(0, 0);//请求获得活跃度数据
    						XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    						break;
    					case 1://组队
    						TeamCreate.Open();
    						break;
    					case 2://技能
    					case 8:
    						if(GmMe$1.me.rbs.iSchoolId==0)FrameMessage.fm.Open("拜师之后才能学习门派技能");
    						else XStat$1.gi().PushStat(XStat$1.GS_LEARNSKILL);
    						break;
    					case 3://人物
    						MyAttFrame.Open(0);
    						break;
    					case 4://宝宝
    					case 9:
    					case 14:
    						if(MyPets$1.mp.iPetCount>0)XStat$1.gi().PushStat(XStat$1.GS_PETSFRAME);
    						else FrameMessage.fm.Open("你还没有宠物");
    						break;
    					case 5://vip
    					case 13:
    						MyAttFrame.Open(3);
    						break;
    					case 6://帮派技能
    					case 11:
    						GmProtocol$1.gi().s_GovOperateFrame(0);
    						break;
    					case 7://帮派修炼
    					case 12:
    						GmProtocol$1.gi().s_GovOperateFrame(1);
    						break;
    					case 10://坐骑
    						if(MyMounts.mm.iMountsCount>0)XStat$1.gi().PushStat(XStat$1.GS_MOUNTSFRAME);
    						else EasyMessage.easymsg.AddMessage("你还没有坐骑");
    						break;
    					}
    				}
    			}
    		}
    		if(!XDefine$1.bInRect(x, y, 300, 280, 680, 220))XStat$1.gi().PopStat(1);
    		return false;
    	}
    }

    DiePrompt.bOpen=false;
    DiePrompt.iLostExp,DiePrompt.iLostMoney;
    DiePrompt.sDetail="";

    DiePrompt._PROMPTS=
    [["0","升级","参加活动升级"],//必有
    ["1","组队","组队再战"],//必有

    ["2","技能","人物技能升级"],//10~20，必有
    ["3","人物","升级加点"],//10~20，条件：人物没加点
    ["4","宝宝","增强宝宝"],//10~20，条件：宝宝没出战，或宝宝没加点
    ["5","VIP","更多福利"],//10~20，附加

    ["6","帮派技能","提升帮派技能"],//20~30，条件：已加入帮会
    ["7","帮派修炼","提升修炼等级"],//20~30，条件：已加入帮会
    ["8","技能","人物技能升级"],//20~30，附加
    ["9","宝宝","学习宝宝技能"],//20~30，附加

    ["10","坐骑","加强坐骑"],//30~40，条件：拥有坐骑
    ["11","帮派技能","提升修炼等级"],//30~40，条件：已加入帮会
    ["12","帮派修炼","提升帮派技能"],// 30~40，条件：已加入帮会
    ["13","VIP","更多福利"],//30~40，附加
    ["14","宝宝","炼出更强宝宝"],//30~40，附加
    ];

    DiePrompt.Open=function()
    {
    //		DiePrompt.bOpen=true;
        if(DiePrompt.bOpen)
        {
            DiePrompt.bOpen=false;
            
            if(GmMe$1.me.rbs.iLev<10)return;
            if(GmMe$1.me.rbs.iLev>=40)return;
            
            XStat$1.gi().PushStat(XStat$1.GS_DIEPROMPT);
            if(FrameMessage.fm.bShow)FrameMessage.fm.bShow=false;
        }
    };

    class XFightGoods {
    	
    	XFightGoods()
    	{
    	}
    	
    	InitFightGoods()
    	{
    		this.bReturn=false;
    		this.bSelectFinished=false;
    		this.lockgoods=null;
    //		GoodsDraw.lastlock=null;
    	}
    	DrawFightGoods()
    	{//画当前背包中的物品，选择使用
    		this.iW=430;
    		this.iH=345;
    		this.iX=GmConfig$1.SCRW-this.iW-20;
    		this.iY=GmConfig$1.SCRH-this.iH-20;
    //		DrawMode.Frame2_MD(this.iX, this.iY,this.iW,this.iH);
    		GoodsDraw.new_DrawGoods(this.iX, this.iY, MyGoods.gi().goods[2], null, null);
    		if(this.lockgoods!=null)GoodsDraw.new_DrawRect(this.iX, this.iY, MyGoods.gi().goods[2], this.lockgoods, 0);
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var k;
    		this.bFood=false;
    		this.bUseToDest=false;
    		this.lockgoods=GoodsDraw.new_LockGoods(x, y, this.iX, this.iY, MyGoods.gi().goods[2], msg);
    		GoodsDraw.NoMove();
    		if(msg==3 && this.lockgoods!=null && GoodsDraw.bCanProc())
    		{
    			k=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 30);
    			if(k==4)
    			{//对敌人使用道具
    				if(XFight.gi().iFightStat!=2)
    				{
    					EasyMessage.easymsg.AddMessage("宠物不能使用");
    				}
    				else
    				{
    					this.bUseToDest=true;
    					this.bSelectFinished=true;
    				}
    			}
    			else
    			{
    				k=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 26);
    				if(k==1 || k==2)
    				{//只能战斗，或战斗漫游都能用
    					this.bSelectFinished=true;
    				}
    				else
    				{
    					k=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 34);
    					if(k==2 || k==3)
    					{//烹饪使用
    						if(XFight.gi().iFightStat!=2)
    						{
    							EasyMessage.easymsg.AddMessage("宠物不能使用烹饪");
    						}
    						else
    						{
    							this.bFood=true;
    							this.bSelectFinished=true;
    						}
    					}
    					else
    					{
    						EasyMessage.easymsg.AddMessage("所选物品不能在战斗中使用");
    					}
    				}
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			this.bReturn=true;
    		}
    		return true;
    	}
    }

    XFightGoods.xfg=new XFightGoods();

    class XFightCallPet {


    	constructor()
    	{
            this.MAXPETCOUNT=10;

    		this.pets=new Array(this.MAXPETCOUNT);//
    		this.btn_pets=new Array(this.MAXPETCOUNT);//
    		this.iW=20+130*3+80+20;
    		this.iH=30+150*2;
    		this.iX=GmConfig$1.SCRW-this.iW-20;
    		this.iY=GmConfig$1.SCRH-this.iH-20;
    	}
    	InitCallPet()
    	{//初始化我可用的技能列表
    		this.iW=30+130*3+80+30;
    		this.iH=30+150*2;
    		this.iX=GmConfig$1.SCRW-this.iW-20;
    		this.iY=GmConfig$1.SCRH-this.iH-20;
    		this.btn_pets[0]=null;
    		var i;
    		for(i=0;i<this.MAXPETCOUNT;i++)
    		{
    			this.pets[i]=null;
    		}
    		this.iPetCount=0;
    		for(i=0;i<MyPets$1.mp.iPetCount;i++)
    		{
    			if(MyPets$1.mp.pets[i].iPid>0)
    			{
    				this.pets[this.iPetCount++]=MyPets$1.mp.pets[i];
    			}
    		}
    		this.btn_pets[0]=null;
    		return this.iPetCount;
    	}
    	DrawCallPet()
    	{
    		this.iW=30+130*3+80+30;
    		this.iH=30+150*2;
    		this.iX=GmConfig$1.SCRW-this.iW-20;
    		this.iY=GmConfig$1.SCRH-this.iH-20;
    		var i,j,c;
    		if(this.iPetCount>0 && this.btn_pets[0]==null)
    		{
    			for(i=0;i<this.iPetCount;i++)
    			{
    				this.btn_pets[i]=new XButtonEx2$1(GmPlay$1.xani_head);
    				this.btn_pets[i].InitButton(GmPlay$1.de_pet.strValue(this.pets[i].iTid, 0, 1));
    				this.btn_pets[i].Move(this.iX+30+(i%4)*130, this.iY+30+parseInt(i/4)*150, 80, 80);
    			}
    		}
    		DrawMode$1.new_framepc(this.iX, this.iY, this.iW, this.iH);
    //		for(i=0;i<MyPets.mp.iPetCount;i++)
    //		{

    //			if(j<8)continue;
    //			if(btn_selectpet[i].ProcTouch(msg, x, y))
    //			{
    //				if(btn_selectpet[i].bCheck())
    //				{//更换成这个宠物
    //					iCmd[1]=MyPets.mp.pets[i].iPid;
    //					iCmd[2]=MyPets.mp.pets[i].iPid;
    ////					for(j=0;j<100;j++)GmPlay.sop("ii="+iCmd[2]);
    //					FinishRoleOperate();
    //					break;
    //				}
    //			}
    //		}

    		for(i=0;i<this.iPetCount;i++)
    		{
    			GmPlay$1.xani_nui2.DrawAnimaEx((this.btn_pets[i].iX-((this.btn_pets[i].fScale-1)*80/2)), (this.btn_pets[i].iY-((this.btn_pets[i].fScale-1)*80/2)), "宠物头像框",0, 101, this.btn_pets[i].fScale, this.btn_pets[i].fScale, 0, 0, 0);
    //			GmPlay.xani_nicon.DrawAnima(btn_skills[i].iX, btn_skills[i].iY, "技能外框",0);
    			this.btn_pets[i].Draw();
    			for(j=0;j<8;j++)
    			{
    				if(this.pets[i].iPid==XFight.gi().iUsedPetsId[j])break;//已经用过的宠物，无法按
    			}
    			if(j<8)c=0xffff0000;
    			else c=0xfffeeede;
    			M3DFast$1.gi().DrawTextEx(this.btn_pets[i].iX+40,this.btn_pets[i].iY+80+15, this.pets[i].sName, c, 22, 101, 1, 1, 0, -2, 0);
    			M3DFast$1.gi().DrawTextEx(this.btn_pets[i].iX+40,this.btn_pets[i].iY+80+15+24, this.pets[i].iLev+"级", c, 20, 101, 1, 1, 0, -2, 0);
    		}
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		var i,j;
    		for(i=0;i<this.iPetCount;i++)
    		{
    			if(this.btn_pets[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_pets[i].bCheck())
    				{
    					for(j=0;j<8;j++)
    					{
    						if(this.pets[i].iPid==XFight.gi().iUsedPetsId[j])break;//已经用过的宠物，无法按
    					}
    					if(j<8)
    					{
    						EasyMessage.easymsg.AddMessage("出战过的宠物，不能再次出战");
    					}
    					else
    					{
    						this.iCallPetId=this.pets[i].iPid;
    						this.btn_pets[i].SetNormal();
    						return true;
    					}
    				}
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX-20, this.iY-20, this.iW+40, this.iH+40))
    		{
    			this.iCallPetId=-1;
    			return true;
    		}
    		return false;
    	}
    }

    XFightCallPet.xfcp=new XFightCallPet();

    class XFightPetSkill {
        
    	constructor()
    	{
            this.MAXSKILLCOUNT=9;
    		this.iFightSkillId=new Int32Array(this.MAXSKILLCOUNT);//
    		this.btn_skills=new Array(this.MAXSKILLCOUNT);//
    	}
    	
    	InitPetSkill( p)
    	{
    		this.iW=20+130*2+80+20;
    		this.iH=345;
    		this.iX=GmConfig$1.SCRW-this.iW-20;
    		this.iY=GmConfig$1.SCRH-this.iH-20;
    		this.btn_skills[0]=null;
    		var i;
    		this.pet=p;
    		this.iFightSkillCount=0;
    		for(i=0;i<this.MAXSKILLCOUNT;i++)
    		{
    			if(p.jn[i]>0)
    			{//判断是否为可使用技能
    				if(GmPlay$1.de_skill.intValue(p.jn[i], 0, 32)==0)
    				{//主动，加入技能列表
    					this.iFightSkillId[this.iFightSkillCount]=p.jn[i];
    					this.iFightSkillCount++;
    				}
    			}
    		}
    		this.bReturn=false;
    		this.bUsed=false;
    		this.iPoint=-1;
    		
    		this.iW=30+130*2+80+30;
    		if(this.iFightSkillCount>2)this.iH=30+150*2;
    		else this.iH=30+150*1;
    		this.iX=GmConfig$1.SCRW-this.iW-20;
    		this.iY=GmConfig$1.SCRH-this.iH-20;
    		return this.iFightSkillCount;
    	}
    	
    	Draw()
    	{
    		this.iW=30+130*2+80+30;
    		if(this.iFightSkillCount>2)this.iH=30+150*2;
    		else this.iH=30+150*1;
    		this.iX=GmConfig$1.SCRW-this.iW-20;
    		this.iY=GmConfig$1.SCRH-this.iH-20;
    		var i,c;
    		if(this.iFightSkillCount>0 && this.btn_skills[0]==null)
    		{
    			for(i=0;i<this.iFightSkillCount;i++)
    			{
    				this.btn_skills[i]=new XButtonEx2$1(GmPlay$1.xani_nicon);
    				this.btn_skills[i].InitButton(GmPlay$1.de_skill.strValue(this.iFightSkillId[i], 0, 5));
    				this.btn_skills[i].Move(this.iX+30+(i%3)*130, this.iY+30+parseInt(i/3)*150, 80, 80);
    			}
    		}
    //		x=GmConfig.SCRW/2;
    //		y=GmConfig.SCRH/3;
    		DrawMode$1.new_framepc(this.iX, this.iY, this.iW, this.iH);
    		
    		var idt=-1;
    		for(i=0;i<this.iFightSkillCount;i++)
    		{
    			this.btn_skills[i].Draw();
    			if(this.btn_skills[i].bMouseDown)idt=i;
    			c=0xfffeeede;
    			M3DFast$1.gi().DrawTextEx(this.btn_skills[i].iX+40,this.btn_skills[i].iY+80+15, GmPlay$1.de_skill.strValue(this.iFightSkillId[i], 0, 6), c, 25, 101, 1, 1, 0, -2, 0);

    //			if(this.iPoint==i)M3DFast.gi().FillRect_2D(this.iX, this.iY+i*85, this.iX+this.iW, this.iY+i*85+85, 0xffb0b0b0);
    ////			if(this.iFightSkillId[i]>1000)c=0xff0080ff;
    ////			else c=0xffff0000;
    //			c=0xff0080ff;
    //			M3DFast.gi().DrawTextEx(this.iX+90, this.iY+i*85+85/2, GmPlay.de_skill.strValue(this.iFightSkillId[i]%1000, 0, 6), c, 30, 101, 1, 1, 0, 0, -2);
    ////			GmPlay.xani_skillicon.DrawAnima_aa(this.iX, this.iY+i*85, GmPlay.de_skill.strValue(this.iFightSkillId[i]%1000, 0, 5), 0);
    //			GmPlay.xani_nicon.DrawAnima_aa(this.iX, this.iY+i*85, GmPlay.de_skill.strValue(this.iFightSkillId[i]%1000, 0, 5), 0);
    		}
    		if(idt>=0)
    		{
    			MyAttFrame.Skill_Detail(this.iFightSkillId[idt]%1000, this.btn_skills[idt].iX,this.btn_skills[idt].iY, -1);
    		}
    //		var i;
    //		this.iW=120;
    //		this.iH=this.iFightSkillCount*30+20;
    //		this.iX=GmConfig.SCRW-this.iW-83;
    //		this.iY=GmConfig.SCRH-this.iH-83;
    //		
    //		DrawMode.Frame1_BR(this.iX,this.iY,this.iW,this.iH);
    //		for(i=0;i<this.iFightSkillCount;i++)
    //		{
    //			if(this.iPoint==i)
    //			{
    //				M3DFast.gi().FillRect_2D(this.iX+10, this.iY+10+i*30, this.iX+this.iW-20, this.iY+10+i*30+30, 0x80ffffff);
    //				M3DFast.gi().DrawTextEx(this.iX+10, this.iY+10+15+30*i, ""+GmPlay.de_skill.strValue(this.iFightSkillId[i], 0, 6), 0xff00ff00, 20, 101, 1, 1, 0, 0, -2);
    //			}
    //			else M3DFast.gi().DrawTextEx(this.iX+10, this.iY+10+15+30*i, ""+GmPlay.de_skill.strValue(this.iFightSkillId[i], 0, 6), 0xffffffff, 20, 101, 1, 1, 0, 0, -2);
    //		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<this.iFightSkillCount;i++)
    		{
    			if(this.btn_skills[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_skills[i].bCheck())
    				{
    					this.btn_skills[i].SetNormal();
    					this.iPoint=i;
    					this.bUsed=true;
    					this.iUseSkillId=this.iFightSkillId[i];
    					return true;
    				}
    			}
    		}
    		
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX-20, this.iY-20, this.iW+40, this.iH+40))
    		{
    			this.bReturn=true;
    			return true;
    		}
    		return false;
    	}
    }
    XFightPetSkill.xfps=new XFightPetSkill();

    class FightData {
    /*	public int iAPos;
    	public int this.iTimeStamp;
    	public int iActType;
    	public Int32Array iValues = new Int32Array(5);//
    	public String sValue;
    	public AnimaAction aa;

    	public boolean bActing;*/

    	constructor() {
    		this.aa = new AnimaAction();
            this.sValue = "";
            this.iValues=new Int32Array(5);
    	}
    }

    class _UPDATEBUFFER {
        /*
    	public boolean bUseing;
    	public int iPos;// 位置
    	public byte sBuffer;// 更新数据
    	public int iLen;// 数据长度
    */
    	 constructor() {
    		this.bUseing = false;
    		this.sBuffer = new Uint8Array(64);
    	}
    }




    class XFight {
        


        btnmov()
         {
    		var k = 85;
    		var m=10;
    		this.btn_operate[0].Move(GmConfig$1.SCRW - 80 - k * 5, GmConfig$1.SCRH - 80-m, 80,				80);// 法术
    		this.btn_operate[1].Move(GmConfig$1.SCRW - 80 - k * 4, GmConfig$1.SCRH - 80-m, 80,				80);// 道具
    		this.btn_operate[2].Move(GmConfig$1.SCRW - 80 - k * 3, GmConfig$1.SCRH - 80-m, 80,				80);// 保护
    		this.btn_operate[3].Move(GmConfig$1.SCRW - 80 - k * 2, GmConfig$1.SCRH - 80-m, 80,				80);// 防御
    		this.btn_operate[7].Move(GmConfig$1.SCRW - 80 - k * 1, GmConfig$1.SCRH - 80-m, 80,				80);// 逃跑

    		this.btn_operate[6].Move(GmConfig$1.SCRW - 80, GmConfig$1.SCRH - 80-m, 80, 80);// 自动

    		this.btn_operate[5].Move(GmConfig$1.SCRW - 80, GmConfig$1.SCRH - 80 - k * 1-m, 80,				80);// 召还
    		this.btn_operate[4].Move(GmConfig$1.SCRW - 80, GmConfig$1.SCRH - 80 - k * 2-m, 80,				80);// 召唤
    		this.btn_operate[8].Move(GmConfig$1.SCRW - 80, GmConfig$1.SCRH - 80 - k * 3-m, 80,				80);// 捕捉

    		this.btn_operate[9].Move(GmConfig$1.SCRW - 80 - 80, GmConfig$1.SCRH - 80 - 80-m,				80, 80);
    		// ----------------------------------------------------------------------------------------------
    		this.btn_petoperate[0].Move(GmConfig$1.SCRW - 80 - k * 5, GmConfig$1.SCRH - 80-m,				80, 80);// 法术
    		this.btn_petoperate[1].Move(GmConfig$1.SCRW - 80 - k * 4, GmConfig$1.SCRH - 80-m,				80, 80);// 道具
    		this.btn_petoperate[2].Move(GmConfig$1.SCRW - 80 - k * 3, GmConfig$1.SCRH - 80-m,				80, 80);// 保护
    		this.btn_petoperate[3].Move(GmConfig$1.SCRW - 80 - k * 2, GmConfig$1.SCRH - 80-m,				80, 80);// 防御
    		this.btn_petoperate[4].Move(GmConfig$1.SCRW - 80 - k * 1, GmConfig$1.SCRH - 80-m,				80, 80);// 逃跑

    		this.btn_petoperate[5].Move(GmConfig$1.SCRW - 80, GmConfig$1.SCRH - 80-m, 80, 80);// 自动

    		this.btn_cancel.Move(GmConfig$1.SCRW - 80, GmConfig$1.SCRH - 80-m, 80, 80);// 取消
    	}

    	constructor()
    	{
    		this.MAXFIGHTDATA=1024;

             this.FIGHTACTION_NORMAL = 0;// 普通攻击
             this.FIGHTACTION_DEFENCE = 1;
             this.FIGHTACTION_ESCAPE = 2;
             this.FIGHTACTION_CATCH = 3;
             this.FIGHTACTION_CALLBB = 4;
             this.FIGHTACTION_CALLBACKBB = 5;// 召回
             this.FIGHTACTION_MAGIC = 6;
             this.FIGHTACTION_USEGOODS = 7;
             this.FIGHTACTION_PROTECT = 8;
             this.FIGHTACTION_SPECIAL = 9;

              this.iCmd = new Int32Array(10);// 操作指令
              this.iLastRoleCmd = new Int32Array(10);
              this.iLastPetCmd = new Int32Array(10);

              this.iShiQi = [0,0];// 士气
              this.iZhen = [0,0];// 阵

    		var i, j;

    		this.iUsedPetsId = new Int32Array(8);//

    		this.fat = new Array(4);
    		// btn_select=new XButton(4)(GmMe.MAXTEAMOLE);//
    		for (i = 0; i < 4; i++) {
                this.fat[i]=new Array(GmMe$1.MAXTEAMOLE);
    			for (j = 0; j < GmMe$1.MAXTEAMOLE; j++) {
    				this.fat[i][j] = new FightMember();
    				// btn_select[i][j]=new XButton(GmPlay.xani_ui);
    				// btn_select[i][j].InitButton("选择目标");
    			}
    		}
    		this.aa_select1 = GmPlay$1.xani_nui4.InitAnimaWithName("选择敌人", null);
    		this.aa_select2 = GmPlay$1.xani_nui4.InitAnimaWithName("选择队友", null);
    		this.fat_base = new Array(2);//
    		this.fat_base[0] = new FightMember();
    		this.fat_base[1] = new FightMember();
    		this.fat_base[0].iPos = 5;
    		this.fat_base[0].sFaceTo = "_左";
    		this.fat_base[1].iPos = 25;
    		this.fat_base[1].sFaceTo = "_右";

    		this.btn_operate = new Array(10);//
    		for (i = 0; i < 9; i++)
    		{
    			this.btn_operate[i] = new XButtonEx2$1(GmPlay$1.xani_nui4);
    			this.btn_operate[i].Move(GmConfig$1.SCRW - 170 - 40 + i % 2 * 85,GmConfig$1.SCRH / 3 + i / 2 * 80, 80, 80);
    		}

    		this.btn_operate[0].InitButton("战斗_法术");
    		this.btn_operate[0].sAnimaName = "法术";
    		this.btn_operate[1].InitButton("战斗_道具");
    		this.btn_operate[1].sAnimaName = "道具";
    		this.btn_operate[2].InitButton("战斗_保护");
    		this.btn_operate[2].sAnimaName = "保护";
    		this.btn_operate[3].InitButton("战斗_防御");
    		this.btn_operate[3].sAnimaName = "防御";
    		this.btn_operate[7].InitButton("战斗_逃跑");
    		this.btn_operate[7].sAnimaName = "逃跑";

    		this.btn_operate[4].InitButton("战斗_召唤");
    		this.btn_operate[4].sAnimaName = "召唤";
    		this.btn_operate[8].InitButton("战斗_捕捉");
    		this.btn_operate[8].sAnimaName = "捕捉";
    		this.btn_operate[5].InitButton("战斗_召还");
    		this.btn_operate[5].sAnimaName = "召还";
    		this.btn_operate[6].InitButton("战斗_自动");
    		this.btn_operate[6].sAnimaName = "自动";

    		this.btn_operate[9] = new XButtonEx2$1(GmPlay$1.xani_nui4);
    		this.btn_operate[9].InitButton("战斗_特技");
    		this.btn_operate[9].sAnimaName = "特技";

    		this.btn_petoperate = new Array(7);//
    		for (i = 0; i < 7; i++) {
    			this.btn_petoperate[i] = new XButtonEx2$1(GmPlay$1.xani_nui4);
    			this.btn_petoperate[i].Move(GmConfig$1.SCRW / 2 + i % 2 * 85,GmConfig$1.SCRH / 3 + i / 2 * 80, 80, 80);
    		}

    		this.btn_petoperate[0].InitButton("战斗_法术");
    		this.btn_petoperate[0].sAnimaName = "法术";
    		this.btn_petoperate[1].InitButton("战斗_道具");
    		this.btn_petoperate[1].sAnimaName = "道具";
    		this.btn_petoperate[2].InitButton("战斗_保护");
    		this.btn_petoperate[2].sAnimaName = "保护";
    		this.btn_petoperate[3].InitButton("战斗_防御");
    		this.btn_petoperate[3].sAnimaName = "防御";
    		this.btn_petoperate[4].InitButton("战斗_逃跑");
    		this.btn_petoperate[4].sAnimaName = "逃跑";
    		this.btn_petoperate[5].InitButton("战斗_自动");
    		this.btn_petoperate[5].sAnimaName = "自动";

    		this.btn_cancel = new XButtonEx2$1(GmPlay$1.xani_nui4);
    		this.btn_cancel.InitButton("战斗_自动");
    		this.btn_cancel.sAnimaName = "取消";

    		this.btnmov();

    		this.fds = new Array(this.MAXFIGHTDATA);//
    		for (i = 0; i < this.MAXFIGHTDATA; i++)
    			this.fds[i] = new FightData();

    		// fatpos
    		// int w,h;
    		// w=GmConfig.SCRW/8;//100
    		// h=GmConfig.SCRH/8;//60

    		// 可根据屏幕宽高计算
    		for (i = 0; i < 2; i++) {
    			for (j = 0; j < 5; j++) {
    				XFight.basepos[i][j][0] *= 80;// 左右间距
    				XFight.basepos[i][j][1] *= 80;// 前后间距
    				// XFight.basepos[i][j][0]*=80;//左右间距
    				// XFight.basepos[i][j][1]*=100;//前后间距
    			}
    		}
    		for (i = 0; i < 6 * 2; i++) {
    			for (j = 0; j < 5; j++) {
    				XFight.zhenpos[i][j][0] *= 80;// 左右间距
    				XFight.zhenpos[i][j][1] *= 25;// 前后间距
    			}
    		}
    		this.iLastRoleCmd[0] = this.FIGHTACTION_NORMAL;
    		this.iLastRoleCmd[1] = 0;
    		this.iLastRoleCmd[2] = -1;
    		this.iLastPetCmd[0] = this.FIGHTACTION_NORMAL;
    		this.iLastPetCmd[1] = 0;
    		this.iLastPetCmd[2] = -1;

    		this.btn_leavewatch = new XButtonEx2$1(GmPlay$1.xani_nui4);
    		this.btn_leavewatch.InitButton("战斗_自动");
    		this.btn_leavewatch.sAnimaName = "离开";

    		this.ub = new Array(10);
    		for (i = 0; i < 10; i++)
                this.ub[i] = new _UPDATEBUFFER();
                

                this.bShowHpDetail = false;
                this.wsize = 22;
                 this.jdjd = 0;
    	}

    	 InitPos() {
    		var i, j;
    		var f, l;
    		var offx, offy;
    		var pf;
    		this.myfat = null;

    		if (this.bSwap) {
    			var tmp;
    			for (i = 0; i < 2; i++) {
    				for (j = 0; j < GmMe$1.MAXTEAMOLE; j++) {
    					tmp = this.fat[i][j];
    					this.fat[i][j] = this.fat[i + 2][j];
    					this.fat[i + 2][j] = tmp;
    				}
    			}
    		}

    		var offx1, offy1, offx2, offy2;
    		// offx1=650;
    		// offy1=300;
    		// offx2=150;
    		// offy2=250;
    		offx1 = 800 - 200 + 30;
    		offy1 = 480 - 200 + 50 + 30;
    		offx2 = 200 - 30;
    		offy2 = 200;
    		this.fat_base[0].iX = offx1 * GmConfig$1.SCRW / 800;
    		this.fat_base[0].iY = offy1 * GmConfig$1.SCRH / 480;
    		this.fat_base[1].iX = offx2 * GmConfig$1.SCRW / 800;
    		this.fat_base[1].iY = offy2 * GmConfig$1.SCRH / 480;

    		this.fat_base[0].FaceTo(true);
    		this.fat_base[1].FaceTo(true);
    		var tx, ty;
    		for (i = 0; i < 4; i++) {
    			for (j = 0; j < GmMe$1.MAXTEAMOLE; j++) {
    				// if(fat[i][j].bUseing)
    				{
    					// fat[i][j].iOx=fatpos[i][j][0];
    					// fat[i][j].iOy=fatpos[i][j][1];
    					// fat[i][j].iX=fatpos[i][j][0];
    					// fat[i][j].iY=fatpos[i][j][1];
    					// this.iZhen[0]=0;
    					// this.iZhen[1]=0;
    					tx = XFight.basepos[i % 2][j][0]
    							+ XFight.zhenpos[i % 2 + this.iZhen[parseInt(i / 2)] * 2][j][0];
    					ty = XFight.basepos[i % 2][j][1]
    							+ XFight.zhenpos[i % 2 + this.iZhen[parseInt(i / 2)] * 2][j][1];
    					f = XDefine$1.GetAngleXY_ext(tx, ty, 0, 0);
    					l = XDefine$1.llength(tx, ty, 0, 0);
    					if (i < 2) {// 己方
    						f += XDefine$1.PI * (180 - 55) / 180;
    						offx = offx1;
    						offy = offy1;
    					} else {// 敌方
    						f -= XDefine$1.PI * 55 / 180;
    						offx = offx2;
    						offy = offy2;
    					}

    					this.fat[i][j].iOx =  (offx + Math.cos(f) * l * 1.2);
    					this.fat[i][j].iOy =  (offy + Math.sin(f) * l * 0.7);
    					// 根据屏幕调整位置
    					this.fat[i][j].iOx = this.fat[i][j].iOx * GmConfig$1.SCRW / 800;
    					this.fat[i][j].iOy = this.fat[i][j].iOy * GmConfig$1.SCRH / 480;
    					this.fat[i][j].iX = this.fat[i][j].iOx;
    					this.fat[i][j].iY = this.fat[i][j].iOy;
    					this.fat[i][j].iPos = i * 10 + j;

    					if (i < 2) {
    						this.fat[i][j].FaceTo(true);
    						this.fat[i][j].iMoveOffX =  (Math
    								.cos(20 * XDefine$1.PI / 180) * 100);
    						this.fat[i][j].iMoveOffY =  (Math
    								.sin(20 * XDefine$1.PI / 180) * 100);
    					} else {
    						this.fat[i][j].FaceTo(true);
    						this.fat[i][j].iMoveOffX = - (Math
    								.cos((20) * XDefine$1.PI / 180) * 100);
    						this.fat[i][j].iMoveOffY = - (Math
    								.sin((20) * XDefine$1.PI / 180) * 100);
    					}
    					if (!this.fat[i][j].bUseing)
    						continue;
    					pf = this.fat[i][j];
    					this.fat[i][j].SetBaseAnima("战斗站立");
    					if (this.fat[i][j].iHp <= 0)
    						this.fat[i][j].SetBaseAnima("死亡");
    					pf.NextAnima();

    					if (pf.iPos == this.iMyPos) {
    						pf.bMe = true;
    						this.myfat = pf;
    					}
    				}
    			}
    		}
    	}

    	 SwapPos( pos) {
    		if (this.bSwap) {
    			if (pos < 20)
    				return pos + 20;
    			else
    				return pos - 20;
    		}
    		return pos;
    	}

    	 SwapZhen() {
    		if (this.bSwap) {
    			var i = this.iZhen[0];
    			this.iZhen[0] = this.iZhen[1];
    			this.iZhen[1] = i;
    		}
    	}

    	 SwapShiQi() {
    		if (this.bSwap) {
    			var i = this.iShiQi[0];
    			this.iShiQi[0] = this.iShiQi[1];
    			this.iShiQi[1] = i;
    		}
    	}

    	setpetused( pls) {
    		var pid = pls.GetNextInt();
    		GmMe$1.me.iFightPid = pid;
    		// 加入到已经用过列表中
    		for (var j = 0; j < 8; j++) {
    			if (this.iUsedPetsId[j] <= 0) {
    				this.iUsedPetsId[j] = pid;
    				break;
    			}
    		}
    	}

    	updatefat( pls) {
    		var i;
    		for (i = 0; i < 10; i++) {
    			if (!this.ub[i].bUseing) {
    				XDefine$1.arraycopy(pls.databuf, 3, this.ub[i].sBuffer, 0,
    						pls.iLength - 3);
    				this.ub[i].iLen = pls.iLength - 3;
    				this.ub[i].iPos = pls.GetNextByte();
    				this.ub[i].iPos = this.SwapPos(this.ub[i].iPos);
    				this.ub[i].bUseing = true;
    				break;
    			}
    		}
    		GmPlay$1.sop1("len=" + pls.iLength + ",,offset=" + pls.iOffset);
    	}

    	DoUpdate( pos) {
    		var i;
    		for (i = 0; i < 10; i++) {
    			if (this.ub[i].bUseing && this.ub[i].iPos == pos) {
    				var pls = new PackageTools(256);
    				pls.SetDataAndOffset(this.ub[i].sBuffer, 0, this.ub[i].iLen);
    				this._updatefat(pls);
    				this.ub[i].bUseing = false;
    				return;
    			}
    		}
    	}

    	_updatefat( pls) {
    		var i, j, k;
    		var pos = pls.GetNextByte();
    		pos = this.SwapPos(pos);
    		var pf = this.fat[parseInt(pos / 10)][pos % 10];
    		pf.Clear();
    		MyPets$1.mp.CalcAll();

    		if (pos == this.iMyPos + 10) {// 自己的宠物
    			var ppet = MyPets$1.mp.GetUseingPet();

    			if (ppet != null && ppet.iHp <= 0) {
    				ppet.iHp = ppet.iMaxHp;
    				ppet.iMp = ppet.iMaxMp;
    			}
    		}

    		pf.bUseing = true;
    		pf.sName = pls.GetNextString();
    		pf.iMaxHp = pls.GetNextInt();
    		pf.iHp = pls.GetNextInt();
    		pf.iMaxMp = pls.GetNextInt();
    		pf.iMp = pls.GetNextInt();
    		// pf.iAnger=pls.GetNextShort();

    		pf.iType = pls.GetNextByte();// 0user,1pet
    		i = pls.GetNextByte();// race sex
    		j = pls.GetNextInt();
    		k = pls.GetNextInt();
    		pf.iColor[0] = k & 7;
    		pf.iColor[1] = (k >> 3) & 7;
    		pf.iColor[2] = (k >> 6) & 7;
    		pf.iColor[3] = (k >> 9) & 7;
    		pf.iColor[4] = (k >> 12) & 7;
    		if (pf.iType == 0) {// 人物
    			pf.iRace_Sex = i;
    			pf.iWeapTid = j;
    			pf.nr = Gameing.gameing.findnrsbyname(pf.sName);// 玩家，绑定附近NearRole
    			pf.xani = GmPlay$1.xani_newrole[pf.iRace_Sex];
    			pf.iSex = pf.iRace_Sex % 2;
    		} else if (pf.iType == 1) {// 怪物
    			pf.iTid = j;
    			pf.xani = GmPlay$1.xani_pets[pf.iTid % 10000];
    		} else if (pf.iType == 2) {// 特殊：人变怪，怪变人
    			pf.iSpecialType = i;
    			if (i == 1) {// 怪心，人身
    				pf.iWeapTid = j % 10000;
    				pf.iRace_Sex = parseInt(j / 10000);
    				pf.xani = GmPlay$1.xani_newrole[pf.iRace_Sex];
    				pf.iSex = pf.iRace_Sex % 2;
    			} else {// 人心，怪身
    				pf.iTid = j;
    				pf.xani = GmPlay$1.xani_pets[pf.iTid % 10000];
    			}
    		}

    		pf.iX = pf.iOx;
    		pf.iY = pf.iOy;
    		pf.FaceTo(true);
    		pf.SetBaseAnima("战斗站立");
    		pf.NextAnima();
    	}

    	InitFight( pls) {
    		this.btnmov();
    		pls.bCompress = true;
    		var i, j, k;
    		var pos;
    		var pf;
    		for (i = 0; i < 4; i++) {
    			for (j = 0; j < GmMe$1.MAXTEAMOLE; j++) {
    				this.fat[i][j].Clear();
    			}
    		}
    		for (i = 0; i < 10; i++)
    			this.ub[i].bUseing = false;
    		for (i = 0; i < 2; i++)
    			this.fat_base[i].Clear();
    		this.iFightType = pls.GetNextByte();// 战斗类型

    		while (true) {
    			pos = pls.GetNextByte();
    			// GmPlay.sop("pos : "+pos);
    			if (pos == 100)
    				break;
    			pf = this.fat[parseInt(pos / 10)][pos % 10];
    			pf.bUseing = true;
    			pf.sName = pls.GetNextString();
    			pf.iMaxHp = pls.GetNextInt();
    			pf.iHp = pls.GetNextInt();
    			pf.iMaxMp = pls.GetNextInt();
    			pf.iMp = pls.GetNextInt();
    			// pf.iAnger=pls.GetNextShort();

    			pf.iType = pls.GetNextByte();// 0user,1pet,2特殊
    			i = pls.GetNextByte();
    			j = pls.GetNextInt();// 宠物/怪物类型,种族*2+性别

    			k = pls.GetNextInt();
    			// k=0;
    			pf.iColor[0] = k & 7;
    			pf.iColor[1] = (k >> 3) & 7;
    			pf.iColor[2] = (k >> 6) & 7;
    			pf.iColor[3] = (k >> 9) & 7;
    			pf.iColor[4] = (k >> 12) & 7;
    			if (pf.iType == 0) {// 人物
    				pf.iRace_Sex = i;
    				pf.iWeapTid = j;
    				pf.nr = Gameing.gameing.findnrsbyname(pf.sName);// 玩家，绑定附近NearRole
    				pf.xani = GmPlay$1.xani_newrole[pf.iRace_Sex];
    				pf.iSex = pf.iRace_Sex % 2;
    			} else if (pf.iType == 1) {// 怪物
    				pf.iTid = j;
    				pf.xani = GmPlay$1.xani_pets[j % 10000];
    			} else if (pf.iType == 2) {// 特殊：人变怪，怪变人
    				pf.iSpecialType = i;
    				if (i == 1) {// 怪心，人身
    					pf.iWeapTid = j % 10000;
    					pf.iRace_Sex = parseInt(j / 10000);
    					pf.xani = GmPlay$1.xani_newrole[pf.iRace_Sex];
    					pf.iSex = pf.iRace_Sex % 2;
    				} else {// 人心，怪身
    					pf.iTid = j;
    					pf.xani = GmPlay$1.xani_pets[j % 10000];
    				}
    			}
    		}
    		this.iMyPos = pls.GetNextByte();
    		this.bSwap = false;
    		if (this.iMyPos >= 100) {// 是观众
    			if (this.iMyPos == 100)
    				this.iMyTeam = 0;
    			else {
    				this.iMyTeam = 1;
    				this.bSwap = true;
    			}
    		} else {
    			if (this.iMyPos < 20)
    				this.iMyTeam = 0;
    			else {
    				this.iMyTeam = 1;
    				this.bSwap = true;
    				this.iMyPos -= 20;
    			}
    			for (i = 0; i < 8; i++) {
    				this.iUsedPetsId[i] = pls.GetNextInt();// 使用过的宠物ID列表
    			}
    			XFightRoleSkill.xfs.InitFightSkill();
    			XFightSpecialSkill.xss.InitSpecialSkill();
    		}
    		this.iShiQi[0] = pls.GetNextShort();
    		this.iShiQi[1] = pls.GetNextShort();
    		this.iRound = pls.GetNextShort();
    		this.iZhen[0] = pls.GetNextByte();
    		this.iZhen[1] = pls.GetNextByte();
    		this.SwapShiQi();
    		this.SwapZhen();

    		XFight.bFighting = true;
    		this.iAlphaEffect = 0;
    		this.iFightStat = 0;
    		this.InitPos();
    		this.bFightFinished = false;
    		this.iWaited = 0;
    		pls.bCompress = false;
    	}

    	 

    	DrawHpDetail() {
    		if (this.iMyPos >= 100)
    			GmMe$1.me.DrawHpDetail();
    		else {
    			var pfm = this.getfm(this.iMyPos);
    			var x = GmConfig$1.SCRW - 88 - 60 - 150;
    			M3DFast$1.gi().FillRect_2D(x, 0, x + 150, 60, 0x80000000);
    			M3DFast$1.gi().DrawTextEx(x, 0, "气血:" + pfm.iHp + "/" + pfm.iMaxHp,
    					0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			M3DFast$1.gi().DrawTextEx(x, 20, "魔法:" + pfm.iMp + "/" + pfm.iMaxMp,
    					0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			M3DFast$1.gi().DrawTextEx(x, 40, "愤怒:" + GmMe$1.me.rbs.iAnger + "/150",
    					0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		}
    	}

    	DrawHead() {// 观战
    		if (this.iMyPos >= 100)GmMe$1.me.DrawHead();
    		else
    		{
    			var pfm = this.getfm(this.iMyPos);
    			var pfmpet = this.getfm(this.iMyPos + 10);
    			var ppet = MyPets$1.mp.GetUseingPet();

    			if(ppet==null)GmMe$1.me.DrawHeadEx(pfm.iHp,GmMe$1.me.rbs.iMaxHp,pfm.iMp,GmMe$1.me.rbs.iMaxMp,GmMe$1.me.rbs.iAnger,GmMe$1.me.rbs.iLev,-1,0,0,0,0,0,0);
    			else GmMe$1.me.DrawHeadEx(pfm.iHp,GmMe$1.me.rbs.iMaxHp,pfm.iMp,GmMe$1.me.rbs.iMaxMp,GmMe$1.me.rbs.iAnger,GmMe$1.me.rbs.iLev,ppet.iTid,pfmpet.iHp,ppet.iMaxHp,pfmpet.iMp,ppet.iMaxMp,ppet.iLev,ppet.iExp);
    		}
    		if (this.bShowHpDetail)this.DrawHpDetail();
    	}

    	Draw_UI1() {
    		M3DFast$1.gi().FillRect_2D(0, 0, this.iAlphaEffect, GmConfig$1.SCRH, 0xa0000618);

    		this.DrawHead();

    		if (this.iAlphaEffect >= GmConfig$1.SCRW)
    			GmPlay$1.xani_nui2.DrawAnimaEx(GmConfig$1.SCRW / 2 - 365,
    					(GmConfig$1.SCRH - 327) / 2 + 80, "背景图案", 1, 101, 2.0, 1, 0,
    					0, 0);
    		// M3DFast.gi().DrawTextEx(GmConfig.SCRW-100, 100, ""+GmMe.me.rbs.iAnger,
    		// 0xffffff00, 30, 101, 1, 1, 0, 0, 0);
    	}

    	Draw() {
    		var i, j;
    		var bClipSeted = false;
    		i = this.iAlphaEffect;// * GmConfig.SCRW / 1280;
    		if (i < GmConfig$1.SCRW) {
    			M3DFast$1.gi().SetViewClip(0, 0, i <= 0 ? 1 : i, GmConfig$1.SCRH);
    			bClipSeted = true;
    		}
    		DrawBuffer.gi().ClearBuffer();
    		for (i = 0; i < 4; i++) {
    			for (j = 0; j < GmMe$1.MAXTEAMOLE; j++) {
    				if (this.fat[i][j].bUseing) {
    					// m=this.fat[i][j].iX;
    					// n=this.fat[i][j].iY;

    					if (this.iFightStat > 100)
    						this.fat[i][j].bActed = true;
    					this.fat[i][j].Draw();
    					// btn_select[i][j].Move(this.fat[i][j].iX, this.fat[i][j].iY, 1, 1);
    					if (this.iFightStat == 4 || this.iFightStat == 14) {// 敌方
    						if (i >= 2)
    							DrawBuffer.gi()
    									.DrawAnima_aa(this.fat[i][j].iY + 1, null,
    											this.fat[i][j].iX, this.fat[i][j].iY - 40,
    											this.aa_select1);
    					}
    					if (this.iFightStat == 5 || this.iFightStat == 15) {// 己方
    						if (i < 2)
    							DrawBuffer.gi()
    									.DrawAnima_aa(this.fat[i][j].iY + 1, null,
    											this.fat[i][j].iX, this.fat[i][j].iY - 40,
    											this.aa_select2);
    					}
    				}
    				// else if(1==0)
    				// {
    				// if(i<=1)
    				// {
    				// DrawBuffer.gi().DrawAnima_aa(this.fat[i][j].iY-2,GmPlay.aa_shadow.xani,
    				// this.fat[i][j].iX, this.fat[i][j].iY, GmPlay.aa_shadow);//影子
    				// DrawBuffer.gi().DrawAnima_aa(this.fat[i][j].iY, null,this.fat[i][j].iX,
    				// this.fat[i][j].iY, this.fat[1][0].aa_body);
    				// }
    				// else
    				// {
    				// DrawBuffer.gi().DrawAnima_aa(this.fat[i][j].iY-2,GmPlay.aa_shadow.xani,
    				// this.fat[i][j].iX, this.fat[i][j].iY, GmPlay.aa_shadow);//影子
    				// DrawBuffer.gi().DrawAnima_aa(this.fat[i][j].iY, null,this.fat[i][j].iX,
    				// this.fat[i][j].iY, this.fat[2][0].aa_body);
    				// }
    				// }
    			}
    		}
    		this.aa_select1.NextFrame();// 可选转圈
    		this.aa_select2.NextFrame();
    		this.fat_base[0].Draw();// 全体状态显示
    		this.fat_base[1].Draw();
    		XFightEffect.fe.DrawGround();// 技能效果
    		DrawBuffer.gi().SortAndDraw();

    		NumberEffect.ne.Draw();// 数字

    		if (bClipSeted)
    			M3DFast$1.gi().NoClip();
    	}


    	Draw_UI2() {
    		if (this.iAlphaEffect < GmConfig$1.SCRW) {
    			M3DFast$1.gi().SetViewClip(0, 0, this.iAlphaEffect <= 0 ? 1 : this.iAlphaEffect,
    					GmConfig$1.SCRH);
    		}
    		var i;
    		this.btnmov();

    		FriendList$1.gi().Draw();// 私聊

    		if (this.iMyPos >= 100) {// 观战者，没有操作
    			if (this.iFightStat < 100)
    				this.iFightStat = 100;
    			this.btn_leavewatch.Move(GmConfig$1.SCRW - 83, GmConfig$1.SCRH - 83, 83, 83);
    			this.btn_leavewatch.Draw();
    			M3DFast$1.gi().DrawText_2(this.btn_leavewatch.iX + 40,
    					this.btn_leavewatch.iY + 80, this.btn_leavewatch.sAnimaName,
    					0xffffffff, this.wsize, 101, 1, 1, 0, -2, -3, 3, 0xff000000);
    		}

    		if (this.iFightStat <= 100) {
    			if (this.bFightFinished) {
    				this.iFightStat = 300;
    				this.iTimeOut = 0;
    			}
    		}
    		switch (this.iFightStat) {
    		case 0:// 等待操作,普通攻击，施法(技能)，防御，使用物品，逃跑，抓宠物，自动
    			if (JQMode.jq.bJQLock()) {
    				this.iCmd[0] = this.FIGHTACTION_DEFENCE;
    				this.iCmd[1] = 0;
    				this.iCmd[2] = 0;
    				this.FinishRoleOperate();
    				this.iCmd[0] = this.FIGHTACTION_DEFENCE;
    				this.iCmd[1] = 0;
    				this.iCmd[2] = 0;
    				this.FinishPetOperate();
    				break;
    			}
    			if (AutoFightFrame.aff.iAutoFightLast > 0) {
    				if (this.iWaited / 20 >= 3 || this.iRound > 1
    						|| this.iFightType != XFight.FIGHTWITH_DARK) {
    					this.iCmd[0] = this.iLastRoleCmd[0];
    					this.iCmd[1] = this.iLastRoleCmd[1];
    					this.iCmd[2] = this.iLastRoleCmd[2];
    					this.FinishRoleOperate();
    					this.iCmd[0] = this.iLastPetCmd[0];
    					this.iCmd[1] = this.iLastPetCmd[1];
    					this.iCmd[2] = this.iLastPetCmd[2];
    					this.FinishPetOperate();
    					AutoFightFrame.aff.iAutoFightLast--;
    				}
    				break;
    			}

    			for (i = 0; i < 8; i++)
    			{
    				this.btn_operate[i].Draw();
    				M3DFast$1.gi().DrawText_2(this.btn_operate[i].iX + 40,this.btn_operate[i].iY + 80, this.btn_operate[i].sAnimaName,0xfffdf5e8, this.wsize, 101, 1, 1, 0, -2, -3, 3, 0xff1a0000);
    			}
    			if (this.iFightType == XFight.FIGHTWITH_DARK	|| (this.iFightType == XFight.FIGHTWITH_NPC && this.fat[2][0].bUseing && this.fat[2][0].sName=="野猪"))
    			{
    				this.btn_operate[8].Draw();// 和野怪战斗中有捕捉按钮
    				i = 8;
    				M3DFast$1.gi().DrawText_2(this.btn_operate[i].iX + 40,this.btn_operate[i].iY + 80, this.btn_operate[i].sAnimaName,0xfffdf5e8, this.wsize, 101, 1, 1, 0, -2, -3, 3, 0xff1a0000);
    			}
    			if (XFightSpecialSkill.xss.iSkillCount > 0)
    			{
    				this.btn_operate[9].Draw();
    				i = 9;
    				M3DFast$1.gi().DrawText_2(this.btn_operate[i].iX + 40,this.btn_operate[i].iY + 80, this.btn_operate[i].sAnimaName,0xfffdf5e8, this.wsize, 101, 1, 1, 0, -2, -3, 3, 0xff1a0000);
    			}
    //			M3DFast.gi().DrawText_2(btn_list1[i].iX+36, btn_list1[i].iY+71, btn_list1[i].sAnimaName, 0xfffdf5e8, this.wsize, 101, 1, 1, 0, -2, -3,3,0xff1a0000);
    			// if(AutoFightFrame.aff.iAutoFightLast>0)
    			// {//自动延续上次攻击动作
    			// this.iCmd[0]=this.iLastRoleCmd[0];
    			// this.iCmd[1]=this.iLastRoleCmd[1];
    			// this.iCmd[2]=this.iLastRoleCmd[2];
    			// this.FinishRoleOperate();
    			// this.iCmd[0]=this.iLastPetCmd[0];
    			// this.iCmd[1]=this.iLastPetCmd[1];
    			// this.iCmd[2]=this.iLastPetCmd[2];
    			// this.FinishPetOperate();
    			// AutoFightFrame.aff.iAutoFightLast--;
    			// }
    			if (Confirm1.end(Confirm1.CONFIRM_ESCAPE)) {//
    				if (Confirm1.bConfirm) {// 同意逃跑
    					this.iCmd[0] = this.FIGHTACTION_ESCAPE;
    					this.iCmd[1] = 0;
    					this.iCmd[2] = 0;
    					this.FinishRoleOperate();
    				}
    			}
    			break;
    		case 6:// 特技
    			XFightSpecialSkill.xss.DrawSpecialSkill();
    			break;
    		case 1:// 选择门派技能
    			XFightRoleSkill.xfs.DrawFightSkill();
    			break;
    		case 2:// 选择物品使用
    		case 12:
    			XFightGoods.xfg.DrawFightGoods();
    			break;
    		case 3:// 选择宠物招出来
    			XFightCallPet.xfcp.DrawCallPet();
    			break;
    		case 10://
    			for (i = 0; i < 6; i++)
    			{
    				this.btn_petoperate[i].Draw();
    				M3DFast$1.gi().DrawText_2(this.btn_petoperate[i].iX + 40,this.btn_petoperate[i].iY + 80,this.btn_petoperate[i].sAnimaName, 0xfffdf5e8, this.wsize, 101,1, 1, 0, -2, -3, 3, 0xff1a0000);
    			}
    			if (AutoFightFrame.aff.iAutoFightLast > 0) {// 自动延续上次攻击动作
    				this.iCmd[0] = this.iLastPetCmd[0];
    				this.iCmd[1] = this.iLastPetCmd[1];
    				this.iCmd[2] = this.iLastPetCmd[2];
    				this.FinishPetOperate();
    				AutoFightFrame.aff.iAutoFightLast--;
    			}
    			if (Confirm1.end(Confirm1.CONFIRM_ESCAPE)) {//
    				if (Confirm1.bConfirm) {// 同意逃跑
    					this.iCmd[0] = this.FIGHTACTION_ESCAPE;
    					this.iCmd[1] = 0;
    					this.iCmd[2] = 0;
    					this.FinishPetOperate();
    				}
    			}
    			break;
    		case 11:// 宠物选择技能
    			XFightPetSkill.xfps.Draw();
    			break;
    		case 4:// 人物选择敌方
    		case 5:// 人物选择己方
    		case 14:// 宠物选择敌方
    		case 15:// 宠物选择的己方
    			this.btn_cancel.Draw();
    			M3DFast$1.gi().DrawText_2(this.btn_cancel.iX + 40, this.btn_cancel.iY + 80,
    					this.btn_cancel.sAnimaName, 0xffffffff, this.wsize, 101, 1, 1, 0, -2,
    					-3, 3, 0xff000000);
    			break;
    		case 100:// 等待其他人操作
    			break;
    		case 200:// 播放战斗动画
    			this.ProcFightData();
    			break;
    		case 300:
    			this.iTimeOut++;
    			if (this.iTimeOut > 15)
    				this.iAlphaEffect -= GmConfig$1.SCRW / 4;
    			if (this.iTimeOut > 23) {
    				XFight.bFighting = false;
    				this.ClearPopo();
    				DiePrompt.Open();
    			}
    			break;
    		}
    		if (XFight.bFighting) {
    			i = 20;
    			if (this.iFightStat < 100) {// 操作倒计时
    				if (this.iWaited < 30 * i)
    					this.iWaited++;
    				else
    					this.iFightStat = 100;
    				NumberEffect.ne.Draw_TimeNumber(GmConfig$1.SCRW / 2, 150,
    						(30 - this.iWaited / i));
    				// M3DFast.gi().DrawTextEx(GmConfig.SCRW/2, 100, ""+(30-this.iWaited/i),
    				// 0xffffffff, 80, 101, 1, 1, 0, -2, -2);
    			} else if (this.iFightStat == 100) {// 等待
    				GmPlay$1.xani_nui4.DrawAnima(GmConfig$1.SCRW / 2, 150, "倒计时等待", 0);
    				// M3DFast.gi().DrawTextEx(GmConfig.SCRW/2, 100, "等待", 0xffff0000, 80,
    				// 101, 1, 1, 0, -2, -2);
    			}
    		}
    		GmPlay$1.xani_nui4.DrawAnima(GmConfig$1.SCRW / 2, 0, "战斗顶部UI", 0);
    		GmPlay$1.xani_nui4.DrawAnimaEx(GmConfig$1.SCRW / 2 - 49+(120*(1-this.iShiQi[1] / 120)-3), 1, "战斗顶部UI", 1,
    				101, 1.0 * this.iShiQi[1] / 120, 1, 0, 0, 0);
    		GmPlay$1.xani_nui4.DrawAnimaEx(GmConfig$1.SCRW / 2 + 49, 1, "战斗顶部UI", 2,
    				101, 1.0 * this.iShiQi[0] / 120, 1, 0, 0, 0);
    		// GmPlay.xani_nui4.DrawAnimaEx(GmConfig.SCRW/2 ,0, "战斗顶部UI",1, 101, 1,
    		// 1, (120-this.iShiQi[1])/2, GmConfig.SCRW/2, -4);
    		// GmPlay.xani_nui4.DrawAnimaEx(GmConfig.SCRW/2 ,0, "战斗顶部UI",2, 101, 1,
    		// 1,360-(120-this.iShiQi[0])/2, GmConfig.SCRW/2, -4);

    		// 120最大值
    		// GmPlay.xani_ui.DrawAnima(GmConfig.SCRW/2 ,0, "士气UI",1);
    		// this.jdjd++;
    		// if(this.jdjd>=60)this.jdjd=0;
    		//
    		M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW / 2 + 82, 45, "" + this.iShiQi[0], 0xff0080ff,
    				28, 101, 1, 1, 0, -2, -3);
    		M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW / 2 - 82, 45, "" + this.iShiQi[1], 0xffff0000,
    				28, 101, 1, 1, 0, -2, -3);
    		NumberEffect.ne.Draw_RoundNumber(GmConfig$1.SCRW / 2, 45, this.iRound);

    		if (this.iAlphaEffect < GmConfig$1.SCRW) {
    			M3DFast$1.gi().NoClip();
    			this.iAlphaEffect += GmConfig$1.SCRW / 8;
    			// this.iAlphaEffect+=5;
    		}
    	}

    	ClearPopo() {
    		Gameing.gameing.ClearPopo();
    	}

    	

    	 bHavePet( pos) {
    		GmPlay$1.sop("pos=" + pos);
    		return this.fat[parseInt(pos / 10) + 1][pos % 10].bUseing;
    	}

    	  SelectOur( x,  y) {// DrawBuffer.gi().DrawAnima_aa(this.fat[i][j].iY+1,
    										// null, this.fat[i][j].iX, this.fat[i][j].iY-40,
    										// aa_select);
    		// x = TouchManager._swapx(x);
    		// y = TouchManager._swapy(y);
    		var i, j;
    		for (i = 0; i < 2; i++) {
    			for (j = 0; j < GmMe$1.MAXTEAMOLE; j++) {
    				if (this.fat[i][j].bUseing) {
    					if (XDefine$1.bInRect(x, y, this.fat[i][j].iX - 30,
    							this.fat[i][j].iY - 40 - 30, 60, 60)) {// 点击了敌人
    						return i * 10 + j;
    					}
    				}
    			}
    		}
    		for (i = 0; i < 2; i++) {
    			for (j = 0; j < GmMe$1.MAXTEAMOLE; j++) {
    				if (this.fat[i][j].bUseing) {
    					if (this.fat[i][j].xani.bInAnima(this.fat[i][j].aa_body,
    							this.fat[i][j].iOx, this.fat[i][j].iOy, x, y)) {// 点击了敌人
    						return i * 10 + j;
    					}
    				}
    			}
    		}
    		return -1;
    	}

    	  SelectEnemy( x,  y) {
    		// x = TouchManager._swapx(x);
    		// y = TouchManager._swapy(y);
    		var i, j;
    		for (i = 2; i < 4; i++) {
    			for (j = 0; j < GmMe$1.MAXTEAMOLE; j++) {
    				if (this.fat[i][j].bUseing) {
    					if (XDefine$1.bInRect(x, y, this.fat[i][j].iX - 30,
    							this.fat[i][j].iY - 40 - 30, 60, 60)) {// 点击了敌人
    						return i * 10 + j;
    					}
    				}
    			}
    		}
    		for (i = 2; i < 4; i++) {
    			for (j = 0; j < GmMe$1.MAXTEAMOLE; j++) {
    				if (this.fat[i][j].bUseing) {
    					if (this.fat[i][j].xani.bInAnima(this.fat[i][j].aa_body,
    							this.fat[i][j].iOx, this.fat[i][j].iOy, x, y)) {// 点击了敌人
    						return i * 10 + j;
    					}
    				}
    			}
    		}
    		return -1;
    	}

    	/*
    	 * this.btn_operate[0].sName="法术"; this.btn_operate[1].sName="道具";
    	 * this.btn_operate[2].sName="保护"; this.btn_operate[3].sName="防御";
    	 * this.btn_operate[4].sName="召唤"; this.btn_operate[5].sName="召还";
    	 * this.btn_operate[6].sName="自动"; this.btn_operate[7].sName="逃跑";
    	 * this.btn_operate[8].sName="捕捉";
    	 * 
    	 * this.btn_petoperate[0].sName="法术"; this.btn_petoperate[1].sName="道具";
    	 * this.btn_petoperate[2].sName="保护"; this.btn_petoperate[3].sName="防御";
    	 * this.btn_petoperate[4].sName="逃跑";
    	 */
    	 ProcTouch( msg,  x,  y) {
    		this.bShowHpDetail = false;
    		if (this.iAlphaEffect < GmConfig$1.SCRW) {
    			TouchManager.gi().clear();
    			return true;
    		}
    		if (this.iMyPos >= 100) {// 观战者，没有操作
    			if (this.btn_leavewatch.ProcTouch(msg, x, y)) {
    				if (this.btn_leavewatch.bCheck()) {
    					this.btn_leavewatch.SetNormal();
    					GmProtocol$1.gi().s_WatchFight(1, 0);// 离开观战
    					this.iFightStat = 300;
    					this.iTimeOut = 0;
    				}
    			}
    			return true;
    		}

    		var i;
    		switch (this.iFightStat) {
    		case 0:// 人物_选择操作类型
    			if (AutoFightFrame.aff.iAutoFightLast > 0)
    				break;
    			for (i = 0; i < 10; i++) {
    				if (i == 9) {
    					if (XFightSpecialSkill.xss.iSkillCount > 0)
    						;// 有装备技能
    					else
    						continue;
    				}
    				if (i == 8) {
    					if (this.iFightType == XFight.FIGHTWITH_DARK
    							|| (this.iFightType == XFight.FIGHTWITH_NPC && this.fat[2][0].sName=="野猪"))
    						;// 和野怪战斗中有捕捉按钮
    					else
    						continue;

    				}
    				if (this.btn_operate[i].ProcTouch(msg, x, y)) {
    					if (this.btn_operate[i].bCheck()) {
    						this.btn_operate[i].SetNormal();
    						switch (i) {
    						case 0:// 法术
    							// if(GmMe.me.rbs.iSchoolId==0)
    							// {
    							// EasyMessage.easymsg.AddMessage("未拜入门派，无可用法术");
    							// }
    							// else
    						{
    							this.iCmd[0] = this.FIGHTACTION_MAGIC;
    							this.iFightStat = 1;
    							XFightRoleSkill.xfs.iShowPoint = -1;
    						}
    							break;
    						case 1:// 使用物品
    							this.iCmd[0] = this.FIGHTACTION_USEGOODS;
    							this.iFightStat = 2;
    							XFightGoods.xfg.InitFightGoods();
    							break;
    						case 2:// 保护
    							this.iCmd[0] = this.FIGHTACTION_PROTECT;
    							this.iFightStat = 5;// 选择己方成员
    							break;
    						case 3:// 防御
    							this.iCmd[0] = this.FIGHTACTION_DEFENCE;
    							this.iCmd[1] = 0;
    							this.iCmd[2] = 0;
    							this.FinishRoleOperate();
    							break;
    						case 4:// 召唤
    							if (XFightCallPet.xfcp.InitCallPet() <= 0) {
    								EasyMessage.easymsg.AddMessage("当前没有宠物可召唤");
    							} else {
    								this.iCmd[0] = this.FIGHTACTION_CALLBB;
    								this.iCmd[1] = 0;
    								this.iFightStat = 3;// 选择我的宠物来招出来
    							}
    							break;
    						case 5:// 召还
    							this.iCmd[0] = this.FIGHTACTION_CALLBACKBB;
    							this.FinishRoleOperate();
    							break;
    						case 6:// 自动，倒计时减
    							this.iWaited += 60;
    							AutoFightFrame.aff.iAutoFightLast = AutoFightFrame.AUTOLAST;
    							break;
    						case 7:// 逃跑
    							Confirm1.start(Confirm1.CONFIRM_ESCAPE, "是否确定逃跑？");
    							// this.iCmd[0]=this.FIGHTACTION_ESCAPE;
    							// this.iCmd[1]=0;
    							// this.iCmd[2]=0;
    							// this.FinishRoleOperate();
    							break;
    						case 8:// 捕捉
    							this.iCmd[0] = this.FIGHTACTION_CATCH;
    							this.iCmd[1] = 0;
    							this.iFightStat = 4;// 选择目标进行捕捉
    							break;
    						case 9:// 特技
    							this.iCmd[0] = this.FIGHTACTION_SPECIAL;
    							this.iFightStat = 6;
    							XFightSpecialSkill.xss.iShowPoint = -1;
    							break;
    						}
    					}
    				}
    			}
    			this.iEnemyPoint = this.SelectEnemy(x, y);
    			if (msg == 3 && this.iEnemyPoint != -1) {// 直接点击怪物攻击
    				this.iCmd[0] = this.FIGHTACTION_NORMAL;
    				this.iCmd[1] = 0;
    				this.iCmd[2] = this.iEnemyPoint;
    				this.FinishRoleOperate();
    			}
    			break;
    		case 6:// 人物_选择特技
    			if (XFightSpecialSkill.xss.ProcTouch(msg, x, y)) {
    				if (XFightSpecialSkill.xss.iUseSkillId == -1)
    					this.iFightStat = 0;
    				else {
    					this.iCmd[1] = XFightSpecialSkill.xss.iUseSkillId;
    					if (XFightSpecialSkill.xss.iSelectTarget <= 0) {
    						this.iCmd[2] = 0;
    						this.FinishRoleOperate();
    					} else if (XFightSpecialSkill.xss.iSelectTarget == 1)
    						this.iFightStat = 5;// 选择己方
    					else
    						this.iFightStat = 4;// 选择敌方
    				}
    			}
    			break;
    		case 1:// 人物_选择法术
    			if (XFightRoleSkill.xfs.ProcTouch(msg, x, y)) {
    				if (XFightRoleSkill.xfs.iUseSkillId == -1)
    					this.iFightStat = 0;
    				else {
    					this.iCmd[1] = XFightRoleSkill.xfs.iUseSkillId;
    					if (XFightRoleSkill.xfs.iSelectTarget <= 0) {
    						this.iCmd[2] = 0;
    						this.FinishRoleOperate();
    					} else if (XFightRoleSkill.xfs.iSelectTarget == 1)
    						this.iFightStat = 5;// 选择己方
    					else
    						this.iFightStat = 4;// 选择敌方
    				}
    			}
    			break;
    		case 2:// 人物_选择物品
    			XFightGoods.xfg.ProcTouch(msg, x, y);
    			if (XFightGoods.xfg.bReturn)
    				this.iFightStat = 0;
    			else if (XFightGoods.xfg.bSelectFinished) {// 选择了物品，选择使用对象
    				this.lastusegoods1 = XFightGoods.xfg.lockgoods;
    				this.iCmd[1] = XFightGoods.xfg.lockgoods.iGid;
    				if (XFightGoods.xfg.bUseToDest)
    					this.iFightStat = 4;
    				else if (XFightGoods.xfg.bFood) {// 烹饪只能给自己吃，不用选择使用目标
    					this.iCmd[2] = 0;
    					this.FinishRoleOperate();
    				} else
    					this.iFightStat = 5;
    			}
    			break;
    		case 3:// 人物_选择宠物招出来
    			if (XFightCallPet.xfcp.ProcTouch(msg, x, y)) {
    				if (XFightCallPet.xfcp.iCallPetId == -1) {
    					this.iFightStat = 0;
    				} else {
    					this.iCmd[1] = XFightCallPet.xfcp.iCallPetId;
    					this.iCmd[2] = XFightCallPet.xfcp.iCallPetId;
    					this.FinishRoleOperate();
    				}
    			}
    			break;
    		case 4:// 人物_选择目标
    			if (this.btn_cancel.ProcTouch(msg, x, y)) {
    				if (this.btn_cancel.bCheck()) {
    					this.iFightStat = 0;
    					this.btn_cancel.SetNormal();
    				}
    				break;
    			}
    			this.iEnemyPoint = this.SelectEnemy(x, y);
    			if (msg == 3 && this.iEnemyPoint != -1) {
    				this.iCmd[2] = this.iEnemyPoint;
    				this.FinishRoleOperate();
    			}
    			break;
    		case 5:// 人物_选择己方
    			if (this.btn_cancel.ProcTouch(msg, x, y)) {
    				if (this.btn_cancel.bCheck()) {
    					this.btn_cancel.SetNormal();
    					this.iFightStat = 0;
    				}
    				break;
    			}
    			this.iOurPoint = this.SelectOur(x, y);
    			if (msg == 3 && this.iOurPoint != -1) {
    				this.iCmd[2] = this.iOurPoint;
    				this.FinishRoleOperate();
    			}
    			break;
    		case 10:// 宠物_操作类型
    			for (i = 0; i < 6; i++) {
    				if (this.btn_petoperate[i].ProcTouch(msg, x, y)) {
    					if (this.btn_petoperate[i].bCheck()) {
    						this.btn_petoperate[i].SetNormal();
    						switch (i) {
    						case 0:// 法术
    							if (XFightPetSkill.xfps.InitPetSkill(MyPets$1.mp
    									.GetUseingPet()) <= 0) {
    								EasyMessage.easymsg.AddMessage("当前宠物没有主动技能");
    							} else {
    								this.iCmd[0] = this.FIGHTACTION_MAGIC;
    								this.iFightStat = 11;
    							}
    							break;
    						case 1:// 使用物品
    							this.iCmd[0] = this.FIGHTACTION_USEGOODS;
    							this.iFightStat = 12;
    							XFightGoods.xfg.InitFightGoods();
    							break;
    						case 2:// 保护
    							this.iCmd[0] = this.FIGHTACTION_PROTECT;
    							this.iFightStat = 15;// 选择己方成员
    							break;
    						case 3:// 宠物防御
    							this.iCmd[0] = this.FIGHTACTION_DEFENCE;
    							this.iCmd[1] = 0;
    							this.iCmd[2] = 0;
    							this.FinishPetOperate();
    							break;
    						case 4:// 逃跑
    							Confirm1.start(Confirm1.CONFIRM_ESCAPE, "宠物是否确定逃跑？");
    							// this.iCmd[0]=this.FIGHTACTION_ESCAPE;
    							// this.iCmd[1]=0;
    							// this.iCmd[2]=0;
    							// this.FinishPetOperate();
    							break;
    						case 5:// 自动
    							AutoFightFrame.aff.iAutoFightLast = AutoFightFrame.AUTOLAST;
    							break;
    						}
    					}
    				}
    			}
    			this.iEnemyPoint = this.SelectEnemy(x, y);
    			if (msg == 3 && this.iEnemyPoint != -1) {
    				this.iCmd[0] = this.FIGHTACTION_NORMAL;
    				this.iCmd[1] = 0;
    				this.iCmd[2] = this.iEnemyPoint;
    				this.FinishPetOperate();
    			}
    			break;
    		case 11:// 宠物_选择法术
    			if (XFightPetSkill.xfps.ProcTouch(msg, x, y)) {
    				if (XFightPetSkill.xfps.bReturn)
    					this.iFightStat = 10;
    				if (XFightPetSkill.xfps.bUsed) {// 选择目标使用，判断法术施放目标是敌人还是己方
    					this.iCmd[1] = XFightPetSkill.xfps.iUseSkillId;
    					this.iFightStat = 14;
    				}
    			}
    			break;
    		case 12:// 宠物_选择物品
    			XFightGoods.xfg.ProcTouch(msg, x, y);
    			if (XFightGoods.xfg.bReturn)
    				this.iFightStat = 10;
    			else if (XFightGoods.xfg.bSelectFinished) {// 选择了物品，选择使用对象
    				this.lastusegoods2 = XFightGoods.xfg.lockgoods;
    				this.iCmd[1] = XFightGoods.xfg.lockgoods.iGid;
    				this.iFightStat = 15;
    			}
    			break;
    		case 14:// 宠物_选择目标
    			if (this.btn_cancel.ProcTouch(msg, x, y)) {
    				if (this.btn_cancel.bCheck()) {
    					this.btn_cancel.SetNormal();
    					this.iFightStat = 10;
    				}
    				break;
    			}
    			this.iEnemyPoint = this.SelectEnemy(x, y);
    			if (msg == 3 && this.iEnemyPoint != -1) {
    				this.iCmd[2] = this.iEnemyPoint;
    				this.FinishPetOperate();
    			}
    			break;
    		case 15:// 宠物_选择己方
    			if (this.btn_cancel.ProcTouch(msg, x, y)) {
    				if (this.btn_cancel.bCheck()) {
    					this.btn_cancel.SetNormal();
    					this.iFightStat = 10;
    				}
    				break;
    			}
    			this.iOurPoint = this.SelectOur(x, y);
    			if (msg == 3 && this.iOurPoint != -1) {
    				this.iCmd[2] = this.iOurPoint;
    				this.FinishPetOperate();
    			}
    			break;
    		}
    		if (this.iFightStat == 0 || this.iFightStat >= 100) {// 长按
    			if (msg == 1) {// 按下开始计时
    				i = this.SelectOur(x, y);
    				if (i == -1)
    					i = this.SelectEnemy(x, y);
    				if (i != -1) {

    				}
    			}
    		}
    		if ((msg == 2 || msg == 1)
    				&& XDefine$1.bInRect(x, y, GmConfig$1.SCRW - 191, 0, 108, 80)) {// 在人物血条按下或移动
    			this.bShowHpDetail = true;
    			return true;
    		}
    		return false;
    	}

    	// int iPoint
    	 FinishPetOperate() {
    		if (this.iCmd[0] == this.FIGHTACTION_USEGOODS) {
    			if (this.lastusegoods2.iGid == -1) {// 已经用完
    				this.iCmd[0] = this.FIGHTACTION_NORMAL;
    				this.iCmd[1] = 0;
    				this.iCmd[2] = -1;
    			} else {
    				// int k=GmPlay.de_goods.intValue(this.lastusegoods2.iTid, 0,
    				// 28);//是否可叠加
    				// if(k<=1)this.lastusegoods2.iGid=-1;
    				// else
    				// {
    				// this.lastusegoods2.iCount--;
    				// if(this.lastusegoods2.iCount<=0)this.lastusegoods2.iGid=-1;
    				// }
    			}
    		}
    		this.iLastPetCmd[0] = this.iCmd[0];
    		this.iLastPetCmd[1] = this.iCmd[1];
    		this.iLastPetCmd[2] = this.iCmd[2];
    		this.iCmd[2] = this.SwapPos(this.iCmd[2]);
    		GmProtocol$1.gi().s_FightOperate(1, this.iCmd);
    		this.iFightStat = 100;
    	}

    	 FinishRoleOperate() {// 结束操作，把操作发到服务器，进入等待
    		if (this.iCmd[0] == this.FIGHTACTION_USEGOODS) {
    			if (this.lastusegoods1.iGid == -1) {
    				this.iCmd[0] = this.FIGHTACTION_NORMAL;
    				this.iCmd[1] = 0;
    				this.iCmd[2] = -1;
    			} else {
    				// int k=GmPlay.de_goods.intValue(this.lastusegoods1.iTid, 0, 28);
    				// if(k<=1)this.lastusegoods1.iGid=-1;
    				// else
    				// {
    				// this.lastusegoods1.iCount--;
    				// if(this.lastusegoods1.iCount<=0)this.lastusegoods1.iGid=-1;
    				// }
    			}
    		}
    		this.iLastRoleCmd[0] = this.iCmd[0];
    		this.iLastRoleCmd[1] = this.iCmd[1];
    		this.iLastRoleCmd[2] = this.iCmd[2];
    		this.iCmd[2] = this.SwapPos(this.iCmd[2]);
    		GmProtocol$1.gi().s_FightOperate(0, this.iCmd);
    		if (this.bHavePet(this.iMyPos))
    			this.iFightStat = 10;// 跳到宠物操作
    		else
    			this.iFightStat = 100;// 直接结束，进入等待状态
    	}

    	 getfm( pos) {
    		// GmPlay.sop("pos="+pos);
    		if (pos % 10 == 5)
    		{//
    			if (parseInt(pos / 10) < 2)
    				return this.fat_base[0];// 己方
    			else
    				return this.fat_base[1];// 对方
    		}
    		else return this.fat[parseInt(pos / 10)][pos % 10];
    	}

    	ProcFightData() {
    		var i, j;
    		var pfd;
    		var pfm;
    		var bBreak = false;
    		// GmPlay.sop("this.iFDPoint="+this.iFDPoint+"   this.iTimeStamp="+this.fds[this.iFDPoint].iTimeStamp);
    		while (this.fds[this.iFDPoint].iTimeStamp <= this.iTimeStamp && this.iFDPoint < this.iFDCount) {
    			// GmPlay.sop("this.iFDPoint="+this.iFDPoint+"   this.iTimeStamp="+this.fds[this.iFDPoint].iTimeStamp);
    			pfd = this.fds[this.iFDPoint];
    			switch (pfd.iActType) {
    			case 0:// 移动
    				pfd.bActing = true;
    				pfd.iValues[1] = 0;
    				this.getfm(pfd.iAPos).iDx = this.getfm(pfd.iValues[0]).iOx
    						+ this.getfm(pfd.iAPos).iMoveOffX;
    				this.getfm(pfd.iAPos).iDy = this.getfm(pfd.iValues[0]).iOy
    						+ this.getfm(pfd.iAPos).iMoveOffY;
    				break;
    			case 18:// 保护
    				pfd.bActing = true;
    				pfd.iValues[1] = 0;
    				this.getfm(pfd.iAPos).iDx = this.getfm(pfd.iValues[0]).iOx
    						- this.getfm(pfd.iAPos).iMoveOffX / 2;
    				this.getfm(pfd.iAPos).iDy = this.getfm(pfd.iValues[0]).iOy
    						- this.getfm(pfd.iAPos).iMoveOffY / 2;
    				break;// xxxx
    			case 1:// 普通攻击
    				pfm = this.getfm(pfd.iAPos);
    				pfm.AddAnima("普通攻击");
    				if (pfm.iType == 0 || (pfm.iType == 2 && pfm.iSpecialType == 1)) {// 人物，或怪物变人
    					if (pfm.iSex == 0)
    						GmPlay$1.x_wav.StartWav("role0_attack", false);
    					else
    						GmPlay$1.x_wav.StartWav("role1_attack", false);
    				} else if (pfm.iType == 1
    						|| (pfm.iType == 2 && pfm.iSpecialType != 1)) {
    					GmPlay$1.x_wav.StartWav_Pet(pfm.iTid % 10000, 0);
    				}
    				break;
    			case 2:// 受到伤害
    				pfm = this.getfm(pfd.iAPos);
    				pfm.AddAnima("被攻击");
    				if (pfm.iType == 0 || (pfm.iType == 2 && pfm.iSpecialType == 1)) {
    					if (pfm.iSex == 0)
    						GmPlay$1.x_wav.StartWav("role0_hurt", false);
    					else
    						GmPlay$1.x_wav.StartWav("role1_hurt", false);
    				} else if (pfm.iType == 1
    						|| (pfm.iType == 2 && pfm.iSpecialType != 1)) {
    					GmPlay$1.x_wav.StartWav_Pet(pfm.iTid % 10000, 2);
    				}
    				break;
    			case 3:// 防御
    				pfm = this.getfm(pfd.iAPos);
    				pfm.AddAnima("防御");
    				GmPlay$1.x_wav.StartWav("defence", false);
    				XFightEffect.fe.AddEffect2(pfm.iX, pfm.iY, 10, "防御",
    						pfd.iAPos / 10 < 2 ? false : true);
    				break;
    			case 4:// 返回原地
    				pfd.bActing = true;
    				pfd.iValues[1] = 0;
    				break;
    			case 5:// 延迟
    				this.iDelay++;
    				if (this.iDelay < pfd.iAPos) {
    					bBreak = true;
    					break;
    				}
    				this.iDelay = 0;
    				break;
    			case 6:// 一个人行动完
    				this.iTimeStamp = 0;
    				break;
    			case 7:// 死亡
    				pfm = this.getfm(pfd.iAPos);
    				if (pfd.iValues[0] == 0) {
    					pfm.AddAnima("死亡过程");
    					pfm.SetBaseAnima("死亡");
    					if (pfm.iType == 0
    							|| (pfm.iType == 2 && pfm.iSpecialType == 1)) {
    						if (pfm.iSex == 0)
    							GmPlay$1.x_wav.StartWav("role0_die", false);
    						else
    							GmPlay$1.x_wav.StartWav("role1_die", false);
    					} else if (pfm.iType == 1
    							|| (pfm.iType == 2 && pfm.iSpecialType != 1)) {
    						GmPlay$1.x_wav.StartWav_Pet(pfm.iTid % 10000, 3);
    					}
    				} else {
    					pfm.SetBaseAnima("战斗站立");
    				}
    				break;
    			case 8:// 逃跑
    			case 25:// 逃跑失败
    				this.getfm(pfd.iAPos).iDx = this.getfm(pfd.iAPos).iOx
    						+ this.getfm(pfd.iAPos).iMoveOffX * 6;
    				this.getfm(pfd.iAPos).iDy = this.getfm(pfd.iAPos).iOy
    						+ this.getfm(pfd.iAPos).iMoveOffY * 6;
    				this.getfm(pfd.iAPos).SetBaseAnima("逃跑");
    				pfd.iValues[1] = 0;
    				pfd.bActing = true;
    				GmPlay$1.x_wav.StartWav("escape", false);
    				break;
    			case 21:// 行走
    				pfm = this.getfm(pfd.iAPos);
    				// GmPlay.sop1("apos="+pfd.iAPos+",,,value0="+pfd.iValues[0]);
    				if (pfd.iAPos == pfd.iValues[0]) {
    					this.getfm(pfd.iAPos).iDx = this.getfm(pfd.iValues[0]).iOx;
    					this.getfm(pfd.iAPos).iDy = this.getfm(pfd.iValues[0]).iOy;
    				} else {
    					this.getfm(pfd.iAPos).iDx = this.getfm(pfd.iValues[0]).iOx
    							+ this.getfm(pfd.iAPos).iMoveOffX;
    					this.getfm(pfd.iAPos).iDy = this.getfm(pfd.iValues[0]).iOy
    							+ this.getfm(pfd.iAPos).iMoveOffY;
    				}
    				if (pfm.iPos < 20 && pfm.iDx > pfm.iX)
    					pfm.FaceTo(false);
    				if (pfm.iPos >= 20 && pfm.iDx < pfm.iX)
    					pfm.FaceTo(false);
    				this.getfm(pfd.iAPos).iTx = this.getfm(pfd.iAPos).iX;
    				this.getfm(pfd.iAPos).iTy = this.getfm(pfd.iAPos).iY;
    				this.getfm(pfd.iAPos).SetBaseAnima("跑步");
    				pfd.iValues[3] = 0;
    				pfd.bActing = true;
    				break;
    			case 19:// 打飞出场
    				pfd.iValues[1] = 0;
    				pfd.bActing = true;
    				this.getfm(pfd.iAPos).iFlying = 1;
    				break;
    			case 17:// 闪避
    				// this.getfm(pfd.iAPos).iDx=this.getfm(pfd.iAPos).iOx+this.getfm(pfd.iAPos).iMoveOffX*3;
    				// this.getfm(pfd.iAPos).iDy=this.getfm(pfd.iAPos).iOy;
    				pfd.iValues[1] = 0;
    				pfd.bActing = true;
    				break;
    			case 9:// 改变状态
    				this.getfm(pfd.iAPos).ChangeStatus(pfd.iValues[0], pfd.iValues[1]);
    				break;
    			case 24:// 改变怒气
    				if (this.getfm(pfd.iAPos).bMe)
    					GmMe$1.me.rbs.iAnger = pfd.iValues[0];
    				// fgh
    				// this.getfm(pfd.iAPos).iAnger=pfd.iValues[0];
    				break;
    			case 12:// 改变血蓝
    				// i=pfd.iValues[0]-this.getfm(pfd.iAPos).iHp;//掉多少血
    				NumberEffect.ne.AddEffect(this.getfm(pfd.iAPos).iX,
    						this.getfm(pfd.iAPos).iY - 80, pfd.iValues[0]
    								- this.getfm(pfd.iAPos).iHp);
    				this.getfm(pfd.iAPos).iHp = pfd.iValues[0];
    				this.getfm(pfd.iAPos).iMp = pfd.iValues[1];
    				if (this.getfm(pfd.iAPos).iHp < 0)
    					this.getfm(pfd.iAPos).iHp = 0;
    				if (this.getfm(pfd.iAPos).iMp < 0)
    					this.getfm(pfd.iAPos).iMp = 0;

    				// GmPlay.sop("sdf==="+this.getfm(pfd.iAPos).iMp);
    				break;
    			case 13:// 直接消失
    				this.getfm(pfd.iAPos).bUseing = false;
    				break;
    			case 14:// 使用技能
    				pfm = this.getfm(pfd.iAPos);
    				pfm.AddAnima("施法");
    				if (pfm.iType == 0 || (pfm.iType == 2 && pfm.iSpecialType == 1)) {
    					if (pfm.iSex == 0)
    						GmPlay$1.x_wav.StartWav("role0_magic", false);
    					else
    						GmPlay$1.x_wav.StartWav("role1_magic", false);
    				} else if (pfm.iType == 1
    						|| (pfm.iType == 2 && pfm.iSpecialType != 1)) {
    					GmPlay$1.x_wav.StartWav_Pet(pfm.iTid % 10000, 1);
    				}
    				break;
    			case 26:// 飞刀效果
    				pfm = this.getfm(pfd.iValues[0]);// 目标fat
    				GmPlay$1.sop("目标:" + pfd.iValues[0]);
    				XFightEffect.fe.AddDarts(this.getfm(pfd.iAPos).iX,
    						this.getfm(pfd.iAPos).iY, pfm.iX, pfm.iY, pfd.iValues[1],
    						pfd.iValues[2]);
    				break;
    			case 27://技能名称展示
    				pfm=this.getfm(pfd.iAPos);
    				pfm.InitSN(pfd.iValues[0]);
    				break;
    			case 15:// 效果
    				pfm = this.getfm(pfd.iValues[0]);// 目标fat
    				XFightEffect.fe.AddEffect(pfm.iX, pfm.iY, pfd.iValues[1],
    						pfd.iAPos / 10 < 2 ? false : true);
    				break;
    			case 23:// 带名字的效果
    				pfm = this.getfm(pfd.iValues[0]);// 目标fat
    				XFightEffect.fe.AddEffect2(pfm.iX, pfm.iY, pfd.iValues[1],
    						pfd.sValue, pfd.iAPos / 10 < 2 ? false : true);
    				break;
    			case 16:// 士气更新
    				this.iShiQi[0] = pfd.iValues[0];
    				this.iShiQi[1] = pfd.iValues[1];
    				this.SwapShiQi();
    				break;
    			case 20:
    				pfm = this.getfm(pfd.iAPos);
    				pfm.iPopoDelay = 200;
    				pfm.sPopoString = pfd.sValue;
    				PublicChat_SmallFrame.gi().AddMessage(0, 0, pfm.sName, 6, 0,
    						pfd.sValue, null);
    				break;
    			case 22://
    				this.DoUpdate(pfd.iAPos);
    				break;
    			case 100:// 状态变为操作
    				for (i = 0; i < this.iFDPoint; i++) {
    					pfd = this.fds[i];
    					if (pfd.bActing) {
    						if (pfd.iActType == 19) {
    							break;
    						}
    					}
    				}
    				if (i < this.iFDPoint) {
    					bBreak = true;
    					break;
    				}
    				this.iFightStat = 0;
    				this.iRound++;// 回合数增加
    				for (i = 0; i < 4; i++) {
    					for (j = 0; j < GmMe$1.MAXTEAMOLE; j++) {
    						this.fat[i][j].ActionStatus();
    					}
    				}
    				this.fat_base[0].ActionStatus();
    				this.fat_base[1].ActionStatus();

    				if (this.bFightFinished) {// 战斗结束，离开战斗画面
    					this.iFightStat = 300;
    					this.iTimeOut = 0;
    					// XFight.bFighting=false;
    				}
    				break;
    			}
    			if (bBreak)
    				break;
    			this.iFDPoint++;
    		}
    		this.iTimeStamp++;

    		for (i = 0; i < this.iFDPoint; i++) {
    			pfd = this.fds[i];
    			if (pfd.bActing) {
    				switch (pfd.iActType) {
    				case 0:// 移动到目标
    					pfd.iValues[1]++;
    					pfm = this.getfm(pfd.iAPos);
    					pfm.iX = pfm.iOx + (pfm.iDx - pfm.iOx) * pfd.iValues[1] / 3;
    					pfm.iY = pfm.iOy + (pfm.iDy - pfm.iOy) * pfd.iValues[1] / 3;
    					if (pfd.iValues[1] >= 3)
    						pfd.bActing = false;
    					break;
    				case 18:// 移动到保护目标
    					pfd.iValues[1]++;
    					pfm = this.getfm(pfd.iAPos);
    					pfm.iX = pfm.iOx + (pfm.iDx - pfm.iOx) * pfd.iValues[1] / 3;
    					pfm.iY = pfm.iOy + (pfm.iDy - pfm.iOy) * pfd.iValues[1] / 3;
    					if (pfd.iValues[1] >= 3)
    						pfd.bActing = false;
    					break;
    				case 4:// 返回原地
    					j = 3 - pfd.iValues[1];
    					pfm = this.getfm(pfd.iAPos);
    					pfm.iX = pfm.iOx + (pfm.iX - pfm.iOx) / j;
    					pfm.iY = pfm.iOy + (pfm.iY - pfm.iOy) / j;
    					pfd.iValues[1]++;
    					if (pfd.iValues[1] >= 3) {
    						pfm.iX = pfm.iOx;
    						pfm.iY = pfm.iOy;
    						pfd.bActing = false;
    					}
    					break;
    				case 8:// 逃跑
    				case 25:// 逃跑失败
    					pfd.iValues[1]++;
    					if (pfd.iValues[1] < 10)
    						break;
    					j = pfd.iValues[1] - 10;
    					pfm = this.getfm(pfd.iAPos);
    					if (pfd.iActType == 8) {
    						pfm.iX = pfm.iOx + (pfm.iDx - pfm.iOx) * j / 40;
    						pfm.iY = pfm.iOy + (pfm.iDy - pfm.iOy) * j / 40;
    					}
    					if (pfd.iActType == 25) {
    						if (j == 0) {
    							pfm.FaceTo(true);
    							pfm.SetBaseAnima("战斗站立");
    						}
    						if (j > 0) {
    							if (j % 2 == 0)
    								pfm.FaceTo(true);
    							else
    								pfm.FaceTo(false);
    							if (j > 10) {
    								pfm.FaceTo(true);
    								pfd.bActing = false;
    							}
    							pfm.SetBaseAnima("战斗站立");
    						}
    						break;
    					}
    					if (j >= 40) {
    						pfd.bActing = false;
    						pfm.bUseing = false;
    						if (pfm.iPos == this.iMyPos) {
    							this.iFightStat = 0;
    							if (this.bFightFinished) {
    								this.iFightStat = 300;
    								this.iTimeOut = 0;
    							}
    						}
    					}
    					break;
    				case 21:// walk
    					pfd.iValues[3]++;
    					pfm = this.getfm(pfd.iAPos);
    					pfm.iX = pfm.iTx + (pfm.iDx - pfm.iTx) * pfd.iValues[3]
    							/ pfd.iValues[1];
    					pfm.iY = pfm.iTy + (pfm.iDy - pfm.iTy) * pfd.iValues[3]
    							/ pfd.iValues[1];
    					if (pfd.iValues[3] >= pfd.iValues[2]) {
    						pfm.FaceTo(true);
    						pfm.SetBaseAnima("战斗站立");
    						pfd.bActing = false;
    					}
    					break;
    				case 19:// 飞出场
    					pfm = this.getfm(pfd.iAPos);

    					if (pfm.iFlying == 0) {
    						pfd.bActing = false;
    						break;
    					} else if (pfm.iFlying < 10) {
    					} else if (pfm.iFlying == 10) {
    						this.getfm(pfd.iAPos).ianPoint = 0;
    						this.getfm(pfd.iAPos).NextAnima();
    						this.getfm(pfd.iAPos).SetBaseAnima("被攻击");
    					} else {
    						j = pfm.iFlying - 10;
    						if (pfd.iAPos < 20) {
    							if (j < 8) {
    								pfm.iX += 30;
    								pfm.iY -= 15;
    							} else {
    								pfm.iX -= 30;
    								pfm.iY -= 15;
    							}
    						} else {
    							if (j < 8) {
    								pfm.iX -= 30;
    								pfm.iY -= 15;
    							} else {
    								pfm.iX += 30;
    								pfm.iY -= 15;
    							}
    						}
    					}

    					if (pfm.iY <= 0) {
    						pfd.bActing = false;
    						pfm.bUseing = false;
    					}
    					pfm.iFlying++;
    					break;
    				case 17:// 闪避
    					pfm = this.getfm(pfd.iAPos);
    					if (pfd.iValues[1] >= 0 && pfd.iValues[1] <= 3)
    						pfm.iX += pfm.iMoveOffX / 8;
    					if (pfd.iValues[1] >= 4 && pfd.iValues[1] <= 7)
    						pfm.iX -= pfm.iMoveOffX / 8;
    					// this.getfm(pfd.iAPos).iDx=this.getfm(pfd.iAPos).iOx+this.getfm(pfd.iAPos).iMoveOffX*3;
    					// this.getfm(pfd.iAPos).iDy=this.getfm(pfd.iAPos).iOy;
    					pfd.iValues[1]++;
    					if (pfd.iValues[1] > 8) {
    						pfm.iX = pfm.iOx;
    						pfd.bActing = false;
    					}
    					break;
    				}
    			}
    		}
    	}

    	getfightdata( pls) {
    		pls.bCompress = true;
    		var i = 0;
    		var apos = pls.GetNextByte();
    		GmPlay$1.sop("Fight Data Length : " + pls.iLength);

    		var bbb;
    		while (apos != 101) {
    			apos = this.SwapPos(apos);
    			this.fds[i].bActing = false;
    			this.fds[i].iAPos = apos;
    			bbb =  pls.GetNextByte();
    			if (bbb < 0)
    				this.fds[i].iTimeStamp = 256 + bbb;
    			else
    				this.fds[i].iTimeStamp = bbb;
    			// GmPlay.sop("stamp="+this.fds[i].iTimeStamp);
    			this.fds[i].iActType = pls.GetNextByte();
    			GmPlay$1.sop("iActType=" + this.fds[i].iActType + "stamp="
    					+ this.fds[i].iTimeStamp);
    			switch (this.fds[i].iActType) {
    			case 5:
    				this.fds[i].iAPos = this.SwapPos(apos);
    				break;
    			case 0:// 移动到目标pos
    			case 18:// 保护
    				this.fds[i].iValues[0] = pls.GetNextByte();
    				this.fds[i].iValues[0] = this.SwapPos(this.fds[i].iValues[0]);
    				break;
    			case 7:// 死亡/复活
    				this.fds[i].iValues[0] = pls.GetNextByte();
    				break;
    			case 9:// 改变状态
    				this.fds[i].iValues[0] = pls.GetNextByte();
    				this.fds[i].iValues[1] = pls.GetNextByte();
    				break;
    			case 24:// 改变怒气
    				this.fds[i].iValues[0] = pls.GetNextShort();
    				break;
    			case 12:// 修改血蓝
    			case 16:// 改变士气
    				this.fds[i].iValues[0] = pls.GetNextShort();
    				this.fds[i].iValues[1] = pls.GetNextShort();
    				// GmPlay.sop("edit xue lan"+this.fds[i].iValues[0]+",,, shi="+this.fds[i].iValues[1]);
    				break;
    			case 15:// 效果
    				this.fds[i].iValues[0] = pls.GetNextByte();
    				this.fds[i].iValues[0] = this.SwapPos(this.fds[i].iValues[0]);
    				this.fds[i].iValues[1] = pls.GetNextShort();
    				break;
    			case 20:// 对应说话
    				this.fds[i].sValue = pls.GetNextString();
    				break;
    			case 21:// walk
    				this.fds[i].iValues[0] = pls.GetNextByte();
    				this.fds[i].iValues[0] = this.SwapPos(this.fds[i].iValues[0]);
    				this.fds[i].iValues[1] = pls.GetNextByte();// 分段数
    				this.fds[i].iValues[2] = pls.GetNextByte();// 完成段数
    				break;
    			case 22:// 更新fat
    				break;
    			case 23:// 新效果
    				this.fds[i].iValues[0] = pls.GetNextByte();
    				this.fds[i].iValues[0] = this.SwapPos(this.fds[i].iValues[0]);
    				this.fds[i].iValues[1] = pls.GetNextShort();
    				this.fds[i].sValue = pls.GetNextString();
    				break;
    			case 26:// 飞刀效果
    				this.fds[i].iValues[0] = pls.GetNextByte();
    				this.fds[i].iValues[0] = this.SwapPos(this.fds[i].iValues[0]);
    				this.fds[i].iValues[1] = pls.GetNextByte();
    				this.fds[i].iValues[2] = pls.GetNextByte();
    				break;
    			case 27://技能名称展示
    				this.fds[i].iValues[0] = pls.GetNextShort();
    				break;
    			}
    			// GmPlay.sop("count="+i+","+this.fds[i].iActType);
    			i++;
    			apos = pls.GetNextByte();
    		}

    		this.iFDPoint = 0;
    		this.iFDCount = i;
    		this.iFightStat = 200;// 开始播放战斗动画
    		this.iTimeStamp = 0;
    		this.iDelay = 0;
    		this.iWaited = 0;
    		pls.bCompress = false;
    	}

    	getfightflag( pls) {
    		var i, j, k, m;
    		// 等待中，才更新，否则，全体置为已出手
    		if (this.iFightStat > 100)
    			return;
    		for (i = 0; i < 4; i++) {
    			for (j = 0; j < 5; j++) {
    				this.fat[i][j].bActed = false;
    			}
    		}

    		for (i = 0; i < 4; i++) {
    			m = i;
    			if (this.bSwap) {
    				if (m < 2)
    					m = i + 2;
    				else
    					m = i - 2;
    				;
    			}
    			j = pls.GetNextByte();
    			for (k = 0; k < 5; k++) {
    				if ((j & (1 << k)) != 0)
    					this.fat[m][k].bActed = true;
    			}
    		}
    	}
    }
    	// XFight.fatpos={
            	// {{800-80,240},{800-80,240-60},{800-80,240+60},{800-80,240-120},{800-80,240+120}},
    	// {{800-200,240},{800-200,240-60},{800-200,240+60},{800-200,240-120},{800-200,240+120}},
    	// {{80,240},{80,240-60},{80,240+60},{80,240-120},{80,240+120}},
    	// {{200,240},{200,240-60},{200,240+60},{200,240-120},{200,240+120}}};
        
    	XFight.FIGHTWITH_DARK = 1;
    	XFight.FIGHTWITH_USER = 2;
    	XFight.FIGHTWITH_NPC = 3;
    	XFight.FIGHTWITH_SPECIAL = 4;

        XFight.zhenpos = [
            [ [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ] ],// 普通阵
            [ [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ] ],

            [ [ 0, -1 ], [ 0, 1 ], [ 0, 1 ], [ 0, 1 ], [ 0, 1 ] ],// 天罡
            [ [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ] ],

            [ [ 0, -1 ], [ 0, -1 ], [ 0, -1 ], [ 0, 1 ], [ 0, 1 ] ],// 八卦
            [ [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ] ],

            [ [ 0, 1 ], [ 0, -1 ], [ 0, -1 ], [ 0, 1 ], [ 0, 1 ] ],// 疾风
            [ [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ] ],

            [ [ 0, -1 ], [ 0, 1 ], [ 0, 1 ], [ 0, -1 ], [ 0, -1 ] ],// 飞龙
            [ [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ] ],

            [ [ 0, -2 ], [ 0, 1 ], [ 0, 1 ], [ -1, -2 ], [ 1, -2 ] ],// 聚星
            [ [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ] ], ];
    XFight.basepos = [
            [ [ 0, 0 ], [ 1, 0 ], [ -1, 0 ], [ 2, 0 ], [ -2, 0 ] ],
            [ [ 0, 1 ], [ 1, 1 ], [ -1, 1 ], [ 2, 1 ], [ -2, 1 ] ] ];
                
    XFight.bFighting = false;
    XFight.ft = null;
    XFight.gi=function()
    {
    	if(XFight.ft==null)XFight.ft=new XFight();
    	return XFight.ft;
    };

    class JQMode {
    //真剧情模式，脚本分解
    	
    	
    	
    	constructor()
    	{
    		this.iStat=0;
    	}
    	bNearToNpc( npcid)
    	{
    		var pnpc=GmPlay$1.de_npc.fdata(npcid);
    		if(pnpc==null)return false;
    		var dd=pnpc.intValue(4);
    		var dx=pnpc.intValue(5);
    		var dy=pnpc.intValue(6);
    		if(dd==MapManager.gi().iCurrentMapId && VisualBlock.bInCircle(GmMe$1.me.iX,GmMe$1.me.iY,dx,dy,60))return true;
    		return false;
    	}
    	StartJQ( stat)
    	{
    		this.iStat=stat;
    		this.iProc=0;
    		
    		this.iGoToNpc=0;
    		this.sGoToDetail="";
    		
    		this.iTalkNpc=0;
    		this.iTalkDelay=0;
    		
    		this.iFightId=0;
    		
    		this.iCSID=0;
    	}
    	JQLogic()
    	{
    		switch(this.iStat)
    		{
    		case 0://看是否满足触发剧情的状态，满足就触发剧情
    			if(MapManager.gi().iCurrentMapId==56 && !this.bJQ1Finished)
    			{
    				this.StartJQ(1);
    			}
    			break;
    		case 1://进行JQ1
    			this.JQProc1();
    			this.JQDraw1();
    			break;
    		case 2://进行剧情2
    		{
    			var i,j,k;
    			//显示黑屏提示语
    			if(this.iProc<(GmConfig$1.SCRW-1100)/2)this.iProc=(GmConfig$1.SCRW-1100)/2;
    			if(this.iProc<GmConfig$1.SCRW+255)
    			{
    				i=255;
    				j=101;
    			}
    			else
    			{
    				k=this.iProc-GmConfig$1.SCRW-255;
    				if(k<255)
    				{
    					i=255-k;
    					j=100-k*100/255;
    				}
    				else
    				{
    					i=0;
    					j=0;
    				}
    			}
    			M3DFast$1.gi().FillRect_2D(0, 0, GmConfig$1.SCRW, GmConfig$1.SCRH, i<<24);
    			if(this.iProc<GmConfig$1.SCRW)M3DFast$1.gi().SetViewClip(0, 0, this.iProc, GmConfig$1.SCRH);
    //			GmPlay.xani_other.DrawAnima((GmConfig.SCRW-1100)/2, (GmConfig.SCRH-54)/2, "首次登陆黑屏提示语",0);
    			GmPlay$1.xani_other.DrawAnimaEx((GmConfig$1.SCRW-1100)/2, (GmConfig$1.SCRH-54)/2, "首次登陆黑屏提示语",0, j, 1, 1, 0, 0, 0);
    			if(this.iProc<GmConfig$1.SCRW)M3DFast$1.gi().NoClip();
    			M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW-20, 5, "点击屏幕继续 》", 0xff6eacc8, 30, 101, 1, 1, 0, -3, 0);
    			this.iProc+=10;
    			if(this.iProc>=GmConfig$1.SCRW+255+255)
    			{
    				this.iProc=GmConfig$1.SCRW;
    				this.iStat=0;
    			}
    		}
    			break;
    		}
    	}
    	JQDraw1()
    	{
    		if(this.iStat==0)return;
    //		if(this.iTalkNpc>0)
    		{//对话时，屏幕上下变暗
    			GmPlay$1.xani_nui4.DrawAnimaEx(0, 0-100, "阴影",1,101,1.0*GmConfig$1.SCRW/20,1,0,0,0);
    			GmPlay$1.xani_nui4.DrawAnimaEx(0, GmConfig$1.SCRH+100+100, "阴影",0,101,1.0*GmConfig$1.SCRW/20,1,0,0,0);
    		}
    		if(MapManager.gi().iCurrentMapId==1)this.iStat=0;
    		if(this.iTalkNpc>0)
    		{
    			M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW-20, 5, "点击屏幕跳过对话 》", 0xff6eacc8, 30, 101, 1, 1, 0, -3, 0);
    		}
    		if(this.iGoToNpc>0)
    		{
    			if(this.sGoToDetail.length>0)
    			{
    				M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW/2, 5, this.sGoToDetail, 0xffc8f3f3, 28, 101, 1, 1, 0, -2, 0);
    			}
    			return;
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.iStat==0)return false;
    		if(msg==3)
    		{
    			if(this.iTalkNpc>0)
    			{
    				if(this.iTalkNpc==500)
    				{//自己说话
    					GmMe$1.me.iPopoDelay=0;
    				}
    				else
    				{//npc说话
    					MapManager.gi().vbk._npctalk(0, this.iTalkNpc, "",0);
    				}
    				this.iTalkNpc=0;
    				this.iTalkDelay=0;
    			}
    			if(this.iStat==2)
    			{//首次登陆黑屏提示
    				if(this.iProc<GmConfig$1.SCRW)this.iProc=GmConfig$1.SCRW;
    				else this.iProc=GmConfig$1.SCRW*2;
    			}
    		}
    		return true;
    	}
    	bJQLock()
    	{
    		if(this.iStat==0)return false;
    		return true;
    	}
    	JQProc1()
    	{
    		if(this.iGoToNpc>0)
    		{
    			if(this.bNearToNpc(this.iGoToNpc))this.iGoToNpc=0;
    			return;
    		}
    		if(this.iTalkNpc>0)
    		{
    			this.iTalkDelay--;
    			if(this.iTalkDelay<=0)
    			{
    				this.iTalkNpc=0;
    				this.iTalkDelay=0;
    			}
    			else return;
    		}
    		if(this.iFightId>0)
    		{
    			if(XFight.bFighting && this.iFightStat==0)this.iFightStat=1;
    			if(!XFight.bFighting && this.iFightStat==1)this.iFightId=0;
    			return;
    		}
    		
    		if(this.iCSID>0)
    		{
    			if(this.iNowMap!=MapManager.gi().iCurrentMapId)this.iCSID=0;
    			return;
    		}
    		if(JQMode.JQ1[this.iProc][0]=="start")this.iProc++;
    		else if(JQMode.JQ1[this.iProc][0]=="end")
    		{
    			this.iStat=0;
    			this.bJQ1Finished=true;
    		}
    		else if(JQMode.JQ1[this.iProc][0]=="gotonpc")
    		{//寻路前往npc
    			this.iGoToNpc=parseInt(JQMode.JQ1[this.iProc][1]);
    			MyAI.gi().FindNpc(this.iGoToNpc,false,false);
    			if(JQMode.JQ1[this.iProc].length>2)
    			{//有提示内容
    				this.sGoToDetail=JQMode.JQ1[this.iProc][2];
    			}
    			else this.sGoToDetail="";
    			this.iProc++;
    		}
    		else if(JQMode.JQ1[this.iProc][0]=="talk")
    		{
    			this.iTalkNpc=parseInt(JQMode.JQ1[this.iProc][1]);
    			var tk=JQMode.JQ1[this.iProc][2];
    			if(JQMode.JQ1[this.iProc].length>3 && GmMe$1.me.iSex==1)tk=JQMode.JQ1[this.iProc][3];
    			if(this.iTalkNpc==500)
    			{//自己说话
    				GmMe$1.me.sPopoString=tk;
    				GmMe$1.me.iPopoDelay=100;
    			}
    			else
    			{//npc说话
    				MapManager.gi().vbk._npctalk(0, this.iTalkNpc, tk,100);
    			}
    			this.iTalkDelay=98;
    			this.iProc++;
    		}
    		else if(JQMode.JQ1[this.iProc][0]=="fight")
    		{
    			this.iFightId=parseInt(JQMode.JQ1[this.iProc][1]);
    			//让服务器开始战斗
    			GmProtocol$1.gi().s_SeverEvent(24,0,this.iFightId,0,0);
    			this.iFightStat=0;
    			this.iProc++;
    		}
    		else if(JQMode.JQ1[this.iProc][0]=="cs")
    		{//传送
    			this.iNowMap=MapManager.gi().iCurrentMapId;
    			this.iCSID=parseInt(JQMode.JQ1[this.iProc][1]);
    			GmProtocol$1.gi().s_ChangeMapNew(2,this.iCSID);
    			this.iProc++;
    		}
    		else if(JQMode.JQ1[this.iProc][0]=="special")
    		{
    			this.DoSpecial(parseInt(JQMode.JQ1[this.iProc][1]));
    			this.iProc++;
    		}
    	}
    	DoSpecial( sid)
    	{
    		switch(sid){	
    		case 1:this.DoSpecial1();break;
    		}
    	}
    	DoSpecial1()
    	{//添加,秦雪涧,沈无名,王沐风,
    		var k;
    		GmMe$1.me.iDx=GmMe$1.me.iSx+1;
    		GmMe$1.me.iDy=GmMe$1.me.iSy-1;
    		GmMe$1.me.FaceTo();
    		GmMe$1.me.bfc4=false;
    		GmMe$1.me.bfc6=false;
    		GmMe$1.me.bfc8=false;
    		GmPlay$1.xani_newrole[0].InitAnimaWithName("站立_右上", GmMe$1.me.aa_body);
    		GmMe$1.me.iWeapTid=291;
    		GmMe$1.me.aa_weapon=TeamOperate.ResetWeapon(GmMe$1.me.iWeapTid, 0, "站立_右上", GmMe$1.me.aa_weapon);
    		
    		//猪妖
    		this.pnpc1=VisualBlock.pvb.AddVoidNpc();
    		this.pnpc1.bCurrentBlock=true;
    		this.pnpc1.iNpcId=1;
    		this.pnpc1.iSid=0;
    		this.pnpc1.iX=831;
    		this.pnpc1.iY=1007;
    		this.pnpc1.iDx=this.pnpc1.iX;
    		this.pnpc1.iDy=this.pnpc1.iY;
    		this.pnpc1.sNpcName="猪妖";
    		this.pnpc1.iAnimaType=200003;
    		this.pnpc1.sAniName="站立_右下";
    		this.pnpc1.iR=30;
    		this.pnpc1.iStandFlag=-1;
    		this.pnpc1.iWeapId=this.pnpc1.iAnimaType%10000;//怪物ID
    		k=this.pnpc1.iAnimaType/10000%10;//是否变异
    		GmPlay$1.xani_pets[this.pnpc1.iWeapId].InitAnimaWithName((k==0?"":"变异_")+this.pnpc1.sAniName,this.pnpc1.aa_body);
    		
    		//秦雪涧
    		this.pnpc2=VisualBlock.pvb.AddVoidNpc();
    		this.pnpc2.bCurrentBlock=true;
    		this.pnpc2.iNpcId=2;
    		this.pnpc2.iSid=0;
    		this.pnpc2.iX=1109;
    		this.pnpc2.iY=987;
    		this.pnpc2.iDx=this.pnpc2.iX;
    		this.pnpc2.iDy=this.pnpc2.iY;
    		this.pnpc2.sNpcName="秦雪涧";
    		this.pnpc2.iAnimaType=100291;
    		this.pnpc2.sAniName="站立_上";
    		this.pnpc2.iR=30;
    		this.pnpc2.iStandFlag=-1;
    		this.pnpc2.iWeapId=291;
    		GmPlay$1.xani_newrole[0].InitAnimaWithName(this.pnpc2.sAniName, this.pnpc2.aa_body);
    		if(this.pnpc2.iWeapId>0)TeamOperate.ResetWeapon(this.pnpc2.iWeapId, 0, this.pnpc2.sAniName, this.pnpc2.aa_weapon);
    		
    		//沈无名,仙男
    		this.pnpc3=VisualBlock.pvb.AddVoidNpc();
    		this.pnpc3.bCurrentBlock=true;
    		this.pnpc3.iNpcId=2;
    		this.pnpc3.iSid=0;
    		this.pnpc3.iX=1234;
    		this.pnpc3.iY=985;
    		this.pnpc3.iDx=this.pnpc3.iX;
    		this.pnpc3.iDy=this.pnpc3.iY;
    		this.pnpc3.sNpcName="沈无名";
    		this.pnpc3.iAnimaType=150295;
    		this.pnpc3.sAniName="站立_左上";
    		this.pnpc3.iR=30;
    		this.pnpc3.iStandFlag=-1;
    		this.pnpc3.iWeapId=295;
    		GmPlay$1.xani_newrole[5].InitAnimaWithName(this.pnpc3.sAniName, this.pnpc3.aa_body);
    		if(this.pnpc3.iWeapId>0)TeamOperate.ResetWeapon(this.pnpc3.iWeapId, 1, this.pnpc3.sAniName, this.pnpc3.aa_weapon);
    		
    		//王沐风,魔男
    		this.pnpc4=VisualBlock.pvb.AddVoidNpc();
    		this.pnpc4.bCurrentBlock=true;
    		this.pnpc4.iNpcId=2;
    		this.pnpc4.iSid=0;
    		this.pnpc4.iX=1300;
    		this.pnpc4.iY=898;
    		this.pnpc4.iDx=this.pnpc4.iX;
    		this.pnpc4.iDy=this.pnpc4.iY;
    		this.pnpc4.sNpcName="王沐风";
    		this.pnpc4.iAnimaType=130293;
    		this.pnpc4.sAniName="站立_左";
    		this.pnpc4.iR=30;
    		this.pnpc4.iStandFlag=-1;
    		this.pnpc4.iWeapId=293;
    		GmPlay$1.xani_newrole[3].InitAnimaWithName(this.pnpc4.sAniName, this.pnpc4.aa_body);
    		if(this.pnpc4.iWeapId>0)TeamOperate.ResetWeapon(this.pnpc4.iWeapId, 1, this.pnpc4.sAniName, this.pnpc4.aa_weapon);
    	}
    }
    JQMode.JQ1=[
    	["start"],
    	["special","1"],//加入3个npc站立
    	["end"],
    	["gotonpc","84"],
    	["talk","84","看你这迷茫的小眼神，真让人心疼！"],
    	["talk","500","你是谁？这里是哪里？我的心为何这般痛！"],
    	["talk","84","因为死亡都无法令你忘怀的那个人曾经就在这里等你，爱情本来就是最伤人的东西！"],
    	["talk","500","不！爱情是这世上最美妙的，你是无论如何都不能理解的！"],
    	["talk","84","那么你还坚持宁可经受一季冰寒，再忍一季炙烤，宁可忘记自己也要记住那个人么？"],
    	["talk","500","我意已决，绝不更改！"],
    	["gotonpc","85","要经受转生的煎熬，只为能记住那个心跳，去桃花岛岛主那里渡过劫难！"],
    	["talk","85","如果你的爱不够真挚，你会元神幻灭，魂飞魄散！你要三思！"],
    	["talk","500","这世上没有他活着可笑，来吧！","这世上没有她活着可笑，来吧！"],
    	["talk","85","我敬你重情义，但是我并不会手下留情，接受考验吧！"],
    	["fight","1"],
    	["talk","85","你有姐妹厚意，更有英雄情深！感情真挚日月可鉴，现在我为你转生，重新开始新的生命旅程吧！","你有兄弟厚意，更有佳人情深！感情真挚日月可鉴，现在我为你转生，重新开始新的生命旅程吧！"],
    	["cs","96"],//传送
    	["end"]
    /*		["start"],
    	["gotonpc","84"],
    	["talk","84","看你这迷茫的小眼神，真让人心疼！"],
    	["talk","500","你是谁？这里是哪里？我的心为何这般痛！"],
    	["talk","84","因为死亡都无法令你忘怀的那个人曾经就在这里等你，爱情本来就是最伤人的东西！"],
    	["talk","500","不！爱情是这世上最美妙的，你是无论如何都不能理解的！"],
    	["talk","84","那么你还坚持宁可经受一季冰寒，再忍一季炙烤，宁可忘记自己也要记住那个人么？"],
    	["talk","500","我意已决，绝不更改！"],
    	["gotonpc","85","要经受转生的煎熬，只为能记住那个心跳，去桃花岛岛主那里渡过劫难！"],
    	["talk","85","如果你的爱不够真挚，你会元神幻灭，魂飞魄散！你要三思！"],
    	["talk","500","这世上没有他活着可笑，来吧！","这世上没有她活着可笑，来吧！"],
    	["talk","85","我敬你重情义，但是我并不会手下留情，接受考验吧！"],
    	["fight","1"],
    	["talk","85","你有姐妹厚意，更有英雄情深！感情真挚日月可鉴，现在我为你转生，重新开始新的生命旅程吧！","你有兄弟厚意，更有佳人情深！感情真挚日月可鉴，现在我为你转生，重新开始新的生命旅程吧！"],
    	["cs","96"],//传送
    	["end"]*/
    ];
    JQMode.jq=new JQMode();

    class FrameMessageEx {
    	constructor()
    	{
    		this.iW=300;
    		this.iH=200;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.pm3f=M3DFast$1.xm3f;
    		this.bShow=false;
    	}
    	Open( s)
    	{
    		this.sDetail=s;
    		this.bShow=true;
    		
    		this.iW=512;
    		this.iH=195;
    		
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2+40;
    		
    		this.bLock=true;
    		
    		this.iot=GmPlay$1.iNowMillis;
    	}
    	
    	Draw()
    	{
    		if(!this.bShow)return;
    		if(JQMode.jq.bJQLock())
    		{
    			this.iot=GmPlay$1.iNowMillis;
    			return;
    		}
    		
    		GmPlay$1.xani_other.DrawAnima(this.iX, this.iY, "欢迎框",0);
    		GmPlay$1.xani_other.DrawAnima(this.iX, this.iY, "欢迎仙女",0);
    		FormatString.gi().FormatEx("#cd1ecf5"+this.sDetail, 300, 25,1,0xff000000,40);
    		
    		FormatString.gi().Draw(this.iX+180, this.iY+40);

    		if(GmPlay$1.iNowMillis-this.iot>5000)this.bShow=false;
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		if(JQMode.jq.bJQLock())return false;
    		if(!this.bShow)return false;
    		if(msg==1)this.bLock=false;
    		if(msg==3 && !this.bLock)
    		{
    			if(GmPlay$1.iNowMillis-this.iot>1000)this.bShow=false;
    		}
    		return true;
    	}
    }
    FrameMessageEx.fm=new FrameMessageEx();

    class MakeEquip extends BaseClass{
    	
    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=M3DFast$1.gi();
    		
    		MakeEquip.iW=30+420+430+40+30;
    		MakeEquip.iH=345+40+60+30;
    		MakeEquip.iX=(GmConfig$1.SCRW-MakeEquip.iW)/2;
    		MakeEquip.iY=(GmConfig$1.SCRH-MakeEquip.iH)/2;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(MakeEquip.iX+MakeEquip.iW-35, MakeEquip.iY-25, 60, 60);
    		
    		this.btn_goods=new Array(8);//
    		this.gmake=new Array(8);//
    		this.igsub=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.btn_goods[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_goods[i].InitButton("物品格");
    			
    			this.gmake[i]=null;
    			this.igsub[i]=1;
    		}
    		//(MakeEquip.iX+10,MakeEquip.iY+65,360,MakeEquip.iH-75)
    		this.btn_goods[0].Move(MakeEquip.iX+5+60, MakeEquip.iY+80, 80, 80);//图纸
    		this.btn_goods[1].Move(MakeEquip.iX+5+60+(80+45), MakeEquip.iY+80, 80, 80);//手艺
    		this.btn_goods[2].Move(MakeEquip.iX+5+60+(80+45)*2, MakeEquip.iY+80, 80, 80);//幸运符
    		
    		this.btn_goods[3].Move(MakeEquip.iX+5+60, MakeEquip.iY+180, 80, 80);//图纸
    		this.btn_goods[4].Move(MakeEquip.iX+5+60+(80+45), MakeEquip.iY+180, 80, 80);//手艺
    		this.btn_goods[5].Move(MakeEquip.iX+5+60+(80+45)*2, MakeEquip.iY+180, 80, 80);//幸运符
    		
    		this.btn_make=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_make.InitButton("按钮1_110");
    		this.btn_make.sName="制造";
    		this.btn_make.Move(MakeEquip.iX+260, MakeEquip.iY+MakeEquip.iH-50-40, 70, 40);
    	}

    	Draw()
    	{
    		var i,offx,offy;
    		DrawMode$1.new_baseframe2(MakeEquip.iX, MakeEquip.iY, MakeEquip.iW, MakeEquip.iH, "打", "造");
    		this.btn_close.Draw();
    		GmPlay$1.xani_nui3.DrawAnima(MakeEquip.iX+230, MakeEquip.iY+200, "炼丹炉背景",0);
    		offx=MakeEquip.iX+MakeEquip.iW-30-430-40;
    		offy=MakeEquip.iY+30;
    		DrawMode$1.new_framein(offx,offy, 430+40, MakeEquip.iH-60);
    		
    		M3DFast$1.gi().DrawTextEx(offx+20, offy+20, "双击选择装备制造图纸：", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		MakeEquip.iGx=offx+20;
    		MakeEquip.iGy=offy+20+30;
    		GoodsDraw.new_DrawGoods(MakeEquip.iGx,MakeEquip.iGy, MyGoods.gi().goods[2], this.gmake,this.igsub);
    		if(this.lockgoods!=null)GoodsDraw.new_DrawRect(MakeEquip.iGx,MakeEquip.iGy, MyGoods.gi().goods[2], this.lockgoods, 0);
    		
    		for(i=0;i<6;i++)
    		{
    			GmPlay$1.xani_nui3.DrawAnima(this.btn_goods[i].iX,this.btn_goods[i].iY, "物品格子",0);
    //			GmPlay.xani_nui3.DrawAnimaEx(this.btn_goods[i].iX,this.btn_goods[i].iY, "物品选中框", 0, 101, 1, 1, 0, 0, 0);
    //			this.btn_goods[i].Draw();
    			if(this.gmake[i]!=null)
    			{
    				GoodsDraw.new_DrawOneGoods_ext(this.btn_goods[i].iX, this.btn_goods[i].iY, this.gmake[i], 1);
    			}
    		}
    		offy=MakeEquip.iY+MakeEquip.iH-30-160;
    		DrawMode$1.new_framein(MakeEquip.iX+30, offy, 400, 160);
    		var s="#c003e57"+this.Check();
    		FormatString.gi().FormatEx(s, 360, 25, 0, 0, 30);
    		FormatString.gi().Draw(MakeEquip.iX+30+20, offy+20);
    //		this.pm3f.DrawTextEx(MakeEquip.iX+30+10, MakeEquip.iY+300+10, , 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		if(MakeEquip.bCanMake)
    		{
    			this.btn_make.Move(MakeEquip.iX+30+400-20-110, offy+160-20-52, 110, 52);
    			this.btn_make.Draw();
    		}
    		
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	
    	Check()
    	{
    		var i,j,k,m;
    		var type,lev;
    		var ret="#c003e57";
    		MakeEquip.bCanMake=false;
    		if(this.gmake[0]==null)
    		{
    			return "请先放入装备制造图纸";
    		}
    		//有图纸，检查手艺，和所需材料
    		type=GmPlay$1.de_goods.intValue(this.gmake[0].iAtts[0], -1, 16);//装备类型
    		lev=GmPlay$1.de_goods.intValue(this.gmake[0].iAtts[0], -1, 9);//装备等级
    		if(type==-1 || lev==-1)return "数据错误1";
    		if(this.gmake[1]!=null && this.gmake[1].iTid==382);
    		else
    		{
    			if(type==0 || type==4)
    			{//需要锻造手艺
    				if(this.gmake[1]==null || this.gmake[1].iTid!=98)return "需要放入锻造手艺";
    				if(this.gmake[1].iAtts[0]<lev)return "锻造手艺等级不够";
    			}
    			else if(type==1 || type==2)
    			{//需要锻造手艺
    				if(this.gmake[1]==null || this.gmake[1].iTid!=99)return "需要放入冶金手艺";
    				if(this.gmake[1].iAtts[0]<lev)return "冶金手艺等级不够";
    			}
    			else if(type==3 || type==5)
    			{//需要锻造手艺
    				if(this.gmake[1]==null || this.gmake[1].iTid!=100)return "需要放入剪裁手艺";
    				if(this.gmake[1].iAtts[0]<lev)return "剪裁手艺等级不够";
    			}
    			else return "数据错误2";
    		}
    		//检查所需材料
    		m=0;
    		for(i=1;i<4;i++)
    		{//材料1,2,3
    			j=this.gmake[0].iAtts[i];
    			if(j<=0)break;
    			//检测列表中是否有材料j
    			for(k=3;k<6;k++)
    			{
    				if(this.gmake[k]==null)continue;
    				if(this.gmake[k].iTid==j)
    				{
    					break;
    				}
    			}
    			if(k>=6)
    			{
    				ret=ret+"需要放入材料："+GmPlay$1.de_goods.strValue(j, -1, 4)+"#e";
    				m++;
    			}
    		}
    		if(m>0)return ret;
    		if(this.gmake[2]!=null)ret="#e至少获得一项附加属性";
    		else ret="#e#cff0000放入幸运符可附加属性";
    		MakeEquip.bCanMake=true;
    		return "#c00ff00材料齐备"+ret;
    	}
    	 ProcTouch( msg, x, y)
    	{
    		var i,j,k,m;
    		if(MakeEquip.bCanMake)
    		{
    			if(this.btn_make.ProcTouch(msg, x, y))
    			{
    				if(this.btn_make.bCheck())
    				{
    					var ids=[0,0,0,0,0,0,0,0];
    					for(i=0;i<8;i++)
    					{
    						if(this.gmake[i]!=null)
    						{
    							ids[i]=this.gmake[i].iGid;
    							j=GmPlay$1.de_goods.intValue(this.gmake[i].iTid, 0, 28);
    							if(j>1)
    							{
    								this.gmake[i].iCount--;
    								if(this.gmake[i].iCount<=0)this.gmake[i].iGid=-1;
    							}
    							else this.gmake[i].iGid=-1;
    							this.gmake[i]=null;
    						}
    					}
    					GmProtocol$1.gi().s_UseSkill(4, ids[0], ids[1], ids[2], ids[3], ids[4], ids[5]);
    				}
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}

    		this.lockgoods=GoodsDraw.new_LockGoods(x,y,MakeEquip.iGx,MakeEquip.iGy, MyGoods.gi().goods[2],msg);
    		if(msg==3 && this.lockgoods!=null && GoodsDraw.bCanProc())
    		{//点击物品，判断类型，放入格子(制造书，材料，幸运符，手艺)
    			var type;
    			if(this.lockgoods.iTid==97)
    			{
    				this.gmake[0]=this.lockgoods;//图纸
    				//判断是什么类型图纸，需要什么手艺,,0帽子，1项链，2武器，3衣服，4腰带，5鞋子
    				i=GmPlay$1.de_goods.intValue(this.lockgoods.iAtts[0], 0, 16);
    				if(i==2 || i==1)j=99;//冶金
    				else if(i==3 || i==5)j=100;//剪裁
    				else if(i==0 || i==4)j=98;//锻造
    				else j=-1;
    				for(k=0;k<20;k++)
    				{
    					if(MyGoods.gi().goods[2][k].iGid>0 && MyGoods.gi().goods[2][k].iTid==j)
    					{
    						this.gmake[1]=MyGoods.gi().goods[2][k];
    						break;
    					}
    				}
    				for(k=0;k<20;k++)
    				{//放入幸运符
    					if(MyGoods.gi().goods[2][k].iGid>0 && MyGoods.gi().goods[2][k].iTid==108)
    					{
    						this.gmake[2]=MyGoods.gi().goods[2][k];
    						break;
    					}
    				}
    				m=3;
    				for(i=1;i<4;i++)
    				{
    					j=this.lockgoods.iAtts[i];
    					if(j>0)
    					{//材料id，从背包中搜索直接放入
    						for(k=0;k<20;k++)
    						{
    							if(MyGoods.gi().goods[2][k].iGid>0 && MyGoods.gi().goods[2][k].iTid==j)
    							{//直接放入格子
    								this.gmake[m++]=MyGoods.gi().goods[2][k];
    								break;
    							}
    						}
    					}
    				}
    			}
    			if(this.lockgoods.iTid==98 ||
    				this.lockgoods.iTid==99 ||
    				this.lockgoods.iTid==100 ||
    				this.lockgoods.iTid==382)this.gmake[1]=this.lockgoods;//手艺
    			if(this.lockgoods.iTid==108)this.gmake[2]=this.lockgoods;//幸运符

    			type=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, -1, 31);
    			if(type!=-1)
    			{//是草药，放入空闲的this.gmake里面
    				for(i=3;i<6;i++)
    				{
    					if(this.gmake[i]==null)
    					{
    						this.gmake[i]=this.lockgoods;
    						break;
    					}
    				}
    			}
    			this.lockgoods=null;
    		}
    		for(i=0;i<6;i++)
    		{
    			if(this.btn_goods[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_goods[i].bCheck())
    				{
    					this.gmake[i]=null;
    				}
    			}
    		}
    		return false;
    	}
    }


    MakeEquip.iX,MakeEquip.iY,MakeEquip.iW,MakeEquip.iH;

    MakeEquip.iGx,MakeEquip.iGy;

    MakeEquip.bCanMake;

    class LianDanShu extends BaseClass{
    	

    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=30+420+430+40+30;
    		this.iH=345+40+60+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_goods=new Array(8);//
    		this.gmake=new Array(8);//
    		this.igsub=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.btn_goods[i]=new XButton(GmPlay$1.xani_nui3);
    			this.btn_goods[i].InitButton("物品格子");
    			
    			this.gmake[i]=null;
    			this.igsub[i]=1;
    		}
    		//(this.iX+10,this.iY+65,360,this.iH-75)
    		this.btn_goods[0].Move(this.iX+30+400/2-40, this.iY+120-60, 80, 80);//丹方
    		this.btn_goods[1].Move(this.iX+30+400/2-40, this.iY+120+60, 80, 80);//炼丹炉
    		
    		this.btn_goods[2].Move(this.iX+30+400/2-40-100, this.iY+120-80, 80, 80);//材料1
    		this.btn_goods[3].Move(this.iX+30+400/2-40+100, this.iY+120-80, 80, 80);//材料2
    		this.btn_goods[4].Move(this.iX+30+400/2-40-100, this.iY+120+80, 80, 80);//材料3
    		this.btn_goods[5].Move(this.iX+30+400/2-40+100, this.iY+120+80, 80, 80);//材料4
    		
    		this.btn_make=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_make.InitButton("按钮1_110");
    		this.btn_make.sName="炼药";
    		
    		this.btn_close=new XButton(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    	}

    	Draw()
    	{
    		var i;
    		var offx,offy;
    		DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH, "炼", "丹");
    //		DrawMode.Frame3_BK(this.iX, this.iY, this.iW, this.iH,"炼丹");
    		this.btn_close.Draw();
    //		DrawMode.Frame2_MD(this.iX+10, this.iY+65,360, this.iH-75);
    //		DrawMode.Frame2_MD(this.iX+380, this.iY+65,360, this.iH-75);
    		GmPlay$1.xani_nui3.DrawAnima(this.iX+230, this.iY+200, "炼丹炉背景",0);
    		offx=this.iX+this.iW-30-430-40;
    		offy=this.iY+30;
    		DrawMode$1.new_framein(offx,offy, 430+40, this.iH-60);
    		
    		M3DFast$1.gi().DrawTextEx(offx+20, offy+20, "双击选择丹方：", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		this.iGx=offx+20;
    		this.iGy=offy+20+30;
    		GoodsDraw.new_DrawGoods(this.iGx,this.iGy, MyGoods.gi().goods[2], this.gmake,this.igsub);
    		if(this.lockgoods!=null)GoodsDraw.new_DrawRect(this.iGx,this.iGy, MyGoods.gi().goods[2], this.lockgoods, 0);
    		for(i=0;i<6;i++)
    		{
    			this.btn_goods[i].Draw();
    			if(this.gmake[i]!=null)
    			{
    				GoodsDraw.new_DrawOneGoods_ext(this.btn_goods[i].iX, this.btn_goods[i].iY, this.gmake[i], 1);
    			}
    		}
    		offy=this.iY+this.iH-30-160;
    		DrawMode$1.new_framein(this.iX+30, offy, 400, 160);

    		var s=this.Check();
    //		FormatString.gi().Format(s, 360, 30);
    		FormatString.gi().FormatEx(s, 360, 25, 0, 0, 30);
    		FormatString.gi().Draw(this.iX+30+20, offy+20);
    //		this.pm3f.DrawTextEx(this.iX+30+10, this.iY+300+10, , 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		GmPlay$1.sop("aaa="+s);
    		if(this.bCanMake)
    		{
    			this.btn_make.Move(this.iX+30+400-20-110, offy+160-20-52, 110, 52);
    			this.btn_make.Draw();
    		}
    		
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	 Check()
    	{
    		var i,j,k,m;
    		var flag=[0,0,0,0,0,0,0,0,0,0];
    		var ret="#c003e57";
    		this.bCanMake=false;
    		if(this.gmake[0]==null)
    		{
    			return "请先放入丹方";
    		}
    		//检查所需材料
    		m=0;
    		for(i=3;i<7;i++)
    		{//材料1,2,3
    			j=this.gmake[0].iAtts[i];
    			if(j<=0)break;
    			//检测列表中是否有材料j
    			for(k=2;k<6;k++)
    			{
    				if(this.gmake[k]==null)continue;
    				if(this.gmake[k].iTid==j && flag[k]==0)
    				{
    					flag[k]=1;
    					break;
    				}
    			}
    			if(k>=6)
    			{
    				ret=ret+"缺少草药："+GmPlay$1.de_goods.strValue(j, -1, 4)+"#e";
    				m++;
    			}
    		}
    		if(m>0)return ret;
    //		if(this.gmake[2]!=null)ret="#e至少获得一项附加属性";
    		i=60;
    		if(this.gmake[0].iTid==195)i=60;
    		else if(this.gmake[0].iTid==328)i=50;
    		else if(this.gmake[0].iTid==329)i=40;
    		else if(this.gmake[0].iTid==330)i=10;
    		else i=5;
    		ret="#e炼药成功率"+i+"%";
    		if(this.gmake[1]!=null && this.gmake[1].iGid>0)
    		{
    			ret+="#e炼丹炉提高成功率"+this.gmake[1].iAtts[3]+"%";
    		}
    		if(MyGov.mg.iZhuQueLev>0)
    		{
    			i=MyGov.mg.iZhuQueLev/5;
    			i*=5;
    			ret+="#e朱雀堂提高成功率"+(i/10)+"."+(i%10)+"%";
    		}
    //		if(i>100)i=100;
    //		ret="#e炼药成功率"+i+"%";//一级丹药
    		this.bCanMake=true;
    		return "#c00ff00材料齐备"+ret;
    	}
    	 ProcTouch( msg, x, y)
    	{//195
    		var i,j,k,m;
    		if(this.bCanMake)
    		{
    			if(this.btn_make.ProcTouch(msg, x, y))
    			{
    				if(this.btn_make.bCheck())
    				{
    					var ids=[0,0,0,0,0,0,0,0];
    					for(i=0;i<8;i++)
    					{
    						if(this.gmake[i]!=null)
    						{
    							ids[i]=this.gmake[i].iGid;
    							j=GmPlay$1.de_goods.intValue(this.gmake[i].iTid, 0, 28);
    							if(j>1)
    							{
    								this.gmake[i].iCount--;
    								if(this.gmake[i].iCount<=0)this.gmake[i].iGid=-1;
    							}
    							else this.gmake[i].iGid=-1;
    							this.gmake[i]=null;
    						}
    					}
    					GmProtocol$1.gi().s_UseSkill(8, ids[0], ids[1], ids[2], ids[3], ids[4], ids[5]);
    				}
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		this.lockgoods=GoodsDraw.new_LockGoods(x,y,this.iGx, this.iGy, MyGoods.gi().goods[2],msg);
    		if(msg==3 && this.lockgoods!=null && GoodsDraw.bCanProc())
    		{//点击物品，判断类型，放入格子(制造书，材料，幸运符，手艺)
    //			var type;
    			j=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, -1, 27);
    			if(this.lockgoods.iTid==195 || this.lockgoods.iTid==328 || this.lockgoods.iTid==329 || this.lockgoods.iTid==330 || this.lockgoods.iTid==331)
    			{
    				this.gmake[0]=this.lockgoods;//丹方
    				//自动检测所需草药放入
    				m=2;
    				for(i=3;i<7;i++)
    				{
    					j=this.lockgoods.iAtts[i];
    					if(j>0)
    					{//草药id，从背包中搜索直接放入
    						for(k=0;k<20;k++)
    						{
    							if(MyGoods.gi().goods[2][k].iGid>0 && MyGoods.gi().goods[2][k].iTid==j)
    							{//直接放入格子
    								this.gmake[m++]=MyGoods.gi().goods[2][k];
    								break;
    							}
    						}
    					}
    				}
    			}
    			else if(this.lockgoods.iTid>=342 && this.lockgoods.iTid<=343)this.gmake[1]=this.lockgoods;
    			else 	if(j!=-1 || (this.lockgoods.iTid>=337 && this.lockgoods.iTid<=341))
    			{//是草药，放入空闲的this.gmake里面
    				for(i=2;i<6;i++)
    				{
    					if(this.gmake[i]==null)
    					{
    						this.gmake[i]=this.lockgoods;
    						break;
    					}
    				}
    			}
    			else EasyMessage.easymsg.AddMessage("请选择丹方");
    //			if(this.lockgoods.iTid==98 ||
    //				this.lockgoods.iTid==99 ||
    //				this.lockgoods.iTid==100)this.gmake[1]=this.lockgoods;//炼丹炉
    //			if(this.lockgoods.iTid==108)this.gmake[2]=this.lockgoods;//幸运符
    			this.lockgoods=null;
    		}
    		for(i=0;i<6;i++)
    		{
    			if(this.btn_goods[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_goods[i].bCheck())
    				{
    					this.gmake[i]=null;
    				}
    			}
    		}
    //		if(msg==3 && !XDefine.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    //		{
    //			XStat.gi().PopStat(1);
    //		}
    		return false;
    	}
    	 AutoPutGoods( g)
    	{
    		var i,j,k,m;
    		m=2;
    		for(i=3;i<7;i++)
    		{
    			j=g.iAtts[i];
    			if(j>0)
    			{//草药id，从背包中搜索直接放入
    				for(k=0;k<20;k++)
    				{
    					if(MyGoods.gi().goods[2][k].iGid>0 && MyGoods.gi().goods[2][k].iTid==j)
    					{//直接放入格子
    						this.gmake[m++]=MyGoods.gi().goods[2][k];
    						break;
    					}
    				}
    			}
    		}
    	}
    }

    LianDanShu.Open=function( df, dl)
    {
        var lds=XStat$1.gi().PushStat(XStat$1.GS_LIANDANSHU);
        
        lds.gmake[0]=df;
        lds.gmake[1]=dl;
        if(df!=null)
        {
            lds.AutoPutGoods(df);
        }
        GmProtocol$1.gi().s_NewGovOperate(22, 0, 0, 0, 0, "");
    };

    class FastOperate extends BaseClass
    {
    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=910;
    		this.iH=610;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    //		this.btn_close=new XButtonEx1(GmPlay.xani_ui3);
    //		this.btn_close.InitButton("统一关闭按钮");
    //		this.btn_close.Move(this.iX+748, this.iY, 60, 60);
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		
    		this.btn_dundi=new XButton(GmPlay$1.xani_nicon);
    		this.btn_dundi.InitButton("遁地术");
    		this.btn_dundi.Move(GmConfig$1.SCRW,GmConfig$1.SCRH, 1, 1);
    		
    		
    		this.btn_duanzao=new XButton(GmPlay$1.xani_nicon);
    		this.btn_duanzao.InitButton("锻造");
    		this.btn_duanzao.Move(GmConfig$1.SCRW,GmConfig$1.SCRH, 1, 1);
    		
    		this.btn_yejin=new XButton(GmPlay$1.xani_nicon);
    		this.btn_yejin.InitButton("冶金");
    		this.btn_yejin.Move(GmConfig$1.SCRW,GmConfig$1.SCRH, 1, 1);
    		
    		this.btn_jiancai=new XButton(GmPlay$1.xani_nicon);
    		this.btn_jiancai.InitButton("剪裁");
    		this.btn_jiancai.Move(GmConfig$1.SCRW,GmConfig$1.SCRH, 1, 1);
    		
    		this.btn_zhiyao=new XButton(GmPlay$1.xani_nicon);
    		this.btn_zhiyao.InitButton("炼丹术");
    		this.btn_zhiyao.Move(GmConfig$1.SCRW,GmConfig$1.SCRH, 1, 1);
    		
    		this.btn_pengren=new XButton(GmPlay$1.xani_nicon);
    		this.btn_pengren.InitButton("烹饪");
    		this.btn_pengren.Move(GmConfig$1.SCRW,GmConfig$1.SCRH, 1, 1);
    		//////////////////////////////////////////////////////////////
    		i=66; var w=120; var h = 60+185;
    		
    		this.btn_vip = new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_vip.InitButton("按钮3");
    		this.btn_vip.sName="开通会员";
    		this.btn_vip.Move(this.iX+this.iW-w-60, this.iY+h-i, 141, 49);
    		this.btn_vip.iNameSize=25;
    		
    //		this.btn_sell=new XButtonEx1(GmPlay.xani_ui3);
    		this.btn_sell = new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_sell.InitButton("按钮4");
    		this.btn_sell.sName="摆    摊";
    		this.btn_sell.Move(this.iX+this.iW-w-60, this.iY+h, 141, 49);
    		this.btn_sell.iNameSize=25;
    		
    		this.btn_find=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_find.InitButton("按钮4");
    		this.btn_find.sName="查找好友";
    		this.btn_find.Move(this.iX+this.iW-w-60, this.iY+h+i, 141, 49);
    		this.btn_find.iNameSize=25;
    		
    		this.btn_restore=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_restore.InitButton("按钮4");
    		this.btn_restore.sName="快捷恢复";
    		this.btn_restore.Move(this.iX+this.iW-w-60, this.iY+h+i*2, 141, 49);
    		this.btn_restore.iNameSize=25;
    		
    		this.btn_dark=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_dark.InitButton("按钮4");
    		if(GmMe$1.me.bDark)this.btn_dark.sName="遇怪:开";
    		else this.btn_dark.sName="遇怪:关";
    		this.btn_dark.Move(this.iX+this.iW-w-60, this.iY+h+i*3, 141, 49);
    		this.btn_dark.iNameSize=25;
    		
    		this.btn_pk=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_pk.InitButton("按钮4");
    		if(GmMe$1.me.bPk)this.btn_pk.sName="对战:开";
    		else this.btn_pk.sName="对战:关";
    		this.btn_pk.Move(this.iX+this.iW-w-60, this.iY+h+i*4, 141, 49);
    		this.btn_pk.iNameSize=25;
    		
    //		btn_strange=new XButtonEx2(GmPlay.xani_nui2);
    //		btn_strange.InitButton("按钮4");
    //		if(GmMe.me.bStrange)btn_strange.sName="陌生:开";
    //		else btn_strange.sName="陌生:关";
    //		btn_strange.Move(this.iX+this.iW-w-60, this.iY+h+i*5, 141, 49);
    //		btn_strange.iNameSize=25;
    		this.bLockStatus=false;
    		this.iStatusOffY = 0;
    	}
    	
    	Draw()
    	{//快捷操作\\
    //xuc	int i;
    		var lt2;
    //xuc	int offx,offy;
    		var wgap=220;
    		var hgap=36;
    		var locky=0;
    	//	DrawMode.Frame3_BK(this.iX, this.iY, this.iW, this.iH,"快捷操作");

    		//12.20   画左按钮图标、文字、以及 基本大框
    	//	DrawMode.ui3_BaseFrame4(this.iX,this.iY,"快","捷","操","作");
    		
    		//xuc 0325  =============
    		DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH, "快","捷");
    		
    		var i,j;
    		var offx,offy,offw,offh;
    		
    		offx=this.iX+30;
    		offy=this.iY+30;
    		offw=670;
    		offh=315-30;
    		
    		DrawMode$1.new_framein(offx,offy,offw,offh);//左上背景
    		
    		offy=offy+offh+15;
    		offh=220+30;

    		DrawMode$1.new_framein(offx,offy,offw,offh);//左下背景
    //		GmPlay.sop(""+(offx-this.iX)+",,,"+(offy-this.iY)+",,,"+offw+",,,"+offh);

    	//	offx=this.iX+718;
    		offx=offx+offw+15;
    		offy=this.iY+30;
    		offw=170;
    		offh=550;

    		DrawMode$1.new_framein(offx,offy,offw,offh);//右边背景

    		this.btn_close.Draw();

    //		DrawMode.Frame2_MD(this.iX+10, this.iY+65, this.iW-20, 115);
    		//查看自身技能
    		offx=this.iX+10+20;
    		offy=this.iY+65+20;
    		this.Draw_Skill(offx,offy);

    		this.btn_vip.Draw();//vip
    		this.btn_sell.Draw();//摆摊
    		this.btn_find.Draw();
    		this.btn_restore.Draw();
    		this.btn_dark.Draw();//遇怪
    		this.btn_pk.Draw();//pk
    //		btn_strange.Draw();

    		offx=this.iX+30;offy=this.iY+330;
    		offw=670;offh=250;
    		M3DFast$1.gi().SetViewClip(offx+20,offy+20,offx+offw-20,offy+offh-20);
    		i=0;
    		if(GmMe$1.me.bStandIn)this.DrawStatus(i++,"替身状态","开启");
    		if(GmMe$1.me.bQP)this.DrawStatus(i++,"强行对战","开启");
    		if(GmMe$1.me.iFlag[3]>0)this.DrawStatus(i++,"血池剩余:",""+GmMe$1.me.iFlag[3]);
    		if(GmMe$1.me.iFlag[4]>0)this.DrawStatus(i++,"蓝池剩余:",""+GmMe$1.me.iFlag[4]);
    		
    		if(GmMe$1.me.iFlag[28]>0)i=this.DrawStatusEx1(i,"临时体质:","\t\t\t\t\t\t\t+"+((GmMe$1.me.iFlag[27]>>24)&0x1f),GmMe$1.me.iFlag[28]); //+((GmMe.me.iFlag[27]>>24)&0x1f)
    		if(GmMe$1.me.iFlag[29]>0)i=this.DrawStatusEx1(i,"临时法力:","\t\t\t\t\t\t\t+"+((GmMe$1.me.iFlag[27]>>18)&0x1f),GmMe$1.me.iFlag[29]); //+((GmMe.me.iFlag[27]>>18)&0x1f)
    		if(GmMe$1.me.iFlag[30]>0)i=this.DrawStatusEx1(i,"临时力量:","\t\t\t\t\t\t\t+"+((GmMe$1.me.iFlag[27]>>12)&0x1f),GmMe$1.me.iFlag[30]); //+((GmMe.me.iFlag[27]>>12)&0x1f)
    		if(GmMe$1.me.iFlag[31]>0)i=this.DrawStatusEx1(i,"临时耐力:","\t\t\t\t\t\t\t+"+((GmMe$1.me.iFlag[27]>>6)&0x1f),GmMe$1.me.iFlag[31]); //+((GmMe.me.iFlag[27]>>6)&0x1f)
    		if(GmMe$1.me.iFlag[32]>0)i=this.DrawStatusEx1(i,"临时敏捷:","\t\t\t\t\t\t\t+"+((GmMe$1.me.iFlag[27])&0x1f),GmMe$1.me.iFlag[32]); //+((GmMe.me.iFlag[27])&0x1f)
    		
    		if(GmMe$1.me.iFlagExt[1]>0)i=this.DrawStatusEx1(i,"临时愤怒:","\t\t\t\t\t\t\t\t\t\t\t\t\t+"+((GmMe$1.me.iFlagExt[0])&0x1f),GmMe$1.me.iFlagExt[1]); //+((GmMe.me.iFlagExt[0])&0x1f)
    		if(GmMe$1.me.iFlagExt[2]>0)i=this.DrawStatusEx1(i,"治疗能力:","\t\t\t\t\t\t\t\t\t\t\t\t\t+"+((GmMe$1.me.iFlagExt[0]>>6)&0x1f)+"%",GmMe$1.me.iFlagExt[2]); //+((GmMe.me.iFlagExt[0]>>6)&0x1f)
    		if(GmMe$1.me.iFlagExt[3]>0)i=this.DrawStatusEx1(i,"固定伤害:","\t\t\t\t\t\t\t\t\t\t\t\t\t+"+((GmMe$1.me.iFlagExt[0]>>12)&0x1f),GmMe$1.me.iFlagExt[3]); //+((GmMe.me.iFlagExt[0]>>12)&0x1f)
    		if(GmMe$1.me.iFlagExt[4]>0)
    		{
    			j=50+((GmMe$1.me.iFlagExt[0]>>18)&0x1f)*5;
    			if(j%10==0)i=this.DrawStatusEx1(i,"物法命中","\t\t\t\t\t\t\t\t\t\t\t\t\t+"+Math.floor(j/10)+"%",GmMe$1.me.iFlagExt[4]);
    			else i=this.DrawStatusEx1(i,"物法命中","\t\t\t\t\t\t\t\t\t\t\t\t\t+"+Math.floor(j/10)+"."+(j%10)+"%",GmMe$1.me.iFlagExt[4]);
    		}
    		if(GmMe$1.me.iFlagExt[5]>0)
    		{
    			j=10+((GmMe$1.me.iFlagExt[0]>>24)&0x1f)*5;
    			if(j%10==0)i=this.DrawStatusEx1(i,"物法暴击","\t\t\t\t\t\t\t\t\t\t\t\t\t+"+Math.floor(j/10)+"%",GmMe$1.me.iFlagExt[5]);
    			else i=this.DrawStatusEx1(i,"物法暴击","\t\t\t\t\t\t\t\t\t\t\t\t\t+"+Math.floor(j/10)+"."+(j%10)+"%",GmMe$1.me.iFlagExt[5]);
    		}
    		if(GmMe$1.me.iFlagExt[7]>0)i=this.DrawStatusEx1(i,"人物修炼","\t\t\t\t\t\t\t+"+((GmMe$1.me.iFlagExt[6])&0x1f),GmMe$1.me.iFlagExt[7]);
    		if(GmMe$1.me.iFlagExt[9]>0)i=this.DrawStatusEx1(i,"伤害结果","\t\t\t\t\t\t\t+"+((GmMe$1.me.iFlagExt[6]>>12)&0x1f)*20,GmMe$1.me.iFlagExt[9]);
    		if(GmMe$1.me.iFlagExt[10]>0)i=this.DrawStatusEx1(i,"宠物属性","\t\t\t\t\t\t\t+"+((GmMe$1.me.iFlagExt[6]>>18)&0x1f),GmMe$1.me.iFlagExt[10]);
    		
    		if(GmMe$1.me.iFlag[5]>0)i=this.DrawStatusEx1(i,"双倍时间","",GmMe$1.me.iFlag[5]);
    		if(GmMe$1.me.iFlag[34]>0)i=this.DrawStatusEx1(i,"三倍时间","",GmMe$1.me.iFlag[34]);
    		if(GmMe$1.me.iFlag[22]>0)i=this.DrawStatusEx1(i,"双倍体力","",GmMe$1.me.iFlag[22]);
    		if(GmMe$1.me.iFlag[23]>0)i=this.DrawStatusEx1(i,"自动遇怪","",GmMe$1.me.iFlag[23]);
    		
    		if(GmMe$1.me.iChangeType>0)
    		{
    			lt2=GmMe$1.me.iChangeLast+GmMe$1.me.ltex-XDefine$1.get_ms()/1000;
    			if(lt2<0)GmMe$1.me.iChangeType=0;
    			else
    			{
    				i=this.DrawStatusEx1(i,"变身状态\t\t\t\t\t\t\t\t\t\t\t\t\t",':'+GmPlay$1.de_pet.strValue(GmMe$1.me.iChangeType%10000, 0, 1),GmMe$1.me.iChangeLast);
    				if(GmMe$1.me.iChangeSkill>0)this.DrawStatus(i++,"变身技能\t\t\t\t\t\t\t",GmPlay$1.de_skill.strValue(GmMe$1.me.iChangeSkill, 0, 6));
    				if(GmMe$1.me.iChangeAtt>0)
    				{
    					j=GmMe$1.me.iChangeAtt%1000-100;
    					var _ss=["气血","灵力","伤害","防御","速度"];
    					this.DrawStatus(i++,"变身属性\t\t\t\t\t\t\t",(j>0?"+"+j:j)+"%"+_ss[Math.floor(GmMe$1.me.iChangeAtt/1000)%10]);
    				}
    				this.DrawStatus(i++,"变身对战\t\t\t\t\t\t\t","剩余"+GmMe$1.me.iChangeFC+"次");
    			}
    		}
    		M3DFast$1.gi().NoClip();
    		j=(i+1)/2;
    		if(!this.bLockStatus)
    		{
    			if(this.iStatusOffY<0)this.iStatusOffY/=2;
    			i=j*36-210;
    			if(i<0)i=0;
    			if(this.iStatusOffY>i)
    			{
    				this.iStatusOffY-=(this.iStatusOffY-i)/2;
    			}
    		}
    	}
    	
    	 DrawStatusEx1( at, name, add, tm)
    	{
    		var lt=tm+GmMe$1.me.lt1-XDefine$1.get_ms()/1000;
    		if(lt<0)return at;
    		
    		this.DrawStatus(at++,name,add+"("+Math.floor(lt/3600)+":"+Math.floor(lt/60%60)+":"+Math.floor(lt%60)+")");
    		return at;
    	}
    	/**
    	 * 
    	 * @param {number} at 
    	 * @param {string} name 
    	 * @param {string} detail 
    	 */
    	 DrawStatus( at, name, detail)
    	{//30,330,670,250
    		var offx,offy;
    		
    		offx=this.iX+30+(at%2)*300+50;
    		offy=this.iY+330+Math.floor(at/2)*36+10-this.iStatusOffY;
    		
    		DrawMode$1.ui3_Text2_(offx, offy,110,50,name,detail);
    	}
    	
    	Draw_Skill( offx, offy)
    	{//(this.iW-60-6*60)/7
    	//	int space=(this.iW-60-6*60)/7;
    		var basex=offx;
    		var space = 35;
    		offx+=space;
    		offy-=35;
    		
    		GmPlay$1.xani_nui2.DrawAnima(this.iX+760,this.iY+50, "技能框",0);
    		if(GmMe$1.me.rbs.iSchoolId>0)
    		{//有门派，可遁地
    //			GmPlay.sop("offx="+(offx-this.iX)+",,,,offy="+(offy-this.iY));
    			this.btn_dundi.Move(this.iX+760,this.iY+50, 80, 80);
    			this.btn_dundi.Draw();
    			M3DFast$1.gi().DrawText_2(this.iX+760+40,this.iY+50+105, "遁地术", 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		}
    		
    		GmPlay$1.xani_nui2.DrawAnima(offx,offy, "技能框",0);
    		if(GmMe$1.me.rbs.iGovSkill[1]>0)
    		{
    			this.btn_zhiyao.Move(offx, offy, 80, 80);
    			this.btn_zhiyao.Draw();
    			M3DFast$1.gi().DrawText_2(offx+40,offy+105, GmPlay$1.de_skill.strValue(GameData$1.iGovSkillId[1], 0, 6)+GmMe$1.me.rbs.iGovSkill[1]+"级", 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		}
    		offx+=90+space;
    		
    		GmPlay$1.xani_nui2.DrawAnima(offx,offy, "技能框",0);
    		if(GmMe$1.me.rbs.iGovSkill[2]>0)
    		{
    			this.btn_pengren.Move(offx, offy, 80, 80);
    			this.btn_pengren.Draw();
    			M3DFast$1.gi().DrawText_2(offx+40,offy+105, GmPlay$1.de_skill.strValue(GameData$1.iGovSkillId[2], 0, 6)+GmMe$1.me.rbs.iGovSkill[2]+"级", 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		}
    		offx+=90+space;
    		
    		GmPlay$1.xani_nui2.DrawAnima(offx,offy, "技能框",0);
    		if(GmMe$1.me.rbs.iGovSkill[3]>0)
    		{
    			this.btn_duanzao.Move(offx, offy, 80, 80);
    			this.btn_duanzao.Draw();
    			M3DFast$1.gi().DrawText_2(offx+40,offy+105, GmPlay$1.de_skill.strValue(GameData$1.iGovSkillId[3], 0, 6)+GmMe$1.me.rbs.iGovSkill[3]+"级", 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		}
    		offx+=90+space;
    		
    		GmPlay$1.xani_nui2.DrawAnima(offx,offy, "技能框",0);
    		if(GmMe$1.me.rbs.iGovSkill[4]>0)
    		{
    			this.btn_yejin.Move(offx, offy, 80, 80);
    			this.btn_yejin.Draw();
    			M3DFast$1.gi().DrawText_2(offx+40,offy+105, GmPlay$1.de_skill.strValue(GameData$1.iGovSkillId[4], 0, 6)+GmMe$1.me.rbs.iGovSkill[4]+"级", 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    			
    		}
    		offx+=90+space;
    		
    		GmPlay$1.xani_nui2.DrawAnima(offx,offy, "技能框",0);
    		if(GmMe$1.me.rbs.iGovSkill[5]>0)
    		{
    			this.btn_jiancai.Move(offx, offy, 80, 80);
    			this.btn_jiancai.Draw();
    			M3DFast$1.gi().DrawText_2(offx+40,offy+105, GmPlay$1.de_skill.strValue(GameData$1.iGovSkillId[5], 0, 6)+GmMe$1.me.rbs.iGovSkill[5]+"级", 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		}
    		offx+=90+space + 70;
    		
    //		offx = offx -(90+space)*6 - 70;
    		offx=basex+space;
    		offy += 135;
    		//第二行 四个新技能
    		{
    			GmPlay$1.xani_nui2.DrawAnima(offx,offy, "技能框",0);
    			
    			//this.btn_jiancai.Move(offx+10, offy+10, 60, 60);
    			//this.btn_jiancai.Draw();
    			//M3DFast.gi().DrawText_2(offx+45,offy+105, "探索", 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    			offx+=90+space;
    		}
    		{
    			GmPlay$1.xani_nui2.DrawAnima(offx,offy, "技能框",0);
    			
    			//this.btn_jiancai.Move(offx+10, offy+10, 60, 60);
    			//this.btn_jiancai.Draw();
    			//M3DFast.gi().DrawText_2(offx+45,offy+105, "识破", 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    			offx+=90+space;
    		}
    		{
    			GmPlay$1.xani_nui2.DrawAnima(offx,offy, "技能框",0);
    			
    			//this.btn_jiancai.Move(offx+10, offy+10, 60, 60);
    			//this.btn_jiancai.Draw();
    			//M3DFast.gi().DrawText_2(offx+45,offy+105, "建造", 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    			offx+=90+space;
    		}
    		{
    			GmPlay$1.xani_nui2.DrawAnima(offx,offy, "技能框",0);
    			
    			//this.btn_jiancai.Move(offx+10, offy+10, 60, 60);
    			//this.btn_jiancai.Draw();
    			//M3DFast.gi().DrawText_2(offx+45,offy+105, "能工巧匠", 0xffffe0c0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    			offx+=90+space;
    		}
    	}
    //case 1:return "炼丹术";
    //case 2:return "烹饪";
    //case 3:return "锻造";
    //case 4:return "冶金";
    //case 5:return "剪裁";

    	ProcTouch( msg, x, y)
    	{
    		var i;
    		var offx,offy,offw,offh;
    		offx=this.iX+30;offy=this.iY+330;
    		offw=670;offh=250;
    		if(this.bLockStatus)
    		{
    			if(msg==2)
    			{
    				this.iStatusOffY+=(this.iLockY-y);
    				this.iLockY=y;
    			}
    			if(msg==3)this.bLockStatus=false;
    		}
    		if(XDefine$1.bInRect(x, y, offx, offy, offw, offh))
    		{//可见高度210
    			if(msg==1)
    			{
    				this.bLockStatus=true;
    				this.iLockY=y;
    			}
    		}

    		if(GmMe$1.me.rbs.iSchoolId>0)
    		{//有门派，可遁地
    			if(this.btn_dundi.ProcTouch(msg, x, y))
    			{
    				if(this.btn_dundi.bCheck())
    				{
    					if(MyTeam$1.bNoTeam() || MyTeam$1.bAway())
    					{
    						if(GmMe$1.me.rbs.iSchoolId>0)
    						{
    							GmProtocol$1.gi().s_UseSkill(0,0,0,0,0,0,0);
    							XStat$1.gi().PopStat(1);
    							MapManager.gi().iMapChangeing=100;
    							
    							if(MyMission.m.bCheckDoing(143))GmProtocol$1.gi().s_FinishMission(0,143,0,0);
    						}
    					}
    					else EasyMessage.easymsg.AddMessage("队伍中不能使用遁地术");
    				}
    			}
    		}
    		if(GmMe$1.me.rbs.iGovSkill[1]>0)
    		{//炼丹
    			if(this.btn_zhiyao.ProcTouch(msg, x, y))
    			{
    				if(this.btn_zhiyao.bCheck())
    				{
    					XStat$1.gi().PopStat(1);
    					LianDanShu.Open(null, null);
    				}
    				return true;
    			}
    		}
    		if(GmMe$1.me.rbs.iGovSkill[2]>0)
    		{//烹饪
    			if(this.btn_pengren.ProcTouch(msg, x, y))
    			{
    				if(this.btn_pengren.bCheck())
    				{
    					if(GmMe$1.me.rbs.iGovSkill[2]<10)EasyMessage.easymsg.AddMessage("烹饪技能达到10级才可使用");
    					else if(GmMe$1.me.rbs.iPower<GmMe$1.me.rbs.iGovSkill[2])EasyMessage.easymsg.AddMessage("体力不足无法烹饪");
    					else GmProtocol$1.gi().s_UseSkill(9,0,0,0,0,0,0);
    				}
    				return true;
    			}
    		}
    		if(GmMe$1.me.rbs.iGovSkill[3]>0)
    		{//锻造
    			if(this.btn_duanzao.ProcTouch(msg, x, y))
    			{
    				if(this.btn_duanzao.bCheck())
    				{
    					GmProtocol$1.gi().s_UseSkill(1,0,0,0,0,0,0);
    				}
    			}
    		}
    		if(GmMe$1.me.rbs.iGovSkill[4]>0)
    		{//冶金
    			if(this.btn_yejin.ProcTouch(msg, x, y))
    			{
    				if(this.btn_yejin.bCheck())
    				{
    					GmProtocol$1.gi().s_UseSkill(2,0,0,0,0,0,0);
    				}
    			}
    		}		
    		if(GmMe$1.me.rbs.iGovSkill[5]>0)
    		{//剪裁
    			if(this.btn_jiancai.ProcTouch(msg, x, y))
    			{
    				if(this.btn_jiancai.bCheck())
    				{
    					GmProtocol$1.gi().s_UseSkill(3,0,0,0,0,0,0);
    				}
    			}
    		}
    		////////////////////////////////////////////////////////////
    		if(this.btn_vip.ProcTouch(msg, x, y))
    		{
    			if(this.btn_vip.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    				MyAttFrame.Open(3);
    			}
    			return true;
    		}
    		if(this.btn_sell.ProcTouch(msg, x, y))
    		{
    			if(this.btn_sell.bCheck())
    			{//摆摊/打开我的摊位
    				if(GmMe$1.me.bHaveLock && GmMe$1.me.bLocked)EasyMessage.easymsg.AddMessage("未解锁不能摆摊");
    				else if(MyTeam$1.bInTeam())EasyMessage.easymsg.AddMessage("队伍中不能摆摊");
    				else if(GmMe$1.me.rbs.iLev<10)EasyMessage.easymsg.AddMessage("10级以上才能摆摊");
    				else if(MySell.gi().bSelling)
    				{
    					MySell.gi().bShow=true;
    					XStat$1.gi().PopStat(1);
    				}
    				else
    				{//开始摆摊，是否离npc太近
    					for(i=0;i<MapManager.gi().vbk.MAXVISUALBLOCK;i++)
    					{
    						if(MapManager.gi().vbk.vbs[i]!=null)
    						{
    							if(!MapManager.gi().vbk.vbs[i].bCurrentBlock)continue;
    							if(XDefine$1.bInRect(MapManager.gi().vbk.vbs[i].iX, MapManager.gi().vbk.vbs[i].iY, GmMe$1.me.iX-100, GmMe$1.me.iY-160, 200, 200))
    							//if(XDefine.llength(GmMe.me.iX, GmMe.me.iY, MapManager.gi().vbk.vbs[i].iX, MapManager.gi().vbk.vbs[i].iY)<150)
    							{
    								EasyMessage.easymsg.AddMessage("摆摊不能距离NPC太近");
    								return true;
    							}
    						}
    					}
    					XStat$1.gi().PopStat(1);
    					GmProtocol$1.gi().s_StartSell(0,0,0,"");
    					if(GmMe$1.me.iFightMid>0)
    					{
    						GmMe$1.me.iFightMid=0;
    						GmProtocol$1.gi().s_ChangeFightMounts(0);
    					}
    					GmMe$1.me.ChangeStat("站立");
    				}
    			}
    			return true;
    		}
    		if(this.btn_find.ProcTouch(msg, x, y))
    		{
    			if(this.btn_find.bCheck())
    			{//查找好友
    				XStat$1.gi().PopStat(1);
    				XStat$1.gi().PushStat(XStat$1.GS_FINDFRIEND);
    			}
    			return true;
    		}
    		if(this.btn_restore.ProcTouch(msg, x, y))
    		{
    			if(this.btn_restore.bCheck())
    			{//恢复气血和魔法
    				i=(GmMe$1.me.rbs.iMaxHp-GmMe$1.me.rbs.iHp);
    				i+=(GmMe$1.me.rbs.iMaxMp-GmMe$1.me.rbs.iMp)*2;
    				var pt=MyPets$1.mp.GetUseingPet();
    				if(pt!=null)
    				{
    					i+=(pt.iMaxHp-pt.iHp);
    					i+=(pt.iMaxMp-pt.iMp);
    				}
    				GmProtocol$1.gi().s_UseSkill(7,0,0,0,0,0,0);
    //				XStat.gi().PopStat(1);
    //				XStat.gi().PushStat(XStat.GS_SMALLMAP);
    			}
    			return true;
    		}
    		if(this.btn_dark.ProcTouch(msg, x, y))
    		{
    			if(this.btn_dark.bCheck())
    			{
    				GmMe$1.me.bDark=!GmMe$1.me.bDark;
    				if(GmMe$1.me.bDark)
    				{
    					this.btn_dark.sName="遇怪:开";
    					GmProtocol$1.gi().s_setflag(2, 0, 0);
    				}
    				else
    				{
    					this.btn_dark.sName="遇怪:关";
    					GmProtocol$1.gi().s_setflag(2, 0, 1);
    				}
    			}
    		}
    		if(this.btn_pk.ProcTouch(msg, x, y))
    		{
    			if(this.btn_pk.bCheck())
    			{
    				GmMe$1.me.bPk=!GmMe$1.me.bPk;
    				if(GmMe$1.me.bPk)
    				{
    					this.btn_pk.sName="对战:开";
    					GmProtocol$1.gi().s_setflag(2, 1, 0);
    				}
    				else
    				{
    					this.btn_pk.sName="对战:关";
    					GmProtocol$1.gi().s_setflag(2, 1, 1);
    				}
    			}
    		}
    //		if(btn_strange.ProcTouch(msg, x, y))
    //		{
    //			if(btn_strange.bCheck())
    //			{
    //				GmMe.me.bStrange=!GmMe.me.bStrange;
    //				if(GmMe.me.bStrange)
    //				{
    //					btn_strange.sName="陌生:开";
    //					GmProtocol.gi().s_setflag(2, 7, 0);
    //				}
    //				else
    //				{
    //					btn_strange.sName="陌生:关";
    //					GmProtocol.gi().s_setflag(2, 7, 1);
    //				}
    //			}
    //		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }

    class ShowActivityDetail extends BaseClass{

    	constructor( xani)
    	{
    		super();
    		this.iW=650;
    		this.iH=400;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.pc_price=new Array(8);//
    		this.btn_price=new Array(8);//
    		for(var i=0;i<8;i++)
    		{
    			this.btn_price[i]=new XButtonEx2$1(GmPlay$1.xani_ui);
    			this.btn_price[i].bSingleButton=true;
    		}
    		this.ishowdetail=-1;
    		this.gd=new Goods();
    	}

    	Draw()
    	{
    		var pc_detail,pc;
    		var pw_time;
    		var pw_allow;
    		var pn_gid;
    		var pw_detail;
    		var pw_name;
    		
    		pc_detail=this.pc_show.FindClass("详细信息");
    		DrawMode$1.frame_type4("半透明内容框a50_50", this.iX, this.iY, this.iW, this.iH, 50, 50);
    		
    		GmPlay$1.xani_frame.DrawAnima(this.iX+40,this.iY+40, "活跃图标框73_73",0);
    		
    		pw_name=this.pc_show.FindWord("活动名称");
    		if(pw_name==null)
    		{
    			GmPlay$1.xani_icon.DrawAnima_aa(this.iX+40,this.iY+40, this.pc_show.sName, 0);
    			M3DFast$1.gi().DrawText_2(this.iX+150, this.iY+55, this.pc_show.sName, 0xffffff00, 30, 101, 1, 1, 0, 0, -2, 2, 0xff000000);
    		}
    		else
    		{
    			GmPlay$1.xani_icon.DrawAnima_aa(this.iX+40,this.iY+40, pw_name.pword, 0);
    			M3DFast$1.gi().DrawText_2(this.iX+150, this.iY+55, pw_name.pword, 0xffffff00, 30, 101, 1, 1, 0, 0, -2, 2, 0xff000000);			
    		}
    		var offy=130;
    		if(this.iType==0 || this.iType==1)
    		{
    			M3DFast$1.gi().DrawTextEx(this.iX+150, this.iY+50+40, this.sExtShow, 0xffffffff, 20,101, 1, 1, 0, 0, -2);
    			
    			M3DFast$1.gi().DrawTextEx(this.iX+40, this.iY+offy, "活动时间：", 0xffffffff, 20,101, 1, 1, 0, 0, 0);
    			pw_time=pc_detail.FindWord("活动时间");
    			M3DFast$1.gi().DrawTextEx(this.iX+150, this.iY+offy, pw_time.pword, 0xffffffff, 20,101, 1, 1, 0, 0, 0);
    			
    			offy+=30;
    			
    			pw_allow=pc_detail.FindWord("限制单位");
    			if(pw_allow==null)M3DFast$1.gi().DrawTextEx(this.iX+40, this.iY+offy, "等级限制：", 0xffffffff, 20,101, 1, 1, 0, 0, 0);
    			else M3DFast$1.gi().DrawTextEx(this.iX+40, this.iY+offy,pw_allow.pword+"：", 0xffffffff, 20,101, 1, 1, 0, 0, 0);
    			pw_time=pc_detail.FindWord("等级限制");
    			M3DFast$1.gi().DrawTextEx(this.iX+150, this.iY+offy, pw_time.pword, 0xffffffff, 20,101, 1, 1, 0, 0, 0);
    			
    			offy+=30;
    			M3DFast$1.gi().DrawTextEx(this.iX+40, this.iY+offy, "任务形式：", 0xffffffff, 20,101, 1, 1, 0, 0, 0);
    			pw_time=pc_detail.FindWord("任务形式");
    			M3DFast$1.gi().DrawTextEx(this.iX+150, this.iY+offy, pw_time.pword, 0xffffffff, 20,101, 1, 1, 0, 0, 0);
    			
    			offy+=30;
    			M3DFast$1.gi().DrawTextEx(this.iX+40, this.iY+offy, "任务介绍：", 0xffffffff, 20,101, 1, 1, 0, 0, 0);
    			pw_time=pc_detail.FindWord("任务介绍");
    			FormatString.gi().FormatEx(pw_time.pword, 425, 20, 0, 0, 25);
    			FormatString.gi().Draw(this.iX+150, this.iY+offy);
    //			M3DFast.gi().DrawTextEx(this.iX+160, this.iY+offy, pw_time.pword, 0xffffffff, 20,101, 1, 1, 0, 0, 0);
    			
    			offy+=FormatString.gi().iH+10;
    			
    			pc=pc_detail.FindClass("任务奖励");
    			if(pc!=null){
    				pc=pc.pca.phead;
    				M3DFast$1.gi().DrawTextEx(this.iX+40, this.iY+offy, "任务奖励：", 0xffffffff, 20,101, 1, 1, 0, 0, 0);
    			}else{
    				offy-=100;
    			}
    			this.iPriceCount=0;
    			while(pc!=null)
    			{
    				pn_gid=pc.FindNumber("物品id");
    				pw_detail=pc.FindWord("物品介绍");
    				GmPlay$1.xani_nui3.DrawAnima(this.iX+150+this.iPriceCount*100, this.iY+offy, "物品格子",0);
    				GmPlay$1.xani_ngoods.DrawAnima_aa(this.iX+150+this.iPriceCount*100, this.iY+offy, GmPlay$1.de_goods.strValue(pn_gid.iNumber, 0, 10),0);
    			//	GmPlay.sop(""+GmPlay.de_goods.strValue(pn_gid.iNumber, 0, 10));
    				
    				this.pc_price[this.iPriceCount]=pc;
    				this.btn_price[this.iPriceCount].Move(this.iX+160+this.iPriceCount*100, this.iY+offy, 80,80);
    				this.iPriceCount++;
    				pc=pc.pdown;
    			}
    			
    			if(this.ishowdetail>=0)
    			{//物品介绍
    				pn_gid=this.pc_price[this.ishowdetail].FindNumber("物品id");
    				pw_detail=this.pc_price[this.ishowdetail].FindWord("物品介绍");
    				if(pw_detail!=null)
    				{
    					GoodsDraw.new_DrawDetailEx1(pn_gid.iNumber,this.iX+150+this.ishowdetail*100, this.iY+offy,pw_detail.pword);
    				}
    				else
    				{
    					this.gd.SetAtt(0, pn_gid.iNumber, 1, 0, 0, 0, 0, 0, 0, 0, 0);
    					GoodsDraw.new_DrawDetail(this.gd,this.iX+150+this.ishowdetail*100, this.iY+offy,0);
    				}
    			}
    			
    			offy+=100;
    		}
    		else if(this.iType==4)
    		{
    			pc=pc_detail.pca.phead;
    			while(pc!=null)
    			{
    				pw_name=pc.FindWord("小标题");
    				pw_detail=pc.FindWord("详细内容");
    				if(pw_name!=null)
    				{
    					M3DFast$1.gi().DrawTextEx(this.iX+40, this.iY+offy, pw_name.pword, 0xffffffff, 20,101, 1, 1, 0, 0, 0);
    					offy+=30;
    				}
    				if(pw_detail!=null)
    				{
    					FormatString.gi().Format(pw_detail.pword, this.iW-80, 20);
    					FormatString.gi().Draw(this.iX+40, this.iY+offy);
    					offy+=FormatString.gi().iH+10;
    				}
    				pc=pc.pdown;
    			}
    		}
    		if(this.iH<offy+20)this.iH=offy+20;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		this.ishowdetail=-1;
    		for(i=0;i<this.iPriceCount;i++)
    		{
    			if(this.btn_price[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_price[i].bCheck())
    				{
    					this.ishowdetail=i;
    				}
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    		}
    		return false;
    	}
    }
    ShowActivityDetail.Open=function( pc, type, ext)
    {
    	var psad=XStat$1.gi().PushStat(XStat$1.GS_SHOWACTIVITYDETAIL);
    	psad.pc_show=pc;
    	psad.iType=type;
    	psad.sExtShow=ext;
    };

    class WeeklyActivity extends BaseClass{
    	

    	constructor( a)
    	{
    		super();
    		this.titles=["时间","星期日","星期一","星期二","星期三","星期四","星期五","星期六"];
    		
    		this.iW=130*7+170+90;
    		this.iH=50+50*6+90;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.ui_list=new UIList$1(0,8,130*7+170,50+50*6);
    		this.ui_list.SetTitle(0, "活动时间",170,false);
    		this.ui_list.SetTitle(1, "星期日", 130,true);
    		this.ui_list.SetTitle(2, "星期一", 130,true);
    		this.ui_list.SetTitle(3, "星期二", 130,true);
    		this.ui_list.SetTitle(4, "星期三", 130,true);
    		this.ui_list.SetTitle(5, "星期四", 130,true);
    		this.ui_list.SetTitle(6, "星期五", 130,true);
    		this.ui_list.SetTitle(7, "星期六", 130,true);
    		this.ui_list.iRowHeight=50;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    	}
    	
    	Draw()
    	{
    		var i=0,j;
    		var pc=this.pc_weekly.pca.phead,pc_w;
    		var pw;
    		DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH, "周", "历");
    		this.btn_close.Draw();
    		
    		var chk_line=this.ui_list.iCheckPoint;
    		var chk_x=this.ui_list.iCheckX;
    		this.ui_list.iCheckPoint=-1;
    		this.ui_list.iLockPoint=-1;
    		this.ui_list.BeginDraw(this.iX+45, this.iY+45);
    		while(pc!=null)
    		{
    			for(j=0;j<this.titles.length;j++)
    			{
    				if(j==0)
    				{
    					pw=pc.FindWord(this.titles[j]);
    					if(pw!=null)this.ui_list.DrawUnit(j,i, pw.pword);
    				}
    				else
    				{
    					pc_w=pc.FindClass(this.titles[j]);
    					if(pc_w!=null)
    					{
    						pw=pc_w.FindWord("活动名称");
    						if(pw!=null)
    						{
    							this.ui_list.DrawUnit(j,i, pw.pword);
    							if(chk_line==i && j==chk_x)
    							{//打开详细
    								ShowActivityDetail.Open(pc_w,0,"");
    							}
    						}
    					}
    				}
    			}
    			pc=pc.pdown;
    			i++;
    		}
    		this.ui_list.FinishDraw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.ui_list.ProcTouch(msg, x, y))
    		{
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }

    WeeklyActivity.Open=function( pc)
    {
    	var wa=XStat$1.gi().PushStat(XStat$1.GS_WEEKLYACTIVITY);
    	wa.pc_weekly=pc;
    };

    class _ACTLIST
    {
    //	public String sName;
    //	public int proc,max,add;
    constructor()
    {

    }
    }

    class _ACTPRICE
    {
    //	public int iNeed;
    //	public int iExp,iMoney;
    //	public int tid1,tcount1,tid2,tcount2;
    constructor()
    {

    }
    }

    class NewActivity extends BaseClass{
    	constructor( xani)
    	{
    		super();
    		this.sKeyName=["青铜钥匙","白银钥匙","黄金钥匙"];
    		this.iRoundSpeed=5;
    		this.bwaiting=false;
    		var i;
    		this.iW=1130;
    		this.iH=600;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.iPage=0;
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_page=new Array(2);//
    		for(i=0;i<2;i++)
    		{
    			this.btn_page[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_page[i].InitButton("右侧标签");
    		}
    		
    		this.i0Sort=0;
    		this.btn0_sort=new Array(5);//
    		for(i=0;i<5;i++)
    		{
    			this.btn0_sort[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn0_sort[i].InitButton("选择按钮145_56");
    		}
    		this.btn0_sort[0].sName="日常活动";
    		this.btn0_sort[1].sName="定时活动";
    		this.btn0_sort[2].sName="活动周历";
    		this.btn0_sort[3].sName="幸运转盘";
    		this.btn0_sort[4].sName="实力提升";
    		
    		this.btn_getact=new Array(6);//
    		for(i=0;i<6;i++)
    		{
    			this.btn_getact[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_getact[i].bSingleButton=true;
    		}
    		this.btn_sign=new Array(31);//
    		this.pc_price=new Array(31);//
    		for(i=0;i<31;i++)
    		{
    			this.btn_sign[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_sign[i].bSingleButton=true;
    		}
    		
    		var pc= XmsEngine.pxe.FindMain("七国");
    		this.pc_act=pc.FindFirst("活动界面资料", 5);
    		
    		this.btn0_go=new Array(32);//
    		this.btn0_detail=new Array(32);//
    		this.alist=new Array(32);//
    		this.aprice=new Array(32);//
    		for(i=0;i<32;i++)
    		{
    			this.btn0_go[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn0_go[i].InitButton("普通按钮100_55");
    			this.btn0_go[i].sName="前往";
    			
    			this.btn0_detail[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn0_detail[i].bSingleButton=true;
    			
    			this.alist[i]=new _ACTLIST();
    			this.aprice[i]=new _ACTPRICE();
    		}
    		this.i0GoToNpcIdList=new Int32Array(32);//
    		this.pc_detail=new Array(32);//
    		this.sExtShow=new Array(32);//
    		this.b0LockScroll=false;
    		this.i0OffY=0;
    		
    		this.ishowdetail=-1;
    		this.gd=new Goods();
    		
    		this.btn_extbuy=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_extbuy.InitButton("普通按钮100_55");
    		this.btn_extbuy.sName="购买";
    		
    		this.btn_extsign=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_extsign.InitButton("选择按钮145_56");
    		this.btn_extsign.sName="补签";
    		
    		this.iShowGet=-1;
    		this.btn_gift=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_gift.InitButton("礼包按钮");
    		this.btn_gift.sName="领  取";
    		
    		this.btn_watchprice=new Array(16);//
    		for(i=0;i<16;i++)
    		{
    			this.btn_watchprice[i]=new XButtonEx2$1(GmPlay$1.xani_ui2);
    			this.btn_watchprice[i].bSingleButton=true;
    		}
    		
    		this.aa_point=GmPlay$1.xani_skills[0].InitAnimaWithName("物品突出", null);
    		
    		this.btn_lottery=new Array(3);//
    		this.iKeyCount=new Int32Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.btn_lottery[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_lottery[i].InitButton("抽奖小按钮167_183");
    		}
    	}

    	 findactbyname( name)
    	{
    		var i;
    		for(i=0;i<this.iActCount;i++)
    		{
    			if(this.alist[i].sName==name)return this.alist[i];
    		}
    		return null;
    	}
    	lottery_startround( d)
    	{
    		this.iLotteryResult=d-1;//抽奖结果
    		EasyMessage.easymsg.Clear();
    		EasyMessage.easymsg.bDisable=true;//屏蔽物品获得显示
    		NewActivity.iLotteryRound=NewActivity.iLotteryRound%16;
    		NewActivity.iRoundDest=16+16+16+this.iLotteryResult;
    		this.iRoundSpeed=1;
    		this.iRoundDelay=this.iRoundSpeed;
    	}
    	
    	draw_lottery( offx, offy)
    	{
    		this.iRoundDelay--;
    		if(this.iRoundDelay<=0)
    		{
    			if(NewActivity.iLotteryRound<NewActivity.iRoundDest)
    			{
    				if(NewActivity.iRoundDest-NewActivity.iLotteryRound<15)
    				{
    					this.iRoundSpeed++;
    				}
    				NewActivity.iLotteryRound++;
    			}
    			else if(this.iLotteryResult>=0)
    			{
    				this.iLotteryResult=-1;
    				EasyMessage.easymsg.bDisable=false;
    				this.bwaiting=false;
    			}
    			this.iRoundDelay=this.iRoundSpeed;
    		}
    		var i;
    		var pc=this.pc_act.FindClass("抽奖物品");
    		pc=pc.pca.phead;
    		var pn_x,pn_y;
    		var pn_gid;
    		var pw_detail;
    		var pc_show=null;
    		var showx=0,showy=0;
    		var BW=119+19;
    		var BH=85+13;
    		var xx,yy;
    		this.iCjCount=0;
    		while(pc!=null)
    		{
    			pn_x=pc.FindNumber("x");
    			pn_y=pc.FindNumber("y");
    			pn_gid=pc.FindNumber("物品id");
    			pw_detail=pc.FindWord("物品描述");
    			xx=offx+20+pn_x.iNumber*BW;
    			yy=offy+20+pn_y.iNumber*BH;
    			GmPlay$1.xani_frame.DrawAnima(xx, yy, "抽奖物品框119_85", 0);
    			GmPlay$1.xani_ngoods.DrawAnima_aa(xx+(119-80)/2, yy+(85-80)/2, GmPlay$1.de_goods.strValue(pn_gid.iNumber, -1, 10),0);
    			if(NewActivity.iLotteryRound%16==this.iCjCount)
    			{
    				DrawMode$1.frame_type2("黄色透明框a25_25", xx, yy, 119, 85, 25, 25);//选中
    			}
    	//		GmPlay.sop(""+this.iCjCount);
    			this.btn_watchprice[this.iCjCount].Move(xx, yy, 119, 85);
    			if(this.ishowdetail==this.iCjCount)
    			{
    				pc_show=pc;
    				showx=xx;
    				showy=yy;
    			}
    			pc=pc.pdown;
    			this.iCjCount++;
    		}
    		for(i=0;i<3;i++)this.iKeyCount[i]=0;
    		for(i=0;i<20;i++)
    		{
    			if(MyGoods.gi().goods[2][i].iGid>0)
    			{
    				if(MyGoods.gi().goods[2][i].iTid==386)this.iKeyCount[0]+=MyGoods.gi().goods[2][i].iCount;
    				if(MyGoods.gi().goods[2][i].iTid==387)this.iKeyCount[1]+=MyGoods.gi().goods[2][i].iCount;
    				if(MyGoods.gi().goods[2][i].iTid==388)this.iKeyCount[2]+=MyGoods.gi().goods[2][i].iCount;
    			}
    		}
    		for(i=0;i<3;i++)
    		{
    			xx=offx+20+BW+(167+15)*i;
    			yy=offy+20+BH;
    			this.btn_lottery[i].Move(xx,yy, 167, 183);
    			this.btn_lottery[i].Draw();
    			GmPlay$1.xani_ngoods.DrawAnima_aa(xx+167/2-40, yy+183/2-40-30, this.sKeyName[i],0);
    			//根据背包中钥匙数量
    			M3DFast$1.gi().DrawText_2(xx+167/2, yy+183/2+40, ""+this.iKeyCount[i], 0xffffff00, 30, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		//M3DFast.gi().DrawText_2(offx+20+BW+533/2, offy+20+BH+183/2-30, "抽   奖", 0xffffff00, 80, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		}
    //		if(this.iActNumber>=45 && (GmMe.me.iFlag[24]&32768)==0)
    //		{
    //			M3DFast.gi().DrawText_2(offx+20+BW+533/2, offy+20+BH+183/2+50, "本次抽奖免费", 0xffffff00, 30, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    //		}
    //		else
    //		{
    //			i=(GmMe.me.iFlag[61]/100000)%10;
    //			switch(i)
    //			{
    //			case 0:
    //				M3DFast.gi().DrawText_2(offx+20+BW+533/2, offy+20+BH+183/2+50, "本次抽奖需花费5万游戏币", 0xffffff00, 30, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    //				break;
    //			case 1:
    //				M3DFast.gi().DrawText_2(offx+20+BW+533/2, offy+20+BH+183/2+50, "本次抽奖需花费10万游戏币", 0xffffff00, 30, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    //				break;
    //			case 2:
    //				M3DFast.gi().DrawText_2(offx+20+BW+533/2, offy+20+BH+183/2+50, "本次抽奖需花费20元宝", 0xffffff00, 30, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    //				break;
    //			case 3:
    //				M3DFast.gi().DrawText_2(offx+20+BW+533/2, offy+20+BH+183/2+50, "本次抽奖需花费40元宝", 0xffffff00, 30, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    //				break;
    //			case 4:
    //				M3DFast.gi().DrawText_2(offx+20+BW+533/2, offy+20+BH+183/2+50, "本次抽奖需花费80元宝", 0xffffff00, 30, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    //				break;
    //			default:
    //				M3DFast.gi().DrawText_2(offx+20+BW+533/2, offy+20+BH+183/2+50, "当日抽奖次数已用完", 0xffffff00, 30, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    //				break;
    //			}
    //		}
    		
    		if(this.ishowdetail>=0 && pc_show!=null)
    		{
    			pn_gid=pc_show.FindNumber("物品id");
    			pw_detail=pc_show.FindWord("物品描述");
    			if(pw_detail !=null)
    			{
    				GoodsDraw.new_DrawDetailEx1(pn_gid.iNumber,showx,showy,pw_detail.pword);
    			}
    			else
    			{
    				this.gd.SetAtt(0, pn_gid.iNumber, 1, 0, 0, 0, 0, 0, 0, 0, 0);
    				GoodsDraw.new_DrawDetail(this.gd,showx,showy,0);
    			}
    		}
    	}
    	draw_get( j)
    	{
    		var offx,offy,offw,offh;
    		var p=0;
    		var m,n;
    		
    		offw=465;
    		offh=381;
    		offx=(GmConfig$1.SCRW-offw)/2;
    		offy=(GmConfig$1.SCRH-offh)/2;
    		
    		GmPlay$1.xani_nui2.DrawAnima(offx,offy,"礼包背景框",0);
    		if(this.aprice[j].iExp>0)
    		{
    			m=offx+60+p%2*190;
    			n=offy+100;//+p%2/2*100;
    			
    			GmPlay$1.xani_nui2.DrawAnima(m,n, "礼品格子",1);
    			GmPlay$1.xani_ngoods.DrawAnima(m,n, "物品经验", 0);
    			M3DFast$1.gi().DrawTextEx(m+80,n+80, ""+this.aprice[j].iExp, 0xffffffff, 20, 101, 1, 1, 0, -3, -3);
    			
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+11, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+11+11, "经验", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+45, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+45+11, "x 1", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			p++;
    		}
    		if(this.aprice[j].iMoney>0)
    		{
    			m=offx+60+p%2*190;
    			n=offy+100;//+p%2/2*100;
    			
    			GmPlay$1.xani_nui2.DrawAnima(m,n, "礼品格子",1);
    			GmPlay$1.xani_ngoods.DrawAnima(m,n, "物品钱", 0);
    			M3DFast$1.gi().DrawTextEx(m+80,n+80, ""+this.aprice[j].iMoney, 0xffffffff, 20, 101, 1, 1, 0, -3, -3);
    			
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+11, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+11+11, "金钱", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+45, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+45+11, "x 1", 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			p++;
    		}
    		if(this.aprice[j].tid1>0 && this.aprice[j].tcount1>0)
    		{
    			m=offx+60+p%2*190;
    			n=offy+100+1*100;
    			
    			GmPlay$1.xani_nui2.DrawAnima(m,n, "礼品格子",1);
    			GmPlay$1.xani_ngoods.DrawAnima_aa(m, n, GmPlay$1.de_goods.strValue(this.aprice[j].tid1, -1, 10),0);
    			
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+11, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+11+11, GmPlay$1.de_goods.strValue(this.aprice[j].tid1, -1, 4), 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+45, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+45+11, "x "+this.aprice[j].tcount1, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			p++;
    		}
    		if(this.aprice[j].tid2>0 && this.aprice[j].tcount2>0)
    		{
    			m=offx+60+p%2*190;
    			n=offy+100+1*100;
    			
    			GmPlay$1.xani_nui2.DrawAnima(m,n, "礼品格子",1);
    			GmPlay$1.xani_ngoods.DrawAnima_aa(m, n, GmPlay$1.de_goods.strValue(this.aprice[j].tid2, -1, 10),0);
    			  
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+11, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+11+11, GmPlay$1.de_goods.strValue(this.aprice[j].tid2, -1, 4), 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			GmPlay$1.xani_nui2.DrawAnima(m+80+20,n+45, "礼包文本框",0);
    			M3DFast$1.gi().DrawTextEx(m+80+20+30,n+45+11, "x "+this.aprice[j].tcount2, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    			p++;
    		}
    		this.btn_gift.Move( offx+(offw-134)/2, offy+offh-44-40,134,44);
    		this.btn_gift.Draw();
    	}
    	Draw()
    	{
    		if(XStat$1.gi().FindStat(XStat$1.GS_WEEKLYACTIVITY)!=null)return;
    		var i;
    		DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH, "活", "动");

    		for(i=0;i<2;i++)
    		{
    			this.btn_page[i].Move(this.iX+this.iW-15, this.iY+40+130*i, 50, 130);
    			if(this.iPage==i)this.btn_page[i].bMouseDown=true;
    			this.btn_page[i].Draw();
    			if(i==0)DrawMode$1.new_lableword4(this.iX+this.iW-15, this.iY+40+130*i, 40, 80,this.iPage==i,"日","常","活","动");
    			else DrawMode$1.new_lableword2(this.iX+this.iW-15, this.iY+40+130*i, 40, 130,this.iPage==i,"签","到");
    		}
    		this.btn_close.Draw();
    		
    		this.Draw_act(this.iX+35, this.iY+this.iH-90);
    		
    		switch(this.iPage)
    		{
    		case 0://日常活动
    			this.Draw_0();
    			break;
    		case 1://签到
    			this.Draw_1();
    			break;
    		}
    		
    		if(this.iShowGet>=0)
    		{
    			this.draw_get(this.iShowGet);
    		}
    	}
    	 Draw_1()
    	{
    		var i,k;
    		var xx,yy;
    		var offx,offy,offw,offh;
    		offx=this.iX+30;
    		offy=this.iY+30;
    		offw=200;
    		offh=420;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		
    		M3DFast$1.gi().DrawTextEx(offx+100, offy+40, "最新动态", 0xff003e57, 30, 101, 1, 1, 0, -2, -2);
    		
    		offx+=offw+20;
    		offw=630;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		
    		this.iR0X=offx;
    		this.iR0Y=offy;
    		this.iR0W=offw;
    		this.iR0H=offh;
    		
    		var pc;
    		var pn_gid;
    		var pw_detail;
    		
    		pc=this.pc_act.FindClass("签到奖励");
    		pc=pc.pca.phead;
    		
    		this.i0Count=0;
    		M3DFast$1.gi().SetViewClip(offx+20, offy+20, offx+offw-20, offy+offh-20);
    		GmPlay$1.sop(""+this.iSignCount);
    		while(pc!=null)
    		{
    			pn_gid=pc.FindNumber("物品id");
    			pw_detail=pc.FindWord("描述");
    			
    			xx=offx+25+(this.i0Count%6)*100;
    			yy=offy+20+parseInt(this.i0Count/6)*100-this.i0OffY;
    			//格子,图标
    			GmPlay$1.xani_nui3.DrawAnima(offx+25+(this.i0Count%6)*100,offy+20+parseInt(this.i0Count/6)*100-this.i0OffY, "物品格子",0);
    			GmPlay$1.xani_ngoods.DrawAnima_aa(offx+25+(this.i0Count%6)*100,offy+20+parseInt(this.i0Count/6)*100-this.i0OffY, GmPlay$1.de_goods.strValue(pn_gid.iNumber, 0, 10),0);
    			
    			if(this.i0Count<this.iSignCount)M3DFast$1.gi().FillRect_2D(xx,yy,xx+80,yy+80, 0x80000000);//阴影
    			else if(this.i0Count==this.iSignCount)
    			{
    				if((GmMe$1.me.iFlag[50]&(1<<(this.iTodayDay-1)))==0)
    				{//今日未签提示
    					this.aa_point.Draw(xx, yy);
    					this.aa_point.NextFrame();
    					//DrawMode.frame_type2("黄色透明框a25_25", xx, yy, 80, 80, 25, 25);//选中
    				}
    				//else M3DFast.gi().FillRect_2D(xx,yy,xx+80,yy+80, 0x80000000);//阴影
    			}
    			if(this.ishowdetail==this.i0Count)
    			{//选中效果
    				DrawMode$1.frame_type2("黄色透明框a25_25", xx, yy, 80, 80, 25, 25);//选中
    			}
    			this.pc_price[this.i0Count]=pc;
    			this.btn_sign[this.i0Count].Move(offx+25+(this.i0Count%6)*100,offy+20+parseInt(this.i0Count/6)*100-this.i0OffY, 80,80);
    			
    			pc=pc.pdown;
    			this.i0Count++;
    			if(this.i0Count>=this.iMaxDay)break;
    		}
    		M3DFast$1.gi().NoClip();
    		this.i0OffH=parseInt((this.i0Count+5)/6)*100-offh+40;
    		if(this.i0OffH<0)this.i0OffH=0;
    		
    		offx+=offw+20;
    		offw=200;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		
    		if(GmMe$1.me.iFlag[20]>0)this.iExtSignCount=5-(GmMe$1.me.iFlag[62]/10000)%10;//vip
    		else this.iExtSignCount=0;
    		this.iExtSignCount+=Math.floor((GmMe$1.me.iFlag[62]/1000)%10);
    		
    		if((this.ishowdetail<0 && ((this.iTodayDay-1)%6)==1) || (this.ishowdetail>=0 && (this.ishowdetail%6)==1))
    		{//指向储备，vip额外得到双倍
    			M3DFast$1.gi().DrawTextEx(offx+100, offy+40, "会员专属", 0xff003e57, 30, 101, 1, 1, 0, -2, -2);
    			
    			GmPlay$1.xani_nui3.DrawAnima(offx+100-40,offy+40+40, "物品格子",0);
    			GmPlay$1.xani_ngoods.DrawAnima_aa(offx+100-40,offy+40+40, GmPlay$1.de_goods.strValue(118, 0, 10),0);

    			M3DFast$1.gi().DrawTextEx(offx+100, offy+40+40+80+40, "签到额外获得", 0xff003e57, 25, 101, 1, 1, 0, -2, -2);
    		}
    		else if((this.ishowdetail<0 && ((this.iTodayDay-1)%6)==3) || (this.ishowdetail>=0 && (this.ishowdetail%6)==3))
    		{//指向传送，vip可40元宝购买高级仙灵果
    			M3DFast$1.gi().DrawTextEx(offx+100, offy+40, "会员折扣", 0xff003e57, 30, 101, 1, 1, 0, -2, -2);
    			
    			GmPlay$1.xani_nui3.DrawAnima(offx+100-40,offy+40+40, "物品格子",0);
    			GmPlay$1.xani_ngoods.DrawAnima_aa(offx+100-40,offy+40+40, GmPlay$1.de_goods.strValue(161, 0, 10),0);

    			M3DFast$1.gi().DrawTextEx(offx+100, offy+40+40+80+40, "40元宝", 0xff003e57, 25, 101, 1, 1, 0, -2, -2);

    			//购买
    			this.btn_extbuy.Move(offx+50, offy+40+40+80+40+25+20, 100, 55);
    			this.btn_extbuy.Draw();
    		}
    		else
    		{//正常显示
    //			FormatString.gi().Format("#c003e57VIP拥有5次当月补签次数，连续签到七天可获得一次党羽补签次数，每天只能补签一次", 165, 20);
    			FormatString.gi().FormatEx("#c003e57会员拥有5次当月补签次数，连续签到七天可获得一次当月补签次数，每天只能补签一次", 165, 20, 0, 0, 25);
    			FormatString.gi().Draw(offx+20, offy+20);
    			
    			M3DFast$1.gi().DrawTextEx(offx+20, offy+20+FormatString.gi().iH+40, "累计签到"+this.iSignCount+"天", 0xff003e57, 20, 101, 1, 1, 0, 0, -2);
    			M3DFast$1.gi().DrawTextEx(offx+20, offy+20+FormatString.gi().iH+40+40, "连续签到"+(GmMe$1.me.iFlag[62]%10)+"天", 0xff003e57, 20, 101, 1, 1, 0, 0, -2);

    			M3DFast$1.gi().DrawTextEx(offx+20, offy+20+FormatString.gi().iH+40+80, "剩余补签次数"+this.iExtSignCount+"次", 0xff003e57, 20, 101, 1, 1, 0, 0, -2);
    		}
    		this.btn_extsign.Move(offx+100-145/2, offy+offh-30-56, 145, 56);
    		this.btn_extsign.Draw();
    		
    		if(this.ishowdetail>=0)
    		{
    			pn_gid=this.pc_price[this.ishowdetail].FindNumber("物品id");
    			pw_detail=this.pc_price[this.ishowdetail].FindWord("描述");
    			if(pw_detail!=null)
    			{
    //				GmPlay.sop(""+(this.iX+30+220+25+(this.ishowdetail%6)*100)+""+(this.iY+30+20+(this.ishowdetail/6)*100-this.i0OffY));
    				GoodsDraw.new_DrawDetailEx1(pn_gid.iNumber,this.iX+30+220+25+(this.ishowdetail%6)*100,this.iY+30+20+parseInt(this.ishowdetail/6)*100-this.i0OffY,pw_detail.pword);
    			}
    			else
    			{
    				this.gd.SetAtt(0, pn_gid.iNumber, 1, 0, 0, 0, 0, 0, 0, 0, 0);
    				GoodsDraw.new_DrawDetail(this.gd,this.iX+30+220+25+(this.ishowdetail%6)*100,this.iY+30+20+parseInt(this.ishowdetail/6)*100-this.i0OffY,0);
    			}
    		}
    	}
    	 Draw_act( offx, offy)
    	{
    		var i,x;
    		var w=this.iW-150-6;//实际长度
    		var maxact=120;//全部完成
    		M3DFast$1.gi().DrawText_2(offx,offy, "活跃度", 0xff003e57, 25, 101, 1, 1, 0, 0, -2, 1, 0xff000000);
    		offx+=80;
    		DrawMode$1.frame_type1("活跃进度外框a20_24", offx,offy-12,this.iW-150, 20);
    		DrawMode$1.frame_type1("活跃进度内框a10_18", offx+3,offy-12+3,this.iActNumber*w/maxact, 10);
    		M3DFast$1.gi().DrawTextEx(offx+w-5,offy, ""+this.iActNumber, 0xffffffff, 20, 101, 1, 1, 0, -3, -2);
    		for(i=0;i<6;i++)
    		{
    			x=offx+3+w*(15*(i+1))/maxact;
    			if(this.iActNumber>=15*(i+1))GmPlay$1.xani_nui2.DrawAnima(x-50, offy-50, "礼品包包",i);
    			else GmPlay$1.xani_nui2.DrawAnima(x-50, offy-50, "礼品包包",6);
    			this.btn_getact[i].Move(x-50, offy-50, 100,100);
    			
    			M3DFast$1.gi().DrawText_2(x,offy+35, (15*(i+1))+"活跃", 0xffffff00, 25, 101, 1, 1, 0, -2, 0, 3, 0xff000000);
    			
    			if(i<this.iActGetPoint)GmPlay$1.xani_nui6.DrawAnima(x-50, offy-25, "已领取", 0);
    		}
    	}
    	 Draw_0_lable( x, y, name, actnum, count, btn, btnicon)
    	{
    		DrawMode$1.frame_type1("活跃标签框a10_84", x,y,400, 10);
    		GmPlay$1.xani_frame.DrawAnima(x+5, y+5, "活跃图标框73_73",0);
    		GmPlay$1.xani_icon.DrawAnima_aa(x+5, y+5, name, 0);
    //		DrawMode.frame_type4("语音输入背景20_20", x, y, 400, 90, 20, 20);
    		M3DFast$1.gi().DrawText_2(x+85, y+26, name, 0xffffff00, 30, 101, 1, 1, 0, 0, -2, 2, 0xff000000);
    		M3DFast$1.gi().DrawTextEx(x+85, y+64, actnum+"   "+count, 0xffffffff, 18,101, 1, 1, 0, 0, -2);
    		if(btn!=null)
    		{
    			btn.Move(x+400-100-20, y+84/2-55/2, 100, 55);
    			btn.Draw();
    		}
    		btnicon.Move(x+5, y+5, 73, 73);
    	}

    	 Draw_0()
    	{
    		var i;
    		var offx,offy,offw,offh;
    		offx=this.iX+30;
    		offy=this.iY+30;
    		offw=850;
    		offh=420;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		this.iR0X=offx;
    		this.iR0Y=offy;
    		this.iR0W=offw;
    		this.iR0H=offh;
    		
    		var pc;
    		var pn_openlev;
    		var pn_maxact;
    		var pw_countunit;
    		var pn_maxcount;
    		var pn_gotonpcid;
    		
    		var sact;
    		var scount;
    		var pa;

    		this.i0Count=0;
    		if(this.i0Sort==0 || this.i0Sort==1 || this.i0Sort==4)
    		{//日常活动
    			if(this.i0Sort==0)pc=this.pc_act.FindClass("日常活动列表");
    			else if(this.i0Sort==1)pc=this.pc_act.FindClass("定时活动列表");
    			else if(this.i0Sort==4)pc=this.pc_act.FindClass("实力提升");
    			else return;
    			pc=pc.pca.phead;
    			M3DFast$1.gi().SetViewClip(offx+20, offy+20, offx+offw-20, offy+offh-20);
    			while(pc!=null)
    			{
    				pn_openlev=pc.FindNumber("开启等级");
    				if(pn_openlev.iNumber>GmMe$1.me.rbs.iLev)
    				{
    					pc=pc.pdown;
    					continue;
    				}
    				pn_maxact=pc.FindNumber("活跃上限");
    				pw_countunit=pc.FindWord("次数单位");
    				pn_maxcount=pc.FindNumber("次数上限");
    				pn_gotonpcid=pc.FindNumber("前往npcid");
    				pa=this.findactbyname(pc.sName);
    				
    				if(pn_maxact!=null && pa!=null)sact="活跃 "+pa.add+"/"+pn_maxact.iNumber;
    				else sact="";
    				if(pw_countunit!=null && pa!=null)
    				{
    					scount=pw_countunit.pword+" "+pa.proc+"/"+pn_maxcount.iNumber;
    					this.sExtShow[this.i0Count]=pa.proc+"/"+pn_maxcount.iNumber;
    				}
    				else
    				{
    					scount="";
    					this.sExtShow[this.i0Count]="";
    				}
    				if(pn_gotonpcid!=null)this.i0GoToNpcIdList[this.i0Count]=pn_gotonpcid.iNumber;
    				
    				this.Draw_0_lable(offx+20+(this.i0Count%2)*410,offy+25+parseInt(this.i0Count/2)*100-this.i0OffY,pc.sName,sact,scount,pn_gotonpcid==null?null:this.btn0_go[this.i0Count],this.btn0_detail[this.i0Count]);
    				this.pc_detail[this.i0Count]=pc;
    				
    				pc= pc.pdown;
    				this.i0Count++;
    			}
    			M3DFast$1.gi().NoClip();
    			this.i0OffH=(this.i0Count+1)/2*100-offh+40;
    			if(this.i0OffH<0)this.i0OffH=0;
    		}
    		if(this.i0Sort==3)
    		{
    			this.draw_lottery(offx,offy);
    		}
    		
    		offx+=offw+20;
    		offw=200;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		
    		for(i=0;i<5;i++)
    		{
    			this.btn0_sort[i].Move(offx+(200-145)/2, offy+30+i*75, 145, 56);
    			if(this.i0Sort==i)this.btn0_sort[i].bMouseDown=true;
    			this.btn0_sort[i].Draw();
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		
    		if(this.iShowGet>=0)
    		{
    			var offw,offh,offx,offy;
    			offw=465;
    			offh=381;
    			offx=(GmConfig$1.SCRW-offw)/2;
    			offy=(GmConfig$1.SCRH-offh)/2;
    			if(msg==3 && !XDefine$1.bInRect(x, y,offx,offy,offw,offh))this.iShowGet=-1;
    			if(this.btn_gift.ProcTouch(msg, x, y))
    			{
    				if(this.btn_gift.bCheck())
    				{
    					if(this.iActNumber<this.aprice[this.iShowGet].iNeed)EasyMessage.easymsg.AddMessage("活跃度未达不能领取");
    					else if(this.iShowGet<this.iActGetPoint)EasyMessage.easymsg.AddMessage("此档奖励已领过");
    					else if(this.iShowGet>this.iActGetPoint)EasyMessage.easymsg.AddMessage("按顺序领取奖励");
    					else GmProtocol$1.gi().s_PromptActivity(1, this.iShowGet);
    					this.iShowGet=-1;
    				}
    			}
    			return true;
    		}
    		
    		var pn_npcid;
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		for(i=0;i<2;i++)
    		{
    			if(this.btn_page[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_page[i].bCheck())
    				{
    					this.iPage=i;
    					this.i0OffY=0;
    					this.ishowdetail=-1;
    					NewActivity.iLotteryRound=NewActivity.iRoundDest;
    				}
    			}
    		}
    		for(i=0;i<6;i++)
    		{
    			if(this.btn_getact[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_getact[i].bCheck())
    				{
    					this.iShowGet=i;
    				}
    				return true;
    			}
    		}
    		switch(this.iPage)
    		{
    		case 0:
    			for(i=0;i<5;i++)
    			{
    				if(this.btn0_sort[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn0_sort[i].bCheck())
    					{
    						if(i==2)WeeklyActivity.Open(this.pc_act.FindClass("周历"));
    						else
    						{
    							this.i0Sort=i;
    							this.i0OffY=0;
    							this.ishowdetail=-1;
    							NewActivity.iLotteryRound=NewActivity.iRoundDest;
    						}
    					}
    //					return true;
    				}
    			}
    			switch(this.i0Sort)
    			{
    			case 0:
    			case 1:
    			case 4:
    				if(this.b0LockScroll)
    				{
    					if(msg==2)
    					{
    						this.i0OffY+=(this.i0LockY-y);
    						this.i0LockY=y;
    						if(this.i0OffY<0)this.i0OffY=0;
    						if(this.i0OffY>this.i0OffH)this.i0OffY=this.i0OffH;
    //						GmPlay.sop(""+this.i0OffY+"=="+this.i0OffH);
    					}
    					if(msg==3)this.b0LockScroll=false;
    					return true;
    				}
    				if(XDefine$1.bInRect(x, y, this.iR0X, this.iR0Y, this.iR0W, this.iR0H))
    				{
    					for(i=0;i<this.i0Count;i++)
    					{
    						if(this.btn0_go[i].ProcTouch(msg, x, y))
    						{
    							if(this.btn0_go[i].bCheck())
    							{//前往this.i0GoToNpcIdList[i];
    								pn_npcid=this.pc_detail[i].FindNumber("前往npcid");
    								if(pn_npcid!=null)
    								{
    									XStat$1.gi().PopStat(1);
    									if(pn_npcid.iNumber==10000)
    									{
    										MyAI.gi().FindNpc(GameData$1.iMasterids[GmMe$1.me.rbs.iSchoolId], true, true);
    									}
    									else MyAI.gi().FindNpc(pn_npcid.iNumber, true, true);
    								}
    							}
    							return true;
    						}
    						if(this.btn0_detail[i].ProcTouch(msg, x, y))
    						{
    							if(this.btn0_detail[i].bCheck())
    							{//打开详细this.pc_detail[i]
    								ShowActivityDetail.Open(this.pc_detail[i],this.i0Sort,this.sExtShow[i]);
    							}
    							return true;
    						}
    					}
    					if(msg==1)
    					{
    						this.b0LockScroll=true;
    						this.i0LockY=y;
    					}
    				}

    				break;
    			case 3://抽奖
    				this.ishowdetail=-1;
    				for(i=0;i<this.iCjCount;i++)
    				{
    					if(this.btn_watchprice[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn_watchprice[i].bCheck())
    						{
    							this.ishowdetail=i;
    						}
    						return true;
    					}
    				}
    				if(!this.bwaiting)
    				{
    					for(i=0;i<3;i++)
    					{
    						if(this.btn_lottery[i].ProcTouch(msg, x, y))
    						{
    							if(this.btn_lottery[i].bCheck())
    							{//点击抽奖按钮
    								if(i==1 && ((GmMe$1.me.iFlag[63]>>8)&0xf)>=5)EasyMessage.easymsg.AddMessage("今日已使用过5次白银钥匙");
    								else if(i==2 && ((GmMe$1.me.iFlag[63]>>12)&0xf)>=5)EasyMessage.easymsg.AddMessage("今日已使用过5次黄金钥匙");
    								else if(this.iKeyCount[i]>0)
    								{
    									GmProtocol$1.gi().s_PromptActivity(6, i);
    									this.iLotteryResult=-1;
    									this.bwaiting=true;
    								}
    								else
    								{
    									EasyMessage.easymsg.AddMessage("背包中没有"+this.sKeyName[i]);
    								}
    							}
    							return true;
    						}
    					}
    				}
    				break;
    			}
    			break;
    		case 1://签到
    			if((this.ishowdetail<0 && ((this.iTodayDay-1)%6)==3) || (this.ishowdetail>=0 && (this.ishowdetail%6)==3))
    			{
    				if(this.btn_extbuy.ProcTouch(msg, x, y))
    				{
    					if(this.btn_extbuy.bCheck())
    					{//购买打折高级仙灵果
    						if((GmMe$1.me.iFlag[24]&8192)!=0)EasyMessage.easymsg.AddMessage("折扣商品只能购买一次");
    						else GmProtocol$1.gi().s_PromptActivity(4, 0);
    					}
    					return true;
    				}
    			}
    			if(this.btn_extsign.ProcTouch(msg, x, y))
    			{
    				if(this.btn_extsign.bCheck())
    				{//补签
    					if(this.iExtSignCount<=0)EasyMessage.easymsg.AddMessage("当前没有剩余补签次数");
    					else if((GmMe$1.me.iFlag[24]&16384)!=0)EasyMessage.easymsg.AddMessage("每天只能补签一次");
    					else GmProtocol$1.gi().s_PromptActivity(3, 0);
    				}
    				return true;
    			}
    			if(msg==3)this.ishowdetail=-1;
    			if(this.b0LockScroll)
    			{
    				if(msg==3)this.b0LockScroll=false;
    				else
    				{
    //					GmPlay.sop("a="+this.i0LockY+",,b="+y);
    					if(Math.abs(this.i0LockY-y)>=10)this.b0Scrolling=true;
    					if(this.b0Scrolling)
    					{
    						if(msg==2)
    						{
    							this.i0OffY+=(this.i0LockY-y);
    							this.i0LockY=y;
    							if(this.i0OffY<0)this.i0OffY=0;
    							if(this.i0OffY>this.i0OffH)this.i0OffY=this.i0OffH;
    //							GmPlay.sop(""+this.i0OffY+"=="+this.i0OffH);
    						}
    						for(i=0;i<this.i0Count;i++)this.btn_sign[i].bMouseDown=false;
    						return true;
    					}
    				}
    			}
    			if(XDefine$1.bInRect(x, y, this.iR0X, this.iR0Y, this.iR0W, this.iR0H))
    			{
    				for(i=0;i<this.i0Count;i++)
    				{
    	//				GmPlay.sop(x+",,"+y+"=="+this.btn_sign[0].iX+",,"+this.btn_sign[0].iY);
    					if(this.btn_sign[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn_sign[i].bCheck())
    						{
    							if(i<this.iSignCount);//阴影
    							else if(i==this.iSignCount)
    							{//真正签到
    								if((GmMe$1.me.iFlag[50]&(1<<(this.iTodayDay-1)))==0)GmProtocol$1.gi().s_PromptActivity(2, 0);
    								else this.ishowdetail=i;
    							}
    							else this.ishowdetail=i;
    						}
    					}
    				}
    				if(msg==1)
    				{
    					this.b0LockScroll=true;
    					this.b0Scrolling=false;
    					this.i0LockY=y;
    				}
    			}
    			break;
    		}
    		return true;
    	}
    }
    NewActivity.iLotteryRound=0;
    NewActivity.iRoundDest=0;
    NewActivity.iOpenFlag=0;
    NewActivity.Open=function( pls)
    {
    	var na;
    	if(XStat$1.gi().iXStat==XStat$1.GS_LOADING1)XStat$1.gi().PopStat(1);
    	if(XStat$1.gi().iXStat==XStat$1.GS_PROMPTACTIVITY)na=XStat$1.gi().LastStat(0);
    	else na=XStat$1.gi().PushStat(XStat$1.GS_PROMPTACTIVITY);

    	var i=0;
    	while(true)
    	{
    		if(pls.GetNextByte()==0)break;
    		na.alist[i].sName=pls.GetNextString();
    		na.alist[i].proc=pls.GetNextByte();
    		na.alist[i].max=pls.GetNextByte();
    		na.alist[i].add=pls.GetNextByte();
    		i++;
    	}
    	na.iActCount=i;
    	GmPlay$1.sop("actcount"+i);
    	
    	na.iActNumber=pls.GetNextShort();
    	na.iActGetPoint=pls.GetNextByte();//当前礼品指向
    	na.iActPriceCount=pls.GetNextByte();//礼品包数量
    	for(i=0;i<na.iActPriceCount;i++)
    	{
    		na.aprice[i].iNeed=pls.GetNextShort();
    		na.aprice[i].iExp=pls.GetNextInt();
    		na.aprice[i].iMoney=pls.GetNextInt();
    		
    		na.aprice[i].tid1=pls.GetNextShort();
    		na.aprice[i].tcount1=pls.GetNextByte();
    		na.aprice[i].tid2=pls.GetNextShort();
    		na.aprice[i].tcount2=pls.GetNextByte();
    	}
    	
    	//根据flag[50]计算已签几次
    	na.iSignCount=0;
    	for(i=0;i<31;i++)
    	{
    		if((GmMe$1.me.iFlag[50]&(1<<i))!=0)na.iSignCount++;
    	}
    	na.iTodayDay=pls.GetNextByte();
    	na.iMaxDay=pls.GetNextByte();
    	na.iWeekDay=pls.GetNextByte();
    /*		pa.iTodayWeek=pls.GetNextByte();
    	pa.iMonth=pls.GetNextByte();*/
    	
    	if(NewActivity.iOpenFlag==1)
    	{
    		NewActivity.iOpenFlag=0;
    		na.i0Sort=3;
    	}
    };

    class XInputNumber
    {
        constructor(ani)
        {
    		var i;
    		this.pani=ani;
    		this.pm3f=M3DFast$1.gi();
    		this.bChanged=false;
    		this.bFinished=false;
    		this.iNumber=0;
    		this.iMinNumber=0;
    		this.iMaxNumber=0x7fffffff;
    		this.bShow=false;
    		
    		this.btn_num=new Array(12);//
    		for(i=0;i<12;i++)
    		{
    			this.btn_num[i]=new XButtonEx2$1(GmPlay$1.xani_nui3);
    			if(i==3)this.btn_num[i].InitButton("键盘按钮_退格");
    			else if(i==11)this.btn_num[i].InitButton("键盘按钮_确定");
    			else this.btn_num[i].InitButton("键盘按钮");
    		}
    		this.btn_num[0].sName="1";
    		this.btn_num[1].sName="2";
    		this.btn_num[2].sName="3";
    //		this.btn_num[3].InitButton("键盘按钮_退格");//退格
    		this.btn_num[4].sName="4";
    		this.btn_num[5].sName="5";
    		this.btn_num[6].sName="6";
    		this.btn_num[7].sName="0";
    		this.btn_num[8].sName="7";
    		this.btn_num[9].sName="8";
    		this.btn_num[10].sName="9";

    		this.aa_frame=null;
        }

        MinMax( min, max)
    	{
    		this.iMinNumber=min;
    		this.iMaxNumber=max;
    	}
    	Draw()
    	{
    		DrawMode$1.new_numberframe(this.iX,this.iY,this.iW,""+this.iNumber);
    		if(!this.bShow)return;
    		this.DrawBack();
    		var i;
    		for(i=0;i<12;i++)
    		{
    			this.btn_num[i].Move(this.iFx+10+(i%4)*(64+10), this.iFy+10+parseInt(i/4)*(64+10), 64, 64);
    			this.btn_num[i].Draw();
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    //		if(!XDefine.bInRect(x,y,this.iX,this.iY,this.iW,this.iH))
    //		{
    //			this.bShow=false;
    //			return false;
    //		}
    		var i;
    		if(this.bShow)
    		{
    			if(XDefine$1.bInRect(x, y, this.iFx, this.iFy, this.iFw, this.iFh))
    			{
    				for(i=0;i<12;i++)
    				{
    					if(this.btn_num[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn_num[i].bCheck())
    						{
    							if(i==0 || i==1 || i==2)this.iNumber=this.iNumber*10+(i+1);
    							else if(i==3)this.iNumber=parseInt(this.iNumber/10);
    							else if(i==4 || i==5 || i==6)this.iNumber=this.iNumber*10+i;
    							else if(i==7)this.iNumber=this.iNumber*10;
    							else if(i==8 || i==9 || i==10)this.iNumber=this.iNumber*10+(i-1);
    							else if(i==11)this.bShow=false;
    							if(this.iNumber<this.iMinNumber)this.iNumber=this.iMinNumber;
    							if(this.iNumber>this.iMaxNumber)this.iNumber=this.iMaxNumber;
    						}
    					}
    				}
    			}
    			else if(msg==3)
    			{
    				if(this.iNumber<this.iMinNumber)this.iNumber=this.iMinNumber;
    				this.bShow=false;
    			}
    			this.iNumber = Math.floor(this.iNumber);
    			return true;
    		}
    		else
    		{
    			if(XDefine$1.bInRect(x,y,this.iX,this.iY,this.iW,this.iH))
    			{
    				if(msg==1)this.bMouseDown=true;
    				if(msg==3)
    				{
    					if(this.bMouseDown)
    					{
    						this.bMouseDown=false;
    						this.bShow=true;
    						this.iNumber=0;
    					}
    				}
    				return true;
    			}
    		}

    		return false;
    	}
    	DrawBack()
    	{
    		if(this.aa_frame==null)this.aa_frame=GmPlay$1.xani_nui3.InitAnimaWithName("键盘框", null);
    		this.aa_frame.iFrame=0;this.aa_frame.Draw(this.iFx, this.iFy);//左上
    		this.aa_frame.iFrame=1;this.aa_frame.DrawEx(this.iFx+10, this.iFy, 101, 1.0*(this.iFw-20)/20, 1, 0, 0, 0);//上
    		this.aa_frame.iFrame=2;this.aa_frame.Draw(this.iFx+this.iFw, this.iFy);//右上
    		this.aa_frame.iFrame=3;this.aa_frame.DrawEx(this.iFx+this.iFw, this.iFy+10, 101, 1,1.0*(this.iFh-20)/20, 0, 0, 0);//右
    		this.aa_frame.iFrame=4;this.aa_frame.Draw(this.iFx+this.iFw, this.iFy+this.iFh);//右下
    		this.aa_frame.iFrame=5;this.aa_frame.DrawEx(this.iFx+10, this.iFy+this.iFh, 101, 1.0*(this.iFw-20)/20, 1, 0, 0, 0);//下
    		this.aa_frame.iFrame=6;this.aa_frame.Draw(this.iFx, this.iFy+this.iFh);//左下
    		this.aa_frame.iFrame=7;this.aa_frame.DrawEx(this.iFx, this.iFy+10, 101, 1,1.0*(this.iFh-20)/20, 0, 0, 0);//左
    		this.aa_frame.iFrame=8;this.aa_frame.DrawEx(this.iFx+10, this.iFy+10, 101, 1.0*(this.iFw-20)/20,1.0*(this.iFh-20)/20, 0, 0, 0);//中
    		this.aa_frame.iFrame=9;this.aa_frame.Draw(this.iPx, this.iPy);//箭头
    	}
    	Move( x, y, w)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=50;
    		this._numframe(this.iX+this.iW/2,this.iY-15);
    	}
    	_numframe( x, y)
    	{
    		this.iPx=x;
    		this.iPy=y;
    		this.iFw=306;
    		this.iFh=232;
    		this.iFx=this.iPx-this.iFw/2;
    		this.iFy=this.iPy-this.iFh;
    	}
    }

    class _SHOPGOODS
    {
    /*	int iTid;
    	int iCount;
    	int iPrice;
    	int iMoney;
    	int iReserve;
    	int iBuyLimit;*/
    	 _SHOPGOODS()
    	{
    	}
    }

    class IngotMall extends BaseClass{

    	constructor( ani)
    	{
    		super();
    		var i,j;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=920;
    		this.iH=550;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.sgs=new Array(20);//
    		for(i=0;i<20;i++)this.sgs[i]=new _SHOPGOODS();
    		
    		this.btn_page=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.btn_page[i]=new XButton(GmPlay$1.xani_nui2);
    			this.btn_page[i].InitButton("按钮2");
    		}
    		
    		this.in_num=new XInputNumber(GmPlay$1.xani_nui2);
    		this.in_num.MinMax(1, 10);
    		this.in_num.iNumber=1;
    		
    		this.btn_buy=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_buy.InitButton("按钮1_110");
    		this.btn_buy.sName="购买";
    		
    		this.btn_charge=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_charge.InitButton("按钮3");
    		this.btn_charge.sName="充  值";
    		
    		
    		this.goods=new Array(20);//
    		for(i=0;i<20;i++)
    		{
    			this.goods[i]=new Goods();
    			this.goods[i].iPos=i;
    		}

    		this.iSelect=IngotMall.iLastSelect;
    		IngotMall.iLastSelect=0;
    		this.btn_select=new Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.btn_select[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_select[i].InitButton("右侧标签");
    //			this.btn_select[i].Move(this.iX+760, this.iY+50+80*i, 30, 80);
    //			if(i==0)this.btn_select[i].InitButton("标签按钮上");
    //			else if(i==1)this.btn_select[i].InitButton("标签按钮下");
    //			else this.btn_select[i].InitButton("标签按钮中");
    		}
    		this.btn_pay=new Array(8);//
    		for(j=0;j<2;j++)
    		{
    			for(i=0;i<4;i++)
    			{
    				this.btn_pay[j*4+i]=new XButton(GmPlay$1.xani_nui3);
    				this.btn_pay[j*4+i].Move(this.iX+67+410*j, this.iY+50+100*i, 376, 94);
    				this.btn_pay[j*4+i].InitButton("充值大按钮");
    			}
    		}
    		this.btn_pay1=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_pay1.InitButton("按钮1");
    		this.btn_pay1.Move(this.iX+this.iW-67-161, this.iY+this.iH-30-53, 161, 53);
    		this.btn_pay1.sName="自定义额度";
    //		this.btn_pay1.iNameSize=25;
    		
    		this.in_price=new XInputNumber(GmPlay$1.xani_nui2);
    //		this.in_price.Move(this.iX+140, this.iY+20,this.iW-160);
    		this.in_price.iNumber=1;
    		this.in_price.MinMax(1, 1000);
    		
    		this.btn_act=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_act.InitButton("感叹提示");
    		this.btn_act.Move(this.iX+67, this.iY+this.iH-30-26-32, 65, 65);
    		this.bShowAct=false;
    	}

    	Draw_0()
    	{
    		this.btn_page[0].sName="热卖品";
    		this.btn_page[1].sName="装备相关";
    		this.btn_page[2].sName="宠物相关";
    		this.btn_page[3].sName="二级丹药";
    		this.btn_page[4].sName="三级草药";
    		this.btn_page[5].sName="其他";
    		this.btn_page[6].sName="铜币区";
    		var i;
    		DrawMode$1.new_framein(this.iX+30, this.iY+30, 145+40, this.iH-60);
    		for(i=0;i<7;i++)
    		{
    			this.btn_page[i].Move(this.iX+30+20, this.iY+30+20+i*(56+11), 145, 56);
    			if(this.iPage==i)
    			{
    //				GmPlay.xani_ui3.DrawAnimaEx(this.iX+30+20, this.iY+30+20+i*(56+14), "选中背景",0,101,0.9f,0.71f,0,0,0);//this.iX+50, this.iY+65+i*45, 128, 32

    				this.btn_page[i].bMouseIn=true;
    				this.btn_page[i].bMouseDown=true;
    			}
    			this.btn_page[i].Draw();
    		}
    		
    //		GmPlay.xani_ui3.DrawAnima(this.iX+190, this.iY, "大框分割线",0);
    		
    		var offx,offy,offw,offh;
    		offx=this.iX+30+145+40+20;
    		offy=this.iY+30;
    		offw=this.iW-60-145-40-20;
    		DrawMode$1.new_framein(offx, offy, offw,345+40);
    		this.iGx=offx+20;
    		this.iGy=offy+20;
    		GoodsDraw.new_DrawGoods(this.iGx,this.iGy, this.goods, null, null);
    		offx+=20+430+15;
    		offy+=20;
    		if(this.lockgoods!=null)
    		{
    			DrawMode$1.new_TagText2(offx, offy, 100, "名称", GmPlay$1.de_goods.strValue(this.lockgoods.iTid, 0, 4));
    			offy+=50;
    			if(this.sgs[this.lockgoods.iPos].iPrice==0 && this.sgs[this.lockgoods.iPos].iMoney>0)
    			{
    				i=this.sgs[this.lockgoods.iPos].iMoney;
    				DrawMode$1.new_TagText2(offx, offy, 100, "单价", (i%10000)==0?(i/10000)+"万铜币":i+"铜币");
    			}
    			else DrawMode$1.new_TagText2(offx, offy, 100, "单价", this.sgs[this.lockgoods.iPos].iPrice+"元宝");
    			offy+=50;
    			//数量
    			M3DFast$1.gi().DrawTextEx(offx, offy+25, "数量:", 0xff003e57, 30, 101, 1, 1, 0, 0, -2);
    			this.in_num.Move(offx+67, offy, 100);
    			this.in_num.Draw();
    			
    			offy+=70;
    			if(this.sgs[this.lockgoods.iPos].iPrice==0 && this.sgs[this.lockgoods.iPos].iMoney>0)
    			{
    				i=this.sgs[this.lockgoods.iPos].iMoney*this.in_num.iNumber;
    				DrawMode$1.new_TagText2(offx, offy, 100, "总价", (i%10000)==0?(i/10000)+"万铜币":i+"铜币");
    			}
    			else DrawMode$1.new_TagText2(offx, offy, 100, "总价", this.sgs[this.lockgoods.iPos].iPrice*this.in_num.iNumber+"元宝");
    			offy+=100;
    			this.btn_buy.Move(offx+57, offy, 110, 52);
    			this.btn_buy.Draw();
    		}
    		
    		offx=this.iX+30+40+145+20;
    		offy=this.iY+30+20+345+20+20;
    		offh=this.iH-60-345-40-20;
    		DrawMode$1.new_framein(offx,offy, offw,offh);
    		
    		DrawMode$1.new_TagText2(offx+20, offy+(offh-32)/2, 150, "元宝", ""+GmMe$1.me.rbs.iInGot);
    		DrawMode$1.new_TagText2(offx+20+235, offy+(offh-32)/2, 150, "铜币", ""+GmMe$1.me.rbs.iMoney);
    //		GmPlay.xani_ui.DrawAnimaEx(offx+20,offy+17, "元宝", 0, 101, 1, 1, 0, 0, 0);
    //		M3DFast.gi().DrawTextEx(offx+20+40, offy+20, ""+ 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    //		M3DFast.gi().DrawTextEx(offx+20+40+200, offy+20, "1元=10元宝", 0xffffff00, 20, 101, 1, 1, 0, 0, 0);
    		this.btn_charge.Move(offx+490,offy+(offh/2-49/2),141,49);
    		this.btn_charge.Draw();
    		
    		if(this.lockgoods!=null)
    		{
    			GoodsDraw.new_DrawRect(this.iGx, this.iGy, this.goods, this.lockgoods, 0);
    		}
    		if(GoodsDraw.bShowDetail())GoodsDraw.new_DrawDetail(null, -1, -1,0);
    	}
    	Draw_1()
    	{
    		var i;
    		for(i=0;i<8;i++)
    		{
    			this.btn_pay[i].Draw();
    			GmPlay$1.xani_nui3.DrawAnima(this.btn_pay[i].iX+7, this.btn_pay[i].iY+7, "充值图标",i);
    			M3DFast$1.gi().DrawText_2(this.btn_pay[i].iX+7+80+7,this.btn_pay[i].iY+12+17, "￥"+IngotMall.amount[i]+"="+IngotMall.amount[i]*10+"元宝", 0xffffffff, 28, 101, 1, 1, 0, 0, -2, 1, 0xff000000);
    			if(IngotMall.iAddType==1)
    			{//加送元宝
    				if(i>=4)
    				{
    					GmPlay$1.xani_nui3.DrawAnima(this.btn_pay[i].iX, this.btn_pay[i].iY, "加送标签",i-4);
    					M3DFast$1.gi().DrawTextEx(this.btn_pay[i].iX+7+80+7,this.btn_pay[i].iY+12+17+38, "加送"+IngotMall.addmount[i]+"元宝", 0xffff00ff, 28, 101, 1, 1, 0, 0, -2);
    				}
    			}
    			if(IngotMall.iAddType==2)
    			{//加送礼包
    				if(i>=4)
    				{
    					GmPlay$1.xani_nui3.DrawAnima(this.btn_pay[i].iX, this.btn_pay[i].iY, "加送标签",4);
    					M3DFast$1.gi().DrawTextEx(this.btn_pay[i].iX+7+80+7,this.btn_pay[i].iY+12+17+38, "送：充值礼包 x "+IngotMall.addlibao[i]+"", 0xffff00ff, 28, 101, 1, 1, 0, 0, -2);
    				}
    			}
    //			if(PublicInterface.gi().QUDAO()==2)M3DFast.gi().DrawText_2(this.btn_pay[i].iX+16,this.btn_pay[i].iY+34, IngotMall.amount[i]+"个91豆", 0xffffffff, 20, 101, 1, 1, 0, 0, -2, 3, 0xff000000);
    //			else M3DFast.gi().DrawText_2(this.btn_pay[i].iX+16,this.btn_pay[i].iY+34, "￥"+IngotMall.amount[i], 0xffffffff, 20, 101, 1, 1, 0, 0, -2, 3, 0xff000000);
    //			M3DFast.gi().DrawText_2(this.btn_pay[i].iX+285,this.btn_pay[i].iY+34, IngotMall.amount[i]*IngotMall.addmount[i]/10+"元宝", 0xffffffff, 20, 101, 1, 1, 0, -3, -2, 3, 0xff000000);
    		}
    //		if(this.sTitle.length>0)M3DFast.gi().DrawTextEx(this.btn_pay[0].iX,this.btn_pay1.iY+12, this.sTitle, 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		this.btn_act.Move(this.btn_pay[0].iX, this.iY+this.iH-30-26-32, 65, 65);
    		this.btn_act.Draw();
    		M3DFast$1.gi().DrawTextEx(this.btn_pay[0].iX+70,this.btn_act.iY+32, "充值活动", 0xff003e57, 30, 101, 1, 1, 0, 0, -2);
    		if(this.bShowAct)
    		{
    //			var ox=this.btn_pay[0].iX+32;
    //			var oy=this.btn_act.iY+32-;
    		}
    		if(this.CanDefine(GameVersion$1.QUDAO))
    		{//充值金额
    			M3DFast$1.gi().DrawTextEx(this.btn_pay1.iX-130-190, this.btn_pay1.iY+12, "充值金额(元):", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    			this.in_price.Move(this.btn_pay1.iX-130, this.btn_pay1.iY+2, 120);
    			this.in_price.Draw();
    			this.btn_pay1.Draw();
    		}
    	}
    	 CanDefine( i)
    	{//3当乐，5木蚂蚁，禁止自定义额度
    //		if(i==3)return false;
    //		if(i==5)return false;
    		return true;
    	}
    	
    	Draw_2()
    	{
    		this.btn_page[0].sName="储备区";
    //		this.btn_page[1].sName="装备相关";
    //		this.btn_page[2].sName="宠物相关";
    //		this.btn_page[3].sName="二级丹药";
    //		this.btn_page[4].sName="三级草药";
    //		this.btn_page[5].sName="其他";
    //		this.btn_page[6].sName="铜币区";
    		var i;
    		DrawMode$1.new_framein(this.iX+30, this.iY+30, 145+40, this.iH-60);
    		for(i=0;i<1;i++)
    		{
    			this.btn_page[i].Move(this.iX+30+20, this.iY+30+20+i*(56+11), 145, 56);
    			if(this.iPage==i)
    			{
    //				GmPlay.xani_ui3.DrawAnimaEx(this.iX+30+20, this.iY+30+20+i*(56+14), "选中背景",0,101,0.9f,0.71f,0,0,0);//this.iX+50, this.iY+65+i*45, 128, 32

    				this.btn_page[i].bMouseIn=true;
    				this.btn_page[i].bMouseDown=true;
    			}
    			this.btn_page[i].Draw();
    		}
    		
    //		GmPlay.xani_ui3.DrawAnima(this.iX+190, this.iY, "大框分割线",0);
    		
    		var offx,offy,offw,offh;
    		offx=this.iX+30+145+40+20;
    		offy=this.iY+30;
    		offw=this.iW-60-145-40-20;
    		DrawMode$1.new_framein(offx, offy, offw,345+40);
    		this.iGx=offx+20;
    		this.iGy=offy+20;
    		GoodsDraw.new_DrawGoods(this.iGx,this.iGy, this.goods, null, null);
    		offx+=20+430+15;
    		offy+=20;
    		if(this.lockgoods!=null)
    		{//cxunmz
    			DrawMode$1.new_TagText2(offx, offy, 100, "名称", GmPlay$1.de_goods.strValue(this.lockgoods.iTid, 0, 4));
    			offy+=50;
    			if(this.sgs[this.lockgoods.iPos].iPrice==0 && this.sgs[this.lockgoods.iPos].iMoney==0 && this.sgs[this.lockgoods.iPos].iReserve>0)
    			{
    				i=this.sgs[this.lockgoods.iPos].iReserve;
    				DrawMode$1.new_TagText2(offx, offy, 100, "单价", (i%10000)==0?(i/10000)+"万绑铜":i+"绑铜");
    			}
    			else if(this.sgs[this.lockgoods.iPos].iPrice==0 && this.sgs[this.lockgoods.iPos].iMoney>0)
    			{
    				i=this.sgs[this.lockgoods.iPos].iMoney;
    				DrawMode$1.new_TagText2(offx, offy, 100, "单价", (i%10000)==0?(i/10000)+"万铜币":i+"铜币");
    			}
    			else DrawMode$1.new_TagText2(offx, offy, 100, "单价", this.sgs[this.lockgoods.iPos].iPrice+"元宝");
    			offy+=50;
    			//数量
    			M3DFast$1.gi().DrawTextEx(offx, offy+25, "数量:", 0xff003e57, 30, 101, 1, 1, 0, 0, -2);
    			this.in_num.Move(offx+67, offy, 100);
    			this.in_num.Draw();
    			
    			offy+=70;
    			if(this.sgs[this.lockgoods.iPos].iPrice==0 && this.sgs[this.lockgoods.iPos].iMoney==0 && this.sgs[this.lockgoods.iPos].iReserve>0)
    			{
    				i=this.sgs[this.lockgoods.iPos].iReserve*this.in_num.iNumber;
    				DrawMode$1.new_TagText2(offx, offy, 100, "总价", (i%10000)==0?(i/10000)+"万绑铜":i+"绑铜");
    			}
    			else if(this.sgs[this.lockgoods.iPos].iPrice==0 && this.sgs[this.lockgoods.iPos].iMoney>0)
    			{
    				i=this.sgs[this.lockgoods.iPos].iMoney*this.in_num.iNumber;
    				DrawMode$1.new_TagText2(offx, offy, 100, "总价", (i%10000)==0?(i/10000)+"万铜币":i+"铜币");
    			}
    			else DrawMode$1.new_TagText2(offx, offy, 100, "总价", this.sgs[this.lockgoods.iPos].iPrice*this.in_num.iNumber+"元宝");
    			
    			if(this.sgs[this.lockgoods.iPos].iBuyLimit>0)M3DFast$1.gi().DrawTextEx(offx, offy + 60, "每日限购:"+this.sgs[this.lockgoods.iPos].iBuyLimit, 0xff003e57, 30, 101, 1, 1, 0, 0, -2);
    			
    			offy+=100;
    			this.btn_buy.Move(offx+57, offy, 110, 52);
    			this.btn_buy.Draw();
    		}
    		
    		offx=this.iX+30+40+145+20;
    		offy=this.iY+30+20+345+20+20;
    		offh=this.iH-60-345-40-20;
    		DrawMode$1.new_framein(offx,offy, offw,offh);
    		
    		DrawMode$1.new_TagText2(offx+20, offy+(offh-32)/2, 150, "元宝", ""+GmMe$1.me.rbs.iInGot);
    		DrawMode$1.new_TagText2(offx+20+235, offy+(offh-32)/2, 150, "绑铜", ""+GmMe$1.me.rbs.iReserve);
    //		GmPlay.xani_ui.DrawAnimaEx(offx+20,offy+17, "元宝", 0, 101, 1, 1, 0, 0, 0);
    //		M3DFast.gi().DrawTextEx(offx+20+40, offy+20, ""+ 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    //		M3DFast.gi().DrawTextEx(offx+20+40+200, offy+20, "1元=10元宝", 0xffffff00, 20, 101, 1, 1, 0, 0, 0);
    		this.btn_charge.Move(offx+490,offy+(offh/2-49/2),141,49);
    		this.btn_charge.Draw();
    		
    		if(this.lockgoods!=null)
    		{
    			GoodsDraw.new_DrawRect(this.iGx, this.iGy, this.goods, this.lockgoods, 0);
    		}
    		if(GoodsDraw.bShowDetail())GoodsDraw.new_DrawDetail(null, -1, -1,0);
    	}
    	Draw()
    	{
    		var i;
    		
    		if(this.iSelect==0)DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH,"商","城");
    		else if(this.iSelect==1)DrawMode$1.new_baseframe4(this.iX, this.iY, this.iW, this.iH,"绑","定","商","城");
    		else DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH,"充","值");
    		this.btn_close.Draw();
    		for(i=0;i<3;i++)
    		{
    			this.btn_select[i].Move(this.iX+this.iW-15, this.iY+40+130*i, 50, 130);
    			if(this.iSelect==i)this.btn_select[i].bMouseDown=true;
    			this.btn_select[i].Draw();
    			if(i==0)DrawMode$1.new_lableword2(this.iX+this.iW-15, this.iY+40+130*i, 40, 130,this.iSelect==i,"商","城");
    			else if(i==1)DrawMode$1.new_lableword4(this.iX+this.iW-15, this.iY+46+130*i, 40, 70,this.iSelect==i,"绑","定","商","城");
    			else DrawMode$1.new_lableword2(this.iX+this.iW-15, this.iY+40+130*i, 40, 130,this.iSelect==i,"充","值");
    //			if(i==0)DrawMode.ui3_TagText2(this.btn_select[i].iX, this.btn_select[i].iY,"商","城");
    //			else if(i==1)DrawMode.ui3_TagText2(this.btn_select[i].iX, this.btn_select[i].iY,"充","值");
    		}
    		switch(this.iSelect)
    		{
    		case 0:
    			this.Draw_0();
    			break;
    		case 1:
    			this.Draw_2();
    			break;
    		case 2:
    			this.Draw_1();
    			break;
    		}
    //		GmPlay.xani_nui2.DrawAnima(0, 0, "按钮2",0);

    	}
    	ProcTouch( msg, x, y)
    	{
    		this.bShowAct=false;
    		if(this.iSelect==2)
    		{
    			if(this.CanDefine(GameVersion$1.QUDAO))
    			{
    				if(this.in_price.ProcTouch(msg, x, y))return true;
    			}
    		}
    		var i;
    		if(this.iSelect==0)
    		{
    			if(this.lockgoods!=null)
    			{
    				if(this.in_num.ProcTouch(msg, x, y))return true;
    				if(this.btn_buy.ProcTouch(msg, x, y))
    				{
    					if(this.btn_buy.bCheck())
    					{
    						if(this.in_num.iNumber>=1 && this.in_num.iNumber<=10)
    						{
    							if(this.sgs[this.lockgoods.iPos].iPrice==0 && this.sgs[this.lockgoods.iPos].iMoney>0)
    							{
    								if(GmMe$1.me.rbs.iMoney<this.sgs[this.lockgoods.iPos].iMoney*this.in_num.iNumber)EasyMessage.easymsg.AddMessage("铜币不足");
    								else
    								{
    									for(i=0;i<this.in_num.iNumber;i++)
    									{
    										//PublicInterface.gi().mta_record(5, this.sgs[this.lockgoods.iPos].iPrice, GmPlay.de_goods.strValue(this.lockgoods.iTid, 0, 4));
    										GmProtocol$1.gi().s_IngotMallBuy(this.iShopId, this.sgs[this.lockgoods.iPos].iTid, this.sgs[this.lockgoods.iPos].iCount);
    									}
    									XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    								}
    							}
    							else
    							{
    								if(GmMe$1.me.rbs.iInGot<this.sgs[this.lockgoods.iPos].iPrice*this.in_num.iNumber)EasyMessage.easymsg.AddMessage("元宝不足");
    								else
    								{
    									for(i=0;i<this.in_num.iNumber;i++)
    									{
    										PublicInterface.gi().mta_record(5, this.sgs[this.lockgoods.iPos].iPrice, GmPlay$1.de_goods.strValue(this.lockgoods.iTid, 0, 4));
    										GmProtocol$1.gi().s_IngotMallBuy(this.iShopId, this.sgs[this.lockgoods.iPos].iTid, this.sgs[this.lockgoods.iPos].iCount);
    									}
    									XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    								}
    							}
    						}
    					}
    					return true;
    				}
    			}
    			else this.in_num.iNumber=1;
    			
    			this.lockgoods=GoodsDraw.new_LockGoods(x,y, this.iGx,this.iGy, this.goods, msg);
    			GoodsDraw.NoMove();
    			if(this.lockgoods!=null)
    			{
    				if(this.lockgoods.iTid==121)
    				{
    					this.in_num.MinMax(1, 1);
    					this.in_num.iNumber=1;
    				}
    				else this.in_num.MinMax(1, 10);
    			}
    			
    			if(this.btn_charge.ProcTouch(msg, x, y))
    			{
    				if(this.btn_charge.bCheck())
    				{
    					this.iSelect=2;
    //					PublicInterface.gi().Pay(0);
    				}
    			}

    			for(i=0;i<7;i++)
    			{
    				if(this.btn_page[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_page[i].bCheck())
    					{//获取不同页的道具列表
    						this.iPage=i;
    						GmProtocol$1.gi().s_IngotMall(this.iPage, 0);
    					}
    				}
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		for(i=0;i<3;i++)
    		{
    			if(this.btn_select[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_select[i].bCheck())
    				{
    					if(i!=this.iSelect)
    					{
    						this.iSelect=i;
    						this.iPage = 0;
    						if(this.iSelect==0)GmProtocol$1.gi().s_IngotMall(this.iPage, 0);
    						if (this.iSelect == 1)GmProtocol$1.gi().s_IngotMall(10 + this.iPage, 1);
    					}
    				}
    //				return true;
    			}
    		}
    		if(this.iSelect==1)
    		{
    			if(this.lockgoods!=null)
    			{
    				if(this.in_num.ProcTouch(msg, x, y))return true;
    				if(this.btn_buy.ProcTouch(msg, x, y))
    				{
    					if(this.btn_buy.bCheck())
    					{
    						if(this.in_num.iNumber>=1 && this.in_num.iNumber<=10)
    						{
    							if(this.sgs[this.lockgoods.iPos].iPrice==0 && this.sgs[this.lockgoods.iPos].iMoney==0 && this.sgs[this.lockgoods.iPos].iReserve>0)
    							{
    								if(GmMe$1.me.rbs.iReserve<this.sgs[this.lockgoods.iPos].iReserve*this.in_num.iNumber)EasyMessage.easymsg.AddMessage("绑铜不足");
    								else
    								{
    									for(i=0;i<this.in_num.iNumber;i++)
    									{
    										//PublicInterface.gi().mta_record(5, this.sgs[this.lockgoods.iPos].iPrice, GmPlay.de_goods.strValue(this.lockgoods.iTid, 0, 4));
    										GmProtocol$1.gi().s_IngotMallBuy(this.iShopId, this.sgs[this.lockgoods.iPos].iTid, this.sgs[this.lockgoods.iPos].iCount);
    									}
    									XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    								}
    							}
    							else if(this.sgs[this.lockgoods.iPos].iPrice==0 && this.sgs[this.lockgoods.iPos].iMoney>0)
    							{
    								if(GmMe$1.me.rbs.iMoney<this.sgs[this.lockgoods.iPos].iMoney*this.in_num.iNumber)EasyMessage.easymsg.AddMessage("铜币不足");
    								else
    								{
    									for(i=0;i<this.in_num.iNumber;i++)
    									{
    										//PublicInterface.gi().mta_record(5, this.sgs[this.lockgoods.iPos].iPrice, GmPlay.de_goods.strValue(this.lockgoods.iTid, 0, 4));
    										GmProtocol$1.gi().s_IngotMallBuy(this.iShopId, this.sgs[this.lockgoods.iPos].iTid, this.sgs[this.lockgoods.iPos].iCount);
    									}
    									XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    								}
    							}
    							else
    							{
    								if(GmMe$1.me.rbs.iInGot<this.sgs[this.lockgoods.iPos].iPrice*this.in_num.iNumber)EasyMessage.easymsg.AddMessage("元宝不足");
    								else
    								{
    									for(i=0;i<this.in_num.iNumber;i++)
    									{
    										PublicInterface.gi().mta_record(5, this.sgs[this.lockgoods.iPos].iPrice, GmPlay$1.de_goods.strValue(this.lockgoods.iTid, 0, 4));
    										GmProtocol$1.gi().s_IngotMallBuy(this.iShopId, this.sgs[this.lockgoods.iPos].iTid, this.sgs[this.lockgoods.iPos].iCount);
    									}
    									XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    								}
    							}
    						}
    					}
    					return true;
    				}
    			}
    			else this.in_num.iNumber=1;
    			
    			this.lockgoods=GoodsDraw.new_LockGoods(x,y, this.iGx,this.iGy, this.goods, msg);
    			GoodsDraw.NoMove();
    			if(this.lockgoods!=null)
    			{
    				if(this.lockgoods.iTid==121)
    				{
    					this.in_num.MinMax(1, 1);
    					this.in_num.iNumber=1;
    				}
    				else this.in_num.MinMax(1, 10);
    			}
    			
    			if(this.btn_charge.ProcTouch(msg, x, y))
    			{
    				if(this.btn_charge.bCheck())
    				{
    					this.iSelect=2;
    //					PublicInterface.gi().Pay(0);
    				}
    			}

    			for(i=0;i<1;i++)
    			{
    				if(this.btn_page[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_page[i].bCheck())
    					{//获取不同页的道具列表
    						this.iPage=i;
    						GmProtocol$1.gi().s_IngotMall(this.iPage+10, 1);
    					}
    				}
    			}
    		}
    		if(this.iSelect==2)
    		{//充值界面
    			for(i=0;i<8;i++)
    			{
    				if(this.btn_pay[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_pay[i].bCheck())
    					{
    						PublicInterface.gi().Pay(IngotMall.amount[i]);
    					}
    				}
    			}
    			if(this.btn_act.ProcTouch(msg, x, y))
    			{
    				if(this.btn_act.bCheck())
    				{
    					this.bShowAct=!this.bShowAct;
    					FrameMessage.fm.Open("1，单次充值50元可参与神兽抽奖活动，详情请在西阳城神兽使者处查询");
    				}
    			}
    			if(this.CanDefine(GameVersion$1.QUDAO))
    			{
    				if(this.btn_pay1.ProcTouch(msg, x, y))
    				{
    					if(this.btn_pay1.bCheck())
    					{
    						i=this.in_price.iNumber;
    						if(i<1 || i>1000)EasyMessage.easymsg.AddMessage("充值额度为1~1000");
    						else PublicInterface.gi().Pay(i);
    					}
    				}
    			}
    		}

    		return false;
    	}
    }

    IngotMall.iAddType=0;///0无奖励，1加送元宝，2加送充值礼包

    IngotMall.iLastSelect=0;

    IngotMall.amount=[10,20,30,50,100,300,500,1000];
    IngotMall.addmount=[0,0,0,0,50,300,750,2000];
    IngotMall.addlibao=[0,0,0,0,1,4,8,20];

    IngotMall.OpenEx=function()
    	{//仅打开充值界面
    		GmProtocol$1.gi().s_IngotMall(0, 2);
    	};
        IngotMall.OPEN=function( pls)
    	{
    		var i,j;
    		if(XStat$1.gi().iXStat!=XStat$1.GS_INGOTMALL)
    		{
    			XStat$1.gi().PushStat(XStat$1.GS_INGOTMALL);
    		}
    		var im=XStat$1.gi().LastStat(0);
    		im.iShopId=pls.GetNextInt();
    		im.sShopName=pls.GetNextString();
    		
    		for(i=0;i<20;i++)
    		{
    			im.goods[i].iGid=-1;
    		}
    		
    		i=0;
    		while(true)
    		{
    			im.sgs[i].iTid=pls.GetNextInt();
    			if(im.sgs[i].iTid==-1)break;
    			im.sgs[i].iCount=pls.GetNextInt();
    			im.sgs[i].iPrice=pls.GetNextInt();
    			im.sgs[i].iMoney=pls.GetNextInt();
    			im.sgs[i].iReserve=pls.GetNextInt();
    			im.sgs[i].iBuyLimit=pls.GetNextByte();
    			
    			im.goods[i].iGid=1;
    			im.goods[i].iTid=im.sgs[i].iTid;
    			im.goods[i].iCount=im.sgs[i].iCount;
    			for(j=0;j<8;j++)im.goods[i].iAtts[j]=0;
    			GmPlay$1.xani_ngoods.InitAnimaWithName(GmPlay$1.de_goods.strValue(im.goods[i].iTid, -1, 10), im.goods[i].aa);
    			i++;
    		}
    		im.iSgCount=i;
    		im.lockgoods=null;
    		im.sTitle=pls.GetNextString();
    		IngotMall.iAddType=pls.GetNextByte();
    		im.iPage=pls.GetNextByte();
    		im.iSelect=pls.GetNextByte();
    //		IngotMall.iAddType=2;
    	};

    class ExchangeMoney extends BaseClass{
    	
    	 constructor( xani_ui)
    	{
    		super();
    		this.pm3f=M3DFast$1.gi();
    		
    		this.iW=500;
    		this.iH=350;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.in_count=new XInputNumber(GmPlay$1.xani_nui3);
    		this.in_count.iNumber=1;
    		this.in_count.MinMax(1, 200);
    		
    		this.btn_exchange=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_exchange.InitButton("1号按钮150_60");
    		this.btn_exchange.sName="兑换";
    	}


    	
    	Draw()
    	{
    		DrawMode$1.frame_type4("7号框52_52", this.iX, this.iY, this.iW, this.iH, 52, 52);
    		
    		this.pm3f.DrawText_2(this.iX+this.iW/2, this.iY+30, "铜币兑换", 0xfffeec7e, 32, 101, 1, 1, 0, -2, 0, 3, 0xff01152e);
    		
    		this.pm3f.DrawText_2(this.iX+50, this.iY+30+60+14, "兑换数目", 0xfffeec7e, 28, 101, 1, 1, 0, 0, -2, 3, 0xff01152e);
    		this.in_count.Move(this.iX+50+120, this.iY+30+60-11, 140);
    		this.in_count.Draw();
    		this.pm3f.DrawText_2(this.iX+50+120+140+8, this.iY+30+60+14, "*10万", 0xfffeec7e, 28, 101, 1, 1, 0, 0, -2, 3, 0xff01152e);
    		
    		this.pm3f.DrawText_2(this.iX+50, this.iY+30+60+60+14, "需要元宝", 0xfffeec7e, 28, 101, 1, 1, 0, 0, -2, 3, 0xff01152e);
    		this.pm3f.DrawTextEx(this.iX+50+120, this.iY+30+60+60+14, ""+this.in_count.iNumber*10, 0xff114e61, 20, 101, 1, 1, 0, 0, -2);
    		
    		this.pm3f.DrawText_2(this.iX+50, this.iY+30+60+60+60+14, "拥有元宝", 0xfffeec7e, 28, 101, 1, 1, 0, 0, -2, 3, 0xff01152e);
    		this.pm3f.DrawTextEx(this.iX+50+120, this.iY+30+60+60+60+14, ""+GmMe$1.me.rbs.iInGot, 0xff114e61, 20, 101, 1, 1, 0, 0, -2);
    		
    		this.btn_exchange.Move(this.iX+this.iW/2-150/2, this.iY+this.iH-30-60, 150, 60);
    		this.btn_exchange.Draw();
    		
    		
    		if (Confirm1.end(Confirm1.CONFIRM_GOTOCHARGE))
    		{//
    			if (Confirm1.bConfirm) 
    			{// 同意，打开充值
    				IngotMall.OpenEx();
    			}
    		}
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		if(this.in_count.ProcTouch(msg, x, y))
    		{
    //			if(this.in_count.iNumber>GmMe.me.rbs.iInGot/10)this.in_count.iNumber=GmMe.me.rbs.iInGot/10;
    //			if(this.in_count.iNumber<=0)this.in_count.iNumber=1;
    			return true;
    		}
    		if(this.btn_exchange.ProcTouch(msg, x, y))
    		{
    			if(this.btn_exchange.bCheck())
    			{
    				if(this.in_count.iNumber*10<=GmMe$1.me.rbs.iInGot)
    				{
    					GmProtocol$1.gi().s_SeverEvent(36, 0, this.in_count.iNumber, 0, 0);
    					XStat$1.gi().PopStat(1);
    				}
    				else
    				{
    					Confirm1.start(Confirm1.CONFIRM_GOTOCHARGE, "当前元宝不足，是否前往充值？");
    //					EasyMessage.easymsg.AddMessage("当前元宝不够");
    				}
    			}
    			return true;
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    			return true;
    		}
    		return false;
    	}
    }
    ExchangeMoney.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_EXCHANGEMONEY);
    };

    class LockOpen extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=400;
    		this.iH = 40+50+40;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_button);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX + this.iW - 35, this.iY -25, 60, 60);
    		
    		this.btn_send=new XButton(GmPlay$1.xani_button);
    		this.btn_send.InitButton("1号按钮90_60");
    		this.btn_send.Move(this.iX + this.iW - 40 - 90, this.iY + 40 - 5, 90, 60);
    		this.btn_send.sName="解锁";
    	
    		this.in_speak=new XInput(GmPlay$1.xani_button);
    		this.in_speak.Move(this.iX + 40, this.iY + 40, this.iW - 40 - 40 - 90 - 20, 50);
    		this.in_speak.bHideText=true;
    		this.in_speak.OpenInput();
    	}


    	Draw()
    	{
    		DrawMode$1.frame_type4("7号框52_52", this.iX, this.iY, this.iW, this.iH, 52, 52);
    		
    //		DrawMode.frame_type1("8号框20_50", this.in_speak.iX, this.in_speak.iY, this.in_speak.iW, 20);
    		DrawMode$1.frame_type4("8号框20_20", this.in_speak.iX, this.in_speak.iY, this.in_speak.iW, 50, 20, 20);
    		
    		this.pm3f.DrawTextEx(this.in_speak.iX + 10, this.in_speak.iY + this.in_speak.iH / 2, this.in_speak.sDetail, 0xff114e61, 20, 101, 1, 1, 0, 0, -2);
    		
    		this.btn_send.Draw();
    		this.btn_close.Draw();
    		
    		this.in_speak.onscr();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.in_speak.ProcTouch(msg, x, y))
    		{
    		}
    		if(this.btn_send.ProcTouch(msg, x, y))
    		{
    			if(this.btn_send.bCheck())
    			{//发送小喇叭内容
    				if(this.in_speak.sDetail.length<=0)
    				{
    					EasyMessage.easymsg.AddMessage("请先输入密码");
    				}
    				else if(this.in_speak.sDetail.length>=20)
    				{
    					EasyMessage.easymsg.AddMessage("密码过长");
    				}
    				else
    				{///cx
    					GmProtocol$1.gi().s_SetLock(1, 0, this.in_speak.sDetail);
    					XStat$1.gi().PopStat(1);
    				}
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }
    LockOpen.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_LOCKOPEN);
    //		(SmallSpeaker)(XStat.gi().LastStat(0))
    };

    class LockFrame extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW = 290;
    		this.iH = 220;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_open=new Array(2);//
    		for(i=0;i<2;i++)
    		{
    			this.btn_open[i]=new XButtonEx1(GmPlay$1.xani_button);
    			this.btn_open[i].InitButton("1号按钮210_60");
    		}
    		this.btn_open[0].sName="解  锁";
    		this.btn_open[1].sName="强制解锁";
    	}

    	Draw()
    	{
    		DrawMode$1.frame_type4("7号框52_52", this.iX, this.iY, this.iW, this.iH, 52, 52);
    		this.btn_open[0].Move(this.iX + 40, this.iY + 40, 210, 60);
    		this.btn_open[0].Draw();
    		
    		if(GmMe$1.me.iUnlockTime<100)this.btn_open[1].sName="取消强制解锁";
    		else this.btn_open[1].sName="强制解锁";
    		
    		this.btn_open[1].Move(this.iX + 40, this.iY + 40 + 60 + 20, 210, 60);
    		this.btn_open[1].Draw();
    		
    		if(Confirm1.end(Confirm1.CONFIRM_UNLOCK))
    		{
    			if(Confirm1.bConfirm)
    			{//同意丢弃
    				GmProtocol$1.gi().s_SetLock(2, 0, "asdf");
    				XStat$1.gi().PopStat(1);
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_open[0].ProcTouch(msg, x, y))
    		{
    			if(this.btn_open[0].bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    				LockOpen.Open();
    				return true;
    			}
    		}
    		if(this.btn_open[1].ProcTouch(msg, x, y))
    		{
    			if(this.btn_open[1].bCheck())
    			{
    				if(GmMe$1.me.iUnlockTime<100)
    				{
    					GmProtocol$1.gi().s_SetLock(3, 0, "asdf");
    					XStat$1.gi().PopStat(1);
    					return true;
    				}
    				else Confirm1.start(Confirm1.CONFIRM_UNLOCK,"强制解锁需要等待3天观察期，是否确定强制解锁？");
    //				XStat.gi().PopStat(1);
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    		}
    		return false;
    	}
    }

    LockFrame.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_LOCKFRAME);
    //		(SmallSpeaker)(XStat.gi().LastStat(0))
    };

    class LockSet extends BaseClass{
    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=400;
    		this.iH = 40 + 50 + 40;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_button);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX + this.iW - 35, this.iY - 25, 60, 60);
    		
    		this.btn_send=new XButton(GmPlay$1.xani_button);
    		this.btn_send.InitButton("1号按钮90_60");
    		this.btn_send.Move(this.iX + this.iW - 40 - 90, this.iY + 40 - 5, 90, 60);
    		this.btn_send.sName="设置";
    	
    		this.in_speak=new XInput(GmPlay$1.xani_ui);
    		this.in_speak.Move(this.iX + 40, this.iY + 40, this.iW - 40 - 40 - 90 - 20, 50);
    		this.in_speak.bHideText=true;
    		this.in_speak.OpenInput();
    	}


    	Draw()
    	{
    		DrawMode$1.frame_type4("7号框52_52", this.iX, this.iY, this.iW, this.iH, 52, 52);
    		
    //		DrawMode.frame_type1("8号框20_50", this.in_speak.iX, this.in_speak.iY, this.in_speak.iW, 20);
    		DrawMode$1.frame_type4("8号框20_20", this.in_speak.iX, this.in_speak.iY, this.in_speak.iW, 50, 20, 20);
    		
    		this.pm3f.DrawTextEx(this.in_speak.iX + 10, this.in_speak.iY + this.in_speak.iH / 2, this.in_speak.sDetail, 0xff114e61, 20, 101, 1, 1, 0, 0, -2);
    		
    		this.btn_send.Draw();
    		this.btn_close.Draw();
    		this.in_speak.onscr();
    	}
    	 ProcTouch( msg, x, y)
    	{
    		if(this.in_speak.ProcTouch(msg, x, y))
    		{
    		}
    		if(this.btn_send.ProcTouch(msg, x, y))
    		{
    			if(this.btn_send.bCheck())
    			{//发送小喇叭内容
    				if(this.in_speak.sDetail.length<=0)
    				{
    					EasyMessage.easymsg.AddMessage("请先输入密码");
    				}
    				else if(this.in_speak.sDetail.length>=20)
    				{
    					EasyMessage.easymsg.AddMessage("密码过长");
    				}
    				else
    				{///cx
    					GmProtocol$1.gi().s_SetLock(0, 0, this.in_speak.sDetail);
    					XStat$1.gi().PopStat(1);
    				}
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }
    LockSet.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_LOCKSET);
    //		(SmallSpeaker)(XStat.gi().LastStat(0))
    };

    class SmallSpeaker extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=600;
    		this.iH=100;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=0;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_ui);
    		this.btn_close.InitButton("统一关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-60, this.iY+20, 60, 60);
    		
    		this.btn_send=new XButton(GmPlay$1.xani_ui);
    		this.btn_send.InitButton("统一中按钮2");
    		this.btn_send.Move(this.iX+this.iW-70-70, this.iY+30, 70, 40);
    		this.btn_send.sName="发送";
    	
    		this.in_speak=new XInput(GmPlay$1.xani_ui);
    		this.in_speak.Move(this.iX+20, this.iY+20, this.iW-180, this.iH-40);
    		this.in_speak.bHideText=true;
    		this.in_speak.OpenInput();
    	}

    	Draw()
    	{
    		DrawMode$1.Frame2_MD(this.iX, this.iY, this.iW, this.iH);
    		
    		M3DFast$1.gi().FillRect_2D(this.iX+20, this.iY+20, this.iX+this.iW-180,this.iY+this.iH-20,0xff000001);
    		// DrawMode.Frame1_BR(this.iX+20, this.iY+20, this.iW-180, this.iH-40);
    		
    		FormatString.gi().Format(this.in_speak.sDetail, this.in_speak.iW-10, 20);//"#c000000"+
    //		FormatString.gi().iH
    		FormatString.gi().Draw(this.in_speak.iX+10, this.in_speak.iY+10);
    		
    		this.btn_send.Draw();
    		this.btn_close.Draw();

    		this.in_speak.onscr();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.in_speak.ProcTouch(msg, x, y))
    		{
    		}
    		if(this.btn_send.ProcTouch(msg, x, y))
    		{
    			if(this.btn_send.bCheck())
    			{//发送小喇叭内容
    				if(this.in_speak.sDetail.length<=0)
    				{
    					EasyMessage.easymsg.AddMessage("请先输入内容");
    				}
    				else if(this.in_speak.sDetail.length>=40)
    				{
    					EasyMessage.easymsg.AddMessage("内容过长");
    				}
    				else
    				{
    					GmProtocol$1.gi().s_UseGoods(SmallSpeaker.goods.iGid, 1,this.in_speak.sDetail);
    					XStat$1.gi().PopStat(1);
    				}
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }
    SmallSpeaker.goods;
    SmallSpeaker.Open=function( g)
    {
    	SmallSpeaker.goods=g;//小喇叭
    	if(g.iTid!=122)return;
    	
    	XStat$1.gi().PushStat(XStat$1.GS_SMALLSPEAKER);
    //		(SmallSpeaker)(XStat.gi().LastStat(0))
    };

    class MyGoodsFrame extends BaseClass{
    		
    		
    		constructor( ani)
    		{
    			super();
    			var i;
    			this.pani=ani;
    			this.pm3f=ani.pm3f;
    			
    			this.iW=1040;
    			this.iH=610;
    			this.iX=(GmConfig$1.SCRW-this.iW)/2;
    			this.iY=(GmConfig$1.SCRH-this.iH)/2;
    			
    			this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_close.InitButton("关闭按钮");
    			this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    			
    			this.btn_setpoint=new Array(3);//
    			for(i=0;i<3;i++)
    			{
    				this.btn_setpoint[i]=new XButtonEx2$1(GmPlay$1.xani_nui3);
    				this.btn_setpoint[i].InitButton("装备切换按钮");
    				this.btn_setpoint[i].sName=""+(i+1);
    			}
    			
    			this.aa_body=new AnimaAction();
    			this.aa_weapon=new AnimaAction();
    			this.aa_cls=new Array(5);//
    			for(i=0;i<5;i++)this.aa_cls[i]=new AnimaAction();
    			this.FreshWeapon();
    			
    			this.btn_bag1=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_bag1.InitButton("背包按钮109_61");
    			
    			this.btn_bag2=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_bag2.InitButton("行囊按钮109_61");
    			
    			this.btn_bag3=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_bag3.InitButton("仓库按钮109_61");
    			
    			this.btn_locker=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_locker.InitButton("按钮1_110");
    			this.btn_locker.sName="锁";
    			this.btn_locker.iNameSize=25;
    			
    			this.iBagPoint=0;
    			
    			this.btn_use=new XButtonEx2$1(GmPlay$1.xani_nui3);
    			this.btn_use.InitButton("内框按钮");
    			this.btn_use.sName="使 用";
    			this.btn_break=new XButtonEx2$1(GmPlay$1.xani_nui3);
    			this.btn_break.InitButton("内框按钮");
    			this.btn_break.sName="分 解";
    			this.btn_drop=new XButtonEx2$1(GmPlay$1.xani_nui3);
    			this.btn_drop.InitButton("内框按钮");
    			this.btn_drop.sName="丢 弃";
    			
    			this.btn_checkmoney=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_checkmoney.InitButton("10号按钮40_40");
    		}
    		GetWeaponTid()
    		{
    			if(MyGoods.gi().goods[1][2].iGid<=0)return -1;
    			else return MyGoods.gi().goods[1][2].iTid;
    		}
    		FreshWeapon()
    		{
    			var i;
    			this.iWeapTid=this.GetWeaponTid();
    			this.aa_body=GmPlay$1.xani_newrole[GmMe$1.me.iRace*2+GmMe$1.me.iSex].InitAnimaWithName("站立_下", null);
    			if(this.iWeapTid>=0)
    			{
    				this.aa_weapon=GmPlay$1.xani_weap[GmMe$1.me.iRace*2+GmMe$1.me.iSex][SortAnima.WeapFlag(this.iWeapTid)].InitAnimaWithName("站立_下", null);
    			}
    			var xb=GmMe$1.me.iRace*2+GmMe$1.me.iSex;
    			for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    			{
    				if(GmMe$1.me.iColor[i]<=0 || GmMe$1.me.iColor[i]>=6)continue;
    				GmPlay$1.xani_color[xb][GmMe$1.me.iColor[i]-1].InitAnimaWithName(SortAnima._CHANGECOLOR[xb][i]+"_站立_下", this.aa_cls[i]);
    			}
    		}
    		

    		Draw()
    		{
    			this.bOperateGoods=false;
    			var i,j;
    			var x,y;
    			var offx,offy;
    		//	GmPlay.sop("this.iX="+this.iX+",this.iY="+this.iY);
    			//////////////////////////////////////////////
    			DrawMode$1.new_baseframe2(this.iX,this.iY,this.iW,this.iH,"物","品");
    			this.btn_close.Draw();
    			
    			//左侧：装备切换，装备，任务，属性
    			DrawMode$1.new_framein(this.iX+30,this.iY+30,480,this.iH-60);
    			offx=this.iX+30+25;
    			offy=this.iY+30+20;
    			for(i=0;i<3;i++)
    			{
    				if((GmMe$1.me.iFlag[51]%10)==i)
    				{
    					this.btn_setpoint[i].bMouseDown=true;
    					this.btn_setpoint[i].bMouseIn=true;
    				}
    				this.btn_setpoint[i].Move(offx+i*(117+40), offy, 117, 54);
    				this.btn_setpoint[i].Draw();
    			}
    			offy+=54+20;
    			if(MyGoods.gi().goods[1][0].iGid!=-1)GmPlay$1.xani_nui3.DrawAnimaEx(offx,offy, "物品格子", 0, 101, 1,1, 0, 0, 0);
    			else GmPlay$1.xani_nui3.DrawAnimaEx(offx,offy, "装备格子", 0, 101, 1,1, 0, 0, 0);
    			if(MyGoods.gi().goods[1][2].iGid!=-1)GmPlay$1.xani_nui3.DrawAnimaEx(offx,offy+85, "物品格子", 0, 101, 1,1, 0, 0, 0);
    			else GmPlay$1.xani_nui3.DrawAnimaEx(offx,offy+85, "装备格子", 2, 101, 1,1, 0, 0, 0);
    			if(MyGoods.gi().goods[1][4].iGid!=-1)GmPlay$1.xani_nui3.DrawAnimaEx(offx,offy+85*2, "物品格子", 0, 101, 1,1, 0, 0, 0);
    			else GmPlay$1.xani_nui3.DrawAnimaEx(offx,offy+85*2, "装备格子", 4, 101, 1,1, 0, 0, 0);
    			
    			offx=this.iX+30+480-25-80;
    			if(MyGoods.gi().goods[1][1].iGid!=-1)GmPlay$1.xani_nui3.DrawAnimaEx(offx,offy, "物品格子", 0, 101, 1,1, 0, 0, 0);
    			else GmPlay$1.xani_nui3.DrawAnimaEx(offx,offy, "装备格子", 1, 101, 1,1, 0, 0, 0);
    			if(MyGoods.gi().goods[1][3].iGid!=-1)GmPlay$1.xani_nui3.DrawAnimaEx(offx,offy+85, "物品格子", 0, 101, 1,1, 0, 0, 0);
    			else GmPlay$1.xani_nui3.DrawAnimaEx(offx,offy+85, "装备格子", 3, 101, 1,1, 0, 0, 0);
    			if(MyGoods.gi().goods[1][5].iGid!=-1)GmPlay$1.xani_nui3.DrawAnimaEx(offx,offy+85*2, "物品格子", 0, 101, 1,1, 0, 0, 0);
    			else GmPlay$1.xani_nui3.DrawAnimaEx(offx,offy+85*2, "装备格子", 5, 101, 1,1, 0, 0, 0);
    			this.iSx=this.iX+30+25;
    			this.iSy=offy;
    			for(i=0;i<2;i++)
    			{
    				for(j=0;j<3;j++)
    				{
    					x=this.iX+30+25+i*350;
    					y=offy+j*85;

    					if(MyGoods.gi().goods[1][j*2+i].iGid!=-1)
    					{
    //						if(bLocked && MyGoods.gi().goods[1][j*2+i]==this.lockgoods)continue;
    						MyGoods.gi().goods[1][j*2+i].aa.Draw(x, y);
    					}
    				}
    			}
    			
    			GmPlay$1.xani_nui3.DrawAnima(this.iX+30+240,this.iY+30+240, "人物背景图",0);
    			FireworksEffect.DrawAura(0, this.iX+30+240,this.iY+30+280, null, 0);//物品栏
    			this.aa_body.Draw(this.iX+30+240,this.iY+30+280);
    			var xb=GmMe$1.me.iRace*2+GmMe$1.me.iSex;
    			for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    			{
    				if(GmMe$1.me.iColor[i]<=0 || GmMe$1.me.iColor[i]>=6)continue;
    				this.aa_cls[i].iFrame=this.aa_body.iFrame;
    				this.aa_cls[i].Draw(this.iX+30+240,this.iY+30+280);
    			}
    			this.aa_body.NextFrame();
    			if(this.iWeapTid>=0)
    			{
    				this.aa_weapon.Draw(this.iX+30+240,this.iY+30+280);
    				this.aa_weapon.NextFrame();
    			}
    			
    			offx=this.iX+30+25;
    			offy+=85*3+10;
    			
    			DrawMode$1.new_TagText2(offx,offy,480-50-67,"气血",GmMe$1.me.rbs.iHp+"/"+GmMe$1.me.rbs.iMaxHp);
    			offy+=32+15;
    			DrawMode$1.new_TagText2(offx,offy,480-50-67,"魔法",GmMe$1.me.rbs.iMp+"/"+GmMe$1.me.rbs.iMaxMp);
    			offy+=32+15;
    			
    			DrawMode$1.new_TagText2(offx,offy,120,"灵力",""+GmMe$1.me.rbs.iSpirit);
    			DrawMode$1.new_TagText2(offx+430-67-120,offy,120,"防御",""+GmMe$1.me.rbs.iDefence);
    			offy+=32+15;
    			DrawMode$1.new_TagText2(offx,offy,120,"伤害",""+GmMe$1.me.rbs.iAttack);
    			DrawMode$1.new_TagText2(offx+430-67-120,offy,120,"速度",""+GmMe$1.me.rbs.iSpeed);
    			
    			///////背包/行囊，格子们，铜币储备，加锁
    			DrawMode$1.new_framein(this.iX+30+480+15,this.iY+30,480,this.iH-60);
    			
    			offx=this.iX+30+480+15+25;
    			offy=this.iY+30+25;
    			
    			this.btn_bag1.Move(offx,offy,109,61);
    			this.btn_bag1.Draw();
    			this.pm3f.DrawText_2(this.btn_bag1.iX+78,this.btn_bag1.iY+17,"背",0xffffec80,24,101,1,1,0,-2,-2,4,0xff00244d);
    			this.pm3f.DrawText_2(this.btn_bag1.iX+78,this.btn_bag1.iY+13+30,"包",0xffffec80,24,101,1,1,0,-2,-2,4,0xff00244d);
    			
    			this.btn_bag2.Move(offx+(430-109)/2,offy,109,61);
    			this.btn_bag2.Draw();
    			this.pm3f.DrawText_2(this.btn_bag2.iX+78,this.btn_bag2.iY+17,"行",0xffffec80,24,101,1,1,0,-2,-2,4,0xff00244d);
    			this.pm3f.DrawText_2(this.btn_bag2.iX+78,this.btn_bag2.iY+13+30,"囊",0xffffec80,24,101,1,1,0,-2,-2,4,0xff00244d);
    			
    			this.btn_bag3.Move(offx+480-50-109,offy,109,61);
    			this.btn_bag3.Draw();
    			this.pm3f.DrawText_2(this.btn_bag3.iX+78,this.btn_bag3.iY+17,"仓",0xffffec80,24,101,1,1,0,-2,-2,4,0xff00244d);
    			this.pm3f.DrawText_2(this.btn_bag3.iX+78,this.btn_bag3.iY+13+30,"库",0xffffec80,24,101,1,1,0,-2,-2,4,0xff00244d);
    			
    			if(this.iBagPoint==0)GmPlay$1.xani_nui3.DrawAnima(this.btn_bag1.iX, this.btn_bag1.iY, "背包选中框",0);
    			else GmPlay$1.xani_nui3.DrawAnima(this.btn_bag2.iX, this.btn_bag2.iY, "背包选中框",0);
    			
    			offy+=61+5;
    			GoodsDraw.new_DrawGoods(offx,offy, MyGoods.gi().goods[2+this.iBagPoint], null, null);
    			MyGoodsFrame.iGx=offx;
    			MyGoodsFrame.iGy=offy;
    			
    			offy+=345+20;
    			
    			DrawMode$1.new_TagText2(offx,offy,120,"铜币",""+GmMe$1.me.rbs.iMoney);
    			this.btn_checkmoney.Move(offx+67+120+5, offy-4, 40, 40);
    			this.btn_checkmoney.Draw();
    			DrawMode$1.new_TagText2(offx+430-67-120,offy,120,"元宝",""+GmMe$1.me.rbs.iInGot);
    			offy+=32+15;
    			DrawMode$1.new_TagText2(offx,offy,120,"储备",""+GmMe$1.me.rbs.iReserve);
    //			DrawMode.new_TagText2(offx+430-67-120,offy,120,"速度",""+GmMe.me.rbs.iSpeed);

    			if(GmMe$1.me.bHaveLock)
    			{
    				if(GmMe$1.me.bLocked)this.btn_locker.sName="解  锁";
    				else this.btn_locker.sName="改锁密";
    			}
    			else this.btn_locker.sName="加  锁";
    			this.btn_locker.Move(this.iX+30+480+15+480-110-25, offy-15, 110, 52);
    			this.btn_locker.Draw();
    			
    			if(Confirm1.end(Confirm1.CONFIRM_DROPPET))
    			{
    				if(Confirm1.bConfirm)
    				{//输入锁
    					LockSet.Open();
    				}
    			}
    			
    			if(this.lockgoods!=null && this.lockgoods.iOid==1)
    			{//选中装备格子
    				i=this.lockgoods.iPos%2;
    				j=parseInt(this.lockgoods.iPos/2);
    				x=this.iSx+i*(350);
    				y=this.iSy+j*85;
    				
    				GmPlay$1.xani_nui3.DrawAnimaEx(x, y, "物品选中框", 0, 101, 1, 1, 0, 0, 0);
    				GoodsDraw.new_DrawDetail(this.lockgoods,x,y,0);
    			}
    			else 	if(GoodsDraw.bShowDetail())
    			{
    				GoodsDraw.new_DrawRect(MyGoodsFrame.iGx,MyGoodsFrame.iGy, MyGoods.gi().goods[2+this.iBagPoint], this.lockgoods, 0);
    				if(GoodsDraw.lastlock.iOid==2)
    				{//背包中，有丢弃和使用按钮
    					GoodsDraw.new_DrawDetail(null,-1,-1,55+20);
    					this.bOperateGoods=true;
    					this.btn_drop.Move(GoodsDraw.iDetailX+10, GoodsDraw.iDetailY+GoodsDraw.iDetailH-55-20, 98, 55);
    					this.btn_drop.Draw();
    					
    					if(GmPlay$1.de_goods.intValue(GoodsDraw.lastlock.iTid, 0, 16)>=0)
    					{
    						this.btn_break.Move(GoodsDraw.iDetailX+GoodsDraw.iDetailW/2-98/2, GoodsDraw.iDetailY+GoodsDraw.iDetailH-55-20, 98, 55);
    						this.btn_break.Draw();
    					}
    					
    					this.btn_use.Move(GoodsDraw.iDetailX+GoodsDraw.iDetailW-98-10, GoodsDraw.iDetailY+GoodsDraw.iDetailH-55-20, 98, 55);
    					this.btn_use.Draw();
    				}
    				else GoodsDraw.new_DrawDetail(null,-1,-1,0);
    			}
    			if(Confirm1.end(Confirm1.CONFIRM_BREAKGOODS))
    			{
    				if(Confirm1.bConfirm)
    				{//同意分解
    					if(this.lockgoods!=null && this.lockgoods.iGid>0 && this.lockgoods.iOid==2)
    					{
    						if(GmMe$1.me.bHaveLock && GmMe$1.me.bLocked)EasyMessage.easymsg.AddMessage("未解锁不能分解");
    						else
    						{
    							if(GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 16)<0)FrameMessage.fm.Open("只有装备才能分解！");
    							else
    							{
    								GmProtocol$1.gi().s_RecoverGoods(this.lockgoods.iGid);
    								//GmProtocol.gi().s_DropGoods();
    								this.lockgoods.iGid=-1;
    							}
    						}
    					}
    				}
    				GoodsDraw.bMoving=false;
    				GoodsDraw.lastlock=null;
    			}
    			
    			if(Confirm1.end(Confirm1.CONFIRM_DROPGOODS))
    			{
    				if(Confirm1.bConfirm)
    				{//同意丢弃
    					if(this.lockgoods!=null && this.lockgoods.iGid>0 && this.lockgoods.iOid==2)
    					{
    						if(GmMe$1.me.bHaveLock && GmMe$1.me.bLocked)
    							EasyMessage.easymsg.AddMessage("未解锁不能丢弃");
    						else
    						{
    							if(GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 35)==1){
    								FrameMessage.fm.Open("该物品不可丢弃！");
    							}
    							else
    							{
    								GmProtocol$1.gi().s_DropGoods(this.lockgoods.iGid);
    								this.lockgoods.iGid=-1;
    							}
    						}
    					}
    				}
    				GoodsDraw.bMoving=false;
    				GoodsDraw.lastlock=null;
    			}
    			TmpGoods.Draw();
    		}

    		 ProcTouch( msg, x, y)
    		{
    			if(TmpGoods.ProcTouch(msg, x, y))return true;
    			if(this.bOperateGoods)
    			{
    				if(this.btn_drop.ProcTouch(msg, x, y))
    				{
    					if(this.btn_drop.bCheck())
    					{
    						Confirm1.start(Confirm1.CONFIRM_DROPGOODS,"是否确定丢弃？");
    						this.btn_drop.SetNormal();
    					}
    					return true;
    				}
    				if(GoodsDraw.lastlock&&GmPlay$1.de_goods.intValue(GoodsDraw.lastlock.iTid, 0, 16)>=0)
    				{
    					if(this.btn_break.ProcTouch(msg, x, y)){
    						if(this.btn_break.bCheck())
    						{//分解
    							Confirm1.start(Confirm1.CONFIRM_BREAKGOODS,"是否确定分解？");
    							this.btn_break.SetNormal();
    						}
    						return true;
    					}
    				}
    				if(this.btn_use.ProcTouch(msg, x, y))
    				{
    					if(this.btn_use.bCheck())
    					{
    						this.UseGoods();
    						this.lockgoods=null;
    						GoodsDraw.lastlock=null;
    						this.btn_use.fScale=1;
    						this.btn_use.iAnimaStat=0;
    					}
    					return true;
    				}
    			}
    			if(this.btn_close.ProcTouch(msg, x, y))
    			{
    				if(this.btn_close.bCheck())
    				{
    					XStat$1.gi().PopStat(1);
    				}
    				return true;
    			}
    			if(this.btn_bag1.ProcTouch(msg, x, y))
    			{
    				if(this.btn_bag1.bCheck())
    				{
    					this.iBagPoint=0;
    				}
    			}
    			if(this.btn_bag2.ProcTouch(msg, x, y))
    			{
    				if(this.btn_bag2.bCheck())
    				{
    					this.iBagPoint=1;
    				}
    			}
    			if(this.btn_bag3.ProcTouch(msg, x, y))
    			{
    				if(this.btn_bag3.bCheck())
    				{
    					if(GmMe$1.me.iFlag[20]>60)
    					{
    						XStat$1.gi().PopStat(1);
    						XStat$1.gi().PushStat(XStat$1.GS_GOODSSTOREFROME);
    						XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    						GmProtocol$1.gi().s_OpenStore(0, 0,0);
    					}
    					else
    					{
    						FrameMessage.fm.Open("仓库管理员在西阳城(103,23)#e#e会员剩余天数>60可随时打开仓库");
    					}
    				}
    				return true;
    			}
    			var i;
    				for(i=0;i<3;i++)
    				{
    					if(this.btn_setpoint[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn_setpoint[i].bCheck())
    						{//发送切换装备消息，清空装备列表
    							if((GmMe$1.me.iFlag[51]%10)==i)continue;
    							if(MyGoodsFrame.bSELock){
    								EasyMessage.easymsg.AddMessage("请勿频繁更换装备");
    								continue;
    							}
    							GmProtocol$1.gi().s_SwapEquipment(i);
    							MyGoods.gi().goods[1][0].iGid=-1;
    							MyGoods.gi().goods[1][1].iGid=-1;
    							MyGoods.gi().goods[1][2].iGid=-1;
    							MyGoods.gi().goods[1][3].iGid=-1;
    							MyGoods.gi().goods[1][4].iGid=-1;
    							MyGoods.gi().goods[1][5].iGid=-1;
    							GmMe$1.me.iFlag[51]=GmMe$1.me.iFlag[51]/10*10+i;
    							MyGoodsFrame.bSELock=true;
    						}
    					}
    				}
    			if(this.btn_checkmoney.ProcTouch(msg, x, y))
    			{
    				if(this.btn_checkmoney.bCheck())
    				{
    					ExchangeMoney.Open();
    				}
    			}
    			if(this.btn_locker.ProcTouch(msg, x, y))
    			{
    				if(this.btn_locker.bCheck())
    				{
    					if(GmMe$1.me.bHaveLock)
    					{
    						if(GmMe$1.me.bLocked)
    						{//解锁
    							LockFrame.Open();
    //							Confirm1.start(Confirm1.CONFIRM_DROPPET,"加锁后，每次登陆需要解锁才能进行（交易，摆摊，丢弃，给予，放生）等功能，是否确定加锁？");
    						}
    						else
    						{
    							LockSet.Open();
    //							Confirm1.start(Confirm1.CONFIRM_DROPPET,"加锁后，每次登陆需要解锁才能进行（交易，摆摊，丢弃，给予，放生）等功能，是否确定加锁？");
    						}
    					}
    					else
    					{
    						Confirm1.start(Confirm1.CONFIRM_DROPPET,"加锁后，每次登陆需要解锁才能进行（交易，摆摊，丢弃，给予，放生）等功能，是否确定加锁？");
    					}
    				}
    			}
    			var j;
    			var xx,yy;
    			for(i=0;i<2;i++)
    			{
    				for(j=0;j<3;j++)
    				{//装备位点击，特殊处理
    					xx=this.iSx+i*345;
    					yy=this.iSy+j*85;
    					
    					if(XDefine$1.bInRect(x, y, xx, yy, 80, 80))
    					{
    						if(msg==3)
    						{
    							if(MyGoods.gi().goods[1][j*2+i].iGid==-1)break;
    							else
    							{
    								if(this.lockgoods==MyGoods.gi().goods[1][j*2+i])
    								{//已锁定，使用
    									this.UseGoods();
    									this.lockgoods=null;
    								}
    								else this.lockgoods=MyGoods.gi().goods[1][j*2+i];//未锁定，锁定
    							}
    						}
    						return true;
    					}
    				}
    			}
    			if(msg==3 && this.lockgoods!=null && GoodsDraw.bMoving)
    			{///看是否移动到按钮上
    				if(XDefine$1.bInRect(x,y,this.btn_bag1.iX,this.btn_bag1.iY,this.btn_bag1.iW,this.btn_bag1.iH))
    				{//背包按钮
    					for(i=0;i<20;i++)
    					{
    						if(MyGoods.gi().goods[2][i].iGid==-1)
    						{
    							GoodsDraw.swaplock=MyGoods.gi().goods[2][i];
    							this.MoveGoods(GoodsDraw.swaplock);
    							break;
    						}
    					}
    				}
    				else if(XDefine$1.bInRect(x,y,this.btn_bag2.iX,this.btn_bag2.iY,this.btn_bag2.iW,this.btn_bag2.iH))
    				{//行囊按钮
    					for(i=0;i<20;i++)
    					{
    						if(MyGoods.gi().goods[3][i].iGid==-1)
    						{
    							GoodsDraw.swaplock=MyGoods.gi().goods[3][i];
    							this.MoveGoods(GoodsDraw.swaplock);
    							break;
    						}
    					}
    				}
    				else if(XDefine$1.bInRect(x, y, this.iSx,this.iSy,345+80,85*3))
    				{
    					if(this.iBagPoint==0)this.UseGoods();
    					GoodsDraw.lastlock=null;
    				}
    				else 	if(!XDefine$1.bInRect(x, y, MyGoodsFrame.iGx, MyGoodsFrame.iGy, 85*5, 85*4))
    				{
    					if(this.lockgoods.iOid!=2)
    					{
    						EasyMessage.easymsg.AddMessage("道具栏的物品才能丢弃");
    						GoodsDraw.bMoving=false;
    					}
    					else Confirm1.start(Confirm1.CONFIRM_DROPGOODS,"是否确定丢弃？");
    					return true;
    				}
    			}
    			this.lockgoods=GoodsDraw.new_LockGoods(x, y, MyGoodsFrame.iGx,MyGoodsFrame.iGy, MyGoods.gi().goods[2+this.iBagPoint], msg);
    			if(GoodsDraw.bCanProc())
    			{
    				if(this.iBagPoint==0)this.UseGoods();
    				GoodsDraw.lastlock=null;
    			}
    			if(GoodsDraw.bCanMove())
    			{//交换物品
    				this.MoveGoods(GoodsDraw.swaplock);
    			}
    			return false;
    		}
    		MoveGoods( destgoods)
    		{
    			var i,j;
    			if(destgoods.iOid==1)
    			{//目标位置是装备位，判断是否满足穿戴条件
    				if(!MyGoods.bCheckEquipment(this.lockgoods,destgoods.iPos))//可佩戴，移动或交换
    				{//检测失败
    					return;
    				}
    			}
    			if(this.lockgoods.iOid==1 && destgoods.iGid!=-1)
    			{//装备位和背包交换
    				if(!MyGoods.bCheckEquipment(destgoods,this.lockgoods.iPos))//可佩戴，移动或交换
    				{//检测失败
    					return;
    				}
    			}
    			if(this.lockgoods.iTid==318 || this.lockgoods.iTid==319 || this.lockgoods.iTid==320 || this.lockgoods.iTid==321 || this.lockgoods.iTid==322 || this.lockgoods.iTid==323)
    			{
    				if(this.lockgoods.iOid==2 && destgoods.iOid!=2)
    				{
    					FrameMessage.fm.Open("礼包不能移动到行囊和仓库");
    					return;
    				}
    			}
    			GmProtocol$1.gi().s_MoveGoods(this.lockgoods.iGid, this.lockgoods.iOid, this.lockgoods.iPos, destgoods.iGid, destgoods.iOid, destgoods.iPos);
    			if(destgoods.iGid==-1)
    			{//移动物品
    				destgoods.copyfrom(this.lockgoods);
    				this.lockgoods.iGid=-1;
    			}
    			else
    			{//交换/叠加物品
    				i=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 28);
    				if(this.lockgoods.iTid==destgoods.iTid && i>1)
    				{
    					if(destgoods.iCount>=i)
    					{//目标物品满，不改变
    //						for(int z=0;z<100;z++)GmPlay.sop("zzzzzzzzzzzzzzz");
    					}
    					else if(this.lockgoods.iCount+destgoods.iCount<=i)
    					{
    						destgoods.iCount+=this.lockgoods.iCount;
    						this.lockgoods.iGid=-1;
    					}
    					else
    					{
    						j=this.lockgoods.iCount+destgoods.iCount;
    						destgoods.iCount=i;
    						this.lockgoods.iCount=j-i;
    					}
    				}
    				else
    				{
    					var swapgoods=new Goods();
    					swapgoods.copyfrom(destgoods);
    					destgoods.copyfrom(this.lockgoods);
    					this.lockgoods.copyfrom(swapgoods);
    				}
    			}
    			console.log(this.lockgoods.iOid);
    			if(this.lockgoods.iOid==1 || destgoods.iOid==1)
    			{//装备更换，重新计算人物属性
    				if((this.lockgoods.iOid==1 && this.lockgoods.iPos==2) ||
    						(destgoods.iOid==1 && destgoods.iPos==2))
    				{//是武器，更换效果
    					GmMe$1.me.bwc=true;
    					this.FreshWeapon();
    				}
    				EasyMessage.easymsg.snapatt();
    				GmMe$1.me.CalcFightAtt();
    				EasyMessage.easymsg.calcattchanged();
    			}
    		}
    		UseGoods()
    		{//检测物品类型，根据物品类型，来判断是装备，还是使用药品，还是其他
    			if(this.lockgoods==null)return;
    			var i,type;
    			if(this.lockgoods.iOid==1)
    			{//脱下装备
    				for(i=0;i<20;i++)
    				{//背包里找一个空格
    					if(MyGoods.gi().goods[2][i].iGid==-1)
    					{
    						this.MoveGoods(MyGoods.gi().goods[2][i]);
    						return;
    					}
    				}
    			}
    			if(this.lockgoods.iOid!=2)return;//只有在背包里的物品才能使用
    			type=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, -1, 16);//装备
    			if(type!=-1)
    			{//使用装备，根据部位穿戴
    				this.MoveGoods(MyGoods.gi().goods[1][type]);
    				return;
    			}
    			type=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, -1, 27);
    			if(type!=-1)
    			{//草药,可在战斗和pk中使用
    				i=0;
    				var usecount=1;
    				var restorehp=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 1);
    				var restoremp=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 2);
    				while((restorehp!=-1 && GmMe$1.me.rbs.iHp< GmMe$1.me.rbs.iMaxHp) ||
    						(restoremp!=-1 &&  GmMe$1.me.rbs.iMp< GmMe$1.me.rbs.iMaxMp))
    					{//可加血，而且血不满，可加蓝，而且蓝不满
    						if(usecount<=0)break;//符合使用数量
    						if(restorehp!=-1) GmMe$1.me.rbs.iHp+=restorehp;
    						if(restoremp!=-1) GmMe$1.me.rbs.iMp+=restoremp;
    						usecount--;
    						i++;
    					}
    				if(type==3)
    				{
    					i=1;
    				}
    				if(i<=0 && type<3)
    				{
    					EasyMessage.easymsg.AddMessage("您的状态很好，不需要恢复");
    				}
    				else
    				{
    					GmProtocol$1.gi().s_UseGoods(this.lockgoods.iGid, i,"");
    					this.lockgoods.iCount-=i;
    					if(this.lockgoods.iCount<=0)
    					{
    						this.lockgoods.iGid=-1;
    						this.lockgoods=null;
    					}
    					
    					GmMe$1.me.CalcFightAtt();
    				}
    				return;
    			}
    			type=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, -1, 33);
    			if(type!=-1)
    			{
    				GmProtocol$1.gi().s_UseGoods(this.lockgoods.iGid, 1,"");//if(this.lockgoods.iTid==191)
    				return;
    			}
    			type=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, -1, 30);//道具
    			if(type!=-1)
    			{
    				if(type==1)
    				{//漫游中使用
    					if(this.lockgoods.iTid==195 || this.lockgoods.iTid==328 || this.lockgoods.iTid==329 || this.lockgoods.iTid==330 || this.lockgoods.iTid==331)
    					{//丹方
    						if(GmMe$1.me.rbs.iGovSkill[1]>0)
    						{//炼丹
    							XStat$1.gi().PopStat(1);
    							LianDanShu.Open(this.lockgoods, null);
    						}
    						else EasyMessage.easymsg.AddMessage("还未学习炼丹术");
    					}
    					else if(this.lockgoods.iTid>=342 && this.lockgoods.iTid<=346)
    					{
    						if(GmMe$1.me.rbs.iGovSkill[1]>0)
    						{//炼丹
    							XStat$1.gi().PopStat(1);
    							LianDanShu.Open(null, this.lockgoods);
    						}
    						else EasyMessage.easymsg.AddMessage("还未学习炼丹术");
    					}
    					else if(this.lockgoods.iTid==160 || this.lockgoods.iTid==161)
    					{//仙灵果洗宝宝
    						var pf=PetsFrame.Open();
    						if(pf!=null)pf.iPage=1;
    //						WashPet.Open(this.lockgoods);
    					}
    					else if(this.lockgoods.iTid==122)
    					{//小喇叭，输入聊天文字
    						SmallSpeaker.Open(this.lockgoods);
    					}
    					else if(this.lockgoods.iTid==386 || this.lockgoods.iTid==387 || this.lockgoods.iTid==388)
    					{
    						GmProtocol$1.gi().s_PromptActivity(0, 0);//请求获得活跃度数据
    						NewActivity.iOpenFlag=1;
    						XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    					}
    					else
    					{
    						GmProtocol$1.gi().s_UseGoods(this.lockgoods.iGid, 1,"");
    						if(this.lockgoods.iTid==119)
    						{//看是否已经定过位置
    							XStat$1.gi().PopStat(1);//使用了传送符，关闭显示框
    							if(this.lockgoods.iAtts[0]!=0)MapManager.gi().iMapChangeing=100;
    						}
    					}
    				}
    				else EasyMessage.easymsg.AddMessage("不能直接使用");
    				return;
    			}
    			type=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, -1, 31);//道具
    			if(type!=-1)
    			{//材料
    				EasyMessage.easymsg.AddMessage("不能直接使用");
    				return;
    			}
    			type=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, -1, 34);
    			if(type!=-1)
    			{//烹饪
    				if(type!=1 && type!=3)
    				{
    					EasyMessage.easymsg.AddMessage("不能直接使用");
    					return;
    				}
    				GmProtocol$1.gi().s_UseGoods(this.lockgoods.iGid, 1,"");
    				switch(type)
    				{
    				case 197://艾窝窝
    //					s+="#e00ff00增加宠物寿命=品质*2，有几率被噎住降低资质";
    					break;
    				case 198://三丁包子
    					//漫游恢复
    	//				s+="#e00ff00使用后增加愤怒=15，只能在漫游中使用";
    					break;
    				case 199://双塔鱼
    					break;
    				case 200://粉蒸牛肉
    	//				s+="#e00ff00增加宠物寿命=品质/2";
    					break;
    				case 201://赖汤圆
    		//			s+="#e00ff00增加宠物寿命=品质*2，有几率被噎住降低资质";
    					break;
    				case 202://臭豆腐
    		//			s+="#e00ff00使用后增加愤怒=15，只能在战斗中使用";
    					break;
    				case 203://竹简饭
    		//			s+="#e00ff00使用后增加愤怒=品质/2，只能在战斗中使用";
    					break;
    				case 204://清汤鱼圆
    		//			s+="#e00ff00使用后增加愤怒=品质，附加中毒状态，只能在战斗中使用";
    					break;
    				case 205://蛇胆酒
    		//			s+="#e00ff00使用后增加愤怒=品质*1.5，减少防御=品质*1，只能在战斗中使用";
    					break;
    				case 206://烤肉
    		//			s+="#e00ff00使用后增加愤怒=品质/2，只能在漫游中使用";
    					break;
    				}
    				return;
    			}
    			EasyMessage.easymsg.AddMessage("未知物品使用失败");
    		}
    }

    MyGoodsFrame.bSELock=false;
    MyGoodsFrame.iGx,MyGoodsFrame.iGy;//物品偏移位置

    class FormatStringBuffer {
    	Init()
    	{	
    		var i;
    		this.bEx=FormatString.gi().bEx;
    		this.WORDSIZE=FormatString.gi().WORDSIZE;
    		this.iExType=FormatString.gi().iExType;
    		this.iExColor=FormatString.gi().iExColor;
    		this.iulc=0;
    		for(i=0;i<FormatString.MAXUNIT;i++)
    		{
    			if(FormatString.gi().uls[i].iLp==-1)break;
    			this.iulc++;
    		}
    		this.uls=new Array(this.iulc);//
    		for(i=0;i<this.iulc;i++)
    		{
    			this.uls[i]=new UnitList();
    			this.uls[i].copyfrom(FormatString.gi().uls[i]);
    		}
    	}
    	Draw( iOx, iOy)
    	{
    		var i;
    		for(i=0;i<this.iulc;i++)
    		{
    //			GmPlay.sop("lp : "+this.uls[i].iLp);
    			switch(this.uls[i].iType)
    			{
    			case 0:
    //				GmPlay.sop("Draw : "+this.uls[i].sDetail);
    				if(this.bEx)M3DFast$1.gi().DrawText_2(iOx+this.uls[i].iX, iOy+this.uls[i].iY, this.uls[i].sDetail, this.uls[i].iColor, this.WORDSIZE, 101, 1, 1, 0, 0, 0,this.iExType,this.iExColor);
    				else M3DFast$1.gi().DrawTextEx(iOx+this.uls[i].iX, iOy+this.uls[i].iY, this.uls[i].sDetail, this.uls[i].iColor, this.WORDSIZE, 101, 1, 1, 0, 0, 0);
    				break;
    			case 1://表情
    //				GmPlay.sop("face="+this.uls[i].sDetail);
    				GmPlay$1.xani_face.InitAnimaWithName(this.uls[i].sDetail, GmPlay$1.aaa);
    				GmPlay$1.aaa.SetFrame(GmPlay$1.iDelay);
    //				DrawBuffer.gi().DrawAnima_aa(iOy+iH+100, null, iOx+this.uls[i].iX, iOy+this.uls[i].iY+20, aa_face);
    //				aa_face.xani.DrawAnimaEx(iOx+this.uls[i].iX, iOy+this.uls[i].iY+20, aa_face, 101, 1, 1, 0, 0, 0);
    				GmPlay$1.aaa.DrawEx(iOx+this.uls[i].iX, iOy+this.uls[i].iY, 101, 1, 1, 0, -1, -1);
    				break;
    			}
    		}
    	}
    }

    class _MISSIONINDEX
    {/*
    	int sort;//任务优先级
    	public String sName,sDetail,sDest;
    	public int iProcType;//-1无，0寻路到npc，1寻路到(地图,x,y)，2文本提示，10打开可接任务
    	public int iDestNpcId;
    	public int iDestMapId;
    	public String sPrompt;
    	public boolean bFight,bJQ;
    	public int iOx,iOy;
    	public int iOh,iEh;
    	
    	public boolean bPaoHuan;
    	public int iPHTime;
    	
    	public FormatStringBuffer fsb;
    	
    	NormalMission nm;
    	SpecialMission sm;
    	*/
    	constructor()
    	{
    		this.fsb=new FormatStringBuffer();
    		this.sDest="";
    		this.sPrompt="";
    	}
    	Clean()
    	{
    		this.bFight=false;
    		this.iProcType=-1;
    		this.bPaoHuan=false;
    	}
    }
    class MissionLead {
    	//任务快捷引导
    //new_framepc

    	constructor()
    	{
    		var i;
    		this.mi=new Array(MissionLead.MAXMI);//
    		for(i=0;i<MissionLead.MAXMI;i++)
    		{
    			this.mi[i]=new _MISSIONINDEX();
    		}
    		this.iW=250;
    //		this.iH=212;
    		this.iH=300;
    		this.iX=GmConfig$1.SCRW-this.iW-5;
    		this.iY=85;
    		
    		this.btn_oc=new XButtonEx2$1(GmPlay$1.xani_nui3);
    		this.btn_oc.InitButton("关闭任务");
    		
    		this.bOpen=true;
    		
    		this.iMCount=0;
    		this.mi[this.iMCount].sort=0;
    		this.mi[this.iMCount].sName="可接任务";
    		this.mi[this.iMCount].sDest="点击查看";
    		this.mi[this.iMCount].Clean();
    		this.mi[this.iMCount].bJQ=false;
    		this.mi[this.iMCount].nm=null;
    		this.mi[this.iMCount].sm=null;
    		this.mi[this.iMCount].iProcType=10;
    		this.iMCount++;

    		 this.iOffX=0;
    		 this.iOffY=0;

    		 this.bLock=false;
    		 this.iLockPoint=-1;
    		 this.iLockY=-1;
    		 this.bMove=false;
    	

    	}
    	

    	FreshMission()
    	{//把任务整合到这里
    		this.iMCount=0;

    		var i,j;
    		var s;
    		var pde;
    		var pie;
    		var nm;
    		var sm;
    		var si;
    		for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    		{
    			if(MyMission.m.nmlist[i].bUseing)
    			{
    				nm=MyMission.m.nmlist[i];
    				pde=MyMission.de_mission.fdata(nm.iMPoint);
    				//mi[this.iMCount].sort=50;
    				this.mi[this.iMCount].sort=nm.iMid;
    				this.mi[this.iMCount].sName=MyMission.de_mission.strValue(nm.iMPoint, 0, 19);
    				this.mi[this.iMCount].sDetail=MyMission.de_mission.strValue(nm.iMPoint, 0, 23);
    				this.mi[this.iMCount]. Clean();
    				this.mi[this.iMCount].bJQ=true;
    				this.mi[this.iMCount].nm=nm;
    				this.mi[this.iMCount].sm=null;
    //				GmPlay.sop("-----------------------"+this.mi[this.iMCount].sName+"===="+this.mi[this.iMCount].iProcType);
    				for(j=0;j<nm.iItemCount;j++)
    				{
    //					GmPlay.sop("nm.ni[i].iItemId="+nm.ni[i].iItemId);
    					pie=pde.fitem(nm.ni[j].iItemId);
    					if(pie==null)continue;
    	//				GmPlay.sop("type="+pie.iType);
    					switch(pie.iType)
    					{
    					case 10://npc对话ok
    						this.mi[this.iMCount].sDest=pde.strValue(16);
    						this.mi[this.iMCount].iDestNpcId=pde.intValue(5);
    						this.mi[this.iMCount].iProcType=0;
    //					GmPlay.sop("-----------------------"+this.mi[this.iMCount].sName+"===="+this.mi[this.iMCount].iProcType);
    						break;
    					case 14://杀怪，根据怪物id前往地图ok
    						//xxx出现在xxx,xxx地图
    						this.mi[this.iMCount].sPrompt=MissionLead.sPetFrom(pie.intValue(9));//怪物类型
    						this.mi[this.iMCount].sDest=pie.strValue(17);
    						this.mi[this.iMCount].bFight=true;
    						this.mi[this.iMCount].iProcType=2;
    						break;
    					case 15://交物品,判断身上是否有物品，没有提示前往找物品，有了寻路去交8ok
    						this.mi[this.iMCount].sDest=pde.strValue(18);
    						if(MyGoods.bHaveGoods(pde.intValue(8), pde.intValue(7)))
    						{//已有物品，寻路交回
    							this.mi[this.iMCount].iDestNpcId=pde.intValue(33);
    							this.mi[this.iMCount].iProcType=0;
    						}
    						else
    						{//没有物品，提示上哪去弄
    							this.mi[this.iMCount].sPrompt=MissionLead.sGoodsFrom(pde.intValue(8));
    							this.mi[this.iMCount].iProcType=2;
    						}
    						break;
    					case 20://npc战斗ok
    						this.mi[this.iMCount].sDest=pde.strValue(24);
    						this.mi[this.iMCount].iDestNpcId=pde.intValue(15);
    						this.mi[this.iMCount].bFight=true;
    						this.mi[this.iMCount].iProcType=0;
    						break;
    					case 26://捕捉怪物，根据怪物id前往地图ok
    						this.mi[this.iMCount].sPrompt=MissionLead.sPetFrom(pie.intValue(30));
    						this.mi[this.iMCount].sDest=pie.strValue(32);
    						this.mi[this.iMCount].bFight=true;
    						this.mi[this.iMCount].iProcType=2;
    						break;
    					}
    //					GmPlay.sop("-----------------------"+this.mi[this.iMCount].sName+"===="+this.mi[this.iMCount].iProcType);
    				}
    				s=pde.strValue(22);
    				if(s!="-1")
    				{//有内容，必定提示
    					this.mi[this.iMCount].sPrompt=s;
    					this.mi[this.iMCount].iProcType=2;
    				}
    //				for(int zz=0;zz<10;zz++)GmPlay.sop(""+this.mi[this.iMCount].sName+"===="+this.mi[this.iMCount].iProcType);
    				this.iMCount++;
    			}
    			///师门0
    			//押镖10
    			///剧情50
    			if(MyMission.m.smlist[i].bUseing)
    			{
    				sm=MyMission.m.smlist[i];
    				//if(sm.iMPoint==0 || sm.iMPoint==50 || sm.iMPoint==51 || sm.iMPoint==52 || sm.iMPoint==53 || sm.iMPoint==54)this.mi[this.iMCount].sort=0;//师门最优先
    				//else if(sm.iMPoint==10)this.mi[this.iMCount].sort=10;
    				//else this.mi[this.iMCount].sort=100;
    				this.mi[this.iMCount].sort=sm.iMid;
    				this.mi[this.iMCount].sName=sm.sName;
    				if(sm.iMPoint==0 || sm.iMPoint==50 || sm.iMPoint==51 || sm.iMPoint==52 || sm.iMPoint==53 || sm.iMPoint==54)this.mi[this.iMCount].sName+="("+sm.iCount+"/10)";
    				this.mi[this.iMCount].sDetail=sm.sDetail;
    				this.mi[this.iMCount].Clean();
    				this.mi[this.iMCount].bJQ=false;
    				this.mi[this.iMCount].nm=null;
    				this.mi[this.iMCount].sm=sm;
    				
    				for(j=0;j<sm.iItemCount;j++)
    				{
    					si=sm.si[j];
    					if(si.iSType!=9 && si.iProc>=100)continue;
    					if(si.iMType==0)
    					{//任务目标
    						switch(si.iSType)
    						{
    						case 1://找到npc          接触完成------------门派，帮派建造，朱雀，赛跑，跑环ok
    						case 7://找到静态npc，需要对话---------------坐骑
    							this.mi[this.iMCount].sDest=si.sDetail;
    							this.mi[this.iMCount].iDestNpcId=si.iV1;
    							this.mi[this.iMCount].iProcType=0;
    							break;
    						case 5://与静态npc战斗------------厢房，跑环ok
    						case 8://与静态npc战斗------------坐骑的火妖
    							this.mi[this.iMCount].sDest=si.sDetail;
    							this.mi[this.iMCount].iDestNpcId=si.iV1;
    							this.mi[this.iMCount].iProcType=0;
    							this.mi[this.iMCount].bFight=true;
    							break;
    						case 0://找到物品交给静态npc--------押镖ok
    							if(sm.iMPoint!=10)this.mi[this.iMCount].sDest=si.sDetail;
    							GmPlay$1.sop(""+si.iV1);
    							if(MyGoods.bHaveGoods(si.iV1, si.iV2))
    							{//有物品，寻路到npc
    								this.mi[this.iMCount].iDestNpcId=si.iV3;
    								this.mi[this.iMCount].iProcType=0;
    								if(sm.iMPoint==10)
    								{//押镖
    									this.mi[this.iMCount].sPrompt=sm.sDetail+"#e#e(手动押镖不能自动寻路)";
    									this.mi[this.iMCount].iProcType=2;
    									this.mi[this.iMCount].sDest=si.sDetail;
    								}
    							}
    							else
    							{//没有物品，提示在哪里
    								if(sm.iMPoint==10)
    								{//押镖，没有任务物品，不显示
    									continue;
    								}
    								this.mi[this.iMCount].sPrompt=MissionLead.sGoodsFrom(si.iV1);
    								this.mi[this.iMCount].iProcType=2;
    							}
    							break;
    						case 2://与动态npc战斗------强盗任务，师门冒充，厢房，执法大鬼，师徒，门派闯关，直接显示任务详细描述ok
    							this.mi[this.iMCount].bFight=true;
    						case 6://与动态npc交谈------师徒
    							this.mi[this.iMCount].sDest=si.sDetail;
    							this.mi[this.iMCount].sPrompt=sm.sDetail;
    							this.mi[this.iMCount].iProcType=2;
    							break;
    						case 9://杀怪----------------除害ok
    							this.mi[this.iMCount].sPrompt=MissionLead.sPetFrom(si.iV1);
    							if(this.mi[this.iMCount].sPrompt.length<=0)
    							{
    								this.mi[this.iMCount].sPrompt=sm.sDetail;
    								//this.mi[this.iMCount].sPrompt="小地图/世界地图查看野外地图#e在野外地图走动，会遭遇怪物";
    							}
    							this.mi[this.iMCount].sDest=si.sDetail+"("+si.iProc+"/"+si.iV2+")";
    							this.mi[this.iMCount].bFight=true;
    							this.mi[this.iMCount].iProcType=2;
    							if(si.iProc>=si.iV2)
    							{//完成任务，自动寻路前往交任务
    								if(sm.iMPoint==13)
    								{//除害
    									this.mi[this.iMCount].iDestNpcId=20;
    									this.mi[this.iMCount].iProcType=0;
    								}
    							}
    							break;
    						case 3://抓宠物上交---------门派，手艺，坐骑，跑环ok
    							this.mi[this.iMCount].sDest=si.sDetail;
    							if(MyPets$1.bHavePet(si.iV1, si.iV3))
    							{//有宠物，寻路到目标npc
    								this.mi[this.iMCount].iDestNpcId=si.iV2;
    								this.mi[this.iMCount].iProcType=0;
    							}
    							else
    							{//没有宠物，提示上哪抓
    								this.mi[this.iMCount].sPrompt=MissionLead.sPetFrom(si.iV1);
    								this.mi[this.iMCount].iProcType=2;
    							}
    							break;
    						case 4://巡逻---------------厢房ok
    							this.mi[this.iMCount].bFight=true;
    							this.mi[this.iMCount].sDest=si.sDetail;
    							this.mi[this.iMCount].sPrompt=sm.sDetail;
    							this.mi[this.iMCount].iProcType=2;
    							break;
    						case 10://交物品给动态npc---师徒ok
    							this.mi[this.iMCount].sDest=si.sDetail;
    							if(MyGoods.bHaveGoods(si.iV1, si.iV2))
    							{//有物品
    								this.mi[this.iMCount].sPrompt=sm.sDetail;
    								this.mi[this.iMCount].iProcType=2;
    							}
    							else
    							{//没有物品，提示在哪里
    								this.mi[this.iMCount].sPrompt=MissionLead.sGoodsFrom(si.iV1);
    								this.mi[this.iMCount].iProcType=2;
    							}
    							break;
    						case 11://巡逻不战斗---------师徒ok
    						case 14://无目标，服务器判断，福缘
    						case 15:
    						case 16:
    						case 17:
    							this.mi[this.iMCount].sDest=si.sDetail;
    							this.mi[this.iMCount].sPrompt=sm.sDetail;
    							this.mi[this.iMCount].iProcType=2;
    							break;
    						case 12://倒计时-------------跑环
    							this.mi[this.iMCount].bPaoHuan=true;
    							this.mi[this.iMCount].iPHTime=si.iV1;
    							//this.mi[this.iMCount].sDest="传说剩余"+((this.mi[this.iMCount].iPHTime-(GmPlay.iNowMillis-GmMe.iMillis)/1000-GmMe.iSecond)/60)+"分钟";
    							break;
    						case 13://传说---------------跑环
    							this.mi[this.iMCount].sDest=si.sDetail;
    							this.mi[this.iMCount].sPrompt=sm.sDetail;
    							this.mi[this.iMCount].iProcType=2;
    							break;
    						case 18:
    							this.mi[this.iMCount].sDest=si.sDetail+si.iProc+"/10";
    							this.mi[this.iMCount].sPrompt=sm.sDetail;
    							this.mi[this.iMCount].iProcType=2;
    							break;
    						}
    					}
    				}
    				this.iMCount++;
    			}
    		}
    		
    		var tmpmi;
    		for(i=0;i<this.iMCount-1;i++)
    		{
    			for(j=i+1;j<this.iMCount;j++)
    			{
    				if(this.mi[j].sort>this.mi[i].sort)
    				{
    					tmpmi=this.mi[j];
    					this.mi[j]=this.mi[i];
    					this.mi[i]=tmpmi;
    				}
    			}
    		}

    		if(GmMe$1.me.rbs.iLev>=10)
    		{//10级以上出现可接任务选项
    			this.mi[this.iMCount].sort=0;
    			this.mi[this.iMCount].sName="可接任务";
    			this.mi[this.iMCount].sDest="点击查看";
    			this.mi[this.iMCount].Clean();
    			this.mi[this.iMCount].bJQ=false;
    			this.mi[this.iMCount].nm=null;
    			this.mi[this.iMCount].sm=null;
    			this.mi[this.iMCount].iProcType=10;
    			this.iMCount++;
    		}
    		
    		for(i=0;i<this.iMCount;i++)
    		{
    			FormatString.gi().FormatEx("#cfeeede"+this.mi[i].sDest, 230, 22, 0, 0, 26);
    			this.mi[i].fsb.Init();
    			this.mi[i].iEh=FormatString.gi().iH;
    			this.mi[i].iOh=8+24+5+this.mi[i].iEh+8;
    			
    //			for(j=0;j<10;j++)
    			{
    //				GmPlay.sop(""+i+":"+this.mi[i].sName+"==="+this.mi[i].sort);
    			}
    		}
    	}


    	

    	Draw()
    	{//h根据文字长度来
    		
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return;
    		if(this.iMCount<=0)return;
    		var i,j;
    //		String ts;
    		this.iOffH=0;
    		if(this.iX>GmConfig$1.SCRW)this.iX=GmConfig$1.SCRW;
    		this.btn_oc.Move(this.iX-50, this.iY, 50, 70);
    		i=this.iW/4;
    		if(FriendList$1.gi().bShow && !FriendList$1.gi().bCloseing)
    		{
    			if(this.iX<GmConfig$1.SCRW-5)this.iX+=i;
    			else return;
    		}
    		else if(!this.bOpen)
    		{
    			if(this.iX<GmConfig$1.SCRW)
    			{
    				this.iX+=i;
    				this.btn_oc.Move(this.iX-50, this.iY, 50, 70);
    				this.btn_oc.Draw();
    			}
    			else
    			{
    				this.btn_oc.Draw();
    				return;
    			}
    		}
    		else
    		{
    			if(this.iX>GmConfig$1.SCRW-this.iW-5+i)this.iX-=i;
    			else this.iX=GmConfig$1.SCRW-this.iW-5;

    			this.btn_oc.Move(this.iX-50, this.iY, 50, 70);
    			this.btn_oc.Draw();
    		}

    		//物品数量，宠物数量变化，可能影响任务进度，需要fresh
    		i=MyGoods.iHaveGoodsCount();
    		j=MyPets$1.bHavePetCount();
    		if(MissionLead.iOldGoodsCount!=i || MissionLead.iOldPetCount!=j)
    		{
    			MissionLead.iOldGoodsCount=i;
    			MissionLead.iOldPetCount=j;
    			this.FreshMission();
    		}
    //		this.FreshMission();
    		M3DFast$1.gi().SetViewClip(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH);
    		for(i=0;i<this.iMCount;i++)
    		{
    			this.mi[i].iOx=this.iX;
    			this.mi[i].iOy=this.iY+this.iOffH+this.iOffY;
    			
    //			if(this.mi[i].bPaoHuan)
    //			{
    //				ts="传说剩余"+((this.mi[this.iMCount].iPHTime-(GmPlay.iNowMillis-GmMe.iMillis)/1000-GmMe.iSecond)/60)+"分钟";
    //				if(ts!=this.mi[this.iMCount].sDest)
    //				{
    //					this.mi[this.iMCount].sDest=ts;
    //					FormatString.gi().FormatEx("#cfeeede"+this.mi[i].sDest, 230, 22, 0, 0, 26);
    //					this.mi[i].fsb.Init();
    //					this.mi[i].iEh=FormatString.gi().iH;
    //					this.mi[i].iOh=10+24+10+this.mi[i].iEh+10;
    //				}
    //			}
    			
    			if(this.bLock && this.iLockPoint==i)DrawMode$1.new_framepc(this.mi[i].iOx,this.mi[i].iOy,this.iW,this.mi[i].iOh);
    			else M3DFast$1.gi().FillRect_2D(this.mi[i].iOx,this.mi[i].iOy, this.mi[i].iOx+this.iW,this.mi[i].iOy+this.mi[i].iOh, 0x80000000);
    			M3DFast$1.gi().DrawTextEx(this.mi[i].iOx+8,this.mi[i].iOy+8, this.mi[i].sName, this.mi[i].bJQ?0xffff00ff:0xffffff00, 24, 101, 1, 1, 0, 0, 0);
    			this.mi[i].fsb.Draw(this.mi[i].iOx+8,this.mi[i].iOy+8+24+5);
    			if(this.mi[i].bFight)
    			{
    				GmPlay$1.xani_nui3.DrawAnima(this.mi[i].iOx+225, this.mi[i].iOy+25, "战斗标签", 0);
    			}
    			
    			this.iOffH+=this.mi[i].iOh+2;
    		}
    		M3DFast$1.gi().NoClip();
    		if(!this.bMove)
    		{//超限的，恢复
    			j=this.iH-this.iOffH;
    			if(j>0)j=0;
    			if(this.iOffY<j)
    			{
    				if(this.iOffY<j-50)this.iOffY+=50;
    				else this.iOffY=j;
    			}
    			if(this.iOffY>0)
    			{
    				if(this.iOffY>50)this.iOffY-=50;
    				else this.iOffY=0;
    			}
    		}
    	}

    	ProcTouch( msg, x, y)
    	{
    		if(this.iMCount<=0)return false;
    		if(FriendList$1.gi().bShow && !FriendList$1.gi().bCloseing)
    		{
    			return false;
    		}
    		else if(!this.bOpen)
    		{
    			if(this.btn_oc.ProcTouch(msg, x, y))
    			{
    				if(this.btn_oc.bCheck())
    				{
    					this.bOpen=true;
    					this.btn_oc.InitButton("关闭任务");
    				}
    				return true;
    			}
    			return false;
    		}
    		if(this.btn_oc.ProcTouch(msg, x, y))
    		{
    			if(this.btn_oc.bCheck())
    			{
    				this.bOpen=false;
    				this.btn_oc.InitButton("打开任务");
    			}
    			return true;
    		}
    		var i;
    		if(this.bLock)
    		{
    			if(msg==2)
    			{
    				i=y-this.iLockY;
    				if(!this.bMove)
    				{
    					if(i>20 || i<-20)this.bMove=true;
    				}
    				if(this.bMove)
    				{//移动中
    					this.iOffY+=i;
    					this.iLockY=y;
    					if(this.iOffY>this.iH-5)this.iOffY=this.iH-5;
    					if(this.iOffY<5-this.iOffH)this.iOffY=5-this.iOffH;
    				}
    			}
    			if(msg==3)
    			{
    				this.bLock=false;
    				if(this.bMove)
    				{//拉动放开
    					this.bMove=false;
    				}
    				else
    				{//点了一个任务，提示或寻路
    					if(this.mi[this.iLockPoint].iProcType==10)
    					{//打开可接任务
    						MissionFrame.Open(1);
    						return true;
    					}
    					if(this.mi[this.iLockPoint].nm!=null)
    					{
    						if(this.mi[this.iLockPoint].nm.iMPoint==56 || this.mi[this.iLockPoint].nm.iMPoint==59 || this.mi[this.iLockPoint].nm.iMPoint==139 || this.mi[this.iLockPoint].nm.iMPoint==140 || this.mi[this.iLockPoint].nm.iMPoint==141 || this.mi[this.iLockPoint].nm.iMPoint==144)
    						{//师门抓猪
    							MyAI.gi().AutoNormalMission(this.mi[this.iLockPoint].nm);
    							return true;
    						}
    					}
    					if(this.mi[this.iLockPoint].sm!=null)
    					{
    						if(this.mi[this.iLockPoint].sm.iMPoint==50 || this.mi[this.iLockPoint].sm.iMPoint==51 || this.mi[this.iLockPoint].sm.iMPoint==52 || this.mi[this.iLockPoint].sm.iMPoint==53 || this.mi[this.iLockPoint].sm.iMPoint==54)
    						{//新自动师门
    							MyAI.gi().AutoSpecialMission(this.mi[this.iLockPoint].sm);
    							return true;
    						}
    						if(this.mi[this.iLockPoint].sm.iMPoint==10)
    						{//押镖
    							if(parseInt(GmMe$1.me.iFlag[1]/100000000)==1)
    							{//自动押镖，可执行自动寻路
    								MyAI.gi().AutoSpecialMission(this.mi[this.iLockPoint].sm);
    								return true;
    							}
    						}
    					}
    					//for(i=0;i<10;i++)GmPlay.sop("cccccccccccccc"+this.mi[this.iLockPoint].iProcType);
    					if(this.mi[this.iLockPoint].iProcType==0)
    					{//寻路npc
    //						MapManager.gi().vbk.GoToNpc_byid(this.mi[this.iLockPoint].iDestNpcId);
    						MyAI.gi().FindNpc(this.mi[this.iLockPoint].iDestNpcId,this.mi[this.iLockPoint].nm!=null,this.mi[this.iLockPoint].nm!=null);//
    					}
    					if(this.mi[this.iLockPoint].iProcType==2)
    					{//文字提示
    						if(this.mi[this.iLockPoint].bPaoHuan)
    						{
    							FrameMessage.fm.Open(this.mi[this.iLockPoint].sPrompt+"#e#e剩余时间："+Math.floor((this.mi[this.iLockPoint].iPHTime-(GmPlay$1.iNowMillis-GmMe$1.iMillis)/1000-GmMe$1.iSecond)/60)+"分钟");
    						}
    						else FrameMessage.fm.Open(this.mi[this.iLockPoint].sPrompt);
    					}
    				}
    				
    			}
    			return true;
    		}
    		if(msg==1)
    		{//按下，锁定
    			if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    			{
    				for(i=0;i<this.iMCount;i++)
    				{
    					if(this.mi[i].iOy<=y && y<=this.mi[i].iOy+this.mi[i].iOh+2)
    					{
    						this.bLock=true;
    						this.iLockPoint=i;
    						this.iLockY=y;
    						return true;
    					}
    				}
    			}
    		}
    		return false;
    	}
    	special_doyb()
    	{
    		var i;
    		for(i=0;i<this.iMCount;i++)
    		{
    			if(this.mi[i].sm!=null)
    			{
    				if(this.mi[i].sm.iMPoint==10)
    				{//押镖
    					if(parseInt(GmMe$1.me.iFlag[1]/100000000)==1)
    					{//自动押镖，可执行自动寻路
    						MyAI.gi().AutoSpecialMission(this.mi[i].sm);
    					}
    				}
    			}
    		}
    	}
    }
    MissionLead.MAXMI=20;
    	
    MissionLead.ml=null;
    MissionLead.gi=function()
    {
    	if(MissionLead.ml==null)MissionLead.ml=new MissionLead();
    	return MissionLead.ml;
    };
    MissionLead.sGoodsFrom=function( gtype)
    	{
    		var i;
    		var ed=GmPlay$1.de_goods.fdata(gtype);
    		if(ed==null)return "";
    		var sResult;
    		sResult=ed.strValue(4)+"#e#cffffff";
    		i=ed.intValue(9);
    		if(i>=0)
    		{//装备
    			if(i==0)sResult+="0级装备可在【乡水镇】装备商人处购买";
    			if(i==10)sResult+="10级装备可在【西阳城】装备商人处购买";
    			if(i==20)sResult+="20级装备可在【郢城】装备商人处购买#e#e通过西阳城轿夫前往";
    			if(i==30)sResult+="30级装备可在【临淄】装备商人处购买#e#e通过西阳城轿夫前往";
    			if(i==40)sResult+="40级装备可在【咸阳】装备商人处购买#e#e通过西阳城轿夫前往";
    			if(i>=50)sResult+=i+"级装备，可使用图纸和材料，在【乡水镇】铁匠处打造";
    			return sResult;
    		}
    		i=ed.intValue(27);
    		if(i>0)
    		{
    			if(i==1 || i==2)
    			{
    				switch(gtype)
    				{
    				case 65:sResult+="竹叶可在【乡水镇】药品商购买";break;
    				case 66:sResult+="香草可在【乡水镇】或【西阳城】药品商购买";break;
    				case 67:sResult+="薄荷可在【西阳城】或【郢城】药品商购买";break;
    				case 68:sResult+="夏枯草可在【乡水镇】药品商购买";break;
    				case 69:sResult+="石蜜可在【乡水镇】或【西阳城】药品商购买";break;
    				case 70:sResult+="止血草可在【西阳城】药品商购买";break;
    				case 71:sResult+="甘草可在【乡水镇】或【郢城】药品商购买";break;
    				case 72:sResult+="勺药可在【乡水镇】或【临淄】药品商购买";break;
    				case 73:sResult+="蜂蜜可在【西阳城】或【临淄】药品商购买";break;
    				case 74:sResult+="松脂可在【西阳城】药品商购买";break;
    				
    				case 75:sResult+="云母可在【郢城】药品商购买#e#e通过西阳城轿夫前往";break;
    				case 76:sResult+="麝香可在【临淄】药品商购买#e#e通过西阳城轿夫前往";break;
    				case 77:sResult+="赤芝可在【咸阳】药品商购买#e#e通过西阳城轿夫前往";break;
    				case 78:sResult+="人参可在【郢城】药品商购买#e#e通过西阳城轿夫前往";break;
    				case 79:sResult+="鹿茸可在【临淄】药品商购买#e#e通过西阳城轿夫前往";break;
    				case 80:sResult+="熊胆可在【临淄】或【咸阳】药品商购买#e#e通过西阳城轿夫前往";break;
    				case 81:sResult+="雄黄可在【郢城】或【咸阳】药品商购买#e#e通过西阳城轿夫前往";break;
    				case 82:sResult+="当归可在【临淄】或【咸阳】药品商购买#e#e通过西阳城轿夫前往";break;
    				case 83:sResult+="白石英可在【郢城】或【咸阳】药品商购买#e#e通过西阳城轿夫前往";break;
    				case 84:sResult+="紫石英可在【咸阳】药品商购买#e#e通过西阳城轿夫前往";break;
    				}
    			}
    			if(i==3)sResult+="三级草药通过挖宝或副本获得，部分三级草药可在商城购买";
    			return sResult;
    		}
    		i=ed.intValue(33);
    		if(i>0)
    		{
    			if(i==1)sResult+="一级丹药，使用丹方进行炼丹可获得，每完成一轮帮派朱雀任务，可获得一张丹方。在帮派中学习炼丹术，可提高炼出丹药的品质";
    			if(i==2)sResult+="二级丹药，可在商城购买";
    			return sResult;
    		}
    		i=ed.intValue(31);
    		if(i>0)
    		{
    			if(i==1)sResult+="一级材料，完成一轮护法任务有几率获得，护法任务在【咸阳】商鞅处领取，30级以下地图战斗也有几率掉落一级材料。#e任务获得材料种类随机，建议玩家向其他玩家购买所需材料";
    			if(i==2)sResult+="二级材料，30级以上完成一轮护法任务有几率获得，护法任务在【咸阳】商鞅处领取，30级以上地图战斗也有几率掉落二级材料。#e任务获得材料种类随机，建议玩家向其他玩家购买所需材料";
    			if(i==3)sResult+="三级材料，挖宝有几率获得，或在【咸阳】副本官处使用副本积分兑换#e建议玩家通过交易获得所需材料";
    			return sResult;
    		}
    		i=ed.intValue(34);
    		if(i>=0)
    		{//烹饪
    			sResult+="在帮派学院学习烹饪技能，即可制作烹饪，技能等级越高，制出烹饪品质越高，也可直接向其他玩家购买";
    			return sResult;
    		}
    	
    		if(gtype==154 || gtype==155 || gtype==156)
    		{//宠物技能书
    			sResult+="挖宝有几率获得#e战胜嚣张有几率获得#e打开宠物技能包可获得#e建议玩家通过交易购买所需特定宠物技能书";
    			return sResult;
    		}
    		if(gtype==157 || gtype==158 || gtype==159)
    		{//宠物技能包
    			sResult+="可在商城购买获得";
    			return sResult;
    		}
    		if(gtype==160 || gtype==161)
    		{//仙灵果
    			sResult+="挖宝有几率获得#e活动，副本掉落#e向其他玩家购买#e商城购买";
    			return sResult;
    		}
    		if(gtype==226 || gtype==227 || gtype==227)
    		{//仙露仙桃玉灵果
    			sResult+="周二门派闯关活动中掉落#e或向其他玩家购买";
    			return sResult;
    		}
    		if(gtype==116 || gtype==117 || gtype==118 || gtype==119 || gtype==120 || gtype==121 || gtype==122 || gtype==123 || gtype==207 || gtype==208 || gtype==236 || gtype==106 || gtype==107 || gtype==108 || gtype==229)
    		{//双倍经验卡等道具
    			sResult+="日常活动中获得#e向其他玩家购买#e商城购买";
    			return sResult;
    		}
    		if(gtype==209)
    		{//修炼果
    			sResult+="在【临淄】慎到处拜师或收徒，领取师徒任务，完成师徒任务可获得修炼积分，用于兑换修炼果。也可向其他玩家购买获得";
    			return sResult;
    		}
    		if(gtype==209 || gtype==211 || gtype==212)
    		{//锦盒，福袋，烟花
    			sResult+="活动中获得，也可向其他玩家购买获得";
    			return sResult;
    		}
    		if(gtype==278 || gtype==279)
    		{//国庆礼花
    			sResult+="国庆活动中获得";
    			return sResult;
    		}
    		if(gtype>=109 && gtype<=115)
    		{
    			sResult+="野外地图战斗有几率掉落，挖宝有几率获得，或向其他玩家购买";
    			return sResult;
    		}
    		if(gtype>=213 && gtype<=224)
    		{
    			sResult+="新年活动中获得";
    			return sResult;
    		}
    		if(gtype>=101 && gtype<=105)
    		{
    			sResult+="打败妖怪叔叔掉落#e副本，活动中掉落#e或向其他玩家购买";
    			return sResult;
    		}
    		if(gtype==96)
    		{
    			sResult+="完成除害任务获得#e副本，活动中掉落#e或向其他玩家购买";
    			return sResult;
    		}
    		if(gtype==97)
    		{
    			sResult+="【郢城】栾千盛处完成一轮强盗任务可获得#e挖宝有几率获得#e高级图纸可跑环获得，或用副本积分兑换#e也可向其他玩家购买";
    			return sResult;
    		}
    		if(gtype==98 || gtype==99 || gtype==100)
    		{
    			sResult+="在帮派学院学习相应技能即可制作#e也可向其他玩家购买";
    			return sResult;
    		}
    		if(gtype==162 || gtype==225 || gtype==237)
    		{
    			sResult+="系统赠送给新玩家的礼物，没有其他获得途径";
    			return sResult;
    		}
    		if(gtype==163 || gtype==164)
    		{
    			sResult+="押镖任务物品，任务中自动获得";
    			return sResult;
    		}
    		if(gtype==192 || gtype==193 || gtype==194)
    		{
    			sResult+="帮派任务物品，领取任务自动获得";
    			return sResult;
    		}
    		if(gtype==195)
    		{
    			sResult+="每完成一轮帮派朱雀任务，可获得一张丹方。#e也可向其他玩家购买";
    			return sResult;
    		}
    		if(gtype==196)
    		{
    			sResult+="完成押镖任务有几率获得#e也可向其他玩家购买";
    			return sResult;
    		}
    		if(gtype==230)
    		{
    			sResult+="集齐一套七国旗，可在【西阳城】乞丐处兑换高级藏宝图#e也可向其他玩家购买";
    			return sResult;
    		}
    		if(gtype>=231 && gtype<=235)
    		{
    			sResult+="对怪物贝贝使用偷窃技能可获得，偷窃技能可在【西阳山道】狐狸精处学习#e周二门派闯关活动中掉落#e也可向其他玩家购买";
    			return sResult;
    		}
    		if(gtype==238 || gtype==239 || gtype==240 || gtype==241 || gtype==242 || gtype==243)
    		{//经验，钱，绑铜
    			sResult+="展示物品";
    			return sResult;
    		}
    		if(gtype==312)
    		{//彩果
    			sResult+="周三西阳保卫战中有几率掉落#e【乡水镇】新手指导员处侠义值兑换#e商城购买#e向其他玩家购买";
    			return sResult;
    		}
    		if(gtype==255 || gtype==256 || gtype==257 || gtype==258 || gtype==259)
    		{
    			sResult+="挖宝有几率获得#e打开果实有几率获得";
    			return sResult;
    		}
    		if(gtype==260 || gtype==261 || gtype==262)
    		{//锄头，地契，房契
    			sResult+="商城购买";
    			return sResult;
    		}
    		if(gtype==263 || gtype==264 || gtype==265)
    		{//空水壶，满水壶，肥料
    			sResult+="照料土地时获得的任务物品";
    			return sResult;
    		}
    		if(gtype>=266 && gtype<=270)
    		{//灵石
    			sResult+="挖宝获得#e也可向其他玩家购买";
    			return sResult;
    		}
    		if(gtype==271 || gtype==272 || gtype==273 || gtype==274 || gtype==275)
    		{//果实
    			sResult+="土地上植物成熟后，采摘得到#e也可向其他玩家购买";
    			return sResult;
    		}
    		if(gtype==276 || gtype==277)
    		{//经验丹
    			sResult+="打开果实有几率获得#e也可向其他玩家购买";
    			return sResult;
    		}
    		if(gtype==280 || gtype==281 || gtype==282 || gtype==283 || gtype==284)
    		{//兽魂
    			sResult+="完成战队秘境可获得#e也可向其他玩家购买";
    			return sResult;
    		}
    		if(gtype==280 || gtype==281 || gtype==282 || gtype==283 || gtype==284)
    		{//自然之力
    			sResult+="打开果实有几率获得#e也可向其他玩家购买";
    			return sResult;
    		}
    		return sResult;
    	};
    	MissionLead.sPetFrom=function( ptype)
    	{
    		var i,j,k=0;
    		var ed=GmPlay$1.de_pet.fdata(ptype);
    		if(ed==null)return "";
    		var sResult;
    		sResult=ed.strValue(1)+"出现在#c00ff00";
    		for(i=0;i<GmPlay$1.de_map.iDataCount;i++)
    		{
    			for(j=0;j<GmPlay$1.de_map.datas[i].iItemCount;j++)
    			{
    				if(GmPlay$1.de_map.datas[i].items[j].iType==4)
    				{
    					if(GmPlay$1.de_map.datas[i].items[j].intValue(6)==ptype)
    					{
    						if(k>0)sResult+="，";
    						k++;
    						sResult+=GmPlay$1.de_map.datas[i].strValue(1);
    					}
    				}
    			}
    			//E_DATA
    		}
    		sResult+="#o#e#e"+"小地图/#c00ff00世界地图#o查看如何前往#e在野外地图#c00ff00走动#o，会遭遇怪物#e注！将快捷中的#c00ff00遇怪开关#o打开";
    		return sResult;
    	};
    MissionLead.iOldGoodsCount=0;
    MissionLead.iOldPetCount=0;

    class BeginersGuide {
    //新手引导
    	constructor()
    	{
    		var i;
    		this.iGuideing=-1;
    		this.aa_fx=new Array(8);//
    		for(i=0;i<8;i++)this.aa_fx[i]=null;
    		this.iStartDelay=1;
    		this.iTime=0;
    	}
    	DrawTextFrame( x, y, w)
    	{
    		GmPlay$1.xani_nui3.DrawAnima(x, y, "指示内容框",0);
    		if(w>120)GmPlay$1.xani_nui3.DrawAnimaEx(x+60, y, "指示内容框", 1, 101, 1.0*(w-120)/60, 1, 0, 0, 0);
    		GmPlay$1.xani_nui3.DrawAnima(x+w-60, y, "指示内容框",2);
    	}
    	_DrawText( x, y, text, tw)
    	{
    		this.DrawTextFrame(x-(tw+30)/2,y-33,tw+30);
    //		M3DFast.gi().DrawText_2(dx, dy, s, c, size, ab, sw, sh, ra, ratx, raty, type, c2)
    		M3DFast$1.gi().DrawText_2(x, y, text, 0xffffff00, 36, 101, 1, 1, 0, -2, -2,3,0xff000000);
    	}
    	DrawGuide( x, y, w, h, msg, fx)
    	{
    		var c=this.iGuideDelay<<24;
    		GmPlay$1.xani_nui3.DrawAnima(x, y, "指示框1",GmPlay$1.iDelay/2);
    		GmPlay$1.xani_nui3.DrawAnima(x+w, y, "指示框2",GmPlay$1.iDelay/2);
    		GmPlay$1.xani_nui3.DrawAnima(x+w, y+h, "指示框3",GmPlay$1.iDelay/2);
    		GmPlay$1.xani_nui3.DrawAnima(x, y+h, "指示框4",GmPlay$1.iDelay/2);
    		
    		if(fx<0)return;
    //		M3DFast.gi().FillRect_2D(0, 0, x, GmConfig.SCRH, c);
    //		M3DFast.gi().FillRect_2D(x+w, 0, GmConfig.SCRW, GmConfig.SCRH, c);
    //		M3DFast.gi().FillRect_2D(x, 0, x+w, y, c);
    //		M3DFast.gi().FillRect_2D(x, y+h, x+w, GmConfig.SCRH, c);
    		//fx=0上，1左上，2左，4下，6右
    		var tw=M3DFast$1.gi().GetTextWidth(msg, 36);
    //		M3DFast.gi().DrawTextEx(x+w/2, dy, s, c, size, ab, sw, sh, ra, ratx, raty)
    		
    		c=0xffffff00;
    		var mx=0,my=0;
    		switch(fx)
    		{
    		case 0://上
    			mx=x+w/2;
    			my=y+h;
    			GmPlay$1.xani_nui3.DrawAnimaEx(mx, my, "指示箭头", GmPlay$1.iDelay/2, 101, 1, 1, 270, mx, my);
    			this._DrawText(mx,my+60+66/2,msg,tw);
    //			this.DrawTextFrame(mx,my,tw+);
    //			M3DFast.gi().DrawTextEx(mx, my+38, msg, c, 30, 101, 1, 1, 0, -2, 0);
    			break;
    		case 1://左上
    			mx=x+w;
    			my=y+h;
    			GmPlay$1.xani_nui3.DrawAnimaEx(mx, my, "指示箭头", GmPlay$1.iDelay/2, 101, 1, 1, 270-45, mx, my);
    			this._DrawText(mx+42+(tw+30)/2,my+42+66/2,msg,tw);
    //			M3DFast.gi().DrawTextEx(mx+30, my+32/2, msg, c, 30, 101, 1, 1, 0, 0, -2);
    			break;
    		case 2:
    			mx=x+w;
    			my=y+h/2;
    			GmPlay$1.xani_nui3.DrawAnimaEx(mx, my, "指示箭头",GmPlay$1.iDelay/2, 101, 1, 1, 270-90, mx, my);
    			this._DrawText(mx+60+(tw+30)/2,my,msg,tw);
    //			M3DFast.gi().DrawTextEx(mx+30, my, msg, c, 30, 101, 1, 1, 0, 0, -2);
    			break;
    		case 3:
    			mx=x+w;
    			my=y;
    			GmPlay$1.xani_nui3.DrawAnimaEx(mx, my, "指示箭头", GmPlay$1.iDelay/2, 101, 1, 1, 180-45, mx, my);
    			this._DrawText(mx+42+(tw+30)/2,my-42-66/2,msg,tw);
    //			M3DFast.gi().DrawTextEx(mx+30, my-32/2, msg, c, 30, 101, 1, 1, 0, 0, -2);
    			break;
    		case 4:
    			mx=x+w/2;
    			my=y;
    			GmPlay$1.xani_nui3.DrawAnimaEx(mx, my, "指示箭头", GmPlay$1.iDelay/2, 101, 1, 1, 180-90, mx, my);
    			this._DrawText(mx,my-60-66/2,msg,tw);
    //			M3DFast.gi().DrawTextEx(mx, my-38, msg, c, 30, 101, 1, 1, 0, -2, -3);
    			break;
    		case 5:
    			mx=x;
    			my=y;
    			GmPlay$1.xani_nui3.DrawAnimaEx(mx, my, "指示箭头", GmPlay$1.iDelay/2, 101, 1, 1, 90-45, mx, my);
    			this._DrawText(mx-42-(tw+30)/2,my-42-66/2,msg,tw);
    //			M3DFast.gi().DrawTextEx(mx-30, my-32/2, msg, c, 30, 101, 1, 1, 0, -3, -2);
    			break;
    		case 6:
    			mx=x;
    			my=y+h/2;
    			GmPlay$1.xani_nui3.DrawAnimaEx(mx, my, "指示箭头", GmPlay$1.iDelay/2, 101, 1, 1, 0, mx, my);
    			this._DrawText(mx-60-(tw+30)/2,my,msg,tw);
    //			M3DFast.gi().DrawTextEx(mx-30, my, msg, c, 30, 101, 1, 1, 0, -3, -2);
    			break;
    		case 7:
    			mx=x;
    			my=y+h;
    			GmPlay$1.xani_nui3.DrawAnimaEx(mx, my, "指示箭头", 0, 101, 1, 1, 270+45, mx, my);
    			this._DrawText(mx-42-(tw+30)/2,my+42+66/2,msg,tw);
    //			M3DFast.gi().DrawTextEx(mx-30, my+32/2, msg, c, 30, 101, 1, 1, 0, -3, -2);
    			break;
    		}
    		
    //		this.aa_fx[fx].Draw(mx, my);
    //		this.aa_fx[fx].NextFrame();
    	}
    	Draw()
    	{
    //		GmPlay.sop(""+this.bCheckGuide(0));
    //		if(BeginersGuide.iEventGuide==0)
    		var i;

    		if(this.iGuideing==-1)return;
    		else
    		{
    //			GmPlay.sop("="+this.iGuideStat+"="+this.iGuideDelay+"="+this.iDelay+"="+this.iGuideing);
    			if(FrameMessage.fm.bShow)FrameMessage.fm.bShow=false;
    			for(i=0;i<8;i++)
    			{
    				if(this.aa_fx[i]==null)this.aa_fx[i]=GmPlay$1.xani_ui.InitAnimaWithName("引导指向_"+i, null);
    			}
    			this.DrawGuide(this.iX,this.iY,this.iW,this.iH,this.sMessage,this.iFx);
    			switch(this.iGuideStat)
    			{
    			case 0://进入过程
    				this.iGuideDelay+=0x10;
    				if(this.iGuideDelay>=0x80)
    				{
    					this.iGuideStat=1;
    					this.iDelay=0;
    				}
    				break;
    			case 1://等待看清
    				this.iDelay++;
    				if(this.iDelay>30)
    				{//大约1.5秒
    					this.iGuideStat=2;
    				}
    				break;
    			case 3://离开过程
    				this.iGuideDelay-=0x10;
    				if(this.iGuideDelay<=0)this.iGuideing=-1;
    				break;
    			}
    		}
    	}
    	 bCheckGuideExt( i)
    	{//100以上
    		if((XRecordFast.iGuideFlags[parseInt(i/10)]&(1<<(i%10)))==0)
    		{
    			XRecordFast.iGuideFlags[parseInt(i/10)]|=(1<<(i%10));
    			return true;
    		}
    		return false;
    	}
    	 bCheckGuide( i)
    	{//检测引导是否已经完成过
    //		if(i>=33 && i<=39)return false;
    //		if(i==76)return false;
    		if((XRecordFast.iGuideFlags[parseInt(i/10)]&(1<<(i%10)))==0)return false;//还未指导过
    		return true;//已经指导过;
    	}
    	SetGuideExt( x, y, w, h, fx, msg)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    		this.iFx=fx;
    		if(this.iFx>=0)this.sMessage=msg;
    		this.iGuideing=9999;
    		this.iGuideStat=0;
    		this.iGuideDelay=0;
    		this.bForce=false;
    	}
    	SetGuide( gd)
    	{
    		if(this.bCheckGuide(gd))return false;//已经指导过
    		this.iGuideing=gd;
    		XRecordFast.iGuideFlags[parseInt(gd/10)]|=1<<(gd%10);
    		GmPlay$1.x_record.SaveTo(XDefine$1.RECORDFILENAME);
    		GmPlay$1.sop("打开gd="+gd);
    		var obj=XStat$1.gi().LastStat(0);
    		BeginersGuide.iEventGuide=0;
    		this.bForce=true;
    		var i,j;
    		switch(gd)
    		{
    		case 1:
    			this.iX=obj.btn_prompt.iX;this.iY=obj.btn_prompt.iY;
    			this.iW=obj.btn_prompt.iW;this.iH=obj.btn_prompt.iH;
    			this.sMessage="点击打开任务详细提示";
    			this.iFx=4;
    			break;
    		case 2:
    			this.iX=0;this.iY=0;
    			this.iW=118;this.iH=83;
    			this.sMessage="点击打开小地图";
    			this.iFx=1;
    			break;
    		case 3:
    			this.iX=SmallMap.x_x;
    			this.iY=SmallMap.x_y;
    			this.iW=SmallMap.x_w;
    			this.iH=SmallMap.x_h;
    			this.sMessage="点击自动前往";
    			this.iFx=6;
    			break;
    		case 4://提示右测点击任务完成
    			this.iX=MissionLead.gi().iX;
    			this.iY=MissionLead.gi().iY;
    			this.iW=MissionLead.gi().iW;
    			this.iH=80;
    			this.sMessage="点击前往完成任务";
    			this.iFx=7;
    			break;
    		case 5://
    		case 6:
    			this.iX=GmConfig$1.SCRW-255;
    			this.iY=MissionLead.gi().iY;
    			this.iW=MissionLead.gi().iW;
    			this.iH=80;
    			this.sMessage="点击继续任务";
    			this.iFx=7;
    			break;
    		case 10:
    			this.iX=GmConfig$1.SCRW-83;this.iY=0;
    			this.iW=83;this.iH=83;
    			this.sMessage="点击头像打开属性页面";
    			this.iFx=7;
    			break;
    		case 51:
    		case 52:
    		case 53:
    		case 54:
    		case 55:
    		case 56:
    		case 57:
    		case 58:
    		case 59:
    		case 60:
    			this.iX=GmConfig$1.SCRW-83;this.iY=0;
    			this.iW=83;this.iH=83;
    			this.sMessage="经验足够，点击头像/升级按钮";
    			this.iFx=7;
    			break;
    		case 50:
    			ExtHelp.Initex("经验已足够升入下一级，点击右上角人物头像打开属性栏，点击#cff0000升级按钮#o升级", 0, 0, "", 0, 0, "", 2, 0, "确定");
    			this.iGuideing=-1;
    			break;
    		case 11:
    			this.iX=obj.btn_upgrade.iX;
    			this.iY=obj.btn_upgrade.iY;
    			this.iW=obj.btn_upgrade.iW;
    			this.iH=obj.btn_upgrade.iH;
    			this.sMessage="你的经验以足够升级，点击升级按钮";
    			this.iFx=6;
    			break;
    		case 12:
    			this.iX=obj.btn_addpoint.iX;
    			this.iY=obj.btn_addpoint.iY;
    			this.iW=obj.btn_addpoint.iW;
    			this.iH=obj.btn_addpoint.iH;
    			this.sMessage="每次升级有5点属性可自由分配";
    			this.iFx=6;
    			break;
    		case 13:
    			this.iX=obj.btn_add[2].iX;
    			this.iY=obj.btn_add[2].iY;
    			this.iW=obj.btn_add[2].iW;
    			this.iH=obj.btn_add[2].iH;
    			this.sMessage="新玩家建议加力量，以便前期杀怪";
    			this.iFx=0;
    			break;
    		case 14:
    			this.iX=FriendList$1.gi().btn_chat1.iX;
    			this.iY=FriendList$1.gi().btn_chat1.iY;
    			this.iW=FriendList$1.gi().btn_chat1.iW;
    			this.iH=FriendList$1.gi().btn_chat1.iH;
    			this.sMessage="收到新的消息，点击查看";
    			this.iFx=6;
    			break;
    		case 20:
    			this.iX=FastButton.gi().btn_bag.iX;
    			this.iY=FastButton.gi().btn_bag.iY;
    			this.iW=80;this.iH=80;
    			this.sMessage="点击打开背包";
    			this.iFx=5;
    			break;
    		case 21:
    			//找到背包中0级武器
    			for(j=0;j<20;j++)
    			{
    				if(MyGoods.gi().goods[2][j].iGid>0)					
    				{
    					if(GmPlay$1.de_goods.intValue(MyGoods.gi().goods[2][j].iTid, 0, 16)==2 &&//武器
    							GmPlay$1.de_goods.intValue(MyGoods.gi().goods[2][j].iTid, 0, 19)==GmMe$1.me.iRace &&//种族
    							GmPlay$1.de_goods.intValue(MyGoods.gi().goods[2][j].iTid, 0, 9)==0)
    					{
    						this.iX=MyGoodsFrame.iGx+5+(j%5)*85;
    						this.iY=MyGoodsFrame.iGy+5+(j/5)*85;
    						this.iW=80;this.iH=80;
    						this.sMessage="双击装备穿戴";
    						this.iFx=7;
    						break;
    					}
    				}
    			}
    			if(j>=20)this.iGuideing=-1;
    /*			this.iX=MyGoods.iX+395;
    			this.iY=MyGoods.iY+155;
    			this.iW=60;this.iH=60;
    			this.sMessage="单击查看，双击使用";
    			this.iFx=0;
    			ExtHelp.Initex("单击物品查看属性，#cff0000双击使用物品#o(快速点击物品两次)，双击装备可直接穿戴", 0, 0, "", 0, 0, "", 2, 0, "确定");
    			this.iGuideing=-1;*/
    			break;
    		case 22:
    			this.iX=MyGoods.iX+395;
    			this.iY=MyGoods.iY+155;
    			this.iW=60;this.iH=60;
    			this.sMessage="双击使用/穿戴";
    			this.iFx=0;
    			break;
    		case 30:
    			this.iX=FastButton.gi().btn_team.iX;
    			this.iY=FastButton.gi().btn_team.iY;
    			this.iW=FastButton.gi().btn_team.iW;
    			this.iH=FastButton.gi().btn_team.iH;
    			this.sMessage="组队打怪可以事半功倍";
    			this.iFx=5;
    			break;
    		case 31:
    			this.iX=FastButton.gi().btn_team.iX;
    			this.iY=FastButton.gi().btn_team.iY;
    			this.iW=FastButton.gi().btn_team.iW;
    			this.iH=FastButton.gi().btn_team.iH;
    			this.sMessage="闪烁时有玩家申请入队";
    			this.iFx=5;
    			break;
    		case 32:
    			this.iX=obj.btn_roles[0].iX;
    			this.iY=obj.btn_roles[0].iY;
    			this.iW=obj.btn_roles[0].iW;
    			this.iH=obj.btn_roles[0].iH;
    			this.sMessage="点击玩家，同意入队";
    			this.iFx=2;
    			break;
    		case 33:
    			this.iX=XFight.gi().fat[2][0].iX-30;
    			this.iY=XFight.gi().fat[2][0].iY-60;
    			this.iW=60;
    			this.iH=60;
    			this.sMessage="直接点击敌人攻击";
    			this.iFx=2;
    			AutoFightFrame.aff.iAutoFightLast=0;
    			break;
    		case 34://点击法术选择技能攻击
    		case 95:
    			this.iX=XFight.gi().btn_operate[0].iX;
    			this.iY=XFight.gi().btn_operate[0].iY;
    			this.iW=80;
    			this.iH=80;
    			this.sMessage="点击法术选择技能";
    			this.iFx=4;
    			AutoFightFrame.aff.iAutoFightLast=0;
    			break;
    		case 35://点击防御
    			this.iX=XFight.gi().btn_operate[3].iX;
    			this.iY=XFight.gi().btn_operate[3].iY;
    			this.iW=80;
    			this.iH=80;
    			this.sMessage="点击防御可以减少伤害";
    			this.iFx=5;
    			AutoFightFrame.aff.iAutoFightLast=0;
    			break;
    		case 36://点击道具使用药品
    			this.iX=XFight.gi().btn_operate[1].iX;
    			this.iY=XFight.gi().btn_operate[1].iY;
    			this.iW=80;
    			this.iH=80;
    			this.sMessage="点击道具后使用一个止血草";
    			this.iFx=5;
    			AutoFightFrame.aff.iAutoFightLast=0;
    			break;
    		case 37://点击逃跑
    			this.iX=XFight.gi().btn_operate[7].iX;
    			this.iY=XFight.gi().btn_operate[7].iY;
    			this.iW=80;
    			this.iH=80;
    			this.sMessage="打不过可以选择逃跑";
    			this.iFx=5;
    			AutoFightFrame.aff.iAutoFightLast=0;
    			break;
    		case 38://点击捕捉
    			this.iX=XFight.gi().btn_operate[8].iX;
    			this.iY=XFight.gi().btn_operate[8].iY;
    			this.iW=80;
    			this.iH=80;
    			this.sMessage="点击捕捉后选择目标";
    			this.iFx=6;
    			AutoFightFrame.aff.iAutoFightLast=0;
    			break;
    		case 39://点击道具使用药品
    			this.iX=XFight.gi().btn_operate[1].iX;
    			this.iY=XFight.gi().btn_operate[1].iY;
    			this.iW=80;
    			this.iH=80;
    			this.sMessage="点击道具后使用一个薄荷";
    			this.iFx=5;
    			AutoFightFrame.aff.iAutoFightLast=0;
    			break;
    			
    		case 61:
    			ExtHelp.Initex("点击下方任务按钮，可以查看当前已领的任务，和任务完成条件", 0, 0, "", 0, 0, "", 5, 75, "确定");
    			this.iGuideing=-1;
    			break;
    		case 62:
    		case 63:
    		case 64:
    		case 65:
    		case 66:
    		case 67:
    		case 68:
    		case 69:
    		case 70:
    			ExtHelp.Initex("您有未分配的属性点，可点击#cff0000人物头像/加点#o按钮进行加点，前期建议加力量，加入门派后会自动洗点一次", 0, 0, "", 0, 0, "", 2, 0, "确定");
    			this.iGuideing=-1;
    			break;
    		case 71:
    			ExtHelp.Initex("您当前气血不满，可以打开右下角#cff0000快捷/快捷恢复#o按钮恢复，也可以使用#cff0000红池#o战斗结束自动恢复满气血", 0, 0, "", 0, 0, "", 2, 0, "确定");
    			this.iGuideing=-1;
    			break;
    		case 72:
    			ExtHelp.Initex("您当前魔法不满，可以打开右下角#cff0000快捷/快捷恢复#o按钮恢复，也可以使用#cff0000蓝池#o战斗结束自动恢复满魔法", 0, 0, "", 0, 0, "", 2, 0, "确定");
    			this.iGuideing=-1;
    			break;
    		case 73:
    			ExtHelp.Initex("在野外行走时，怪物会自动与你战斗，可以打开右下角#cff0000快捷/遇怪:开/关#o按钮来屏蔽野外怪物", 0, 0, "", 0, 0, "", 2, 0, "确定");
    			this.iGuideing=-1;
    			break;
    		case 74:
    			this.iX=FastButton.gi().btn_qq.iX;
    			this.iY=FastButton.gi().btn_qq.iY;
    			this.iW=FastButton.gi().btn_qq.iW;
    			this.iH=FastButton.gi().btn_qq.iH;
    			this.sMessage="点击这里可打开上次提示";
    			this.iFx=2;
    			break;
    		case 75:
    			this.iX=FastButton.gi().btn_mission.iX-40;
    			this.iY=FastButton.gi().btn_mission.iY-80;
    			this.iW=80;this.iH=80;
    			this.sMessage="点击打开任务，可以看到当前任务提示";
    			this.iFx=5;
    			break;
    		case 76:
    			//找到背包中图纸
    			for(j=0;j<20;j++)
    			{
    				if(MyGoods.gi().goods[2][j].iGid>0)
    				{
    					if(MyGoods.gi().goods[2][j].iTid==97)
    					{
    						this.iX=MakeEquip.iGx+5+(j%5)*85;
    						this.iY=MakeEquip.iGy+5+(j/5)*85;
    						this.iW=80;this.iH=80;
    						this.sMessage="双击图纸";
    						this.iFx=4;
    						break;
    					}
    				}
    			}
    			if(j>=20)this.iGuideing=-1;
    //			ExtHelp.Initex("双击图纸，如果材料齐备，点击制造按钮", 0, 0, "", 0, 0, "", 2, 0, "确定");
    //			this.iGuideing=-1;
    			break;
    		case 79:
    			this.iX=MakeEquip.iX+30+400-20-110;
    			this.iY=MakeEquip.iY+MakeEquip.iH-30-160+160-20-52;
    			this.iW=110;this.iH=52;
    			this.sMessage="点击制造装备";
    			this.iFx=0;
    			break;
    		case 77:
    			ExtHelp.Initex("点击上方宠物头像，可以查看#cff0000宠物属性，资质，成长，技能#o", 0, 0, "", 0, 0, "", 5, 78, "确定");
    			this.iGuideing=-1;
    			break;
    		case 78:
    			this.iX=GmConfig$1.SCRW-83-104-83;
    			this.iY=0;
    			this.iW=83;this.iH=83;
    			this.sMessage="点击宠物头像，查看宠物属性";
    			this.iFx=7;
    			break;
    		case 80://打开快捷
    		case 82:
    			this.iX=FastButton.gi().btn_fast.iX;
    			this.iY=FastButton.gi().btn_fast.iY;
    			this.iW=FastButton.gi().btn_fast.iW;
    			this.iH=FastButton.gi().btn_fast.iH;
    			this.sMessage="点击打开快捷";
    			this.iFx=5;
    			break;
    		case 81://引导遁地术
    			this.iX=obj.btn_dundi.iX;
    			this.iY=obj.btn_dundi.iY;
    			this.iW=obj.btn_dundi.iW;
    			this.iH=obj.btn_dundi.iH;
    			this.sMessage="点击使用遁地术";
    			this.iFx=6;
    			break;
    		case 83://引导关闭遇怪
    			this.iX=obj.btn_dark.iX;
    			this.iY=obj.btn_dark.iY;
    			this.iW=obj.btn_dark.iW;
    			this.iH=obj.btn_dark.iH;
    			this.sMessage="点击关闭遇怪，在野外地图不再碰到怪物";
    			this.iFx=6;
    			break;
    		case 84://
    			this.iX=XFightRoleSkill.xfs.btn_skills[0].iX;
    			this.iY=XFightRoleSkill.xfs.btn_skills[0].iY;
    			this.iW=XFightRoleSkill.xfs.btn_skills[0].iW;
    			this.iH=XFightRoleSkill.xfs.btn_skills[0].iH;
    			this.sMessage="点击技能";
    			this.iFx=5;
    			break;
    		case 85:
    			for(i=0;i<20;i++)
    			{
    				if(MyGoods.gi().goods[2][i].iGid>0 && MyGoods.gi().goods[2][i].iTid==70 && MyGoods.gi().goods[2][i].iCount>=1)
    				{
    					this.iX=XFightGoods.xfg.iX+5+(i%5)*85;
    					this.iY=XFightGoods.xfg.iY+5+(i/5)*85;
    					this.iW=80;
    					this.iH=80;
    					this.sMessage="双击使用止血草";
    					this.iFx=5;
    					break;
    				}
    			}
    			break;
    		case 86://点击活动
    			this.iX=FastButton.gi().btn_act.iX;
    			this.iY=FastButton.gi().btn_act.iY;
    			this.iW=80;this.iH=80;
    			this.sMessage="看看有什么活动可以做";
    			this.iFx=2;
    			break;
    		case 87://点击花拳绣腿
    		case 96:
    			this.iX=XFightRoleSkill.xfs.btn_skills[0].iX;
    			this.iY=XFightRoleSkill.xfs.btn_skills[0].iY;
    			this.iW=80;this.iH=80;
    			this.sMessage="选择花拳绣腿";
    			this.iFx=5;
    			break;
    		case 88://点击目标
    		case 97:
    			this.iX=XFight.gi().fat[2][0].iX-30;
    			this.iY=XFight.gi().fat[2][0].iY-60;
    			this.iW=60;
    			this.iH=60;
    			this.sMessage="选择攻击目标";
    			this.iFx=2;
    			break;
    		case 89://点宠物头像
    			this.iX=GmMe$1.me.btn_petatt.iX;
    			this.iY=GmMe$1.me.btn_petatt.iY;
    			this.iW=GmMe$1.me.btn_petatt.iW;
    			this.iH=GmMe$1.me.btn_petatt.iH;
    			this.sMessage="点击打开宠物界面";
    			this.iFx=0;
    			break;
    		case 90://点出战
    			this.iX=obj.btn_joinfight.iX;
    			this.iY=obj.btn_joinfight.iY;
    			this.iW=obj.btn_joinfight.iW;
    			this.iH=obj.btn_joinfight.iH;
    			this.sMessage="点击设置宠物出战";
    			this.iFx=4;
    			break;
    		case 91://加点引导
    			this.iX=GmMe$1.me.btn_att.iX;this.iY=0;
    			this.iW=83;this.iH=83;
    			this.sMessage="点击头像打开人物属性面板";
    			this.iFx=7;
    			break;
    		case 92://加点按钮//加点按钮
    			this.iX=obj.btn_addpoint.iX;
    			this.iY=obj.btn_addpoint.iY;
    			this.iW=obj.btn_addpoint.iW;
    			this.iH=obj.btn_addpoint.iH;
    			this.sMessage="点击加点，可以分配剩余潜力点";
    			this.iFx=6;
    			break;
    		case 93://推荐加点
    			
    			this.iX=obj.pbtn_recommend.iOffX+obj.pbtn_recommend.iX;
    			this.iY=obj.pbtn_recommend.iOffY+obj.pbtn_recommend.iY;
    			this.iW=obj.pbtn_recommend.iW;
    			this.iH=obj.pbtn_recommend.iH;
    			this.sMessage="看看怎么加点更合适";
    			this.iFx=6;
    			break;
    		case 94://点自动
    		case 99:
    			this.iX=XFight.gi().btn_operate[6].iX;
    			this.iY=XFight.gi().btn_operate[6].iY;
    			this.iW=XFight.gi().btn_operate[6].iW;
    			this.iH=XFight.gi().btn_operate[6].iH;
    			this.sMessage="选择自动模式，即可自动战斗哦~";
    			this.iFx=5;
    			break;
    		case 98://宠物点攻击
    			this.iX=XFight.gi().fat[2][0].iX-30;
    			this.iY=XFight.gi().fat[2][0].iY-60;
    			this.iW=60;
    			this.iH=60;
    			this.sMessage="点击目标攻击";
    			this.iFx=2;
    			break;
    		case 100:
    			FrameMessageEx.fm.Open("有一只萌萌的宠物可以跟你一起战斗啦~小心~宠物也会死的哦~");
    			this.iGuideing=-1;
    			break;
    		case 101:
    			FrameMessageEx.fm.Open("分配好潜能点以后不要忘记点击确认保存哦");
    			this.iGuideing=-1;
    			break;
    		case 102://指导点击坐骑按钮
    			this.iX=FastButton.gi().btn_mounts.iX;
    			this.iY=FastButton.gi().btn_mounts.iY;
    			this.iW=FastButton.gi().btn_mounts.iW;
    			this.iH=FastButton.gi().btn_mounts.iH;
    			this.sMessage="点击打开坐骑界面";
    			this.iFx=5;
    			break;
    		case 103://
    			this.iX=obj.btn_joinfight.iX;
    			this.iY=obj.btn_joinfight.iY;
    			this.iW=obj.btn_joinfight.iW;
    			this.iH=obj.btn_joinfight.iH;
    			this.sMessage="点击骑乘坐骑";
    			this.iFx=5;
    			break;
    		}
    		if(this.iX<=0 && this.iY<=0)
    		{
    			this.iGuideing=-1;
    			GmPlay$1.sop("error guide = "+this.iGuideing);
    		}
    		this.iGuideDelay=0;
    		this.iGuideStat=0;//开始
    		return true;
    	}
    	
    	InitGuide()
    	{//触发引导
    		if(XRecordFast.iExtHelp==3)return;
    		if(this.iStartDelay>0)
    		{
    			if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING)this.iStartDelay--;
    			return;
    		}
    		if(GmMe$1.me.rbs.iLev>40)return;
    		if(this.iGuideing>=0)return;
    		if(FrameMessage.fm.bShow)return;
    		if(MapManager.gi().vbk.mapdialog.bDialoging)return;

    //		GmPlay.sop("bbbbbbbbbbbbbbbbbbbbb"+BeginersGuide.iEventGuide);
    		//extsel[i].type
    //		if(XStat.gi().LastStatType(0)==XStat.GS_MISSIONFRAME && this.SetGuide(1))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && MyMission.m.bCheckDoing(56) && this.SetGuide(2))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_SMALLMAP && this.SetGuide(3))return;

    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && !XFight.bFighting && !JQMode.jq.bJQLock() && MyMission.m.bCheckDoing(48) && this.SetGuide(4))return;
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && !XFight.bFighting && !JQMode.jq.bJQLock() && MyMission.m.bCheckDoing(49) && this.SetGuide(5))return;
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && !XFight.bFighting && !JQMode.jq.bJQLock() && MyMission.m.bCheckDoing(50) && this.SetGuide(6))return;
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && !XFight.bFighting && !JQMode.jq.bJQLock() && !FrameMessageEx.fm.bShow && MyMission.m.bCheckDoing(147) && this.SetGuide(4))return;
    		
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && !XFight.bFighting && !JQMode.jq.bJQLock() && MissionLead.gi().bOpen && MyMission.m.bCheckDoing(148) && this.SetGuide(5))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && !XFight.bFighting && !JQMode.jq.bJQLock() && MyMission.m.bCheckDoing(149) && this.SetGuide(6))return;
    		
    ///		if(GmMe.me.rbs.iExp>=GameData.iUpgradeExp[GmMe.me.rbs.iLev] && this.SetGuide(10))return;
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_MYATTFRAME && GmMe$1.me.rbs.iExp>=GameData$1.iUpgradeExp[GmMe$1.me.rbs.iLev] && this.SetGuide(11))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_MYATTFRAME && GmMe.me.rbs.nut>0 && this.SetGuide(12))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_ADDPOINT && this.SetGuide(13))return;
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && FriendList$1.gi().bPrivateChatFlash && this.SetGuide(14))return;
    		
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_MYGOODSFRAME && this.SetGuide(21))return;
    //		if(MyGoods.gi().bShow && MyGoods.gi().goods[2][0].iGid>0 && this.SetGuide(22))return;
    		
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && MapManager.gi().iCurrentMapId==2 && this.SetGuide(30))return;
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && FastButton.gi().bRequestFlash && this.SetGuide(31))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_TEAMOPERATE && TeamOperate.iModePoint==1 && this.SetGuide(32))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && XFight.bFighting && this.SetGuide(33))return;
    		
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iExp>=GameData.iUpgradeExp[GmMe.me.rbs.iLev] && GmMe.me.rbs.iLev==0 && this.SetGuide(50))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iExp>=GameData.iUpgradeExp[GmMe.me.rbs.iLev] && GmMe.me.rbs.iLev==0 && this.SetGuide(51))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iExp>=GameData.iUpgradeExp[GmMe.me.rbs.iLev] && GmMe.me.rbs.iLev==1 && this.SetGuide(52))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iExp>=GameData.iUpgradeExp[GmMe.me.rbs.iLev] && GmMe.me.rbs.iLev==2 && this.SetGuide(53))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iExp>=GameData.iUpgradeExp[GmMe.me.rbs.iLev] && GmMe.me.rbs.iLev==3 && this.SetGuide(54))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iExp>=GameData.iUpgradeExp[GmMe.me.rbs.iLev] && GmMe.me.rbs.iLev==4 && this.SetGuide(55))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iExp>=GameData.iUpgradeExp[GmMe.me.rbs.iLev] && GmMe.me.rbs.iLev==5 && this.SetGuide(56))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iExp>=GameData.iUpgradeExp[GmMe.me.rbs.iLev] && GmMe.me.rbs.iLev==6 && this.SetGuide(57))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iExp>=GameData.iUpgradeExp[GmMe.me.rbs.iLev] && GmMe.me.rbs.iLev==7 && this.SetGuide(58))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iExp>=GameData.iUpgradeExp[GmMe.me.rbs.iLev] && GmMe.me.rbs.iLev==8 && this.SetGuide(59))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iExp>=GameData.iUpgradeExp[GmMe.me.rbs.iLev] && GmMe.me.rbs.iLev==9 && this.SetGuide(60))return;


    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iLev==1 && GmMe.me.rbs.nut>0 && this.SetGuide(62))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iLev==2 && GmMe.me.rbs.nut>0 && this.SetGuide(63))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iLev==3 && GmMe.me.rbs.nut>0 && this.SetGuide(64))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iLev==4 && GmMe.me.rbs.nut>0 && this.SetGuide(65))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iLev==5 && GmMe.me.rbs.nut>0 && this.SetGuide(66))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iLev==6 && GmMe.me.rbs.nut>0 && this.SetGuide(67))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iLev==7 && GmMe.me.rbs.nut>0 && this.SetGuide(68))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iLev==8 && GmMe.me.rbs.nut>0 && this.SetGuide(69))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && GmMe.me.rbs.iLev==9 && GmMe.me.rbs.nut>0 && this.SetGuide(70))return;

    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && GmMe$1.me.iFlag[3]<=0 && GmMe$1.me.rbs.iHp<GmMe$1.me.rbs.iMaxHp && this.SetGuide(71))return;
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && GmMe$1.me.iFlag[4]<=0 && GmMe$1.me.rbs.iMp<GmMe$1.me.rbs.iMaxMp && this.SetGuide(72))return;
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && XFight.bFighting && MapManager.gi().iCurrentMapId!=1 && this.SetGuide(73))return;//遇怪开关

    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && MyPets$1.mp.iPetCount>0 && this.SetGuide(77))return;
    		
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_MAKEEQUIP  && this.SetGuide(76))return;
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_MAKEEQUIP  && MakeEquip.bCanMake && this.SetGuide(79))return;
    		
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && MyMission.m.bCheckDoing(143) && this.SetGuide(80))return;
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_FASTOPERATE && this.bCheckGuide(80) && MyMission.m.bCheckDoing(143) && this.SetGuide(81))return;
    		
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && !XFight.bFighting && MapManager.gi().iCurrentMapId==4 && MyMission.m.bCheckDoing(160) && this.SetGuide(82))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_FASTOPERATE && this.bCheckGuide(82) && MapManager.gi().iCurrentMapId==4 && MyMission.m.bCheckDoing(160) && this.SetGuide(83))return;
    		//完成新手剧情，提示除害
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && !XFight.bFighting && MyMission.m.bCheckDoing(23) && this.SetGuide(86))return;
    //		if(XStat.gi().LastStatType(0)==XStat.GS_GAMEING && this.bCheckGuide(86) && MyMission.m.bCheckDoing(23) && this.SetGuide(87))return;
    		
    //		GmPlay.sop(""+XFight.gi().btn_operate[0].iX+"======="+XFight.gi().btn_operate[0].iY);
    		if(XFight.bFighting && XFight.gi().iFightStat==0 && MyMission.m.bCheckDoing(150) &&  this.SetGuide(34))return;//点技能
    		if(XFight.bFighting && XFight.gi().iFightStat==1 && MyMission.m.bCheckDoing(150) &&  this.SetGuide(87))return;//点花拳绣腿
    		if(XFight.bFighting && XFight.gi().iFightStat==4 && MyMission.m.bCheckDoing(150) &&  this.SetGuide(88))return;//点敌人
    		if(XFight.bFighting && XFight.gi().iFightStat==0 && MyMission.m.bCheckDoing(150) &&  this.bCheckGuide(88) && this.SetGuide(94))return;//点自动
    		
    		if(XFight.bFighting && XFight.gi().iFightStat==0 && MyMission.m.bCheckDoing(157) &&  this.SetGuide(95))return;//点技能
    		if(XFight.bFighting && XFight.gi().iFightStat==1 && MyMission.m.bCheckDoing(157) &&  this.SetGuide(96))return;//点花拳绣腿
    		if(XFight.bFighting && XFight.gi().iFightStat==4 && MyMission.m.bCheckDoing(157) &&  this.SetGuide(97))return;//点敌人
    		if(XFight.bFighting && XFight.gi().iFightStat==10 && MyMission.m.bCheckDoing(157) &&  this.SetGuide(98))return;//宠物点敌人
    		if(XFight.bFighting && XFight.gi().iFightStat==0 && MyMission.m.bCheckDoing(157) &&  this.bCheckGuide(97) && this.SetGuide(99))return;//点自动
    		
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && !XFight.bFighting && MyMission.m.bCheckDoing(157) && this.SetGuide(89))return;//点宠物头像
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_PETSFRAME && this.bCheckGuide(89) && this.SetGuide(90))return;//点出战
    		if(this.bCheckGuide(90) && this.SetGuide(100))return;
    		
    //		GmPlay.sop(this.bCheckGuide(38)?"true":"false");
    		if(XFight.bFighting && XFight.gi().iFightStat==0 && XFight.gi().iFightType==1 && this.SetGuide(38))return;//提示捕捉
    		if(!XFight.bFighting && XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && this.bCheckGuide(38) && this.SetGuide(82))return;//打开快捷
    		if(!XFight.bFighting && XStat$1.gi().LastStatType(0)==XStat$1.GS_FASTOPERATE && this.bCheckGuide(82) && this.SetGuide(83))return;//关闭遇怪开关
    		if(GmMe$1.me.rbs.iLev>=10 && GmMe$1.me.rbs.iSchoolId>0 && XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && GmMe$1.me.rbs.nut>0 && this.SetGuide(91))return;//加点引导--打开人物属性面板
    		if(GmMe$1.me.rbs.iLev>=10 && GmMe$1.me.rbs.iSchoolId>0 && XStat$1.gi().LastStatType(0)==XStat$1.GS_MYATTFRAME && GmMe$1.me.rbs.nut>0 && this.SetGuide(92))return;
    		if(GmMe$1.me.rbs.iLev>=10 && GmMe$1.me.rbs.iSchoolId>0 && XmsEngine.pxe.IsStat("人物加点") && this.SetGuide(93))return;
    		if(this.bCheckGuide(93) && this.SetGuide(101))return;
    		
    //		GmPlay.sop(""+GmMe.me.rbs.iLev+","+MyMounts.mm.iMountsCount+","+this.SetGuide(102));
    		//有坐骑时
    		if(GmMe$1.me.rbs.iLev>=30 && MyMounts.mm.iMountsCount>0 && this.SetGuide(102))return;
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_MOUNTSFRAME && GmMe$1.me.iFightMid<=0 && this.bCheckGuide(102) && this.SetGuide(103))return;
    		
    		if(XFight.bFighting && XFight.gi().iFightStat==2 && MyGoods.bHaveGoods(70, 1) && this.bCheckGuide(36) && this.SetGuide(85))return;//使用止血草
    		
    		if(BeginersGuide.iEventGuide>0)
    		{
    			if(BeginersGuide.iEventGuide==33 && XFight.bFighting && XFight.gi().iFightStat==0 && this.SetGuide(33))return;
    			if(BeginersGuide.iEventGuide==34 && XFight.bFighting && XFight.gi().iFightStat==0 && this.SetGuide(34))return;
    			if(BeginersGuide.iEventGuide==35 && XFight.bFighting && XFight.gi().iFightStat==0 && this.SetGuide(35))return;
    			if(BeginersGuide.iEventGuide==36 && XFight.bFighting && XFight.gi().iFightStat==0 && this.SetGuide(36))return;
    			if(BeginersGuide.iEventGuide==37 && XFight.bFighting && XFight.gi().iFightStat==0 && this.SetGuide(37))return;
    			if(BeginersGuide.iEventGuide==38 && XFight.bFighting && XFight.gi().iFightStat==0 && this.SetGuide(38))return;
    			if(BeginersGuide.iEventGuide==39 && XFight.bFighting && XFight.gi().iFightStat==0 && this.SetGuide(39))return;
    //			if(BeginersGuide.iEventGuide==33 && XFight.bFighting && XFight.gi().iFightStat==0 && this.SetGuide(33))return;
    //			if(BeginersGuide.iEventGuide==34 && XFight.bFighting && XFight.gi().iFightStat==0 && this.SetGuide(34))return;
    //			if(BeginersGuide.iEventGuide==35 && XFight.bFighting && XFight.gi().iFightStat==0 && this.SetGuide(35))return;
    //			if(BeginersGuide.iEventGuide==36 && XFight.bFighting && XFight.gi().iFightStat==0 && this.SetGuide(36))return;
    //			if(BeginersGuide.iEventGuide==37 && XFight.bFighting && XFight.gi().iFightStat==0 && this.SetGuide(37))return;
    //			if(BeginersGuide.iEventGuide==38 && XFight.bFighting && XFight.gi().iFightStat==0 && this.SetGuide(38))return;
    			
    			if(BeginersGuide.iEventGuide==20 && XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && !FastButton.gi().bOpening && FastButton.gi().bShow && this.SetGuide(20))return;
    			
    			if(BeginersGuide.iEventGuide==61 && XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && this.SetGuide(61))return;
    			
    //			GmPlay.sop("747474747477474");
    			if(BeginersGuide.iEventGuide==74 && XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && this.SetGuide(74))return;
    			//游戏中，没有消息显示，提示打开任务栏
    			if(BeginersGuide.iEventGuide==75 && XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && !FastButton.gi().bOpening && FastButton.gi().bShow && this.SetGuide(75))return;
    			if(BeginersGuide.iEventGuide==78 && XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING && this.SetGuide(78))return;
    		}
    		//10级以下，经验足够，每1分钟提示一次升级
    		this.iTime++;
    		if(this.iTime%(15*60*5)==0 && XStat$1.gi().LastStatType(0)==XStat$1.GS_GAMEING)
    		{
    //			if(GmMe.me.rbs.iLev<10 && GmMe.me.rbs.iExp>=GameData.iUpgradeExp[GmMe.me.rbs.iLev])
    //			{
    //				ExtHelp.Initex("经验已足够升入下一级，点击右上角人物头像打开属性栏，点击#cff0000升级按钮#o升级", 0, 0, "", 0, 0, "", 2, 0, "确定");
    //				this.iGuideing=-1;
    //			}
    //			else 
    				if(GmMe$1.me.rbs.iLev<20 && GmMe$1.me.rbs.nut>0)
    			{
    				if(GmMe$1.me.rbs.iSchoolId==0)ExtHelp.Initex("您有未分配的属性点，可点击#cff0000人物头像/加点#o按钮进行加点，前期建议加力量，加入门派后会自动洗点一次", 0, 0, "", 0, 0, "", 2, 0, "确定");
    				//else ExtHelp.Init("您有未分配的属性点，可点击#cff0000人物头像/加点#o按钮进行加点，打开左上角#cff0000帮助#o查看#cff0000门派推荐加点#o", 0, 0, "", 0, 0, "", 2, 0, "确定");
    				this.iGuideing=-1;
    			}
    		}
    	}
    	
    	
    	InitGuideFromSever( pls)
    	{//服务器触发引导
    		var type=pls.GetNextInt();//打开引导类型
    		BeginersGuide.iEventGuide=type;
    		/*
    		switch(type)
    		{
    		case 33://直接点我攻击
    			this.SetGuide(33);
    			break;
    		case 34://点击法术选择技能攻击
    			this.SetGuide(34);
    			break;
    		case 35://点击防御
    			this.SetGuide(35);
    			break;
    		case 36://点击道具吃药
    			this.SetGuide(36);
    			break;
    		case 37://点击逃跑
    			this.SetGuide(37);
    			break;
    		case 38://点击捕捉
    			this.SetGuide(38);
    			break;
    		}
    		*/
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.iGuideing>=0)
    		{
    			if(!this.bForce)
    			{
    				if(this.iGuideStat==2)
    				{
    					if(msg==3)
    					{
    						this.iGuideStat=3;
    					}
    				}
    			}
    //			if(this.iGuideStat==2)
    //			{
    //				if(msg==1 && XDefine.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    //				{
    //					this.iGuideStat=2;
    //					return false;
    //				}
    //				return true;
    //				this.iGuideStat=3;
    //			}
    //			else
    			{
    				if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    				{
    					if(msg==3)
    					{
    //						if(this.iGuideing==90)FrameMessageEx.fm.Open("有一只萌萌的宠物可以跟你一起战斗啦~小心~宠物也会死的哦~");//点击宠物出战后
    //						if(this.iGuideing==93)FrameMessageEx.fm.Open("分配好潜能点以后不要忘记点击确认保存哦");//
    						this.iGuideing=-1;
    					}
    					return false;
    				}
    				return true;
    			}
    		}

    		return false;
    	}
    }
    BeginersGuide.bg=null;
    BeginersGuide.gi=function()
    {
    	if(BeginersGuide.bg==null)BeginersGuide.bg=new BeginersGuide();
    	return BeginersGuide.bg;
    };
    BeginersGuide.iEventGuide=0;

    //向玩家指示路径
    class ShowPath {
    	constructor()
    	{
    		this.bShow=false;
    		this.paths=new Array(256);//x,y,fx
    		for(var i=0;i<256;i++)this.paths[i]=new Int32Array(3);
    		this.aa_direct=null;
    		this.icmid=-1;
    	}
    	InitPath( dx, dy)
    	{
    		if(MapManager.gi().mfy.findway(GmMe$1.me.iX,GmMe$1.me.iY,dx,dy))
    		{//记录路径
    			console.log('路径');
    			var i,j,k=0,m;
    			var x1,y1,x2,y2;
    			var len;
    			var step=60;
    			x1=MapManager.gi().mfy.iPath[0][0];
    			y1=MapManager.gi().mfy.iPath[0][1];
    			for(i=1;i<MapManager.gi().mfy.iPathDeep;i++)
    			{
    				x2=MapManager.gi().mfy.iPath[i][0];
    				y2=MapManager.gi().mfy.iPath[i][1];
    				len=XDefine$1.llength(x1, y1, x2, y2);
    				
    				if(i==1)j=0;
    				else j=step;
    				for(;j<len;j+=step)
    				{
    					this.paths[k][0]=x1+(x2-x1)*j/len;
    					this.paths[k][1]=y1+(y2-y1)*j/len;
    					if(k>0)
    					{
    						m=XDefine$1.GetAngleXY(this.paths[k][0],this.paths[k][1], this.paths[k-1][0],this.paths[k-1][1]);
    						if(m<11)this.paths[k][2]=12;
    						else if(m<34)this.paths[k][2]=11;
    						else if(m<56)this.paths[k][2]=10;
    						else if(m<79)this.paths[k][2]=9;
    						else if(m<101)this.paths[k][2]=8;
    						else if(m<124)this.paths[k][2]=7;
    						else if(m<146)this.paths[k][2]=6;
    						else if(m<169)this.paths[k][2]=5;
    						else if(m<191)this.paths[k][2]=4;
    						else if(m<214)this.paths[k][2]=3;
    						else if(m<236)this.paths[k][2]=2;
    						else if(m<259)this.paths[k][2]=1;
    						else if(m<281)this.paths[k][2]=0;
    						else if(m<304)this.paths[k][2]=15;
    						else if(m<326)this.paths[k][2]=14;
    						else if(m<349)this.paths[k][2]=13;
    						else this.paths[k][2]=12;
    /*
    						if(m<11)this.paths[k][2]=6;
    						else if(m<23+45)this.paths[k][2]=5;
    						else if(m<23+45*2)this.paths[k][2]=4;
    						else if(m<23+45*3)this.paths[k][2]=3;
    						else if(m<23+45*4)this.paths[k][2]=2;
    						else if(m<23+45*5)this.paths[k][2]=1;
    						else if(m<23+45*6)this.paths[k][2]=0;
    						else if(m<23+45*7)this.paths[k][2]=7;
    						else this.paths[k][2]=6;*/
    					}
    					k++;
    				}
    				if(k>0)
    				{
    					x1=this.paths[k-1][0];
    					y1=this.paths[k-1][1];
    				}
    				else
    				{
    					x1=x2;
    					y1=y2;
    				}
    			}
    			this.iPathSize=k;
    			this.bShow=true;
    			if(this.aa_direct==null)this.aa_direct=GmPlay$1.xani_nui5.InitAnimaWithName("步行指向", null);
    			this.icmid=MapManager.gi().iCurrentMapId;
    		}
    	}

    	Draw()
    	{
    		if(this.bShow)
    		{
    			if(this.icmid!=MapManager.gi().iCurrentMapId)
    			{
    				this.bShow=false;
    				return;
    			}
    //			GmPlay.sop("11111111111111111111111="+this.iPathSize);
    			for(var i=1;i<this.iPathSize-1;i++)
    			{
    				this.aa_direct.iFrame= this.paths[i][2];
    //				this.aa_direct.Draw(MapManager.gi().iOffx+this.paths[i][0], MapManager.gi().iOffy+this.paths[i][1]);
    				DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy+this.paths[i][1]-50, null, MapManager.gi().iOffx+this.paths[i][0], MapManager.gi().iOffy+this.paths[i][1], this.aa_direct);
    				//this.aa_direct.Draw(this.paths[i][0], this.paths[i][1]);
    			}
    		}
    	}
    }
    ShowPath.psp=new ShowPath();

    class MissionFinish {
    	constructor()
    	{
    		var i;
    		this.iProc=new Int32Array(4);
    		for(i=0;i<4;i++)this.iProc[i]=-1;
    	}
    	Init()
    	{
    		var i;
    		for(i=0;i<4;i++)this.iProc[i]=6-i*2;
    	}
    	Draw()
    	{
    		if(this.iProc[0]<0)return;
    		var i,j=0;
    		for(i=0;i<4;i++)
    		{
    			switch(this.iProc[i])
    			{
    			case 6:
    				GmPlay$1.xani_nui3.DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "任务完成", i, 20, 2.2, 2.2, 0, 0, 0);
    				break;
    			case 7:
    				GmPlay$1.xani_nui3.DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "任务完成", i, 40, 1.9, 1.9, 0, 0, 0);
    				break;
    			case 8:
    				GmPlay$1.xani_nui3.DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "任务完成", i, 60, 1.6, 1.6, 0, 0, 0);
    				break;
    			case 9:
    				GmPlay$1.xani_nui3.DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "任务完成", i, 80, 1.3, 1.3, 0, 0, 0);
    				break;
    			case 10:
    				GmPlay$1.xani_nui3.DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "任务完成", i, 101, 1.0, 1.0, 0, 0, 0);
    				break;
    			case 11:
    				GmPlay$1.xani_nui3.DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "任务完成", i, 101, 0.7, 0.7, 0, 0, 0);
    				break;
    			case 12:
    				GmPlay$1.xani_nui3.DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "任务完成", i, 101, 1.0, 1.0, 0, 0, 0);
    				break;
    //			case 13:
    //				GmPlay.xani_nui3.DrawAnimaEx(GmConfig.SCRW/2-90-45+i*90, 90+45, "任务完成", i, 101, 1f, 1f, 0, 0, 0);
    //				break;
    //			case 14:
    //				GmPlay.xani_nui3.DrawAnimaEx(GmConfig.SCRW/2-90-45+i*90, 90+45, "任务完成", i, 101, 0.8f, 0.8f, 0, 0, 0);
    //				break;
    //			case 15:
    //				GmPlay.xani_nui3.DrawAnimaEx(GmConfig.SCRW/2-90-45+i*90, 90+45, "任务完成", i, 101, 0.9f, 0.9f, 0, 0, 0);
    //				break;
    			case 16:
    			default:
    				GmPlay$1.xani_nui3.DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "任务完成", i, 101, 1, 1, 0, 0, 0);
    				break;
    			}
    			if(this.iProc[i]<20)this.iProc[i]++;
    			else j++;
    		}
    		if(j==4)this.iProc[0]=-1;
    	}
    }
    MissionFinish.mf=new MissionFinish();

    class MyMission{
    	constructor(){
    		var i;
    		this.nmlist=new Array(MyMission.MAXMISSIONCOUNT);//
    		this.smlist=new Array(MyMission.MAXMISSIONCOUNT);//
    		for(i=0;i<MyMission.MAXMISSIONCOUNT;i++){
    			this.nmlist[i]=new NormalMission();
    			this.smlist[i]=new SpecialMission();
    		}
    		
    		this.iNMCount=0;
    		this.iSMCount=0;
    	}
    	bCheckInMissionMap( npcid)
    	{//15,16
    		var i,j;
    		for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    		{
    			if(this.smlist[i].bUseing)
    			{
    				for(j=0;j<this.smlist[i].iItemCount;j++)
    				{
    					GmPlay$1.sop(""+this.smlist[i].si[j].iSType+",,,"+this.smlist[i].si[j].iV2+",,,"+MapManager.gi().iVisualMapId);
    					if(this.smlist[i].si[j].iMType==0 && (this.smlist[i].si[j].iSType==15 || this.smlist[i].si[j].iSType==16 || this.smlist[i].si[j].iSType==17))
    					{
    						if(this.smlist[i].si[j].iV1==npcid && this.smlist[i].si[j].iV2==MapManager.gi().iVisualMapId)
    						{
    							GmPlay$1.sop("true"+this.smlist[i].si[j].iV1);
    							return true;
    						}
    					}
    				}
    			}
    		}
    		return false;
    	}
    	 bCheckDoing( mpoint)
    	{//检测是否正在执行此任务
    		var i;
    		for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    		{
    			if(this.nmlist[i].bUseing && this.nmlist[i].iMPoint==mpoint)
    			{
    				return true;
    			}
    		}
    		return false;
    	}
    	 bCheckSpecialDoing( mpoint)
    	{
    		var i;
    		for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    		{
    			if(this.smlist[i].bUseing && this.smlist[i].iMPoint==mpoint)
    			{
    				return true;
    			}
    		}
    		return false;
    	}
    	bCheckRequirement( mid)
    	{//检测是否满足执行条件
    		var i,j,k;
    		var mdata=MyMission.de_mission.datas[MyMission.de_mission.iValueIndex[mid]];
    		for(i=0;i<mdata.iItemCount;i++)
    		{
    			for(j=0;j<mdata.items[i].iValueCount;j++)
    			{
    				switch(mdata.items[i].values[j].iVid)
    				{
    				case 2://等级下限
    					k=parseInt(mdata.items[i].values[j].sValue);
    					if(GmMe$1.me.rbs.iLev<k)return false;
    					break;
    				case 3://门派限制
    					k=parseInt(mdata.items[i].values[j].sValue);
    					if(GmMe$1.me.rbs.iSchoolId!=k)return false;
    					break;
    				case 4://性别限制
    					k=parseInt(mdata.items[i].values[j].sValue);
    					if(GmMe$1.me.iSex!=k)return false;
    					break;
    				case 1://已完成任务限制
    					break;
    				}
    			}
    		}
    		return true;
    	}
    	 bCheckCanFinish( mid)
    	{//检测是否满足完成条件
    		return true;
    	}
    	
    	CheckMission1( npcid)
    	{
    		var i,j,k;
    //		for(i=0;i<10;i++)GmPlay.sop("npcid="+npcid);
    		GmPlay$1.sop("Check Mission1 npcid="+npcid);
    		for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    		{//检测门派任务中的找人任务是否完成
    			if(this.smlist[i].bUseing)
    			{
    //				GmPlay.sop("zzz="+i+",,,cc="+this.smlist[i].iItemCount);
    				for(j=0;j<this.smlist[i].iItemCount;j++)
    				{
    //					GmPlay.sop("aaaaaaaaaaaaaaaaa"+this.smlist[i].si[j].iV2+"===="+npcid);
    					if(this.smlist[i].si[j].iMType==0 && this.smlist[i].si[j].iSType==3 && this.smlist[i].si[j].iV2==npcid && this.smlist[i].si[j].iProc<100)
    					{//完成条件，抓宠物
    						GmPlay$1.sop("完成条件，抓宠物,finish 1,0");
    						GmProtocol$1.gi().s_FinishMission(1,this.smlist[i].iMPoint,0,0);
    						break;
    					}
    //					GmPlay.sop(","+this.smlist[i].si[j].iMType+","+this.smlist[i].si[j].iSType+","+this.smlist[i].si[j].iV1);
    					if(this.smlist[i].si[j].iMType==0 && this.smlist[i].si[j].iSType==1 && this.smlist[i].si[j].iV1==npcid && this.smlist[i].si[j].iProc<100)
    					{//完成条件，找npc
    //						GmPlay.sop("finish 1,0");
    						GmProtocol$1.gi().s_FinishMission(1,this.smlist[i].iMPoint,0,0);
    						break;
    					}
    					if(this.smlist[i].si[j].iMType==0 && this.smlist[i].si[j].iSType==0 && (this.smlist[i].si[j].iV3==0 || this.smlist[i].si[j].iV3==npcid) && this.smlist[i].si[j].iProc<100)
    					{//完成条件，交物品给npc 
    						for(k=0;k<20;k++)
    						{
    							if(MyGoods.gi().goods[2][k].iGid>0 && MyGoods.gi().goods[2][k].iTid==this.smlist[i].si[j].iV1)
    							{
    								//GmPlay.sop("aaaaaaaaaaaaaaaaa"+this.smlist[i].si[j].iV2+"===="+npcid);
    								GmProtocol$1.gi().s_FinishMission(1,this.smlist[i].iMPoint,0,0);
    								break;
    							}
    						}
    					}
    				}
    			}
    		}
    	}
    	
    	getmissionindex( pls)
    	{

    		var i;
    		var mid=pls.GetNextInt();
    		var name=pls.GetNextString();
    		var type=pls.GetNextByte();//0普通任务，>=1特殊任务
    		if(type==0)
    		{
    			for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    			{
    				if(this.nmlist[i].bUseing && this.nmlist[i].iMid==mid)
    				{
    					this.nmlist[i].iType=type;
    					this.nmlist[i].sName=name;
    					this.nmlist[i].iMPoint=pls.GetNextInt();
    					this.nmlist[i].iItemCount=0;
    					this.nmlist[i].bDetailed=false;
    					GmProtocol$1.gi().s_GetMissionDetail(mid,type);
    					if(this.nmlist[i].iMPoint==59)BeginersGuide.iEventGuide=61;
    					return;
    				}
    			}
    			for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    			{//没有，加入列表
    				if(!this.nmlist[i].bUseing)
    				{
    					this.nmlist[i].bUseing=true;
    					this.nmlist[i].iMid=mid;
    					this.nmlist[i].iType=type;
    					this.nmlist[i].sName=name;
    					this.nmlist[i].iMPoint=pls.GetNextInt();//指向db_
    					this.nmlist[i].iItemCount=0;
    					this.nmlist[i].bDetailed=false;
    					GmProtocol$1.gi().s_GetMissionDetail(mid,type);
    					if(this.nmlist[i].iMPoint==59)BeginersGuide.iEventGuide=61;
    					if(this.nmlist[i].iMPoint==56 && MapManager.gi().iCurrentMapId==1)
    					{//在新手村，得到抓猪任务，提示路径
    						ShowPath.psp.InitPath(1870, 1404);
    					}
    					return;
    				}
    			}
    		}
    		else
    		{
    			for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    			{//已有，更新
    				if(this.smlist[i].bUseing && this.smlist[i].iMid==mid)
    				{
    					this.smlist[i].iType=type;
    					this.smlist[i].sName=name;
    					this.smlist[i].sDetail=pls.GetNextString();
    					this.smlist[i].iItemCount=0;
    					this.smlist[i].bDetailed=false;
    					GmProtocol$1.gi().s_GetMissionDetail(mid,type);
    					return;
    				}
    			}
    			for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    			{//没有，加入列表
    				if(!this.smlist[i].bUseing)
    				{
    					this.smlist[i].bUseing=true;
    					this.smlist[i].iMid=mid;
    					this.smlist[i].iType=type;
    					this.smlist[i].sName=name;
    					this.smlist[i].sDetail=pls.GetNextString();
    					this.smlist[i].iMPoint=pls.GetNextInt();
    					this.smlist[i].iCount=pls.GetNextInt();
    					this.smlist[i].iItemCount=0;
    					this.smlist[i].bDetailed=false;
    					GmProtocol$1.gi().s_GetMissionDetail(mid,type);
    					return;
    				}
    			}
    		}
    	}
    	linktonpc()
    	{//根据任务，设置npc头顶标记，感叹号(可交任务)，问号(可接任务)
    		MapManager.gi().vbk.ClearNpcFlag();
    		var i,j,k;
    		var pde;
    		var pie;
    		for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    		{
    			if(this.smlist[i].bUseing && this.smlist[i].bDetailed)
    			{
    				for(j=0;j<this.smlist[i].iItemCount;j++)
    				{
    					if(this.smlist[i].si[j].iMType==0)
    					{//条件
    						switch(this.smlist[i].si[j].iSType)
    						{
    						case 0://找物品
    							if(this.smlist[i].si[j].iV3>0)
    							{
    								if(this.smlist[i].si[j].iProc>=100)MapManager.gi().vbk.SetNpcFlag(this.smlist[i].si[j].iV3, 0);//无
    								else MapManager.gi().vbk.SetNpcFlag(this.smlist[i].si[j].iV3, 1);//可交
    							}
    							break;
    						case 1://找npc
    							if(this.smlist[i].si[j].iProc>=100)MapManager.gi().vbk.SetNpcFlag(this.smlist[i].si[j].iV1, 0);//无
    							else MapManager.gi().vbk.SetNpcFlag(this.smlist[i].si[j].iV1, 1);//可交
    							break;
    						}
    					}
    				}
    			}
    			if(this.nmlist[i].bUseing && this.nmlist[i].bDetailed)//this.nmlist[i].iItemCount>0
    			{//普通剧情任务，存在于db_mission
    				pde=MyMission.de_mission.fdata(this.nmlist[i].iMPoint);
    //				for(j=0;j<pde.iItemCount;j++)
    				for(j=0;j<this.nmlist[i].iItemCount;j++)
    				{
    					GmPlay$1.sop("---("+j+")this.nmlist[i].ni[j].iItemId="+this.nmlist[i].ni[j].iItemId);
    					pie=pde.fitem(this.nmlist[i].ni[j].iItemId);
    					if(pie==null)continue;
    					switch(pie.iType)
    					{
    					case 10://跟npc对话
    						k=pie.intValue(5);//npc id
    						//可交任务
    						MapManager.gi().vbk.SetNpcFlag(k, 1);
    //						for(int z=0;z<50;z++)GmPlay.sop("2222222222222222");
    						break;
    					case 14://杀怪
    						break;
    					case 15://拥有物品
    						break;
    					case 20://NPC战斗
    						k=pie.intValue(15);//npc id
    						MapManager.gi().vbk.SetNpcFlag(k, 1);
    						break;
    					}
    				}
    			}
    		}
    	}
    	getmissiondetail( pls)
    	{
    		var mid=pls.GetNextInt();
    		var type=pls.GetNextByte();
    		var i,j;
    		if(type==0)
    		{
    			for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    			{
    				if(this.nmlist[i].bUseing && this.nmlist[i].iMid==mid)
    				{
    					this.nmlist[i].iItemCount=pls.GetNextByte();//进度数量
    					for(j=0;j<this.nmlist[i].iItemCount;j++)
    					{
    						this.nmlist[i].ni[j].iItemId=pls.GetNextInt();//itemid;
    						this.nmlist[i].ni[j].iProc=pls.GetNextInt();
    					}
    					this.nmlist[i].bDetailed=true;
    					this.linktonpc();
    					return;
    				}
    			}
    		}
    		else
    		{
    			for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    			{
    				if(this.smlist[i].bUseing && this.smlist[i].iMid==mid)
    				{
    					this.smlist[i].iItemCount=pls.GetNextByte();
    					for(j=0;j<this.smlist[i].iItemCount;j++)
    					{
    						this.smlist[i].si[j].iMType=pls.GetNextInt();
    						this.smlist[i].si[j].iSType=pls.GetNextInt();
    						this.smlist[i].si[j].iV1=pls.GetNextInt();
    						this.smlist[i].si[j].iV2=pls.GetNextInt();
    						this.smlist[i].si[j].iV3=pls.GetNextInt();
    						this.smlist[i].si[j].iProc=pls.GetNextInt();
    						this.smlist[i].si[j].sDetail=pls.GetNextString();
    						
    //						GmPlay.sop(""+this.smlist[i].si[j].iV1);
    //						GmPlay.sop("this.smlist[i].si[j].iMType="+this.smlist[i].si[j].iMType+",this.smlist[i].si[j].iSType="+this.smlist[i].si[j].iSType+",this.smlist[i].si[j].sDetail"+this.smlist[i].si[j].sDetail);
    					}
    					this.smlist[i].bDetailed=true;
    					this.linktonpc();
    					return;
    				}
    			}
    		}
    		
    	}
    	cleanclientmission( pls)
    	{
    		var i;
    		var mid=pls.GetNextInt();
    		if(pls.GetNextByte()==1)MissionFinish.mf.Init();
    		for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    		{
    			if(this.smlist[i].bUseing && this.smlist[i].iMid==mid)
    			{
    				this.smlist[i].bUseing=false;
    			}
    			if(this.nmlist[i].bUseing && this.nmlist[i].iMid==mid)
    			{
    				this.nmlist[i].bUseing=false;
    			}
    		}
    		MapManager.gi().vbk.ClearNpcFlag();
    		this.linktonpc();
    	}

    	GetAiDest()
    	{//获取寻路目标
    		var i,j;
    		for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    		{
    			if(this.smlist[i].bUseing && GmMe$1.me.iFlag[20]>0)
    			{//VIP部分任务自动寻路
    				for(j=0;j<this.smlist[i].iItemCount;j++)
    				{
    					if(this.smlist[i].si[j].iMType==0)
    					{//任务目标
    							switch(this.smlist[i].si[j].iSType)
    							{
    							case 1://找到npc  v1npcid
    							case 5://与静态npc战斗
    							case 7://找到静态npc，需要对话完成
    							case 8://与静态npc战斗
    								MyAI.gi().iDestNpcId=this.smlist[i].si[j].iV1;
    								MyAI.gi().sDestDetail=this.smlist[i].si[j].sDetail;
    								return true;
    							}
    					}
    				}
    			}
    			if(this.nmlist[i].bUseing)
    			{
    				var pde=MyMission.MyMission.de_mission.fdata(this.nmlist[i].iMPoint);
    				if(pde.intValue(5)!=-1)
    				{//npc对话ID-------------------------------------
    					MyAI.gi().iDestNpcId=pde.intValue(5);
    					MyAI.gi().sDestDetail=pde.strValue(16);
    					return true;
    				}
    				if(pde.intValue(9)!=-1)
    				{//杀怪怪物ID
    				}
    				if(pde.intValue(8)!=-1)
    				{//交物品IDxxx
    				}
    				if(pde.intValue(15)!=-1)
    				{//战斗npcid-----------------------------------
    					MyAI.gi().iDestNpcId=pde.intValue(15);
    					MyAI.gi().sDestDetail=pde.strValue(24);
    					return true;
    				}
    				if(pde.intValue(30)!=-1)
    				{//抓宠物类型ID
    				}
    			}
    		}
    		return false;
    	}
    }
    MyMission.de_mission;

    MyMission.MAXMISSIONCOUNT=32;
    MyMission.m=new MyMission();

    class SE_BRANCH extends BASESEQUENCE
    {//序列-分支2
    //	public static int MAXSELECTCOUNT=6;
    //	public int iCount;
    //	public BASESEQUENCE next;
    	 constructor()
    	{
            super();
            this.iType=0;
    		this.iCount=0;
    		var i;
    		this.next=new BASESEQUENCE(SE_BRANCH.MAXSELECTCOUNT);
    		for(i=0;i<SE_BRANCH.MAXSELECTCOUNT;i++)
    		{
    			this.next[i]=null;
    		}
    	}
    };
    SE_BRANCH.MAXSELECTCOUNT=6;

    class SE_EVENT extends BASESEQUENCE
    {//序列-事件5
    //	public static int MAXEVENTVALUE=8;
    //	public int iEid;
    //	public String sValues;
    //	public BASESEQUENCE next;
    	constructor()
    	{
            super();
    		this.iEid=-1;
    		this.next=null;
    		var i;
    		this.sValues=new Array(SE_EVENT.MAXEVENTVALUE);
    		for(i=0;i<SE_EVENT.MAXEVENTVALUE;i++)
    		{
    			this.sValues[i]="";
    		}
    	}
    };
    SE_EVENT.MAXEVENTVALUE=8;

    class SE_HEAD extends BASESEQUENCE
    {//序列-头1
    //	public String sName;
    //	public BASESEQUENCE next;
    	constructor()
    	{
            super();
    		this.next=null;
    		this.sName="";
    	}
    }

    class SE_REQUIREMENT extends BASESEQUENCE
    {//序列-条件3
    //	public static int MAXREQUIREMENTVALUE=8;
    //	public int iRid;//条件ID
    //	public String sValues;
    //	public BASESEQUENCE next;
    	constructor()
    	{
            super();
    		this.iRid=-1;
    		this.next=null;
    		var i;
    		this.sValues=new Array(SE_REQUIREMENT.MAXREQUIREMENTVALUE);
    		for(i=0;i<SE_REQUIREMENT.MAXREQUIREMENTVALUE;i++)
    		{
    			this.sValues[i]="";
    		}
    	}
    };
    SE_REQUIREMENT.MAXREQUIREMENTVALUE=8;

    class NewMapDialog {
    /*	SE_SELECT this.opendialog;
    	SE_SELECT this.defaultdialog;
    	
    	int this.iCdCount;
    	BASESEQUENCE this.cdlist;//可完成剧情列表
    	
    	int this.iSpCount;
        SE_EVENT this.splist;//可完成特殊任务列表
        
        	SE_HEAD this.phead;
    	SE_BRANCH this.pbranch;
    	SE_REQUIREMENT this.prequirement;
    	SE_SELECT this.pselect;
    	SE_EVENT this.pevent;
    	*/
    	constructor ()
    	{
    		this.opendialog=new SE_SELECT();
    		this.opendialog.iType=4;
    		
    		this.cdlist=new BASESEQUENCE(32);
    		this.splist=new SE_EVENT(32);
    		for(var i=0;i<32;i++)this.splist[i]=new SE_EVENT();
    	}
    	

    	  ProcBase_CheckOutDrama( be)
    	{
    		if(be==null)return;
    		if(this.bBreakCheck)return;
    		var i;
    		GmPlay$1.sop("type="+be.iType);
    		switch(be.iType)
    		{
    		case 1:
    			this.phead=be;
    			if(this.phead.next!=null)this.ProcBase_CheckOutDrama(this.phead.next);
    			break;
    		case 2://分支
    			this.pbranch=be;
    			for(i=0;i<this.pbranch.iCount;i++)
    			{
    				if(this.pbranch.next[i]!=null)
    				{
    					this.ProcBase_CheckOutDrama(this.pbranch.next[i]);
    				}
    			}
    			break;
    		case 3://条件，需要回调
    			this.prequirement=be;
    			if(this.prequirement.iRid==1)
    			{//可处理的剧情任务，看自己任务列表中有没有
    				i=parseInt(this.prequirement.sValues[0]);
    				if(MyMission.m.bCheckDoing(i))
    				{//有剧情，加入到可做事情列表
    					this.opendialog.AddSelect("剧情："+MyMission.de_mission.strValue(i, 0, 19), this.prequirement.next);
    					if(i==138)this.bBreakCheck=true;
    				}
    			}
    			break;
    		case 5://事件
    			this.pevent=be;
    //			for(i=0;i<10;i++)GmPlay.sop("eid"+this.pevent.iEid);
    			VisualBlock.pvb.procmap.ProcEvent(this.pevent);
    			break;
    		}
    	}
    	ProcBase_CheckOutDefault( be)
    	{
    		if(be==null)return false;
    		var i;
    		switch(be.iType)
    		{
    		case 1:
    			this.phead=be;
    			if(this.phead.next!=null)return this.ProcBase_CheckOutDefault(this.phead.next);
    			break;
    		case 2://分支
    			this.pbranch=be;
    			for(i=0;i<this.pbranch.iCount;i++)
    			{
    				if(this.pbranch.next[i]!=null)
    				{
    					if(this.ProcBase_CheckOutDefault(this.pbranch.next[i]))return true;
    				}
    			}
    			break;
    		case 3://条件
    			this.prequirement=be;
    			if(this.prequirement.iRid==1)return false;
    			if(VisualBlock.pvb.procmap.RequirementCheck(this.prequirement))
    			{//满足条件，往下执行
    				return this.ProcBase_CheckOutDefault(this.prequirement.next);
    			}
    			break;
    		case 4://选择--默认
    			this.pselect=be;
    //			if(this.opendialog.iCount<=0)this.defaultdialog=this.pselect;
    //			else
    			{//有内容，添加到末尾
    				this.opendialog.sHead=this.pselect.sHead;
    				this.opendialog.sQuestion=this.pselect.sQuestion;
    				if(this.bBreakCheck)return true;
    //				GmPlay.sop1(""+this.pselect.sQuestion+",,,,,,,,"+this.pselect.iCount);
    				for(i=0;i<this.pselect.iCount;i++)
    				{
    					if(GmMe$1.me.rbs.iLev>=40)
    					{
    						if(this.pselect.next[i]!=null && this.pselect.next[i].iType==5) 
    						{
    							this.pevent=this.pselect.next[i];
    							if(this.pevent.iEid==4)
    							{//领取门派任务，调整为自动师门和手动师门两个选项
    								this.splist[this.iSpCount].iType=5;//事件
    								this.splist[this.iSpCount].iEid=4;//师门任务
    								this.splist[this.iSpCount].sValues[0]="22";
    								this.opendialog.AddSelect("自动任务(得储备)", this.splist[this.iSpCount]);
    								this.iSpCount++;
    								
    								this.opendialog.AddSelect("手动任务(得铜币)", this.pselect.next[i]);
    								continue;
    							}
    						}
    					}
    					this.opendialog.AddSelect(this.pselect.sAnswers[i], this.pselect.next[i]);
    				}
    			}
    			return true;
    //			mapdialog.InitDialog(this.pselect);
    //			break;
    //		case 5://事件
    //			this.pevent=(SE_EVENT)be;
    //			VisualBlock.pvb.procmap.ProcEvent(this.pevent);
    //			this.ProcBase_CheckOutDrama(this.pevent.next);
    //			break;
    		}
    		return false;
    	}
    	CheckOutSpecialMission( npcid)
    	{
    		var i,j;
    		var smlist=MyMission.m.smlist;
    		for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    		{//检测门派任务中的找人任务是否完成
    			if(smlist[i].bUseing)
    			{
    //				GmPlay.sop("zzz="+i+",,,cc="+smlist[i].iItemCount);
    				for(j=0;j<smlist[i].iItemCount;j++)
    				{
    //					GmPlay.sop("aaaaaaaaaaaaaaaaa"+smlist[i].si[j].iV2+"===="+npcid);
    					if(smlist[i].si[j].iMType==0 && smlist[i].si[j].iSType==3 && smlist[i].si[j].iV2==npcid && smlist[i].si[j].iProc<100)
    					{//完成条件，抓宠物
    						if(MyPets$1.bHavePet(smlist[i].si[j].iV1, smlist[i].si[j].iV3))
    						{
    							this.splist[this.iSpCount].iType=5;//事件
    							this.splist[this.iSpCount].iEid=11;//完成特殊任务
    							this.splist[this.iSpCount].sValues[0]=""+smlist[i].iMPoint;
    							this.opendialog.AddSelect("完成："+smlist[i].sName, this.splist[this.iSpCount]);
    							this.iSpCount++;
    //							GmPlay.sop("完成条件，抓宠物,finish 1,0");
    //							GmProtocol.gi().s_FinishMission(1,smlist[i].iMPoint);
    						}
    					}
    //					GmPlay.sop(","+smlist[i].si[j].iMType+","+smlist[i].si[j].iSType+","+smlist[i].si[j].iV1);
    					if(smlist[i].si[j].iMType==0 && smlist[i].si[j].iSType==1 && smlist[i].si[j].iV1==npcid && smlist[i].si[j].iProc<100)
    					{//完成条件，找npc
    						this.splist[this.iSpCount].iType=5;//事件
    						this.splist[this.iSpCount].iEid=11;//完成特殊任务
    						this.splist[this.iSpCount].sValues[0]=""+smlist[i].iMPoint;
    						this.opendialog.AddSelect("完成："+smlist[i].sName, this.splist[this.iSpCount]);
    						this.iSpCount++;
    //						GmPlay.sop("finish 1,0");
    //						GmProtocol.gi().s_FinishMission(1,smlist[i].iMPoint);
    						break;
    					}
    					if(smlist[i].si[j].iMType==0 && smlist[i].si[j].iSType==0 && (smlist[i].si[j].iV3==0 || smlist[i].si[j].iV3==npcid) && smlist[i].si[j].iProc<100)
    					{//完成条件，交物品给npc 
    						if(MyGoods.bHaveGoods(smlist[i].si[j].iV1, 1))
    						{
    							this.splist[this.iSpCount].iType=5;//事件
    							this.splist[this.iSpCount].iEid=11;//完成特殊任务
    							this.splist[this.iSpCount].sValues[0]=""+smlist[i].iMPoint;
    							this.opendialog.AddSelect("完成："+smlist[i].sName, this.splist[this.iSpCount]);
    							this.iSpCount++;
    							//GmPlay.sop("aaaaaaaaaaaaaaaaa"+smlist[i].si[j].iV2+"===="+npcid);
    //							GmProtocol.gi().s_FinishMission(1,smlist[i].iMPoint);
    							break;
    						}
    					}
    					if(smlist[i].si[j].iMType==0 && smlist[i].si[j].iSType==5 && smlist[i].si[j].iV1==npcid && smlist[i].si[j].iProc<100)
    					{//完成条件，找npc
    						this.splist[this.iSpCount].iType=5;//事件
    						this.splist[this.iSpCount].iEid=11;//完成特殊任务
    						this.splist[this.iSpCount].sValues[0]=""+smlist[i].iMPoint;
    						this.opendialog.AddSelect("战斗："+smlist[i].sName, this.splist[this.iSpCount]);
    						this.iSpCount++;
    //						GmPlay.sop("finish 1,0");
    //						GmProtocol.gi().s_FinishMission(1,smlist[i].iMPoint);
    						break;
    					}
    					//GmPlay.sop("zzz"+ smlist[i].si[j].iV1+",,,,,,,,"+npcid);
    					//GmPlay.sop("ttt"+ smlist[i].si[j].iV2+",,,,,,,,"+MapManager.gi().iVisualMapId);
    					if(smlist[i].si[j].iMType==0 && smlist[i].si[j].iSType==15 && smlist[i].si[j].iV1==npcid && smlist[i].si[j].iV2==MapManager.gi().iVisualMapId && smlist[i].si[j].iProc<100)
    					{
    						this.splist[this.iSpCount].iType=5;//事件
    						this.splist[this.iSpCount].iEid=11;//完成特殊任务
    						this.splist[this.iSpCount].sValues[0]=""+smlist[i].iMPoint;
    						this.opendialog.AddSelect("完成："+smlist[i].sName, this.splist[this.iSpCount]);
    						this.iSpCount++;
    						break;
    					}
    					if(smlist[i].si[j].iMType==0 && smlist[i].si[j].iSType==16 && smlist[i].si[j].iV1==npcid && smlist[i].si[j].iV2==MapManager.gi().iVisualMapId && smlist[i].si[j].iProc<100)
    					{
    						if(MyGoods.bHaveGoods(smlist[i].si[j].iV3, 1))
    						{
    							this.splist[this.iSpCount].iType=5;//事件
    							this.splist[this.iSpCount].iEid=11;//完成特殊任务
    							this.splist[this.iSpCount].sValues[0]=""+smlist[i].iMPoint;
    							this.opendialog.AddSelect("完成："+smlist[i].sName, this.splist[this.iSpCount]);
    							this.iSpCount++;
    							//GmPlay.sop("aaaaaaaaaaaaaaaaa"+smlist[i].si[j].iV2+"===="+npcid);
    //							GmProtocol.gi().s_FinishMission(1,smlist[i].iMPoint);
    							break;
    						}
    //						this.splist[this.iSpCount].iType=5;//事件
    //						this.splist[this.iSpCount].iEid=11;//完成特殊任务
    //						this.splist[this.iSpCount].sValues[0]=""+smlist[i].iMPoint;
    //						this.opendialog.AddSelect("完成："+smlist[i].sName, this.splist[this.iSpCount]);
    //						this.iSpCount++;
    //						break;
    					}
    				}
    			}
    		}
    	}
    	
    //	GmMe.me.ChangeStat("站立");
    //	SteeringWheel.sw.bLocked=false;
    //	boolean this.bBreakCheck;
    	Open( vb)
    	{
    		var j;
    		
    //			if(vb.pss[0]!=null)
    //			{
    //				GmPlay.sop("ttt="+vb.pss[0].iType);
    //				if(vb.pss[0].iType==5)
    //				{
    //					VisualBlock.pvb.ProcBase(vb.pss[0]);
    //					return;
    //				}
    //			}

    		this.opendialog.iCount=0;
    		this.opendialog.sQuestion="";
    		this.defaultdialog=null;
    		this.iCdCount=0;
    		this.iSpCount=0;

    		//1npc身上的剧情任务，看是否存在对应normalmission
    		this.bBreakCheck=false;
    		for(j=0;j<_VISUALBLOCK.MAXBASESEQUENCE;j++)
    		{
    			if(vb.pss[j]!=null)
    			{
    				this.ProcBase_CheckOutDrama(vb.pss[j]);
    				if(this.bBreakCheck)break;
    			}
    		}
    		//2身上specialmissioin，看是否指向npc
    		if(vb.bCurrentBlock)this.CheckOutSpecialMission(vb.iNpcId);
    		
    		//3默认对话
    		for(j=0;j<_VISUALBLOCK.MAXBASESEQUENCE;j++)
    		{
    			if(vb.pss[j]!=null)
    			{
    				GmPlay$1.sop("ggggggggggggggggggggg");
    				if(this.ProcBase_CheckOutDefault(vb.pss[j]))break;
    			}
    		}
    		
    //		for(j=0;j<10;j++)GmPlay.sop(""+this.opendialog.iCount);
    		if(this.defaultdialog!=null)
    		{
    //			this.opendialog.iCount=this.defaultdialog.iCount;
    //			this.opendialog.sHead=this.defaultdialog.sHead;
    //			this.opendialog.sQuestion=this.defaultdialog.sQuestion;
    //			for(i=0;i<SE_SELECT.MAXSELECTCOUNT;i++)
    //			{
    //				if(GmMe.me.rbs.iLev>=40 && this.opendialog.next[i].iType==5)
    //				{
    //					this.pevent=(SE_EVENT)this.defaultdialog.next[i];
    //					if(this.pevent.iEid==4)
    //					{//领取门派任务，调整为自动师门和手动师门两个选项
    //						this.splist[this.iSpCount].iType=5;//事件
    //						this.splist[this.iSpCount].iEid=4;//师门任务
    //						this.splist[this.iSpCount].sValues[0]="22";
    //						this.opendialog.AddSelect("自动任务(得储备)", this.splist[this.iSpCount]);
    //						this.iSpCount++;
    //						
    //						this.opendialog.AddSelect("手动任务(得铜币)", this.pselect.next[i]);
    //						continue;
    //					}
    //				}
    //				this.opendialog.sAnswers[i]=this.defaultdialog.sAnswers[i];
    //				this.opendialog.next[i]=this.defaultdialog.next[i];
    //			}
    //			
    			this.opendialog.copyfrom(this.defaultdialog);
    		}

    		if(!this.opendialog.sQuestion=="")
    		{
    			if(this.opendialog.sQuestion.charAt(0)!='@')
    			{
    				if(vb.bCurrentBlock)
    				{//本地npc
    					this.opendialog.sQuestion="@1n"+parseInt(vb.iNpcId/100)+(parseInt(vb.iNpcId/10)%10)+(vb.iNpcId%10)+"t"+this.opendialog.sQuestion;
    				}
    			}
    			VisualBlock.pvb.mapdialog.InitDialog(this.opendialog,vb.sNpcName);
    		}
    	}
    }

    class SteeringWheel {

    	SteeringWheel()
    	{
    		this.iW=160;
    		this.iH=160;
    		this.pm3f=M3DFast$1.xm3f;
    	}
    	Draw()
    	{
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return;
    		if(SystemOperate.iWheel==1)return;
    		var i,j,k;
    		this.iX=this.iW/2;
    		if(PublicChat_SmallFrame.gi().bOpen)this.iY=GmConfig$1.SCRH-PublicChat_SmallFrame.gi().iModifyH-this.iH/2-70;
    		else this.iY=GmConfig$1.SCRH-this.iH/2;
    		if(this.iY>GmConfig$1.SCRH-this.iH/2)this.iY=GmConfig$1.SCRH-this.iH/2;
    //		if(PublicChat_SmallFrame.gi().iModifyH<110)this.iY=GmConfig.SCRH-110-this.iH/2;
    		
    		GmPlay$1.xani_ui.DrawAnima(this.iX, this.iY, "方向盘",0);
    //		GmPlay.xani_ui.DrawAnimaEx(this.iX, this.iY, "方向盘",0, this.bLocked?101:50, 1, 1, 0, 0, 0);
    //		this.pm3f.DrawCircle(this.iX, this.iY, this.iW/2, this.iH/2, 0xffffffff);

    		if(this.bLocked)
    		{
    			this.iLockTime++;//按下后的时间
    			i=XDefine$1.llength(this.iLockX, this.iLockY, this.iX, this.iY);
    			var f=XDefine$1.GetAngleXY(this.iLockX, this.iLockY, this.iX, this.iY);


    			j= (Math.cos(f*Math.PI/180)*50);
    			k= (Math.sin(f*Math.PI/180)*50);

    			if(Gameing.iFindWayOnce<=0)
    			{
    				Gameing.iFindWayOnce++;
    				if(MyTeam$1.bNoTeam() || MyTeam$1.bTeamLeader() || MyTeam$1.bAway())
    				{//没队伍，或是队长，才能走
    					if(MapManager.gi().mfy.findway1(GmMe$1.me.iX,GmMe$1.me.iY,GmMe$1.me.iX+j,GmMe$1.me.iY+k))
    					{
    						if(FindWay.bAutoBoom && this.bAutoRun)
    						{//自动走碰到障碍物，停下
    							this.bAutoRun=false;
    							this.bLocked=false;
    							GmPlay$1.xani_ui.DrawAnima(this.iX, this.iY, "方向盘",1);
    							return;
    						}
    						else if(MapManager.gi().mfy.checkagain())
    						{
    							MapManager.gi().vbk.iGoToNpcFlag=-1;
    							MapManager.gi().vbk.iGoToNpcId=-1;
    							GmMe$1.me.start(MapManager.gi().mfy.iPath,MapManager.gi().mfy.iPathDeep);
    						}
    					}
    					else if(this.bAutoRun)
    					{//自动走碰到障碍物，停下
    						this.bAutoRun=false;
    						this.bLocked=false;
    						GmPlay$1.xani_ui.DrawAnima(this.iX, this.iY, "方向盘",1);
    						return;
    					}

    //					else
    //					{
    //						j= (Math.cos(f*Math.PI/180)*300);
    //						k= (Math.sin(f*Math.PI/180)*300);
    //						if(MapManager.gi().mfy.findway(GmMe.me.iX,GmMe.me.iY,GmMe.me.iX+j,GmMe.me.iY+k))
    //						{
    //							if(MapManager.gi().mfy.checkagain())
    //							{
    //								GmMe.me.start(MapManager.gi().mfy.iPath,MapManager.gi().mfy.iPathDeep);
    //							}
    //						}
    //					}
    				}
    			}
    			if(i>80-30)
    			{
    				j= (Math.cos(f*Math.PI/180)*(80-30));
    				k= (Math.sin(f*Math.PI/180)*(80-30));
    			}
    			else
    			{
    				j=this.iLockX-this.iX;
    				k=this.iLockY-this.iY;
    			}
    //			this.pm3f.DrawCircle(this.iX+j, this.iY+k, 30, 30, 0xffffffff);
    		}
    		else
    		{
    			j=0;k=0;
    		}
    		if(this.bAutoRun)
    		{
    			j=0;k=0;
    		}
    		GmPlay$1.xani_ui.DrawAnima(this.iX+j, this.iY+k, "方向盘",1);
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return false;
    		if(MySell.gi().bSelling)return false;
    		if(SystemOperate.iWheel==1)return false;
    		if(msg==1)
    		{//按下
    			if(this.bAutoRun)
    			{
    				this.bAutoRun=false;
    				this.bLocked=false;
    			}
    			if(XDefine$1.llength(x, y, this.iX, this.iY)<=80)
    			{
    				this.iLockTime=0;
    				this.bLocked=true;
    				this.iLockX=x;
    				this.iLockY=y;
    			}
    		}
    		
    		if(this.bLocked && !this.bAutoRun)
    		{
    			if(msg==2)
    			{
    				this.iLockX=x;
    				this.iLockY=y;
    			}
    			if(msg==3)
    			{
    				if(this.iLockTime>=6 || XDefine$1.llength(x, y, this.iX, this.iY)<=80)this.bLocked=false;
    				return true;
    			}
    			return true;
    		}
    		
    		return false;
    	}
    }
    SteeringWheel.sw=new SteeringWheel();

    class InNumber extends BaseClass{

    	
    	
    //	public static ShelvesFrame sf=new ShelvesFrame();
    	constructor( ani)
    	{
    		super();
    		this.iW=320;
    		this.iH=230;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_nui3);
    		this.btn_ok.InitButton("内框按钮");
    		this.btn_ok.sName="确定";
    		
    		this.btn_cancel=new XButtonEx2$1(GmPlay$1.xani_nui3);
    		this.btn_cancel.InitButton("内框按钮");
    		this.btn_cancel.sName="取消";
    		
    		this.in_num=new XInputNumber(GmPlay$1.xani_nui3);
    		this.in_num.iNumber=0;
    		
    		InNumber.bOk=false;
    	}
    	
    	Draw()
    	{
    //		DrawMode.Frame1_BR(this.iX, this.iY, this.iW, this.iH);
    		DrawMode$1.new_framewatch(this.iX, this.iY, this.iW, this.iH);
    		
    		M3DFast$1.gi().DrawTextEx(this.iX+30, this.iY+30, InNumber.sTitle, 0xffffffff, 30, 100, 1, 1, 0, 0, 0);

    		this.in_num.Move(this.iX+30+30, this.iY+30+30+20, 220);
    		this.in_num.Draw();
    		
    		this.btn_ok.Move(this.iX+30, this.iY+this.iH-30-50, 98, 50);
    		this.btn_cancel.Move(this.iX+this.iW-30-98, this.iY+this.iH-30-50, 98, 50);
    		this.btn_ok.Draw();
    		this.btn_cancel.Draw();
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		if(this.in_num.ProcTouch(msg, x, y))return true;
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{//确定
    				if(this.in_num.iNumber>=0)
    				{
    					InNumber.iNumber=this.in_num.iNumber;
    					InNumber.bFinished=true;
    					InNumber.bOk=true;
    					XStat$1.gi().PopStat(1);
    					//
    					if(InNumber.iIid==InNumber.IN_RID)
    					{
    						GmProtocol$1.gi().s_SeverEvent(17, //mtype
    								2, //stype
    								InNumber.iNumber, 
    								0, 
    								0);
    					}
    				}
    				else
    				{
    					EasyMessage.easymsg.AddMessage("请先输入数字");
    				}
    			}
    			return true;
    		}
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }
    	InNumber.IN_IN=10;//存入
    	InNumber.IN_OUT=20;//取出
    	InNumber.IN_RID=30;//输入人物ID
    	InNumber.iNumber;
    	InNumber.iIid;


    	
     InNumber.bFinished=false;
     InNumber.bOk;
     InNumber.sTitle;

     InNumber.start=function( iid, title, num, max)
    	{
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_INNUMBER)return;
    		InNumber.iIid=iid;
    		InNumber.sTitle=title;
    		InNumber.iNumber=num;
    		var _in=XStat$1.gi().PushStat(XStat$1.GS_INNUMBER);
    		//XStat.gi().LastStat(0);
    		_in.in_num.MinMax(0, max);
    		_in.in_num.iNumber=num;
    	};
    	InNumber.end=function( iid)
    	{
    		if(InNumber.bFinished && InNumber.iIid==iid)
    		{
    			InNumber.iIid=0;
    			InNumber.bFinished=false;
    			return true;
    		}
    		return false;
    	};

    class RepairEquip extends BaseClass{

    	 constructor( ani)
        {//att[5]=耐久上限*10,0000+当前耐久*20
            super();
            this._costmoney=
            [[50000 ,55132 ,68678 ,89593 ,117319 ,151466 ,191736 ,237882 ,289700 ,347010 ,409655],
             [10000 ,11539 ,15603 ,21878 ,30196 ,40440 ,52521 ,66365 ,81910 ,99103 ,117897]
             ];

    		this.pm3f=M3DFast$1.gi();
    		var i,j,k;
    		this.iNeedTid=new Int32Array(5);//
    		this.iNeedCount=new Int32Array(5);//
    		this.iHaveCount=new Int32Array(5);//
    		this.materials=new Array(5);//
    		this.btn_detail=new Array(5);//
    		
    		for(i=0;i<5;i++)this.materials[i]=null;
    		this.btn_getfrom=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_getfrom.InitButton("1号按钮150_60");
    		this.btn_getfrom.sName="商城购买";
    		this.showgoods=new Goods();
    		for(i=0;i<5;i++)
    		{
    			this.btn_detail[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_detail[i].bSingleButton=true;
    		}
    		this.iShowDetail=-1;

    		this.equips=new Array(32);
    		var sortby=new Int32Array(32);
    		this.iCount=0;this.iWearCount=0;
    		for(i=0;i<6;i++)
    		{
    			if(MyGoods.gi().goods[1][i].iGid>0)
    			{
    				if(MyGoods.gi().goods[1][i].iAtts[0]>0)
    				{
    					k=GmPlay$1.de_goods.intValue(MyGoods.gi().goods[1][i].iTid, -1, 9)*5+100;//应该上限
    					if((MyGoods.gi().goods[1][i].iAtts[5]%100000+19)/20<MyGoods.gi().goods[1][i].iAtts[5]/100000 || MyGoods.gi().goods[1][i].iAtts[5]/100000<k)
    					{
    						sortby[this.iCount]=(MyGoods.gi().goods[1][i].iAtts[5]%100000)*10000+MyGoods.gi().goods[1][i].iAtts[5]/100000;
    						this.equips[this.iCount++]=MyGoods.gi().goods[1][i];
    						this.iWearCount++;
    					}
    				}
    			}
    		}
    		for(i=0;i<20;i++)
    		{
    			if(MyGoods.gi().goods[2][i].iGid>0)
    			{//有物品
    				if(MyGoods.gi().goods[2][i].iAtts[0]==0)continue;
    				if(GmPlay$1.de_goods.intValue(MyGoods.gi().goods[2][i].iTid, 0, 16)>=0)
    				{//是装备
    					k=GmPlay$1.de_goods.intValue(MyGoods.gi().goods[2][i].iTid, -1, 9)*5+100;//应该上限
    					if((MyGoods.gi().goods[2][i].iAtts[5]%100000+19)/20<MyGoods.gi().goods[2][i].iAtts[5]/100000 || MyGoods.gi().goods[2][i].iAtts[5]/100000<k)
    					{//耐久不足
    						sortby[this.iCount]=(MyGoods.gi().goods[2][i].iAtts[5]%100000)*10000+MyGoods.gi().goods[2][i].iAtts[5]/100000;
    						this.equips[this.iCount++]=MyGoods.gi().goods[2][i];
    					}
    				}
    			}
    		}
    		var tg;
    		for(i=0;i<this.iWearCount;i++)
    		{
    			for(j=i+1;j<this.iWearCount;j++)
    			{
    				if(sortby[j]<sortby[i])
    				{
    					k=sortby[j];
    					sortby[j]=sortby[i];
    					sortby[i]=k;
    					tg=this.equips[j];
    					this.equips[j]=this.equips[i];
    					this.equips[i]=tg;
    				}
    			}
    		}
    		for(i=this.iWearCount;i<this.iCount;i++)
    		{
    			for(j=i+1;j<this.iCount;j++)
    			{
    				if(sortby[j]<sortby[i])
    				{
    					k=sortby[j];
    					sortby[j]=sortby[i];
    					sortby[i]=k;
    					tg=this.equips[j];
    					this.equips[j]=this.equips[i];
    					this.equips[i]=tg;
    				}
    			}
    		}
    		if(this.iCount>0)this.iPoint=0;
    		else this.iPoint=-1;
    		
    		this.iW=1030;
    		this.iH=580;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_equips=new Array(this.iCount);//
    		for(i=0;i<this.iCount;i++)
    		{
    			this.btn_equips[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_equips[i].InitButton("11号按钮250_102");
    		}
    		this.btn_repairtype=new Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.btn_repairtype[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_repairtype[i].InitButton("1号按钮150_60");
    		}
    		this.btn_repairtype[0].sName="普通修理";
    		this.btn_repairtype[1].sName="特殊修理";
    		this.btn_repairtype[2].sName="装备修复";
    		
    		this.btn_repair=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_repair.InitButton("1号按钮150_60");
    		this.btn_repair.sName="修理";
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.iOffY1=0;
    		this.bLocked1=false;
    		
    		this.iOffY2=0;
    		this.bLocked2=false;
    	}

    	_open( gid, type)
    	{
    		if(type>=0 && type<=2)this.iRepairType=type;
    		else this.iRepairType=-1;
    		
    		this.LockGoods();
    	}
    	
    	
    	 Draw()
    	{
    		var i,j,k;
    		var offx,offy;
    		var tx=0,ty=0,tw;
    		DrawMode$1.new_baseframe4(this.iX, this.iY, this.iW, this.iH, "装", "备","修","理");
    		this.btn_close.Draw();
    		DrawMode$1.new_framein(this.iX+25, this.iY+25, 250+40, this.iH-50);
    		
    		
    		
    		if(!this.bLocked1)
    		{
    			if(this.iOffY1>0)this.iOffY1/=2;
    			if(this.iOffY1<0)
    			{
    				if(this.iDestH1<this.iY+this.iH-45)
    				{
    					i=this.iY+this.iH-45-this.iDestH1;
    					this.iOffY1+=i/2;
    				}
    			}
    		}
    		
    		if(!this.bLocked2)
    		{
    			if(this.iOffY2>0)this.iOffY2/=2;
    			if(this.iOffY2<0)
    			{
    				if(this.iDestH2<220-20)
    				{
    					i=220-20-this.iDestH2;
    					this.iOffY2+=i/2;
    				}
    			}
    		}
    		
    		offx=this.iX+25+20;
    		offy=this.iY+25+20+this.iOffY1;
    //		offw=250;
    //		offh=this.iH-50-40;
    		this.pm3f.SetViewClip(this.iX+25+20, this.iY+25+20, this.iX+25+20+250, this.iY+this.iH-25-20);
    		for(i=0;i<this.iCount;i++)
    		{
    			this.btn_equips[i].Move(offx,offy,250, 102);
    			if(i==this.iPoint)this.btn_equips[i].setdown();
    			this.btn_equips[i].Draw();
    			
    			GmPlay$1.xani_nui3.DrawAnima(offx+11, offy+11, "物品格子",0);
    			GmPlay$1.xani_ngoods.DrawAnima_aa(offx+11, offy+11, GmPlay$1.de_goods.strValue(this.equips[i].iTid, 0, 10),0);
    			if(i<this.iWearCount)
    			{//已穿戴
    				GmPlay$1.xani_other.DrawAnima(offx+11+80, offy+11, "已装备标签",0);
    			}
    			k=Math.floor(this.equips[i].iAtts[5]/100000);
    			j=Math.floor((this.equips[i].iAtts[5]%100000)/20);
    			if(j==0)GmPlay$1.xani_other.DrawAnima(offx+11, offy+11+80, "耐久度过低",1);
    			else if(j<50)GmPlay$1.xani_other.DrawAnima(offx+11, offy+11+80, "耐久度过低",0);
    			
    //			M3DFast.gi().DrawText_2(dx, dy, s, c, size, ab, sw, sh, ra, ratx, raty, type, c2)
    			M3DFast$1.gi().DrawText_2(offx+11+80+10,offy+11+5,GmPlay$1.de_goods.strValue(this.equips[i].iTid, 0, 4),0xfffeec7e,30,101,1,1,0,0,0,3,0xff01152e);
    			
    			M3DFast$1.gi().DrawTextEx(offx+11+80+10, offy+11+80-5, "耐久度"+j+"/"+k, 0xfffeec7e, 20, 101, 1, 1, 0, 0, -3);
    			offy+=105;
    		}
    		this.iDestH1=offy;
    		this.pm3f.NoClip();
    		
    		DrawMode$1.new_framein(this.iX+25+250+40+20, this.iY+25, 670, this.iH-50);
    		
    		offx=this.iX+25+250+40+20+20;
    		offy=this.iY+25+20;
    		DrawMode$1.frame_type4("2号框20_20", offx, offy, 220, 220, 20, 20);
    		DrawMode$1.frame_type4("2号框20_20", offx+220+20, offy, 220, 220, 20, 20);
    		
    		for(i=0;i<3;i++)
    		{
    			this.btn_repairtype[i].Move(offx+220+20+220+20, offy+i*80, 150, 60);
    			if(i==this.iRepairType)this.btn_repairtype[i].setdown();
    			this.btn_repairtype[i].Draw();
    		}
    		if(this.iPoint>=0 && this.iPoint<this.iCount)
    		{
    			i=this.iPoint;
    			GmPlay$1.xani_nui3.DrawAnima(offx+70, offy+70, "物品格子",0);
    			GmPlay$1.xani_ngoods.DrawAnima_aa(offx+70, offy+70, GmPlay$1.de_goods.strValue(this.equips[i].iTid, 0, 10),0);
    			if(i<this.iWearCount)
    			{//已穿戴
    				GmPlay$1.xani_other.DrawAnima(offx+70+80, offy+70, "已装备标签",0);
    			}
    			M3DFast$1.gi().DrawText_2(offx+70+40,offy+70+80+10,GmPlay$1.de_goods.strValue(this.equips[i].iTid, 0, 4),0xfffeec7e,30,101,1,1,0,-2,0,3,0xff01152e);
    			
    			this.DrawAtts(offx+220+20+10,offy+10,this.equips[i]);
    			
    			if(this.iRepairType>=0)DrawMode$1.frame_type4("2号框20_20", offx, offy+220+20, 220+20+220+20+150, 160, 20, 20);
    			tx=offx;
    			ty=offy+220+20;
    			tw=220+20+220+20+150;
    //			th=160;
    			
    			this.iELev=GmPlay$1.de_goods.intValue(this.equips[i].iTid, 0, 9);
    			this.iLimitNJ=100+this.iELev*5;
    			this.iMaxNJ=this.equips[i].iAtts[5]/100000;
    			this.iCurNJ=(this.equips[i].iAtts[5]%100000)/20;
    			this.iEType=GmPlay$1.de_goods.intValue(this.equips[i].iTid, 0, 16);
    			
    			tx=tx+tw/2;
    			
    			if(this.iRepairType==0)
    			{//普通修理
    				this.iNeedMoney=this._costmoney[this.iRepairType][this.iELev/10];
    				
    				this.btn_detail[0].Move(tx-40, ty+5,80,80);
    				GmPlay$1.xani_nui3.DrawAnima(tx-40, ty+5, "物品格子",0);
    				GmPlay$1.xani_ngoods.DrawAnima_aa(tx-40, ty+5, GmPlay$1.de_goods.strValue(this.iNeedTid[0], 0, 10),0);
    				if(this.materials[0]==null)this.pm3f.DrawText_2(tx, ty+5+80+5, "0/1", 0xfffeec7e, 20, 101, 1, 1, 0, -2, 0, 3, 0xff01152e);
    				else this.pm3f.DrawText_2(tx, ty+5+80+5, "1/1", 0xfffeec7e, 20, 101, 1, 1, 0, -2, 0, 3, 0xff01152e);
    				this.pm3f.DrawText_2(tx, ty+5+80+5+20, (this.materials[0]==null?this.iELev:this.materials[0].iAtts[0])+"级"+GmPlay$1.de_goods.strValue(this.iNeedTid[0], 0, 4), 0xfffeec7e, 20, 101, 1, 1, 0, -2, 0, 3, 0xff01152e);
    				this.pm3f.DrawTextEx(tx, ty+5+80+10+20+20, "普通修理会消耗耐久上限，耐久上限低于20%无法普通修理", 0xffffffff, 18, 101, 1, 1, 0, -2, 0);
    				
    				if(this.iNeedMoney>GmMe$1.me.rbs.iMoney)this.btn_repair.bDisable=true;//铜币不够
    				else if(this.materials[0]==null)this.btn_repair.bDisable=true;//缺少材料
    				else if(this.iMaxNJ<this.iLimitNJ/5)this.btn_repair.bDisable=true;//耐久上限低于20%
    				else this.btn_repair.bDisable=false;
    			}
    			else if(this.iRepairType==1)
    			{//特殊修理
    				this.iNeedMoney=this._costmoney[this.iRepairType][this.iELev/10];
    				
    				this.btn_detail[0].Move(tx-50-80, ty+5,80,80);
    				GmPlay$1.xani_nui3.DrawAnima(tx-50-80, ty+5, "物品格子",0);
    				GmPlay$1.xani_ngoods.DrawAnima_aa(tx-50-80, ty+5, GmPlay$1.de_goods.strValue(this.iNeedTid[0], 0, 10),0);
    				if(this.materials[0]==null)this.pm3f.DrawText_2(tx-50-40, ty+5+80+5, "0/1", 0xfffeec7e, 20, 101, 1, 1, 0, -2, 0, 3, 0xff01152e);
    				else this.pm3f.DrawText_2(tx-50-40, ty+5+80+5, "1/1", 0xfffeec7e, 20, 101, 1, 1, 0, -2, 0, 3, 0xff01152e);
    				this.pm3f.DrawText_2(tx-50-40, ty+5+80+5+20, (this.materials[0]==null?this.iELev:this.materials[0].iAtts[0])+"级"+GmPlay$1.de_goods.strValue(this.iNeedTid[0], 0, 4), 0xfffeec7e, 20, 101, 1, 1, 0, -2, 0, 3, 0xff01152e);
    				
    				this.btn_detail[1].Move(tx+50, ty+5,80,80);
    				GmPlay$1.xani_nui3.DrawAnima(tx+50, ty+5, "物品格子",0);
    				GmPlay$1.xani_ngoods.DrawAnima_aa(tx+50, ty+5, GmPlay$1.de_goods.strValue(this.iNeedTid[1], 0, 10),0);
    				this.pm3f.DrawText_2(tx+50+40, ty+5+80+5, this.iHaveCount[1]+"/"+this.iNeedCount[1], 0xfffeec7e, 20, 101, 1, 1, 0, -2, 0, 3, 0xff01152e);
    				this.pm3f.DrawText_2(tx+50+40, ty+5+80+5+20, GmPlay$1.de_goods.strValue(this.iNeedTid[1], 0, 4), 0xfffeec7e, 20, 101, 1, 1, 0, -2, 0, 3, 0xff01152e);

    				this.pm3f.DrawTextEx(tx, ty+5+80+10+20+20, "特殊修理恢复100点耐久，不会损耗耐久上限", 0xffffffff, 18, 101, 1, 1, 0, -2, 0);
    				
    				if(this.iNeedMoney>GmMe$1.me.rbs.iMoney)this.btn_repair.bDisable=true;//铜币不够
    				else if(this.materials[0]==null)this.btn_repair.bDisable=true;//缺少材料
    				else if(this.iHaveCount[1]<this.iNeedCount[1])this.btn_repair.bDisable=true;//缺少洛池水
    				else this.btn_repair.bDisable=false;
    			}
    			else if(this.iRepairType==2)
    			{//装备修复
    				this.iNeedMoney=0;
    				
    				this.btn_detail[0].Move(tx-40, ty+5,80,80);
    				GmPlay$1.xani_nui3.DrawAnima(tx-40, ty+5, "物品格子",0);
    				GmPlay$1.xani_ngoods.DrawAnima_aa(tx-40, ty+5, GmPlay$1.de_goods.strValue(this.iNeedTid[0], 0, 10),0);
    				this.pm3f.DrawText_2(tx, ty+5+80+5, this.iHaveCount[0]+"/"+this.iNeedCount[0], 0xfffeec7e, 20, 101, 1, 1, 0, -2, 0, 3, 0xff01152e);
    				this.pm3f.DrawText_2(tx, ty+5+80+5+20, GmPlay$1.de_goods.strValue(this.iNeedTid[0], 0, 4), 0xfffeec7e, 20, 101, 1, 1, 0, -2, 0, 3, 0xff01152e);
    				this.pm3f.DrawTextEx(tx, ty+5+80+10+20+20, "装备修复可以完全修复装备耐久和耐久上限", 0xffffffff, 18, 101, 1, 1, 0, -2, 0);
    				
    				if(this.iHaveCount[0]<this.iNeedCount[0])this.btn_repair.bDisable=true;//耐久上限低于20%
    				else this.btn_repair.bDisable=false;
    			}
    			else this.btn_repair.bDisable=true;
    			
    			DrawMode$1.ui3_Text1(offx, offy+220+20+160+20, 100, 220, "需要铜币", ""+(this.iRepairType<0?"":this.iNeedMoney));
    			DrawMode$1.ui3_Text1(offx, offy+220+20+160+20+40, 100, 220, "拥有铜币", ""+GmMe$1.me.rbs.iMoney);
    			
    			this.btn_repair.Move(this.iX+this.iW-25-20-150, this.iY+this.iH-25-20-60, 150, 60);

    			this.btn_repair.Draw();
    			
    			this.LockGoods();
    		}
    		
    		if(this.iShowDetail>=0)
    		{
    			if(this.iRepairType==0)
    			{
    				this.showgoods.SetAtt(1, this.iNeedTid[0], 1, this.iELev, 0, 0, 0, 0, 0, 0, 0);
    				
    				if(this.materials[0]==null)
    				{
    					GoodsDraw.detail_add="#e#cc8bfe7获取途径：1生活技能  2手艺任务";
    					GoodsDraw.new_DrawDetail(this.showgoods, this.btn_detail[0].iX, this.btn_detail[0].iY, 0);
    					GoodsDraw.detail_add="";
    				}
    				else GoodsDraw.new_DrawDetail(this.materials[0], this.btn_detail[0].iX, this.btn_detail[0].iY, 0);
    			}
    			else if(this.iRepairType==1)
    			{
    				if(this.iShowDetail==0)
    				{
    					this.showgoods.SetAtt(1, this.iNeedTid[0], 1, this.iELev, 0, 0, 0, 0, 0, 0, 0);
    					
    					if(this.materials[0]==null)
    					{
    						GoodsDraw.detail_add="#e#cc8bfe7获取途径：1生活技能  2手艺任务";
    						GoodsDraw.new_DrawDetail(this.showgoods, this.btn_detail[0].iX, this.btn_detail[0].iY, 0);
    						GoodsDraw.detail_add="";
    					}
    					else GoodsDraw.new_DrawDetail(this.materials[0], this.btn_detail[0].iX, this.btn_detail[0].iY, 0);
    				}
    				else if(this.iShowDetail==1)
    				{
    					this.showgoods.SetAtt(1, this.iNeedTid[1], 1, 0, 0, 0, 0, 0, 0, 0, 0);
    					
    					if(this.materials[1]==null || this.iHaveCount[1]<this.iNeedCount[1])
    					{
    						GoodsDraw.detail_add="#e#cc8bfe7获取途径：";
    						GoodsDraw.new_DrawDetail(this.showgoods, this.btn_detail[1].iX, this.btn_detail[1].iY, 60+20);
    						GoodsDraw.detail_add="";
    						this.btn_getfrom.Move(GoodsDraw.iDetailX+GoodsDraw.iDetailW/2-150/2, GoodsDraw.iDetailY+GoodsDraw.iDetailH-60-20, 150, 60);
    						this.btn_getfrom.Draw();
    					}
    					else GoodsDraw.new_DrawDetail(this.materials[1], this.btn_detail[1].iX, this.btn_detail[1].iY, 0);
    				}
    			}
    			else if(this.iRepairType==2)
    			{
    				this.showgoods.SetAtt(1, this.iNeedTid[0], 1, 0, 0, 0, 0, 0, 0, 0, 0);
    				
    				if(this.materials[0]==null || this.iHaveCount[0]<this.iNeedCount[0])
    				{
    					GoodsDraw.detail_add="#e#cc8bfe7获取途径：";
    					GoodsDraw.new_DrawDetail(this.showgoods, this.btn_detail[0].iX, this.btn_detail[0].iY, 60+20);
    					GoodsDraw.detail_add="";
    					this.btn_getfrom.Move(GoodsDraw.iDetailX+GoodsDraw.iDetailW/2-150/2, GoodsDraw.iDetailY+GoodsDraw.iDetailH-60-20, 150, 60);
    					this.btn_getfrom.Draw();
    				}
    				else GoodsDraw.new_DrawDetail(this.materials[0], this.btn_detail[0].iX, this.btn_detail[0].iY, 0);
    			}
    		}
    	}
    	DrawAtts( x, y, g)
    	{
    		this.iDAX=x;
    		this.iDAY=y;
    		var i,j,m,n;
    		var s="基本属性";
    		var sLev="等级："+GmPlay$1.de_goods.strValue(g.iTid, -1, 9);
    		var add1,add2;
    		var bs_base=[8,12,40,8,6];//攻，防，血，速，灵
    		var bs_add=[0,0,0,0,0];
    		add1 = Math.floor(g.iAtts[0]/10000);//基本属性加成
    		add2 = g.iAtts[0]%10000;
    		i = Math.floor(g.iAtts[2]/10000);//宝石1加成
    		if(i>0) bs_add[Math.floor(i/1000)] = bs_base[Math.floor(i/1000)]*(i%1000);
    		i = g.iAtts[2]%10000;//宝石2加成

    		if(i > 0) bs_add[Math.floor(i/1000)] = bs_base[Math.floor(i/1000)]*(i%1000);
    		
    		var type=GmPlay$1.de_goods.intValue(g.iTid, -1, 16);
    		var sType="";
    		switch(type)
    		{
    		case 0:
    			sType="类型：头盔";
    			s+="#e# #cffff00防御 +"+Math.floor(GmPlay$1.de_goods.intValue(g.iTid, -1, 21)+add1+bs_add[1]);
    			s+="#e# #cffff00魔法 +"+Math.floor(GmPlay$1.de_goods.intValue(g.iTid, -1, 22)+add2);
    			bs_add[1]=0;
    			break;
    		case 1://饰品
    			sType="类型：饰品";
    			s+="#e# #cffff00灵力 +"+Math.floor(GmPlay$1.de_goods.intValue(g.iTid, -1, 23)+add2+bs_add[4]);
    			bs_add[4]=0;
    			break;
    		case 2://武器
    			j=GmPlay$1.de_goods.intValue(g.iTid, -1, 19);
    			if(j==0)sType="类型：武器(剑)";
    			else if(j==1)sType="类型：武器(刀)";
    			else sType="类型：武器(枪)";
    //			sType="类型：武器";
    			s+="#e# #cffff00伤害 +"+Math.floor(GmPlay$1.de_goods.intValue(g.iTid, -1, 3)+add2+bs_add[0]);
    			bs_add[0]=0;
    			break;
    		case 3://铠甲
    			j=GmPlay$1.de_goods.intValue(g.iTid, -1, 20);
    			if(j==0)sType="类型：女衣";
    			else sType="类型：铠甲";
    			s+="#e# #cffff00防御 +"+Math.floor(GmPlay$1.de_goods.intValue(g.iTid, -1, 21)+add2+bs_add[1]);
    			bs_add[1]=0;
    			break;
    		case 4://腰带
    			sType="类型：腰带";
    			s+="#e# #cffff00防御 +"+Math.floor(GmPlay$1.de_goods.intValue(g.iTid, -1, 21)+add1+bs_add[1]);
    			s+="#e# #cffff00气血 +"+Math.floor(GmPlay$1.de_goods.intValue(g.iTid, -1, 24)+add2+bs_add[2]);
    			bs_add[1]=0;
    			bs_add[2]=0;
    			break;
    		case 5://鞋子
    			sType="类型：鞋子";
    			s+="#e# #cffff00防御 +"+Math.floor(GmPlay$1.de_goods.intValue(g.iTid, -1, 21)+add1+bs_add[1]);
    			s+="#e# #cffff00速度 +"+Math.floor(GmPlay$1.de_goods.intValue(g.iTid, -1, 25)+add2+bs_add[3]);
    			bs_add[1]=0;
    			bs_add[3]=0;
    			break;
    		}

    		if(bs_add[0]>0)s+="#e# 伤害 +"+bs_add[0];
    		if(bs_add[1]>0)s+="#e# 防御 +"+bs_add[1];
    		if(bs_add[2]>0)s+="#e# 气血 +"+bs_add[2];
    		if(bs_add[3]>0)s+="#e# 速度 +"+bs_add[3];
    		if(bs_add[4]>0)s+="#e# 灵力 +"+bs_add[4];

    		add1 = Math.floor(g.iAtts[1]/10000);
    		add2 = g.iAtts[1]%10000;

    		if(add1>0)
    		{
    			const add = Math.floor(add1/1000);
    			if(add==0)s+="#e# #c00ff00体质 +"+add1%1000;
    			else if(add==1)s+="#e# #c00ff00法力 +"+add1%1000;
    			else if(add==2)s+="#e# #c00ff00力量 +"+add1%1000;
    			else if(add==3)s+="#e# #c00ff00耐力 +"+add1%1000;
    			else if(add==4)s+="#e# #c00ff00敏捷 +"+add1%1000;
    		}
    		if(add2>0)
    		{
    			const add = Math.floor(add2/1000);
    			if(add1<=0)s+="#e# #c00ff00";
    			else s+=" ";
    			if(add==0)s+="体质 +"+add2%1000;
    			else if(add==1)s+="法力 +"+add2%1000;
    			else if(add==2)s+="力量 +"+add2%1000;
    			else if(add==3)s+="耐力 +"+add2%1000;
    			else if(add==4)s+="敏捷 +"+add2%1000;
    		}
    		if(g.iAtts[4]>0)
    		{//特技特效
    			i=(g.iAtts[4]>>20)&0x3ff;//无级别简易
    			if(i>0)
    			{
    				s+="#e# #cff8020"+GmPlay$1.de_skill.strValue(i, 0, 6);//技能名称
    			}
    			i=(g.iAtts[4]>>10)&0x3ff;//特效
    			if(i>0)
    			{
    				s+="#e# #c80c0ff特效 : "+GmPlay$1.de_skill.strValue(i, 0, 6);//技能名称
    			}
    			i=g.iAtts[4]&0x3ff;//特技
    			if(i>0)
    			{
    				s+="#e# #c80c0ff特技 : "+GmPlay$1.de_skill.strValue(i, 0, 6);//技能名称
    			}
    		}
    		s+="#e# #cffffff耐久度 : "+Math.floor((g.iAtts[5]%100000+19)/20)+"/"+Math.floor(g.iAtts[5]/100000);

    		m= Math.floor(g.iAtts[2]/10000);
    		n=g.iAtts[2]%10000;
    		if(m>0 || n>0)
    		{//
    			s+="#e #cb48cc8镶嵌等级 : "+(m%1000+n%1000);
    			s+="#e# 已镶嵌 : ";
    			if(m>0)s+=GmPlay$1.de_goods.strValue(Math.floor(m/1000)+101, 0, 4);
    			if(n>0)s+=","+GmPlay$1.de_goods.strValue(Math.floor(n/1000)+101, 0, 4);
    		}
    		g.CalcSetScore();
    		if(g.iScore>0)s+="#e# #cffffff评分："+g.iScore;

    		i= Math.floor(g.iAtts[3]/10000);//强化等级
    //		if(i>0)sName+=" +"+i;
    		var tt=sType+"#e"+sLev+"#e"+s;
    //		GmPlay.sop(tt);
    		this.pm3f.SetViewClip(x,y,x+200,y+200);
    		this.pm3f.DrawText_2(x, y+this.iOffY2, "装备属性", 0xfffeec7e, 24, 101, 1, 1, 0, 0, 0, 3, 0xff01152e);
    		FormatString.gi().FormatEx(tt, 200, 20, 0, 0, 22);
    		FormatString.gi().Draw(x, y+this.iOffY2+26);
    		this.iDestH2=FormatString.gi().iH+this.iOffY2+26;
    		this.pm3f.NoClip();
    	}
    	 ProcTouch( msg, x, y)
    	{
    		if(this.iShowDetail>=0)
    		{
    			if((this.iRepairType==1 && this.iShowDetail==1) || this.iRepairType==2)
    			{
    				if(this.btn_getfrom.ProcTouch(msg, x, y))
    				{
    					if(this.btn_getfrom.bCheck())
    					{
    						GmProtocol$1.gi().s_IngotMall(1, 0);
    						this.btn_getfrom.SetNormal();
    					}
    				}
    			}
    			if(msg==3)this.iShowDetail=-1;
    			return true;
    		}
    		var i,j;
    		if(msg==3)
    		{
    			if(this.bLocked1)
    			{
    				this.bLocked1=false;
    				return true;
    			}
    			if(this.bLocked2)
    			{
    				this.bLocked2=false;
    				return true;
    			}
    		}
    		if(msg==2)
    		{
    			if(this.bLocked1)
    			{
    				i=this.iLockY1-y;
    				this.iOffY1-=i;
    				this.iLockY1=y;
    				return true;
    			}
    			if(this.bLocked2)
    			{
    				i=this.iLockY2-y;
    				this.iOffY2-=i;
    				this.iLockY2=y;
    				return true;
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		for(i=0;i<this.iCount;i++)
    		{
    			if(this.btn_equips[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_equips[i].bCheck())
    				{
    					this.iPoint=i;
    					for(j=0;j<5;j++)this.materials[j]=null;
    					this.LockGoods();//锁定背包中物品
    				}
    			}
    		}
    		for(i=0;i<3;i++)
    		{
    			if(this.btn_repairtype[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_repairtype[i].bCheck())
    				{
    					this.iRepairType=i;
    					for(j=0;j<5;j++)this.materials[j]=null;
    					this.LockGoods();//锁定背包中物品
    				}
    			}
    		}

    		if(this.btn_detail[0].ProcTouch(msg,x,y))
    		{
    			if(this.btn_detail[0].bCheck())
    			{
    				this.iShowDetail=0;
    			}
    		}
    		if(this.iRepairType==1)
    		{
    			if(this.btn_detail[1].ProcTouch(msg,x,y))
    			{
    				if(this.btn_detail[1].bCheck())
    				{
    					this.iShowDetail=1;
    				}
    			}
    		}

    		if(this.btn_repair.ProcTouch(msg, x, y))
    		{
    			if(this.btn_repair.bCheck())
    			{
    				GmProtocol$1.gi().s_UseSkill(11, this.equips[this.iPoint].iGid, this.iRepairType, 0, 0, 0, 0);
    //				XStat.gi().PopStat(1);
    			}
    		}
    		if(XDefine$1.bInRect(x, y, this.iX+25, this.iY+25, 250+40, this.iH-50))
    		{
    			if(msg==1)this.iLockY1=y;
    			if(msg==2)
    			{
    				if(!this.bLocked1)
    				{
    					i=this.iLockY1-y;
    					if(i<-15 || i>15)
    					{//取消按键按下状态
    						this.bLocked1=true;
    						for(i=0;i<this.iCount;i++)
    						{
    							this.btn_equips[i].SetNormal();
    						}
    					}
    				}
    			}
    		}
    		if(XDefine$1.bInRect(x, y, this.iDAX, this.iDAY,220, 220))
    		{
    			if(msg==1)this.iLockY2=y;
    			if(msg==2)
    			{
    				if(!this.bLocked2)
    				{
    					i=this.iLockY2-y;
    					if(i<-15 || i>15)
    					{//取消按键按下状态
    						this.bLocked2=true;
    					}
    				}
    			}
    		}
    		return false;
    	}
    	
    	 LockGoods()
    	{
    		var i;
    		for(i=0;i<5;i++)this.materials[i]=null;
    		i=this.iPoint;
    		var type=this.iRepairType;
    		if(i<0)return;
    		this.iELev=GmPlay$1.de_goods.intValue(this.equips[i].iTid, 0, 9);
    		this.iLimitNJ=100+this.iELev*5;
    		this.iMaxNJ=this.equips[i].iAtts[5]/100000;
    		this.iCurNJ=(this.equips[i].iAtts[5]%100000)/20;
    		this.iEType=GmPlay$1.de_goods.intValue(this.equips[i].iTid, 0, 16);
    	
    		if(type==0)
    		{//普通，需要手艺
    			this.iNeedCount[0]=1;
    			if(this.iEType==0 || this.iEType==4)this.iNeedTid[0]=98;
    			else if(this.iEType==1 || this.iEType==2)this.iNeedTid[0]=99;
    			else if(this.iEType==3 || this.iEType==5)this.iNeedTid[0]=100;

    			for(i=0;i<20;i++)
    			{
    				if(MyGoods.gi().goods[2][i].iGid>0 && MyGoods.gi().goods[2][i].iTid==this.iNeedTid[0] && MyGoods.gi().goods[2][i].iAtts[0]>=this.iELev)
    				{
    					if(this.materials[0]==null)this.materials[0]=MyGoods.gi().goods[2][i];
    					else if(this.materials[0].iAtts[0]>MyGoods.gi().goods[2][i].iAtts[0])this.materials[0]=MyGoods.gi().goods[2][i];
    					else if(this.materials[0].iAtts[1]>MyGoods.gi().goods[2][i].iAtts[1])this.materials[0]=MyGoods.gi().goods[2][i];
    				}
    			}
    		}
    		else if(type==1)
    		{//洛池水特殊修理
    			this.iNeedCount[0]=1;
    			if(this.iEType==0 || this.iEType==4)this.iNeedTid[0]=98;
    			else if(this.iEType==1 || this.iEType==2)this.iNeedTid[0]=99;
    			else if(this.iEType==3 || this.iEType==5)this.iNeedTid[0]=100;
    			for(i=0;i<20;i++)
    			{
    				if(MyGoods.gi().goods[2][i].iGid>0 && MyGoods.gi().goods[2][i].iTid==this.iNeedTid[0] && MyGoods.gi().goods[2][i].iAtts[0]>=this.iELev)
    				{
    					if(this.materials[0]==null)this.materials[0]=MyGoods.gi().goods[2][i];
    					else if(this.materials[0].iAtts[0]>MyGoods.gi().goods[2][i].iAtts[0])this.materials[0]=MyGoods.gi().goods[2][i];
    					else if(this.materials[0].iAtts[1]>MyGoods.gi().goods[2][i].iAtts[1])this.materials[0]=MyGoods.gi().goods[2][i];
    				}
    			}
    			
    			this.iNeedTid[1]=399;
    			if(this.iELev<=40)this.iNeedCount[1]=1;
    			else if(this.iELev<=60)this.iNeedCount[1]=2;
    			else if(this.iELev<=80)this.iNeedCount[1]=3;
    			else this.iNeedCount[1]=4;
    			this.iHaveCount[1]=0;
    			for(i=0;i<20;i++)
    			{
    				if(MyGoods.gi().goods[2][i].iGid>0 && MyGoods.gi().goods[2][i].iTid==this.iNeedTid[1])
    				{
    					if(this.materials[1]==null)this.materials[1]=MyGoods.gi().goods[2][i];
    					this.iHaveCount[1]+=MyGoods.gi().goods[2][i].iCount;
    				}
    			}
    			if(this.iHaveCount[1]>this.iNeedCount[1])this.iHaveCount[1]=this.iNeedCount[1];
    		}
    		else if(type==2)
    		{//需要1个
    			this.iNeedTid[0]=400;
    			if(this.iELev<=40)this.iNeedCount[0]=3;
    			else if(this.iELev<=60)this.iNeedCount[0]=4;
    			else if(this.iELev<=80)this.iNeedCount[0]=5;
    			else this.iNeedCount[0]=6;
    			this.iHaveCount[0]=0;
    			for(i=0;i<20;i++)
    			{
    				if(MyGoods.gi().goods[2][i].iGid>0 && MyGoods.gi().goods[2][i].iTid==this.iNeedTid[0])
    				{
    					if(this.materials[0]==null)this.materials[0]=MyGoods.gi().goods[2][i];
    					this.iHaveCount[0]+=MyGoods.gi().goods[2][i].iCount;
    				}
    			}
    			if(this.iHaveCount[0]>this.iNeedCount[0])this.iHaveCount[0]=this.iNeedCount[0];
    		}
    	}
    }
    RepairEquip.Open=function( gid, type)
    {
        var re;
        if(XStat$1.gi().iXStat==XStat$1.GS_REPAIREQUIP)
        {
            re=XStat$1.gi().oCurrentView;
        }
        else
        {
            re=XStat$1.gi().PushStat(XStat$1.GS_REPAIREQUIP);
        }
        re._open(gid, type);
        
        if (re.iCount <= 0)
        {
            FrameMessage.fm.Open("当前没有可修理的装备，只有有附加属性或者经过强化的装备才能修理。");
            XStat$1.gi().PopStat(1);
        }
    };

    class CreateFT extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=400;
    		this.iH=410;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.in_ftname=new XInput(GmPlay$1.xani_frame);
    		this.in_ftname.Move(this.iX + 20, this.iY + 100, this.iW - 40, 60);
    		this.in_ftname.bHideText=true;
    		
    		this.in_ftdetail=new XInput(GmPlay$1.xani_frame);
    		this.in_ftdetail.Move(this.iX + 20, this.iY + 200, this.iW - 40, 120);
    		this.in_ftdetail.bHideText=true;
    		
    		this.btn_create=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_create.Move(this.iX + this.iW - 20-90, this.iY + this.iH - 20 - 60, 90, 60);
    		this.btn_create.InitButton("1号按钮90_60");
    		this.btn_create.sName="创建";
    		
    		this.btn_cancel=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_cancel.Move(this.iX + 20, this.iY + this.iH - 20 - 60, 90, 60);
    		this.btn_cancel.InitButton("1号按钮90_60");
    		this.btn_cancel.sName="取消";
    	}
    	
    	Draw()
    	{
    		DrawMode$1.frame_type4("10号框20_20", this.iX, this.iY, this.iW, this.iH, 20, 20);
    		this.pm3f.DrawText_2(this.iX + this.iW / 2, this.iY + 20, "创建战队", 0xfffeec7e, 32, 101, 1, 1, 0, -2, 0, 2, 0xff01152e);
    		
    		this.pm3f.DrawText_2(this.in_ftname.iX, this.in_ftname.iY - 30, "输入战队名称：", 0xfffeec7e, 28, 101, 1, 1, 0, 0, 0, 2, 0xff01152e);
    		DrawMode$1.frame_type4("8号框20_20", this.in_ftname.iX, this.in_ftname.iY, this.in_ftname.iW, this.in_ftname.iH, 20, 20);
    		FormatString.gi().Format("#c114e61"+this.in_ftname.sDetail, this.in_ftname.iW-10, 30);//"#c000000"+
    		FormatString.gi().Draw(this.in_ftname.iX+5, this.in_ftname.iY+5);
    		
    		this.pm3f.DrawText_2(this.in_ftdetail.iX, this.in_ftdetail.iY - 30, "输入战队简介：", 0xfffeec7e, 28, 101, 1, 1, 0, 0, 0, 2, 0xff01152e);
    		DrawMode$1.frame_type4("8号框20_20", this.in_ftdetail.iX, this.in_ftdetail.iY, this.in_ftdetail.iW, this.in_ftdetail.iH, 20, 20);
    		FormatString.gi().Format("#c114e61"+this.in_ftdetail.sDetail, this.in_ftdetail.iW-10, 30);//"#c000000"+
    		FormatString.gi().Draw(this.in_ftdetail.iX+5, this.in_ftdetail.iY+5);
    		
    		this.btn_create.Draw();
    		this.btn_cancel.Draw();

    		this.in_ftname.onscr();
    		this.in_ftdetail.onscr();
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		this.in_ftname.ProcTouch(msg, x, y);
    		this.in_ftdetail.ProcTouch(msg, x, y);
    		
    		if(this.btn_create.ProcTouch(msg, x, y))
    		{
    			if(this.btn_create.bCheck())
    			{//检测文字是否合理，创建帮派
    					if(this.in_ftname.sDetail.length<2 || this.in_ftname.sDetail.length>8)
    					{
    						EasyMessage.easymsg.AddMessage("战队名称2-8个字");
    						return true;
    					}
    					
    					if(this.in_ftdetail.sDetail.length<2 || this.in_ftdetail.sDetail.length>40)
    					{
    						EasyMessage.easymsg.AddMessage("战队宗旨2-40个字");
    						return true;
    					}

    				//发送创建请求
    				GmProtocol$1.gi().s_CreateFT(this.in_ftname.sDetail, this.in_ftdetail.sDetail);
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{//
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}

    		if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))return true;
    		return false;
    	}
    }

    CreateFT.Open=function()
    {
        XStat$1.gi().PushStat(XStat$1.GS_CREATEFT);
    };

    //战队
    class MyFT {
    //	public int iFTid;
    //	public int iFTJob;//0队长，1副队长
    	
    	
    	
    	constructor()
    	{
    		this.iFTid=0;
    	}
    }
    MyFT.mft=new MyFT();

    class ApplyGovFight extends BaseClass{
    	
    	constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=460;
    		this.iH=420;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_ok=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_ok.InitButton("1号按钮90_60");
    		this.btn_ok.Move(this.iX + 30, this.iY + this.iH - 30-60, 90, 60);
    		this.btn_ok.sName="报名";

    		this.btn_cancel=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_cancel.InitButton("1号按钮90_60");
    		this.btn_cancel.Move(this.iX + this.iW - 30 - 90, this.iY + this.iH - 30-60, 90, 60);
    		this.btn_cancel.sName="取消";

    		this.in_price=new XInput(GmPlay$1.xani_frame);
    		this.in_price.Move(this.iX + 180, this.iY + 80, 200, 50);
    		this.in_price.sDetail="500000";
    		this.in_price.bNumber=true;
    		this.in_price.iTextSize=30;
    		this.in_price.iMaxNumber=99999999;//2147483647;
    		this.in_price.iTextColor = 0xff114e61;
    	}

    	Draw()
    	{
    		DrawMode$1.frame_type4("10号框20_20", this.iX, this.iY, this.iW, this.iH, 20, 20);
    		
    		M3DFast$1.gi().DrawText_2(this.iX + this.iW / 2, this.iY + 30, "帮战报名", 0xfffeec7e, 32, 100, 1, 1, 0, -2, 0, 2, 0xff01152e);
    		M3DFast$1.gi().DrawText_2(this.iX + 35, this.iY + 90, "竞选资金:", 0xfffeec7e, 30, 100, 1, 1, 0, 0, 0, 2, 0xff01152e);
    //		DrawMode.DrawFrame1(this.in_price.iX, this.in_price.iY, this.in_price.iW, this.in_price.iH);
    //		this.in_price.Draw();
    		DrawMode$1.frame_type4("8号框20_20",this.in_price.iX, this.in_price.iY, this.in_price.iW,this.in_price.iH,20,20);
    		this.in_price.DrawText();
    		this.in_price.onscr();
    		
    		FormatString.gi().Format("#c114e611,帮战报名时间: 每周四12:00:00~周五18:00:00#e2,竞选要求当前帮派资金>=100万#e3,竞选资金最低为50万，且不能超过[当前帮派资金/3]#e4,周五19:00:00，按竞选资金数额顺序，前8名获得本周帮战资格，系统自动扣除竞选资金(如当前帮派资金低于100万，或低于[竞选资金+(帮派等级+1)*50万]时，取消帮战资格)。", this.iW-40, 18);
    		FormatString.gi().Draw(this.iX+20, this.iY+160);
    		
    		this.btn_ok.Draw();
    		this.btn_cancel.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		this.in_price.ProcTouch(msg, x, y);
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{//确定报名
    				i=parseInt(this.in_price.sDetail);
    				if(i<500000)EasyMessage.easymsg.AddMessage("竞选资金不能低于50万");
    				else
    				{
    					GmProtocol$1.gi().s_SeverEvent(10, 1, i, 0, 0);
    					XStat$1.gi().PopStat(1);
    				}
    			}
    		}
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }
    ApplyGovFight.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_APPLYGOVFIGHT);
    };

    //丹方合并
    class RemedyMerge extends BaseClass{

    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=30+420+430+40+30;
    		this.iH=345+40+60+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_goods=new Array(8);//
    		this.gmake=new Array(8);//
    		this.igsub=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.btn_goods[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_goods[i].InitButton("物品格");
    			
    			this.gmake[i]=null;
    			this.igsub[i]=1;
    		}
    		//(this.iX+10,this.iY+65,360,this.iH-75)//360=60*2+x*3
    		this.btn_goods[0].Move(this.iX+35+80, this.iY+120, 80, 80);//装备/宝石
    		this.btn_goods[1].Move(this.iX+35+80+(60+80), this.iY+120, 80, 80);//宝石
    		
    		this.btn_make=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_make.InitButton("按钮1_110");
    		this.btn_make.sName="合并";
    		
    	}
    	Draw()
    	{
    		var i,offx,offy;
    		DrawMode$1.new_baseframe4(this.iX, this.iY, this.iW, this.iH, "丹", "方","合","并");
    		this.btn_close.Draw();
    		GmPlay$1.xani_nui3.DrawAnima(this.iX+230, this.iY+200, "炼丹炉背景",0);
    		offx=this.iX+this.iW-30-430-40;
    		offy=this.iY+30;
    		DrawMode$1.new_framein(offx,offy, 430+40, this.iH-60);
    		
    		M3DFast$1.gi().DrawTextEx(offx+20, offy+20, "双击选择丹方：", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		this.iGx=offx+20;
    		this.iGy=offy+20+30;
    		GoodsDraw.new_DrawGoods(this.iGx,this.iGy, MyGoods.gi().goods[2], this.gmake,this.igsub);
    		if(this.lockgoods!=null)GoodsDraw.new_DrawRect(this.iGx,this.iGy, MyGoods.gi().goods[2], this.lockgoods, 0);
    		
    		for(i=0;i<2;i++)
    		{
    			GmPlay$1.xani_nui3.DrawAnima(this.btn_goods[i].iX,this.btn_goods[i].iY, "物品格子",0);
    //			this.btn_goods[i].Draw();
    			if(this.gmake[i]!=null)
    			{
    				GoodsDraw.new_DrawOneGoods_ext(this.btn_goods[i].iX, this.btn_goods[i].iY, this.gmake[i], 1);
    			}
    		}
    		offy=this.iY+this.iH-30-160;
    		DrawMode$1.new_framein(this.iX+30, offy, 400, 160);
    		var s="#c003e57"+this.Check();
    		FormatString.gi().FormatEx(s, 360, 25, 0, 0, 30);
    		FormatString.gi().Draw(this.iX+30+20, offy+20);
    //		this.pm3f.DrawTextEx(this.iX+30+10, this.iY+300+10, , 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		this.btn_make.Move(this.iX+30+400-20-110, offy+160-20-52, 110, 52);
    		if(this.iCanMake==1)
    		{
    			this.btn_make.sName="合并";
    			this.btn_make.Draw();
    		}
    		else if(this.iCanMake==2)
    		{
    			this.btn_make.sName="镶嵌";
    			this.btn_make.Draw();
    		}
    		else if(this.iCanMake==3)
    		{
    			this.btn_make.sName="使用";
    			this.btn_make.Draw();
    		}
    		
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	Check()
    	{
    		var i,j,m,n;
    		var type,lev;
    		this.iCanMake=0;
    		if(this.gmake[0]==null)
    		{
    			return "请先放入需要合并的丹方";
    		}
    		//有图纸，检查手艺，和所需材料
    		type=GmPlay$1.de_goods.intValue(this.gmake[0].iTid, -1, 16);//装备类型
    		if(type==-1)
    		{//第一格是宝石，判断第二格
    			if(this.gmake[1]==null)
    			{
    				return "请先放入同等级丹方进行合并";
    			}
    			else if(this.gmake[1].iTid!=this.gmake[0].iTid)
    			{
    				return "丹方等级不同，不能合成";
    			}
    			this.iCanMake=1;
    			return "#c00ff00可以合并";
    		}
    		return "#c00ff00放入物品错误";
    /*		else
    		{//第一格是装备，判断宝石是否可打到装备上
    			//根据装备类型，判断宝石是否可镶嵌种类
    			if(this.gmake[1]!=null && this.gmake[1].iTid==229)
    			{
    				this.iCanMake=3;
    				return "碎石锤可以除去装备上的宝石";
    			}
    			switch(type)
    			{
    			case 0:
    				if(this.gmake[1]==null)return "放入红宝石或月光石进行镶嵌";
    				else if(this.gmake[1].iTid!=101 && this.gmake[1].iTid!=102)return "只能镶嵌红宝石或月光石";
    				break;
    			case 1:
    				if(this.gmake[1]==null)return "放入碧玺石进行镶嵌";
    				else if(this.gmake[1].iTid!=105)return "只能镶嵌碧玺石";
    				break;
    			case 2:
    				if(this.gmake[1]==null)return "放入红宝石进行镶嵌";
    				else if(this.gmake[1].iTid!=101)return "只能镶嵌红宝石";
    				break;
    			case 3:
    				if(this.gmake[1]==null)return "放入紫鸦石或月光石进行镶嵌";
    				else if(this.gmake[1].iTid!=103 && this.gmake[1].iTid!=102)return "只能镶嵌紫鸦石或月光石";
    				break;
    			case 4:
    				if(this.gmake[1]==null)return "放入紫鸦石或墨晶石进行镶嵌";
    				else if(this.gmake[1].iTid!=103 && this.gmake[1].iTid!=104)return "只能镶嵌紫鸦石或墨晶石";
    				break;
    			case 5:
    				if(this.gmake[1]==null)return "放入墨晶石或碧玺石进行镶嵌";
    				else if(this.gmake[1].iTid!=104 && this.gmake[1].iTid!=105)return "只能镶嵌墨晶石或碧玺石";
    				break;
    			default:
    				return "数据错误3";
    			}
    			//看装备上是否已有同类宝石，并提高镶嵌等级
    			m=this.gmake[0].iAtts[2]/10000;//宝石1
    			n=this.gmake[0].iAtts[2]%10000;//宝石2
    			lev=1;
    			if(m!=0)lev+=m%1000;
    			if(n!=0)lev+=n%1000;
    			if(this.gmake[1].iAtts[0]!=lev)return "必须镶嵌"+lev+"级宝石";
    			//等级过关，看是否有同类型直接提升
    			if(m!=0 && m/1000==this.gmake[1].iTid-101)
    			{//直接提升
    				this.iCanMake=2;
    				return "#c00ff00宝石齐备，可以镶嵌";
    			}
    			if(n!=0 && n/1000==this.gmake[1].iTid-101)
    			{//直接提升
    				this.iCanMake=2;
    				return "#c00ff00宝石齐备，可以镶嵌";
    			}
    			if(m!=0 && n!=0)return "已经镶嵌两种不同类型宝石";
    			
    			//看装备上已镶嵌数量，超过2种不同的，则无法再镶嵌其他宝石
    			this.iCanMake=2;
    			return "#c00ff00宝石齐备，可以镶嵌";
    		}*/
    	}
    	 ProcTouch( msg, x, y)
    	{
    		var i,j;
    		if(this.iCanMake>0)
    		{
    			if(this.btn_make.ProcTouch(msg, x, y))
    			{
    				if(this.btn_make.bCheck())
    				{
    					var ids=[0,0,0,0,0,0,0,0];
    					for(i=0;i<8;i++)
    					{
    						if(this.gmake[i]!=null)
    						{
    							ids[i]=this.gmake[i].iGid;
    							j=GmPlay$1.de_goods.intValue(this.gmake[i].iTid, 0, 28);
    							if(j>1)
    							{
    								this.gmake[i].iCount--;
    								if(this.gmake[i].iCount<=0)this.gmake[i].iGid=-1;
    							}
    							else this.gmake[i].iGid=-1;
    							this.gmake[i]=null;
    						}
    					}
    					GmProtocol$1.gi().s_UseSkill(10, ids[0], ids[1], ids[2], ids[3], ids[4], ids[5]);
    				}
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}

    		this.lockgoods=GoodsDraw.new_LockGoods(x,y,this.iGx,this.iGy, MyGoods.gi().goods[2],msg);
    		if(msg==3 && this.lockgoods!=null && GoodsDraw.bCanProc())
    		{//点击物品，判断类型，放入格子(制造书，材料，幸运符，手艺)
    			if(this.lockgoods.iTid==195 || this.lockgoods.iTid==328 || this.lockgoods.iTid==329 || this.lockgoods.iTid==330 || this.lockgoods.iTid==331)
    			{//是丹方
    				if(this.gmake[0]==null)this.gmake[0]=this.lockgoods;
    				else if(this.gmake[1]==null && this.gmake[0]!=this.lockgoods)
    				{
    					if(this.gmake[0].iTid==this.lockgoods.iTid)
    					{
    						this.gmake[1]=this.lockgoods;
    					}
    					else EasyMessage.easymsg.AddMessage("请放入同等级丹方");
    				}
    			}
    			else EasyMessage.easymsg.AddMessage("请放入丹方进行合并");
    			
    			this.lockgoods=null;
    		}
    		for(i=0;i<2;i++)
    		{
    			if(this.btn_goods[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_goods[i].bCheck())
    				{
    					this.gmake[i]=null;
    				}
    			}
    		}
    		return false;
    	}
    }
    RemedyMerge.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_GOV_REMEDYMERGE);
    };

    class GetInGov extends BaseClass{

    	
    	 constructor( ani)
    	{
    		super();
    		this.iW=500;
    		this.iH=240;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.in_govid=new XInputNumber(GmPlay$1.xani_nui3);
    		this.in_govid.iNumber=0;
    		this.in_govid.MinMax(0, 30000);
    		
    		this.btn_go=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_go.InitButton("普通按钮195_55");
    		this.btn_go.sName="前往";
    	}

    	Draw()
    	{
    		var offx,offy;
    		var w,h;
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		offx=this.iX+25;
    		offy=this.iY+25;
    		w=this.iW-50;
    		h=this.iH-50;
    //		DrawMode.new_framein(offx, offy, w, h);
    		DrawMode$1.frame_type4("中等框a52_50",offx, offy, w, h,52,50);
    		
    		M3DFast$1.gi().DrawTextEx(offx+10,offy+35, "请输入想要前往的帮派号码", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		
    		this.in_govid.Move(offx+25*11+10, offy+35-(47-25)/2, 140);
    		this.in_govid.Draw();
    		
    		this.btn_go.Move(this.iX+this.iW-50-195, this.iY+this.iH-50-55, 195, 55);
    		this.btn_go.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.in_govid.ProcTouch(msg, x, y))return true;
    		if(this.btn_go.ProcTouch(msg, x, y))
    		{
    			if(this.btn_go.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    				GmProtocol$1.gi().s_GetIntoGov(this.in_govid.iNumber);
    			}
    			return true;
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    GetInGov.Open=function()
    {
        if (XStat$1.gi().iXStat != XStat$1.GS_GETINGOV)XStat$1.gi().PushStat(XStat$1.GS_GETINGOV);
    };

    class Gov_SetBuilding extends BaseClass{

    	 constructor( a)
    	{
    		super();
    		var i;
    		var w,h;
    		
    		w=140;
    		h=60;
    		
    		this.iW=30+w*3-(w-131)+30;
    		this.iH=30+h*3-(h-52)+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_building=new XButtonEx2$1(9);
    		for(i=0;i<9;i++)
    		{
    			this.btn_building[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_building[i].InitButton("成员操作131_52");
    			this.btn_building[i].Move(this.iX+30+(i%3)*w, this.iY+30+Math.floor(i/3)*h, 131, 52);
    			this.btn_building[i].sName=MyGov._GOVBUILDINGS[i];
    		}
    	}

    	Draw()
    	{
    		var i;
    		DrawMode$1.frame_type4("中等框a52_50",this.iX,this.iY,this.iW,this.iH,52,50);
    //		M3DFast.gi().DrawTextEx(this.iX+this.iW/2, this.iY+20+15, "选择所需建造的建筑", 0xff005b41, 30, 101, 1, 1, 0, -2, -2);

    		for(i=0;i<9;i++)this.btn_building[i].Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<9;i++)
    		{
    			if(this.btn_building[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_building[i].bCheck())
    				{
    					GmProtocol$1.gi().s_NewGovOperate(18, 1, i, 0, 0, "");
    					GmProtocol$1.gi().s_NewGovOperate(18, 0, 0, 0, 0, "");
    					XStat$1.gi().PopStat(1);
    				}
    				return true;
    			}
    		}
    		if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH) && msg==3)XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    Gov_SetBuilding.Open=function()
    {
        XStat$1.gi().PushStat(XStat$1.GS_GOV_SETBUILDING);
    };

    class Gov_SetHostility extends BaseClass{


    	 constructor( a)
    	{
    		super();
    		var i;
    		
    		this.iW=360;
    		this.iH=260;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_ok.InitButton("普通按钮140_55");
    		this.btn_ok.Move(this.iX+this.iW-30-140, this.iY+this.iH-30-55, 140, 55);
    		this.btn_ok.sName="确定";
    		
    		this.btn_cancel=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_cancel.InitButton("普通按钮140_55");
    		this.btn_cancel.Move(this.iX+30, this.iY+this.iH-30-55, 140, 55);
    		this.btn_cancel.sName="取消";
    		
    		this.in_hid=new XInput(GmPlay$1.xani_ui);
    		this.in_hid.sDetail="";
    		this.in_hid.sBackPrompt="点击这里输入帮派会员";
    		this.in_hid.iBackSize=24;
    		this.in_hid.iTextSize=30;
    	}

    	Draw()
    	{
    		var offx,offy;
    		DrawMode$1.frame_type4("中等框a52_50",this.iX,this.iY,this.iW,this.iH,52,50);
    //		M3DFast.gi().DrawTextEx(this.iX+this.iW/2, this.iY+20+15, "选择所需建造的建筑", 0xff005b41, 30, 101, 1, 1, 0, -2, -2);
    		
    		DrawMode$1.frame_type1("帮派宣言a20_44",this.iX+this.iW/2-60,this.iY+30,120,20);
    		M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2,this.iY+30+22, "设置敌对", 0xff000000, 25, 101, 1, 1, 0, -2, -2);
    		
    		offx=this.iX+30;
    		offy=this.iY+20+44+30;
    		
    		this.in_hid.Move(offx,offy,300,47);
    		DrawMode$1.frame_type1("输入框a20_47",offx,offy,300,20);
    		this.in_hid.DrawText();
    		this.in_hid.onscr();
    		
    		this.btn_ok.Draw();
    		this.btn_cancel.Draw();
    	}
    	 ProcTouch( msg, x, y)
    	{
    		if(this.in_hid.ProcTouch(msg, x, y))return true;
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{
    				if(this.in_hid.sDetail.length>0)
    				{
    					GmProtocol$1.gi().s_NewGovOperate(18, 5, 0, 0, 0, this.in_hid.sDetail);
    					GmProtocol$1.gi().s_NewGovOperate(18, 0, 0, 0, 0, "");
    					XStat$1.gi().PopStat(1);
    				}
    				else EasyMessage.easymsg.AddMessage("请先输入敌对帮派会员");
    			}
    			return true;
    		}

    		if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH) && msg==3)XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    Gov_SetHostility.Open=function()
    {
        XStat$1.gi().PushStat(XStat$1.GS_GOV_SETHOSTILITY);
    };

    class Gov_SetMtLev extends BaseClass{
    	constructor( a)
    	{
    		super();
    		var i;
    		var w,h;
    		
    		w=140;
    		h=60;
    		
    		this.iW=30+w*3-(w-131)+30;
    		this.iH=30+h*1-(h-52)+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_mt=new XButtonEx2$1(8);
    		for(i=0;i<3;i++)
    		{
    			this.btn_mt[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_mt[i].InitButton("成员操作131_52");
    			this.btn_mt[i].Move(this.iX+30+(i%3)*w, this.iY+30+Math.floor(i/3)*h, 131, 52);
    			this.btn_mt[i].sName=MyGov._GOVMTLEV[i];
    		}
    	}

    	Draw()
    	{
    		var i;
    		DrawMode$1.frame_type4("中等框a52_50",this.iX,this.iY,this.iW,this.iH,52,50);
    //		M3DFast.gi().DrawTextEx(this.iX+this.iW/2, this.iY+20+15, "选择所需建造的建筑", 0xff005b41, 30, 101, 1, 1, 0, -2, -2);

    		for(i=0;i<3;i++)this.btn_mt[i].Draw();
    	}
    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<3;i++)
    		{
    			if(this.btn_mt[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_mt[i].bCheck())
    				{
    					GmProtocol$1.gi().s_NewGovOperate(18, 3, i, 0, 0, "");
    					GmProtocol$1.gi().s_NewGovOperate(18, 0, 0, 0, 0, "");
    					XStat$1.gi().PopStat(1);
    				}
    				return true;
    			}
    		}
    		if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH) && msg==3)XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    Gov_SetMtLev.Open=function()
    {
        XStat$1.gi().PushStat(XStat$1.GS_GOV_SETMTLEV);
    };

    class Gov_SetName extends BaseClass{

    	 constructor( a)
    	{
    		super();
    		this.iW=360;
    		this.iH=260;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_ok.InitButton("普通按钮140_55");
    		this.btn_ok.Move(this.iX+this.iW-30-140, this.iY+this.iH-30-55, 140, 55);
    		this.btn_ok.sName="确定";
    		
    		this.btn_cancel=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_cancel.InitButton("普通按钮140_55");
    		this.btn_cancel.Move(this.iX+30, this.iY+this.iH-30-55, 140, 55);
    		this.btn_cancel.sName="取消";
    		
    		this.in_name=new XInput(GmPlay$1.xani_ui);
    		this.in_name.sDetail="";
    		this.in_name.sBackPrompt="点击这里输入新的帮派名字";
    		this.in_name.iBackSize=24;
    		this.in_name.iTextSize=30;
    	}

    	Draw()
    	{
    		var offx,offy;
    		
    		DrawMode$1.frame_type4("中等框a52_50",this.iX,this.iY,this.iW,this.iH,52,50);
    //		M3DFast.gi().DrawTextEx(this.iX+this.iW/2, this.iY+20+15, "选择所需建造的建筑", 0xff005b41, 30, 101, 1, 1, 0, -2, -2);

    		DrawMode$1.frame_type1("帮派宣言a20_44",this.iX+this.iW/2-60,this.iY+30,120,20);
    		M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2,this.iY+30+22, "帮派改名", 0xff000000, 25, 101, 1, 1, 0, -2, -2);

    		offx=this.iX+30;
    		offy=this.iY+20+44+30;
    		
    		this.in_name.Move(offx,offy,300,47);
    		DrawMode$1.frame_type1("输入框a20_47",offx,offy,300,20);
    		this.in_name.DrawText();
    		this.in_name.onscr();
    		
    		this.btn_ok.Draw();
    		this.btn_cancel.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.in_name.ProcTouch(msg, x, y))return true;
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{
    				if(this.in_name.sDetail.length>0)
    				{

    						var buf=this.in_name.sDetail.getBytes("GBK");
    						if(buf.length<4 || buf.length>16)
    						{
    							EasyMessage.easymsg.AddMessage("帮派名称2-8个字");
    							return true;
    						}

    					GmProtocol$1.gi().s_NewGovOperate(18, 6, 0, 0, 0, this.in_name.sDetail);
    					GmProtocol$1.gi().s_NewGovOperate(18, 0, 0, 0, 0, "");
    					XStat$1.gi().PopStat(1);
    				}
    				else EasyMessage.easymsg.AddMessage("请先输入新的帮派名称");
    			}
    			return true;
    		}

    		if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH) && msg==3)XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    Gov_SetName.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_GOV_SETNAME);
    };

    class Gov_SetResearch extends BaseClass{

    	 constructor( a)
    	{
    		super();
    		var i;
    		var w,h;
    		
    		w=140;
    		h=60;
    		
    		this.iW=30+w*3-(w-131)+30;
    		this.iH=30+h*3-(h-52)+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_research=new Array(8);
    		for(i=0;i<8;i++)
    		{
    			this.btn_research[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_research[i].InitButton("成员操作131_52");
    			this.btn_research[i].Move(this.iX+30+(i%3)*w, this.iY+30+Math.floor(i/3)*h, 131, 52);
    			this.btn_research[i].sName=MyGov._GOVSKILLS[i];
    		}
    	}

    	Draw()
    	{
    		var i;
    		DrawMode$1.frame_type4("中等框a52_50",this.iX,this.iY,this.iW,this.iH,52,50);
    //		M3DFast.gi().DrawTextEx(this.iX+this.iW/2, this.iY+20+15, "选择所需建造的建筑", 0xff005b41, 30, 101, 1, 1, 0, -2, -2);

    		for(i=0;i<8;i++)this.btn_research[i].Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<8;i++)
    		{
    			if(this.btn_research[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_research[i].bCheck())
    				{
    					GmProtocol$1.gi().s_NewGovOperate(18, 2, i, 0, 0, "");
    					GmProtocol$1.gi().s_NewGovOperate(18, 0, 0, 0, 0, "");
    					XStat$1.gi().PopStat(1);
    				}
    				return true;
    			}
    		}
    		if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH) && msg==3)XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    Gov_SetResearch.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_GOV_SETRESEARCH);
    };

    class NewGovManage extends BaseClass{
    	
    	 constructor( a)
    	{
    		super();
    		this.iW=1100;
    		this.iH=620;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;

    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_detail=new Array(7);//
    		this.btn_set=new Array(7);//
    		for(var i=0;i<7;i++)
    		{
    			this.btn_detail[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_detail[i].bSingleButton=true;
    			this.btn_set[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_set[i].InitButton("普通按钮140_55");
    			this.btn_set[i].sName="设置";
    		}
    		
    		this.bLock3=false;
    		this.iOffY3=0;

    		this._GOVMANAGE=[
    			["帮派建筑","","#c0000001.青龙堂：#e# # 升级后可提高青龙任务效率以及雇佣工人的收益#e2.白虎堂：#e# # 升级后可降低维护的安定度消耗#e3.朱雀堂：#e# # 升级后可提高成员炼丹成功率和副产品率#e4.玄武堂：#e# # 升级后可提升行动力上限和帮派维护增加的守护兽经验#e5.学院：#e# # 升级后可提升帮派维护增加的技能经验#e6.金库：#e# # 升级后可提升帮派资金上限#e7.商会：#e# # 升级后可增加出产道具种类和数量#e8.药房：#e# # 升级后可增加出产药品种类和数量#e9.厢房：#e# # 升级后可提升帮派人数上限"],
    			["帮派技能","","#c0000001.强身术#e# # 学习后能增加气血上限#e2.修心#e# # 学习后能增加魔法上限#e3.健体术#e# # 学习后能增加体力上限#e4.炼丹术#e# # 学习后可以提高炼丹的能力#e5.烹饪#e# # 学习后可以提高制作食物的能力#e6.锻造术#e# # 学习后可以提高制作头盔和腰带的能力#e7.冶金术#e# # 学习后可以提高制作武器和项链的能力#e8.剪裁术#e# # 学习后可以提高制作衣服和靴子的能力"],
    			["维护等级","","#c0000001.初级维护#e# # 提供基础维护效果#e2.中级维护#e# # 消耗150%基础维护资金，提供150%基础维护效果#e3.高级维护#e# # 消耗200%基础维护资金，提供200%基础维护效果"],
    			["帮派升级","","#c000000# # 帮派升级可以提高帮派建筑的等级上限#e#e# # 帮派升级需要消耗繁荣度，繁荣度根据时间恢复，繁荣度上限通过建造建筑提高"],
    			["设置敌对","","#c000000# # 设置敌对会使得白虎任务有极高的概率随机到敌对帮派#e#e# # 敌对设置只能由帮主进行。"],
    			["帮派改名","",""],
    			["解散帮派","",""]
    		];
    	}

    	_GetSet( pls)
    	{
    		var i;
    		var cs1=pls.GetNextInt();
    		if(cs1==0)
    		{//获取基本信息
    			this.building=new Array(4);//
    			for(i=0;i<4;i++)this.building[i]=pls.GetNextInt();
    			this._GOVMANAGE[0][1]="当前正在建造"+MyGov._GOVBUILDINGS[this.building[0]]+this.building[1]+"级("+this.building[2]+"/"+this.building[3]+")";
    			this.research=new Array(4);//
    			for(i=0;i<4;i++)this.research[i]=pls.GetNextInt();
    			this._GOVMANAGE[1][1]="当前正在研究"+MyGov._GOVSKILLS[this.research[0]]+this.research[1]+"级("+this.research[2]+"/"+this.research[3]+")";
    		
    			this.mtlev=pls.GetNextInt();
    			this._GOVMANAGE[2][1]="当前帮派维护等级："+MyGov._GOVMTLEV[this.mtlev];
    			
    			this.iExp=pls.GetNextInt();
    			this.iMaxExp=pls.GetNextInt();
    			this.iUpgradeExp=pls.GetNextInt();
    			this._GOVMANAGE[3][1]="升级需要繁荣度："+this.iExp+"/"+this.iUpgradeExp;
    			
    			this.iHostilityId=pls.GetNextInt();
    			this.sHostilityName=pls.GetNextString();
    			if(this.iHostilityId==0)this._GOVMANAGE[4][1]="当前没有敌对帮派";
    			else this._GOVMANAGE[4][1]="当前敌对帮派："+this.sHostilityName;
    		}
    	}

    	Draw()
    	{
    		var i;

    		DrawMode$1.new_baseframe4(this.iX, this.iY, this.iW,this.iH,"帮","派","管","理");
    		this.btn_close.Draw();
    		
    		DrawMode$1.new_framein(this.iX+25, this.iY+25, this.iW-50, this.iH-50);

    		M3DFast$1.gi().SetViewClip(this.iX+25+20, this.iY+25+20, this.iX+this.iW-25-20, this.iY+this.iH-25-20);
    		for(i=0;i<7;i++)
    		{
    			this.DrawEntry(i,this.iX+25+20,this.iY+25+20+i*100+this.iOffY3,this._GOVMANAGE[i][0],this._GOVMANAGE[i][1]);
    		}
    		M3DFast$1.gi().NoClip();
    		if(!this.bLock3)
    		{//100*6=600,,,,,,,,,this.iH-90
    			i=(100*7-8)-(this.iH-90);
    			if(this.iOffY3>0)this.iOffY3/=2;
    			if(i<=0)
    			{
    				if(this.iOffY3<0)this.iOffY3/=2;
    			}
    			else if(this.iOffY3<-i)
    			{
    				i+=this.iOffY3;
    				i/=2;
    				this.iOffY3-=i;
    			}
    		}
    		
    		if(Confirm1.end(Confirm1.CONFIRM_GOVUPGRADE))
    		{
    			if(Confirm1.bConfirm)
    			{//升级帮派
    				GmProtocol$1.gi().s_NewGovOperate(18, 4, 0, 0, 0, "");
    				GmProtocol$1.gi().s_NewGovOperate(18, 0, 0, 0, 0, "");
    			}
    		}
    		if(Confirm1.end(Confirm1.CONFIRM_GOVDISBAND))
    		{
    			if(Confirm1.bConfirm)
    			{//解散帮派
    				GmProtocol$1.gi().s_NewGovOperate(18, 7, 0, 0, 0, "");
    				XStat$1.gi().PopStat(1);
    			}
    		}
    	}

    	 DrawEntry( p, offx, offy, title, detail)
    	{
    		DrawMode$1.frame_type1("帮派福利条a20_92",offx,offy,1010,20);
    		
    		GmPlay$1.xani_icon.DrawAnima_aa(offx+20, offy+(92-73)/2, title,0);
    		
    		M3DFast$1.gi().DrawText_2(offx+20+73+20,offy+92/2, title, 0xffffff00, 30, 101, 1, 1, 0, 0, -2, 4, 0xffa57841);
    		if(detail.length>0)M3DFast$1.gi().DrawTextEx(offx+20+73+20+160, offy+92/2, detail, 0xff000000, 20, 101, 1, 1, 0, 0, -2);
    		this.btn_set[p].Move(offx+1010-20-140,offy+(92-55)/2,140,55);
    		this.btn_set[p].Draw();
    		
    		this.btn_detail[p].Move(offx+20, offy+(92-73)/2, 73,73);
    	}
    	
    	 ProcTouch( msg, x, y)
    	{
    		if(msg==3)
    		{
    			this.bLock3=false;
    		}
    		var i;
    		if(this.bLock3 && msg==2)
    		{
    			this.iOffY3+=(y-this.iLock3Y);
    			this.iLock3Y=y;
    		}

    		if(XDefine$1.bInRect(x, y, this.iX+50, this.iY+50, this.iW-100, this.iH-100))
    		{
    			for(i=0;i<7;i++)
    			{
    				if(this.btn_detail[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_detail[i].bCheck())
    					{
    						if(this._GOVMANAGE[i][2].length>0)PromptMessage.Open(this._GOVMANAGE[i][0],this._GOVMANAGE[i][2]);
    					}
    					return true;
    				}
    				if(this.btn_set[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_set[i].bCheck())
    					{
    						switch(i)
    						{
    						case 0://帮派建筑
    							if(MyGov.mg.bCheckPower(1))Gov_SetBuilding.Open();
    							else FrameMessage.fm.Open("你没有帮派管理权限");
    							break;
    						case 1://帮派技能
    							if(MyGov.mg.bCheckPower(1))Gov_SetResearch.Open();
    							else FrameMessage.fm.Open("你没有帮派管理权限");
    							break;
    						case 2://维护等级
    							if(MyGov.mg.bCheckPower(1))Gov_SetMtLev.Open();
    							else FrameMessage.fm.Open("你没有帮派管理权限");
    							break;
    						case 3://升级
    							if(MyGov.mg.iJob==0)Confirm1.start(Confirm1.CONFIRM_GOVUPGRADE,"是否确定升级帮派？");
    							else FrameMessage.fm.Open("帮主才能升级帮派");
    							break;
    						case 4://设置敌对
    							if(MyGov.mg.iJob==0)
    							{
    								if(this.iHostilityId==0)Gov_SetHostility.Open();
    								else
    								{
    									GmProtocol$1.gi().s_NewGovOperate(18, 5, 0, 0, 0, "0");
    									GmProtocol$1.gi().s_NewGovOperate(18, 0, 0, 0, 0, "");
    								}
    							}
    							else FrameMessage.fm.Open("帮主才能设置敌对");
    							break;
    						case 5://改名
    							if(MyGov.mg.iJob==0)Gov_SetName.Open();
    							else FrameMessage.fm.Open("帮主才能修改帮派名称");
    							break;
    						case 6://解散帮派
    							if(MyGov.mg.iJob==0)Confirm1.start(Confirm1.CONFIRM_GOVDISBAND,"是否确定解散帮派？");
    							else FrameMessage.fm.Open("帮主才能解散帮派");
    							break;
    						}
    					}
    					return true;
    				}
    			}
    			if(XDefine$1.bInRect(x, y, this.iX+25, this.iY+25, this.iW-50, this.iH-50) && msg==1)
    			{
    				this.bLock3=true;
    				this.iLock3Y=y;
    				return true;
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		return false;
    	}
    }
    NewGovManage.Open=function()
    {
    	var afg;
    	if (XStat$1.gi().iXStat != XStat$1.GS_NEWGOVMANAGE)afg=XStat$1.gi().PushStat(XStat$1.GS_NEWGOVMANAGE);
    	else afg = XStat$1.gi().LastStat(0);
    	GmProtocol$1.gi().s_NewGovOperate(18, 0, 0, 0, 0, "");
    };

    NewGovManage.GetSet=function( pls)
    {
    	var afg;
    	afg=XStat$1.gi().FindStat(XStat$1.GS_NEWGOVMANAGE);
    	if (afg!=null)afg._GetSet(pls);
    };

    class SetGovPower extends BaseClass{
    	 constructor( a)
    	{
    		super();
    		var i;
    		
    		this.iW=500;
    		this.iH=400;
    		
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.chk_powers=new Array(4);//
    		for(i=0;i<4;i++)
    		{
    			this.chk_powers[i]=new XCheckBox(GmPlay$1.xani_button);
    			this.chk_powers[i].InitBox("复选框50_53");
    			this.chk_powers[i].bTrue=false;
    			this.chk_powers[i].Move(this.iX+50+i%2*200, this.iY+50+80+20+Math.floor(i/2)*70, 50, 50);
    		}
    		this.chk_powers[0].sDetail="人员管理";
    		this.chk_powers[1].sDetail="帮派管理";
    		this.chk_powers[2].sDetail="开启副本";
    		this.chk_powers[3].sDetail="群发消息";
    		
    		this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_ok.InitButton("普通按钮140_55");
    		this.btn_ok.sName="确定";
    		this.btn_ok.Move(this.iX+this.iW/2-140/2, this.iY+this.iH-50-55, 140, 55);
    		
    		this.btn_question=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_question.InitButton("问号按钮60_60");
    		this.btn_question.Move(this.iX+this.iW-50-60, this.iY+this.iH-50-60, 60, 60);
    	}

    	Draw()
    	{
    		var i;
    		DrawMode$1.frame_type4("中等框a52_50",this.iX,this.iY,this.iW,this.iH,52,50);
    		GmPlay$1.xani_head.DrawAnima(this.iX+50,this.iY+50,"新头像"+this.pgm.iRas,0);
    		M3DFast$1.gi().DrawTextEx(this.iX+50+80+10, this.iY+50+20, this.pgm.sName, 0xff000000, 25, 101, 1, 1, 0, 0, -2);
    		M3DFast$1.gi().DrawTextEx(this.iX+50+80+10, this.iY+50+20+40, MyGov.sJob(this.pgm.iJob), 0xff000000, 25, 101, 1, 1, 0, 0, -2);

    		for(i=0;i<4;i++)
    		{
    			this.chk_powers[i].Draw();
    		}
    		this.btn_ok.Draw();
    		this.btn_question.Draw();
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<4;i++)
    		{
    			if(this.chk_powers[i].ProcTouch(msg, x, y))return true;
    		}
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{
    				this.pgm.iPower=0;
    				if(this.chk_powers[0].bTrue)this.pgm.iPower|=1;
    				if(this.chk_powers[1].bTrue)this.pgm.iPower|=2;
    				if(this.chk_powers[2].bTrue)this.pgm.iPower|=4;
    				if(this.chk_powers[3].bTrue)this.pgm.iPower|=8;
    				GmProtocol$1.gi().s_NewGovOperate(8, this.pgm.iRid, this.pgm.iPower, 0,0,this.pgm.sName);
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(this.btn_question.ProcTouch(msg, x, y))
    		{
    			if(this.btn_question.bCheck())
    			{
    				PromptMessage.Open("界面说明", "#c000000# # 权限系统可以让帮主管理各个帮派官员所拥有的管理权限。#e#e1.人员管理#e# # 授予该管理人员任命权限，以及加入帮众与踢出帮众的权限#e#e2.帮派管理#e# # 授予该管理人员管理帮派建筑，帮派技能，帮派维护等级和帮派升级的权限#e#e3.开启副本#e# # 授予该管理人员主动开启帮派副本的权限#e#e4.群发消息#e# # 授予该管理人员群发消息的权限");
    			}
    			return true;
    		}
    		if(!XDefine$1.bInRect(x, y, this.iX,this.iY, this.iW, this.iH) && msg==3)
    		{
    			XStat$1.gi().PopStat(1);
    			return true;
    		}
    		return false;
    	}
    }

    SetGovPower.Open=function( gm)
    {
        if(MyGov.mg.iJob!=0)return;
        var afg;
        if (XStat$1.gi().iXStat != XStat$1.GS_SETGOVPOWER)afg= XStat$1.gi().PushStat(XStat$1.GS_SETGOVPOWER);
        else afg = XStat$1.gi().LastStat(0);

        afg.pgm=gm;
        afg.chk_powers[0].bTrue=((gm.iPower&1)!=0);
        afg.chk_powers[1].bTrue=((gm.iPower&2)!=0);
        afg.chk_powers[2].bTrue=((gm.iPower&4)!=0);
        afg.chk_powers[3].bTrue=((gm.iPower&8)!=0);
    };

    class MemberOperate extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.iW=131*2+20+10+20;
    		this.iH=52*3+20+10+10+20+80+20;
    		
    		this.iX=(GmConfig$1.SCRW-this.iW)/2+150;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_operates=new Array(6);//
    		for(i=0;i<6;i++)
    		{
    			this.btn_operates[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_operates[i].InitButton("成员操作131_52");
    		}
    		this.btn_operates[0].sName="聊天";
    		this.btn_operates[1].sName="好友";
    		this.btn_operates[2].sName="任命";
    		this.btn_operates[3].sName="踢出";
    		this.btn_operates[4].sName="权限";
    		
    		this.jW=10+131+10+131+10;
    		this.jH=10+52+10+52+10+52+10+52+10;
    		this.jX=this.iX-this.jW-20;
    		this.jY=this.iY+70;
    		this.btn_joblist=new Array(10);//
    		for(i=0;i<8;i++)
    		{
    			this.btn_joblist[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_joblist[i].Move(this.jX+10+i%2*(131+10), this.jY+10+Math.floor(i/2)*(52+10), 131, 52);
    			this.btn_joblist[i].InitButton("成员操作131_52");
    			this.btn_joblist[i].sName=MyGov._GOVJOBS[i];
    		}
    	}
    	
    	Draw()
    	{
    		var i,j;
    		DrawMode$1.new_framepc(this.iX,this.iY,this.iW,this.iH);
    		
    //		GmPlay.xani_ui.DrawAnima(this.iX+20,this.iY+20, "右上UI", 0);// 右上角头像
    //		GmPlay.xani_ui.DrawAnima(this.iX+20,this.iY+20, "头像", iRace * 2 + iSex);
    //		GmPlay.sop(""+this.pgm.iRas);
    		GmPlay$1.xani_head.DrawAnima(this.iX+20,this.iY+20,"新头像"+this.pgm.iRas,0);
    		M3DFast$1.gi().DrawTextEx(this.iX+20+80+10, this.iY+20+20, this.pgm.sName, 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    		M3DFast$1.gi().DrawTextEx(this.iX+20+80+10, this.iY+20+20+40, "号码："+this.pgm.iRid, 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    		i=0;j=0;
    		this.btn_operates[j].Move(this.iX+20+i%2*(131+10),this.iY+20+80+20+Math.floor(i/2)*(52+10),131,52);
    		this.btn_operates[j].Draw();
    		i++;j++;
    		
    		this.btn_operates[j].Move(this.iX+20+i%2*(131+10),this.iY+20+80+20+Math.floor(i/2)*(52+10),131,52);
    		this.btn_operates[j].Draw();
    		i++;j++;
    		
    		if(this.pgm.iJob>MyGov.mg.iJob && MyGov.mg.bCheckPower(0))
    		{//任命
    			this.btn_operates[j].Move(this.iX+20+i%2*(131+10),this.iY+20+80+20+Math.floor(i/2)*(52+10),131,52);
    			this.btn_operates[j].Draw();
    			i++;
    		}
    		else this.btn_operates[j].Move(-100, -100, 5,5);
    		j++;
    		
    		if(this.pgm.iJob>MyGov.mg.iJob && MyGov.mg.bCheckPower(0))
    		{//踢出
    			this.btn_operates[j].Move(this.iX+20+i%2*(131+10),this.iY+20+80+20+Math.floor(i/2)*(52+10),131,52);
    			this.btn_operates[j].Draw();
    			i++;
    		}
    		else this.btn_operates[j].Move(-100, -100, 5,5);
    		j++;
    		
    		if(MyGov.mg.iJob==0)
    		{//权限--帮主
    			this.btn_operates[j].Move(this.iX+20+i%2*(131+10),this.iY+20+80+20+Math.floor(i/2)*(52+10),131,52);
    			this.btn_operates[j].Draw();
    			i++;
    		}
    		else this.btn_operates[j].Move(-100, -100, 5,5);
    		j++;
    		

    		
    		if(this.bAppoint)
    		{//左侧画出职位选择按钮
    			DrawMode$1.new_framepc(this.jX,this.jY,this.jW,this.jH);
    			for(i=0;i<8;i++)this.btn_joblist[i].Draw();
    			
    			if(Confirm1.end(Confirm1.CONFIRM_GOVAPPOINT))
    			{
    				if(Confirm1.bConfirm)
    				{//
    					GmProtocol$1.gi().s_NewGovOperate(7, this.pgm.iRid, this.iTmpJob, 0,0,this.pgm.sName);
    					XStat$1.gi().PopStat(1);
    				}
    			}
    		}
    		if(Confirm1.end(Confirm1.CONFIRM_GOVKICKMEMBER))
    		{
    			if(Confirm1.bConfirm)
    			{//
    				GmProtocol$1.gi().s_NewGovOperate(7, this.pgm.iRid, 100, 0,0,this.pgm.sName);
    				XStat$1.gi().PopStat(1);
    			}
    		}
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.bAppoint)
    		{
    			for(i=0;i<8;i++)
    			{
    				if(this.btn_joblist[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_joblist[i].bCheck())
    					{
    						this.iTmpJob=MyGov._JOBIDS[i];
    						if(MyGov._JOBIDS[i]<MyGov.mg.iJob)FrameMessage.fm.Open("不能任命高于自己的职位");
    						else if(MyGov._JOBIDS[i]==MyGov.mg.iJob)Confirm1.start(Confirm1.CONFIRM_GOVAPPOINT,"确定将自己的帮派职位转让给他（转让后自己将成为帮众）？");//转让确认
    						else
    						{//直接任命
    							GmProtocol$1.gi().s_NewGovOperate(7, this.pgm.iRid, this.iTmpJob, 0,0,this.pgm.sName);
    							XStat$1.gi().PopStat(1);
    //							this.pgm.iJob=this.iTmpJob;
    						}
    					}
    				}
    			}
    			if(XDefine$1.bInRect(x, y, this.jX, this.jY, this.jW,this.jH))return true;
    		}
    		for(i=0;i<5;i++)
    		{
    			if(this.btn_operates[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_operates[i].bCheck())
    				{
    					switch(i)
    					{
    					case 0://聊天
    						XStat$1.gi().PopStat(1);
    						PrivateChat_Send.OpenChat( this.pgm.iRid, this.pgm.sName,this.pgm.iRas);
    						break;
    					case 1://好友
    						GmProtocol$1.gi().s_FriendOperate(0,this.pgm.iRid,0);
    						XStat$1.gi().PopStat(1);
    						break;
    					case 2://任命
    						this.bAppoint=true;
    						break;
    					case 3://踢出
    						Confirm1.start(Confirm1.CONFIRM_GOVKICKMEMBER,"是否确定将#e"+this.pgm.sName+"("+this.pgm.iRid+")#e踢出帮派？");//转让确认
    						break;
    					case 4://权限
    						XStat$1.gi().PopStat(1);
    						SetGovPower.Open(this.pgm);
    						break;
    					}
    				}
    				return true;
    			}
    		}
    		if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW,this.iH) && msg==3)
    		{
    			XStat$1.gi().PopStat(1);
    		}
    		return false;
    	}
    }

    MemberOperate.Open=function( gm)
    {
        if(gm.iRid==GmMe$1.me.iRid)return;
        var afg;
        if (XStat$1.gi().iXStat != XStat$1.GS_MEMBEROPERATE)afg=XStat$1.gi().PushStat(XStat$1.GS_MEMBEROPERATE);
        else afg = XStat$1.gi().LastStat(0);

        afg.pgm=gm;

        var i=2;
        if(gm.iJob>MyGov.mg.iJob && MyGov.mg.bCheckPower(0))i+=2;
        if(MyGov.mg.iJob==0)i++;

        if(i==1 || i==2)afg.iH=52+20+20+80+20;
        else if(i==3 || i==4)afg.iH=52*2+20+10+20+80+20;
        else afg.iH=52*3+20+10+10+20+80+20;
    };

    class _APPLYLIST
    {//申请入帮人员列表
    //	public int iRid;
    //	public String sName;
    constructor()
    {

    }
    }

    class _GOVMEMBER
    {
    /*	public int iRid;
    	public int iJob;
    	public String sName;*/
    	constructor()
    	{

    	}
    }

    class _GOVBUILDING
    {
    	constructor()
    	{
    		this.iBid=-1;
    		this.iLev=0;
    		this.iProc=0;
    	}
    }
    class _GOVSKILL
    {
    	constructor()
    	{
    		this.iSid=-1;
    		this.iLev=0;
    		this.iProc=0;
    	}
    }

    class GovFrame extends BaseClass{
    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=600;
    		this.iH=400;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_ui);
    		this.btn_close.InitButton("统一关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-60-5, this.iY, 60, 60);
    		
    		this.btn_base=new Array(6);//
    		this.bBaseInited=new Array(6);//
    		for(i=0;i<6;i++)
    		{
    			this.btn_base[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_base[i].InitButton("统一中按钮4");
    			this.btn_base[i].Move(this.iX+10, this.iY+80+i*50, 130, 40);
    			this.bBaseInited[i]=false;
    		}
    		this.btn_base[0].sName="基本属性";
    		this.btn_base[1].sName="帮派成员";
    		this.btn_base[2].sName="帮派建筑";
    		this.btn_base[3].sName="帮派技能";
    		this.btn_base[4].sName="其他功能";
    		
    		this.btn_base[5].sName="申请列表";
    		this.iBasePoint=0;
    		
    		this.bBaseInited[0]=true;
    		GmProtocol$1.gi().s_GetBaseGovData(0,0);
    		
    		if(MyGov.mg.iJob==0 ||
    				MyGov.mg.iJob==1 ||
    				MyGov.mg.iJob==2 ||
    				MyGov.mg.iJob==3 ||
    				MyGov.mg.iJob==4)this.iBaseCount=6;//帮主，副帮主，护法，长老，可以同意和拒绝
    		else this.iBaseCount=5;
    		
    		this.iApplyCount=0;
    		this.applylist=new Array(10);//
    		this.btn_agree=new Array(10);//
    		this.btn_refuse=new Array(10);//
    		for(i=0;i<10;i++)
    		{
    			this.applylist[i]=new _APPLYLIST();
    			this.btn_agree[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_agree[i].InitButton("统一小按钮2");
    			this.btn_agree[i].sName="同意";
    			this.btn_refuse[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_refuse[i].InitButton("统一小按钮2");
    			this.btn_refuse[i].sName="拒绝";
    		}
    		
    		this.iMemberCount=0;
    		this.govmember=new Array(10);//
    		this.govbuilding=new Array(10);//
    		this.btn_build=new Array(10);//
    		this.govskill=new Array(10);//
    		this.btn_skill=new Array(10);//
    		for(i=0;i<10;i++)
    		{
    			this.govmember[i]=new _GOVMEMBER();
    			
    			this.govbuilding[i]=new _GOVBUILDING();
    			this.btn_build[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_build[i].InitButton("统一小按钮2");
    			this.btn_build[i].sName="建造";
    			
    			this.govskill[i]=new _GOVSKILL();
    			this.btn_skill[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_skill[i].InitButton("统一小按钮2");
    			this.btn_skill[i].sName="研究";
    		}
    		this.btn_left=new XButton(GmPlay$1.xani_ui);
    		this.btn_left.InitButton("统一中按钮3");
    		this.btn_left.sName="上一页";
    		this.btn_right=new XButton(GmPlay$1.xani_ui);
    		this.btn_right.InitButton("统一中按钮3");
    		this.btn_right.sName="下一页";
    		
    		this.btn_leavegov=new XButton(GmPlay$1.xani_ui);
    		this.btn_leavegov.InitButton("统一中按钮4");
    		this.btn_leavegov.sName="离帮";
    		
    		this.btn_mtlev=new XButton(GmPlay$1.xani_ui);
    		this.btn_mtlev.InitButton("统一中按钮4");
    		this.btn_mtlev.sName="离帮";
    		
    		this.btn_upgrade=new XButton(GmPlay$1.xani_ui);
    		this.btn_upgrade.InitButton("统一中按钮4");
    		this.btn_upgrade.sName="升级帮派";
    		
    		this.btn_swap=new XButton(GmPlay$1.xani_ui);
    		this.btn_swap.InitButton("统一中按钮4");
    		this.btn_swap.sName="帮主转让";
    		
    		this.btn_message=new XButton(GmPlay$1.xani_ui);
    		this.btn_message.InitButton("统一中按钮4");
    		this.btn_message.sName="群发邮件";
    		
    		this.btn_watch=new XButton(GmPlay$1.xani_ui);
    		this.btn_watch.InitButton("统一中按钮2");
    		this.btn_watch.sName="查看";
    		this.iMemberPoint=-1;
    	}

    	Draw_0( offx, offy, w, h)
    	{//名称，等级，当前繁荣度/繁荣度上限，当前资金/资金上限，升到下一等级所需繁荣度
    		DrawMode$1.Frame1_BR(offx+20, offy+20, w-40, 40);
    		DrawMode$1.Data1_BR(offx+30, offy+30, "我的职位:",sJob(MyGov.mg.iJob),100,70);
    		DrawMode$1.Data1_BR(offx+220, offy+30, "我的帮贡:",""+MyGov.mg.iTick,100,80);

    		offy+=60;
    		DrawMode$1.Frame1_BR(offx+20, offy+10, w-40, h-90);
    		DrawMode$1.Data1_BR(offx+30, offy+20, "帮派名称:",MyGov.mg.sName,100,130);
    		DrawMode$1.Data1_BR(offx+270, offy+20, "帮派号码:",""+MyGov.mg.iRealGid,70,60);

    		DrawMode$1.Data1_BR(offx+30, offy+20+25, "帮派等级:",""+this.iLev,100,60);
    		DrawMode$1.Data1_BR(offx+220, offy+20+25,  "帮派人数:",""+this.iAllMemberCount+"/"+this.iMaxMemberCount, 100,80);

    		DrawMode$1.Data1_BR(offx+30, offy+20+25*2, "帮派资金:",""+this.iMoney+"/"+this.iMaxMoney,100,260);

    		DrawMode$1.Data1_BR(offx+30, offy+20+25*3, "当前繁荣度:",""+this.iExp+"/"+this.iMaxExp,120,240);
    		DrawMode$1.Data1_BR(offx+30, offy+20+25*4, "升级繁荣度:",""+this.iUpgradExp,120,240);
    		DrawMode$1.Data1_BR(offx+30, offy+20+25*5, "帮派行动力:",""+this.iTick+"/"+this.iMaxTick,120,240);

    		DrawMode$1.Data1_BR(offx+30, offy+20+25*6, "当前建造建筑:",sBuilding(this.iBuildingId)+"("+this.iBExp+"/"+this.iBMaxExp+")",140,220);
    		DrawMode$1.Data1_BR(offx+30, offy+20+25*7, "当前研究科技:",sSkill(this.iResearchId)+"("+this.iRExp+"/"+this.iRMaxExp+")",140,220);
    		
    		if(this.iRMtLev==0)DrawMode$1.Data1_BR(offx+30, offy+20+25*8, "当前维护级别:","普通",140,220);
    		else if(this.iRMtLev==1)DrawMode$1.Data1_BR(offx+30, offy+20+25*8, "当前维护级别:","中级",140,220);
    		else if(this.iRMtLev==2)DrawMode$1.Data1_BR(offx+30, offy+20+25*8, "当前维护级别:","高级",140,220);

    //		this.pm3f.DrawTextEx(offx, offy+300, "维护需要资金达到："+(600000+this.iLev*50000), 0xffffffff, 30, 101, 1, 1, 0, 0, 0);
    	}


    	Draw_1( offx, offy, w, h)
    	{//帮派成员列表
    		var i;
    		var x,y;
    		DrawMode$1.Frame1_BR(offx+20, offy+20, w-40, h-40);
    		for(i=0;i<10;i++)
    		{
    			x=offx+30;
    			y=offy+30+i*22;
    			DrawMode$1.Text1_BR(x,y,w-60);
    			if(i>=this.iMemberCount)continue;
    			this.pm3f.DrawTextEx(x+10, y+10, this.govmember[i].sName, 0xffffffff, 20, 101, 1, 1, 0, 0, -2);
    			this.pm3f.DrawTextEx(x+160, y, sJob(this.govmember[i].iJob), 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		}
    		if(this.iMemberPoint>=0 && this.iMemberPoint<this.iMemberCount)
    		{
    			x=offx+30;
    			y=offy+30+this.iMemberPoint*22;
    			this.btn_watch.Move(x+300, y-10, 70, 40);
    			this.btn_watch.Draw();
    		}
    		
    		if(this.iTotalLine==0)this.iPageCount=1;
    		else this.iPageCount=(this.iTotalLine-1)/this.iLineEachPage+1;
    		
    		this.pm3f.DrawTextEx(offx+w/2, offy+h-50,""+(iPagePoint+1)+"/"+this.iPageCount, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		
    		this.btn_left.Move(offx+w/2-100-80, offy+h-70, 100, 40);
    		this.btn_left.Draw();
    		
    		this.btn_right.Move(offx+w/2+80, offy+h-70, 100, 40);
    		this.btn_right.Draw();
    	}
    	Draw_2( offx, offy, w, h)
    	{//帮派建筑列表
    		var i;
    		var x,y;
    		DrawMode$1.Frame1_BR(offx+20, offy+20, w-40, h-40);
    		
    		for(i=0;i<8;i++)
    		{
    			x=offx+30;
    			y=offy+38+i*33;
    			DrawMode$1.Text1_BR(x,y,w-60);
    			if(this.govbuilding[i].iBid!=-1)
    			{
    				this.pm3f.DrawTextEx(x+10,y, sBuilding(i)+this.govbuilding[i].iLev+"级", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    				this.pm3f.DrawTextEx(x+220,y, ""+this.govbuilding[i].iProc+"/"+MyGov.iBuildingUpgrad[this.govbuilding[i].iLev]/10, 0xffffffff, 20, 101, 1, 1, 0, -2, 0);
    				if(MyGov.mg.iJob==0 || MyGov.mg.iJob==1)
    				{//帮主可以设置建造目标
    					if(this.iBuildingId==i)
    					{
    						this.pm3f.DrawTextEx(x+320, y, "建造中", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    					}
    					else
    					{
    						this.btn_build[i].Move(x+320, y-5, 60, 30);
    						this.btn_build[i].Draw();
    					}
    				}
    			}
    		}
    	}
    	Draw_3( offx, offy, w, h)
    	{//帮派建筑列表
    		var i;
    		var x,y;
    		DrawMode$1.Frame1_BR(offx+20, offy+20, w-40, h-40);
    		for(i=0;i<8;i++)
    		{
    			x=offx+30;
    			y=offy+38+i*33;
    			DrawMode$1.Text1_BR(x,y,w-60);
    			if(this.govskill[i].iSid!=-1)
    			{
    				this.pm3f.DrawTextEx(x+10, y, sSkill(i)+this.govskill[i].iLev+"级", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    				this.pm3f.DrawTextEx(x+220, y, ""+this.govskill[i].iProc+"/"+MyGov.iBuildingUpgrad[this.govskill[i].iLev], 0xffffffff, 20, 101, 1, 1, 0, -2, 0);
    				if(MyGov.mg.iJob==0 || MyGov.mg.iJob==1)
    				{//帮主可以设置建造目标
    					if(this.iResearchId==i)
    					{
    						this.pm3f.DrawTextEx(x+320, y, "研究中", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    					}
    					else
    					{
    						this.btn_skill[i].Move(x+320, y-5, 60, 30);
    						this.btn_skill[i].Draw();
    					}
    				}
    			}
    		}
    	}
    	Draw_4( offx, offy, w, h)
    	{//其他功能
    		var x,y;
    		DrawMode$1.Frame1_BR(offx+20, offy+20, w-40, h-40);
    		
    		x=offx+30;
    		y=offy+30;
    		this.btn_leavegov.Move(x, y, 130, 40);
    		if(MyGov.mg.iJob==0)this.btn_leavegov.sName="解散帮派";
    		else this.btn_leavegov.sName="离帮";
    		this.btn_leavegov.Draw();
    		
    		if(MyGov.mg.iJob<=1)
    		{
    			y+=60;
    			this.btn_mtlev.Move(x, y, 130, 40);
    			if(this.iRMtLev==0)this.btn_mtlev.sName="维护:普通";
    			else if(this.iRMtLev==1)this.btn_mtlev.sName="维护:中级";
    			else if(this.iRMtLev==2)this.btn_mtlev.sName="维护:高级";
    			this.btn_mtlev.Draw();
    			
    			y+=60;
    			this.btn_upgrade.Move(x, y, 130, 40);
    			this.btn_upgrade.Draw();
    		}
    		if(MyGov.mg.iJob<=4)
    		{//长老以上职位可群发
    			y+=60;
    			this.btn_message.Move(x, y, 130, 40);
    			this.btn_message.Draw();
    		}
    		x=offx+30+150;
    		y=offy+30-60;
    		
    		if(MyGov.mg.iJob==0)
    		{//帮助让位
    			y+=60;
    			this.btn_swap.Move(x, y, 130, 40);
    			this.btn_swap.Draw();
    		}
    		
    		if(Confirm1.end(Confirm1.CONFIRM_LEAVEGOV))
    		{
    			if(Confirm1.bConfirm)
    			{//离开帮派
    				GmProtocol$1.gi().s_LeaveGov();
    				MyGov.mg.iRealGid=-1;
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		if(Confirm1.end(Confirm1.CONFIRM_UPGRADEGOV))
    		{
    			if(Confirm1.bConfirm)
    			{//离开帮派
    				GmProtocol$1.gi().s_GovSet(3, 0);
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		if(Confirm1.end(Confirm1.CONFIRM_SWAPGOV))
    		{
    			if(Confirm1.bConfirm)
    			{//离开帮派
    				GmProtocol$1.gi().s_GovSet(4, 0);
    				XStat$1.gi().PopStat(1);
    			}
    		}
    	}
    	Draw_5( offx, offy, w, h)
    	{
    		var i;
    		var x,y;
    		DrawMode$1.Frame1_BR(offx+20, offy+20, w-40, h-40);
    		for(i=0;i<this.iApplyCount;i++)
    		{
    			x=offx+30;
    			y=offy+38+i*33;
    			DrawMode$1.Text1_BR(x,y,w-60);
    			this.pm3f.DrawTextEx(x+10, y+10, this.applylist[i].sName, 0xffffffff, 20, 101, 1, 1, 0, 0, -2);
    			if(this.applylist[i].iRid==-1)
    			{
    				this.pm3f.DrawTextEx(x+250, y, "已同意", 0xffff0000, 20, 101, 1, 1, 0, 0, 0);
    				continue;
    			}
    			if(this.applylist[i].iRid==-2)
    			{
    				this.pm3f.DrawTextEx(x+250, y, "已拒绝", 0xffff0000, 20, 101, 1, 1, 0, 0, 0);
    				continue;
    			}
    			this.btn_agree[i].Move(x+200, y-5, 60, 30);
    			this.btn_agree[i].Draw();
    			
    			this.btn_refuse[i].Move(x+300, y-5, 60, 30);
    			this.btn_refuse[i].Draw();
    		}
    	}
    	Draw()
    	{
    		var i;
    		DrawMode$1.Frame3_BK(this.iX, this.iY, this.iW, this.iH,"帮派属性");
    		this.btn_close.Draw();
    		
    		for(i=0;i<this.iBaseCount;i++)
    		{
    			if(this.iBasePoint==i)
    			{
    				this.btn_base[i].bMouseDown=true;
    				this.btn_base[i].bMouseIn=true;
    			}
    			this.btn_base[i].Draw();
    		}
    		
    		DrawMode$1.Frame2_MD(this.iX+150, this.iY+65, this.iW-160, this.iH-75);
    		
    		switch(this.iBasePoint)
    		{
    		case 0://基本属性
    			this.Draw_0(this.iX+150,this.iY+65,this.iW-160,this.iH-75);
    			break;
    		case 1://帮派人员列表
    			this.Draw_1(this.iX+150,this.iY+65,this.iW-160,this.iH-75);
    			break;
    		case 2://建筑列表
    			this.Draw_2(this.iX+150,this.iY+65,this.iW-160,this.iH-75);
    			break;
    		case 3://技能
    			this.Draw_3(this.iX+150,this.iY+65,this.iW-160,this.iH-75);
    			break;
    		case 4://其他功能
    			this.Draw_4(this.iX+150,this.iY+65,this.iW-160,this.iH-75);
    			break;
    		case 5://申请列表
    			this.Draw_5(this.iX+150,this.iY+65,this.iW-160,this.iH-75);
    			break;
    		}
    	}

    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		for(i=0;i<this.iBaseCount;i++)
    		{
    			if(this.btn_base[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_base[i].bCheck())
    				{
    					switch(i)
    					{
    					case 0://基本属性
    					case 4://其他功能
    						this.iBasePoint=i;
    						break;
    					case 1://任何人，获取帮派成员列表
    					case 2://任何人，获取帮派建筑，等级，进度
    					case 3://任何人，获取技能等级，进度
    					case 5://帮主获取申请列表
    						this.iBasePoint=i;
    						if(this.bBaseInited[i]==false)
    						{//发送数据获取请求
    							this.bBaseInited[i]=true;
    							GmProtocol$1.gi().s_GetBaseGovData(i,0);
    						}
    						break;
    					}
    				}
    				//return true;
    			}
    		}
    		
    		if(this.iBasePoint==1)
    		{//翻页
    			if(MyGov.mg.iJob==0)
    			{//帮助对成员操作，任命，踢出，
    				
    			}
    			for(i=0;i<10;i++)
    			{
    				var xx=this.iX+150+30;
    				var yy=this.iY+65+30+i*22;
    				if(XDefine$1.bInRect(x, y, xx, yy, 220, 22) && i<this.iMemberCount)
    				{
    					this.iMemberPoint=i;
    				}
    			}
    			if(this.iMemberPoint>=0)
    			{
    				if(this.btn_watch.ProcTouch(msg, x, y))
    				{
    					if(this.btn_watch.bCheck())
    					{//打开查看详细
    						GmProtocol$1.gi().s_GetBaseGovData(6,this.govmember[this.iMemberPoint].iRid);
    						XStat$1.gi().PushStat(XStat$1.GS_MEMBERDETAIL);
    					}
    					return true;
    				}
    			}
    			if(this.btn_left.ProcTouch(msg, x, y))
    			{
    				if(this.btn_left.bCheck())
    				{
    					if(iPagePoint>0)
    					{
    						iPagePoint--;
    						GmProtocol$1.gi().s_GetBaseGovData(1,iPagePoint);
    					}
    				}
    			}
    			if(this.btn_right.ProcTouch(msg, x, y))
    			{
    				if(this.btn_right.bCheck())
    				{
    					if(iPagePoint<this.iPageCount-1)
    					{
    						iPagePoint++;
    						GmProtocol$1.gi().s_GetBaseGovData(1,iPagePoint);
    					}
    				}
    			}
    		}
    		if(this.iBasePoint==2 && (MyGov.mg.iJob==0 || MyGov.mg.iJob==1))
    		{//帮主设置当前建造建筑
    			for(i=0;i<8;i++)
    			{
    				if(i==this.iBuildingId)continue;
    				if(this.btn_build[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_build[i].bCheck())
    					{//当前建造建筑设置
    						this.iBuildingId=i;
    						GmProtocol$1.gi().s_GovSet(0, i);
    					}
    					return true;
    				}
    			}
    		}
    		if(this.iBasePoint==3 && (MyGov.mg.iJob==0 || MyGov.mg.iJob==1))
    		{//帮主设置当前建造建筑
    			for(i=0;i<8;i++)
    			{
    				if(i==this.iResearchId)continue;
    				if(this.btn_skill[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_skill[i].bCheck())
    					{//当前建造建筑设置
    						this.iResearchId=i;
    						GmProtocol$1.gi().s_GovSet(1, i);
    					}
    					return true;
    				}
    			}
    		}
    		if(this.iBasePoint==4)
    		{
    			if(this.btn_leavegov.ProcTouch(msg, x, y))
    			{
    				if(this.btn_leavegov.bCheck())
    				{
    					if(MyGov.mg.iJob==0)Confirm1.start(Confirm1.CONFIRM_LEAVEGOV,"是否确认解散帮派？");
    					else Confirm1.start(Confirm1.CONFIRM_LEAVEGOV,"是否确认离帮？");
    				}
    				return true;
    			}
    			if(MyGov.mg.iJob<=1)
    			{
    				if(this.btn_message.ProcTouch(msg, x, y))
    				{
    					if(this.btn_message.bCheck())
    					{//邮件群发
    						PrivateChat_Send.OpenChat( 10000, MyGov.mg.sName,6);
    						EasyMessage.easymsg.AddMessage("发送收取5万铜币");
    					}
    				}
    			}
    			if(MyGov.mg.iJob<=1)
    			{
    				if(this.btn_mtlev.ProcTouch(msg, x, y))
    				{
    					if(this.btn_mtlev.bCheck())
    					{
    						if(this.iRMtLev<2)this.iRMtLev++;
    						else this.iRMtLev=0;
    						GmProtocol$1.gi().s_GovSet(2, this.iRMtLev);
    					}
    					return true;
    				}
    				if(this.btn_upgrade.ProcTouch(msg, x, y))
    				{
    					if(this.btn_upgrade.bCheck())
    					{//1级升2级，2个建筑达到10级、消耗80万帮派资金、繁荣度达到
    						Confirm1.start(Confirm1.CONFIRM_UPGRADEGOV,"帮派"+this.iLev+"级升"+(this.iLev+1)+"级，要求2个建筑达到"+(this.iLev+1)*10+"级、帮派资金达到"+(this.iLev+1)*80*15/10+"万、繁荣度达到"+this.iUpgradExp+"#e升级成功消耗"+(this.iLev+1)*80+"万帮派资金#e是否确定升级帮派？");
    //						GmProtocol.gi().s_GovSet(3, 0);
    					}
    				}

    				if(MyGov.mg.iJob==0)
    				{//帮主装让
    					if(this.btn_swap.ProcTouch(msg, x, y))
    					{
    						if(this.btn_swap.bCheck())
    						{//1级升2级，2个建筑达到10级、消耗80万帮派资金、繁荣度达到
    							Confirm1.start(Confirm1.CONFIRM_SWAPGOV,"是否确定将帮派转让给副帮主？");
    //							GmProtocol.gi().s_GovSet(3, 0);
    						}
    					}
    				}
    			}
    		}
    		if(this.iBasePoint==5)
    		{//帮助同意玩家加入帮派
    			for(i=0;i<this.iApplyCount;i++)
    			{
    				if(this.applylist[i].iRid<0)continue;
    				if(this.btn_agree[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_agree[i].bCheck())
    					{//同意玩家入帮
    						GmProtocol$1.gi().s_OperateGovMember(this.applylist[i].iRid,0,0);
    						this.applylist[i].iRid=-1;
    					}
    					return true;
    				}
    				if(this.btn_refuse[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_refuse[i].bCheck())
    					{//拒绝玩家入帮
    						GmProtocol$1.gi().s_OperateGovMember(this.applylist[i].iRid,1,0);
    						this.applylist[i].iRid=-2;
    					}
    					return true;
    				}
    			}
    		}
    		return false;
    	}

    	getgovdata( pls)
    	{
    		var i;
    		var dtype=pls.GetNextByte();
    //		if(dtype!=this.iBasePoint)return;
    		switch(dtype)
    		{
    		case 0://帮派基本属性
    			this.iLev=pls.GetNextByte();
    			this.iMoney=pls.GetNextInt();
    			this.iMaxMoney=pls.GetNextInt();
    			this.iExp=pls.GetNextInt();
    			this.iMaxExp=pls.GetNextInt();
    			this.iTick=pls.GetNextInt();
    			this.iMaxTick=pls.GetNextInt();
    			this.iAllMemberCount=pls.GetNextInt();
    			this.iMaxMemberCount=pls.GetNextInt();
    			this.iUpgradExp=pls.GetNextInt();
    			this.iBuildingId=pls.GetNextByte();
    			this.iBExp=pls.GetNextInt();
    			this.iBMaxExp=pls.GetNextInt();
    			this.iResearchId=pls.GetNextByte();
    			this.iRExp=pls.GetNextInt();
    			this.iRMaxExp=pls.GetNextInt();
    			this.iRMtLev=pls.GetNextInt();
    			break;
    		case 1://获得帮派成员列表,根据职位排序的
    			this.iTotalLine=pls.GetNextInt();
    			this.iLineEachPage=pls.GetNextByte();//每页行数
    			iPagePoint=pls.GetNextByte();//当前页数
    			this.iMemberCount=pls.GetNextByte();//当前页行数
    			for(i=0;i<this.iMemberCount;i++)
    			{
    				this.govmember[i].iRid=pls.GetNextInt();
    				this.govmember[i].iJob=pls.GetNextInt();
    				this.govmember[i].sName=pls.GetNextString();
    			}
    			break;
    		case 2://获取帮派建筑等级和进度
    			for(i=0;i<8;i++)
    			{
    				this.govbuilding[i].iBid=i;
    				this.govbuilding[i].iLev=pls.GetNextInt();
    				this.govbuilding[i].iProc=pls.GetNextInt();
    			}
    			break;
    		case 3://获取技能等级和进度
    			for(i=0;i<8;i++)
    			{
    				this.govskill[i].iSid=i;
    				this.govskill[i].iLev=pls.GetNextInt();
    				this.govskill[i].iProc=pls.GetNextInt();
    			}
    			break;
    		case 5://获得申请列表
    			this.iApplyCount=pls.GetNextByte();
    			for(i=0;i<this.iApplyCount;i++)
    			{
    				this.applylist[i].iRid=pls.GetNextInt();
    				this.applylist[i].sName=pls.GetNextString();
    			}
    			break;
    		}
    	}
    }
    GovFrame.iPagePoint;

    GovFrame.sBuilding=function( ibuilding)
    	{
    		switch(ibuilding)
    		{
    		case 0:return "青龙堂";
    		case 1:return "白虎堂";
    		case 2:return "朱雀堂";
    		case 3:return "玄武堂";
    		case 4:return "学院";
    		case 5:return "金库";
    		case 6:return "商会";
    		case 7:return "厢房";
    		case 8:return "药房";
    		default:return "未知"+ibuilding;
    		}
    	};

    	GovFrame.sSkill=function( iresearch)
    	{
    		switch(iresearch)
    		{
    		case 0:return "强身术";
    		case 1:return "炼丹术";
    		case 2:return "烹饪";
    		case 3:return "锻造术";
    		case 4:return "冶金术";
    		case 5:return "剪裁术";
    		case 6:return "健体";
    		case 7:return "修心";
    		default:return "未知"+iresearch;
    		}
    	};
    	GovFrame.sJob=function( ijob)
    	{
    		switch(ijob)
    		{
    		case 0:return "帮主";//1
    		case 1:return "副帮主";//1
    		case 2:return "左护法";//1
    		case 3:return "右护法";//1
    		case 4:return "长老";//2
    		case 5:return "堂主";//4
    		case 6:return "精英";
    		case 10:return "帮众";
    		default:return "未知"+ijob;
    		}
    	};

    	GovFrame. ReloadMember=function()
    	{
    		GmProtocol$1.gi().s_GetBaseGovData(1,iPagePoint);
    	};

    class Gov_SetDetail extends BaseClass{

    	constructor( a)
    	{
    		super();
    		this.iW=500;
    		this.iH=400;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_ok.InitButton("普通按钮140_55");
    		this.btn_ok.Move(this.iX+this.iW-30-140, this.iY+this.iH-30-55, 140, 55);
    		this.btn_ok.sName="修改";
    		
    		this.btn_cancel=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_cancel.InitButton("普通按钮140_55");
    		this.btn_cancel.Move(this.iX+30, this.iY+this.iH-30-55, 140, 55);
    		this.btn_cancel.sName="取消";
    		
    		this.in_name=new XInput(GmPlay$1.xani_ui);
    		this.in_name.sDetail="";
    	}

    	Draw()
    	{
    		DrawMode$1.frame_type4("中等框a52_50",this.iX,this.iY,this.iW,this.iH,52,50);
    //		M3DFast.gi().DrawTextEx(this.iX+this.iW/2, this.iY+20+15, "选择所需建造的建筑", 0xff005b41, 30, 101, 1, 1, 0, -2, -2);

    		var offx,offy;
    		
    		DrawMode$1.frame_type1("帮派宣言a20_44",this.iX+this.iW/2-60,this.iY+30,120,20);
    		M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2,this.iY+30+22, "帮派宣言", 0xff000000, 25, 101, 1, 1, 0, -2, -2);
    		
    		offx=this.iX+30;
    		offy=this.iY+20+44+20+5;

    		this.in_name.Move(offx,offy,this.iW-60,200);
    		DrawMode$1.new_framepc(offx,offy,this.iW-60,200);
    		this.in_name.onscr();
    //		DrawMode.frame_type1("输入框a20_47",offx,offy,300,200);
    		
    		if(this.in_name.sDetail.length<=0)
    		{
    			M3DFast$1.gi().DrawTextEx(offx+10, offy+10, "点击这里输入新的帮派宣言",0x60ffffff, 24, 101, 1, 1, 0, 0, 0);
    		}
    		else
    		{
    			FormatString.gi().FormatEx(this.in_name.sDetail, this.iW-60-20, 25, 0, 0, 30);
    			FormatString.gi().Draw(offx+10, offy+10);
    		}
    		
    		this.btn_ok.Draw();
    		this.btn_cancel.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.in_name.ProcTouch(msg, x, y))return true;
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{
    				if(this.in_name.sDetail.length>0)
    				{

    						var buf=this.in_name.sDetail.getBytes("GBK");
    						if(buf.length<4 || buf.length>80)
    						{
    							EasyMessage.easymsg.AddMessage("帮派宣言2-40个字");
    							return true;
    						}

    					GmProtocol$1.gi().s_NewGovOperate(19, 0, 0, 0, 0, this.in_name.sDetail);
    					XStat$1.gi().PopStat(1);
    				}
    				else EasyMessage.easymsg.AddMessage("请输入新的帮派宣言");
    			}
    			return true;
    		}

    		if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH) && msg==3)XStat$1.gi().PopStat(1);
    		return false;
    	}
    }

    Gov_SetDetail.Open=function( def)
    {
        var gsd=XStat$1.gi().PushStat(XStat$1.GS_GOV_SETDETAIL);
        gsd.in_name.sDetail=def;
    };

    class ConfirmApply extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.iW=131*2+20+10+20;
    		this.iH=52*2+20+10+20+80+20;
    		
    		this.iX=(GmConfig$1.SCRW-this.iW)/2+150;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_operates=new Array(4);//
    		for(i=0;i<4;i++)
    		{
    			this.btn_operates[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_operates[i].InitButton("成员操作131_52");
    		}
    		this.btn_operates[0].sName="聊天";
    		this.btn_operates[1].sName="好友";
    		this.btn_operates[2].sName="同意";
    		this.btn_operates[3].sName="拒绝";
    	}

    	Draw()
    	{
    		var i;
    		DrawMode$1.new_framepc(this.iX,this.iY,this.iW,this.iH);
    		
    //		GmPlay.xani_ui.DrawAnima(this.iX+20,this.iY+20, "右上UI", 0);// 右上角头像
    //		GmPlay.xani_ui.DrawAnima(this.iX+20,this.iY+20, "头像", iRace * 2 + iSex);
    //		GmPlay.sop(""+this.pgm.iRas);
    		GmPlay$1.xani_head.DrawAnima(this.iX+20,this.iY+20,"新头像"+this.pgm.iRas,0);
    		M3DFast$1.gi().DrawTextEx(this.iX+20+80+10, this.iY+20+20, this.pgm.sName, 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    		M3DFast$1.gi().DrawTextEx(this.iX+20+80+10, this.iY+20+20+40, "号码："+this.pgm.iRid, 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    		for(i=0;i<(MyGov.mg.bCheckPower(0)?4:2);i++)
    		{
    			this.btn_operates[i].Move(this.iX+20+i%2*(131+10),this.iY+20+80+20+Math.floor(i/2)*(52+10),131,52);
    			this.btn_operates[i].Draw();
    		}
    	}
    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<(MyGov.mg.bCheckPower(0)?4:2);i++)
    		{
    			if(this.btn_operates[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_operates[i].bCheck())
    				{
    					switch(i)
    					{
    					case 0://聊天
    						XStat$1.gi().PopStat(1);
    						PrivateChat_Send.OpenChat( this.pgm.iRid, this.pgm.sName,this.pgm.iRas);
    						break;
    					case 1://好友
    						GmProtocol$1.gi().s_FriendOperate(0,this.pgm.iRid,0);
    						XStat$1.gi().PopStat(1);
    						break;
    					case 2://同意
    						GmProtocol$1.gi().s_NewGovOperate(11, this.pgm.iRid, 1, 0,0,this.pgm.sName);
    						XStat$1.gi().PopStat(1);
    						break;
    					case 3://拒绝
    						GmProtocol$1.gi().s_NewGovOperate(11, this.pgm.iRid, 0, 0,0,this.pgm.sName);
    						XStat$1.gi().PopStat(1);
    						break;
    					}
    				}
    				return true;
    			}
    		}
    		if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW,this.iH) && msg==3)
    		{
    			XStat$1.gi().PopStat(1);
    		}
    		return false;
    	}
    }
    ConfirmApply.Open=function( gm)
    {
        if(gm.iRid==GmMe$1.me.iRid)return;
        var afg;
        if (XStat$1.gi().iXStat != XStat$1.GS_CONFIRMAPPLY)afg=XStat$1.gi().PushStat(XStat$1.GS_CONFIRMAPPLY);
        else afg =  XStat$1.gi().LastStat(0);

        afg.pgm=gm;
        
        if(MyGov.mg.bCheckPower(0))afg.iH=52*2+20+10+20+80+20;
        else afg.iH=52+20+20+80+20;
    };

    class GOV_MEMBER
    {/*
    	public int iRid;
    	short iInitStat;
    	
    	String sName;
    	int iSchoolId;
    	int this.iLev;
    	int iJob;
    	int this.iTick;
    	int this.iMaxTick;
    	String sJoinDate;
    	String sLoginTime;
    	int iPower;
    	int iRas;
    	int iOnLine;*/
    	
    	 constructor()
    	{
    		this.iRid=0;
    	}
    }

    class GOV_APPLYED
    {/*
    	public int iRid;
    	String sName;
    	int this.iLev;
    	int iSchoolId;
    	int iRas;
    	String sATime;
    	
        short iInitStat;*/
        constructor()
        {

        }
    }

    class GOV_EVENT
    {
        /*
    	public int iEid;
    	public String this.sDetail;
    	public String sTime;
        int iInitStat;*/
        constructor()
        {

        }
    }

    class NewGovFrame extends BaseClass{

    	 constructor( ani)
    	{
    		super();
            this.sBuildingDetail=[
    			"青龙堂：可提升青龙任务的效率以及雇佣工人的收益",
    			"白虎堂：可降低维护的安定度消耗，安定度影响技能研究效率",
    			"朱雀堂：可提高成员炼丹成功率和副产品率",
    			"玄武堂：可提升行动力上限和帮派维护增加的守护兽经验",
    			"学院：可提升帮派维护增加的技能经验",
    			"金库：可提升帮派资金上限",
    			"商会：可增加帮派商店出产道具种类和数量",
    			"厢房：可提升帮派人数上限",
                "药房：可增加帮派药房出产道具种类和数量"];

            this._GOVWELFARE=[
                    ["帮派修炼","提升修炼，战斗更加得心应手","#c0000001.	物理攻击修炼#e# # 每级提升2%物理攻击的伤害效果#e2.	法术攻击修炼#e# # 每级提升2%法术攻击的伤害效果#e3.	物理防御修炼#e# # 每级降低2%受到的物理伤害效#e4.	法术防御修炼#e# # 每级降低2%受到的法术伤害效果#e5.	封印修炼#e# # 每级提升2%封印命中几率#e6.	抗封修炼#e# # 每级降低2%被封印命中几率"],
                    ["帮派技能","学习辅助技能，升级赚钱两不误","#c0000001.	强身术#e# # 学习后能增加气血上限#e2.	修心#e# # 学习后能增加魔法上限#e3.	健体术#e# # 学习后能增加体力上限#e4.	炼丹术#e# # 学习后可以提高炼丹的能力#e5.	烹饪#e# #  学习后可以提高制作食物的能力#e6.	锻造术#e# # 学习后可以提高制作头盔和腰带的能力#e7.	冶金术#e# # 学习后可以提高制作武器和项链的能力#e8.	剪裁术#e# # 学习后可以提高制作衣服和靴子的能力"],
                    ["帮派商店","限时折扣，特色产品，仅此一家","#c000000帮派招商，商人们都在帮里开店了，我们有特殊渠道进货，价格有优惠哦#e#e每日11:00,15:00,19:00,23:00，帮派商店会刷新一定数量商品，种类繁多，价格优惠。#e#e升级商会可以增加帮派商店出产种类和数量#e#e"],
                    ["帮派药房","卖治病的药，售炼心的炉","#c000000江湖人士，过得都是刀口舔血的日子，楚王感怀，允许各帮各派建立帮派药房。#e#e每日12:00,15:00,18:00,21:00，帮派药房刷新一定数量物品，包括药材，丹方，	以及丹炉。玩家可消耗铜币，元宝或者帮贡选择购买。可能会有惊喜打折物品哦。#e#e升级药房可以增加帮派药房出产种类和数量#e#e"]];
             this._GOVACTIVITY=[
                        ["帮派竞赛","风云起，群帮争霸，狼烟升，万雄交锋。","#c000000# # 帮派竞赛每周周一至周五帮主消耗帮派资金进行报名，报名资金排名前8的帮派入选帮战。#e# # 帮派成功入选后，入帮3天以上等级达到20级的玩家，可于周五周六周日的19:30~20:00由咸阳帮战接引人进入帮战地图。#e# # 帮派竞赛分为粮草争夺战和场地对战，周五周六为粮草争夺战，周日为场地对战。#e# # 粮草争夺战双方初始粮草为100，任意一方粮草归零或者成员全部离开场地为负。#e# # 场地对战以成员全部离开场地者为负。#e帮派竞赛期间每次死亡，损失部分体力，体力为0，自动离场。#e# # 帮派竞赛期间每次赢得战斗或者成功运送粮草获得帮贡等奖励；体力归零自动离场获得经验帮贡，可能获得道具奖励；胜利帮派会在己方场地内刷新10个大宝箱以供捡取。"],
                        ["帮派副本","一段传奇，一个故事，探索小千世界之谜。","#c000000# # 拟定帮派守护兽达到30级时，帮派副本由帮主或拥有开启副本权限的成员消耗200万帮派资金，1000行动力开启，在开启时间内，加入帮派大于5天等级达到35的帮众方可参加，帮派副本开启时间持续2小时。#e#e# # 副本内玩家每三分钟将获得一次经验与帮贡奖励。#e#e# # 完成副本后，副本内所有玩家将获得侠义礼盒，惊喜多多"],
                        ["朱雀任务","访朱雀总管，寻神秘丹方。可获得帮贡，丹方","#c000000# # 玩家达到20后可以在帮派领地里找朱雀堂总管领取朱雀任务，完成任务可获得大量经验，金钱和帮贡，并且在第十次任务完成时获得丹方，丹方是炼丹的必需品。"],
                        ["青龙任务","倾众人之力，为帮派建设。可获得海量帮贡","#c000000# # 玩家达到20后可以在帮派领地里找朱雀堂总管领取青龙任务，完成任务可获得大量经验，金钱和帮贡。#e#e# # 青龙任务可以为帮派提供大量帮派建筑进度。"],
                        ["玄武任务","劳心劳力，为帮派谋取资金。可获得海量帮贡","#c000000# # 玩家达到20后可以在帮派领地里找朱雀堂总管领取玄武任务，完成任务可获得大量经验，金钱和帮贡。#e#e# # 玄武任务可以为帮派提供安定度以及大量帮派资金。"],
                        ["白虎任务","攘外安内，稳固帮内安定。可获得海量帮贡","#c000000# # 玩家达到20后可以在帮派领地里找朱雀堂总管领取白虎任务，完成任务可获得大量经验，金钱和帮贡。#e#e# # 白虎任务可以为帮派提供大量安定度。"]
             ];
                
    		var i;
    		this.iW=1100;
    		this.iH=620;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;

    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);

    		this.iPage=0;
    		this.btn_page=new Array(4);//
    		for(i=0;i<4;i++)
    		{
    			this.btn_page[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_page[i].InitButton("右侧标签");
    			this.btn_page[i].Move(this.iX+this.iW-15, this.iY+40+125*i, 50, 140);
    		}

    		this.btn0_fastback=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn0_fastback.InitButton("普通按钮170_55");
    		this.btn0_fastback.Move(this.iX+this.iW-25-20-170, this.iY+25+20, 170, 55);
    		this.btn0_fastback.sName="快速回帮";

    		this.btn0_govstatus=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn0_govstatus.bSingleButton=true;

    		this.btn0_govbuilding=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn0_govbuilding.bSingleButton=true;
    		
    		this.btn0_editdetail=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn0_editdetail.bSingleButton=true;

    		this.i0Table=0;
    		this.i0ShowExplain=-1;

    		this.btn1_page=new Array(3);//
    		this.btn1_page[0]=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn1_page[0].InitButton("选择按钮145_56");
    		this.btn1_page[0].sName="成员列表";
    		
    		this.btn1_page[1]=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn1_page[1].InitButton("选择按钮145_56");
    		this.btn1_page[1].sName="申请列表";
    		
    		this.btn1_page[2]=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn1_page[2].InitButton("选择按钮145_56");
    		this.btn1_page[2].sName="帮派事件";
    		
    		this.btn1_message=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn1_message.InitButton("喇叭按钮60_60");
    		
    		this.btn1_leavegov=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn1_leavegov.InitButton("普通按钮170_55");
    		this.btn1_leavegov.sName="脱离帮派";
    		
    		this.ui1a_memberlist=new UIList$1(0,9,this.iW-90,50+40*10);
    		this.ui1a_memberlist.SetTitle(0, "编号", 70,false);
    		this.ui1a_memberlist.SetTitle(1, "名字", 180,true);
    		this.ui1a_memberlist.SetTitle(2, "门派", 80,true);
    		this.ui1a_memberlist.SetTitle(3, "等级", 70,true);
    		this.ui1a_memberlist.SetTitle(4, "职位", 80,true);
    		this.ui1a_memberlist.SetTitle(5, "剩余帮贡", 110,true);
    		this.ui1a_memberlist.SetTitle(6, "历史帮贡", 110,true);
    		this.ui1a_memberlist.SetTitle(7, "入帮时间", 155,true);
    		this.ui1a_memberlist.SetTitle(8, "离线时间", 155,true);
    		
    		this.ui1b_applylist=new UIList$1(0,6,this.iW-90,50+40*10);
    		this.ui1b_applylist.SetTitle(0, "序号", 70,false);
    		this.ui1b_applylist.SetTitle(1, "名字", 180,false);
    		this.ui1b_applylist.SetTitle(2, "门派", 80,false);
    		this.ui1b_applylist.SetTitle(3, "等级", 70,false);
    		this.ui1b_applylist.SetTitle(4, "号码", 120,false);
    		this.ui1b_applylist.SetTitle(5, "申请时间", 490,false);
    		
    		this.ui1c_govevent=new UIList$1(0,2,this.iW-90,50+40*10);
    		this.ui1c_govevent.SetTitle(0, "日期", 250,false);
    		this.ui1c_govevent.SetTitle(1, "事件", 760,false);
    		this.ui1c_govevent.iTitleHeight=0;
    		this.ui1c_govevent.iAlign[1]=0;
    		
    		this.iSortType=-1;
    		this.iSortUD=0;
    		
    		this.btn2_go=new Array(4);//
    		this.btn2_detail=new Array(4);//
    		for(i=0;i<4;i++)
    		{
    			this.btn2_go[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn2_go[i].InitButton("普通按钮140_55");
    			this.btn2_go[i].sName="前往";
    			this.btn2_detail[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn2_detail[i].bSingleButton=true;
    		}
    		this.bLock2=false;
    		this.iOffY2=0;
    		
    		this.btn3_go=new Array(6);//
    		this.btn3_detail=new Array(6);//
    		for(i=0;i<6;i++)
    		{
    			this.btn3_go[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn3_go[i].InitButton("普通按钮140_55");
    			this.btn3_go[i].sName="前往";
    			this.btn3_detail[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn3_detail[i].bSingleButton=true;
    		}
    		this.bLock3=false;
    		this.iOffY3=0;
    	}

    	_InitMemberDetail( pls)
    	{
    		var rid=pls.GetNextInt();
    		var i;
    		for(i=0;i<this.iMCount;i++)
    		{
    			if(this.gov_members[i].iInitStat==2 && this.gov_members[i].iRid==rid)
    			{
    				this.gov_members[i].sName=pls.GetNextString();
    				this.gov_members[i].iSchoolId=pls.GetNextByte();
    				this.gov_members[i].iLev=pls.GetNextShort();
    				this.gov_members[i].iJob=pls.GetNextShort();
    				this.gov_members[i].iTick=pls.GetNextInt();
    				this.gov_members[i].iMaxTick=pls.GetNextInt();
    				this.gov_members[i].sJoinDate=pls.GetNextString();
    				this.gov_members[i].sLoginTime=pls.GetNextString();
    				this.gov_members[i].iPower=pls.GetNextShort();
    				this.gov_members[i].iRas=pls.GetNextByte();
    				this.gov_members[i].iOnLine=pls.GetNextByte();
    				this.gov_members[i].iInitStat=3;
    				return;
    			}
    		}
    	}

    	 _ApplyDetail( pls)
    	{
    		var i;
    		var rid=pls.GetNextInt();
    		for(i=0;i<this.iACount;i++)
    		{
    			if(this.gov_applys[i].iInitStat==2 && this.gov_applys[i].iRid==rid)
    			{
    				this.gov_applys[i].sName=pls.GetNextString();
    				this.gov_applys[i].iSchoolId=pls.GetNextInt();
    				this.gov_applys[i].iRas=pls.GetNextInt();
    				this.gov_applys[i].iLev=pls.GetNextInt();
    				this.gov_applys[i].sATime=pls.GetNextString();
    				this.gov_applys[i].iInitStat=3;
    				break;
    			}
    		}
    	}

    	 _ApplyList( pls)
    	{
    		var i;
    		this.iACount=pls.GetNextShort();
    		if(this.iACount<=0)return;
    		this.gov_applys=new Array(this.iACount);//
    		for(i=0;i<this.iACount;i++)
    		{
    			this.gov_applys[i]=new GOV_APPLYED();
    			this.gov_applys[i].iRid=pls.GetNextInt();
    			this.gov_applys[i].iInitStat=1;
    		}
    	}

    	 _InitEventDetail( pls)
    	{
    		var eid=pls.GetNextInt();
    		for(var i=0;i<this.iECount;i++)
    		{
    			if(this.gov_events[i].iEid==eid)
    			{
    				this.gov_events[i].sTime=pls.GetNextString();
    				this.gov_events[i].sDetail=pls.GetNextString();
    				this.gov_events[i].iInitStat=3;
    			}
    		}
    	}

    	 _InitGovEvent( pls)
    	{
    		this.iECount=pls.GetNextInt();
    		this.gov_events=new Array(this.iECount);//
    		for(var i=0;i<this.iECount;i++)
    		{
    			this.gov_events[i]=new GOV_EVENT();
    			this.gov_events[i].iEid=pls.GetNextInt();
    			this.gov_events[i].iInitStat=1;
    		}
    	}

    	_InitMemberList( pls)
    	{
    		var i;
    		var st=pls.GetNextByte();//排序方式
    		var ac=pls.GetNextShort();//总数
    		var start=pls.GetNextShort();//起始偏移量
    		
    //		GmPlay.sop("type="+st+"  allcount="+ac+"    start="+start);
    		
    		if(start==0)
    		{//重新分配内存
    			this.gov_members=new Array(ac);//
    			for(i=0;i<ac;i++)
    			{
    				this.gov_members[i]=new GOV_MEMBER();
    				this.gov_members[i].iInitStat=0;
    			}
    			this.iMCount=ac;
    			this.iSortType=st;
    		}
    		while(start<this.iMCount)
    		{
    			i=pls.GetNextInt();
    			if(i==0)break;
    //			GmPlay.sop(""+start+"==="+i);
    			this.gov_members[start].iRid=i;
    			this.gov_members[start].iInitStat=1;
    			start++;
    		}
    	}
    	
    	GetBase( pls)
    	{
    		this.iLev=pls.GetNextInt();
    		this.sMasterName=pls.GetNextString();
    		this.iMasterId=pls.GetNextInt();
    		this.sFightGovName=pls.GetNextString();
    		this.iFightGovId=pls.GetNextShort();
    		this.sDetail=pls.GetNextString();
    		
    		this.iMemberCount=pls.GetNextInt();
    		this.iMaxMemberCount=pls.GetNextInt();
    		this.iMoney=pls.GetNextInt();
    		this.iMaxMoney=pls.GetNextInt();
    		this.iExp=pls.GetNextInt();
    		this.iMaxExp=pls.GetNextInt();
    		this.iUpgradeExp=pls.GetNextInt();
    		this.iStable=pls.GetNextInt();
    		this.iMaxStable=pls.GetNextInt();//安定度
    		this.iTick=pls.GetNextInt();
    		this.iMaxTick=pls.GetNextInt();//行动力
    		this.iBuildingId=pls.GetNextByte();
    		this.iBuildingProc=pls.GetNextInt();
    		this.iBuildingUpgrade=pls.GetNextInt();
    		this.iReserchId=pls.GetNextByte();
    		this.iReserchProc=pls.GetNextInt();
    		this.iReserchUpgrade=pls.GetNextInt();
    		this.iMtLev=pls.GetNextInt();//维护等级
    		
    		this.iBuildingLevs=new Int32Array(9);
    		this.iBuildingProcs=new Int32Array(9);
    		for(var i=0;i<9;i++)
    		{
    			pls.GetNextByte();
    			this.iBuildingLevs[i]=pls.GetNextShort();
    			this.iBuildingProcs[i]=pls.GetNextInt();
    		}
    	}
    	
    	Draw()
    	{
    		var i;

    		DrawMode$1.new_baseframe4(this.iX, this.iY, this.iW,this.iH,"帮","派","列","表");
    		this.btn_close.Draw();
    		
    		for(i=0;i<4;i++)
    		{
    			if(this.iPage==i)
    			{
    				this.btn_page[i].bMouseIn=true;
    				this.btn_page[i].bMouseDown=true;
    			}
    			this.btn_page[i].Draw();
    		}
    		DrawMode$1.new_lableword4(this.iX+this.iW-15, this.iY+50+130*0-4, 40, 70,this.iPage==0,"帮","派","信","息");
    		DrawMode$1.new_lableword4(this.iX+this.iW-15, this.iY+50+130*1-8, 40, 70,this.iPage==1,"帮","派","成","员");
    		DrawMode$1.new_lableword4(this.iX+this.iW-15, this.iY+50+130*2-12, 40, 70,this.iPage==2,"帮","派,","福","利");
    		DrawMode$1.new_lableword4(this.iX+this.iW-15, this.iY+50+130*3-16, 40, 70,this.iPage==3,"帮","派","活","动");
    		
    		switch(this.iPage)
    		{
    		case 0:
    			this.Draw_0();
    			break;
    		case 1:
    			this.Draw_1();
    			break;
    		case 2:
    			this.Draw_2();
    			break;
    		case 3:
    			this.Draw_3();
    			break;
    		}
    	}
    	 Draw_0()
    	{
    		var i;
    		var offx,offy;
    		var w,h;
    		
    		offx=this.iX+25;
    		offy=this.iY+25;
    		w=this.iW-50;
    		h=this.iH-50;
    		DrawMode$1.new_framein(offx, offy, w, h);
    		
    		offx=this.iX+25+20;offy=this.iY+25+20;
    		DrawMode$1.frame_type4("淡蓝色a30_30", offx, offy, 500, 440, 30, 30);
    		
    		offx+=10;offy+=20;
    		this.DrawMessage(offx,offy,160,300,"帮派名称",MyGov.mg.sName);
    		this.DrawMessage(offx,offy+50,160,80,"帮派等级",""+(this.iLev+1));
    		this.DrawMessage(offx+160+80,offy+50,140,80,"帮派号码",""+MyGov.mg.iRealGid);
    		this.DrawMessage(offx,offy+100,160,300,"帮      主",this.sMasterName);
    		this.DrawMessage(offx,offy+150,160,300,"敌对帮派",this.iFightGovId==0?"无":this.sFightGovName);
    		
    		offx+=20;offy+=200;
    		this.btn0_editdetail.Move(offx,offy,440,200);
    		DrawMode$1.frame_type3("纯色b10_10",offx,offy,440,200,10,10);
    		DrawMode$1.frame_type2("外边框a10_10",offx,offy,440,200,10,10);
    		DrawMode$1.frame_type1("帮派宣言a20_44",offx+220-60,offy+20,120,20);
    		M3DFast$1.gi().DrawTextEx(offx+220,offy+20+22, "帮派宣言", 0xff000000, 25, 101, 1, 1, 0, -2, -2);

    		FormatString.gi().FormatEx("#c000000"+this.sDetail, 400, 20, 0, 0, 20);
    		FormatString.gi().Draw(offx+20,offy+80);
    		
    		offx=this.iX+25+20;offy=this.iY+25+20+440+10;
    		DrawMode$1.frame_type4("淡蓝色a30_30", offx, offy, 500, 80, 30, 30);
    		
    		offx+=10;offy+=20;
    		this.DrawMessage(offx,offy,160,100,"我的职位",GovFrame.sJob(MyGov.mg.iJob));
    		this.DrawMessage(offx+180+80,offy,100,100,"帮贡",""+MyGov.mg.iTick);
    		
    		offx=this.iX+25+20+500+10;offy=this.iY+25+20;
    		this.btn0_fastback.Draw();
    		this.btn0_govstatus.Move(offx+30, offy, 140, 70);
    		this.btn0_govbuilding.Move(offx+30+145, offy, 140, 70);
    		DrawMode$1.frame_type4(this.i0Table==0?"淡蓝色a30_30":"蓝色a30_30", offx+30, offy, 140, 90, 30, 30);
    		DrawMode$1.frame_type4(this.i0Table==1?"淡蓝色a30_30":"蓝色a30_30", offx+30+145, offy, 140, 90, 30, 30);
    		DrawMode$1.frame_type4("淡蓝色a30_30", offx, offy+60, 500, 470, 30, 30);
    		
    		offx+=10;offy+=60+15;
    		i=45;
    		if(this.i0Table==0)
    		{
    			M3DFast$1.gi().DrawText_2(this.btn0_govstatus.iX+this.btn0_govstatus.iW/2,this.btn0_govstatus.iY+this.btn0_govstatus.iH/2,"帮派状态",0xffffff00,30,101,1,1,0,-2,-2,4,0xff00244d);
    			M3DFast$1.gi().DrawTextEx(this.btn0_govbuilding.iX+this.btn0_govbuilding.iW/2,this.btn0_govbuilding.iY+this.btn0_govbuilding.iH/2,"帮派建筑",0xff000000,30,101,1,1,0,-2,-2);
    			DrawMode$1.frame_type3("纯色c30_30", this.btn0_govstatus.iX+2, this.btn0_govstatus.iY+60, 140-4, 30, 30, 30);
    			
    			this.DrawMessage1(offx,offy+i*0,200,260,XDefine$1.CalcRate(this.iMemberCount,this.iMaxMemberCount,260),"成员数量",this.iMemberCount+"/"+this.iMaxMemberCount);
    			this.DrawMessage1(offx,offy+i*1,200,260,XDefine$1.CalcRate(this.iMoney,this.iMaxMoney,260),"帮派资金",this.iMoney+"/"+this.iMaxMoney);
    			this.DrawMessage1(offx,offy+i*2,200,260,XDefine$1.CalcRate(this.iExp,this.iMaxExp,260),"当前繁荣度",this.iExp+"/"+this.iMaxExp);
    			this.DrawMessage1(offx,offy+i*3,200,260,0,"升级繁荣度",""+this.iUpgradeExp);
    			this.DrawMessage1(offx,offy+i*4,200,260,XDefine$1.CalcRate(this.iStable,this.iMaxStable,260),"安定度",this.iStable+"/"+this.iMaxStable);
    			this.DrawMessage1(offx,offy+i*5,200,260,XDefine$1.CalcRate(this.iTick,this.iMaxTick,260),"帮派行动力",this.iTick+"/"+this.iMaxTick);
    			this.DrawMessage1(offx,offy+i*6,200,260,XDefine$1.CalcRate(this.iBuildingProc,this.iBuildingUpgrade,260),"当前建造建筑",GovFrame.sBuilding(this.iBuildingId)+"("+this.iBuildingProc+"/"+this.iBuildingUpgrade+")");
    			this.DrawMessage1(offx,offy+i*7,200,260,XDefine$1.CalcRate(this.iReserchProc,this.iReserchUpgrade,260),"当前研究科技",GovFrame.sSkill(this.iReserchId)+"("+this.iReserchProc+"/"+this.iReserchUpgrade+")");
    			this.DrawMessage1(offx,offy+i*8,200,260,0,"当前维护级别",this.iMtLev==0?"低":(this.iMtLev==1?"中":"高"));
    			this.DrawMessage1(offx,offy+i*9,200,260,0,"守护兽等级",""+MyGov.mg.iShsLev);
    		}
    		else
    		{
    			M3DFast$1.gi().DrawTextEx(this.btn0_govstatus.iX+this.btn0_govstatus.iW/2,this.btn0_govstatus.iY+this.btn0_govstatus.iH/2,"帮派状态",0xff000000,30,101,1,1,0,-2,-2);
    			M3DFast$1.gi().DrawText_2(this.btn0_govbuilding.iX+this.btn0_govbuilding.iW/2,this.btn0_govbuilding.iY+this.btn0_govbuilding.iH/2,"帮派建筑",0xffffff00,30,101,1,1,0,-2,-2,4,0xff00244d);
    			DrawMode$1.frame_type3("纯色c30_30", this.btn0_govbuilding.iX+2, this.btn0_govbuilding.iY+60, 140-4, 30, 30, 30);

    			for(i=0;i<9;i++)
    			{
    				this.DrawMessage1(offx,offy+i*50,200,260,XDefine$1.CalcRate(this.iBuildingProcs[i],MyGov.iBuildingUpgrad[this.iBuildingLevs[i]]/10,260),GovFrame.sBuilding(i),this.iBuildingProcs[i]+"/"+MyGov.iBuildingUpgrad[this.iBuildingLevs[i]]/10);
    				M3DFast$1.gi().DrawTextEx(offx+10+110,offy+20+i*50, this.iBuildingLevs[i]+"级", 0xffffffff, 30, 101, 1, 1, 0, 0, -2);
    			}
    		}
    		this.i0Lx=offx;
    		this.i0Ly=offy;
    		if(this.i0ShowExplain>=0)
    		{
    			FormatString.gi().FormatEx(this.sBuildingDetail[this.i0ShowExplain], 260, 20, 0, 0, 25);
    			DrawMode$1.frame_type4("蓝色a30_30", offx-300, offy+this.i0ShowExplain*50-FormatString.gi().iH/2, 300, 40+FormatString.gi().iH, 30, 30);
    			FormatString.gi().Draw(offx-300+20, offy+this.i0ShowExplain*50-FormatString.gi().iH/2+20);
    		}

    		if(Confirm1.end(Confirm1.CONFIRM_BACKGOV))
    		{
    			if(Confirm1.bConfirm)
    			{//
    				GmProtocol$1.gi().s_NewGovOperate(4, 0, 0, 0,0,"");
    				XStat$1.gi().PopStat(1);
    			}
    		}
    	}

    	 DrawMessage1( x, y, w1, w2, w3, s1, s2)
    	{
    		M3DFast$1.gi().DrawTextEx(x+10,y+20, s1, 0xff000000, 30, 101, 1, 1, 0, 0, -2);
    		DrawMode$1.frame_type1("进度条背景a20_38", x+w1, y+1, w2, 20);
    		var ox=3;
    		w3=XDefine$1.CalcRate(w3,w2,w2-ox-ox);
    		if(w3>0)
    		{
    			M3DFast$1.gi().SetViewClip(x+w1+ox, y, x+w1+w3/2+ox, y+50);
    			GmPlay$1.xani_frame.DrawAnima(x+w1+ox, y+5,"进度条a150_30",0);
    			M3DFast$1.gi().NoClip();
    			
    			M3DFast$1.gi().SetViewClip(x+w1+w3/2+ox, y, x+w1+w3+ox, y+50);
    			GmPlay$1.xani_frame.DrawAnima(x+w1-150+w3+ox, y+5,"进度条a150_30",1);
    			M3DFast$1.gi().NoClip();
    		}
    		M3DFast$1.gi().DrawTextEx(x+w1+w2/2,y+20, s2, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    	}
    	 DrawMessage( x, y, w1, w2, s1, s2)
    	{
    		M3DFast$1.gi().DrawTextEx(x+w1/2,y+20, s1, 0xff000000, 30, 101, 1, 1, 0, -2, -2);
    		DrawMode$1.frame_type1("文本框a20_40", x+w1, y, w2, 20);
    		M3DFast$1.gi().DrawTextEx(x+w1+w2/2,y+20, s2, 0xffffffff, 25, 101, 1, 1, 0, -2, -2);		
    	}
    	 Draw_1()
    	{
    		var i;
    		var offx,offy;
    		var w,h;

    		offx=this.iX+25;
    		offy=this.iY+25;
    		w=this.iW-50;
    		h=this.iH-50;
    		DrawMode$1.new_framein(offx, offy, w, h);

    		offx+=20;
    		offy+=20;
    		
    		this.btn1_page[this.i1Page].bMouseIn=true;
    		this.btn1_page[this.i1Page].bMouseDown=true;

    		for(i=0;i<3;i++)
    		{
    			this.btn1_page[i].Move(offx+i*165, offy, 145, 56);
    			this.btn1_page[i].Draw();
    		}

    		switch(this.i1Page)
    		{
    		case 0:	this.Draw_1a(offx,offy);	break;
    		case 1:	this.Draw_1b(offx,offy);	break;
    		case 2:	this.Draw_1c(offx,offy);	break;
    		}
    	}

    	 Draw_1a( offx, offy)
    	{
    		var i,j;
    		if(MyGov.mg.bCheckPower(3))
    		{
    			this.btn1_message.Move(offx+600, offy, 60, 60);
    			this.btn1_message.Draw();
    		}
    		this.btn1_leavegov.Move(this.iX+this.iW-25-20-170, offy, 170, 55);
    		this.btn1_leavegov.Draw();
    		
    		offy+=75;
    		this.ui1a_memberlist.BeginDraw(offx, offy);
    		for(j=0;j<this.iMCount;j++)
    		{
    			if(this.iSortUD==0)i=j;
    			else i=this.iMCount-j-1;
    			this.ui1a_memberlist.DrawUnit(0, j, ""+(j+1));
    			
    			if(this.ui1a_memberlist.bShow(j) && this.gov_members[i]!=null)
    			{
    				if(this.gov_members[i].iInitStat==1)
    				{//获取信息
    					GmProtocol$1.gi().s_NewGovOperate(6, this.gov_members[i].iRid, 0, 0,0,"");
    					this.gov_members[i].iInitStat=2;
    				}
    				else if(this.gov_members[i].iInitStat==2)
    				{
    					this.ui1a_memberlist.DrawUnit(1, j, "获取中...");
    				}
    				else if(this.gov_members[i].iInitStat==3)
    				{///显示
    					this.ui1a_memberlist.DrawUnit(1, j, this.gov_members[i].sName);
    					this.ui1a_memberlist.DrawUnit(2, j, GameData$1.sSchools[this.gov_members[i].iSchoolId]);
    					this.ui1a_memberlist.DrawUnit(3, j, ""+this.gov_members[i].iLev);
    					this.ui1a_memberlist.DrawUnit(4, j, GovFrame.sJob(this.gov_members[i].iJob));
    					this.ui1a_memberlist.DrawUnit(5, j, ""+this.gov_members[i].iTick);
    					this.ui1a_memberlist.DrawUnit(6, j, ""+this.gov_members[i].iMaxTick);
    					this.ui1a_memberlist.DrawUnit(7, j, this.gov_members[i].sJoinDate);
    					this.ui1a_memberlist.DrawUnit(8, j, this.gov_members[i].iOnLine==0?this.gov_members[i].sLoginTime:"在线");
    				}
    			}
    		}
    		this.ui1a_memberlist.FinishDraw();
    		if(this.iSortType==this.ui1a_memberlist.iSortType)
    		{
    			if(this.iSortUD!=this.ui1a_memberlist.iSortUD)
    			{//本地翻转
    				this.iSortUD=this.ui1a_memberlist.iSortUD;
    //				this.ui1a_memberlist.iOffY=0;
    //				SortMember();
    			}
    		}
    		else
    		{
    			this.iSortType=this.ui1a_memberlist.iSortType;
    			this.iSortUD=0;
    			if(this.iSortType>=1 && this.iSortType<=8)
    			{
    				GmProtocol$1.gi().s_NewGovOperate(5, this.iSortType, 0, 0,0,"");
    				this.iMCount=0;
    				this.ui1a_memberlist.iOffY=0;
    			}
    		}
    		i=this.ui1a_memberlist.iChecked();
    		if(i>=0)
    		{//点击了，弹出操作框
    			if(this.iSortUD==0);
    			else i=this.iMCount-i-1;
    			MemberOperate.Open(this.gov_members[i]);
    		}
    		if(Confirm1.end(Confirm1.CONFIRM_LEAVEGOV))
    		{
    			if(Confirm1.bConfirm)
    			{//离开帮派
    				GmProtocol$1.gi().s_LeaveGov();
    				MyGov.mg.iRealGid=-1;
    				XStat$1.gi().PopStat(1);
    			}
    		}
    	}
    	 Draw_1b( offx, offy)
    	{
    		var i,j;
    		offy+=75;
    		this.ui1b_applylist.BeginDraw(offx, offy);
    		for(j=0;j<this.iACount;j++)
    		{
    			i=j;
    			this.ui1b_applylist.DrawUnit(0, j, ""+(j+1));
    			
    			if(this.ui1b_applylist.bShow(j) && this.gov_applys[i]!=null)
    			{
    //				GmPlay.sop("sdf"+this.gov_applys[i].iInitStat);
    				if(this.gov_applys[i].iInitStat==1)
    				{//获取信息
    					GmProtocol$1.gi().s_NewGovOperate(10, this.gov_applys[i].iRid, 0, 0,0,"");
    					this.gov_applys[i].iInitStat=2;
    				}
    				else if(this.gov_applys[i].iInitStat==2)
    				{
    					this.ui1b_applylist.DrawUnit(1, j, "获取中...");
    				}
    				else if(this.gov_applys[i].iInitStat==3)
    				{///显示
    					
    					this.ui1b_applylist.DrawUnit(1, j, this.gov_applys[i].sName);
    					this.ui1b_applylist.DrawUnit(2, j, GameData$1.sSchools[this.gov_applys[i].iSchoolId]);
    					this.ui1b_applylist.DrawUnit(3, j, ""+this.gov_applys[i].iLev);
    					this.ui1b_applylist.DrawUnit(4, j, ""+this.gov_applys[i].iRid);
    					this.ui1b_applylist.DrawUnit(5, j, this.gov_applys[i].sATime);
    				}
    			}
    		}
    		this.ui1b_applylist.FinishDraw();
    		i=this.ui1b_applylist.iChecked();
    		if(i>=0 && i<this.iACount)
    		{//点击了，弹出操作框
    			ConfirmApply.Open(this.gov_applys[i]);
    		}
        }

    	 Draw_1c( offx, offy)
    	{
    		var i,j;
    		offy+=75;
    		this.ui1c_govevent.BeginDraw(offx, offy);
    		for(j=0;j<this.iECount;j++)
    		{
    			i=j;
    //			this.ui1c_govevent.DrawUnit(0, j, ""+(j+1));
    			
    			if(this.ui1c_govevent.bShow(j) && this.gov_events[i]!=null)
    			{
    //				GmPlay.sop("sdf"+this.gov_applys[i].iInitStat);
    				if(this.gov_events[i].iInitStat==1)
    				{//获取信息
    					GmProtocol$1.gi().s_NewGovOperate(13, this.gov_events[i].iEid, 0, 0,0,"");
    					this.gov_events[i].iInitStat=2;
    				}
    				else if(this.gov_events[i].iInitStat==2)
    				{
    					this.ui1c_govevent.DrawUnit(1, j, "获取中...");
    				}
    				else if(this.gov_events[i].iInitStat==3)
    				{///显示
    					this.ui1c_govevent.DrawUnit(0, j, this.gov_events[i].sTime);
    					this.ui1c_govevent.DrawUnit(1, j, this.gov_events[i].sDetail);
    				}
    			}
    		}
    		this.ui1c_govevent.FinishDraw();
    	}

    	 Draw_2()
    	{//帮派福利
    		var i;

    		DrawMode$1.new_framein(this.iX+25, this.iY+25, this.iW-50, this.iH-50);

    		M3DFast$1.gi().SetViewClip(this.iX+25+20, this.iY+25+20, this.iX+this.iW-25-20, this.iY+this.iH-25-20);
    		for(i=0;i<4;i++)
    		{
    			this.Draw2Entry(i,this.iX+25+20,this.iY+25+20+i*100+this.iOffY2,this._GOVWELFARE[i][0],this._GOVWELFARE[i][1]);
    		}
    		M3DFast$1.gi().NoClip();
    		if(!this.bLock2)
    		{
    			if(this.iOffY2>0 || this.iOffY2<0)this.iOffY2/=2;
    		}
    		for(i=0;i<4;i++)
    		{
    			if(Confirm1.end(Confirm1.CONFIRM_GOVCONVEY1[i]))
    			{
    				if(Confirm1.bConfirm)
    				{//
    					GmProtocol$1.gi().s_NewGovOperate(4, 1, i, 0,0,"");
    					XStat$1.gi().PopStat(1);
    				}
    			}
    		}
    	}
    	 Draw2Entry( p, offx, offy, title, detail)
    	{
    		DrawMode$1.frame_type1("帮派福利条a20_92",offx,offy,1010,20);
    		
    		GmPlay$1.xani_icon.DrawAnima_aa(offx+20, offy+(92-73)/2, title,0);
    		M3DFast$1.gi().DrawText_2(offx+20+73+20,offy+92/2, title, 0xffffff00, 30, 101, 1, 1, 0, 0, -2, 4, 0xffa57841);
    		M3DFast$1.gi().DrawTextEx(offx+20+73+20+160, offy+92/2, detail, 0xff000000, 20, 101, 1, 1, 0, 0, -2);
    		this.btn2_go[p].Move(offx+1010-20-140,offy+(92-55)/2,140,55);
    		this.btn2_go[p].Draw();
    		
    		this.btn2_detail[p].Move(offx+20, offy+(92-73)/2, 73,73);
    	}


    	 Draw_3()
    	{//帮派活动
    		var i;

    		DrawMode$1.new_framein(this.iX+25, this.iY+25, this.iW-50, this.iH-50);

    		M3DFast$1.gi().SetViewClip(this.iX+25+20, this.iY+25+20, this.iX+this.iW-25-20, this.iY+this.iH-25-20);
    		for(i=0;i<6;i++)
    		{
    			this.Draw3Entry(i,this.iX+25+20,this.iY+25+20+i*100+this.iOffY3,this._GOVACTIVITY[i][0],this._GOVACTIVITY[i][1]);
    		}
    		M3DFast$1.gi().NoClip();
    		if(!this.bLock3)
    		{//100*6=600,,,,,,,,,this.iH-90
    			i=(100*6-8)-(this.iH-90);
    			if(this.iOffY3>0)this.iOffY3/=2;
    			if(i<=0)
    			{
    				if(this.iOffY3<0)this.iOffY3/=2;
    			}
    			else if(this.iOffY3<-i)
    			{
    				i+=this.iOffY3;
    				i/=2;
    				this.iOffY3-=i;
    			}
    		}
    		for(i=0;i<6;i++)
    		{
    			if(Confirm1.end(Confirm1.CONFIRM_GOVCONVEY2[i]))
    			{
    				if(Confirm1.bConfirm)
    				{//
    					GmProtocol$1.gi().s_NewGovOperate(4, 2, i, 0,0,"");
    					XStat$1.gi().PopStat(1);
    				}
    			}
    		}
    	}
    	 Draw3Entry( p, offx, offy, title, detail)
    	{
    		DrawMode$1.frame_type1("帮派福利条a20_92",offx,offy,1010,20);
    		
    		GmPlay$1.xani_icon.DrawAnima_aa(offx+20, offy+(92-73)/2, title,0);
    		M3DFast$1.gi().DrawText_2(offx+20+73+20,offy+92/2, title, 0xffffff00, 30, 101, 1, 1, 0, 0, -2, 4, 0xffa57841);
    		M3DFast$1.gi().DrawTextEx(offx+20+73+20+160, offy+92/2, detail, 0xff000000, 20, 101, 1, 1, 0, 0, -2);
    		this.btn3_go[p].Move(offx+1010-20-140,offy+(92-55)/2,140,55);
    		this.btn3_go[p].Draw();
    		
    		this.btn3_detail[p].Move(offx+20, offy+(92-73)/2, 73,73);
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(msg==3)
    		{
    			this.bLock2=false;
    			this.bLock3=false;
    		}
    		for(i=0;i<4;i++)
    		{
    			if(this.btn_page[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_page[i].bCheck())
    				{
    					if(this.iPage!=i)
    					{
    						this.iPage=i;
    						if(i==1)
    						{
    							GmProtocol$1.gi().s_NewGovOperate(5, 0, 0, 0,0,"");
    							this.iMCount=0;
    							this.i1Page=0;
    							this.ui1a_memberlist.Clean();
    							this.iSortType=-1;
    							this.iSortUD=0;
    						}
    					}
    				}
    			}
    		}
    		switch(this.iPage)
    		{
    		case 0:
    			this.i0ShowExplain=-1;
    			if((msg==1 || (msg==2 && this.i0ShowExplain>=0)) && this.i0Table==1)
    			{
    				this.i0ShowExplain=-1;
    				for(i=0;i<9;i++)
    				{
    					if(XDefine$1.bInRect(x, y, this.i0Lx, this.i0Ly+i*50, 120, 40))
    					{
    						this.i0ShowExplain=i;
    					}
    				}
    			}
    			else this.i0ShowExplain=-1;
    			if(this.btn0_govstatus.ProcTouch(msg, x, y))
    			{
    				if(this.btn0_govstatus.bCheck())this.i0Table=0;
    			}
    			if(this.btn0_govbuilding.ProcTouch(msg, x, y))
    			{
    				if(this.btn0_govbuilding.bCheck())this.i0Table=1;
    			}
    			if(this.btn0_fastback.ProcTouch(msg, x, y))
    			{
    				if(this.btn0_fastback.bCheck())
    				{
    					if(BeginersGuide.gi().bCheckGuideExt(100))
    					{//确认传送
    						Confirm1.start(Confirm1.CONFIRM_BACKGOV,"每次使用快速回帮需要花费6000游戏币，是否确定快速回帮？");
    					}
    					else
    					{//直接传送
    						GmProtocol$1.gi().s_NewGovOperate(4, 0, 0, 0,0,"");
    						XStat$1.gi().PopStat(1);
    					}
    				}
    				return true;
    			}
    			if(this.btn0_editdetail.ProcTouch(msg, x, y))
    			{
    				if(this.btn0_editdetail.bCheck())
    				{//改宣言
    					if(MyGov.mg.iJob==0)
    					{
    						Gov_SetDetail.Open(this.sDetail);
    					}
    				}
    			}
    			break;
    		case 1://帮派成员
    			for(i=0;i<3;i++)
    			{
    				if(this.btn1_page[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn1_page[i].bCheck())
    					{
    						if(this.i1Page!=i)
    						{
    							if(i==0)
    							{//成员列表
    								GmProtocol$1.gi().s_NewGovOperate(5, 0, 0, 0,0,"");
    								this.iMCount=0;
    								this.ui1a_memberlist.Clean();
    								this.iSortType=-1;
    								this.iSortUD=0;
    							}
    							if(i==1)
    							{//申请列表
    								GmProtocol$1.gi().s_NewGovOperate(9, 0, 0, 0,0,"");
    								this.iACount=0;
    								this.ui1b_applylist.Clean();
    							}
    							if(i==2)
    							{
    								GmProtocol$1.gi().s_NewGovOperate(12, 0, 0, 0,0,"");
    								this.iECount=0;
    								this.ui1c_govevent.Clean();
    							}
    							this.i1Page=i;
    						}
    					}
    				}
    			}
    			switch(this.i1Page)
    			{
    			case 0:
    				if(this.ui1a_memberlist.ProcTouch(msg, x, y))return true;
    				if(MyGov.mg.bCheckPower(3))
    				{
    					if(this.btn1_message.ProcTouch(msg, x, y))
    					{
    						if(this.btn1_message.bCheck())
    						{
    //							if(MyGov.mg.bCheckPower(3))
    							{
    								PrivateChat_Send.OpenChat( 10000, MyGov.mg.sName,6);
    								EasyMessage.easymsg.AddMessage("发送收取5万铜币");
    							}
    //							else EasyMessage.easymsg.AddMessage("你没有群发消息权限");
    						}
    						return true;
    					}
    				}
    				if(this.btn1_leavegov.ProcTouch(msg, x, y))
    				{
    					if(this.btn1_leavegov.bCheck())
    					{
    						if(MyGov.mg.iJob==0)FrameMessage.fm.Open("请先任命其他人为帮主后再脱离帮派");
    						else
    						{
    							Confirm1.start(Confirm1.CONFIRM_LEAVEGOV,"是否确认脱离帮派？");
    						}
    					}
    					return true;
    				}
    				break;
    			case 1:
    				this.ui1b_applylist.ProcTouch(msg, x, y);
    				break;
    			case 2:
    				this.ui1c_govevent.ProcTouch(msg, x, y);
    				break;
    			}
    			break;
    		case 2://帮派福利
    			for(i=0;i<4;i++)
    			{
    				if(this.btn2_go[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn2_go[i].bCheck())
    					{//101,102,103,104
    						if(BeginersGuide.gi().bCheckGuideExt(101+i))Confirm1.start(Confirm1.CONFIRM_GOVCONVEY1[i],"每次传送需要花费8000游戏币，是否确定传送？");
    						else
    						{//直接传送
    							GmProtocol$1.gi().s_NewGovOperate(4, 1, i, 0,0,"");
    							XStat$1.gi().PopStat(1);
    						}
    					}
    					return true;
    				}
    				if(this.btn2_detail[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn2_detail[i].bCheck())
    					{
    						PromptMessage.Open(this._GOVWELFARE[i][0],this._GOVWELFARE[i][2]);
    					}
    					return true;
    				}
    			}

    			if(this.bLock2 && msg==2)
    			{
    				this.iOffY2+=(y-this.iLock2Y);
    				this.iLock2Y=y;
    			}
    			if(XDefine$1.bInRect(x, y, this.iX+25, this.iY+25, this.iW-50, this.iH-50) && msg==1)
    			{
    				this.bLock2=true;
    				this.iLock2Y=y;
    				return true;
    			}
    			break;
    		case 3://帮派活动
    			for(i=0;i<6;i++)
    			{
    				if(this.btn3_go[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn3_go[i].bCheck())
    					{//105,106,107,108,109,110
    						if(BeginersGuide.gi().bCheckGuideExt(105+i))Confirm1.start(Confirm1.CONFIRM_GOVCONVEY2[i],"每次传送需要花费8000游戏币，是否确定传送？");
    						else
    						{//直接传送
    							GmProtocol$1.gi().s_NewGovOperate(4, 2, i, 0,0,"");
    							XStat$1.gi().PopStat(1);
    						}
    					}
    					return true;
    				}
    				if(this.btn3_detail[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn3_detail[i].bCheck())
    					{
    						PromptMessage.Open(this._GOVACTIVITY[i][0],this._GOVACTIVITY[i][2]);
    					}
    					return true;
    				}
    			}

    			if(this.bLock3 && msg==2)
    			{
    				this.iOffY3+=(y-this.iLock3Y);
    				this.iLock3Y=y;
    			}
    			if(XDefine$1.bInRect(x, y, this.iX+25, this.iY+25, this.iW-50, this.iH-50) && msg==1)
    			{
    				this.bLock3=true;
    				this.iLock3Y=y;
    				return true;
    			}
    			break;
    		}

    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		return false;
    	}
    }

    NewGovFrame.Open=function(pls)
    {
    	var afg;
    	if (XStat$1.x_stat.iXStat != XStat$1.GS_NEWGOVFRAME)afg= XStat$1.x_stat.PushStat(XStat$1.GS_NEWGOVFRAME);
    	else afg =  XStat$1.x_stat.LastStat(0);
    	afg.GetBase(pls);
    };

    NewGovFrame.InitMemberDetail=function(pls)
    {
    	var afg;
    	afg=XStat$1.x_stat.FindStat(XStat$1.GS_NEWGOVFRAME);
    	if (afg!=null)afg._InitMemberDetail(pls);
    };

    NewGovFrame.ChangeJob=function(pls)
    	{
    		var afg;
    		afg=XStat$1.x_stat.FindStat(XStat$1.GS_NEWGOVFRAME);
    		if (afg!=null)
    		{
    			var rid=pls.GetNextInt();
    			var job=pls.GetNextInt();
    			var power=pls.GetNextInt();
    			if(job==100)
    			{//踢出，清除
    				var j=0;
    				for(var i=0;i<afg.iMCount-1;i++)
    				{
    					if(afg.gov_members[i].iRid==rid)j=1;
    					if(j==1)afg.gov_members[i]=afg.gov_members[i+1];
    				}
    				if(j==1)afg.iMCount--;
    			}
    			else
    			{
    				for(var i=0;i<afg.iMCount;i++)
    				{
    					if(afg.gov_members[i].iRid==rid)
    					{
    						afg.gov_members[i].iJob=job;
    						afg.gov_members[i].iPower=power;
    					}
    				}
    			}
    		}
    	};

    	NewGovFrame.ApplyCheck=function(pls)
    	{
    		var afg;
    		afg=XStat$1.x_stat.FindStat(XStat$1.GS_NEWGOVFRAME);
    		if (afg!=null)
    		{
    			var j=0;
    			var rid=pls.GetNextInt();
    			for(var i=0;i<afg.iACount-1;i++)
    			{
    				if(afg.gov_applys[i].iRid==rid)j=1;
    				if(j==1)afg.gov_applys[i]=afg.gov_applys[i+1];
    			}
    			afg.iACount--;
    		}
    	};
    	NewGovFrame. ApplyDetail=function(pls)
    	{
    		var afg;
    		afg=XStat$1.x_stat.FindStat(XStat$1.GS_NEWGOVFRAME);
    		if (afg!=null)afg._ApplyDetail(pls);
    	};
    	NewGovFrame. ApplyList=function( pls)
    	{
    		var afg;
    		afg=XStat$1.x_stat.FindStat(XStat$1.GS_NEWGOVFRAME);
    		if (afg!=null)afg._ApplyList(pls);
    	};
    	NewGovFrame. UpdateDetail=function( pls)
    	{
    		var afg;
    		afg=XStat$1.x_stat.FindStat(XStat$1.GS_NEWGOVFRAME);
    		if (afg!=null)afg.sDetail=pls.GetNextString();
    	};
    	NewGovFrame. InitEventDetail=function( pls)
    	{
    		var afg;
    		afg=XStat$1.x_stat.FindStat(XStat$1.GS_NEWGOVFRAME);
    		if (afg!=null)afg._InitEventDetail(pls);
    	};
    	NewGovFrame. InitGovEvent=function( pls)
    	{
    		var afg;
    		afg=XStat$1.x_stat.FindStat(XStat$1.GS_NEWGOVFRAME);
    		if (afg!=null)afg._InitGovEvent(pls);
    	};
    	NewGovFrame. InitMemberList=function( pls)
    	{
    		var afg;
    		afg=XStat$1.x_stat.FindStat(XStat$1.GS_NEWGOVFRAME);
    		if (afg!=null)afg._InitMemberList(pls);
    	};

    class GOV_ENTRUST
    {/*
    	int iMid;
    	int iType;//类型，(0朱雀/1青龙/2白虎/3玄武)
    	int iStat;//(0等待领取，1进行中，2过期失效，3已完成)
    	
    	String sSName;//发布人
    	int iSRid;
    	int iSIngot;
    	int iSMoney;
    	String sSTime;
    	
    	String sTName;//接受人
    	int iTRid;
    	String sTTime;
    	
    	int iInitStat;*/
    	constructor()
    	{

    	}
    }

    class EntrustMission extends BaseClass{
    	
    	constructor( a)
    	{
    		super();
    		this._MSTAT=["等待领取","进行中","已过期","已完成"];
    		var i;
    		this.iW=1100;
    		this.iH=620;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.iPage=0;
    		this.btn_page=new Array(2);//
    		for(i=0;i<2;i++)
    		{
    			this.btn_page[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_page[i].InitButton("右侧标签");
    			this.btn_page[i].Move(this.iX+this.iW-15, this.iY+40+125*i, 50, 140);
    		}
    		
    		this.iSelect=0;
    		this.btn_select=new Array(4);//
    		for(i=0;i<4;i++)
    		{
    			this.btn_select[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_select[i].InitButton("选择按钮145_56");
    			this.btn_select[i].Move(this.iX+25+20+160*i, this.iY+25+20, 145, 55);
    		}
    		this.btn_select[0].sName="朱雀任务";
    		this.btn_select[1].sName="青龙任务";
    		this.btn_select[2].sName="白虎任务";
    		this.btn_select[3].sName="玄武任务";
    		
    		this.btn_addmission=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_addmission.InitButton("普通按钮170_55");
    		this.btn_addmission.Move(this.iX+this.iW-25-20-170, this.iY+25+20, 170, 55);
    		this.btn_addmission.sName="发布委托";
    		
    		this.ui0_missionlist=new UIList$1(0,9,this.iW-90,50+40*10);
    		this.ui0_missionlist.SetTitle(0, "任务佣金", 300,false);
    		this.ui0_missionlist.SetTitle(1, "发布人", 200,true);
    		this.ui0_missionlist.SetTitle(2, "发布时间", 510,true);
    		
    		this.ui1_missionlist=new UIList$1(0,9,this.iW-90,50+40*10);
    		this.ui1_missionlist.SetTitle(0, "任务佣金", 300,false);
    		this.ui1_missionlist.SetTitle(1, "任务状态", 200,true);
    		this.ui1_missionlist.SetTitle(2, "发布时间", 510,true);
    	}

    	_GetMyDetail( pls)
    	{
    		var i;
    		var cs1=pls.GetNextInt();
    		var cs2=pls.GetNextInt();
    		if(cs1==100)
    		{
    			for(i=0;i<this.iM1Count;i++)
    			{
    				if(this.ets1[i].iInitStat==2 && this.ets1[i].iMid==cs2)
    				{
    					this.ets1[i].iStat=pls.GetNextByte();
    					this.ets1[i].iSIngot=pls.GetNextShort();
    					this.ets1[i].iSMoney=pls.GetNextInt();
    					this.ets1[i].sSTime=pls.GetNextString();
    					this.ets1[i].iType=pls.GetNextByte();
    					this.ets1[i].sSName=pls.GetNextString();
    					this.ets1[i].iInitStat=3;
    				}
    			}
    		}
    		else
    		{
    			for(i=0;i<this.iM0Count;i++)
    			{
    				if(this.ets0[i].iInitStat==2 && this.ets0[i].iMid==cs2)
    				{
    					this.ets0[i].iStat=pls.GetNextByte();
    					this.ets0[i].iSIngot=pls.GetNextShort();
    					this.ets0[i].iSMoney=pls.GetNextInt();
    					this.ets0[i].sSTime=pls.GetNextString();
    					this.ets0[i].iType=pls.GetNextByte();
    					this.ets0[i].sSName=pls.GetNextString();
    					this.ets0[i].iInitStat=3;
    				}
    			}
    		}
    	}

    	_GetMyMission( pls)
    	{
    		var i;
    		var cs1=pls.GetNextInt();
    		if(cs1==100)
    		{//获得我发布的任务列表
    			this.iM1Count=pls.GetNextInt();
    			this.ets1=new Array(this.iM1Count);//
    			for(i=0;i<this.iM1Count;i++)
    			{
    				this.ets1[i]=new GOV_ENTRUST();
    				this.ets1[i].iMid=pls.GetNextInt();;
    				this.ets1[i].iInitStat=1;
    			}
    			this.iAlreadyEntrusted=pls.GetNextInt();
    		}
    		else
    		{
    			this.iM0Count=pls.GetNextInt();
    			this.ets0=new Array(this.iM0Count);//
    			for(i=0;i<this.iM0Count;i++)
    			{
    				this.ets0[i]=new GOV_ENTRUST();
    				this.ets0[i].iMid=pls.GetNextInt();;
    				this.ets0[i].iInitStat=1;
    			}
    		}
    	}

    	Draw()
    	{
    		var i;
    		var offx,offy;
    		var w,h;

    		DrawMode$1.new_baseframe4(this.iX, this.iY, this.iW,this.iH,"委","托","任","务");
    		this.btn_close.Draw();
    		
    		for(i=0;i<2;i++)
    		{
    			if(this.iPage==i)
    			{
    				this.btn_page[i].bMouseIn=true;
    				this.btn_page[i].bMouseDown=true;
    			}
    			this.btn_page[i].Draw();
    		}
    		DrawMode$1.new_lableword4(this.iX+this.iW-15, this.iY+50+130*0-4, 40, 70,this.iPage==0,"委","托","任","务");
    		DrawMode$1.new_lableword4(this.iX+this.iW-15, this.iY+50+130*1-8, 40, 70,this.iPage==1,"我","的","委","托");
    		
    		offx=this.iX+25;
    		offy=this.iY+25;
    		w=this.iW-50;
    		h=this.iH-50;
    		DrawMode$1.new_framein(offx, offy, w, h);
    		
    		switch(this.iPage)
    		{
    		case 0:
    			this.Draw_0(offx+20,offy+20);
    			break;
    		case 1:
    			this.Draw_1(offx+20,offy+20);
    			break;
    		}

    	}
    	 Draw_0( offx, offy)
    	{
    		var i;
    		for(i=0;i<4;i++)
    		{
    			if(this.iSelect==i)
    			{
    				this.btn_select[i].bMouseIn=true;
    				this.btn_select[i].bMouseDown=true;
    			}
    			this.btn_select[i].Draw();
    		}

    		this.ui0_missionlist.BeginDraw(offx, offy+55+20);
    		for(i=0;i<this.iM0Count;i++)
    		{
    			if(this.ui0_missionlist.bShow(i) && this.ets0[i]!=null)
    			{
    				if(this.ets0[i].iInitStat==1)
    				{
    					GmProtocol$1.gi().s_NewGovOperate(15,this.iSelect,this.ets0[i].iMid,0,0,"");
    					this.ets0[i].iInitStat=2;
    				}
    				else if(this.ets0[i].iInitStat==2)
    				{
    					this.ui0_missionlist.DrawUnit(0, i, "获取中");
    				}
    				else if(this.ets0[i].iInitStat==3)
    				{
    					this.ui0_missionlist.DrawUnit(0, i, this.ets0[i].iSIngot+"元宝+"+this.ets0[i].iSMoney+"铜币");
    					this.ui0_missionlist.DrawUnit(1, i, this.ets0[i].sSName);;
    					this.ui0_missionlist.DrawUnit(2, i, this.ets0[i].sSTime);
    				}
    			}
    		}
    		this.ui0_missionlist.FinishDraw();
    		i=this.ui0_missionlist.iChecked();
    		if(i>=0)
    		{
    			this.pge=this.ets0[i];
    			Confirm1.start(Confirm1.CONFIRM_GOVGETENTRUST,ReleaseGovMission._FOUR[this.pge.iType]+"#e#e委托人:"+this.pge.sSName+"#e#e接受委托任务后半小时内未完成则任务失败#e#e是否确定接受委托？");
    		}
    		
    		if(Confirm1.end(Confirm1.CONFIRM_GOVGETENTRUST))
    		{
    			if(Confirm1.bConfirm)
    			{//
    				GmProtocol$1.gi().s_NewGovOperate(17, 1,this.pge.iMid,this.pge.iType,0 ,"");
    				this.ui0_missionlist.Clean();
    			}
    		}
    	}
    	 Draw_1( offx, offy)
    	{
    		var i,j,k,m;
    		for(i=0;i<4;i++)
    		{
    			if(this.iSelect==i)
    			{
    				this.btn_select[i].bMouseIn=true;
    				this.btn_select[i].bMouseDown=true;
    			}
    			this.btn_select[i].Draw();
    		}
    		this.btn_addmission.Draw();
    		
    		m=this.ui1_missionlist.iChecked();
    		
    		this.ui1_missionlist.BeginDraw(offx, offy+55+20);
    		j=0;k=0;
    		for(i=0;i<this.iM1Count;i++)
    		{
    			if(this.ets1[i].iInitStat==1)
    			{
    				if(k<6)
    				{
    					GmProtocol$1.gi().s_NewGovOperate(15,100,this.ets1[i].iMid,0,0,"");
    					this.ets1[i].iInitStat=2;
    				}
    				k++;
    			}
    			else if(this.ets1[i].iInitStat==2)
    			{
    //				this.ui1_missionlist.DrawUnit(1, i, "获取中");
    				k++;
    			}
    			else if(this.ets1[i].iInitStat==3)
    			{
    				if(this.ets1[i].iType==this.iSelect)
    				{
    					this.ui1_missionlist.DrawUnit(0, j, this.ets1[i].iSIngot+"元宝+"+this.ets1[i].iSMoney+"铜币");
    					this.ui1_missionlist.DrawUnit(1, j, this._MSTAT[this.ets1[i].iStat]);
    					this.ui1_missionlist.DrawUnit(2, j, this.ets1[i].sSTime);
    					if(m==j)
    					{//所点击的选项，撤销
    						this.pge=this.ets1[i];
    						switch(this.pge.iStat)
    						{
    						case 0://等待领取
    							Confirm1.start(Confirm1.CONFIRM_GOVCANCELENTRUST,ReleaseGovMission._FOUR[this.pge.iType]+"#e#e委托任务持续一天，一天后未完成的委托任务失效#e撤销任务返还佣金，手续费不返还#e#e是否确认撤销所选委托？");
    							break;
    						case 1://进行中
    							FrameMessage.fm.Open(ReleaseGovMission._FOUR[this.pge.iType]+"#e#e委托任务持续一天，一天后未完成的委托任务失效#e撤销任务返还佣金，手续费不返还");
    							break;
    						case 2://已过期
    							Confirm1.start(Confirm1.CONFIRM_GOVCANCELENTRUST,ReleaseGovMission._FOUR[this.pge.iType]+"#e#e委托任务持续一天，一天后未完成的委托任务失效#e撤销任务返还佣金，手续费不返还#e#e是否确认撤销所选委托？");
    							break;
    						case 3://已完成//不会出现
    							break;
    						}
    					}
    					j++;
    				}
    			}
    		}
    		this.ui1_missionlist.FinishDraw();

    		if(Confirm1.end(Confirm1.CONFIRM_GOVCANCELENTRUST))
    		{
    			if(Confirm1.bConfirm)
    			{//
    				GmProtocol$1.gi().s_NewGovOperate(17, 0,this.pge.iMid,this.pge.iType,0 ,"");
    				this.ui1_missionlist.Clean();
    			}
    		}
    	}
    	 

    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		for(i=0;i<2;i++)
    		{
    			if(this.btn_page[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_page[i].bCheck())
    				{
    					if(this.iPage!=i)
    					{
    						this.iPage=i;
    						if(i==1)
    						{
    							GmProtocol$1.gi().s_NewGovOperate(14, 100, 0, 0,0,"");
    							this.ui1_missionlist.Clean();
    							this.iSelect=0;
    							this.iM1Count=0;
    						}
    						if(i==0)
    						{
    							GmProtocol$1.gi().s_NewGovOperate(14, 0, 0, 0,0,"");
    							this.ui0_missionlist.Clean();
    							this.iSelect=0;
    							this.iM0Count=0;
    						}
    					}
    				}
    			}
    		}
    		switch(this.iPage)
    		{
    		case 0:
    			for(i=0;i<4;i++)
    			{//切换朱雀青龙
    				if(this.btn_select[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_select[i].bCheck())
    					{
    						if(this.iSelect!=i)
    						{
    							this.iSelect=i;
    							GmProtocol$1.gi().s_NewGovOperate(14, i, 0, 0,0,"");
    							this.ui0_missionlist.Clean();
    							this.iM0Count=0;
    						}
    					}
    				}
    			}
    			this.ui0_missionlist.ProcTouch(msg, x, y);
    			break;
    		case 1:
    			for(i=0;i<4;i++)
    			{//切换朱雀青龙
    				if(this.btn_select[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_select[i].bCheck())
    					{
    						this.iSelect=i;
    					}
    				}
    			}
    			if(this.btn_addmission.ProcTouch(msg, x, y))
    			{
    				if(this.btn_addmission.bCheck())
    				{//打开发布任务页面
    					i=GmMe$1.me.rbs.iLev/2;
    					if(i>20)i=20;
    					if(this.iAlreadyEntrusted>=i)FrameMessage.fm.Open("发布任务次数已达上限");
    					else ReleaseGovMission.Open(this.iSelect,i-this.iAlreadyEntrusted,i);
    				}
    			}
    			this.ui1_missionlist.ProcTouch(msg, x, y);
    			break;
    		}
    		return false;
    	}
    }
    EntrustMission.Open=function()
    {
    	var afg;
    	if (XStat$1.gi().iXStat != XStat$1.GS_ENTRUSTMISSION)afg= XStat$1.gi().PushStat(XStat$1.GS_ENTRUSTMISSION);
    	else afg =  XStat$1.gi().LastStat(0);
    	//发送信息，获取朱雀任务列表
    	GmProtocol$1.gi().s_NewGovOperate(14, 0, 0, 0,0,"");
    };
    EntrustMission.CancelEntrust=function( pls)
    {
    	var afg;
    	afg=XStat$1.gi().FindStat(XStat$1.GS_ENTRUSTMISSION);
    	if (afg!=null)
    	{
    		var i=pls.GetNextInt();
    		if(i==0)
    		{//撤销委托，从当前列表中去掉
    			var mid=pls.GetNextInt();
    			var j=0;
    			for(i=0;i<afg.iM1Count-1;i++)
    			{
    				if(afg.ets1[i].iMid==mid)j=1;
    				if(j==1)afg.ets1[i]=afg.ets1[i+1];
    			}
    			if(j==1)afg.iM1Count--;
    		}
    		else
    		{//接了委托，去除任务
    			var mid=pls.GetNextInt();
    			var j=0;
    			for(i=0;i<afg.iM0Count-1;i++)
    			{
    				if(afg.ets0[i].iMid==mid)j=1;
    				if(j==1)afg.ets0[i]=afg.ets0[i+1];
    			}
    			if(j==1)afg.iM0Count--;
    		}
    	}
    };
    EntrustMission.GetMyDetail=function( pls)
    {
    	var afg;
    	afg=XStat$1.gi().FindStat(XStat$1.GS_ENTRUSTMISSION);
    	if (afg!=null)afg._GetMyDetail(pls);
    };
    EntrustMission.GetMyMission=function( pls)
    {
    	var afg;
    	afg=XStat$1.gi().FindStat(XStat$1.GS_ENTRUSTMISSION);
    	if (afg!=null)afg._GetMyMission(pls);
    };

    class _GOVFBTARGET
    {/*
    	public int iStat;
    	public int iType;
    	public String sTarget;
    	public String sProc;*/
    }
    class GovFBTarget extends BaseClass{

    	constructor( a)
    	{
    		super();
    		this.iW=700;
    		this.iH=400;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    	}
    	
    	Draw()
    	{
    		var i;
    		var ww=(this.iW-30-30-20)/2;
    		var hh=this.iH-30-30-30-20;
    		DrawMode$1.frame_type4("中等框a52_50", this.iX, this.iY, this.iW, this.iH, 52, 50);
    		M3DFast$1.gi().DrawText_2(this.iX+30+ww/2, this.iY+30+15, "进度描述", 0xffffff00, 30, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(this.iX+30+ww+20+ww/2, this.iY+30+15, "进度目标", 0xffffff00, 30, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		
    		DrawMode$1.frame_type4("单色内框b20_20", this.iX+30, this.iY+30+30+20, ww, hh, 20, 20);
    		DrawMode$1.frame_type4("单色内框b20_20", this.iX+30+ww+20, this.iY+30+30+20, ww, hh, 20, 20);
    		
    		FormatString.gi().FormatEx(GovFBTarget.sDetail, ww-30, 20, 0, 0, 25);
    		FormatString.gi().Draw(this.iX+30+15, this.iY+30+30+20+15);
    		
    		var offx=this.iX+30+ww+20;
    		var offy=this.iY+30+30+20;
    		for(i=0;i<GovFBTarget.iTargetCount;i++)
    		{
    			M3DFast$1.gi().DrawTextEx(offx+15, offy+15, GovFBTarget.mTargets[i].sTarget, 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			M3DFast$1.gi().DrawTextEx(offx+ww-15, offy+15, GovFBTarget.mTargets[i].sProc, 0xffffffff, 20, 101, 1, 1, 0, -3, 0);
    			offy+=25;
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(msg==3)XStat$1.gi().PopStat(1);
    		return false;
    	}
    }


    GovFBTarget.sDetail;
    GovFBTarget.iTargetCount;
    GovFBTarget.mTargets;
    GovFBTarget.iPlanId;

    GovFBTarget.Open=function()
    	{
    		if(XStat$1.gi().iXStat==XStat$1.GS_GOVFBTARGET)return;
    		XStat$1.gi().PushStat(XStat$1.GS_GOVFBTARGET);
    	};
    	GovFBTarget.GetData=function( pls)
    	{
    		var i;
    		if(GovFBTarget.mTargets==null)
    		{
    			GovFBTarget.mTargets=new Array(10);//
    			for(i=0;i<10;i++)
    			{
    				GovFBTarget.mTargets[i]=new _GOVFBTARGET();
    			}
    		}
    		GovFBTarget.sDetail=pls.GetNextString();
    		GovFBTarget.iTargetCount=pls.GetNextByte();
    		for(i=0;i<GovFBTarget.iTargetCount;i++)
    		{
    			GovFBTarget.mTargets[i].iStat=pls.GetNextByte();
    			GovFBTarget.mTargets[i].iType=pls.GetNextByte();
    			GovFBTarget.mTargets[i].sTarget=pls.GetNextString();
    			GovFBTarget.mTargets[i].sProc=pls.GetNextString();
    		}
    		GovFBTarget.iPlanId=pls.GetNextInt();
    		GmPlay$1.sop("GovFBTarget.iPlanId="+GovFBTarget.iPlanId+"GovFBTarget.iTargetCount"+GovFBTarget.iTargetCount);
    	};

    class SelectNewPet extends BaseClass{


    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.iW=50+200+30+200+50;
    		this.iH=70+260+20+55+70;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_select=new Array(3);//
    		for(i=0;i<2;i++)
    		{
    			this.btn_select[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_select[i].InitButton("普通按钮140_55");
    			this.btn_select[i].sName="选择";
    		}
    		this.aa_np=new Array(2);//
    		this.aa_np[0]=GmPlay$1.xani_pets[29].InitAnimaWithName("站立_右下", null);
    		this.aa_np[1]=GmPlay$1.xani_pets[30].InitAnimaWithName("站立_右下", null);
    	}
    	Draw()
    	{
    		DrawMode$1.frame_type4("中等框a52_50", this.iX,this.iY, this.iW, this.iH, 52, 50);
    		
    		M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2, this.iY+45, "选择宠物", 0xff274f4f, 30, 101, 1, 1, 0, -2, -2);
    		
    		DrawMode$1.frame_type4("蓝色a30_30", this.iX+50,this.iY+70, 200, 260, 30, 30);
    		FireworksEffect.DrawAura(0,this.iX+50+100, this.iY+80+200-50,null,0);
    		this.aa_np[0].Draw(this.iX+50+100, this.iY+80+200-50);
    		this.aa_np[0].NextFrame();
    		M3DFast$1.gi().DrawTextEx(this.iX+50+100,                this.iY+80+200, "耳兔", 0xffffffff, 25, 101, 1, 1, 0, -2, -2);

    		DrawMode$1.frame_type4("蓝色a30_30", this.iX+50+200+30,this.iY+70, 200, 260, 30, 30);
    		FireworksEffect.DrawAura(0,this.iX+50+200+30+100, this.iY+80+200-50,null,0);
    		this.aa_np[1].Draw(this.iX+50+200+30+100, this.iY+80+200-50);
    		this.aa_np[1].NextFrame();
    		M3DFast$1.gi().DrawTextEx(this.iX+50+200+30+100, this.iY+80+200, "猁猁", 0xffffffff, 25, 101, 1, 1, 0, -2, -2);

    		this.btn_select[0].Move(this.iX+50+100-140/2, this.iY+70+260+20, 140, 55);
    		this.btn_select[0].Draw();
    		this.btn_select[1].Move(this.iX+50+200+30+100-140/2, this.iY+70+260+20, 140, 55);
    		this.btn_select[1].Draw();
    		
    		M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2, this.iY+70+260+20+55+35, "除了外形它们没有任何区别", 0xff274f4f, 20, 101, 1, 1, 0, -2, -2);
    	}
    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<2;i++)
    		{
    			if(this.btn_select[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_select[i].bCheck())
    				{//领取
    					GmProtocol$1.gi().s_SeverEvent(33, i, 0, 0, 0);
    					XStat$1.gi().PopStat(1);
    				}
    				return true;
    			}
    		}
    		return false;
    	}
    }
    SelectNewPet.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_SELECTNEWPET);
    };

    class SelectSchool extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.iW=800;
    		this.iH=550;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_school=new Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.btn_school[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_school[i].InitButton(SelectSchool._ADetail[4][i+GmMe$1.me.iRace*3][0]);
    			this.btn_school[i].sName="";
    		}
    		this.se=new StarEffect();
    		this.se.Init3(0, 0, 50, 50);
    		
    		this.btn_go=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_go.InitButton("按钮1_110");
    		this.btn_go.sName="前往";
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    	}
    	Draw()
    	{
    		var i;
    		var offx,offy,offh;
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		offx=this.iX+30;
    		offy=this.iY+30;
    		offh=80+60+25;
    		DrawMode$1.new_framein(offx,offy,this.iW-60,offh);
    		
    		M3DFast$1.gi().DrawTextEx(offx+30, offy+30+50, "选择门派：", 0xff003e57, 40, 101, 1, 1, 0, 0, -2);
    		for(i=0;i<3;i++)
    		{
    			this.btn_school[i].Move(offx+30+i*130+200, offy+30, 100, 100);
    			this.btn_school[i].Draw();
    			if(this.iSchoolPoint==i+GmMe$1.me.iRace*3 && this.iSchoolPoint>=0)
    			{
    				this.se.Logic();
    				this.se.Draw(this.btn_school[i].iX+50, this.btn_school[i].iY+50);
    			}
    		}
    		
    		offy+=offh+20;
    		offh=this.iH-offh-60-20;
    		DrawMode$1.new_framein(offx,offy,this.iW-60,offh);
    		
    		if(this.iSchoolPoint>=0)
    		{
    			FormatString.gi().FormatEx("#c003e57"+SelectSchool._ADetail[4][this.iSchoolPoint][1], this.iW-60-40, 25, 0, 0, 30);
    			FormatString.gi().Draw(offx+20,offy+20);
    			
    			this.btn_go.Move(this.iX+this.iW-30-20-110,this.iY+this.iH-30-20-52,110,52);
    			this.btn_go.Draw();
    		}
    		
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<3;i++)
    		{
    			if(this.btn_school[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_school[i].bCheck())
    				{//成功
    					this.iSchoolPoint=i+GmMe$1.me.iRace*3;
    				}
    				return true;
    			}
    		}
    		if(this.iSchoolPoint>=0)
    		{
    			if(this.btn_go.ProcTouch(msg, x, y))
    			{
    				if(this.btn_go.bCheck())
    				{//
    					GmProtocol$1.gi().s_ChangeMapNew(2,34+this.iSchoolPoint);
    					if(MyMission.m.bCheckDoing(138))
    					{
    						GmProtocol$1.gi().s_FinishMission(0,138,0,0);
    					}
    					XStat$1.gi().PopStat(1);
    				}
    				return true;
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }

    SelectSchool.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_SELECTSCHOOL);
    };

    SelectSchool._ADetail=[
    	[["门派任务","人物等级>=10级#e10级加入门派后，找门派师傅领取任务，每天的前两轮（会员三轮）任务获得双倍奖励。"],
    	["为民除害","人物等级>=10级#e在[西阳城守卫]处领取，任务完成后会获得大量的经验奖励。"],
    	["每日赛跑","人物等级>=20级#e在[临淄城]的[田忌]处领取，完成可获得大量经验和金钱奖励，并获得一个三级草药。每天前十名更能额外获得道具奖励。#e任务可自动寻路完成"],
    	["护法任务","人物等级>=20级#e在[咸阳]的[商鞅]处领取任务，完成获得大量的经验和金钱，10次为一轮，完成每轮的第十次任务可获得制作装备的材料。"],
    	["追捕强盗","人物等级>=20级#e可以在[郢城]的[栾千盛]处领取追捕强盗任务，要求至少3人组队才能领取，完成获取经验金钱奖励，10次为一轮，第10次队长必定获得装备制造图纸，其他队员有几率获得道具奖励。"],
    	["擂台切磋","在西阳城中间的擂台，跟其他玩家切磋一下，不管输赢都会获得2点活跃哦。"],
    	["手艺任务","在郢城的铁匠接取任务，完成任务后会获得大量的经验和金钱，以及高熟练的打造手艺！"],
    	["押镖任务","人物等级>=20级#e可前往[临淄城]找[程镖头]领取押镖任务，完成获得大量金钱奖励，并有一定几率获取阵法书，还有可能获得红包（#cff0000里面有200元宝哦#o）。"],
    	["消灭山贼","人物等级>=30级#e每天整点，在随机野外地图刷出10只山贼，至少3人组队才能与山贼战斗，打败山贼获得大量的经验和金钱奖励，并有较大几率获得藏宝图。"],
    	["帮派青龙","人物等级>=20级#e在[郢城]的[帮派总管]处加入帮派，进入帮派领地，在帮派的领地里面去找青龙堂总管，领取任务，完成任务可获得大量的经验、金钱和帮贡"],
    	["帮派玄武","人物等级>=20级#e在帮派的领地里面去找玄武堂总管，领取任务，完成任务可获得大量的经验、金钱和帮贡（帮贡可在学院点帮派修炼）"],
    	["帮派朱雀","人物等级>=20级#e在帮派的领地里面去找朱雀堂总管，领取任务，完成任务可获得大量的经验、金钱和帮贡，在第10次并能获取丹方，是炼丹的必备品。"]],

    	[["门派闯关","每周四20:00点在[咸阳]或[临淄]的[门派活动使者]处领取任务，然后根据任务挑战门派护卫。每闯过一关都有丰厚的奖励，闯关速度最快的队伍更有高等级稀有宝石领取。"],
    	["保卫西阳","每周一20:00点在大禹水道，平原山陵，函谷关，太行山四个地图刷新怪物向西阳城进攻，玩家阻挡怪物，阻止怪物进入西阳城，打败怪物会获得丰厚的奖励，保卫西阳城成功，在西阳城更有稀有宝箱出现。"],
    	["比武大会","每周五中午12点~周六中午12点，玩家可以在[咸阳]的[比武接引人]报名，周六和周日下午13点~15点之间分别进行两场比武，比武获胜方可领取宝箱，即使失败也有其他丰厚奖励"],
    	["帮派之战","每周五，周六，周日的19点~20点在[咸阳]的[帮战接引先锋]处进入帮战场地（帮主需提前报名），获胜帮派的成员将会获得100点帮贡和大量经验，并在帮战场地内刷出大量宝箱"],
    	["封印叔叔","在挖宝时，有一定几率挖出妖怪叔叔，玩家组队去封印妖怪叔叔，会获得稀有的宝石和大量的经验金钱。"],
    	["挑战嚣张","每天系统会在城市中刷新出4种嚣张妖怪（有点嚣张、比较嚣张、很嚣张、太嚣张）每种怪物每天可挑战一次，挑战成功，有几率获取丰厚的奖励（如高级宠物技能包）"],
    	["战队竞技","在[咸阳]的[神威将军]处创建战队后，战队队长可以挑战比自己排名高的战队，挑战胜利可以提升战队排名。排名越靠前，战队每日声望增长越多"],
    	["跑环","玩家在郢城的吉祥处领取跑环任务，完成跑环任务可获得相应等级的装备图纸。"]],
    	
    	//新手玩法
    	[["门派任务","人物等级>=10级#e10级加入门派后，找门派师傅领取任务，每天的前两轮（会员三轮）任务获得双倍奖励。"],
    	["为民除害","人物等级>=10级#e在[西阳城守卫]处领取，任务完成后会获得大量的经验奖励。"],
    	["每日赛跑","人物等级>=10级#e在[临淄城]的[田忌]处领取，完成获得大量经验和金钱奖励，并获得一个三级草药。每天前十名更能额外获得道具奖励。#e任务可自动寻路完成"],
    	["世界抢答","人物等级>=10级#e每隔一段时间，系统会发出一道题目，可在世界频道回答，最先答对的两名玩家各获得一颗宝石，并从前二十名答对的玩家中抽取4名给予66666铜币奖励"],
    	["智者答题","无等级要求#e在各城市，每隔一段时间会随机出现一个智者，第一个答对智者问题的人可获得经验和金钱奖励，并有一定几率获得一颗宝石"],
    	["押镖任务","人物等级>=20级#e可前往[临淄城]找[程镖头]领取押镖任务，完成获得大量金钱奖励，并有一定几率获取阵法书，还有可能获得红包（#cff0000里面有200元宝哦#o）。"],
    	["追捕强盗","人物等级>=20级#e可以在[郢城]的[栾千盛]处领取追捕强盗任务，要求至少3人组队才能领取，完成获取经验金钱奖励，10次为一轮，第10次队长必定获得装备制造图纸，其他队员有几率获得道具奖励。"],
    	["护法任务","人物等级>=20级#e在[咸阳]的[商鞅]处领取任务，完成获得大量的经验和金钱，10次为一轮，完成每轮的第十次任务可获得制作装备的材料。"],
    	["帮派任务","人物等级>=20级#e在[郢城]的[帮派总管]处加入帮派，进入帮派领地，在帮派领地内可领取各种帮派任务，完成获得经验、金钱和帮贡，不同任务还有额外奖励"]],
    	//高手进阶
    	[["消灭山贼","人物等级>=30级#e每天整点，在随机野外地图刷出10只山贼，至少3人组队才能与山贼战斗，打败山贼获得大量的经验和金钱奖励，并有较大几率获得藏宝图。"],
    	["封印叔叔","在挖宝时，有一定几率挖出妖怪叔叔，玩家组队去封印妖怪叔叔，会获得稀有的宝石和大量的经验金钱。"],
    	["挑战嚣张","每天系统会在城市中刷新出4种嚣张妖怪（有点嚣张、比较嚣张、很嚣张、太嚣张）每种怪物每天可挑战一次，挑战成功，有几率获取丰厚的奖励（如高级宠物技能包）"],
    	["门派闯关","每周二20:00点在[咸阳]或[临淄]的[门派活动使者]处领取任务，然后根据任务挑战门派护卫。每闯过一关都有丰厚的奖励，闯关速度最快的队伍更有高等级稀有宝石领取。"],
    	["保卫西阳","每周三20:00点在大禹水道，平原山陵，函谷关，太行山四个地图刷新怪物向西阳城进攻，玩家阻挡怪物，阻止怪物进入西阳城，打败怪物会获得丰厚的奖励，保卫西阳城成功，在西阳城更有稀有宝箱出现。"],
    	["比武大会","每周五中午12点~周六中午12点，玩家可以在[咸阳]的[比武接引人]报名，周六和周日下午13点~15点之间分别进行两场比武，比武获胜方可领取宝箱，即使失败也有其他丰厚奖励"],
    	["帮派之战","每周五，周六，周日的19点~20点在[咸阳]的[帮战接引先锋]处进入帮战场地（帮主需提前报名），获胜帮派的成员将会获得100点帮贡和大量经验，并在帮战场地内刷出大量宝箱"],
    	["战队竞技","在[咸阳]的[神威将军]处创建战队后，战队队长可以挑战比自己排名高的战队，挑战胜利可以提升战队排名。排名越靠前，战队每日声望增长越多"],
    	["战队秘境","战队队长可在[咸阳]的[神威将军]处开启秘境，需要消耗战队声望，战队秘境里掉落大量的稀有道具，以及宠物进阶所必须的封印兽魂"],
    	["副本挑战","人物等级>=40级#e在[咸阳]的[副本官]处创建自己的副本，也可申请加入其他玩家创建的副本。副本会掉落大量的稀有物品道具。"],
    	["跑环","人物等级>=50级#e在[郢城]的[吉祥]处领取跑环任务，完成跑环任务可获得大量经验快速升级，每50环还可获得相应等级的装备图纸和手艺。"],
    	["师徒任务","在[临淄]的[慎到]处拜师或收徒，师徒二人组队在慎到处领取师徒任务，任务会给与大量的经验和金钱奖励。徒弟出师后，师傅可获得宠物修炼积分"]],
    	//门派介绍
    	[["剑侠居","要求种族：人族#e门派特色：物理攻击型，具有超高物理输出、点杀能力。 #e推荐加点：5力、4力1敏、4力1体。#e●剑侠居算是最热门的一个门派，容易上手，输出可观，是练级不可缺少的一员，相对的装备也比较贵，后期的剑侠居，拥有较高的暴击率，在竞技玩法中更是点杀的一大利器。"],
    	["茅棚坞","要求种族：人族#e门派特色：辅助型，具有高速度和强大的封印能力。 #e推荐加点：3敏2体、2敏3体、2敏2体1耐。#e●引以为傲的是速度，同样配置的情况下，先出手的绝对是茅棚，速度决定了竞技玩法的主动权，轮轴术也能很好的利用在卡敏战术中，迷雾让己方的胜率几率更大化，练级时，一个奇谋也能加快脚步。"],
    	["庐医崖","要求种族：人族#e门派特色：辅助型、具有强大的加血和救人技能。#e推荐加点：3体2耐、2体2耐1法、2体2敏1耐。#e●作为七国里唯一的纯奶妈，具有强大的加血技能和救人技能，是各种高端任务、活动，竞技玩法不可缺少的一员。"],
    	["溶洞","要求种族：魔族#e门派特色：法术攻击型，具有最高法系伤害。#e推荐加点：5法、4法1体#e●输出比封神高，但是目标数量比封神少，总伤害算起来反而不如封神了，不过做为七国的两大法系门派，溶洞更注重于多手段控制，相比封神来说没那么单调。"],
    	["鬼谷","要求种族：魔族#e门派特色：辅助型，具有强大的封印和解封技能。#e推荐加点：3敏2体、2敏3体。#e●作为封系，鬼谷最大的特点就是可以为己方解封，还有增加封印几率的增益，在竞技玩法中也是一大强将。"],
    	["武安阁","要求种族：魔族#e门派特色：物理攻击型、具有强大的物理攻击能力。#e推荐加点：5力、4力1敏、4力1体。#e●两大物理伤害的武安阁，点杀能力一点都不比剑侠居低，乱舞后还不用休息，单缺点就是太消耗蓝，续航能力不足。在竞技玩法和练级中，与剑侠居有同等的地位。"],
    	["封神台","要求种族：仙族#e门派特点：法术伤害型、具有强大群秒技能#e推荐加点：5法、4法1体#e●两大法系之一，练级最受欢迎的门派，当然你要有一定的装备，不然小心免费回城。七国里的NPC怪物理攻击较高，所以很多玩家都注重于物理防御，导致在竞技玩法中，法系的输出也相当的可观。"],
    	["仙人洞","要求种族：仙族#e门派特点：辅助攻击型，具有固定伤害和持续恢复，以及各种增益。#e推荐加点：3体2耐、2体2耐1速#e●在前期，玩家伤害普遍不高，血量也低的时候，仙人洞的固定伤害就是一大利器，又肉又能输出，是前期练级最重要的一员。"],
    	["神女峰","要求种族：仙族#e门派特点：辅助攻击型，具有单体高伤、复活、持续蓝恢复、封印#e推荐加点：4力1体、3力2法(攻击型)、3体2耐(辅助型)#e●神女是又能输出又能复活又能封的门派，绝对可以省下奶妈与控制的位置，多加一个输出，大大加快练级速度。"]],
    	//实力提升
    	[["人物升级",""],
    	["装备打造",""],
    	["修炼提升",""],
    	["宠物进阶",""],
    	["坐骑养成",""]],
    	//辅助能力
    	[["辅助技能",""],
    	["剧情技能",""],
    	["家园种植",""]],
    ];

    class SelectGoodsForMission extends BaseClass{

    	


    	InitFrame( mpoint, gtype, gcount)
    	{
    		var i;
    		this.iTurnCount=0;
    		for(i=0;i<20;i++)
    		{
    			if(MyGoods.gi().goods[2][i].iGid>0 && MyGoods.gi().goods[2][i].iTid==gtype && MyGoods.gi().goods[2][i].iCount>=gcount)
    			{
    				this.gs[this.iTurnCount].copyfrom(MyGoods.gi().goods[2][i]);
    				this.iTurnCount++;
    			}
    		}
    		this.iMPoint=mpoint;
    		this.lockgoods=this.gs[0];
    		GoodsDraw.new_LockPos(this.iX+30, this.iY+30,this.gs,this.lockgoods);
    	}
    	 constructor( a)
    	{
    		super();
    		var i;
    		this.gs=new Array(20);//
    		for(i=0;i<20;i++)this.gs[i]=new Goods();
    		
    		this.iW=490;
    		this.iH=345+60+55+20;
    		this.iX=GmConfig$1.SCRW-this.iW-20;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.lockgoods=null;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_turn=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_turn.InitButton("普通按钮140_55");
    		this.btn_turn.sName="上  交";
    //		this.btn_turn.Move(this.iX+this.iW/2-140/2,this.iY+this.iH-30-55,140,55);
    		this.btn_turn.Move(this.iX+this.iW-140-30,this.iY+this.iH-30-55,140,55);
    	}
    	Draw()
    	{
    		DrawMode$1.frame_type4("中等框a52_50",this.iX,this.iY,this.iW,this.iH,52,50);
    //		DrawMode.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    //		this.btn_close.Draw();
    				
    		GoodsDraw.new_DrawGoods(this.iX+30, this.iY+30, this.gs, null, null);
    		
    		if(this.lockgoods!=null)
    		{
    			GoodsDraw.new_DrawRect(this.iX+30, this.iY+30, this.gs,this.lockgoods, 0);
    		}
    		this.btn_turn.Draw();
    		
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_turn.ProcTouch(msg, x, y))
    		{
    			if(this.btn_turn.bCheck())
    			{
    				if(this.lockgoods==null)EasyMessage.easymsg.AddMessage("请先选择所交物品");
    				else
    				{
    					if(this.iMPoint==10 && this.lockgoods.iTid==163)
    					{//押镖，并交的是标银，寻路回镖头
    						if((GmMe$1.me.iFlag[1]/100000000)==1)
    						{//自动押镖，可执行自动寻路
    //							FindMap(15, -1, -1, true,false);
    //							MapManager.gi().vbk.iGoToNpcId=34;
    //							iLogic_map1=15;
    //							iLogicStat=114;
    //							MyAI.gi().AutoSpecialMission(SelectGoodsForMission.psm);
    						}
    					}
    					GmProtocol$1.gi().s_FinishMission(1,this.iMPoint,this.lockgoods.iGid,0);
    					XStat$1.gi().PopStat(1);
    				}
    			}
    			return true;
    		}

    		var g=GoodsDraw.new_LockGoods(x,y,this.iX+30, this.iY+30, this.gs,msg);
    		GoodsDraw.NoMove();
    		if(msg==3 && g!=null)
    		{//点击物品，选中准备购买
    			this.lockgoods=g;
    		}
    		else if(g==null)this.lockgoods=null;
    		
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    SelectGoodsForMission.psm;
    	
    SelectGoodsForMission.Open=function( mpoint)
    {
    	var i,j;
    	
    	var si;
    	for(i=0;i<MyMission.MAXMISSIONCOUNT;i++)
    	{
    		if(MyMission.m.smlist[i].bUseing)
    		{
    			SelectGoodsForMission.psm=MyMission.m.smlist[i];
    			if(SelectGoodsForMission.psm.iMPoint==mpoint)
    			{
    				for(j=0;j<SelectGoodsForMission.psm.iItemCount;j++)
    				{
    					si=SelectGoodsForMission.psm.si[j];
    					if(si.iMType==0 && si.iSType==0)
    					{//交物品
    						if(MyGoods.bHaveGoods(si.iV1, si.iV2))
    						{//找到任务和物品，打开窗口
    							var sgfm=XStat$1.gi().PushStat(XStat$1.GS_SELECTGOODSFORMISSION);
    							sgfm.InitFrame(mpoint,si.iV1,si.iV2);
    							return true;
    						}
    					}
    					if(si.iMType==0 && si.iSType==16)
    					{//交物品
    						if(MyGoods.bHaveGoods(si.iV3, 1))
    						{//找到任务和物品，打开窗口
    							var sgfm=XStat$1.gi().PushStat(XStat$1.GS_SELECTGOODSFORMISSION);
    							sgfm.InitFrame(mpoint,si.iV3,1);
    							return true;
    						}
    					}
    				}
    			}
    		}
    	}
    	return false;
    };

    //认证
    class ApprovePet extends BaseClass{
    	
    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.iW=885;
    		this.iH=580;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_approve=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_approve.InitButton("按钮1");
    		this.btn_approve.sName="认证";
    		
    		this.btn_selpet=new Array(12);//
    		this.btn_selskill=new Array(12);//
    		for(i=0;i<12;i++)
    		{
    			this.btn_selpet[i]=new XButton(GmPlay$1.xani_button);
    			this.btn_selpet[i].bSingleButton=true;
    			this.btn_selskill[i]=new XButton(GmPlay$1.xani_button);
    			this.btn_selskill[i].bSingleButton=true;
    		}
    		this.iPetPoint=0;
    		this.iSkillPoint=-1;
    	}

    	Draw()
    	{
    		var i;
    		var offx,offy;
    		DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH, "认","证");
    //		DrawMode.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		offx=this.iX+30;
    		offy=this.iY+30;
    		DrawMode$1.new_framein(offx, offy, 392, 520);
    		
    		M3DFast$1.gi().DrawTextEx(offx+392/2, offy+30, "请选择你要认证的宠物", 0xff003e57, 30, 101, 1, 1, 0, -2, 0);
    		var ox,oy;
    		for(i=0;i<8;i++)
    		{
    			ox=offx+20+i%4*92;
    			oy=offy+90+i/4*92;
    			GmPlay$1.xani_nui2.DrawAnima(ox,oy, "宠物头像框",0);
    			this.btn_selpet[i].Move(ox,oy, 83, 83);
    			if(i>=MyPets$1.mp.iPetCount)continue;

    			GmPlay$1.xani_head.DrawAnima_aa(ox,oy,GmPlay$1.de_pet.strValue(MyPets$1.mp.pets[i].iTid, 0, 1),0);//宠物头像
    			if(((MyPets$1.mp.pets[i].iFlag/100)%10)!=0)
    			{//系统绑定
    				M3DFast$1.gi().DrawText_2(ox-6,oy+80, "绑", 0xff6bfff4, 26, 101, 1, 1, 0, 0, -3, 4, 0xff000000);
    			}
    //			if(GmMe.me.iFightPid==MyPets.mp.pets[i].iPid)
    //				GmPlay.xani_nui2.DrawAnima(ox,oy, "宠物头像框",1);//参战标签

    			if(this.iPetPoint==i)
    			{
    				GmPlay$1.xani_nui2.DrawAnimaEx(ox,oy, "头像选中框",0,101,1,1,0,0,0);//this.iX+50, this.iY+65+i*45, 128, 32
    			}
    		}
    		FormatString.gi().FormatEx("#c003e57技能认证条件#e1,要求宠物第9技能格为开启状态(炼妖有几率开启)#e2,技能认证花费=参战等级*1万+90万#e3,认证过的宠物不能重复认证#e4,认证的技能打书时不会被覆盖", 392-40, 25, 0, 0, 32);
    		FormatString.gi().Draw(offx+20, offy+280);
    	//	M3DFast.gi().DrawTextEx(offx+20, offy+270, "技能认证条件", 0xff003e57, 22, 101, 1, 1, 0, 0, 0);
    		
    		offx+=(392+20);
    		DrawMode$1.new_framein(offx, offy, 415, 520);

    		M3DFast$1.gi().DrawTextEx(offx+20, offy+30, "宠物名称："+MyPets$1.mp.pets[this.iPetPoint].sName, 0xff003e57, 30, 101, 1, 1, 0, 0, 0);

    		M3DFast$1.gi().DrawTextEx(offx+392/2, offy+90, "请选择你要认证的宠物", 0xff003e57, 30, 101, 1, 1, 0, -2, 0);

    		for(i=0;i<12;i++)
    		{
    			ox=offx+20+i%4*(92+7);
    			oy=offy+150+i/4*(92+5);
    			
    			this.btn_selskill[i].Move(ox, oy, 92, 92);

    			GmPlay$1.xani_nui2.DrawAnima(ox, oy, "技能框",0);
    			if(this.iPetPoint>=MyPets$1.mp.iPetCount)continue;
    			if(i>=MyPets$1.mp.pets[this.iPetPoint].iSkillBlock)GmPlay$1.xani_nui2.DrawAnima(ox, oy, "技能框",1);
    			if(MyPets$1.mp.pets[this.iPetPoint].jn[i]>0)GmPlay$1.xani_nicon.DrawAnima_aa(ox, oy, GmPlay$1.de_skill.strValue(MyPets$1.mp.pets[this.iPetPoint].jn[i], 0, 5),0);
    			if(this.iSkillPoint==i)
    			{
    				GmPlay$1.xani_nui4.DrawAnima(ox-7, oy-7, "选中技能",0);
    				MyAttFrame.Skill_Detail(MyPets$1.mp.pets[this.iPetPoint].jn[i], ox,oy, -1);
    			}
    		}
    		this.btn_approve.Move(offx+(415-161)/2,offy+455, 161, 53);
    		this.btn_approve.Draw();
    		
    		this.btn_close.Draw();
    		
    		if(Confirm1.end(Confirm1.CONFIRM_APPROVEPET))
    		{
    			if(Confirm1.bConfirm)
    			{//发送炼妖消息
    //				if(pets[0]!=null && pets[1]!=null)
    				{
    //					if(chk_uselock[0].bTrue)i=0;
    //					else if(chk_uselock[1].bTrue)i=1;
    //					else i=2;
    					GmProtocol$1.gi().s_SeverEvent(26, 1, MyPets$1.mp.pets[this.iPetPoint].iPid, MyPets$1.mp.pets[this.iPetPoint].jn[this.iSkillPoint], this.iSkillPoint);
    					XStat$1.gi().PopStat(1);
    				}
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<MyPets$1.mp.iPetCount;i++)
    		{//选择宠物
    			if(this.btn_selpet[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_selpet[i].bCheck())
    				{
    					this.iPetPoint=i;
    					this.iSkillPoint=-1;
    				}
    				return true;
    			}
    		}
    		for(i=0;i<8;i++)
    		{
    			if(this.btn_selskill[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_selskill[i].bCheck())
    				{
    					if(MyPets$1.mp.pets[this.iPetPoint].jn[i]>0)this.iSkillPoint=i;
    				}
    			}
    		}
    		if(this.btn_approve.ProcTouch(msg, x, y))
    		{
    			if(this.btn_approve.bCheck())
    			{
    				i=GmPlay$1.de_pet.intValue(MyPets$1.mp.pets[this.iPetPoint].iTid, 0, 2)*10000+900000;
    				
    				if(this.iSkillPoint<0 || this.iSkillPoint>7 || MyPets$1.mp.pets[this.iPetPoint].jn[this.iSkillPoint]==0)FrameMessage.fm.Open("请先选择要认证的技能");
    				else if((MyPets$1.mp.pets[this.iPetPoint].iBaobao&128)==0)FrameMessage.fm.Open("没有开启第九个技能格无法认证宠物（第九个技能格在炼妖时有几率开启）");
    				else if(GmMe$1.me.rbs.iMoney<i)FrameMessage.fm.Open("认证资金不足");
    				else if(MyPets$1.mp.pets[this.iPetPoint].jn[8]>0)FrameMessage.fm.Open("已有认证技能");
    				else
    				{//认证
    					Confirm1.start(Confirm1.CONFIRM_APPROVEPET,"本次认证花费"+i+"铜币，技能认证后不可更改，是否确定认证？");
    				}
    //				if(this.iPetPoint<MyPets.mp.iPetCount)
    //				{
    //					bSelect=true;
    //					selpet=MyPets.mp.pets[this.iPetPoint];
    //				}
    //				XStat.gi().PopStat(1);
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		return false;
    	}
    }
    ApprovePet.Open=function()
    {
    	if(MyPets$1.mp.iPetCount<=0)FrameMessage.fm.Open("当前没有宠物");
    	else XStat$1.gi().PushStat(XStat$1.GS_APPROVEPET);
    };

    //宠物进阶升星

    class JJPet extends BaseClass{
    	
    	constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=600;
    		this.iH=360;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_jj=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_jj.Move(this.iX+this.iW-120-30,this.iY+this.iH- 30-60, 120, 60);
    		this.btn_jj.InitButton("1号按钮120_60");
    		this.btn_jj.sName="进 阶";
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.Move(this.iX + this.iW - 35, this.iY - 25, 60, 60);
    		this.btn_close.InitButton("关闭按钮");
    		
    		this.iPetPoint=-1;
    	}
    	
    	Draw()
    	{
    		var i;
    		var offx,offy;
    		DrawMode$1.frame_type4("10号框20_20", this.iX, this.iY, this.iW, this.iH, 20, 20);
    		this.pm3f.DrawText_2(this.iX+this.iW/2, this.iY+15, "宠物进阶", 0xfffeec7e, 40, 101, 1, 1, 0, -2, 0, 2, 0xff01152e);
    		
    		this.pm3f.DrawTextEx(this.iX+20, this.iY+this.iH-20-15, "注：每次进阶可提升每项5点固定属性和25点可分配属性", 0xff114e61, 20, 101, 1, 1, 0,0,0);
    		
    		offx=this.iX+20;
    		offy=this.iY+60;
    		
    		DrawMode$1.frame_type4("11号框20_20",offx, offy, 200, 30 * 8 + 10,20,20);
    		for(i=0;i<MyPets$1.mp.iPetCount;i++)
    		{
    			if(this.iPetPoint==i)
    			{
    				DrawMode$1.frame_type1("12号框20_30", offx + 5, offy + 5 + i * 30, 190, 20);
    			}
    			this.pm3f.DrawTextEx(offx+5, offy+5+i*30, MyPets$1.mp.pets[i].sName, 0xff114e61, 30, 101, 1, 1, 0, 0, 0);
    		}

    		this.iCanJJ=0;
    		offx=this.iX+240;
    		offy=this.iY+70;
    		if(this.iPetPoint>=0 && this.iPetPoint<MyPets$1.mp.iPetCount)
    		{
    			var pet=MyPets$1.mp.pets[this.iPetPoint];
    			if(pet.iStar>=5)
    			{//
    				this.pm3f.DrawTextEx(offx, offy, "当前宠物已进阶至最高", 0xffffffff, 30, 101, 1, 1, 0, 0, 0);
    			}
    			else
    			{
    				var iNeedLev=(pet.iStar+1)*20;
    				var iGType1=280+pet.iStar;
    				var iGType2=285+pet.iStar;
    				
    				if(pet.iLev<iNeedLev)this.pm3f.DrawTextEx(offx, offy, "等级："+pet.iLev+"(>="+iNeedLev+")", 0xffff0000, 30, 101, 1, 1, 0, 0, 0);
    				else
    				{
    					this.pm3f.DrawTextEx(offx, offy, "等级："+pet.iLev+"(>="+iNeedLev+")", 0xff00ff00, 30, 101, 1, 1, 0, 0, 0);
    					this.iCanJJ|=1;
    				}
    				
    				for(i=0;i<20;i++)
    				{
    					if(MyGoods.gi().goods[2][i].iGid>0 && MyGoods.gi().goods[2][i].iTid==iGType1)
    					{
    						this.iCanJJ|=2;
    					}
    					if(MyGoods.gi().goods[2][i].iGid>0 && MyGoods.gi().goods[2][i].iTid==iGType2 && MyGoods.gi().goods[2][i].iCount>=30)
    					{
    						this.iCanJJ|=4;
    					}
    				}
    				GmPlay$1.xani_nui3.DrawAnima(offx,offy+40,"物品格子", 0);
    				GmPlay$1.xani_ngoods.DrawAnima_aa(offx, offy+40, GmPlay$1.de_goods.strValue(iGType1, 0, 10), 0);
    				if((this.iCanJJ&2)==0)this.pm3f.DrawTextEx(offx+85, offy+40+25, GmPlay$1.de_goods.strValue(iGType1, 0, 4)+" x 1", 0xffff0000, 30, 101, 1, 1, 0, 0, 0);
    				else this.pm3f.DrawTextEx(offx+85, offy+40+25, GmPlay$1.de_goods.strValue(iGType1, 0, 4)+" x 1", 0xff00ff00, 30, 101, 1, 1, 0, 0, 0);
    				
    				GmPlay$1.xani_nui3.DrawAnima(offx,offy+40+100,"物品格子", 0);
    				GmPlay$1.xani_ngoods.DrawAnima_aa(offx, offy+40+100, GmPlay$1.de_goods.strValue(iGType2, 0, 10), 0);
    				if((this.iCanJJ&4)==0)this.pm3f.DrawTextEx(offx+85, offy+40+100+25, GmPlay$1.de_goods.strValue(iGType2, 0, 4)+" x 30", 0xffff0000, 30, 101, 1, 1, 0, 0, 0);
    				else this.pm3f.DrawTextEx(offx+85, offy+40+100+25, GmPlay$1.de_goods.strValue(iGType2, 0, 4)+" x 30", 0xff00ff00, 30, 101, 1, 1, 0, 0, 0);
    			}
    		}
    		
    //		this.pm3f.DrawTextEx(this.iX+40,this.iY+80, "战队队长："+sLeader+"("+iRid+")", 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    //		DrawMode.ui3_Text2(this.iX+20, this.iY+50, 100, 200,"队长", sLeader+"("+iRid+")");
    		if(this.iCanJJ==7)this.btn_jj.Draw();
    		this.btn_close.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		var offx,offy;
    		offx=this.iX+20;
    		offy=this.iY+60;
    		if(this.iCanJJ==7)
    		{
    			if(this.btn_jj.ProcTouch(msg, x, y))
    			{
    				if(this.btn_jj.bCheck())
    				{
    					GmProtocol$1.gi().s_PetJJ(MyPets$1.mp.pets[this.iPetPoint].iPid, 0, 0);
    					XStat$1.gi().PopStat(1);
    				}
    				return true;
    			}
    		}
    		if(XDefine$1.bInRect(x, y, offx, offy, 200, 30*8+10))
    		{//计算
    			this.iPetPoint=parseInt((y-offy)/30);
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{//
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))return true;
    		return false;
    	}
    }
    JJPet.Open=function()
    {
    	var jp;
    	
    	if(XStat$1.gi().iXStat==XStat$1.GS_JJPET)
    	{
    		jp= XStat$1.gi().oCurrentView;
    	}
    	else jp= XStat$1.gi().PushStat(XStat$1.GS_JJPET);
    };

    //宠物进阶升星

    class MergeZR extends BaseClass{

    	
    	
    	constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=550;
    		this.iH=410;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_one=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_one.Move(this.iX + 20, this.iY + this.iH - 20-60, 150, 60);
    		this.btn_one.InitButton("1号按钮150_60");
    		this.btn_one.sName="融合一次";
    		
    		this.btn_all=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_all.Move(this.iX + this.iW - 150 - 20, this.iY + this.iH - 20-60, 150, 60);
    		this.btn_all.InitButton("1号按钮150_60");
    		this.btn_all.sName="融合全部";
    		
    		this.btn_close=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_close.Move(this.iX + this.iW - 35, this.iY - 25, 60, 60);
    		this.btn_close.InitButton("关闭按钮");
    	}
    	
    	Draw()
    	{
    		var offx,offy;
    		DrawMode$1.frame_type4("10号框20_20",this.iX, this.iY, this.iW, this.iH,20,20);
    		this.pm3f.DrawText_2(this.iX+this.iW/2, this.iY+15, "融合自然之力", 0xffffC800, 40, 101, 1, 1, 0, -2, 0,2,0xff000000);
    		
    		offx=this.iX+20;
    		offy=this.iY+70;
    		
    		GmPlay$1.xani_nui3.DrawAnima(offx,offy,"物品格子", 0);
    		GmPlay$1.xani_ngoods.DrawAnima_aa(offx, offy, GmPlay$1.de_goods.strValue(this.gp.iTid, 0, 10), 0);
    		if(this.gp.iCount<=2)this.pm3f.DrawTextEx(offx+85, offy+25, GmPlay$1.de_goods.strValue(this.gp.iTid, 0, 4)+" x "+this.gp.iCount, 0xffff0000, 30, 101, 1, 1, 0, 0, 0);
    		else this.pm3f.DrawTextEx(offx+85, offy+25, GmPlay$1.de_goods.strValue(this.gp.iTid, 0, 4)+" x "+this.gp.iCount, 0xff00ff00, 30, 101, 1, 1, 0, 0, 0);
    		
    		offy+=100;
    		DrawMode$1.frame_type4("11号框20_20", offx, offy, this.iW-40, 145, 20, 20);
    		offx += 10;
    		offy += 10;
    		this.pm3f.DrawTextEx(offx, offy, "融合规则：", 0xff114e61, 20, 101, 1, 1, 0, 0, 0);
    		this.pm3f.DrawTextEx(offx, offy+25, "3个一级自然之力+3万铜币=1个二级自然之力", 0xff114e61, 20, 101, 1, 1, 0, 0, 0);
    		this.pm3f.DrawTextEx(offx, offy+25*2, "3个二级自然之力+3万铜币+10元宝=1个三级自然之力", 0xff114e61, 20, 101, 1, 1, 0, 0, 0);
    		this.pm3f.DrawTextEx(offx, offy+25*3, "3个三级自然之力+3万铜币+20元宝=1个四级自然之力", 0xff114e61, 20, 101, 1, 1, 0, 0, 0);
    		this.pm3f.DrawTextEx(offx, offy+25*4, "3个四级自然之力+3万铜币+30元宝=1个五级自然之力", 0xff114e61, 20, 101, 1, 1, 0, 0, 0);
    //		this.pm3f.DrawTextEx(this.iX+20, this.iY+this.iH-20-15, "注：每次进阶可提升每项5点固定属性和25点可分配属性", 0xffffC800, 20, 101, 1, 1, 0,0,0);
    		
    		this.btn_one.Draw();
    		this.btn_all.Draw();
    		this.btn_close.Draw();
    		
    		if(Confirm1.end(Confirm1.CONFIRM_MERGEONE))
    		{
    			if(Confirm1.bConfirm)
    			{//
    				GmProtocol$1.gi().s_FTOperate(8, 1, this.gp.iGid);
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		if(Confirm1.end(Confirm1.CONFIRM_MERGEALL))
    		{
    			if(Confirm1.bConfirm)
    			{//
    				GmProtocol$1.gi().s_FTOperate(8, 2, this.gp.iGid);
    				XStat$1.gi().PopStat(1);
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.btn_one.ProcTouch(msg, x, y))
    		{
    			if(this.btn_one.bCheck())
    			{
    				if(this.gp.iTid==285)Confirm1.start(Confirm1.CONFIRM_MERGEONE, "3个一级自然之力+3万铜币=1个二级自然之力#e是否确定融合？");
    				else if(this.gp.iTid==286)Confirm1.start(Confirm1.CONFIRM_MERGEONE, "3个二级自然之力+3万铜币+10元宝=1个三级自然之力#e是否确定融合？");
    				else if(this.gp.iTid==287)Confirm1.start(Confirm1.CONFIRM_MERGEONE, "3个三级自然之力+3万铜币+20元宝=1个四级自然之力#e是否确定融合？");
    				else if(this.gp.iTid==288)Confirm1.start(Confirm1.CONFIRM_MERGEONE, "3个四级自然之力+3万铜币+30元宝=1个五级自然之力#e是否确定融合？");
    			}
    			return true;
    		}
    		if(this.btn_all.ProcTouch(msg, x, y))
    		{
    			if(this.btn_all.bCheck())
    			{
    				i=this.gp.iCount/3;
    				if(this.gp.iTid==285)Confirm1.start(Confirm1.CONFIRM_MERGEALL, i*3+"个一级自然之力+"+i*3+"万铜币="+i+"个二级自然之力#e是否确定融合？");
    				else if(this.gp.iTid==286)Confirm1.start(Confirm1.CONFIRM_MERGEALL,  i*3+"个二级自然之力+"+i*3+"万铜币+"+i*10+"元宝="+i+"个三级自然之力#e是否确定融合？");
    				else if(this.gp.iTid==287)Confirm1.start(Confirm1.CONFIRM_MERGEALL,  i*3+"个三级自然之力+"+i*3+"万铜币+"+i*20+"元宝="+i+"个四级自然之力#e是否确定融合？");
    				else if(this.gp.iTid==288)Confirm1.start(Confirm1.CONFIRM_MERGEALL,  i*3+"个四级自然之力+"+i*3+"万铜币+"+i*30+"元宝="+i+"个五级自然之力#e是否确定融合？");
    			}
    			return true;
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))return true;
    		return false;
    	}
    }
    MergeZR.Open=function()
    	{
    		if(MyGoods.gi().goods[2][0].iGid<=0 ||
    				(MyGoods.gi().goods[2][0].iTid!=285 &&
    						MyGoods.gi().goods[2][0].iTid!=286 &&
    						MyGoods.gi().goods[2][0].iTid!=287 &&
    						MyGoods.gi().goods[2][0].iTid!=288))
    		{
    			FrameMessage.fm.Open("请先将待融合的自然之力放到物品栏第一格");
    			return;
    		}
    		
    		var mzr;
    		
    		if(XStat$1.gi().iXStat==XStat$1.GS_MERGEZR)
    		{
    			mzr= XStat$1.gi().oCurrentView;
    		}
    		else mzr=XStat$1.gi().PushStat(XStat$1.GS_MERGEZR);
    		
    		mzr.gp=MyGoods.gi().goods[2][0];
    	};

    // class _BUYDRAWING
    // {/*
    // 	public int iLev;
    // 	public int iType;
    // 	public int iPrice;*/
    // }
    //id1,id2,cs1,cs2
    //等级,类型,金币价,元宝价
    //特殊商店，购买装备制造图纸
    class shop_BuyDrawing extends BaseClass{
    	

    	_getpage( pls)
    	{
    		
    		this.iPage=pls.GetNextByte();
    		this.iCount=pls.GetNextInt();
    		if(this.iCount>this.MAXBDS)this.iCount=this.MAXBDS;
    		for(var i=0;i<this.iCount;i++)
    		{
    			this.bds[i].iLev=pls.GetNextByte();
    			this.bds[i].iType=pls.GetNextByte();
    			this.bds[i].iPrice=pls.GetNextInt();
    		}
    	}
    	 constructor( ani)
    	{
    		super();
    		this.MAXBDS=10;
    		this.iW=660;
    		this.iH=660;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.bds=new Array(this.MAXBDS);//
    		for(var i=0;i<this.MAXBDS;i++)this.bds[i]=new Object();
    		
    		this.list_drawing=new UIList$1(0,3,this.iW-100,50+40*9);
    		this.list_drawing.SetTitle(0, "类型", 160,false);
    		this.list_drawing.SetTitle(1, "等级", 100,true);
    		this.list_drawing.SetTitle(2, "价格", 260,true);
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_page=new Array(8);//
    		for(var i=0;i<6;i++)
    		{
    			this.btn_page[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_page[i].InitButton("频道选择");
    			this.btn_page[i].sName=(i+3)*10+"";
    		}
    		
    		this.btn_buy=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_buy.InitButton("普通按钮140_55");
    		this.btn_buy.sName="购买";
    	}
    	
    	Draw()
    	{
    		console.log('购买');
    		var i;
    		
    		DrawMode$1.new_baseframe4(this.iX, this.iY, this.iW,this.iH,"图","纸","商","店");
    		this.btn_close.Draw();
    		
    		DrawMode$1.new_framein(this.iX+30, this.iY+30, this.iW-60, this.iH-60);
    		
    		M3DFast$1.gi().DrawTextEx(this.iX+30+20, this.iY+30+30+20, "选择等级", 0xffffffff, 30, 101, 1, 1, 0, 0, -2);
    		for(i=0;i<6;i++)
    		{
    			if(this.iPage==i+3)
    			{
    				this.btn_page[i].bMouseDown=true;
    			}
    			this.btn_page[i].Move(this.iX+30+20+140+i*70, this.iY+30+20, 60, 60);
    			this.btn_page[i].Draw();
    		}
    		this.list_drawing.BeginDraw(this.iX+30+20, this.iY+30+20+60+20);
    		for(i=0;i<this.iCount;i++)
    		{
    			this.list_drawing.DrawUnit(0, i, shop_BuyDrawing._TYPE[i]);
    			this.list_drawing.DrawUnit(1, i, this.bds[i].iLev*10+"级");
    			this.list_drawing.DrawUnit(2, i, this.bds[i].iPrice+"铜币");
    		}
    		this.list_drawing.FinishDraw();
    		
    		M3DFast$1.gi().DrawTextEx(this.iX+30+20, this.iY+this.iH-30-20-30, "铜币："+GmMe$1.me.rbs.iMoney, 0xffffffff, 30, 101, 1, 1, 0, 0, -2);
    		this.btn_buy.Move(this.iX+this.iW-30-20-140, this.iY+this.iH-30-20-55, 140, 55);
    		this.btn_buy.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.list_drawing.ProcTouch(msg, x, y))return true;
    		for(i=0;i<6;i++)
    		{
    			if(this.btn_page[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_page[i].bCheck())
    				{//获取所选页
    					if(this.iPage!=i+3)
    					{
    						this.iPage=i+3;
    						this.iCount=0;
    						shop_BuyDrawing.GetPage(i+3);
    					}
    				}
    			}
    		}
    		if(this.btn_buy.ProcTouch(msg, x, y))
    		{
    			if(this.btn_buy.bCheck())
    			{
    				if(this.list_drawing.iLockPoint<0)EasyMessage.easymsg.AddMessage("请先选中行");
    				else if(GmMe$1.me.rbs.iMoney<this.bds[this.list_drawing.iLockPoint].iPrice)EasyMessage.easymsg.AddMessage("铜币不足");
    				else GmProtocol$1.gi().s_SeverEvent(34, 1, this.iPage, this.bds[this.list_drawing.iLockPoint].iType, this.bds[this.list_drawing.iLockPoint].iPrice);
    			}
    			return true;
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		return false;
    	}
    }
    shop_BuyDrawing.GetPage=function( page)
    	{
    		GmProtocol$1.gi().s_SeverEvent(34, 0, page, 0, 0);
    	};
    shop_BuyDrawing.Open=function( pls)
    	{
    		var sbd=XStat$1.gi().FindStat(XStat$1.GS_SHOPBUYDRAWING);
    		if(sbd==null)sbd=XStat$1.gi().PushStat(XStat$1.GS_SHOPBUYDRAWING);
    		sbd._getpage(pls);
    	};
    	shop_BuyDrawing._TYPE=["头盔","项链","剑","刀","枪","男衣","女衣","腰带","鞋子"];

    class CreateShop extends BaseClass{

    	

    	
    	constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=400;
    		this.iH=400;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.in_shopname=new XInput(GmPlay$1.xani_frame);
    		this.in_shopname.Move(this.iX+10, this.iY+100, this.iW-20, 60);
    		this.in_shopname.bHideText=true;
    		
    		this.btn_pet=new XButton(GmPlay$1.xani_button);
    		this.btn_pet.InitButton("统一大按钮3");
    		this.btn_pet.Move(this.iX+150,this.iY+170, 110, 50);
    		this.btn_pet.sName="宠物店";
    		this.btn_goods=new XButton(GmPlay$1.xani_button);
    		this.btn_goods.InitButton("统一大按钮3");
    		this.btn_goods.Move(this.iX+150+120,this.iY+170, 110, 50);
    		this.btn_goods.sName="物品店";
    		
    		this.btn_create=new XButtonEx1(GmPlay$1.xani_ui3);
    		this.btn_create.Move(this.iX+this.iW-117-20,this.iY+this.iH-50-15, 117, 40);
    		this.btn_create.InitButton("统一按钮1");
    		this.btn_create.sName="创建";
    		
    		this.btn_cancel=new XButtonEx1(GmPlay$1.xani_ui3);
    		this.btn_cancel.Move(this.iX+20,this.iY+this.iH-50-15, 117, 40);
    		this.btn_cancel.InitButton("统一按钮1");
    		this.btn_cancel.sName="取消";
    		
    		this.ipog=0;
    	}
    	
    	Draw()
    	{
    		DrawMode$1.ui3_DefineFrame(this.iX, this.iY, this.iW, this.iH);
    		this.pm3f.DrawText_2(this.iX+this.iW/2, this.iY+15, "创建店铺", 0xffffC800, 40, 101, 1, 1, 0, -2, 0,2,0xff000000);
    		
    		this.pm3f.DrawTextEx(this.in_shopname.iX, this.in_shopname.iY-30, "输入店铺名称：", 0xff000000, 30, 101, 1, 1, 0, 0, 0);
    		DrawMode$1.Frame1_BR(this.in_shopname.iX, this.in_shopname.iY, this.in_shopname.iW, this.in_shopname.iH);
    		FormatString.gi().Format(this.in_shopname.sDetail, this.in_shopname.iW-10, 30);//"#c000000"+
    		FormatString.gi().Draw(this.in_shopname.iX+15, this.in_shopname.iY+15);
    		
    		this.pm3f.DrawTextEx(this.in_shopname.iX, this.iY+180, "店铺类型：", 0xff000000, 30, 101, 1, 1, 0, 0, 0);
    		if(this.ipog==0)
    		{
    			this.btn_pet.bMouseIn=true;
    			this.btn_pet.bMouseDown=true;
    		}
    		else
    		{
    			this.btn_goods.bMouseIn=true;
    			this.btn_goods.bMouseDown=true;
    		}
    		this.btn_pet.Draw();
    		this.btn_goods.Draw();
    		
    		FormatString.gi().Format("#c000000说明：新建店铺需要缴纳150万铜币#e营业状态下每个柜台每天收取5万维护费#e休息状态下每个柜台每天收取2万维护费#e交易成功，收取成交价5%的交易税", this.iW-40, 20);//，运营资金
    		FormatString.gi().Draw(this.iX+20, this.iY+230);

    		this.btn_create.Draw();
    		this.btn_cancel.Draw();

    		this.in_shopname.onscr();
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		this.in_shopname.ProcTouch(msg, x, y);
    		if(this.btn_pet.ProcTouch(msg, x, y))
    		{
    			if(this.btn_pet.bCheck())this.ipog=0;
    		}
    		if(this.btn_goods.ProcTouch(msg, x, y))
    		{
    			if(this.btn_goods.bCheck())this.ipog=1;
    		}
    		if(this.btn_create.ProcTouch(msg, x, y))
    		{
    			if(this.btn_create.bCheck())
    			{//检测文字是否合理，创建帮派

    					var buf=this.in_shopname.sDetail.getBytes("GBK");
    					if(buf.length<4 || buf.length>16)
    					{
    						EasyMessage.easymsg.AddMessage("店铺名称2-8个字");
    						return true;
    					}

    				//发送创建请求
    				GmProtocol$1.gi().s_CreateShop(this.in_shopname.sDetail,this.ipog);
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{//
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))return true;
    		return false;
    	}
    }
    CreateShop.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_CREATESHOP);
    };

    class ChangeColor extends BaseClass{


    	constructor( ani)
    	{
    		super();
    		var i,j;
    		this.iW=900;
    		this.iH=550;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		this.aa_cls=new Array(6);//
    		this.iColor=new Int32Array(6);//
    		this.btn_color=new Array(6);//
    		for(i=0;i<6;i++)
    		{
    			this.btn_color[i]=new Array(6);
    			this.aa_cls[i]=new Array(6);
    			for(j=0;j<6;j++)
    			{
    				this.aa_cls[i][j]=new AnimaAction();
    				this.btn_color[i][j]=new XButtonEx2$1(GmPlay$1.xani_nui3);
    				this.btn_color[i][j].InitButton("仓库按钮");
    				if(j==0)this.btn_color[i][j].sName="原";
    				else this.btn_color[i][j].sName=""+j;
    			}
    			this.iColor[i]=GmMe$1.me.iColor[i];
    		}
    		this.aa_body=new AnimaAction();
    		this.bChange=true;
    		
    		this.btn_left=new XButtonEx2$1(GmPlay$1.xani_nui3);
    		this.btn_left.InitButton("打开任务");
    		this.btn_right=new XButtonEx2$1(GmPlay$1.xani_nui3);
    		this.btn_right.InitButton("向右转");
    		
    		this.btn_rs=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_rs.InitButton("按钮1_110");
    		this.btn_rs.sName="染色";
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.iRote=4;
    	}
    	 fx()
    	{
    		if(this.iRote<0)this.iRote+=8;
    		if(this.iRote>=8)this.iRote-=8;
    		switch(this.iRote)
    		{
    		case 0:return "上";
    		case 1:return "左上";
    		case 2:return "左";
    		case 3:return "左下";
    		case 4:return "下";
    		case 5:return "右下";
    		case 6:return "右";
    		case 7:return "右上";
    		}
    		return "下";
    	}
    	
    	ChangeColor1( xb, sa, m)
    	{
    //		if(!SystemOperate.bShowColor)return;
    		var i;
    		for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    		{
    			if(this.iColor[i]<=0 || this.iColor[i]>=6)continue;
    			GmPlay$1.xani_color[xb][this.iColor[i]-1].InitAnimaWithName(SortAnima._CHANGECOLOR[xb][i]+"_"+sa, this.aa_cls[m][i]);
    			GmPlay$1.sop(""+SortAnima._CHANGECOLOR[xb][i]+"_"+sa);
    		}
    	}
    	DrawColor( xb, frame, offy, x, y, m)
    	{
    //		if(!SystemOperate.bShowColor)return;
    		var i;
    		for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    		{
    			if(this.iColor[i]<=0 || this.iColor[i]>=6)continue;
    			this.aa_cls[m][i].iFrame=frame;
    			this.aa_cls[m][i].Draw(x,y);
    //			DrawBuffer.gi().DrawAnima_aa(offy,null, x, y, this.aa_cls[m][i]);
    		}
    	}
    	DrawRole( x,  y, faceto, stat, changed) 
    	{
    		var i;
    		var xb=GmMe$1.me.iRace*2+GmMe$1.me.iSex;
    		var ifaceto=GmMe$1.face_sti(faceto);
    		var istat=GmMe$1.stat_sti(stat);
    //		GmPlay.sop("SortAnima="+SortAnima.iii);
    //		GmPlay.sop("xb="+xb+",,,istat="+istat+",,,ifaceto="+ifaceto+",,,"+stat);
    //		GmPlay.sop("AnimaSort._ANIMASORT="+AnimaSort._ANIMASORT.length);
    		var offy=0;
    		for(i=0;i<SortAnima._ANIMASORT[xb][istat][ifaceto].length;i++)
    		{
    //			GmPlay.sop("");
    			if(SortAnima._ANIMASORT[xb][istat][ifaceto][i]=="人物")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName(stat+"_"+faceto, this.aa_body);
    					this.ChangeColor1(xb,stat+"_"+faceto,0);
    //					iOffY = this.aa_body.pani.iAnimaY(this.aa_body) - 30;
    				}
    				this.aa_body.Draw(x, y);
    //				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y, this.aa_body);
    				this.DrawColor(xb,this.aa_body.iFrame,y+offy,x,y,0);
    				this.aa_body.NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT[xb][istat][ifaceto][i]=="武器")
    			{
    //				if(changed)
    //				{
    //					this.iWeapTid = MyGoods.gi().GetWeaponTid();
    //					if(this.iWeapTid>=0)GmPlay.xani_weap[xb][SortAnima.WeapFlag(this.iWeapTid)].InitAnimaWithName(stat+"_"+faceto, aa_weapon);
    //				}
    //				if(this.iWeapTid>=0)
    //				{
    ////					GmPlay.sop("SortAnima.WeapFlag(this.iWeapTid)="+SortAnima.WeapFlag(this.iWeapTid));
    //					if(SystemOperate.bShowWeapon)DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y, aa_weapon);
    //					aa_weapon.NextFrame();
    //				}
    ////				GmPlay.sop("this.iWeapTid="+this.iWeapTid);
    //				offy++;
    			}
    		}
    		// int xb=race*2+sex;
    		// xani_newrole[0]
    	}
    	
    	Draw()
    	{
    		var i,j,k,m,n,o;
    		
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		this.btn_close.Draw();
    		
    		GmPlay$1.xani_nui2.DrawAnima(this.iX+30+140-130,this.iY+100 ,"宠物背景",0);
    		
    		this.DrawRole(this.iX+30+140,this.iY+290,this.fx(),"站立",this.bChange);
    		this.bChange=false;
    		
    		this.btn_left.Move(this.iX+30+140-100-25, this.iY+200, 50, 70);
    		this.btn_left.Draw();
    		this.btn_right.Move(this.iX+30+140+100-25, this.iY+200, 50, 70);
    		this.btn_right.Draw();
    		
    		var xb=GmMe$1.me.iRace*2+GmMe$1.me.iSex;
    		m=360;
    		n=SortAnima._CHANGECOLOR[xb].length;
    		k=(m-60*n)/(n+1);
    		
    		var cost="";
    		o=0;
    		this.iNeed=0;
    		for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    		{//颜色数
    //			M3DFast.gi().DrawTextEx(this.iX+330, this.iY+50+i*80+30, SortAnima._CHANGECOLOR[xb][i], 0xff003e57, 30, 101, 1, 1, 0, 0, -2);
    			M3DFast$1.gi().DrawTextEx(this.iX+310, this.iY+50+i*(k+60)+k+30, "部位"+(i+1), 0xff003e57, 30, 101, 1, 1, 0, 0, -2);
    			for(j=0;j<6;j++)
    			{//可换5种，和一种本色
    				if(this.iColor[i]==j)
    				{
    					this.btn_color[i][j].bMouseDown=true;
    					this.btn_color[i][j].bMouseIn=true;
    				}
    				this.btn_color[i][j].Move(this.iX+400+j*80, this.iY+50+i*(k+60)+k, 60, 60);
    				this.btn_color[i][j].Draw();
    			}
    			if(this.iColor[i]!=GmMe$1.me.iColor[i] && this.iColor[i]>0)
    			{
    				if(o>0)cost+="+";
    				cost+="部位"+(i+1)+"需"+SortAnima._CHANGECOLORCOST[xb][i]+"彩果";
    				o++;
    				this.iNeed+=SortAnima._CHANGECOLORCOST[xb][i];
    			}
    		}
    		//跟原来的color比较，改变了多少，就需要多少个彩果
    		M3DFast$1.gi().DrawTextEx(this.iX+50, this.iY+450, "共需"+this.iNeed+"个彩果", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		this.btn_rs.Move(this.iX+this.iW-110-50, this.iY+450-11, 110, 52);
    		this.btn_rs.Draw();
    //		if(p>0)
    //		{
    //			M3DFast.gi().DrawTextEx(this.iX+50, this.iY+450, cost, 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    //			M3DFast.gi().DrawTextEx(this.iX+50, this.iY+500, "共需"+p+"个彩果", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    //		}
    		
    		//计算当前背包中彩果数量
    		this.iCGCount=0;
    		for(i=0;i<20;i++)
    		{
    			if(MyGoods.gi().goods[2][i].iGid>0 && MyGoods.gi().goods[2][i].iTid==312)
    			{
    				this.iCGCount+=MyGoods.gi().goods[2][i].iCount;
    			}
    		}
    		M3DFast$1.gi().DrawTextEx(this.iX+50, this.iY+450+35, "背包中有"+this.iCGCount+"个彩果", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		
    		if(Confirm1.end(Confirm1.CONFIRM_CHANGECOLOR))
    		{
    			if(Confirm1.bConfirm)
    			{//
    				GmProtocol$1.gi().s_SeverEvent(23, 0, this.iDestColor, 0,0);
    				XStat$1.gi().PopStat(1);
    			}
    		}
    	}

    	ProcTouch( msg, x, y)
    	{
    		var i,j;
    		var xb=GmMe$1.me.iRace*2+GmMe$1.me.iSex;
    		for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    		{//颜色数
    			for(j=0;j<6;j++)
    			{//可换5种，和一种本色
    				if(this.btn_color[i][j].ProcTouch(msg, x, y))
    				{
    					if(this.btn_color[i][j].bCheck())
    					{
    						this.iColor[i]=j;
    						this.bChange=true;
    					}
    				}
    			}
    		}
    		
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(this.btn_rs.ProcTouch(msg, x, y))
    		{
    			if(this.btn_rs.bCheck())
    			{//确定染色
    //				i=(((((((this.iColor[0]<<3)|this.iColor[1])<<3)|this.iColor[2])<<3)|this.iColor[3])<<3)|this.iColor[4];
    				i=(((((((this.iColor[4]<<3)|this.iColor[3])<<3)|this.iColor[2])<<3)|this.iColor[1])<<3)|this.iColor[0];
    				if(this.iNeed>this.iCGCount)EasyMessage.easymsg.AddMessage("拥有彩果不足");
    				else if(GmMe$1.me.iFlag[53]==i)EasyMessage.easymsg.AddMessage("修改颜色后再染色");
    				else
    				{//发送染色消息
    					this.iDestColor=i;
    					Confirm1.start(Confirm1.CONFIRM_CHANGECOLOR,"是否确定染成所选颜色？");
    				}
    			}
    			return true;
    		}
    		if(this.btn_left.ProcTouch(msg, x, y))
    		{
    			if(this.btn_left.bCheck())
    			{
    				this.iRote--;
    				this.bChange=true;
    			}
    		}
    		if(this.btn_right.ProcTouch(msg, x, y))
    		{
    			if(this.btn_right.bCheck())
    			{
    				this.iRote++;
    				this.bChange=true;
    			}
    		}
    		return true;
    	}
    }
    ChangeColor.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_CHANGECOLOR);
    };

    class GetCodeReward extends BaseClass{
    	
    	constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=400;
    		this.iH = 40 + 50 + 40;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=80;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX + this.iW - 35, this.iY - 25, 60, 60);

    		this.btn_send=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_send.InitButton("1号按钮90_60");
    		this.btn_send.Move(this.iX + this.iW - 40 - 90, this.iY + 40 - 5, 90, 60);
    		this.btn_send.sName="发送";

    		this.in_speak=new XInput(GmPlay$1.xani_ui);
    		this.in_speak.Move(this.iX + 40, this.iY + 40, this.iW - 40 - 40 - 90 - 20, 50);
    		this.in_speak.bHideText=true;
    		this.in_speak.OpenInput();
    	}


    	Draw()
    	{
    		DrawMode$1.frame_type4("7号框52_52", this.iX, this.iY, this.iW, this.iH, 52, 52);
    		
    		DrawMode$1.frame_type4("8号框20_20", this.in_speak.iX, this.in_speak.iY, this.in_speak.iW, 50, 20, 20);
    		
    		this.pm3f.DrawTextEx(this.in_speak.iX + 10, this.in_speak.iY + this.in_speak.iH / 2, this.in_speak.sDetail, 0xff114e61, 20, 101, 1, 1, 0, 0, -2);
    		
    		this.btn_send.Draw();
    		this.btn_close.Draw();
    		this.in_speak.onscr();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.in_speak.ProcTouch(msg, x, y))
    		{
    		}
    		if(this.btn_send.ProcTouch(msg, x, y))
    		{
    			if(this.btn_send.bCheck())
    			{//发送小喇叭内容
    				if(this.in_speak.sDetail.length<=0)
    				{
    					EasyMessage.easymsg.AddMessage("请先输入内容");
    				}
    				else if(this.in_speak.sDetail.length>=40)
    				{
    					EasyMessage.easymsg.AddMessage("内容过长");
    				}
    				else
    				{
    					if(this.in_speak.sDetail=="teris")
    					{
    						XStat$1.gi().PopStat(1);
    						Tetris.Open();
    					}
    					else
    					{
    //					发送兑换码
    						GmProtocol$1.gi().s_GetCodeReward(1,this.in_speak.sDetail);
    						XStat$1.gi().PopStat(1);
    					}
    				}
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }
    GetCodeReward.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_GETCODEREWARD);
    //		(SmallSpeaker)(XStat.gi().LastStat(0))
    };

    class ProcMap {

    	
    	constructor()
    	{
    		this.bMapChanged=false;
    	}
    	RequirementCheck( prequirement)
    	{//检查是否满足条件
    		var i,j,k;
    		switch(prequirement.iRid)
    		{
    		case 0://所在门派ID
    			//prequirement.sValue[0]:0无，1剑侠居
    			i=parseInt(prequirement.sValues[0]);
    			if(GmMe$1.me.rbs.iSchoolId==i)return true;
    			break;
    		case 1://正在进行任务
    			//prequirement.sValues[0]:任务ID
    			if(MyMission.m.bCheckDoing(parseInt(prequirement.sValues[0])))return true;
    			break;
    		case 2://是否组队中
    			//prequirement.sValues[0]:0要求没组队
    			if(parseInt(prequirement.sValues[0])==0)
    			{//要求没组队
    				if(MyTeam$1.bNoTeam())return true;
    			}
    			else
    			{//要求组队中
    				if(MyTeam$1.bInTeam())
    				{
    					//要求队伍中人数parseInt(prequirement.sValues[1])
    					return true;
    				}
    				else
    				{
    					EasyMessage.easymsg.AddMessage("请组队后再来");
    					return false;
    				}
    			}
    			break;
    		case 3://等级限制
    			//prequirement.sValues[0]:必须>=?级
    			//prequirement.sValues[1]:必须<=?级
    			if(GmMe$1.me.rbs.iLev>=parseInt(prequirement.sValues[0]) &&
    					GmMe$1.me.rbs.iLev<=parseInt(prequirement.sValues[1]))return true;
    			break;
    		case 4://是否已加入帮派
    			//prequirement.sValues[0]:0未加入帮派，1已加入帮派
    			if(parseInt(prequirement.sValues[0])==0)
    			{//要求未加入帮派
    //				GmPlay.sop("GmMe.me.rbs.iGovId="+MyGov.mg.iRealGid);
    				if(MyGov.mg.iRealGid<=0)return true;
    			}
    			else
    			{//要求已经加入帮派
    				if(MyGov.mg.iRealGid>0)return true;
    			}
    			break;
    		case 5://是否在自己帮派中
    			//prequirement.sValues[0]:0否，1是
    			if(parseInt(prequirement.sValues[0])==1)
    			{
    				GmPlay$1.sop(""+MapManager.gi().mapdata.sMapDetail);
    				GmPlay$1.sop(""+MyGov.mg.sName);
    				if(MapManager.gi().mapdata.sMapDetail==MyGov.mg.sName)return true;
    				else return false;
    			}
    			if(parseInt(prequirement.sValues[0])==0)
    			{
    				if(MapManager.gi().mapdata.sMapDetail==MyGov.mg.sName)return false;
    				else return true;				
    			}
    			break;
    		case 6://正在进行特殊任务
    			//prequirement.sValues[0]:任务ID
    			j=parseInt(prequirement.sValues[0]);
    			GmPlay$1.sop("check special "+j);
    			if(MyMission.m.bCheckSpecialDoing(j))return true;
    			break;
    		case 7://当前副本状态
    //			GmPlay.sop1("MyFuBen.iFbType="+MyFuBen.iFbType);
    //			GmPlay.sop1("parseInt(prequirement.sValues[0])="+parseInt(prequirement.sValues[0]));
    //			GmPlay.sop1("MyFuBen.iFbProc="+MyFuBen.iFbProc);
    			if(MyFuBen.iFbType==parseInt(prequirement.sValues[0]))
    			{
    				i=parseInt(prequirement.sValues[1]);
    	//			GmPlay.sop(MyFuBen.iFbProc+"<"+i);
    				if(i!=0 && MyFuBen.iFbProc<i)return true;
    				i=parseInt(prequirement.sValues[2]);
    		//		GmPlay.sop(MyFuBen.iFbProc+"="+i);
    				if(i!=0 && MyFuBen.iFbProc==i)return true;
    				i=parseInt(prequirement.sValues[3]);
    	//			GmPlay.sop(MyFuBen.iFbProc+">"+i);
    				if(i!=0 && MyFuBen.iFbProc>i)return true;
    			}
    			break;
    		case 8://是否在本帮阵营条件
    			if(parseInt(prequirement.sValues[0])==1)
    			{//要求在本帮阵营
    //				GmPlay.sop1("==="+MapManager.gi().mapdata.sMapName+"+++++"+MyGov.mg.sName);
    				if(MapManager.gi().mapdata.sMapDetail==MyGov.mg.sName)return true;
    			}
    			break;
    		case 9://是否已加入战队
    			i=parseInt(prequirement.sValues[0]);
    			if(i==0)
    			{//要求未加入战队
    //				GmPlay.sop("GmMe.me.rbs.iGovId="+MyGov.mg.iRealGid);
    				if(MyFT.mft.iFTid<=0)return true;
    			}
    			else if(i==1)
    			{
    				if(MyFT.mft.iFTid>0)return true;
    			}
    			else if(i==2)
    			{//要求已经加入战队
    				if(MyFT.mft.iFTid>0 && MyFT.mft.iFTJob<=1)return true;
    			}
    			break;
    		case 10://拥有物品
    			j=parseInt(prequirement.sValues[0]);//物品id
    			k=parseInt(prequirement.sValues[1]);//物品数量
    			for(i=0;i<20;i++)
    			{
    				if(MyGoods.gi().goods[2][i].iGid>0)
    				{
    					if(MyGoods.gi().goods[2][i].iTid==j && MyGoods.gi().goods[2][i].iCount>=k)return true;
    				}
    			}
    			break;
    		case 11://要求在任务帮
    			//prequirement.sValues[0]:帮派动态ID与任务相同
    			return MyMission.m.bCheckInMissionMap(parseInt(prequirement.sValues[0]));
    		case 12://正在进行特殊任务
    			//prequirement.sValues[0]:mpoint=
    			if(VisualBlock.talkingnpc!=null &&
    					VisualBlock.talkingnpc.bCurrentBlock &&
    					VisualBlock.talkingnpc.iNpcId==parseInt(prequirement.sValues[0]))
    					return true;
    			break;
    		case 13://帮派副本状态检测
    			i=parseInt(prequirement.sValues[0]);
    			GmPlay$1.sop(""+GovFBTarget.iPlanId+"=================="+i);
    			if(GovFBTarget.iPlanId==i)return true;
    			break;
    		case 14://随机条件
    			i=parseInt(prequirement.sValues[0]);
    			if(XDefine$1.GetRand(0, 100)<i)return true;
    			break;
    		case 15://特殊-赠送坐骑
    			if(GmMe$1.me.rbs.iLev>=30 && (GmMe$1.me.iFlag[39]&8)==0)return true;
    			break;
    		}
    		return false;
    	}
    	ProcEvent( pevent)
    	{//触发事件
    		var i,j;
    		var npcid,order;
    		var type,dest;
    		switch(pevent.iEid)
    		{
    		case 0://地图传送
    			//(string)pevent.sValue[0]:传送目标地图名称1
    			//pevent.sValue[1]:传送目标坐标X
    			//pevent.sValue[2]:传送目标坐标Y
    			var did=MapManager.gi().NameToId(pevent.sValues[0]);
    			var x=parseInt(pevent.sValues[1]);
    			var y=parseInt(pevent.sValues[2]);
    			if(MapManager.gi().iCurrentMapId==1 && GmMe$1.me.rbs.iLev<10)
    			{
    				if(MyGoods.gi().goods[1][2].iGid<=0)
    				{
    					FrameMessage.fm.Open("郊外比较危险，先带上武器再去吧（打开背包穿戴装备）");
    					break;
    				}
    			}
    			GmPlay$1.sop("go to "+did+","+pevent.sValues[0]);
    			GmProtocol$1.gi().s_ChangeMap(did,x,y);
    			break;
    		case 1://拜入门派
    			//pevent.sValue[0]:1剑侠居
    			i=parseInt(pevent.sValues[0]);
    			if(i>=1 && i<=9)
    			{
    //				j=(i-1)/3;
    //				if(j!=GmMe.me.iRace)EasyMessage.easymsg.AddMessage("种族不对口");
    //				else
    				{
    					GmProtocol$1.gi().s_GetInSchool(i);
    //					GmMe.me.rbs.iSchoolId=i;
    				}
    			}
    			break;
    		case 2://打开学习技能界面
    			XStat$1.gi().PushStat(XStat$1.GS_LEARNSKILL);
    //			GmPlay.sop("zzzzzzzzzzzzz");
    			break;
    		case 3://领取任务
    			i=parseInt(pevent.sValues[0]);
    			j=parseInt(pevent.sValues[1]);
    			GmProtocol$1.gi().s_GetMission(i,j);
    			break;
    		case 4://领取门派任务 
    			//pevent.sValues[0]:门派ID
    			GmProtocol$1.gi().s_GetSchoolMission(parseInt(pevent.sValues[0]));
    			break;
    		case 5://打开NPC商店
    			//pevent.sValues[0]:NPC商店ID
    			i=parseInt(pevent.sValues[0]);
    			if(i==500)
    			{//回收，出售装备
    				XStat$1.gi().PushStat(XStat$1.GS_MYRECOVER);
    			}
    			else GmProtocol$1.gi().s_NpcShop(i);
    			break;
    		case 6://完成剧情任务
    			//pevent.sValues[0]:完成任务ID
    			GmProtocol$1.gi().s_FinishMission(0,parseInt(pevent.sValues[0]),0,0);
    			break;
    		case 7://打开创建帮派页面
    			XStat$1.gi().PushStat(XStat$1.GS_CREATEGOV);
    			break;
    		case 8://帮派操作
    			//pevent.sValues[0]:0申请入帮，1回帮
    			switch(parseInt(pevent.sValues[0]))
    			{
    			case 0://申请入帮，发送消息，获取帮派列表
    				GmProtocol$1.gi().s_NewGovOperate(0,0,0,0,0,"");//进入等待loading，以免重复获取列表
    				GmProtocol$1.gi().s_NewGovOperate(2,0,0,0,0,"");
    				break;
    			case 1://回帮
    				GmProtocol$1.gi().s_GetIntoGov(MyGov.mg.iRealGid);
    				break;
    			case 2://打开学技能页面
    				GmProtocol$1.gi().s_GovOperateFrame(0);
    				break;
    			case 3://打开修炼页面
    				GmProtocol$1.gi().s_GovOperateFrame(1);
    				break;
    			case 4://打开宠修页面
    				GmProtocol$1.gi().s_getflag();
    				XStat$1.gi().PushStat(XStat$1.GS_PETXIU);
    				break;
    			case 5://打开报名界面
    				//判断是否帮主/副帮主
    				if(MyGov.mg.iRealGid>0 && MyGov.mg.iJob<=1)
    				{
    					ApplyGovFight.Open();
    				}
    				else
    				{
    					EasyMessage.easymsg.AddMessage("帮主/副帮主才能报名");
    				}
    				break;
    			case 6://打开改名页面
    				XStat$1.gi().PushStat(XStat$1.GS_CHANGENAME);
    				break;
    			case 7://打开输入玩家id页面，进入对方家里
    				InNumber.start(InNumber.IN_RID, "输入人物ID", 0, 99999999);
    				break;
    			case 8://打开创建战队页面
    				CreateFT.Open();
    				break;
    			case 9://打开战队排行
    				GmProtocol$1.gi().s_FTChallenge(0, 100000,0);
    				break;
    			case 10://打开新建商会页面
    				EasyMessage.easymsg.AddMessage("系统暂未开放");
    				//CreateShop.Open();
    				break;
    			case 11://打开宠物进阶页面
    				JJPet.Open();
    				break;
    			case 12://融合自然之力
    				MergeZR.Open();
    				break;
    			case 13://炼妖
    //				EasyMessage.easymsg.AddMessage("系统暂未开放");
    				FusePet.Open();
    				break;
    			case 14://打开染色界面
    //				EasyMessage.easymsg.AddMessage("系统暂未开放");
    				ChangeColor.Open();
    				break;
    			case 15://新手选门派页面
    				SelectSchool.Open();
    				break;
    			case 16://认证
    				ApprovePet.Open();
    				break;
    			case 17://去其他帮逛逛
    				GetInGov.Open();
    				break;
    			case 18://委托任务
    				EntrustMission.Open();
    				break;
    			case 19://帮派管理
    				NewGovManage.Open();
    				break;
    			case 20://打开帮派药房买东西
    				GmProtocol$1.gi().s_NewGovOperate(20,0,0,0,0,"");
    				break;
    			case 21://丹方合并
    				RemedyMerge.Open();
    				break;
    			case 22://打开商会商店
    				GmProtocol$1.gi().s_NewGovOperate(20,1,0,0,0,"");
    				break;
    			case 23://雇佣商人界面
    				GmProtocol$1.gi().s_NewGovOperate(21,0,1,0,0,"");
    				break;
    			case 24://雇佣工人界面
    				GmProtocol$1.gi().s_NewGovOperate(21,0,0,0,0,"");
    				break;
    			case 25://开启帮派副本
    				GmProtocol$1.gi().s_NewGovOperate(23, 0, 0, 0,0,"");
    				break;
    			case 26://进入帮派副本
    				GmProtocol$1.gi().s_NewGovOperate(24, 0, 0, 0,0,"");
    				break;
    			case 27://打开新手选宠页面
    				SelectNewPet.Open();
    				break;
    			case 28://购买图纸
    				i=GmMe$1.me.rbs.iLev/10;
    				if(i<3)i=3;
    				if(i>8)i=8;
    				shop_BuyDrawing.GetPage(i);
    				break;
    			case 29://装备修理界面
    				RepairEquip.Open(-1, 0);
    				break;
    			}
    			break;
    		case 9://雇佣帮派工人
    			//pevent.sValues[0]:0建筑工人,1商人
    			//pevent.sValues[1]:工人等级
    			//pevent.sValues[2]:工作时间
    			GmProtocol$1.gi().s_HireWorker(parseInt(pevent.sValues[0]), parseInt(pevent.sValues[1]), parseInt(pevent.sValues[2]));
    			break;
    		case 10://装备操作
    			//pevent.sValues[0]:0制造,1镶嵌,2强化
    			switch(parseInt(pevent.sValues[0]))
    			{
    			case 0://打开制造页面
    				XStat$1.gi().PushStat(XStat$1.GS_MAKEEQUIP);
    				break;
    			case 1://打开镶嵌页面
    				XStat$1.gi().PushStat(XStat$1.GS_CAMEOOPERATE);
    				break;
    			case 2://打开强化页面
    				XStat$1.gi().PushStat(XStat$1.GS_IMPROVEEQUIP);
    				break;
    			case 3://学习手艺界面
    				break;
    			}
    			break;
    		case 11://完成特殊任务
    			i=parseInt(pevent.sValues[0]);
    			if(SelectGoodsForMission.Open(i))
    			{//打开交物品框
    			}
    			else GmProtocol$1.gi().s_FinishMission(1,i,0,0);//直接完成
    			break;
    		case 12://打开仓库
    			//pevent.sValues[0]:0物品仓库,1宠物仓库
    			switch(parseInt(pevent.sValues[0]))
    			{
    			case 0:
    				XStat$1.gi().PushStat(XStat$1.GS_GOODSSTOREFROME);
    				XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    				GmProtocol$1.gi().s_OpenStore(0, 0,0);
    				break;
    			case 1:
    //				XStat.gi().PushStat(XStat.GS_GOODSSTOREFROME);
    //				XStat.gi().PushStat(XStat.GS_LOADING1);
    				GmProtocol$1.gi().s_OpenStore(1, 0,0);
    				break;
    			}
    			break;
    		case 13://服务器事件
    			//pevent.sValues[0]:主类型
    			//pevent.sValues[1]:子类型
    			//pevent.sValues[2]:参数1
    			//pevent.sValues[3]:参数2
    			//pevent.sValues[4]:参数3
    			GmProtocol$1.gi().s_SeverEvent(parseInt(pevent.sValues[0]), //mtype
    					parseInt(pevent.sValues[1]), //stype
    					parseInt(pevent.sValues[2]), 
    					parseInt(pevent.sValues[3]), 
    					parseInt(pevent.sValues[4]));
    			break;
    		case 14://特殊传送
    			if(MapManager.gi().iCurrentMapId==1 && GmMe$1.me.rbs.iLev<10)
    			{
    				if(MyGoods.gi().goods[1][2].iGid<=0)
    				{
    					FrameMessage.fm.Open("郊外比较危险，先带上武器再去吧（打开背包穿戴装备）");
    					break;
    				}
    			}
    			type=parseInt(pevent.sValues[0]);
    			dest=parseInt(pevent.sValues[1]);
    			GmProtocol$1.gi().s_ChangeMapNew(type,dest);
    			break;
    		case 15://礼品官领取
    			type=parseInt(pevent.sValues[0]);
    			if(type==0)
    			{//打开签到页面
    				GmProtocol$1.gi().s_GetCodeReward(2,"");
    			}
    			else if(type==1)
    			{//打开兑换码页面
    				GetCodeReward.Open();
    			}
    			else if(type==2)
    			{//我是冲级达人
    				GmProtocol$1.gi().s_GetCodeReward(4,"");
    			}
    			break;
    		case 16://副本操作
    			GmProtocol$1.gi().s_FuBen(parseInt(pevent.sValues[0]),parseInt(pevent.sValues[1]));
    			break;
    		case 20://npc事件
    			GmProtocol$1.gi().s_NpcCmd(pevent.sValues[0],pevent.sValues[1],pevent.sValues[2],pevent.sValues[3],
    					pevent.sValues[4],pevent.sValues[5],pevent.sValues[6],pevent.sValues[7]);
    			break;
    		case 21:
    			GmProtocol$1.gi().s_ExtendCmd(pevent.sValues[0],pevent.sValues[1],pevent.sValues[2],pevent.sValues[3],
    					pevent.sValues[4],pevent.sValues[5],pevent.sValues[6],pevent.sValues[7]);
    			break;
    		case ProcMap.NPCREPLY_ANSWER:
    		case ProcMap.NPCREPLY_QIANGDAO:
    		case ProcMap.NPCREPLY_SHANZEI:
    		case 103:
    		case 104:
    		case 105:
    		case 106:
    		case 107:
    		case 108:
    		case 109:
    		case 110:
    		case 111:
    		case 112:
    		case 113:
    		case 114:
    		case 115:
    		case 116:
    		case 117:
    		case 118:
    		case 119:
    		case 120:
    			if(VisualBlock.talkingnpc==null)break;
    			if(VisualBlock.talkingnpc.bCurrentBlock)break;
    			npcid=parseInt(pevent.sValues[0]);
    			order=parseInt(pevent.sValues[1]);
    			if(npcid!=VisualBlock.talkingnpc.iNpcId)break;
    			GmProtocol$1.gi().s_NpcReply(npcid,VisualBlock.talkingnpc.iSid, order);
    			break;
    		default:
    			if(pevent.iEid>=100)
    			{
    				if(VisualBlock.talkingnpc==null)break;
    				if(VisualBlock.talkingnpc.bCurrentBlock)break;
    				npcid=parseInt(pevent.sValues[0]);
    				order=parseInt(pevent.sValues[1]);
    				if(npcid!=VisualBlock.talkingnpc.iNpcId)break;
    				GmProtocol$1.gi().s_NpcReply(npcid,VisualBlock.talkingnpc.iSid, order);
    			}
    			break;
    		}
    		return false;
    	}
    }

    ProcMap.NPCREPLY_ANSWER=100;
    ProcMap.NPCREPLY_QIANGDAO=101;
    ProcMap.NPCREPLY_SHANZEI=102;

    class VisualBlock {

       constructor( m3f)
       {
        this.MAXVISUALBLOCK=128;
           var i;
           this.vbs=new Array(this.MAXVISUALBLOCK);
           for(i=0;i<this.MAXVISUALBLOCK;i++)this.vbs[i]=null;
           
           this.mapdialog=new MapDialog(m3f,this);
           this.newdialog=new NewMapDialog();
          
           
           this.procmap=new ProcMap();
           this.bNpcLoaded=false;
           this.ani_npcs=new XAnima(m3f);
           
           this.aa_flag1=null;
    	   this.aa_flag2=null;
    	   
           this.iLockNpcId=-1;
           this.iGoToNpcFlag=-1;
           this.iGoToNpcId=-1;
    	   VisualBlock.pvb=this;
    	   
    	   this.bFaceToFace=false;

       }

    	FindNpcByName( name)
    	{
    		var i;
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]!=null)
    			{
    				if(this.vbs[i].sNpcName.length>0)
    				{
    //					GmPlay.sop(""+this.vbs[i].sNpcName+"=========="+name);
    					if(this.vbs[i].sNpcName==name)return this.vbs[i];
    				}
    			}
    		}
    		return null;
    	}
    	

    	 ClearNpcFlag()
    	{
    		var i;
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]!=null)
    			{
    				this.vbs[i].iFlag=0;
    			}
    		}
    	}
    	 SetNpcFlag( npcid, flag)
    	{//flag=0 无，1可交（感叹号），2可接（问好）
    		var i;
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]!=null)
    			{
    				if(this.vbs[i].bCurrentBlock && this.vbs[i].iNpcId==npcid)
    				{
    					this.vbs[i].iFlag=flag;
    					return;
    				}
    			}
    		}
    	}
    	 LoadNpcs( pls, path)
    	{
    		this.ani_npcs.LoadAnima_fullpath(path,pls,true,this._LoadNpcs);
    	}
    	_LoadNpcs()
    	{
    		VisualBlock.pvb.bNpcLoaded=true;
    	}
    	 DrawPopo( vb, iOffx, iOffy)
    	{
    		if(vb.iPopoDelay<=0)return;

    		vb.iPopoDelay--;
    		FormatString.gi().Format(vb.sPopoString, 151, 25);
    		var x=iOffx+vb.iX-FormatString.gi().iW/2;
    //		y-=(FormatString.gi().iH-iOffY-40);iOffY=aa_body.pani.iAnimaY(aa_body)-30;
    		var sy=iOffy+vb.iY+vb.aa_body.pani.iAnimaY(vb.aa_body)-FormatString.gi().iH;
    		DrawBuffer.gi().FillRect(iOffy+vb.iY, x, sy, x+FormatString.gi().iW, sy+FormatString.gi().iH, 0x50000000);
    		FormatString.gi().DrawToBuffer(iOffy+vb.iY+1,x,sy);
    	}
    	DrawNpcInBuffer( pdbf, iOffx, iOffy)
    	{
    		var i,j;
    		if(!this.bNpcLoaded)return;
    		if(this.aa_flag1==null)this.aa_flag1=GmPlay$1.xani_ui.InitAnimaWithName("交任务感叹号", null);
    		if(this.aa_flag2==null)this.aa_flag2=GmPlay$1.xani_ui.InitAnimaWithName("接任务问号", null);
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]!=null)
    			{
    				if(this.vbs[i].sNpcName.length>0)
    				{//是npc
    					if(this.vbs[i].iDx!=this.vbs[i].iX || this.vbs[i].iDy!=this.vbs[i].iY)
    					{//npc行走
    						j=XDefine$1.llength(this.vbs[i].iX,this.vbs[i].iY,this.vbs[i].iDx,this.vbs[i].iDy);
    						if(j>8)
    						{
    							this.vbs[i].iX=(this.vbs[i].iDx-this.vbs[i].iX)*8/j+this.vbs[i].iX;
    							this.vbs[i].iY=(this.vbs[i].iDy-this.vbs[i].iY)*8/j+this.vbs[i].iY;
    						}
    						else
    						{
    							this.vbs[i].iX=this.vbs[i].iDx;
    							this.vbs[i].iY=this.vbs[i].iDy;							
    						}
    					}
    //					GmPlay.sop(""+this.vbs[i].sNpcName);
    //					if(this.vbs[i].iX<0 || this.vbs[i].iY<0 || this.vbs[i].iX>MapManager.gi().mapdata.iMapWidth || this.vbs[i].iY>MapManager.gi().mapdata.iMapHeight)continue;
    					if(this.vbs[i].iX<0 || this.vbs[i].iY<0)continue;
    					this.DrawPopo(this.vbs[i],iOffx,iOffy);
    					if(parseInt(this.vbs[i].iAnimaType/100000)==3)
    					{//植物
    						pdbf.DrawAnima_aa(iOffy+this.vbs[i].iY-20,null,iOffx+this.vbs[i].iX,iOffy+this.vbs[i].iY-20,this.vbs[i].aa_body);
    						pdbf.DrawAnima_aa(iOffy+this.vbs[i].iY,null,iOffx+this.vbs[i].iX-40,iOffy+this.vbs[i].iY,this.vbs[i].aa_body);
    						pdbf.DrawAnima_aa(iOffy+this.vbs[i].iY,null,iOffx+this.vbs[i].iX+40,iOffy+this.vbs[i].iY,this.vbs[i].aa_body);
    						pdbf.DrawAnima_aa(iOffy+this.vbs[i].iY+20,null,iOffx+this.vbs[i].iX,iOffy+this.vbs[i].iY+20,this.vbs[i].aa_body);
    						continue;
    					}
    					if(parseInt(this.vbs[i].iAnimaType/100000)==4)
    					{//树木
    						pdbf.DrawAnima_aa(iOffy+this.vbs[i].iY,null,iOffx+this.vbs[i].iX,iOffy+this.vbs[i].iY,this.vbs[i].aa_body);
    						continue;
    					}
    					if(this.vbs[i].sAniName!="传送点")
    					{//不是传送点的阴影
    						FireworksEffect.DrawAura(0, iOffx+this.vbs[i].iX,iOffy+this.vbs[i].iY, pdbf, iOffy+this.vbs[i].iY-1);//npc影子
    					}
    					pdbf.DrawAnima_aa(iOffy+this.vbs[i].iY,this.ani_npcs,iOffx+this.vbs[i].iX,iOffy+this.vbs[i].iY,this.vbs[i].aa_body);
    					if(parseInt(this.vbs[i].iAnimaType/100000)==1 && this.vbs[i].iWeapId>0)
    					{//带武器的角色
    						pdbf.DrawAnima_aa(iOffy+this.vbs[i].iY+1,this.ani_npcs,iOffx+this.vbs[i].iX,iOffy+this.vbs[i].iY,this.vbs[i].aa_weapon);
    						this.vbs[i].aa_weapon.NextFrame();
    					}
    					
    					if(this.vbs[i].iDx!=this.vbs[i].iX || this.vbs[i].iDy!=this.vbs[i].iY)
    					{//行走状态
    						if(parseInt(this.vbs[i].iAnimaType/100000)==1)
    						{//人物
    							if(this.vbs[i].iActionStat!=1 || this.vbs[i].iFaceTo!=this.vbs[i].GetFace8(this.vbs[i].iDx, this.vbs[i].iDy))
    							{
    								this.vbs[i].iActionStat=1;
    								this.vbs[i].iFaceTo=this.vbs[i].GetFace8(this.vbs[i].iDx, this.vbs[i].iDy);

    								GmPlay$1.xani_newrole[parseInt(this.vbs[i].iAnimaType/10000)%10].InitAnimaWithName("跑步_"+this.vbs[i].FaceTo(this.vbs[i].iFaceTo), this.vbs[i].aa_body);
    								if(this.vbs[i].iWeapId>0)
    								{
    									TeamOperate.ResetWeapon(this.vbs[i].iWeapId, (parseInt(this.vbs[i].iAnimaType/10000)%10)%2, this.vbs[i].sAniName, this.vbs[i].aa_weapon);
    								}
    							}
    						}
    						else if(parseInt(this.vbs[i].iAnimaType/100000)==2)
    						{//怪物
    							if(this.vbs[i].iActionStat!=1 || this.vbs[i].iFaceTo!=this.vbs[i].GetFace4(this.vbs[i].iDx, this.vbs[i].iDy))
    							{
    								this.vbs[i].iActionStat=1;
    								this.vbs[i].iFaceTo=this.vbs[i].GetFace8(this.vbs[i].iDx, this.vbs[i].iDy);

    								GmPlay$1.xani_pets[this.vbs[i].iWeapId].InitAnimaWithName(((parseInt(this.vbs[i].iAnimaType/10000)%10)==0?"":"变异_")+"跑步_"+this.vbs[i].FaceTo(this.vbs[i].iFaceTo),this.vbs[i].aa_body);
    							}
    						}
    					}
    					else
    					{//站立状态
    						if(this.vbs[i].iActionStat!=0)
    						{
    							this.vbs[i].iActionStat=0;
    							if(parseInt(this.vbs[i].iAnimaType/100000)==1)
    							{//人物
    								GmPlay$1.xani_newrole[parseInt(this.vbs[i].iAnimaType/10000)%10].InitAnimaWithName("站立_"+this.vbs[i].FaceTo(this.vbs[i].iFaceTo), this.vbs[i].aa_body);
    								if(this.vbs[i].iWeapId>0)
    								{
    									TeamOperate.ResetWeapon(this.vbs[i].iWeapId, (parseInt(this.vbs[i].iAnimaType/10000)%10)%2, this.vbs[i].sAniName, this.vbs[i].aa_weapon);
    								}
    							}
    							else if(parseInt(this.vbs[i].iAnimaType/100000)==2)
    							{//怪物
    								GmPlay$1.xani_pets[this.vbs[i].iWeapId].InitAnimaWithName(((parseInt(this.vbs[i].iAnimaType/10000)%10)==0?"":"变异_")+"站立_"+this.vbs[i].FaceTo(this.vbs[i].iFaceTo),this.vbs[i].aa_body);
    							}
    						}
    					}
    					//名字
    					pdbf.DrawText_2(iOffy+this.vbs[i].iY,1,iOffx+this.vbs[i].iX,iOffy+this.vbs[i].iY+20,this.vbs[i].sNpcName,0xffffff00,20,1,0xff000000);
    //					this.ani_npcs.DrawAnima_aa(pm3f,iOffx+this.vbs[i]->iX,iOffy+this.vbs[i]->iY,&this.vbs[i]->aa);
    					this.vbs[i].aa_body.NextFrame();
    					
    					switch(this.vbs[i].iFlag)
    					{
    					case 1://感叹号
    						pdbf.DrawAnima_aa(iOffy+this.vbs[i].iY,GmPlay$1.xani_ui,iOffx+this.vbs[i].iX,iOffy+this.vbs[i].iY-100,this.aa_flag1);
    //						pdbf.DrawText(iOffy+this.vbs[i].iY+20,1,iOffx+this.vbs[i].iX,iOffy+this.vbs[i].iY-110,"!",0xff00ff00,50);
    						break;
    					case 2://问好
    						pdbf.DrawAnima_aa(iOffy+this.vbs[i].iY,GmPlay$1.xani_ui,iOffx+this.vbs[i].iX,iOffy+this.vbs[i].iY-100,this.aa_flag2);
    //						pdbf.DrawText(iOffy+this.vbs[i].iY+20,1,iOffx+this.vbs[i].iX,iOffy+this.vbs[i].iY-110,"?",0xff00ff00,50);
    						break;
    					}
    //					pm3f->DrawTextEx(iOffx+this.vbs[i]->iX,iOffy+this.vbs[i]->iY+20,this.vbs[i]->sNpcName,0xffffffff,15,1);
    				}
    			}
    		}
    		GmPlay$1.xani_ui.NextFrame(this.aa_flag1);
    		GmPlay$1.xani_ui.NextFrame(this.aa_flag2);
    	}
    	npctalk( pls)
    	{
    		var npctype=pls.GetNextByte();//0本地npc,1动态npc
    		var npcid=pls.GetNextInt();//npcid
    		var tk=pls.GetNextString();//内容
    		this._npctalk(npctype,npcid,tk,200);
    	}
    	_npctalk( npctype, npcid, tk, tm)
    	{
    		var i;
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]==null)continue;
    			if(npctype==0)
    			{//本地npc
    				if(!this.vbs[i].bCurrentBlock)continue;
    				if(this.vbs[i].iNpcId==npcid)
    				{
    					this.vbs[i].sPopoString=tk;
    					this.vbs[i].iPopoDelay=tm;
    					break;
    				}
    			}
    			else if(npctype==1)
    			{//
    				if(this.vbs[i].bCurrentBlock)continue;
    				if(this.vbs[i].iNpcId==npcid)
    				{
    					this.vbs[i].sPopoString=tk;
    					this.vbs[i].iPopoDelay=200;
    					break;
    				}
    			}
    		}
    	}
    	 npcmove( pls)
    	{
    		var npctype=pls.GetNextByte();//0本地npc,1动态npc
    		var npcid=pls.GetNextInt();//npcid
    //		String tk=pls.GetNextString();//内容
    		var i;
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]==null)continue;
    			if(npctype==1)
    			{
    				if(this.vbs[i].bCurrentBlock)continue;
    				if(this.vbs[i].iNpcId==npcid)
    				{
    //					this.vbs[i].iX=pls.GetNextInt();
    //					this.vbs[i].iY=pls.GetNextInt();
    					this.vbs[i].iDx=pls.GetNextInt();
    					this.vbs[i].iDy=pls.GetNextInt();
    	//				GmPlay.sop("aa="+this.vbs[i].iDx+"bb="+this.vbs[i].iDy);
    //					this.vbs[i].iDx=this.vbs[i].iX;
    //					this.vbs[i].iDy=this.vbs[i].iY;
    					break;
    				}
    			}
    		}
    	}
    	AddVoidNpc()
    	{
    		var i;
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]==null)break;
    		}
    		if(i>=this.MAXVISUALBLOCK)return null;//npc池满了
    		this.vbs[i]=new _VISUALBLOCK(i);
    		return this.vbs[i];
    	}
    	clearnpc( pls)
    	{
    		var i;
    		var npcid=pls.GetNextInt();
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]==null)continue;
    			if(this.vbs[i].bCurrentBlock)continue;
    			if(this.vbs[i].iNpcId==npcid)
    			{
    				if(VisualBlock.iLastProcBase==i)VisualBlock.iLastProcBase=-1;
    				this.vbs[i]=null;
    				break;
    			}
    		}
    	}
    	 getnpctalkext( pls)
    	{
    		var i,j,k;
    		var npcid=pls.GetNextInt();
    		var sid=pls.GetNextInt();
    		
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]==null)continue;
    			if(this.vbs[i].bCurrentBlock)continue;
    			if(this.vbs[i].iNpcId==npcid && this.vbs[i].iSid==sid)break;
    		}
    		if(i<this.MAXVISUALBLOCK)
    		{//找到了npc，更新数据，一般为更新是否战斗标记
    			k=0;
    			while(true)
    			{
    				GmPlay$1.sop("off="+pls.iOffset);
    				j=pls.GetNextByte();
    				GmPlay$1.sop(""+j);
    				if(j==-1)break;
    				this.vbs[i].pss[k]=this.LoadBase(j,pls);
    				k++;
    			}
    			return;
    		}
    	}
    	 getnpc( pls)
    	{//2060
    		var i,j,k;
    		var npcid=pls.GetNextInt();
    		var sid=pls.GetNextInt();
    		
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]==null)continue;
    			if(this.vbs[i].bCurrentBlock)continue;
    			if(this.vbs[i].iNpcId==npcid && this.vbs[i].iSid==sid)break;
    		}
    		if(i<this.MAXVISUALBLOCK)
    		{//找到了npc，更新数据，一般为更新是否战斗标记
    			return;
    		}
    		//没找到，新建一个
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]==null)break;
    		}
    		if(i>=this.MAXVISUALBLOCK)return;//npc池满了
    		var ppp=i;
    		this.vbs[i]=new _VISUALBLOCK(i);
    		this.vbs[i].bCurrentBlock=false;
    		this.vbs[i].iNpcId=npcid;
    		this.vbs[i].iSid=sid;
    		this.vbs[i].iX=pls.GetNextInt();
    		this.vbs[i].iY=pls.GetNextInt();
    		this.vbs[i].iDx=this.vbs[i].iX;
    		this.vbs[i].iDy=this.vbs[i].iY;
    		this.vbs[i].sNpcName=pls.GetNextString();
    		this.vbs[i].iAnimaType=pls.GetNextInt();
    		this.vbs[i].sAniName=pls.GetNextString();
    		this.vbs[i].sBaseAniName=this.vbs[i].sAniName;
    		this.vbs[i].iActionStat=0;
    		this.vbs[i].iR=30;
    		j=parseInt(this.vbs[i].iAnimaType/100000);
    		
    		this.vbs[i].iStandFlag=-1;
    //		GmPlay.sop("npcid="+npcid+" x="+this.vbs[i].iX/16+" y="+this.vbs[i].iY/16+" name="+this.vbs[i].sNpcName);
    		if(j==0)this.ani_npcs.InitAnimaWithName(this.vbs[i].sAniName, this.vbs[i].aa_body);//npc
    		else if(j==1)
    		{//人物
    			this.vbs[i].iWeapId=this.vbs[i].iAnimaType%10000;
    			k=parseInt(this.vbs[i].iAnimaType/10000)%10;//race*2+sex
    			GmPlay$1.xani_newrole[k].InitAnimaWithName(this.vbs[i].sAniName, this.vbs[i].aa_body);
    			if(this.vbs[i].iWeapId>0)
    			{
    				TeamOperate.ResetWeapon(this.vbs[i].iWeapId, k%2, this.vbs[i].sAniName, this.vbs[i].aa_weapon);
    //				GmPlay.xani_role[k].InitAnimaWithName(GmPlay.de_goods.strValue(this.vbs[i].iWeapId, 0, 4)+"_"+this.vbs[i].sAniName, this.vbs[i].aa_weapon);
    			}
    		}
    		else if(j==2)
    		{//怪物
    //			for(int zz=0;zz<100;zz++)GmPlay.sop("j="+this.vbs[i].iAnimaType);
    			this.vbs[i].iWeapId=this.vbs[i].iAnimaType%10000;//怪物ID
    			k=parseInt(this.vbs[i].iAnimaType/10000)%10;//是否变异
    			GmPlay$1.xani_pets[this.vbs[i].iWeapId].InitAnimaWithName((k==0?"":"变异_")+this.vbs[i].sAniName,this.vbs[i].aa_body);
    		}
    		else if(j==3 || j==4)
    		{//植物
    			GmPlay$1.xani_grow.InitAnimaWithName(this.vbs[i].sAniName, this.vbs[i].aa_body);
    		}
    		this.vbs[i].pss[0]=new SE_SELECT();
    		var pselect=this.vbs[i].pss[0];
    		var pevent;
    		pselect.iType=4;
    		pselect.iCount=pls.GetNextShort();
    		pselect.sQuestion=pls.GetNextString();
    		for(i=0;i<pselect.iCount;i++)
    		{
    			pselect.sAnswers[i]=pls.GetNextString();
    			pselect.next[i]=new SE_EVENT();
    			pevent=pselect.next[i];
    			pevent.iType=5;
    			pevent.iEid=pls.GetNextShort();
    			pevent.sValues[0]=""+pls.GetNextInt();//npcid
    			pevent.sValues[1]=""+pls.GetNextByte();//order
    		}
    		//////////使用定义的形象
    		j=pls.GetNextInt();//standflag
    		if(j!=100000)
    		{
    			i=ppp;
    			k=pls.GetNextInt();//define id
    			if(GmPlay$1.de_npc.intValue(k, 0, 7)==j)
    			{
    				this.vbs[i].iStandFlag=j;
    				this.vbs[i].sStandName=GmPlay$1.de_npc.strValue(k, 0, 8);
    				this.vbs[i].iFaceTo=pls.GetNextByte();
    				this.vbs[i].ResetStandAnima(this.vbs[i].ToX(this.vbs[i].iFaceTo),this.vbs[i].ToY(this.vbs[i].iFaceTo));
    //				GmPlay.sop("zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz123");
    			}
    		}
    	}
    	ClearVisual()
    	{
    		console.log('清除npc');
    		for(var i=0;i<this.MAXVISUALBLOCK;i++)this.vbs[i]=null;
    		VisualBlock.iLastProcBase=-1;
    		
    		this.ClearNpcFlag();
    		MyMission.m.linktonpc();
    	}
    //	public int this.iBoomX,this.iBoomY;
    	 LoadVisual( pls)
    	{
    		//console.log('加载npc')
    		//this.ClearVisual();
    		var i,j,k;
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			// this.vbs[i]=null;
    			if(this.vbs[i]==null)break;
    		}
    //		ReleaseVisual();
    		this.iBoomX=0;this.iBoomY=0;
    		// i=0;
    		while(true)
    		{
    			j=pls.GetNextByte();
    			if(j==-1)break;
    			this.vbs[i]=new _VISUALBLOCK(i);
    			this.vbs[i].bCurrentBlock=true;
    			this.vbs[i].iX=pls.GetNextInt();
    			this.vbs[i].iY=pls.GetNextInt();
    			this.vbs[i].iDx=this.vbs[i].iX;
    			this.vbs[i].iDy=this.vbs[i].iY;
    			this.vbs[i].iR=pls.GetNextByte();
    			pls.GetNextInt();//LinkToX
    			this.vbs[i].iNpcId=pls.GetNextInt();//动画用ID所定义的,名字任意取
    			this.vbs[i].sNpcName=pls.GetNextString();
    			this.vbs[i].sAniName=pls.GetNextString();
    			this.vbs[i].sBaseAniName=this.vbs[i].sAniName;
    			this.vbs[i].iActionStat=0;
    			this.ani_npcs.InitAnimaWithName(this.vbs[i].sAniName, this.vbs[i].aa_body);
    			
    			this.vbs[i].iStandFlag=GmPlay$1.de_npc.intValue(this.vbs[i].iNpcId, 0, 7);
    			if(this.vbs[i].iStandFlag>=0)
    			{
    				this.vbs[i].sStandName=GmPlay$1.de_npc.strValue(this.vbs[i].iNpcId, 0, 8);
    				this.vbs[i].iFaceTo=GmPlay$1.de_npc.intValue(this.vbs[i].iNpcId, 0, 11);
    				this.vbs[i].ResetStandAnima(this.vbs[i].ToX(this.vbs[i].iFaceTo),this.vbs[i].ToY(this.vbs[i].iFaceTo));
    			}
    			
    			if(this.iBoomX==0 && this.vbs[i].iX>0)
    			{
    				this.iBoomX=this.vbs[i].iX;
    				this.iBoomY=this.vbs[i].iY;
    			}

    			k=0;
    			while(true)
    			{
    				j=pls.GetNextByte();
    				if(j==-1)break;
    				this.vbs[i].pss[k]=this.LoadBase(j,pls);
    				k++;
    			}

    			i++;
    		}
    		VisualBlock.iLastProcBase=-1;
    		
    		this.ClearNpcFlag();
    		MyMission.m.linktonpc();
    	}
    	 LoadBase( type, pls)
    	{
    		var i,j;
    		var bs = null;
    		var phead;
    		var pbranch;
    		var prequirement;
    		var pselect;
    		var pevent;

    		switch(type)
    		{
    		case 0:
    			break;
    		case 1:
    			phead=new SE_HEAD();
    			phead.sName=pls.GetNextString();
    			j=pls.GetNextByte();
    			if(j!=-1)phead.next=this.LoadBase(j,pls);
    			bs=phead;
    			break;
    		case 2:
    			pbranch=new SE_BRANCH();
    			pbranch.iCount=pls.GetNextByte();
    			i=0;
    			while(true)
    			{
    				j=pls.GetNextByte();
    				if(j==-1)break;
    				pbranch.next[i]=this.LoadBase(j,pls);
    				i++;
    			}
    			bs=pbranch;
    			break;
    		case 3:
    			prequirement=new SE_REQUIREMENT();
    			prequirement.iRid=pls.GetNextShort();
    			for(i=0;i<SE_REQUIREMENT.MAXREQUIREMENTVALUE;i++)
    			{
    				prequirement.sValues[i]=pls.GetNextString();
    			}
    			j=pls.GetNextByte();
    			if(j!=-1)prequirement.next=this.LoadBase(j,pls);
    			bs=prequirement;
    			break;
    		case 4:
    			pselect=new SE_SELECT();
    			pselect.sHead=pls.GetNextString();
    			pselect.iCount=pls.GetNextShort();
    			pselect.sQuestion=pls.GetNextString();
    			GmPlay$1.sop(pselect.sHead+":"+pselect.sQuestion);
    			for(i=0;i<SE_SELECT.MAXSELECTCOUNT;i++)
    			{
    				pselect.sAnswers[i]=pls.GetNextString();
    			}
    			i=0;
    			while(true)
    			{
    				j=pls.GetNextByte();
    				if(j==-1)break;
    				pselect.next[i]=this.LoadBase(j,pls);
    				i++;
    			}
    			bs=pselect;
    			break;
    		case 5:
    			pevent=new SE_EVENT();
    			pevent.iEid=pls.GetNextShort();
    			for(i=0;i<SE_EVENT.MAXEVENTVALUE;i++)
    			{
    				pevent.sValues[i]=pls.GetNextString(); 
    //				GmPlay.sop("event 5 cs ="+pevent.sValues[i]);
    			}
    			j=pls.GetNextByte();
    			if(j!=-1)pevent.next=this.LoadBase(j,pls);
    			bs=pevent;
    			break;
    		}
    		bs.iType=type;
    		return bs;
    	}
    	ProcBase( bs)
    	{
    		var i;
    		var phead;
    		var pbranch;
    		var prequirement;
    		var pselect;
    		var pevent;
    //		GmPlay.sop("222222222222222222222222222222222222222222222222222222222222222222222222222222222="+bs.iType);
    		if(bs==null)return false;
    		GmPlay$1.sop("Checking"+bs.iType);
    		switch(bs.iType)
    		{
    		case 1:
    			phead=bs;
    			if(phead.next!=null)return this.ProcBase(phead.next);
    //			phead.sName=pls.GetNextString();
    //			j=pls.GetNextByte();
    //			if(j!=-1)phead.next=this.LoadBase(j,pls);
    //			bs=phead;
    			break;
    		case 2://分支
    			pbranch=bs;
    			for(i=0;i<pbranch.iCount;i++)
    			{
    				if(pbranch.next[i]!=null)
    				{
    					if(this.ProcBase(pbranch.next[i]))return true;
    				}
    			}
    			break;
    		case 3://条件，需要回调
    			prequirement=bs;
    			if(this.procmap.RequirementCheck(prequirement))
    			{//满足条件，往下执行
    				if(prequirement.next!=null)return this.ProcBase(prequirement.next);
    			}
    			if(true)return false;
    			//break;
    		case 4:
    			pselect=bs;
    			if(VisualBlock.iLastProcBase>=0 && VisualBlock.iLastProcBase<this.MAXVISUALBLOCK && this.vbs[VisualBlock.iLastProcBase]!=null)this.mapdialog.InitDialog(pselect,this.vbs[VisualBlock.iLastProcBase].sNpcName);
    			else this.mapdialog.InitDialog(pselect,"");
    			//打开对话框，停止行走
    			GmMe$1.me.ChangeStat("站立");
    			SteeringWheel.sw.bLocked=false;
    			if(true)return true;
    			//break;
    		case 5://事件
    			pevent=bs;
    			this.procmap.ProcEvent(pevent);
    			if(pevent.next!=null)return this.ProcBase(pevent.next);
    			else return true;
    //			break;
    		}
    		return false;
    	}
    	SetTalkingNpc( npcid)
    	{
    		for(var i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]!=null)
    			{
    				if(this.vbs[i].bCurrentBlock)continue;
    				if(this.vbs[i].iNpcId==npcid)
    				{
    					VisualBlock.iLastProcBase=i;
    					return;
    				}
    			}
    		}
    	}
    //	public boolean bFaceToFace=false;
    	 CheckNow( x, y)
    	{
    		var i,j,k,r;
    		if(VisualBlock.iLastProcBase!=-1)
    		{
    //			GmPlay.sop("VisualBlock.iLastProcBase="+VisualBlock.iLastProcBase);
    			if(this.vbs[VisualBlock.iLastProcBase].sAniName=="传送点")r=30;
    			else r=60;
    			if(VisualBlock.bInCircle(x,y,this.vbs[VisualBlock.iLastProcBase].iX,this.vbs[VisualBlock.iLastProcBase].iY,r))return true;
    			VisualBlock.iLastProcBase=-1;
    			this.mapdialog.bDialoging=false;
    		}
    		
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]!=null)
    			{
    //				GmPlay.sop("Checking Now");
    				//半径重新计算
    				if(!this.vbs[i].bCurrentBlock && (parseInt(this.vbs[i].iAnimaType/100000)==3 || parseInt(this.vbs[i].iAnimaType/100000)==4))r=30;//植物
    				else if(this.vbs[i].sAniName=="传送点")r=30;
    				else r=60;
    				if(VisualBlock.bInCircle(x,y,this.vbs[i].iX,this.vbs[i].iY,r))
    				{
    					if(VisualBlock.iLastProcBase==i)continue;//防止反复触发
    //					if(this.iGoToNpcId>=0 && this.iGoToNpcId!=i && this.vbs[i].iNpcId!=-1)continue;
    					//GmPlay.sop("flag="+this.iGoToNpcFlag+",id="+this.iGoToNpcId);
    					if(MyTeam$1.bInTeam() && !MyTeam$1.bTeamLeader() && !MyTeam$1.bAway())
    					{//在队伍中，自己不是队长，不在暂离状态
    						continue;
    					}
    					if(this.vbs[i].sAniName!="传送点")
    					{
    						if(this.iGoToNpcFlag>=0 && this.iGoToNpcFlag!=i)continue;
    						if(this.iGoToNpcId>=0 && this.iGoToNpcId!=this.vbs[i].iNpcId)continue;
    					}
    					VisualBlock.iLastProcBase=i;
    					VisualBlock.talkingnpc=this.vbs[i];
    					
    					GmPlay$1.sop(""+this.vbs[i].sNpcName+"============"+this.vbs[i].iNpcId);
    					if(this.vbs[i].sNpcName.length>0)
    					{//npc面向主角，根据主角位置
    						if(this.vbs[i].iStandFlag>=0)
    						{
    							this.bFaceToFace=true;
    							this.vbs[i].ResetStandAnima(x,y);
    						}
    						if(parseInt(this.vbs[i].iAnimaType/100000)==2)
    						{//怪物
    							k=parseInt(this.vbs[i].iAnimaType/10000)%10;//是否变异
    							this.vbs[i].sAniName="站立_"+this.vbs[i].FaceTo(this.vbs[i].GetFace4(x,y));
    							GmPlay$1.xani_pets[this.vbs[i].iWeapId].InitAnimaWithName((k==0?"":"变异_")+this.vbs[i].sAniName,this.vbs[i].aa_body);
    							
    							this.bFaceToFace=true;
    						}
    					}
    					
    					if(this.vbs[i].bCurrentBlock && MyAI.gi().iLogicStat==101 && MyAI.gi().iLogic_npc1==this.vbs[i].iNpcId)continue;
    					/////////////////////////////////////////////////////////////////////////////1本地npc对应剧情任务，2特殊任务对应npc，3默认满足条件后
    					if(this.vbs[i].iNpcId>=0)this.newdialog.Open(this.vbs[i]);
    					else
    					{//直接执行
    						for(j=0;j<_VISUALBLOCK.MAXBASESEQUENCE;j++)
    						{
    							if(this.vbs[i].pss[j]!=null)
    							{
    								if(this.ProcBase(this.vbs[i].pss[j]))return true;
    							}
    						}
    					}


    ////					if()
    //					//和npc碰撞，检测是否完成某些任务
    //					//GmPlay.sop("npcid="+this.vbs[i].iNpcId);
    //					if(this.vbs[i].iNpcId>=0 && this.vbs[i].bCurrentBlock)MyMission.m.CheckMission1(this.vbs[i].iNpcId);
    //					//GmPlay.sop("yyyyyyyyyy"+this.vbs[i].sNpcName+this.vbs[i].iStandFlag);
    //
    //					for(j=0;j<_VISUALBLOCK.MAXBASESEQUENCE;j++)
    //					{
    //						if(this.vbs[i].pss[j]!=null)
    //						{
    //							if(this.ProcBase(this.vbs[i].pss[j]))return true;
    ////							if(this.procmap.bMapChanged)
    ////							{
    ////								VisualBlock.iLastProcBase=-1;
    ////								this.procmap.bMapChanged=false;
    ////								return true;
    ////							}
    //						}
    //					}
    //					//碰撞，打开选择页面
    					return true;
    				}
    			}
    		}

    		return false;
    	}


    	 bOnNpc( x, y)
    	{
    		var i;
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]!=null)
    			{
    				if(this.vbs[i].sNpcName.length>0)//是npc
    				{
    //					if(VisualBlock.bInCircle(x,y,this.vbs[i].iX,this.vbs[i].iY,this.vbs[i].iR))
    					if(this.vbs[i].aa_body.bIn(this.vbs[i].iX, this.vbs[i].iY, x, y))
    					{
    						return true;
    					}
    				}
    			}
    		}
    		return false;
    	}
    	 GoToNpc_byid( nid)
    	{
    		var i;
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]!=null)
    			{
    				if(this.vbs[i].sNpcName.length>0)//是npc
    				{
    //					if(VisualBlock.bInCircle(x,y,this.vbs[i].iX,this.vbs[i].iY,this.vbs[i].iR))
    					if(this.vbs[i].iNpcId==nid)
    					{
    //						GmPlay.sop("x="+x+",y="+y+",vbx"+this.vbs[i].iX+"vby"+this.vbs[i].iY);
    						this.iNpcX=this.vbs[i].iX;
    						this.iNpcY=this.vbs[i].iY;
    						GmPlay$1.sop("go to npc");
    						this.iGoToNpcFlag=this.vbs[i].iDownFlag;
    						this.iLockNpcId=this.vbs[i].iNpcId;
    						if(VisualBlock.iLastProcBase==i)VisualBlock.iLastProcBase=-1;
    						return;
    					}
    				}
    			}
    		}
    	}
    	GoToNpc( x, y)
    	{
    		var i;
    		for(i=0;i<this.MAXVISUALBLOCK;i++)
    		{
    			if(this.vbs[i]!=null)
    			{
    				if(this.vbs[i].sNpcName.length>0)//是npc
    				{
    //					if(VisualBlock.bInCircle(x,y,this.vbs[i].iX,this.vbs[i].iY,this.vbs[i].iR))
    					if(this.vbs[i].aa_body.bIn(this.vbs[i].iX, this.vbs[i].iY, x, y))
    					{
    //						GmPlay.sop("x="+x+",y="+y+",vbx"+this.vbs[i].iX+"vby"+this.vbs[i].iY);
    						this.iNpcX=this.vbs[i].iX;
    						this.iNpcY=this.vbs[i].iY;
    						GmPlay$1.sop("go to npc");
    						this.iGoToNpcFlag=this.vbs[i].iDownFlag;
    						this.iLockNpcId=this.vbs[i].iNpcId;
    						if(VisualBlock.iLastProcBase==i)VisualBlock.iLastProcBase=-1;
    						return true;
    					}
    				}
    			}
    		}
    		return false;
    	}
    }

    VisualBlock.talkingnpc=null;
    VisualBlock.iLastProcBase=-1;
    VisualBlock.pvb=null;
    VisualBlock.bInCircle=function( x, y, rx, ry, rr)
    {
        rx=rx-x;
        ry=ry-y;
        if(rx*rx+ry*ry>rr*rr)return false;
        else return true;
    };

    //右下角快捷使用物品
    class _GOODSLIST
    {/*
    	public int iStat;//0无，1未初始化状态，2初始化等待状态，3合并状态，4移动到右下角状态，5等待被点击使用状态
    	public int this.iX,this.iY;
    	public int iGid;//id
    	public int iTid;//类型
    	public int iDelay;
    	public int iDX,iDY;*/

    	constructor()
    	{
    		this.iStat=0;
    	}
    	copyfrom( p)
    	{
    		this.iStat=p.iStat;
    		this.iX=p.iX;
    		this.iY=p.iY;
    		this.iDX=p.iDX;
    		this.iDY=p.iDY;
    		this.iGid=p.iGid;
    		this.iTid=p.iTid;
    	}
    }

    class FastGoods {
    	
    	constructor()
    	{
    		var i;
    		this.glist=new Array(FastGoods.MAXCOUNT);//
    		for(i=0;i<FastGoods.MAXCOUNT;i++)
    		{
    			this.glist[i]=new _GOODSLIST();
    		}
    		this.iListPoint=0;
    		this.btn_use=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_use.InitButton("按钮1_110");
    		this.btn_use.sName="使用";
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");

    		this.bTouch=false;
    		this.bShowDetail=false;
    	}
    	
    	PushGoods( pls)
    	{
    		if(MyAI.gi().iLogicStat>0)return;//正在进行AI不弹出
    		if(this.iListPoint>=FastGoods.MAXCOUNT)return;
    		this.glist[this.iListPoint].iStat=1;
    		this.glist[this.iListPoint].iGid=pls.GetNextInt();
    		this.glist[this.iListPoint].iTid=pls.GetNextShort();
    		this.iListPoint++;
    		
    		this.iX=GmConfig$1.SCRW-230-54;
    		this.iY=GmConfig$1.SCRH-310-30;
    		this.iW=188;
    		this.iH=256;
    		this.iGx=this.iX+54;
    		this.iGy=this.iY+30;
    	}
    	RemoveGoods( i)
    	{
    		for(;i<this.iListPoint-1;i++)
    		{
    			this.glist[i].copyfrom(this.glist[i+1]);
    		}
    		this.iListPoint--;
    	}
    	CheckGoods()
    	{//检查堆栈中物品，不在背包中的话，取消掉
    		var i,j;
    		for(i=0;i<this.iListPoint;i++)
    		{
    			for(j=0;j<20;j++)
    			{
    				if(MyGoods.gi().goods[2][j].iGid<=0)continue;
    				if(MyGoods.gi().goods[2][j].iGid==this.glist[i].iGid)break;
    			}
    			if(j>=20)
    			{
    //				GmPlay.sop("jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj");
    				this.RemoveGoods(i);
    			}
    		}
    	}
    	FindGoods( gid)
    	{
    		var j;
    		for(j=0;j<20;j++)
    		{
    			if(MyGoods.gi().goods[2][j].iGid<=0)continue;
    			if(MyGoods.gi().goods[2][j].iGid==gid)return MyGoods.gi().goods[2][j];
    		}
    		return null;
    	}
    	Draw()
    	{
    		this.bTouch=false;
    		if(GmMe$1.me.rbs.iLev>30)return;
    		if(XFight.bFighting)return;
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return;
    		if(this.iListPoint<=0)return;
    		this.CheckGoods();
    		if(this.iListPoint<=0)return;
    		
    		var i,j,k;
    		var stat1=0,stat2=0;
    		for(i=0;i<this.iListPoint;i++)
    		{
    			if(this.glist[i].iStat==1)stat1++;
    			if(this.glist[i].iStat==2)stat2++;
    		}
    	
    		j=GmConfig$1.SCRW/2-100+stat1*50;
    		k=GmConfig$1.SCRW/2-20+stat1*10;
    //		for(i=this.iListPoint-1;i>=0;i--)
    		for(i=0;i<this.iListPoint;i++)
    		{
    			switch(this.glist[i].iStat)
    			{
    			case 1://未初始化，进行初始化
    				this.glist[i].iStat=2;
    				this.glist[i].iX=j+10;
    				this.glist[i].iDX=k;
    				this.glist[i].iY=GmConfig$1.SCRH/2-40;
    				this.glist[i].iDY=this.glist[i].iY;
    				this.glist[i].iDelay=10;
    				j-=100;
    				k-=20;
    				break;
    			case 2://初始化完后等待
    				this.glist[i].iDelay--;
    				if(this.glist[i].iDelay<=0)
    				{
    					if(stat2<=1)
    					{//只有一个，直接移动
    						this.glist[i].iDelay=10;
    						this.glist[i].iStat=4;
    						if(XStat$1.gi().iXStat==XStat$1.GS_GAMEING)
    						{
    							this.glist[i].iDX=GmConfig$1.SCRW-230;
    							this.glist[i].iDY=GmConfig$1.SCRH-310;
    							this.iMoveType=0;
    						}
    						else
    						{
    							this.glist[i].iDX=GmConfig$1.SCRW-100;
    							this.glist[i].iDY=GmConfig$1.SCRH-100;
    							this.iMoveType=1;
    							this.fMoveScal=1;
    						}
    					}
    					else
    					{
    						this.glist[i].iDelay=10;
    						this.glist[i].iStat=3;
    					}
    				}
    				GmPlay$1.xani_nui3.DrawAnima(this.glist[i].iX,this.glist[i].iY, "物品格子", 0);
    				GmPlay$1.xani_ngoods.DrawAnima_aa(this.glist[i].iX,this.glist[i].iY, GmPlay$1.de_goods.strValue(this.glist[i].iTid, 0, 10), 0);
    				break;
    			case 3://向中心位置移动
    				this.glist[i].iDelay--;
    				if(this.glist[i].iDelay<=0)
    				{//
    					this.glist[i].iDelay=10;
    					this.glist[i].iStat=4;
    					if(XStat$1.gi().iXStat==XStat$1.GS_GAMEING)
    					{
    						this.glist[i].iDX=GmConfig$1.SCRW-230;
    						this.glist[i].iDY=GmConfig$1.SCRH-310;
    						this.iMoveType=0;
    					}
    					else
    					{
    						this.glist[i].iDX=GmConfig$1.SCRW-100;
    						this.glist[i].iDY=GmConfig$1.SCRH-100;
    						this.iMoveType=1;
    						this.fMoveScal=1;
    					}
    				}
    				else
    				{//移动
    					this.glist[i].iX+=(this.glist[i].iDX-this.glist[i].iX)/this.glist[i].iDelay;
    					this.glist[i].iY+=(this.glist[i].iDY-this.glist[i].iY)/this.glist[i].iDelay;
    				}
    				GmPlay$1.xani_nui3.DrawAnima(this.glist[i].iX,this.glist[i].iY, "物品格子", 0);
    				GmPlay$1.xani_ngoods.DrawAnima_aa(this.glist[i].iX,this.glist[i].iY, GmPlay$1.de_goods.strValue(this.glist[i].iTid, 0, 10), 0);
    				break;
    			case 4://移动到右下角
    				this.glist[i].iDelay--;
    				if(this.glist[i].iDelay<=0)
    				{//
    					this.glist[i].iStat=5;
    					this.glist[i].iX=this.glist[i].iDX;
    					this.glist[i].iY=this.glist[i].iDY;
    				}
    				else
    				{
    					this.glist[i].iX+=(this.glist[i].iDX-this.glist[i].iX)/this.glist[i].iDelay;
    					this.glist[i].iY+=(this.glist[i].iDY-this.glist[i].iY)/this.glist[i].iDelay;
    				}
    				if(this.iMoveType==0)
    				{
    					GmPlay$1.xani_nui3.DrawAnima(this.glist[i].iX,this.glist[i].iY, "物品格子", 0);
    					GmPlay$1.xani_ngoods.DrawAnima_aa(this.glist[i].iX,this.glist[i].iY, GmPlay$1.de_goods.strValue(this.glist[i].iTid, 0, 10), 0);
    				}
    				else
    				{
    					GmPlay$1.xani_nui3.DrawAnimaEx(this.glist[i].iX,this.glist[i].iY, "物品格子", 0,101,this.fMoveScal,this.fMoveScal,0,0,0);
    					GmPlay$1.xani_ngoods.DrawAnimaEx(this.glist[i].iX,this.glist[i].iY, GmPlay$1.de_goods.strValue(this.glist[i].iTid, 0, 10), 0,101,this.fMoveScal,this.fMoveScal,0,0,0);
    					this.fMoveScal*=0.9;
    					GmPlay$1.sop("sdfsdf");
    				}
    				break;
    			case 5://等待点击使用，画框体，按钮，图标
    				if(XStat$1.gi().iXStat!=XStat$1.GS_GAMEING)break;
    				if(XFight.bFighting)break;
    				j=GmConfig$1.SCRW-230-54;
    				k=GmConfig$1.SCRH-310-30;
    				GmPlay$1.xani_nui5.DrawAnima(j,k, "快捷使用物品大框", 0);
    				GmPlay$1.xani_nui3.DrawAnima(j+54,k+30, "物品格子", 0);
    				GmPlay$1.xani_ngoods.DrawAnima_aa(j+54,k+30, GmPlay$1.de_goods.strValue(this.glist[i].iTid, 0, 10), 0);
    				M3DFast$1.gi().DrawTextEx(j+54+40,k+30+90, GmPlay$1.de_goods.strValue(this.glist[i].iTid, 0, 4), 0xffffffff, 25, 101, 1, 1, 0, -2, 0);
    				this.btn_use.Move(j+188/2-110/2, k+30+90+50, 110,52);
    				this.btn_use.Draw();
    				this.btn_close.Move(j+188-35,k-25, 60, 60);
    				this.btn_close.Draw();
    				if(this.bShowDetail && i==this.iListPoint-1)
    				{
    					GoodsDraw.new_DrawDetail(this.FindGoods(this.glist[i].iGid), this.iGx, this.iGy,0);
    				}
    				this.bTouch=true;
    				break;
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(GmMe$1.me.rbs.iLev>30)return false;
    		if(XFight.bFighting)return false;
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return false;
    		if(!this.bTouch)return false;
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				if(this.iListPoint>0)this.iListPoint--;
    			}
    			return true;
    		}
    		if(this.iListPoint>0)
    		{
    			this.bShowDetail=false;
    			if((msg==1 || msg==2) && XDefine$1.bInRect(x, y, this.iGx, this.iGy, 80, 80))this.bShowDetail=true;
    			
    			if(this.btn_use.ProcTouch(msg, x, y))
    			{
    				if(this.btn_use.bCheck())
    				{//使用物品
    					for(var i=0;i<20;i++)
    					{
    						if(MyGoods.gi().goods[2][i].iGid<=0)continue;
    						if(MyGoods.gi().goods[2][i].iGid==this.glist[this.iListPoint-1].iGid)
    						{
    							EasyMessage.easymsg.snapatt();
    							this.UseGoods(MyGoods.gi().goods[2][i]);
    							EasyMessage.easymsg.calcattchanged();
    							break;
    						}
    					}
    					this.iListPoint--;
    				}
    			}
    		}
    		if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))return true;

    		return false;
    	}
    	
    	MoveGoods( lockgoods, destgoods)
    	{
    		var i,j;
    		if(destgoods.iOid==1)
    		{//目标位置是装备位，判断是否满足穿戴条件
    			if(!MyGoods.bCheckEquipment(lockgoods,destgoods.iPos))//可佩戴，移动或交换
    			{//检测失败
    				return;
    			}
    		}
    		if(lockgoods.iOid==1 && destgoods.iGid!=-1)
    		{//装备位和背包交换
    			if(!MyGoods.bCheckEquipment(destgoods,lockgoods.iPos))//可佩戴，移动或交换
    			{//检测失败
    				return;
    			}
    		}
    		if(lockgoods.iTid==318 || lockgoods.iTid==319 || lockgoods.iTid==320 || lockgoods.iTid==321 || lockgoods.iTid==322 || lockgoods.iTid==323)
    		{
    			if(lockgoods.iOid==2 && destgoods.iOid!=2)
    			{
    				FrameMessage.fm.Open("礼包不能移动到行囊和仓库");
    				return;
    			}
    		}
    		GmProtocol$1.gi().s_MoveGoods(lockgoods.iGid, lockgoods.iOid, lockgoods.iPos, destgoods.iGid, destgoods.iOid, destgoods.iPos);
    		if(destgoods.iGid==-1)
    		{//移动物品
    			destgoods.copyfrom(lockgoods);
    			lockgoods.iGid=-1;
    		}
    		else
    		{//交换/叠加物品
    			i=GmPlay$1.de_goods.intValue(lockgoods.iTid, 0, 28);
    			if(lockgoods.iTid==destgoods.iTid && i>1)
    			{
    				if(destgoods.iCount>=i)
    				{//目标物品满，不改变
    //					for(int z=0;z<100;z++)GmPlay.sop("zzzzzzzzzzzzzzz");
    				}
    				else if(lockgoods.iCount+destgoods.iCount<=i)
    				{
    					destgoods.iCount+=lockgoods.iCount;
    					lockgoods.iGid=-1;
    				}
    				else
    				{
    					j=lockgoods.iCount+destgoods.iCount;
    					destgoods.iCount=i;
    					lockgoods.iCount=j-i;
    				}
    			}
    			else
    			{
    				var swapgoods=new Goods();
    				swapgoods.copyfrom(destgoods);
    				destgoods.copyfrom(lockgoods);
    				lockgoods.copyfrom(swapgoods);
    			}
    		}
    		if(lockgoods.iOid==1 || destgoods.iOid==1)
    		{//装备更换，重新计算人物属性
    			if((lockgoods.iOid==1 && lockgoods.iPos==2) ||
    					(destgoods.iOid==1 && destgoods.iPos==2))
    			{//是武器，更换效果
    				GmMe$1.me.bwc=true;
    //				FreshWeapon();
    			}
    			GmMe$1.me.CalcFightAtt();
    		}
    	}
    	UseGoods( lockgoods)
    	{//检测物品类型，根据物品类型，来判断是装备，还是使用药品，还是其他
    		if(lockgoods==null)return;
    		var i,type;
    		if(lockgoods.iOid!=2)return;//只有在背包里的物品才能使用
    		type=GmPlay$1.de_goods.intValue(lockgoods.iTid, -1, 16);//装备
    		if(type!=-1)
    		{//使用装备，根据部位穿戴
    			this.MoveGoods(lockgoods,MyGoods.gi().goods[1][type]);
    			return;
    		}
    		type=GmPlay$1.de_goods.intValue(lockgoods.iTid, -1, 27);
    		if(type!=-1)
    		{//草药,可在战斗和pk中使用
    			i=0;
    			var usecount=1;
    			var restorehp=GmPlay$1.de_goods.intValue(lockgoods.iTid, 0, 1);
    			var restoremp=GmPlay$1.de_goods.intValue(lockgoods.iTid, 0, 2);
    			while((restorehp!=-1 && GmMe$1.me.rbs.iHp< GmMe$1.me.rbs.iMaxHp) ||
    					(restoremp!=-1 &&  GmMe$1.me.rbs.iMp< GmMe$1.me.rbs.iMaxMp))
    				{//可加血，而且血不满，可加蓝，而且蓝不满
    					if(usecount<=0)break;//符合使用数量
    					if(restorehp!=-1) GmMe$1.me.rbs.iHp+=restorehp;
    					if(restoremp!=-1) GmMe$1.me.rbs.iMp+=restoremp;
    					usecount--;
    					i++;
    				}
    			if(type==3)
    			{
    				i=1;
    			}
    			if(i<=0 && type<3)
    			{
    				EasyMessage.easymsg.AddMessage("您的状态很好，不需要恢复");
    			}
    			else
    			{
    				GmProtocol$1.gi().s_UseGoods(lockgoods.iGid, i,"");
    				lockgoods.iCount-=i;
    				if(lockgoods.iCount<=0)
    				{
    					lockgoods.iGid=-1;
    					lockgoods=null;
    				}
    				
    				GmMe$1.me.CalcFightAtt();
    			}
    			return;
    		}
    		type=GmPlay$1.de_goods.intValue(lockgoods.iTid, -1, 33);
    		if(type!=-1)
    		{
    			GmProtocol$1.gi().s_UseGoods(lockgoods.iGid, 1,"");//if(lockgoods.iTid==191)
    			return;
    		}
    		type=GmPlay$1.de_goods.intValue(lockgoods.iTid, -1, 30);//道具
    		if(type!=-1)
    		{
    			if(type==1)
    			{//漫游中使用
    				if(lockgoods.iTid==195 || lockgoods.iTid==328 || lockgoods.iTid==329 || lockgoods.iTid==330 || lockgoods.iTid==331)
    				{//丹方
    					if(GmMe$1.me.rbs.iGovSkill[1]>0)
    					{//炼丹
    //						XStat.gi().PopStat(1);
    						LianDanShu.Open(lockgoods, null);
    					}
    					else EasyMessage.easymsg.AddMessage("还未学习炼丹术");
    				}
    				else if(lockgoods.iTid>=342 && lockgoods.iTid<=346)
    				{
    					if(GmMe$1.me.rbs.iGovSkill[1]>0)
    					{//炼丹
    						XStat$1.gi().PopStat(1);
    						LianDanShu.Open(null, lockgoods);
    					}
    					else EasyMessage.easymsg.AddMessage("还未学习炼丹术");
    				}
    				else if(lockgoods.iTid==160 || lockgoods.iTid==161)
    				{//仙灵果洗宝宝
    					var pf=PetsFrame.Open();
    					if(pf!=null)pf.iPage=1;
    //					WashPet.Open(lockgoods);
    				}
    				else if(lockgoods.iTid==122)
    				{//小喇叭，输入聊天文字
    					SmallSpeaker.Open(lockgoods);
    				}
    				else
    				{
    					GmProtocol$1.gi().s_UseGoods(lockgoods.iGid, 1,"");
    					if(lockgoods.iTid==119)
    					{//看是否已经定过位置
    //						XStat.gi().PopStat(1);//使用了传送符，关闭显示框
    						if(lockgoods.iAtts[0]!=0)MapManager.gi().iMapChangeing=100;
    					}
    				}
    			}
    			else EasyMessage.easymsg.AddMessage("不能直接使用");
    			return;
    		}
    		type=GmPlay$1.de_goods.intValue(lockgoods.iTid, -1, 31);//道具
    		if(type!=-1)
    		{//材料
    			EasyMessage.easymsg.AddMessage("不能直接使用");
    			return;
    		}
    		type=GmPlay$1.de_goods.intValue(lockgoods.iTid, -1, 34);
    		if(type!=-1)
    		{//烹饪
    			if(type!=1 && type!=3)
    			{
    				EasyMessage.easymsg.AddMessage("不能直接使用");
    				return;
    			}
    			GmProtocol$1.gi().s_UseGoods(lockgoods.iGid, 1,"");
    			switch(type)
    			{
    			case 197://艾窝窝
    //				s+="#e00ff00增加宠物寿命=品质*2，有几率被噎住降低资质";
    				break;
    			case 198://三丁包子
    				//漫游恢复
    //				s+="#e00ff00使用后增加愤怒=15，只能在漫游中使用";
    				break;
    			case 199://双塔鱼
    				break;
    			case 200://粉蒸牛肉
    //				s+="#e00ff00增加宠物寿命=品质/2";
    				break;
    			case 201://赖汤圆
    	//			s+="#e00ff00增加宠物寿命=品质*2，有几率被噎住降低资质";
    				break;
    			case 202://臭豆腐
    	//			s+="#e00ff00使用后增加愤怒=15，只能在战斗中使用";
    				break;
    			case 203://竹简饭
    	//			s+="#e00ff00使用后增加愤怒=品质/2，只能在战斗中使用";
    				break;
    			case 204://清汤鱼圆
    	//			s+="#e00ff00使用后增加愤怒=品质，附加中毒状态，只能在战斗中使用";
    				break;
    			case 205://蛇胆酒
    	//			s+="#e00ff00使用后增加愤怒=品质*1.5，减少防御=品质*1，只能在战斗中使用";
    				break;
    			case 206://烤肉
    	//			s+="#e00ff00使用后增加愤怒=品质/2，只能在漫游中使用";
    				break;
    			}
    			return;
    		}
    		EasyMessage.easymsg.AddMessage("未知物品使用失败");
    	}
    }
    FastGoods.MAXCOUNT=32;
    FastGoods.fg=null;
    FastGoods.gi=function()
    {
    	if(FastGoods.fg==null)FastGoods.fg=new FastGoods();
    	return FastGoods.fg;
    };

    class NpcShop {
    	
    	constructor()
    	{
    		var i;
    		this.price=new Int32Array(20);//
    		this.goods=new Array(20);//
    		
    		for(i=0;i<20;i++){
    			this.goods[i]=new Goods();
    		}
    	}
    	
    	Open()
    	{
    		if(XStat$1.gi().iXStat!=XStat$1.GS_SHOPFRAME)XStat$1.gi().PushStat(XStat$1.GS_SHOPFRAME);
    	}
    	
    	Draw()
    	{
    		console.log('商店');
    	}
    	ProcTouch()
    	{
    		return false;
    	}
    	FreshGoods( pls)
    	{//刷新商店物品
    		var i,j,k,m;
    		j=0;
    		this.iShopId=pls.GetNextInt();
    		this.sShopName=pls.GetNextString();
    		for(i=0;i<20;i++)this.goods[i].iGid=-1;
    		while(true)
    		{
    			i=pls.GetNextInt();
    			if(i==-1)break;
    			this.goods[j].iGid=10;
    			this.goods[j].iTid=i;
    			this.goods[j].iCount=pls.GetNextInt();
    			this.goods[j].iPos=j;
    			this.price[j]=pls.GetNextInt();
    			this.goods[j].iAtts[0]=pls.GetNextInt();
    			GmPlay$1.xani_ngoods.InitAnimaWithName(GmPlay$1.de_goods.strValue(i, 0, 10), this.goods[j].aa);
    			
    			k=GmPlay$1.de_goods.intValue(i,0,16);
    			if(k>=0)
    			{//是否为装备，是的话根据等级，设置a5耐久度
    				k=GmPlay$1.de_goods.intValue(i,0,9);
    				if(k>=0 && k<=100)
    				{//得到等级j
    					m=100+k*5;
    					this.goods[j].iAtts[5]=m*100000+m*20;//上限和当前
    				}
    			}
    			
    			j++;
    		}
    		this.iSGCount=j;
    		this.iUseType=pls.GetNextInt();
    		NpcShop._USETYPE=pls.GetNextString();
    		if(this.iUseType>=0 && this.iUseType<=5)this.Open();
    	}
    }
    NpcShop._USETYPE;
    NpcShop.ns=new NpcShop();

    class NpcShopFrame extends BaseClass{
    	constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=730;
    		this.iH=345+60;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.lockgoods=null;

    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_buy=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_buy.InitButton("按钮1_110");
    		this.btn_buy.sName="购买";
    		this.btn_buy.Move(this.iX+this.iW-110-30,this.iY+this.iH-52-30,110,52);
    		
    		this.in_count=new XInputNumber(GmPlay$1.xani_nui3);
    		this.in_count.iNumber=1;

    		this.cityshop=[3,1,4,2,5,9,6,10,7,11];
    	}

    	Draw()
    	{
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		this.btn_close.Draw();
    		
    		this.pm3f.DrawTextEx(this.iX+430+30+15, this.iY+35, NpcShop.ns.sShopName, 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		
    		GoodsDraw.new_DrawGoods(this.iX+30, this.iY+30, NpcShop.ns.goods, null, null);
    		
    		if(this.lockgoods!=null)
    		{
    			GoodsDraw.new_DrawRect(this.iX+30, this.iY+30, NpcShop.ns.goods,this.lockgoods, 0);
    			this.pm3f.DrawTextEx(this.iX+430+30+15, this.iY+90+30*0, "名称 "+GmPlay$1.de_goods.strValue(this.lockgoods.iTid, 0, 4), 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    			this.pm3f.DrawTextEx(this.iX+430+30+15, this.iY+90+30*1, "单价 "+NpcShop.ns.price[this.lockgoods.iPos]+NpcShop._USETYPE, 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    			
    			this.pm3f.DrawTextEx(this.iX+430+30+15, this.iY+80+30*3, "数量 ", 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    			this.in_count.Move(this.iX+430+30+15+60, this.iY+80+30*3+25/2-52/2, 100);
    			this.in_count.Draw();
    			
    			this.pm3f.DrawTextEx(this.iX+430+30+15, this.iY+70+30*5, "总价 "+NpcShop.ns.price[this.lockgoods.iPos]*this.in_count.iNumber+NpcShop._USETYPE, 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    			if(NpcShop.ns.iUseType==0)
    			{
    				this.pm3f.DrawTextEx(this.iX+430+30+15, this.iY+70+30*6, "铜币 "+GmMe$1.me.rbs.iMoney, 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    				if(GmMe$1.me.rbs.iLev<40 && this.bCityShop(NpcShop.ns.iShopId))this.pm3f.DrawTextEx(this.iX+430+30+15, this.iY+70+30*7, "储备 "+GmMe$1.me.rbs.iReserve, 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    			}
    			else if(NpcShop.ns.iUseType==1)this.pm3f.DrawTextEx(this.iX+430+30+15, this.iY+70+30*6, "现有 "+(GmMe$1.me.iFlag[48]/1000)+NpcShop._USETYPE, 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    			else if(NpcShop.ns.iUseType==2)this.pm3f.DrawTextEx(this.iX+430+30+15, this.iY+70+30*6, "现有 "+GmMe$1.me.rbs.iInGot+NpcShop._USETYPE, 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    		}
    		this.btn_buy.Draw();
    		
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	
    	 bCityShop( sid)
    	{
    		for(var i=0;i<this.cityshop.length;i++)
    		{
    			if(this.cityshop[i]==sid)return true;
    		}
    		return false;
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.lockgoods!=null)
    		{
    			if(this.in_count.ProcTouch(msg, x, y))
    			{
    				return true;
    			}
    			if(this.btn_buy.ProcTouch(msg, x, y))
    			{
    				if(this.btn_buy.bCheck())
    				{
    					if(this.in_count.iNumber<=0)EasyMessage.easymsg.AddMessage("购买数量不能为0");
    					else if(this.in_count.iNumber>this.lockgoods.iCount)EasyMessage.easymsg.AddMessage("购买数量超过上限");
    					else if(NpcShop.ns.iUseType==0)
    					{
    						var i=GmMe$1.me.rbs.iMoney;
    						
    						if(GmMe$1.me.rbs.iLev<40 && this.bCityShop(NpcShop.ns.iShopId))
    						{//部分商店40级以下可用绑铜代替铜币
    							i+=GmMe$1.me.rbs.iReserve;
    						}
    						if(i<NpcShop.ns.price[this.lockgoods.iPos]*this.in_count.iNumber)EasyMessage.easymsg.AddMessage("铜币不足");
    						else GmProtocol$1.gi().s_NpcShopBuy(NpcShop.ns.iShopId, this.lockgoods.iTid, this.in_count.iNumber);
    					}
    					else GmProtocol$1.gi().s_NpcShopBuy(NpcShop.ns.iShopId, this.lockgoods.iTid, this.in_count.iNumber);
    				}
    				return true;
    			}
    		}

    		var g;
    		g=GoodsDraw.new_LockGoods(x,y,this.iX+30, this.iY+30, NpcShop.ns.goods,msg);
    		GoodsDraw.NoMove();
    		if(msg==3 && g!=null)
    		{//点击物品，选中准备购买
    			this._lockgoods(g);
    //			if(iNeedCount==0)iNeedCount=1;
    //			else if(iNeedCount==1)iNeedCount=10;
    //			else if(iNeedCount==10)iNeedCount=this.lockgoods.iCount;
    //			if(iNeedCount>this.lockgoods.iCount)iNeedCount=this.lockgoods.iCount;
    		}
    		else if(g==null)this.lockgoods=null;
    		
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return false;
    	}
    	_lockgoods( g)
    	{
    		if(g!=this.lockgoods)this.in_count.iNumber=1;
    		this.lockgoods=g;
    		var i=GmMe$1.me.rbs.iMoney/NpcShop.ns.price[this.lockgoods.iPos];
    		if(i<1)i=1;
    		if(i>this.lockgoods.iCount)i=this.lockgoods.iCount;
    		this.in_count.MinMax(1, i);
    	}
    }

    class _MAPLINK
    	{
    	/*	var iType;//0地图传送点，1npc传送，2遁地术
    		var iMapId;//目标地图id
    		var iGoid;//传送id
    		var iSx,iSy;
    		*/
    		constructor()
    		{

    		}
    		 Set( type, mid, gid, sx, sy)
    		{
    			this.iType=type;
    			this.iMapId=mid;
    			this.iGoid=gid;
    			this.iSx=sx;
    			this.iSy=sy;
    		}
    	}

    //自动寻路
    class MyAI {

    	constructor()
    	{
    		this.bFinding=false;
    		
    		this.iMapPath=new Int32Array(16);//
    		
    		this.bDown=false;

    		 this.bByNpc=false;
    		 this.bByDundi=false;
    		 this.tmp_path=new Array(128);
    		 this.last_path=new Array(128);

    		  this.iDelay=0;
    		  this.iLogicStat=0;
    		  this.iLogic_npc1,this.iLogic_npc2;
    		  this.iLogic_shop1;
    		  this.iLogic_goods1;
    		  this.iLogic_count1;
    		  this.iLogic_map1;
    		  this.iLogic_px1,this.iLogic_px2,this.iLogic_py1,this.iLogic_py2;
    	 
    		  this.sm_doing;
    	}
    	
    	InitLink()
    	{//link
    		var i,j,k,type,start,end,gid,startx,starty;
    		var maxcount=0;
    		this.iMapLink=new Array(64);//
    		for(i=0;i<64;i++)this.iMapLink[i]=new Array(32);
    		this.iMapLinkCount=new Int32Array(64);//
    		this.iMapLinkSize=0;
    		for(i=0;i<GmPlay$1.de_chuan_song.iDataCount;i++)
    		{
    //			if(GmPlay.de_chuan_song.datas[i].intValue(1)!=0)continue;//跳过npc传送
    			type=GmPlay$1.de_chuan_song.datas[i].intValue(1);//0地图，1npc
    			start=GmPlay$1.de_chuan_song.datas[i].intValue(2);//起始地图
    			end=GmPlay$1.de_chuan_song.datas[i].intValue(5);//目标地图
    			gid=GmPlay$1.de_chuan_song.datas[i].iDid;//
    			startx=GmPlay$1.de_chuan_song.datas[i].intValue(3);
    			starty=GmPlay$1.de_chuan_song.datas[i].intValue(4);
    			
    			for(j=0;j<this.iMapLinkSize;j++)
    			{
    				if(this.iMapLink[j][0].iMapId==start)
    				{
    					this.iMapLink[j][this.iMapLinkCount[j]].Set(type, end, gid,startx,starty);
    //					this.iMapLink[j][this.iMapLinkCount[j]].iMapId=end;
    					this.iMapLinkCount[j]++;
    					if(this.iMapLinkCount[j]>maxcount)maxcount=this.iMapLinkCount[j];
    					break;
    				}
    			}
    			if(j>=this.iMapLinkSize)
    			{//没有找到，新建
    //				this.iMapLink[this.iMapLinkSize]=new _MAPLINK[32];
    				for(k=0;k<32;k++)this.iMapLink[this.iMapLinkSize][k]=new _MAPLINK();
    				this.iMapLink[this.iMapLinkSize][0].Set(2, start, -1,-1,-1);
    				this.iMapLink[this.iMapLinkSize][1].Set(type, end, gid,startx,starty);
    //				this.iMapLink[this.iMapLinkSize][0].iMapId=start;
    //				this.iMapLink[this.iMapLinkSize][1].iMapId=end;
    				this.iMapLinkCount[this.iMapLinkSize]=2;
    				this.iMapLinkSize++;
    			}
    		}
    //		GmPlay.sop1("this.iMapLinkSize=="+this.iMapLinkSize+",,,,,,,,,,maxcount="+maxcount);
    //		for(i=0;i<this.iMapLinkSize;i++)
    //		{
    //			for(j=0;j<this.iMapLinkCount[i];j++)
    //			{
    //				GmPlay.sop1(""+this.iMapLink[i][j]+",");
    //			}
    //		}
    	}

    	FindNpc( npcid, bynpc, bydd)
    	{//从当前地图前往目标NPC
    		//确定目标NPC所在地图ID
    		var pnpc=GmPlay$1.de_npc.fdata(npcid);
    		if(pnpc==null)
    		{
    			EasyMessage.easymsg.AddMessage("目标NPC不能寻路");
    			return;
    		}
    		this.iDestMapId=pnpc.intValue(4);
    		this.iDestX=pnpc.intValue(5);
    		this.iDestY=pnpc.intValue(6);
    		if(this.iDestMapId<=0 || this.iDestX<=0 || this.iDestY<=0)
    		{
    			EasyMessage.easymsg.AddMessage("目标NPC不能寻路");
    			return;
    		}
    		this.bByNpc=bynpc;
    		this.bByDundi=bydd;
    		GmPlay$1.sop("start find npc = "+npcid);
    		this._findway(npcid);
    		VisualBlock.iLastProcBase=-1;
    	}
    	  FindMap( mapid, x, y, bynpc, bydd)
    	{
    		this.iDestMapId=mapid;
    		this.iDestX=x;
    		this.iDestY=y;
    		this.bByNpc=bynpc;
    		this.bByDundi=bydd;
    		return this._findway(-1);
    	}
    	_findway( npcid)
    	{
    		var i;
    		for(i=0;i<this.iMapLinkSize;i++)
    		{//找到我所在地图
    //			GmPlay.sop1(""+this.iMapLink[i][0].iMapId+"============"+MapManager.gi().iCurrentMapId);
    			if(this.iMapLink[i][0].iMapId==MapManager.gi().iCurrentMapId)break;
    		}
    		if(i>=this.iMapLinkSize)
    		{
    			EasyMessage.easymsg.AddMessage("你当前所在地图不能寻路");
    			return false;
    		}
    		MapManager.gi().vbk.iGoToNpcFlag=-1;
    		if(MapManager.gi().iCurrentMapId==this.iDestMapId)
    		{
    			this.bFinding=true;
    			this.iFindStat=0;
    			this.iFindPoint=0;
    			this.last_path[0]=new _MAPLINK();
    			this.last_path[0].Set(0, MapManager.gi().iCurrentMapId,0,0,0);
    			this.last_path[1]=new _MAPLINK();
    			this.last_path[1].Set(0, this.iDestMapId,0,this.iDestX,this.iDestY);
    			this.pathlength=2;
    			MapManager.gi().vbk.iGoToNpcId=npcid;
    			return true;
    		}
    		var oldcurrentmaplinkcount=this.iMapLinkCount[i];
    		if(this.bByDundi && GmMe$1.me.rbs.iSchoolId>0 && MyTeam$1.bNoTeam() && (!MySell.gi().bSelling))
    		{
    			this.iMapLink[i][this.iMapLinkCount[i]].Set(2, GameData$1.iSchoolMapIds[GmMe$1.me.rbs.iSchoolId], 0,0,0);
    			this.iMapLinkCount[i]++;
    		}
    		//开始扩散寻找
    		this.pathlength=999;
    		this._dig(this.iMapLink[i][0],this.iDestMapId,0);
    		if(this.pathlength<999)
    		{//找到路径，开始行走
    			this.bFinding=true;
    			this.iFindStat=0;
    			this.iFindPoint=0;
    			MapManager.gi().vbk.iGoToNpcId=npcid;
    			this.iMapLinkCount[i]=oldcurrentmaplinkcount;
    			return true;
    		}
    		else EasyMessage.easymsg.AddMessage("目标地图不能寻路");
    		this.iMapLinkCount[i]=oldcurrentmaplinkcount;
    		return false;
    	}


    	 savepath( deep)
    	{
    		var i;
    		
    		if(deep<this.pathlength)
    		{
    			for(i=0;i<deep;i++)
    			{
    				this.last_path[i]=this.tmp_path[i];
    			}
    			this.pathlength=deep;
    		}
    //		GmPlay.sop1("path-------------start----------------");
    //		for(i=0;i<deep;i++)
    //		{
    //			GmPlay.sop1(""+this.tmp_path[i]);
    //		}
    //		GmPlay.sop1("path--------------end---------------");
    	}
    	 _dig( smap, dmap, deep)
    	{
    		var i,j,k;
    		if(deep>=16)return;
    		GmPlay$1.sop("deep="+deep);
    //		GmPlay.sop1(""+smap.iMapId+"=="+deep);
    		for(i=0;i<this.iMapLinkSize;i++)
    		{
    			if(this.iMapLink[i][0].iMapId==smap.iMapId)
    			{
    				this.tmp_path[deep]=smap;
    //				for(j=1;j<this.iMapLinkCount[i];j++)
    				for(j=this.iMapLinkCount[i]-1;j>=1;j--)//从后往前，优先遁地
    				{
    					if(this.bByNpc==false && this.iMapLink[i][j].iType!=0)continue;//不能使用npc传送
    					if(this.iMapLink[i][j].iMapId==dmap)
    					{//找到，检测是否最短，返回
    						this.tmp_path[deep+1]=this.iMapLink[i][j];
    						this.savepath(deep+2);
    						return;
    					}
    					for(k=0;k<deep;k++)
    					{//查看已有链路中是否已有this.iMapLink[i][j]，如有，不深入，以免重复进入死循环
    						if(this.tmp_path[k]==this.iMapLink[i][j])break;
    					}
    					if(k>=deep && deep<this.pathlength-1)this._dig(this.iMapLink[i][j],dmap,deep+1);
    				}
    			}
    		}
    	}
    	
    	Draw()
    	{//如果有剧情，提示点击寻路/停止寻路
    //		GmPlay.sop(""+this.bFinding);
    		if(!this.bFinding)return;
    		
    		switch(this.iFindStat)
    		{
    		case 3://等待到达dest
    			if(XDefine$1.llength(GmMe$1.me.iX, GmMe$1.me.iY, this.iDestX,this.iDestY)<30)
    			{//到达
    					this.bFinding=false;
    			}
    			else if(MapDialog.md.bDialoging)this.bFinding=false;
    			else if(GmMe$1.me.sStat!="跑步")
    			{
    				if(this.dodelay())this.iFindStat=0;//走到下个地图，重新寻路
    			}
    			break;
    		case 0://看是否在目标地图，是前往目标，否前往传送点
    			if(MapManager.gi().iCurrentMapId==this.iDestMapId)
    			{//在目标地图，寻路前往目标
    				if(this.iDestX<0 || this.iDestY<0)
    				{
    					this.bFinding=false;
    				}
    				else
    				{
    					if(XDefine$1.llength(GmMe$1.me.iX, GmMe$1.me.iY, this.iDestX,this.iDestY)<30)this.bFinding=false;
    					else if(MapDialog.md.bDialoging)this.bFinding=false;
    					else
    					{
    						if(this.to_pos(this.iDestX,this.iDestY))this.iFindStat=3;
    						else this.bFinding=false;
    					}
    				}
    			}
    			else
    			{//不在目标地图，寻找传送点前往目标
    				if(MapManager.gi().iCurrentMapId==this.last_path[this.iFindPoint].iMapId)this.iFindPoint++;
    				else
    				{//从MapManager.gi().iCurrentMapId->this.last_path[this.iFindPoint]传送点行走
    					if(this.last_path[this.iFindPoint].iType==0)
    					{//走地图传送
    						this.to_pos(this.last_path[this.iFindPoint].iSx,this.last_path[this.iFindPoint].iSy);
    						this.iFindStat=1;
    					}
    					if(this.last_path[this.iFindPoint].iType==1)
    					{//npc传送，进入模式2
    						this.to_pos(this.last_path[this.iFindPoint].iSx,this.last_path[this.iFindPoint].iSy);
    						this.iFindStat=2;//
    					}
    					if(this.last_path[this.iFindPoint].iType==2)
    					{//遁地术
    						GmProtocol$1.gi().s_UseSkill(0,0,0,0,0,0,0);
    						MapManager.gi().iMapChangeing=100;
    						this.iFindStat=1;
    					}
    					this.iDelay=0;
    //					if(this.map_to_map(MapManager.gi().iCurrentMapId,this.last_path[this.iFindPoint]))this.iFindStat=1;
    //					else
    //					{
    //						EasyMessage.easymsg.AddMessage("未找到路径");
    //						this.bFinding=false;
    //					}
    				}
    			}
    			break;
    		case 1://等待切换地图
    			if(MapManager.gi().iCurrentMapId==this.last_path[this.iFindPoint].iMapId)
    			{
    				if(this.dodelay())this.iFindStat=0;//走到下个地图，重新寻路
    			}
    			else if(GmMe$1.me.sStat!="跑步" && MapManager.gi().iMapChangeing==0)
    			{//可能经过战斗，重新寻路
    				if(this.dodelay())this.iFindStat=0;//走到下个地图，重新寻路
    			}
    			//没有行走(战斗完)，重新开始寻路
    			break;
    		case 2://等待与目标距离小于30
    //			GmPlay.sop("tttt="+XDefine.llength(GmMe.me.iX, GmMe.me.iY, this.last_path[this.iFindPoint].iSx, this.last_path[this.iFindPoint].iSy));
    			if(XDefine$1.llength(GmMe$1.me.iX, GmMe$1.me.iY, this.last_path[this.iFindPoint].iSx, this.last_path[this.iFindPoint].iSy)<30)
    			{//到达，传送
    				if(this.dodelay())
    				{
    					GmProtocol$1.gi().s_ChangeMapNew(2,this.last_path[this.iFindPoint].iGoid);
    					this.iFindStat=1;
    				}
    			}
    			else if(GmMe$1.me.sStat!="跑步")
    			{
    				if(this.dodelay())this.iFindStat=0;//走到下个地图，重新寻路
    			}
    			break;
    		}
    	}//de_chuan_song
    	 dodelay()
    	{
    		this.iDelay++;
    		if(this.iDelay>=10)
    		{
    			this.iDelay=0;
    			return true;
    		}
    		return false;
    	}

    	 map_to_map( mid1, mid2)
    	{
    		var i,j,k;
    		
    		for(i=0;i<GmPlay$1.de_chuan_song.iDataCount;i++)
    		{
    			if(GmPlay$1.de_chuan_song.datas[i].intValue(1)!=0)continue;
    			if(GmPlay$1.de_chuan_song.datas[i].intValue(2)!=mid1)continue;
    			if(GmPlay$1.de_chuan_song.datas[i].intValue(5)!=mid2)continue;
    			j=GmPlay$1.de_chuan_song.datas[i].intValue(3);
    			k=GmPlay$1.de_chuan_song.datas[i].intValue(4);
    			this.to_pos(j,k);
    			break;
    		}
    		if(i>=GmPlay$1.de_chuan_song.iDataCount)return false;
    		return true;
    	}
    	 to_pos( x, y)
    	{
    		if(MySell.gi().bSelling)
    		{
    			EasyMessage.easymsg.AddMessage("摆摊中不能行走");
    		}
    		else if(MyTeam$1.bNoTeam() || MyTeam$1.bTeamLeader() || MyTeam$1.bAway())
    		{//没队伍，或是队长，才能走
    			if(MapManager.gi().mfy.findway(GmMe$1.me.iX,GmMe$1.me.iY,x,y))
    			{
    				GmPlay$1.sop("check again start");
    				if(MapManager.gi().mfy.checkagain())
    				{//前往npc
    //					MapManager.gi().vbk.iNpcX=npcs[i].MyAI.iX;
    //					MapManager.gi().vbk.iNpcY=npcs[i].MyAI.iY;
    //					MapManager.gi().vbk.iGoToNpcId=npcs[i].iDownFlag;
    					GmMe$1.me.start(MapManager.gi().mfy.iPath,MapManager.gi().mfy.iPathDeep);
    					return true;
    				}
    				else GmPlay$1.sop("check again end2");
    			}
    		}
    		return false;
    	}

    	 AILogic()
    	{
    		var i,j;
    		switch(this.iLogicStat)
    		{
    		case 0://等待
    			break;
    		case 100://自动进行特殊任务
    			if(this.sm_doing.iMPoint==50 || this.sm_doing.iMPoint==52 || this.sm_doing.iMPoint==54)
    			{//自动师门--------找到npc问好
    				for(i=0;i<this.sm_doing.iItemCount;i++)
    				{
    					if(this.sm_doing.si[i].iMType==0)
    					{//任务目标
    						if(this.sm_doing.si[i].iSType==1 || this.sm_doing.si[i].iSType==5)
    						{//找到npc                             静态npc战斗
    							this.FindNpc(this.sm_doing.si[i].iV1,true,true);
    							this.iLogicStat=0;
    							return;
    						}
    					}
    				}
    			}
    			if(this.sm_doing.iMPoint==53)
    			{
    				for(i=0;i<this.sm_doing.iItemCount;i++)
    				{
    					if(this.sm_doing.si[i].iMType==0)
    					{//任务目标
    						if(this.sm_doing.si[i].iSType==1 || this.sm_doing.si[i].iSType==4)
    						{//巡逻
    							this.iLogic_map1=this.sm_doing.si[i].iV1;
    							this.FindMap(this.sm_doing.si[i].iV1, -1, -1,true,true);
    							
    							this.iLogic_px1=-1;
    							GmProtocol$1.gi().s_SeverEvent(29, 0, this.iLogic_map1, 0, 0);
    							
    							this.iLogicStat=110;
    							return;
    						}
    					}
    				}
    			}
    			if(this.sm_doing.iMPoint==10)
    			{//押镖
    				for(i=0;i<this.sm_doing.iItemCount;i++)
    				{
    					if(this.sm_doing.si[i].iMType==0)
    					{//任务目标
    						if(this.sm_doing.si[i].iSType==0)
    						{//stype=0 找到物品 v1物品id v2物品数量 v3交给目标npcid
    							if(MyGoods.bHaveGoods(this.sm_doing.si[i].iV1, this.sm_doing.si[i].iV2))
    							{//有物品，上交
    								if(this.sm_doing.si[i].iV3==34)
    								{//回去镖头
    									if(MapManager.gi().iCurrentMapId==15)
    									{//在郢城，前往镖头位置
    										//从npc列表中找到镖头
    										var pvb=VisualBlock.pvb.FindNpcByName("程镖头");
    										if(pvb!=null)
    										{
    //											GmPlay.sop(""+pvb.MyAI.iX+"====="+pvb.MyAI.iY);
    											this.FindMap(15, pvb.iX,pvb.iY, true,false);
    											//this.to_pos(pvb.MyAI.iX,pvb.MyAI.iY);
    											MapManager.gi().vbk.iGoToNpcId=pvb.iNpcId;
    										}
    										this.iLogicStat=0;
    									}
    									else
    									{//先到郢城
    										//this.FindNpc(58,true,false);//找孙膑
    										this.FindMap(15, -1, -1, true,false);
    										MapManager.gi().vbk.iGoToNpcId=34;
    										this.iLogic_map1=15;
    										this.iLogicStat=114;
    									}
    								}
    								else
    								{//正常
    									this.FindNpc(this.sm_doing.si[i].iV3,true,false);
    									this.iLogic_npc2=this.sm_doing.si[i].iV3;
    									FastGoods.gi().iListPoint=0;
    									this.iLogicStat=0;
    								}
    								return;
    							}
    						}
    					}
    				}
    			}
    			if(this.sm_doing.iMPoint==51)
    			{//自动师门-------买东西
    //				SpecialItem si;
    				for(i=0;i<this.sm_doing.iItemCount;i++)
    				{
    					if(this.sm_doing.si[i].iMType==0)
    					{//任务目标
    						if(this.sm_doing.si[i].iSType==0)
    						{//stype=0 找到物品 v1物品id v2物品数量 v3交给目标npcid
    							if(MyGoods.bHaveGoods(this.sm_doing.si[i].iV1, this.sm_doing.si[i].iV2))
    							{//有物品，上交
    								GmPlay$1.sop("上交物品");
    								this.FindNpc(this.sm_doing.si[i].iV3,true,true);
    								this.iLogic_npc2=this.sm_doing.si[i].iV3;
    								FastGoods.gi().iListPoint=0;
    								this.iLogicStat=0;
    							}
    							else
    							{//没物品，去买物品
    								this.iLogic_goods1=this.sm_doing.si[i].iV1;
    								this.iLogic_count1=this.sm_doing.si[i].iV2;
    								j=this.getnpcbygoods(this.sm_doing.si[i].iV1);
    								if(j==-1)EasyMessage.easymsg.AddMessage("所需物品来源未知");
    								else
    								{
    									this.iLogic_npc1=MyAI.npc_shop_goods[j][0];
    									this.iLogic_shop1=MyAI.npc_shop_goods[j][1];
    									this.FindNpc(this.iLogic_npc1,true,true);
    //									VisualBlock.pvb.SetTalkingNpc(this.iLogic_npc1);
    									this.iLogicStat=101;
    									VisualBlock.talkingnpc=null;
    								}
    							}
    							return;
    						}
    					}
    				}
    			}
    			break;
    		case 101://前往打开npcshop
    			if(GmMe$1.me.sStat=="站立" && VisualBlock.talkingnpc!=null)
    			{
    				if(VisualBlock.talkingnpc.bCurrentBlock && VisualBlock.talkingnpc.iNpcId==this.iLogic_npc1)
    				{
    					GmProtocol$1.gi().s_NpcShop(this.iLogic_shop1);
    					this.iLogicStat=102;
    				}
    			}
    			break;
    		case 102://等待商店打开后，指向物品
    			if(XStat$1.gi().CheckStat(XStat$1.GS_SHOPFRAME))
    			{
    				var nsf=XStat$1.gi().LastStat(0);
    				for(i=0;i<20;i++)
    				{
    					if(NpcShop.ns.goods[i].iGid>0 && NpcShop.ns.goods[i].iTid==this.iLogic_goods1)
    					{
    						nsf._lockgoods(NpcShop.ns.goods[i]);
    						GoodsDraw.new_LockPos(nsf.iX+30, nsf.iY+30,NpcShop.ns.goods,NpcShop.ns.goods[i]);
    						this.iLogicStat=103;
    						return;
    					}
    				}
    			}
    			break;
    		case 103://如果背包中有任务物品，关闭对话框，寻路回去交任务
    			if(MyGoods.bHaveGoods(this.iLogic_goods1, this.iLogic_count1))
    			{//关闭当前对话框
    				MapDialog.md.bDialoging=false;
    				if(XStat$1.gi().CheckStat(XStat$1.GS_SHOPFRAME))XStat$1.gi().PopStat(1);
    //				while(!XStat.gi().CheckStat(XStat.GS_GAMEING))XStat.gi().PopStat(1);
    				this.iLogicStat=100;
    			}
    			break;
    		case 110://等待到达目标地图后，进入巡逻状态
    			if(MapManager.gi().iCurrentMapId==this.iLogic_map1)
    			{//发送消息获取巡逻路劲
    				this.iLogicStat=111;
    			}
    			break;
    		case 111://等待取得路径后，开始来回走
    			if(this.iLogic_px1>0)
    			{
    				this.to_pos(this.iLogic_px2,this.iLogic_py2);
    				this.iLogicStat=112;
    			}
    			break;
    		case 112://走向
    			//进入战斗时结束
    			if(XDefine$1.llength(GmMe$1.me.iX, GmMe$1.me.iY, this.iLogic_px2, this.iLogic_py2)<50)
    			{
    				this.to_pos(this.iLogic_px1,this.iLogic_py1);
    				this.iLogicStat=113;
    			}
    			if(XFight.bFighting || !this.bFinding)this.iLogicStat=0;
    			break;
    		case 113://走向
    			//进入战斗时结束
    			if(XDefine$1.llength(GmMe$1.me.iX, GmMe$1.me.iY, this.iLogic_px1, this.iLogic_py1)<50)
    			{//
    				this.to_pos(this.iLogic_px2,this.iLogic_py2);
    				this.iLogicStat=112;
    			}
    			if(XFight.bFighting || !this.bFinding)this.iLogicStat=0;
    			break;
    		case 114://到达某地图后，回到100状态
    	//		GmPlay.sop(""+MapManager.gi().iCurrentMapId+",,,,,"+this.iLogic_map1);
    			if(MapManager.gi().iCurrentMapId==this.iLogic_map1)
    			{//发送消息获取巡逻路劲
    				this.iLogicStat=100;
    			}
    			break;
    		case 200:
    			if(this.nm_doing.iMPoint==56 || this.nm_doing.iMPoint==59)
    			{//抓猪，杀狼前往郊外
    				
    				this.iLogic_map1=4;
    				this.FindMap(4, -1, -1,true,true);//前往郊外
    				
    				this.iLogic_px1=-1;
    				GmProtocol$1.gi().s_SeverEvent(29, 0, this.iLogic_map1, 0, 0);
    				this.iLogicStat=110;
    			}
    			if(this.nm_doing.iMPoint==139 || this.nm_doing.iMPoint==140)
    			{//根据当前地图，找地图上的师傅对话
    				this.iLogicStat=0;
    				for(i=1;i<10;i++)
    				{
    					if(MapManager.gi().iCurrentMapId==MyAI._MENPAIMAP[i])
    					{
    						this.FindNpc(MyAI._TEACHERID[i], false,true);
    						return;
    					}
    				}
    				FrameMessage.fm.Open("寻找门派师傅对话");
    			}
    			if(this.nm_doing.iMPoint==141 || this.nm_doing.iMPoint==144)
    			{//与自己师傅对话
    				this.iLogicStat=0;
    				this.FindNpc(MyAI._TEACHERID[GmMe$1.me.rbs.iSchoolId], true,true);
    			}
    			break;
    		}
    	}

    	getlogicpath( pls)
    	{
    		var i=pls.GetNextInt();
    		this.iLogic_px1=i/10000;
    		this.iLogic_py1=i%10000;
    		i=pls.GetNextInt();
    		this.iLogic_px2=i/10000;
    		this.iLogic_py2=i%10000;
    	}

    	 getnpcbygoods( gid)
    	{
    		var i,j;
    		for(i=0;i<MyAI.npc_shop_goods.length;i++)
    		{
    			for(j=2;j<MyAI.npc_shop_goods[i].length;j++)
    			{
    				if(MyAI.npc_shop_goods[i][j]==gid)return i;
    			}
    		}
    		return -1;
    	}


    	AutoSpecialMission( sm)
    	{
    		this.sm_doing=sm;
    		this.iLogicStat=100;
    	}
    	AutoNormalMission( nm)
    	{
    		this.nm_doing=nm;
    		this.iLogicStat=200;
    	}
    	 ProcTouch( msg, x, y)
    	{
    		return false;
    	}
    }
     MyAI.iX,MyAI.iY,MyAI.iW,MyAI.iH;
     MyAI._TEACHERID=[0,5,6,7,21,22,23,24,25,26];
    MyAI._MENPAIMAP=[0,5,6,7,10,8,9,11,12,13];
     MyAI.npc_shop_goods=[
    [27,4,66,67,69,70,73,74],////西阳药店老板
    [28,2,47,53,59,11,19,25,31,37,13],////西阳装备店老板
    [3,3,65,66,68,69,71,72],////新手村药店老板
    [2,1,1,3,4,5,6,7,8,9,10],////新手村装备店老板
    [41,5,78,81,83,67,71,75],////郢城药店
    [93,9,14,12,20,48,54,60,26,32,38],//
    [42,6,79,80,82,72,73,76],////临淄
    [94,10,15,43,21,49,55,61,27,33,39],//
    [43,7,82,83,84,77,80,81],////咸阳
    [95,11,16,44,22,50,56,62,28,34,40]];//


    MyAI.ma=null;
    MyAI.gi=function()
    {
    	if(MyAI.ma==null)MyAI.ma=new MyAI();
    	return MyAI.ma;
    };

    class MySelect extends BaseClass{

    	
    	 constructor( a)
    	{
    		super();
    		this.xm3f=M3DFast$1.xm3f;
    		
    		this.iW=700;
    		this.iH=320;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.sAnswer=new Array(6);//
    		this.iCs=new Int32Array(6);//
    		this.btn_ans=new Array(6);//
    		for(var i=0;i<6;i++)
    		{
    			this.btn_ans[i]=new XButton(GmPlay$1.xani_button);
    			this.btn_ans[i].InitButton("普通按钮200_55");
    			this.btn_ans[i].Move(this.iX+this.iW-30-200, this.iY+30+i*65, 200, 55);
    		}
    	}
    	

    	InitDialog( pls)
    	{
    		var i;
    		
    		this.iMType=pls.GetNextByte();
    		this.iSType=pls.GetNextByte();
    		this.sQuestion=pls.GetNextString();
    		this.iCount=pls.GetNextByte();
    		for(i=0;i<this.iCount;i++)
    		{
    			this.sAnswer[i]=pls.GetNextString();
    			this.iCs[i]=pls.GetNextInt();
    			this.btn_ans[i].sName=this.sAnswer[i];
    		}
    	}
    	
    	Draw()
    	{
    		var i;
    		
    		DrawMode$1.frame_type4("中等框a52_50", this.iX, this.iY, this.iW, this.iH, 52, 50);
    		DrawMode$1.frame_type4("单色内框a20_20", this.iX+30, this.iY+30, 430, this.iH-60, 20, 20);
    		
    		FormatString.gi().FormatEx(this.sQuestion, 430-30, 25, 0, 0, 35);
    		FormatString.gi().Draw(this.iX+30+15, this.iY+30+15);

    		for(i=0;i<this.iCount;i++)
    		{
    			this.btn_ans[i].Draw();
    		}
    	}

    	ProcTouch( msg, x, y)
    	{
    		if(MySelect.bInRect(x,y,this.iX,this.iY,this.iW,this.iH))
    		{
    			for(var i=0;i<this.iCount;i++)
    			{
    				if(this.btn_ans[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_ans[i].bCheck())
    					{
    						GmProtocol$1.gi().s_SeverSelect(this.iMType, this.iSType, this.iCs[i]);
    						XStat$1.gi().PopStat(1);
    					}
    				}
    			}
    		}
    		else if(msg==3)
    		{
    			XStat$1.gi().PopStat(1);
    		}
    		return true;
    	}

    }
    MySelect.Open=function( pls)
    {
    	var ms=XStat$1.gi().FindStat(XStat$1.GS_MYSELECT);
    	if(ms==null)ms=XStat$1.gi().PushStat(XStat$1.GS_MYSELECT);
    	ms.InitDialog(pls);
    };
    MySelect.bInRect=function( x , y, rx, ry, rw, rh)
    {
    	if(x<=rx)return false;
    	if(y<=ry)return false;
    	if(x>=rx+rw)return false;
    	if(y>=ry+rh)return false;
    	return true;
    };

    //首充礼包
    class FirstCharge {

    	constructor()
    	{
    		this.bInited=false;
    		this.bShow=false;
    		this.btn_charge=null;
    		this.bShowEffect=true;
    		this.bShowFrame=false;
    		
    		this.iW=742;
    		this.iH=486;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    	}
    	
    	SetStatByFlag()
    	{
    		this.bShow=false;
    		if(GmMe$1.me.iFlag[59]/100000000==0)
    		{//没领过首充礼包
    			this.bShow=true;
    			this.iChargeProc=GmMe$1.me.iFlag[59]%100000000;
    			this.iChargeProc/=10;
    			if(this.iChargeProc>60)this.iChargeProc=60;
    		}
    	}
    	Draw()
    	{
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return;
    		if(!this.bShow)return;
    		if(GmMe$1.me.rbs.iLev<20)return;
    		var offx=Gameing.iTopIconOffX;
    		var i,j;
    		
    		if(this.btn_charge==null)
    		{
    			this.btn_charge=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_charge.InitButton("礼包按钮");
    			this.btn_charge.sName="充  值";
    			
    			this.btn_open=new XButtonEx2$1(GmPlay$1.xani_icon);
    			this.btn_open.InitButton("首充图标");
    //			btn_get.iNameSize=20;
    			
    			this.gs=new Array(2);
    			this.btn_gs=new Array(2);//
    			for(i=0;i<2;i++)
    			{
    				this.gs[i]=new Array(4);
    				this.btn_gs[i]=new Array(4);
    				for(j=0;j<4;j++)
    				{
    					this.gs[i][j]=new Goods();
    					this.btn_gs[i][j]=new XButton(GmPlay$1.xani_nui3);
    					this.btn_gs[i][j].bSingleButton=true;
    				}
    			}

    			this.gs[0][0].SetAtt(0, 116, 1, 0, 0, 0, 0, 0, 0, 0, 1);//红池， 蓝池， 双倍经验卡， 三倍经验卡，
    			this.gs[0][1].SetAtt(0, 117, 1, 0, 0, 0, 0, 0, 0, 0, 1);
    			this.gs[0][2].SetAtt(0, 118, 1, 0, 0, 0, 0, 0, 0, 0, 1);
    			this.gs[0][3].SetAtt(0, 236, 1, 0, 0, 0, 0, 0, 0, 0, 1);
    			
    			this.gs[1][0].SetAtt(0, 208, 1, 0, 0, 0, 0, 0, 0, 0, 1);//自动遇怪卡， 传送符， 10W绑铜，  绑定变异花魅
    			this.gs[1][1].SetAtt(0, 119, 1, 0, 0, 0, 0, 0, 0, 0, 1);
    			this.gs[1][2].SetAtt(0, 240, 1, 100000, 0, 0, 0, 0, 0, 0, 1);
    //			this.gs[1][3].SetAtt(0, 236, 1, 0, 0, 0, 0, 0, 0, 0, 1);
    			
    			this.aa_effect=GmPlay$1.xani_nui6.InitAnimaWithName("转圈效果", null);
    			
    			this.bInited=true;
    		}
    		this.btn_open.Move(offx, 10, 72, 72);
    		this.btn_open.Draw();
    		M3DFast$1.gi().DrawText_2(this.btn_open.iX+36, this.btn_open.iY+71, "首充礼包", 0xfffdf5e8, 22, 101, 1, 1, 0, -2, -3,3,0xff1a0000);

    		if(this.bShowEffect)
    		{
    //			this.aa_effect.Draw(offx+36, 0+40);
    //			this.aa_effect.NextFrame();
    			GmPlay$1.xani_icon.DrawAnima(offx+48, 2, "红点提示",0);
    		}
    		
    		if(this.bShowFrame)
    		{
    			this.iX=(GmConfig$1.SCRW-this.iW)/2;
    			this.iY=(GmConfig$1.SCRH-this.iH)/2;
    			var iLockX=-1,iLockY=-1;
    			GmPlay$1.xani_nui6.DrawAnima(this.iX, this.iY, "首充背景框", 0);
    			GmPlay$1.xani_nui6.DrawAnima(this.iX, this.iY, "首充背景框", 1);
    			GmPlay$1.xani_nui6.DrawAnima(this.iX, this.iY, "首充背景框", 2);
    			
    			GmPlay$1.xani_nui2.DrawAnima(this.iX+this.iW-12, this.iY+12, "梅竹", 0);
    			GmPlay$1.xani_nui2.DrawAnima(this.iX+12, this.iY+this.iH-12, "梅竹", 1);
    			
    			GmPlay$1.xani_nui6.DrawAnima(this.iX, this.iY, "首充背景框", 3);
    			
    			for(i=0;i<2;i++)
    			{
    				for(j=0;j<4;j++)
    				{
    					this.btn_gs[i][j].Move(this.iX+361+j*85, this.iY+203+i*85, 75, 76);
    					if(i!=1 || j!=3)
    					{
    						this.gs[i][j].aa.Draw(this.iX+361+j*85, this.iY+203+i*85);
    						if(this.btn_gs[i][j].bMouseDown)
    						{
    							iLockX=i;
    							iLockY=j;
    						}
    					}
    					else
    					{
    						GmPlay$1.xani_head.DrawAnimaEx(this.iX+361+j*85+5, this.iY+203+i*85+5, "花魅",0,101,0.9,0.9,0,0,0);
    					}
    				}
    			}
    			M3DFast$1.gi().DrawText_2(this.iX+366, this.iY+75, "豪华大礼包，升级助力，极品宝宝", 0xffffffff, 20, 101, 1, 1, 0, 0, 0, 4, 0xff73332a);
    			M3DFast$1.gi().DrawText_2(this.iX+386, this.iY+115, "坠入凡间的花魅，伴您纵情仙侠。", 0xffffffff, 20, 101, 1, 1, 0, 0,0, 4, 0xff73332a);

    			M3DFast$1.gi().DrawTextEx(this.iX+83-8, this.iY+402-6, ""+this.iChargeProc, 0xff000000, 16, 101, 0.8, 1, 0, -2, -2);
    			M3DFast$1.gi().DrawTextEx(this.iX+83, this.iY+402, "/", 0xff000000, 26, 101, 1, 1, 0, -2, -2);
    			M3DFast$1.gi().DrawTextEx(this.iX+83+8, this.iY+402+6, "60", 0xff000000, 16, 101, 0.8, 1, 0, -2, -2);
    			for(i=0;i<this.iChargeProc/10;i++)
    			{
    				GmPlay$1.xani_nui6.DrawAnima(this.iX, this.iY, "首充进度条", i);
    			}
    			
    //			GmPlay.xani_nui1.DrawAnimaEx(this.iX+213,this.iY+395, "站台", 0, 101, 0.6f, 0.6f, 0, 0, 0);
    			GmPlay$1.xani_nui1.DrawAnimaEx(this.iX+210,this.iY+395, "选中角色底", GmPlay$1.iDelay, 101, 0.6, 0.6, 0, 0, 0);
    			
    			GmPlay$1.xani_pets[11].DrawAnimaEx(this.iX+210,this.iY+395-10, "变异_站立_右下",GmPlay$1.iDelay/3,101,1.3,1.3,0,0,0);
    			
    			if(this.iChargeProc<60)this.btn_charge.sName="立即充值";
    			else this.btn_charge.sName="领  取";
    			this.btn_charge.Move(this.iX+460, this.iY+385, 134, 44);
    			this.btn_charge.Draw();
    			
    			
    			if(iLockX>=0)
    			{
    				if(this.gs[iLockX][iLockY].iGid>=0)
    				{
    					GoodsDraw.new_DrawDetail(this.gs[iLockX][iLockY], this.btn_gs[iLockX][iLockY].iX, this.btn_gs[iLockX][iLockY].iY,0);
    				}
    			}
    		}
    		
    		Gameing.iTopIconOffX+=90;
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return false;
    		if(!this.bShow)return false;
    		if(GmMe$1.me.rbs.iLev<20)return false;
    		if(!this.bInited)return false;
    		if(this.btn_open.ProcTouch(msg, x, y))
    		{
    			if(this.btn_open.bCheck())
    			{
    				this.bShowEffect=false;
    				this.bShowFrame=true;
    			}
    			return true;
    		}
    		
    		if(this.bShowFrame)
    		{
    			var i,j;
    			if(this.btn_charge.ProcTouch(msg, x, y))
    			{
    				if(this.btn_charge.bCheck())
    				{//充值/领奖
    					if(this.iChargeProc<60)
    					{
    //						MyAttFrame.Open(3);
    						GmProtocol$1.gi().s_IngotMall(0, 0);
    						IngotMall.iLastSelect=1;
    					}
    					else
    					{//领取
    						GmProtocol$1.gi().s_SeverEvent(28, 0, 0, 0, 0);
    					}
    					this.bShowFrame=false;
    				}
    				return true;
    			}

    			for(i=0;i<2;i++)
    			{
    				for(j=0;j<4;j++)
    				{
    					if(this.btn_gs[i][j].ProcTouch(msg, x, y))
    					{
    					}
    				}
    			}
    			if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH) && msg==3)this.bShowFrame=false;
    			else return true;
    		}
    		return false;
    	}
    }
    FirstCharge.fg=new FirstCharge();

    //五日礼包
    class FiveGift {
    	constructor()
    	{
    		this.sGetDetail=["今日可领","明日可领","两天后领","三天后领","四天后领"];

    		this.bInited=false;
    		this.bShow=false;
    		this.btn_open=null;
    		this.bShowEffect=false;
    		this.bShowFrame=false;
    		
    		this.iW=905;
    		this.iH=585;

    	}
    	
    	SetStatByFlag()
    	{
    		this.bShow=false;
    		if((GmMe$1.me.iFlag[36]&31)<=0)	
    		{//没领过老礼包
    			var i=GmMe$1.me.iFlag[36]>>5;
    			if(i<31)
    			{//新礼包还没领完
    				if((GmMe$1.me.iFlag[24]&2048)==0)
    				{//今日未领
    //					this.bShow=true;
    //					this.iGetStat=i;
    					this.bShowEffect=true;
    				}
    				this.bShow=true;
    				this.iGetStat=i;
    			}
    		}
    	}
    	
    	Draw()
    	{
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return;
    		if(!this.bShow)return;
    		var offx=Gameing.iTopIconOffX;
    		var offy;
    		var i,j,k;
    //		GmPlay.xani_nui3.DrawAnima(offx, 0, "开服前五天奖励", 0);

    		if(this.btn_open==null)
    		{
    			this.btn_open=new XButtonEx2$1(GmPlay$1.xani_icon);
    			this.btn_open.InitButton("五日礼包");
    			
    			this.btn_get=new XButtonEx2$1(GmPlay$1.xani_nui6);
    			this.btn_get.InitButton("领取按钮");
    			this.btn_get.sName="今日可领";
    			this.btn_get.iNameSize=20;
    			
    			this.gs=new Array(5);//
    			this.btn_gs=new Array(5);//
    			for(i=0;i<5;i++)
    			{
    				this.gs[i]=new Array(3);
    				this.btn_gs[i]=new Array(3);
    				for(j=0;j<3;j++)
    				{
    					this.gs[i][j]=new Goods();
    					this.btn_gs[i][j]=new XButton(GmPlay$1.xani_nui3);
    					this.btn_gs[i][j].bSingleButton=true;
    				}
    			}
    			
    			//第一天： 千金藤， 30级项链， 绑铜1W
    			this.gs[0][0].SetAtt(0, 88, 1, 0, 0, 0, 0, 0, 0, 0, 1);//千金藤
    			this.gs[0][1].SetAtt(0, 21, 1, 13, 20051005, 0, 20000, 0, Goods.GetSetNJ(30), 0, 1);//30级项链
    			this.gs[0][2].SetAtt(0, 240, 1, 10000, 0, 0, 0, 0, 0, 0, 1);//绑铜
    			
    			//第二天： 30级武器，VIP卡， 绑铜5W
    			if(GmMe$1.me.iRace==0)this.gs[1][0].SetAtt(0, 49, 1, 46, 20054005, 0, 20000, 0, Goods.GetSetNJ(30), 0, 1);//30级剑
    			else if(GmMe$1.me.iRace==1)this.gs[1][0].SetAtt(0, 55, 1, 46, 20054005, 0, 20000, 0, Goods.GetSetNJ(30), 0, 1);//
    			else this.gs[1][0].SetAtt(0, 61, 1, 46, 20054005, 0, 20000, 0, Goods.GetSetNJ(30), 0, 1);
    			this.gs[1][1].SetAtt(0, 237, 1, 0, 0, 0, 0, 0, 0, 0, 1);//vip
    			this.gs[1][2].SetAtt(0, 240, 1, 50000, 0, 0, 0, 0, 0, 0, 1);//绑铜
    			
    			//第三天： 30级鞋子， 双倍卡， 绑铜10W
    			this.gs[2][0].SetAtt(0, 15, 1, 60004, 30051005, 0, 20000, 0, Goods.GetSetNJ(30), 0, 1);//30级鞋子
    			this.gs[2][1].SetAtt(0, 118, 1, 0, 0, 0, 0, 0, 0, 0, 1);//
    			this.gs[2][2].SetAtt(0, 240, 1, 100000, 0, 0, 0, 0, 0, 0, 1);//绑铜
    			
    			//第四天： 自动遇怪卡，替身木偶， 小喇叭
    			this.gs[3][0].SetAtt(0, 208, 1, 0, 0, 0, 0, 0, 0, 0, 1);//自动遇怪卡
    			this.gs[3][1].SetAtt(0, 106, 1, 0, 0, 0, 0, 0, 0, 0, 1);
    			this.gs[3][2].SetAtt(0, 122, 1, 0, 0, 0, 0, 0, 0, 0, 1);
    			
    			//第五天： 40级武器， 彩果， 绑铜20W
    			if(GmMe$1.me.iRace==0)this.gs[4][0].SetAtt(0, 50, 1, 46, 20064006, 0, 30000, 0, Goods.GetSetNJ(40), 0, 1);//40级剑
    			else if(GmMe$1.me.iRace==1)this.gs[4][0].SetAtt(0, 56, 1, 46, 20064006, 0, 30000, 0, Goods.GetSetNJ(40), 0, 1);//
    			else this.gs[4][0].SetAtt(0, 62, 1, 46, 20064006, 0, 30000, 0, Goods.GetSetNJ(40), 0, 1);
    			this.gs[4][1].SetAtt(0, 312, 1, 0, 0, 0, 0, 0, 0, 0, 1);
    			this.gs[4][2].SetAtt(0, 240, 1, 200000, 0, 0, 0, 0, 0, 0, 1);//绑铜
    			
    			this.aa_effect=GmPlay$1.xani_nui6.InitAnimaWithName("转圈效果", null);
    			this.bInited=true;

    			this.iX=(GmConfig$1.SCRW-this.iW)/2;
    			this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		}
    		this.btn_open.Move(offx, 10, 72, 72);
    		this.btn_open.Draw();
    		M3DFast$1.gi().DrawText_2(this.btn_open.iX+36, this.btn_open.iY+71, "五日礼包", 0xfffdf5e8, 22, 101, 1, 1, 0, -2, -3,3,0xff1a0000);

    		if(this.bShowEffect)
    		{
    //			this.aa_effect.Draw(offx+40, 0+40);
    //			this.aa_effect.NextFrame();
    			GmPlay$1.xani_icon.DrawAnima(offx+48, 2, "红点提示",0);
    		}
    		
    		if(this.bShowFrame)
    		{
    			GmPlay$1.xani_nui6.DrawAnima(this.iX, this.iY, "五日礼包背景框", 0);
    			GmPlay$1.xani_nui6.DrawAnima(this.iX, this.iY, "五日礼包背景框", 1);
    			GmPlay$1.xani_nui6.DrawAnima(this.iX, this.iY, "五日礼包背景框", 2);
    			
    			GmPlay$1.xani_nui2.DrawAnima(this.iX+this.iW-12, this.iY+12, "梅竹", 0);
    			GmPlay$1.xani_nui2.DrawAnima(this.iX+12, this.iY+this.iH-12, "梅竹", 1);
    			
    			GmPlay$1.xani_nui6.DrawAnima(this.iX, this.iY, "五日礼包背景框", 3);
    			
    			offx=280;
    			offy=97;
    			FormatString.gi().FormatEx("# 储备物资，临时提升，享仙侠之游！", 200, 18, 4, 0xff174e62, 25);
    			FormatString.gi().Draw(this.iX+offx, this.iY+offy);
    			FormatString.gi().FormatEx("# 高阶武器，贵宾身份，让你畅行三界！", 200, 18, 4, 0xff174e62, 25);
    			FormatString.gi().Draw(this.iX+offx, this.iY+offy+97*1);
    			FormatString.gi().FormatEx("# 双倍经验，光速升级，通往强者之路！", 200, 18, 4, 0xff174e62, 25);
    			FormatString.gi().Draw(this.iX+offx, this.iY+offy+97*2);
    			FormatString.gi().FormatEx("# 替身木偶，悍不畏死，为你阻灾挡祸！", 200, 18, 4, 0xff174e62, 25);
    			FormatString.gi().Draw(this.iX+offx, this.iY+offy+97*3);
    			FormatString.gi().FormatEx("# 绝世神兵，稀有彩果，助你叱咤风云！", 200, 18, 4, 0xff174e62, 25);
    			FormatString.gi().Draw(this.iX+offx, this.iY+offy+97*4);
    			
    			offx=this.iX+490;
    			offy=this.iY+87;
    			k=0;
    			this.iLockX=-1;
    			this.iLockY=-1;
    			for(i=0;i<5;i++)
    			{
    				for(j=0;j<3;j++)
    				{
    					if(j==1 || (i==4 && j==0))GmPlay$1.xani_nui6.DrawAnima(offx+j*87,offy+i*97 ,"主打物品框", 0);
    					else GmPlay$1.xani_nui3.DrawAnima(offx+j*87,offy+i*97, "物品格子", 0);
    					
    					if(this.gs[i][j].iGid>=0)
    					{
    //						this.btn_gs[i][j].Move(offx+150+j*92, offy, 80, 80);
    //						GmPlay.xani_nui3.DrawAnima(offx+150+j*92, offy, "物品格子", 0);
    						this.gs[i][j].aa.Draw(offx+j*87,offy+i*97);
    						this.btn_gs[i][j].Move(offx+j*87,offy+i*97,80,80);
    						if(this.btn_gs[i][j].bMouseDown)
    						{
    							this.iLockX=i;
    							this.iLockY=j;
    						}
    //						if(iGPoint1==i && iGPoint2==j)GmPlay.xani_nui3.DrawAnimaEx(offx+150+j*92, offy, "物品选中框", 0, 101, 1, 1, 0, 0, 0);
    //						this.btn_gs[i][j].Draw();
    					}
    				}
    				if(k==0)
    				{
    					if((this.iGetStat&(1<<i))==0)
    					{//没领，显示领取按钮
    						k=1;
    						if((GmMe$1.me.iFlag[24]&2048)==0)
    						{//今日未领
    							this.btn_get.Move(offx+272, offy+i*97+15, 104, 48);
    							this.btn_get.Draw();
    						}
    						//else GmPlay.xani_nui6.DrawAnima(offx+272, offy+i*97+12, "已领取", 0);
    						else
    						{
    							M3DFast$1.gi().DrawTextEx(offx+270, offy+i*97+40, this.sGetDetail[k++], 0xff000000, 28, 101, 1, 1, 0, 0, -2);
    						}
    					}
    					else
    					{//已领
    						GmPlay$1.xani_nui6.DrawAnima(offx+272, offy+i*97+12, "已领取", 0);
    					}
    				}
    				else
    				{
    					M3DFast$1.gi().DrawTextEx(offx+270, offy+i*97+40, this.sGetDetail[k++], 0xff000000, 28, 101, 1, 1, 0, 0, -2);
    				}
    			}
    			if(this.iLockX>=0)
    			{
    				if(this.gs[this.iLockX][this.iLockY].iGid>=0)
    				{
    					GoodsDraw.new_DrawDetail(this.gs[this.iLockX][this.iLockY], this.btn_gs[this.iLockX][this.iLockY].iX, this.btn_gs[this.iLockX][this.iLockY].iY,0);
    				}
    			}
    		}
    		
    		Gameing.iTopIconOffX+=90;
    	}

    	ProcTouch( msg, x, y)
    	{
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return false;
    		if(!this.bShow)return false;
    		if(!this.bInited)return false;
    		if(this.btn_open.ProcTouch(msg, x, y))
    		{
    			if(this.btn_open.bCheck())
    			{
    				this.bShowEffect=false;
    				this.bShowFrame=true;
    			}
    			return true;
    		}
    		if(this.bShowFrame)
    		{
    			var i,j;
    			if((GmMe$1.me.iFlag[24]&2048)==0)
    			{
    				if(this.btn_get.ProcTouch(msg, x, y))
    				{
    					if(this.btn_get.bCheck())
    					{//领取当日奖励
    						GmProtocol$1.gi().s_SeverEvent(14, 0, 0, 0, 0);
    						this.bShowFrame=false;
    					}
    					return true;
    				}
    			}
    			for(i=0;i<5;i++)
    			{
    				for(j=0;j<3;j++)
    				{
    					if(this.btn_gs[i][j].ProcTouch(msg, x, y))
    					{
    					}
    				}
    			}
    			if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH) && msg==3)this.bShowFrame=false;
    			else return true;
    		}
    		return false;
    	}
    }
    FiveGift.fg=new FiveGift();

    class LeaderBoard
    {

    	

    	 constructor()
    	{
    		this.btn_open=null;

    	}

    	Draw()
    	{
    //		if(1==1)return;
    		var offx=Gameing.iTopIconOffX;

    		Gameing.iTopIconOffX+=90;
    		if(this.btn_open==null)
    		{
    			this.btn_open=new XButtonEx2$1(GmPlay$1.xani_icon);
    			this.btn_open.InitButton("排行榜");
    		}
    		
    		this.btn_open.Move(offx, 10, 72, 72);
    		this.btn_open.Draw();
    		M3DFast$1.gi().DrawText_2(this.btn_open.iX+36, this.btn_open.iY+71, "排行榜", 0xfffdf5e8, 22, 101, 1, 1, 0, -2, -3,3,0xff1a0000);
    	}

    	ProcTouch( msg, x, y)
    	{
    //		if(1==1)return false;
    		if(this.btn_open.ProcTouch(msg, x, y))
    		{
    			if(this.btn_open.bCheck())
    			{
    				GmMe$1.me.CalcUserScore();
    				
    				XStat$1.gi().PushStat(XStat$1.GS_LEADERBOARDFRAME);
    			}
    			return true;
    		}
    		return false;
    	}
    }
    LeaderBoard.lb=new LeaderBoard();

    //登陆送礼
    class LoginGift {

    	constructor() {
    		this.bInited = false;
    		this.btn_gift2 = null;
    		this.btn_get = null;
    		this.bShow = false;
    		this.iDelay = 0;
    	}

    	

    	 DrawGift2() {
    		var money, exp;
    		if ((GmMe$1.me.iFlag[24] & 8) == 0)
    			money = GmMe$1.me.rbs.iLev * 500 + 100;
    		else if ((GmMe$1.me.iFlag[24] & 16) == 0)
    			money = GmMe$1.me.rbs.iLev * 100 + 100;
    		else if ((GmMe$1.me.iFlag[24] & 32) == 0)
    			money = GmMe$1.me.rbs.iLev * 200 + 100;
    		else if ((GmMe$1.me.iFlag[24] & 64) == 0)
    			money = GmMe$1.me.rbs.iLev * 300 + 100;
    		else if ((GmMe$1.me.iFlag[24] & 128) == 0)
    			money = GmMe$1.me.rbs.iLev * 400 + 100;
    		else {
    			this.bGet2 = false;
    			return;
    		}
    		exp = money * 3;

    		this.iW = 80 * 2 + 40 + 40 * 2;
    		this.iH = 240;
    		this.iX = (GmConfig$1.SCRW - this.iW) / 2;
    		this.iY = (GmConfig$1.SCRH - this.iH) / 2;

    		DrawMode$1.new_framewatch(this.iX, this.iY, this.iW, this.iH);

    		GmPlay$1.xani_nui3.DrawAnima(this.iX + 40, this.iY + 30, "物品格子", 0);
    		GmPlay$1.xani_ngoods.DrawAnima(this.iX + 40, this.iY + 30, "物品经验", 0);
    		M3DFast$1.gi().DrawText_2(this.iX + 40 + 40, this.iY + 30 + 80 + 5, "" + exp,
    				0xffffff00, 20, 101, 1, 1, 0, -2, 0, 1, 0xff000000);


    				


    		 GmPlay$1.xani_nui3.DrawAnima(this.iX + 40 + 80 + 40, this.iY + 30, "物品格子", 0);
    		 GmPlay$1.xani_ngoods.DrawAnima(this.iX + 40 + 80 + 40, this.iY + 30, "物品储备金", 0);

    	






    		M3DFast$1.gi().DrawText_2(this.iX + 40 + 80 + 40 + 40, this.iY + 30 + 80 + 5, ""
    				+ money, 0xffffff00, 20, 101, 1, 1, 0, -2, 0, 1, 0xff000000);

    		this.btn_get.Move(this.iX + this.iW / 2 - 98 / 2, this.iY + this.iH - 50 - 30, 98, 50);
    		this.btn_get.Draw();
    	}

    	SetStatByFlag() {
    		this.bGift2 = false;
    		this.bGet2 = false;

    		// if(GmMe.me.iFlag[35]<5 &&
    		// (GmMe.me.iFlag[36]&(1<<GmMe.me.iFlag[35]))==0)
    		// if(GmMe.me.iFlag[35]<4 || (GmMe.me.iFlag[35]==4 &&
    		// (GmMe.me.iFlag[36]&(1<<GmMe.me.iFlag[35]))==0))
    		/*
    		 * if((GmMe.me.iFlag[36]&31)<=0) {//没领过老礼包 int i=GmMe.me.iFlag[36]>>5;
    		 * if(i<31) {//新礼包还没领完 if(GmMe.me.iFlag[1]/100000000==0) {//今日未领
    		 * bGift1=true; } } }
    		 */
    		if ((GmMe$1.me.iFlag[24] & 8) == 0 || (GmMe$1.me.iFlag[24] & 16) == 0
    				|| (GmMe$1.me.iFlag[24] & 32) == 0
    				|| (GmMe$1.me.iFlag[24] & 64) == 0
    				|| (GmMe$1.me.iFlag[24] & 128) == 0) {// 显示在线礼包按钮
    			this.bGift2 = true;
    		}
    		this.bShow = true;
    	}

    	Draw() {// flag[35]0,1,2,3,4时
    		if (GmMe$1.me.rbs.iLev < 10)
    			return;
    		if (MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())
    			return;
    		if (!this.bShow)
    			return;
    		var lt2;
    		this.iDelay++;
    		if (this.btn_gift2 == null)
    		{
    			this.btn_gift2 = new XButtonEx2$1(GmPlay$1.xani_icon);
    			this.btn_gift2.InitButton("登录礼包");

    			this.aa_effect = GmPlay$1.xani_nui6.InitAnimaWithName("转圈效果", null);

    			this.btn_get = new XButtonEx1(GmPlay$1.xani_nui3);
    			this.btn_get.InitButton("内框按钮");
    			this.btn_get.sName = "领取";

    			this.bInited = true;
    		}

    		this.iY = 10;
    		this.iW = 72;
    		this.iH = 72;

    		this.iX = Gameing.iTopIconOffX;
    		if (this.bGift2 && GmMe$1.me.rbs.iLev >= 10)
    		{
    			Gameing.iTopIconOffX += 90;
    			this.btn_gift2.Move(this.iX, this.iY, this.iW, this.iH);
    			this.btn_gift2.Draw();
    			// i=this.iDelay%12;

    			if (GmMe$1.me.iFlag[37] <= 0) 
    			{
    //				this.aa_effect.Draw(this.iX + 40, 0 + 40);
    //				this.aa_effect.NextFrame();
    				
    				GmPlay$1.xani_icon.DrawAnima(this.iX + 48, 2, "红点提示", 0);
    				// GmPlay.xani_nui3.DrawAnima(this.iX, this.iY+(i<6?i:12-i)-3, "每日在线奖励",
    				// 0);
    			}

    			// 画倒计时
    			if (GmMe$1.me.iFlag[37] > 0)
    			{
    				lt2 = XDefine$1.get_ms() / 1000;
    				lt2 = (lt2 - GmMe$1.me.lt1);
    				lt2 = GmMe$1.me.iFlag[37] - lt2;
    				if (lt2 < 0)GmMe$1.me.iFlag[37] = 0;
    				else LoginGift.DrawTime(this.iX + 36, this.iY + 71,  lt2);
    			}
    			else M3DFast$1.gi().DrawText_2(this.btn_gift2.iX+36, this.btn_gift2.iY+71, "领取", 0xfffdf5e8, 22, 101, 1, 1, 0, -2, -3,3,0xff1a0000);
    		}
    		if (this.bGet2)this.DrawGift2();
    	}

    	ProcTouch( msg,  x,  y) {
    		if (GmMe$1.me.rbs.iLev < 10)
    			return false;
    		if (MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())
    			return false;
    		if (!this.bShow)
    			return false;
    		if (!this.bInited)
    			return false;

    		if (this.bGet2) {
    			if (this.btn_get.ProcTouch(msg, x, y)) {
    				if (this.btn_get.bCheck()) {// 领
    					GmProtocol$1.gi().s_SeverEvent(14, 1, 0, 0, 0);
    					this.bGet2 = false;
    				}
    				return true;
    			}
    			if (!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH) && msg == 3) {
    				this.bGet2 = false;
    			}
    			return true;
    		}

    		if (this.bGift2 && GmMe$1.me.rbs.iLev >= 10) {
    			if (this.btn_gift2.ProcTouch(msg, x, y)) {
    				if (this.btn_gift2.bCheck()) {// 打开领取页面
    					if (GmMe$1.me.iFlag[37] == 0)
    						this.bGet2 = true;
    					else
    						EasyMessage.easymsg.AddMessage("倒计时结束后可领");
    				}
    				return true;
    			}
    		}

    		return false;
    	}
    }
    LoginGift.lg = new LoginGift();

    LoginGift.DrawNum=function( x,  y,  num) {
    	// GmPlay.xani_ui2.DrawAnima_aa(x+5, y, Gameing.aa_xy.iAnimaPoint,num/10);
    	// GmPlay.xani_ui2.DrawAnima_aa(x+15, y, Gameing.aa_xy.iAnimaPoint,num%10);

    	// M3DFast.gi().DrawTextEx(x+5, y, ""+num/10, 0xffffffff, 20, 101, 1, 1,
    	// 0, -2, -3);
    	// M3DFast.gi().DrawTextEx(x+15, y, ":"+num%10, 0xffffffff, 20, 101, 1,
    	// 1, 0, -2, -3);
    };

    LoginGift.DrawTime=function( x,  y,  sec) {// 共80-8=72/2=36宽
    	sec=parseInt(sec);
    	var str = "";
    	var i = parseInt(sec / 60 / 60) % 60;
    	str = str + parseInt(i / 10) + (i % 10) + ":";
    	i = parseInt(sec / 60) % 60;
    	str = str + parseInt(i / 10) + (i % 10) + ":";
    	i = sec % 60;
    	str = str + parseInt(i / 10) + (i % 10);
    	
    	M3DFast$1.gi().DrawText_2(x,y, str, 0xfffdf5e8, 22, 101, 1, 1, 0, -2, -3, 3, 0xff1a0000);

    	/*
    	 * DrawNum(x+52,y,sec%60); M3DFast.gi().DrawTextEx(x+50-4-2+5, y, ":",
    	 * 0xffffffff, 20, 101, 1, 1, 0, -2, -3); //
    	 * GmPlay.xani_ui2.DrawAnima_aa(x+50-4-2+5, y,
    	 * Gameing.aa_xy.iAnimaPoint,10); sec/=60; DrawNum(x+26,y,sec%60);
    	 * M3DFast.gi().DrawTextEx(x+20-2+5, y, ":", 0xffffffff, 20, 101, 1, 1,
    	 * 0, -2, -3); // GmPlay.xani_ui2.DrawAnima_aa(x+20-2+5, y,
    	 * Gameing.aa_xy.iAnimaPoint,10); sec/=60; DrawNum(x,y,sec%60);
    	 */
    };

    //实力提升
    class StrengthUpgrade {

    	constructor()
    	{
    		this.bInited=false;
    		this.bOpen=false;
    	}
    	 calcshow()
    	{
    		if(GmMe$1.me.rbs.nut>0)return true;
    		if(GmMe$1.me.rbs.iExp>=GameData$1.iUpgradeExp[GmMe$1.me.rbs.iLev])return true;
    		var pet=MyPets$1.mp.GetUseingPet();
    		if(MyPets$1.mp.iPetCount>0 && pet==null)return true;
    		if(pet!=null && pet.nut>0)return true;
    		return false;
    	}
    	Draw()
    	{// flag[35]0,1,2,3,4时
    		if (MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return;
    		if(GmMe$1.me.rbs.iLev>=40)return;
    		this.bShow=this.calcshow();
    		if (!this.bShow)return;
    		if (!this.bInited)
    		{
    			this.btn_upgrade=new XButtonEx2$1(GmPlay$1.xani_icon);
    			this.btn_upgrade.InitButton("实力提升");

    			this.btn_addpoint=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_addpoint.InitButton("1号按钮150_60");
    			this.btn_addpoint.sName="人物加点";

    			this.btn_upgrademe=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_upgrademe.InitButton("1号按钮150_60");
    			this.btn_upgrademe.sName="人物升级";

    			this.btn_petfight=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_petfight.InitButton("1号按钮150_60");
    			this.btn_petfight.sName="宠物出战";

    			this.btn_petpoint=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_petpoint.InitButton("1号按钮150_60");
    			this.btn_petpoint.sName="宠物加点";

    			this.bInited=true;
    		}
    		var offx = Gameing.iTopIconOffX;
    		
    		this.btn_upgrade.Move(offx, 10, 72, 72);
    		this.btn_upgrade.Draw();
    		GmPlay$1.xani_icon.DrawAnima(this.btn_upgrade.iX + 48, 2, "红点提示", 0);
    		M3DFast$1.gi().DrawText_2(this.btn_upgrade.iX+36, this.btn_upgrade.iY+71, "提升", 0xfffdf5e8, 22, 101, 1, 1, 0, -2, -3,3,0xff1a0000);
    		
    		if(this.bOpen)
    		{
    			offx+=6;
    			var offy=90,offh=90;
    			var pet=MyPets$1.mp.GetUseingPet();
    			
    			if(GmMe$1.me.rbs.nut>0)offh+=65;
    			if(GmMe$1.me.rbs.iExp>=GameData$1.iUpgradeExp[GmMe$1.me.rbs.iLev])offh+=65;
    			if(MyPets$1.mp.iPetCount>0 && pet==null)offh+=65;
    			if(pet!=null && pet.nut>0)offh+=65;
    			
    			
    			this.frame_type4("17号框20_20", offx-50-5, offy-5, 160, offh-offy+5, 20, 20);
    			
    			if(GmMe$1.me.rbs.nut>0)
    			{
    				this.btn_addpoint.Move(offx-50, offy, 150, 60);
    				this.btn_addpoint.Draw();
    				offy+=65;
    			}
    			if(GmMe$1.me.rbs.iExp>=GameData$1.iUpgradeExp[GmMe$1.me.rbs.iLev])
    			{
    				this.btn_upgrademe.Move(offx-50, offy, 150, 60);
    				this.btn_upgrademe.Draw();
    				offy+=65;
    			}
    			if(MyPets$1.mp.iPetCount>0 && pet==null)
    			{
    				this.btn_petfight.Move(offx-50, offy, 150, 60);
    				this.btn_petfight.Draw();
    				offy+=65;
    			}
    			if(pet!=null && pet.nut>0)
    			{
    				this.btn_petpoint.Move(offx-50, offy, 150, 60);
    				this.btn_petpoint.Draw();
    				offy+=65;
    			}
    		}
    		
    		Gameing.iTopIconOffX += 90;
    	}
    	frame_type4( name, xx, yy, iW, iH, iBw, iBh)
    	{
    		M3DFast$1.gi().FillRect_2D(xx,yy,xx+iW,yy+iH, 0x80000000);
    //		if(iW-iBw-iBw>0 && iH-iBh-iBh>0)GmPlay.xani_frame.DrawAnimaEx(xx+iBw-2, yy+iBh-2,name, 8, 101, 1.0f*(iW-iBw-iBw+4)/iBw, 1.0f*(iH-iBh-iBh+4)/iBh, 0, 0, 0);
    		if(iW-iBw-iBw>0)GmPlay$1.xani_frame.DrawAnimaEx(xx+iBw-2, yy,name, 1, 101, 1.0*(iW-iBw-iBw+4)/iBw, 1, 0, 0, 0);
    		if(iH-iBh-iBh>0)GmPlay$1.xani_frame.DrawAnimaEx(xx+iW-iBw, yy+iBh-2,name, 3, 101, 1,1.0*(iH-iBh-iBh+4)/iBh, 0, 0, 0);
    		if(iW-iBw-iBw>0)GmPlay$1.xani_frame.DrawAnimaEx(xx+iBw-2, yy+iH-iBh,name, 5, 101, 1.0*(iW-iBw-iBw+4)/iBw, 1, 0, 0, 0);
    		if(iH-iBh-iBh>0)GmPlay$1.xani_frame.DrawAnimaEx(xx, yy+iBh-2,name, 7, 101, 1,1.0*(iH-iBh-iBh+4)/iBh,  0, 0, 0);
    		
    		GmPlay$1.xani_frame.DrawAnimaEx(xx,yy,name,0,101,1,1,0,0,0);
    		GmPlay$1.xani_frame.DrawAnimaEx( (xx+iW-1*(iBw)),yy,name,2,101,1,1,0,0,0);
    		GmPlay$1.xani_frame.DrawAnimaEx( (xx+iW-1*(iBw)), (yy+iH-1*(iBh)),name,4,101,1,1,0,0,0);
    		GmPlay$1.xani_frame.DrawAnimaEx(xx, (yy+iH-1*(iBh)),name,6,101,1,1,0,0,0);
    		
    		GmPlay$1.xani_frame.DrawAnimaEx(xx+iW/2,yy+1,name,8,101,1,1,0,0,0);
    	}
    	ProcTouch( msg, x, y)
    	{
    		if (MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return false;
    		if(GmMe$1.me.rbs.iLev>=40)return false;
    		if (!this.bShow)return false;
    		if (!this.bInited)return false;
    		
    		if(this.bOpen)
    		{
    			var pet=MyPets$1.mp.GetUseingPet();
    			
    			if(GmMe$1.me.rbs.nut>0)
    			{
    				if(this.btn_addpoint.ProcTouch(msg, x, y))
    				{
    					if(this.btn_addpoint.bCheck())
    					{
    						XmsEngine.pxe.RunXms("人物加点");
    						this.bOpen=false;
    					}
    					return true;
    				}
    			}
    			if(GmMe$1.me.rbs.iExp>=GameData$1.iUpgradeExp[GmMe$1.me.rbs.iLev])
    			{
    				if(this.btn_upgrademe.ProcTouch(msg, x, y))
    				{
    					if(this.btn_upgrademe.bCheck())
    					{
    						var maf=MyAttFrame.Open(0);
    						maf.Draw();
    						BeginersGuide.gi().SetGuideExt(maf.btn_upgrade.iX, maf.btn_upgrade.iY, maf.btn_upgrade.iW, maf.btn_upgrade.iH, -1, "");
    						this.bOpen=false;
    					}
    					return true;
    				}
    			}
    			if(MyPets$1.mp.iPetCount>0 && pet==null)
    			{
    				if(this.btn_petfight.ProcTouch(msg, x, y))
    				{
    					if(this.btn_petfight.bCheck())
    					{
    						var pf=PetsFrame.Open();
    						pf.Draw();
    						BeginersGuide.gi().SetGuideExt(pf.btn_joinfight.iX, pf.btn_joinfight.iY, pf.btn_joinfight.iW, pf.btn_joinfight.iH, -1, "");
    						this.bOpen=false;
    					}
    					return true;
    				}
    			}
    			if(pet!=null && pet.nut>0)
    			{
    				if(this.btn_petpoint.ProcTouch(msg, x, y))
    				{
    					if(this.btn_petpoint.bCheck())
    					{
    						var pf=PetsFrame.Open();
    						pf.Draw();
    						BeginersGuide.gi().SetGuideExt(pf.btn_addpoint.iX, pf.btn_addpoint.iY, pf.btn_addpoint.iW, pf.btn_addpoint.iH, -1, "");
    						this.bOpen=false;
    					}
    					return true;
    				}
    			}
    		}
    		if(this.btn_upgrade.ProcTouch(msg, x, y))
    		{
    			if(this.btn_upgrade.bCheck())
    			{
    				this.btn_addpoint.SetNormal();
    				this.btn_upgrademe.SetNormal();
    				this.btn_petfight.SetNormal();
    				this.btn_petpoint.SetNormal();
    				this.bOpen=true;
    			}
    			return true;
    		}
    		this.bOpen=false;
    		return false;
    	}
    }
    StrengthUpgrade.su = new StrengthUpgrade();

    class UpgradeEffect {

    	constructor()
    	{
    		this.iProc=new Int32Array(4);
    		for(var i=0;i<4;i++)this.iProc[i]=-1;
    	}
    	Init()
    	{
    		for(var i=0;i<4;i++)this.iProc[i]=6-i*2;
    	}
    	Draw()
    	{
    		if(MissionFinish.mf.iProc[0]>=0)return;
    		if(this.iProc[0]<0)return;
    		var i,j=0;
    		for(i=0;i<4;i++)
    		{
    			switch(this.iProc[i])
    			{
    			case 6:
    				GmPlay$1.xani_skills[0].DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "升级大字", i, 20, 2.2, 2.2, 0, 0, 0);
    				break;
    			case 7:
    				GmPlay$1.xani_skills[0].DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "升级大字", i, 40, 1.9, 1.9, 0, 0, 0);
    				break;
    			case 8:
    				GmPlay$1.xani_skills[0].DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "升级大字", i, 60, 1.6, 1.6, 0, 0, 0);
    				break;
    			case 9:
    				GmPlay$1.xani_skills[0].DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "升级大字", i, 80, 1.3, 1.3, 0, 0, 0);
    				break;
    			case 10:
    				GmPlay$1.xani_skills[0].DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "升级大字", i, 101, 1.0, 1.0, 0, 0, 0);
    				break;
    			case 11:
    				GmPlay$1.xani_skills[0].DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "升级大字", i, 101, 0.7, 0.7, 0, 0, 0);
    				break;
    			case 12:
    				GmPlay$1.xani_skills[0].DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "升级大字", i, 101, 1.0, 1.0, 0, 0, 0);
    				break;
    //			case 13:
    //				GmPlay.xani_nui3.DrawAnimaEx(GmConfig.SCRW/2-90-45+i*90, 90+45, "任务完成", i, 101, 1f, 1f, 0, 0, 0);
    //				break;
    //			case 14:
    //				GmPlay.xani_nui3.DrawAnimaEx(GmConfig.SCRW/2-90-45+i*90, 90+45, "任务完成", i, 101, 0.8f, 0.8f, 0, 0, 0);
    //				break;
    //			case 15:
    //				GmPlay.xani_nui3.DrawAnimaEx(GmConfig.SCRW/2-90-45+i*90, 90+45, "任务完成", i, 101, 0.9f, 0.9f, 0, 0, 0);
    //				break;
    			case 16:
    			default:
    				GmPlay$1.xani_skills[0].DrawAnimaEx(GmConfig$1.SCRW/2-90-45+i*90, 90+45, "升级大字", i, 101, 1, 1, 0, 0, 0);
    				break;
    			}
    			if(this.iProc[i]<20)this.iProc[i]++;
    			else j++;
    		}
    		if(j==4)this.iProc[0]=-1;
    	}
    }
    UpgradeEffect.ue=new UpgradeEffect();

    class BuyGoods
    {/*
    	int iGid;
    	int iPrice;
    	int iTid;
    	int iCount;
    	
    	AnimaAction aa;
    	*/
    	constructor()
    	{
    		this.aa=new AnimaAction();
    	}
    }
    class BuyPets
    {/*
    	int iPid;
    	int iPrice;
    	int iTid;
    	String sName;*/
    	constructor()
    	{

    	}
    }

    class MyBuy {

    	constructor()
    	{
    		var i;
    		this.bBuying=false;
    		this.bg=new Array(20);//
    		this.goods =new Array(20);//
    		this.bp=new Array(8);//
    		for(i=0;i<20;i++)
    		{
    			this.bg[i]=new BuyGoods();
    			this.goods[i]=new Goods();
    		}
    		for(i=0;i<8;i++)this.bp[i]=new BuyPets();
    		
    		this.iW=900;
    		this.iH=580;
    		
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		
    		this.btn_buy=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_buy.InitButton("按钮1_110");
    		this.btn_buy.sName="购买";
    		
    		this.btn_watch=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_watch.InitButton("按钮1_110");
    		this.btn_watch.sName="查看";
    		
    		this.in_count=new XInputNumber(GmPlay$1.xani_nui3);
    		this.in_count.iNumber=1;
    		
    		this.iPetPoint=-1;
    	}

    	Draw()
    	{
    		var i,j;
    		var ox,oy;
    		var offx,offy;
    		if(!this.bBuying)return;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		DrawMode$1.new_baseframe2(this.iX,this.iY,this.iW,this.iH,"摊","位");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.Draw();
    		DrawMode$1.new_framein(this.iX+30,this.iY+30,this.iW-60,this.iH-60);
    		
    		DrawMode$1.new_numberframe(this.iX+30+20, this.iY+30+30-5, 430+20+345-110, this.sSellName+"   ---   ("+this.sSeller+this.iSellerId+")");
    		this.btn_watch.Move(this.iX+30+20+(430+20+345-110), this.iY+30+30-5-1, 110, 52);
    		this.btn_watch.Draw();
    		
    		offx=this.iX+30+20;
    		offy=this.iY+30+30+40+30;
    		GmPlay$1.xani_nui3.DrawAnima(offx, offy, "摊位分类框",0);
    		M3DFast$1.gi().DrawTextEx(offx+105/2, offy+33/2, "物品", 0xffffffff, 25, 101, 1, 1, 0, -2, -2);
    		offy+=33+10;
    		this.iGx=offx;
    		this.iGy=offy;
    		GoodsDraw.new_DrawGoods(offx,offy, this.goods, null,null);

    		for(i=0;i<20;i++){
    			if(this.bg[i].iGid>0 && this.bg[i].iPrice==0)
    			{
    				ox=this.iGx+5+i%5*85;
    				oy=this.iGy+5+Math.floor(i/5)*85;
    				GmPlay$1.xani_nui3.DrawAnima(ox, oy, "观赏标签",0);
    			}
    		}
    		
    		var gap=32+10;
    		//宠物部分
    		offx=this.iX+30+20+430+20;
    		offy=this.iY+30+30+40+30;
    		GmPlay$1.xani_nui3.DrawAnima(offx, offy, "摊位分类框",0);
    		M3DFast$1.gi().DrawTextEx(offx+105/2, offy+33/2, "宠物", 0xffffffff, 25, 101, 1, 1, 0, -2, -2);
    		offy+=33+10;
    		this.iPx=offx;
    		this.iPy=offy;
    		DrawMode$1.new_frameon(offx, offy, 345, 175, 0);
    		for(i=0;i<8;i++)
    		{
    			ox=offx+5+i%4*85;
    			oy=offy+5+Math.floor(i/4)*85;
    			
    			GmPlay$1.xani_nui3.DrawAnima(ox,oy, "基本头像框",0);

    			if(this.bp[i].iPid<=0)continue;

    			GmPlay$1.xani_head.DrawAnima_aa(ox+3,oy+3,GmPlay$1.de_pet.strValue(this.bp[i].iTid, 0, 1),0);//宠物头像
    			if(this.bp[i].iPrice==0)GmPlay$1.xani_nui3.DrawAnima(ox, oy, "观赏标签",0);
    //			M3DFast.gi().DrawTextEx(offx, offy+i*offh+10, this.bp[i].sName, c, 20, 101, 1, 1, 0, 0, -2);
    //			if(this.bp[i].iPrice==0)M3DFast.gi().DrawTextEx(offx+offw-80, offy+i*offh+10, "观赏", c, 20, 101, 1, 1, 0, -3, -2);
    //			else M3DFast.gi().DrawTextEx(offx+offw-80, offy+i*offh+10, ""+this.bp[i].iPrice, c, 20, 101, 1, 1, 0, -3, -2);

    			if(this.iPetPoint==i)
    			{//选中，显示名字
    				GmPlay$1.xani_nui3.DrawAnimaEx(ox, oy, "物品选中框", 0, 101, 1, 1, 0, 0, 0);
    				DrawMode$1.new_TagText2(this.iPx, this.iPy+175+10, 150, "名称", GmPlay$1.de_pet.strValue(this.bp[i].iTid, 0, 1));
    				
    				if(this.bp[i].iPrice==0)DrawMode$1.new_TagText2(this.iPx, this.iPy+175+10+gap, 150, "单价", "观赏");
    				else DrawMode$1.new_TagText2(this.iPx, this.iPy+175+10+gap, 150, "单价", ""+this.bp[i].iPrice);
    				DrawMode$1.new_TagText2(this.iPx, this.iPy+175+10+gap*2, 150, "总价", ""+this.bp[i].iPrice);
    				this.btn_buy.Move(this.iPx+235,this.iPy+175+10+gap*3-20,110,52);
    				this.btn_buy.Draw();
    			}
    		}
    		
    	//	DrawMode.new_TagText2(this.iPx, this.iPy+175+10, 150, "名称", MyPets.mp.pets[i].sName);
    		
    		if(this.lockgoods!=null)
    		{//显示购买
    			GoodsDraw.new_DrawRect(this.iGx,this.iGy, this.goods, this.lockgoods, 0);
    			for(i=0;i<20;i++)
    			{
    				if(this.bg[i].iGid>0 && this.bg[i].iGid==this.lockgoods.iGid)
    				{//物品名称
    					DrawMode$1.new_TagText2(this.iPx, this.iPy+175+10, 150, "名称", GmPlay$1.de_goods.strValue(this.lockgoods.iTid, -1, 4));
    					if(this.bg[i].iPrice==0)
    					{//价格0，观赏物品
    						DrawMode$1.new_TagText2(this.iPx, this.iPy+175+10+gap, 150, "单价", "观赏");
    						GoodsDraw.detail_add="#e#cc8bfe7观赏";
    					}
    					else
    					{//显示价格
    //						if(GmMe.me.rbs.iMoney<this.bg[i].iPrice*iBuyCount)iBuyCount=GmMe.me.rbs.iMoney/this.bg[i].iPrice;

    //						if(this.bg[i].iPrice<100000)M3DFast.gi().DrawText_2(this.iX+370, this.iY+this.iH-30-70, "单价:"+this.bg[i].iPrice, 0xffffffff, 20, 101, 1, 1, 0, 0, 0,1,0xff000000);
    //						else if(this.bg[i].iPrice<1000000)M3DFast.gi().DrawText_2(this.iX+370, this.iY+this.iH-30-70, "单价:"+this.bg[i].iPrice, 0xffffff00, 20, 101, 1, 1, 0, 0, 0,1,0xff000000);
    //						else if(this.bg[i].iPrice<10000000)M3DFast.gi().DrawText_2(this.iX+370, this.iY+this.iH-30-70, "单价:"+this.bg[i].iPrice, 0xff00ff00, 20, 101, 1, 1, 0, 0, 0,1,0xff000000);
    //						else M3DFast.gi().DrawText_2(this.iX+370, this.iY+this.iH-30-70, "单价:"+this.bg[i].iPrice, 0xffff00ff, 20, 101, 1, 1, 0, 0, 0,1,0xff000000);
    						DrawMode$1.new_TagText2(this.iPx, this.iPy+175+10+gap, 150, "单价", ""+Math.floor(this.bg[i].iPrice));
    						DrawMode$1.new_TagText2(this.iPx, this.iPy+175+10+gap*2, 150, "总价", ""+Math.floor(this.bg[i].iPrice*this.in_count.iNumber));
    						GoodsDraw.detail_add="#e#cc8bfe7单价："+Math.floor(this.bg[i].iPrice);//MyBuy.money_show(this.bg[i].iPrice);
    						//如果是可叠加物品，增加选择数量按钮
    						j=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 28);//是否叠加
    						if(j>1)
    						{//可叠加
    							this.in_count.Move(this.iPx+230, this.iPy+175+10,115);
    							this.in_count.Draw();
    						}
    					}
    				}
    			}
    			this.btn_buy.Move(this.iPx+235,this.iPy+175+10+gap*3-20,110,52);
    			this.btn_buy.Draw();
    		}
    		DrawMode$1.new_TagText2(this.iPx, this.iPy+175+10+gap*3, 150, "铜币", ""+GmMe$1.me.rbs.iMoney);

    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    		GoodsDraw.detail_add="";
    		
    		if(Confirm1.end(Confirm1.CONFIRM_MYBUY))
    		{//
    			if(Confirm1.bConfirm)
    			{//同意购买
    				if(this.lockgoods!=null)GmProtocol$1.gi().s_MyBuy(0,this.iSellerId,this.lockgoods.iGid,this.in_count.iNumber);
    				else if(this.iPetPoint!=-1)GmProtocol$1.gi().s_MyBuy(1,this.iSellerId,this.bp[this.iPetPoint].iPid,1);
    			}
    		}
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		var i,j;
    		var ox,oy;
    		if(this.iPetPoint>=0)
    		{
    			for(i=0;i<8;i++)
    			{
    				ox=this.iPx+5+i%4*85;
    				oy=this.iPy+5+Math.floor(i/4)*85;
    				if(this.bp[i].iPid>0)
    				{
    					if(XDefine$1.bInRect(x, y, ox,oy, 80,80))
    					{
    						if(this.iPetPoint==i)
    						{//点击两次，查看属性
    							if(msg==1)GmProtocol$1.gi().s_WatchOn(2,this.bp[this.iPetPoint].iPid,0,"");
    							return true;
    						}
    					}
    				}
    			}
    //			if(this.btn_watch.ProcTouch(msg, x, y))
    //			{
    //				if(this.btn_watch.bCheck())
    //				{//查看宠物属性
    //					GmProtocol.gi().s_WatchOn(2,this.bp[this.iPetPoint].iPid,0,"");
    //				}
    //				return true;
    //			}
    			if(this.btn_buy.ProcTouch(msg, x, y))
    			{
    				if(this.btn_buy.bCheck())
    				{
    					if(this.bp[this.iPetPoint].iPrice==0)EasyMessage.easymsg.AddMessage("观赏宠物，不能购买");
    					else if(GmMe$1.me.rbs.iMoney<this.bp[this.iPetPoint].iPrice)EasyMessage.easymsg.AddMessage("铜币不足，不能购买");
    					else  Confirm1.start(Confirm1.CONFIRM_MYBUY, "是否确定#e花费"+MyBuy.money_show(this.bp[this.iPetPoint].iPrice)+"#e购买#c00ff00["+this.bp[this.iPetPoint].sName+"]#cffffff？");
    				}
    				return true;
    			}
    		}
    		if(this.lockgoods!=null)
    		{//显示购买
    			for(i=0;i<20;i++)
    			{
    				if(this.bg[i].iGid>0 && this.bg[i].iGid==this.lockgoods.iGid)
    				{
    					if(this.bg[i].iPrice==0)
    					{//价格0，观赏物品
    					}
    					else
    					{//显示价格
    						//如果是可叠加物品，增加选择数量按钮
    						j=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 28);//是否叠加
    						if(j>1)
    						{//可叠加
    							if(this.in_count.ProcTouch(msg, x, y))
    							{
    									if(this.in_count.iNumber>=this.bg[i].iCount)this.in_count.iNumber=this.bg[i].iCount;
    									if(this.in_count.iNumber<0)this.in_count.iNumber=0;

    									if(GmMe$1.me.rbs.iMoney<this.bg[i].iPrice*this.in_count.iNumber)this.in_count.iNumber= Math.floor(GmMe$1.me.rbs.iMoney/this.bg[i].iPrice);
    								return true;
    							}
    						}
    					}
    					if(this.btn_buy.ProcTouch(msg, x, y))
    					{
    						if(this.btn_buy.bCheck())
    						{
    							if(this.bg[i].iPrice==0)EasyMessage.easymsg.AddMessage("观赏物品，不能购买");
    							else if(GmMe$1.me.rbs.iMoney<this.bg[i].iPrice*this.in_count.iNumber)EasyMessage.easymsg.AddMessage("铜币不足，不能购买");
    							else if(this.in_count.iNumber<=0)EasyMessage.easymsg.AddMessage("购买数量不能为0");
    							else Confirm1.start(Confirm1.CONFIRM_MYBUY, "是否确定#e花费"+MyBuy.money_show(this.bg[i].iPrice*this.in_count.iNumber)+"#e购买"+this.in_count.iNumber+"个#c00ff00["+GmPlay$1.de_goods.strValue(this.lockgoods.iTid, 0, 4)+"]#cffffff？");
    						}
    						return true;
    					}
    					break;
    				}
    			}
    		}
    		if(this.btn_watch.ProcTouch(msg, x, y))
    		{
    			if(this.btn_watch.bCheck())
    			{//查看摊主
    				GmProtocol$1.gi().s_WatchOn(0, this.iSellerId, 0,"");
    			}
    			return true;
    		}
    		this.lockgoods=GoodsDraw.new_LockGoods(x,y,this.iGx,this.iGy, this.goods,msg);
    		GoodsDraw.NoMove();
    		if(msg==3 && this.lockgoods!=null && GoodsDraw.bCanProc())
    		{
    		}
    		this.in_count.iNumber=1;
    		
    		this.iPetPoint=-1;
    		for(i=0;i<8;i++)
    		{
    			ox=this.iPx+5+i%4*85;
    			oy=this.iPy+5+Math.floor(i/4)*85;
    			if(this.bp[i].iPid>0)
    			{
    				if(XDefine$1.bInRect(x, y, ox,oy, 80,80))
    				{
    					this.iPetPoint=i;
    				}
    			}
    		}
    		
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				this.bBuying=false;
    			}
    			return true;
    		}
    		return true;
    	}
    	
    	InitBuy( drid, bname, sl)
    	{
    		var i;
    		this.iSellerId=drid;
    		this.sSellName=bname;
    		this.sSeller=sl;
    		this.bBuying=true;
    		for(i=0;i<20;i++)
    		{
    			this.bg[i].iGid=0;
    			this.goods[i].iGid=-1;
    		}
    		for(i=0;i<8;i++)
    		{
    			this.bp[i].iPid=0;
    		}
    	}
    	IndexBuy( pls)
    	{
    		var i,j;
    		i=pls.GetNextByte();
    		if(i==0)
    		{//获取物品列表
    			for(i=0;i<20;i++)
    			{
    				this.bg[i].iGid=-1;
    				this.goods[i].iGid=-1;
    			}
    			for(i=0;i<20;i++)
    			{
    				j=pls.GetNextByte();
    				if(j==0)break;
    				this.bg[i].iGid=pls.GetNextInt();
    				this.bg[i].iPrice=pls.GetNextInt();
    				this.bg[i].iTid=pls.GetNextShort();
    				this.bg[i].iCount=pls.GetNextShort();

    				this.goods[i].iGid=this.bg[i].iGid;
    				this.goods[i].iTid=this.bg[i].iTid;
    				this.goods[i].iCount=this.bg[i].iCount;
    				for(j=0;j<8;j++)this.goods[i].iAtts[j]=pls.GetNextInt();
    				this.goods[i].iPos=i;
    				GmPlay$1.xani_ngoods.InitAnimaWithName(GmPlay$1.de_goods.strValue(this.bg[i].iTid, 0, 10), this.goods[i].aa);
    			}
    		}
    		else if(i==1)
    		{//获取宠物列表
    			for(i=0;i<8;i++)this.bp[i].iPid=0;
    			for(i=0;i<8;i++)
    			{
    				j=pls.GetNextByte();
    				if(j==0)break;
    				this.bp[i].iPid=pls.GetNextInt();
    				this.bp[i].iPrice=pls.GetNextInt();
    				this.bp[i].iTid=pls.GetNextInt();
    				j=pls.GetNextShort();//baobao
    				this.bp[i].sName=GmPlay$1.de_pet.strValue(this.bp[i].iTid, 0, 1);
    				if((j&1)!=0)this.bp[i].sName=this.bp[i].sName+"宝宝";
    				if((j&2)!=0)this.bp[i].sName="变异"+this.bp[i].sName;
    			}
    		}
    	}
    }
    MyBuy.mb=null;
    MyBuy.gi=function()
    {
    	if(MyBuy.mb==null)MyBuy.mb=new MyBuy();
    	return MyBuy.mb;
    };
    MyBuy.its=function( i)
    	{
    		if(i>=1000)return ""+i;
    		if(i>=100)return "0"+i;
    		if(i>=10)return "00"+i;
    		if(i>=0)return "000"+i;
    		return "0000";
    	};
    MyBuy.money_show=function( money)
    	{
    		var a,b,c;
    		a=Math.floor(money/100000000);
    		b=Math.floor(money/10000)%10000;
    		c=money%10000;
    		if(a>0)return a+","+MyBuy.its(b)+","+MyBuy.its(c);
    		if(b>0)return b+","+MyBuy.its(c);
    		return ""+c;
    	};

    class GiveGoods extends BaseClass{

    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=30+430+20+280+30;
    		this.iH=30+345+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.givegoods=new Array(3);//
    		this.btn_goods=new Array(3);//
    		this.xigsub=new Int32Array(3);//
    		this.in_count=new Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.btn_goods[i]=new XButton(GmPlay$1.xani_nui3);
    			this.btn_goods[i].InitButton("物品格子");
    			
    			this.givegoods[i]=null;
    			this.xigsub[i]=1;
    			
    			this.in_count[i]=new XInputNumber(GmPlay$1.xani_nui3);
    			this.in_count[i].iNumber=1;
    		}
    		
    		this.in_money=new XInputNumber(GmPlay$1.xani_nui3);
    		this.in_money.iNumber=0;
    		this.in_money.MinMax(0, GmMe$1.me.rbs.iMoney);
    		
    		this.btn_give=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_give.sName="给予";
    		this.btn_give.InitButton("按钮1_110");
    		
    ///////////////////////////////////////////////////////
    		


    		this.bLocked=false;
    	}

    	Draw()
    	{
    		var i,j;
    		var offx,offy;
    		offx=this.iX+30;
    		offy=this.iY+30;
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		for(i=0;i<3;i++)this.xigsub[i]=this.in_count[i].iNumber;
    		GoodsDraw.new_DrawGoods(this.iX+30, this.iY+30, MyGoods.gi().goods[2], this.givegoods, this.xigsub);
    		if(this.lockgoods!=null)GoodsDraw.new_DrawRect(this.iX+30, this.iY+30, MyGoods.gi().goods[2], this.lockgoods, 0);
    		
    		offx+=430+20;
    		
    		for(i=0;i<3;i++)
    		{
    			this.btn_goods[i].Move(offx+i*(80+20), offy, 80, 80);
    			this.btn_goods[i].Draw();
    			if(this.givegoods[i]!=null)
    			{
    				GoodsDraw.new_DrawOneGoods_ext(this.btn_goods[i].iX, this.btn_goods[i].iY, this.givegoods[i], this.xigsub[i]);
    			}
    		}
    		for(i=0;i<3;i++)
    		{
    			if(this.givegoods[i]!=null)
    			{
    				j=GmPlay$1.de_goods.intValue(this.givegoods[i].iTid, 0, 28);
    				if(j>1)
    				{
    					this.in_count[i].Move(this.btn_goods[i].iX, this.btn_goods[i].iY+80, 80);
    					this.in_count[i].Draw();
    				}
    			}
    		}
    		offy+=80+50+20;
    		
    		this.pm3f.DrawTextEx(offx,offy+25, "铜币:", 0xff000000, 30, 101, 1, 1, 0, 0, -2);
    		DrawMode$1.DrawTextFrame1(this.in_money.iX, this.in_money.iY,this.in_money.iW);
    		this.in_money.Move(offx+100, offy, 150);
    		this.in_money.Draw();
    		
    		offy+=50+20;
    		this.pm3f.DrawTextEx(offx,offy+15, "铜币:"+GmMe$1.me.rbs.iMoney, 0xff000000, 30, 101, 1, 1, 0, 0, -2);

    		offy+=30+20;
    		DrawMode$1.new_Text(offx, offy, 150, GiveGoods.sName);
    		offy+=30+10;
    		DrawMode$1.new_Text(offx, offy, 150, "号码:"+GiveGoods.iRid);
    		
    		this.btn_give.Move(this.iX+this.iW-30-110, this.iY+this.iH-30-52-10, 110, 52);
    		this.btn_give.Draw();
    		
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i,j;
    		if(this.in_money.ProcTouch(msg, x,y))return true;
    		for(i=0;i<3;i++)
    		{
    			if(this.givegoods[i]!=null)
    			{
    				j=GmPlay$1.de_goods.intValue(this.givegoods[i].iTid, 0, 28);//是否可叠加
    				if(j>1)
    				{
    					if(this.in_count[i].ProcTouch(msg, x, y))return true;
    				}
    			}
    		}
    		this.lockgoods=GoodsDraw.new_LockGoods(x, y, this.iX+30, this.iY+30, MyGoods.gi().goods[2], msg);
    		GoodsDraw.NoMove();
    		if(msg==3 && this.lockgoods!=null && GoodsDraw.bCanProc())
    		{//点击物品
    			if(this.lockgoods.iAtts[7]!=0 && this.lockgoods.iTid!=123)
    			{
    				EasyMessage.easymsg.AddMessage("绑定物品不可给予");
    				return true;
    			}
    			//不在格子里的，直接放入
    			j=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 28);//是否可叠加
    //			if(i<=1)
    			{//不可叠加，直接放入格子
    				if(this.givegoods[0]==this.lockgoods || this.givegoods[1]==this.lockgoods || this.givegoods[2]==this.lockgoods)
    				{//已经放入了
    				}
    				else
    				{
    					for(i=0;i<3;i++)
    					{
    						if(this.givegoods[i]==null)
    						{
    							this.givegoods[i]=this.lockgoods;
    							this.in_count[i].iNumber=1;
    							if(j>1)this.in_count[i].MinMax(1, this.lockgoods.iCount);
    							break;
    						}
    					}
    				}
    //				else if(this.givegoods[0]==null)
    //				{
    //					this.givegoods[0]=this.lockgoods;
    //					this.in_count[0].iNumber=1;
    //				}
    //				else if(this.givegoods[1]==null)
    //				{
    //					this.givegoods[1]=this.lockgoods;
    //					this.in_count[1].iNumber=1;
    //				}
    //				else if(this.givegoods[2]==null)
    //				{
    //					this.givegoods[2]=this.lockgoods;
    //					this.in_count[2].iNumber=1;
    //				}
    			}
    		}
    		for(i=0;i<3;i++)
    		{
    			if(this.btn_goods[i].ProcTouch(msg,	x, y))
    			{
    				if(this.btn_goods[i].bCheck())
    				{
    					this.givegoods[i]=null;
    				}
    			}
    		}
    		
    		////////////////////////////////////////////
    		if(this.btn_give.ProcTouch(msg, x, y))
    		{
    			if(this.btn_give.bCheck())
    			{//发送给与物品和钱的消息
    				if(this.in_money.iNumber>0 && this.in_money.iNumber<=GmMe$1.me.rbs.iMoney)
    				{
    					GmMe$1.me.rbs.iMoney-=this.in_money.iNumber;
    					GmProtocol$1.gi().s_GiveGoods(0, GiveGoods.iRid, this.in_money.iNumber,1);
    				}
    				for(i=0;i<3;i++)
    				{
    					if(this.givegoods[i]!=null && this.givegoods[i].iGid!=-1)
    					{
    						GmProtocol$1.gi().s_GiveGoods(1, GiveGoods.iRid, this.givegoods[i].iGid,this.in_count[i].iNumber);
    						j=GmPlay$1.de_goods.intValue(this.givegoods[i].iTid, 0, 28);//是否可叠加
    						if(j<=1)this.givegoods[i].iGid=-1;
    						else
    						{
    							this.givegoods[i].iCount-=this.in_count[i].iNumber;
    							if(this.givegoods[i].iCount<=0)this.givegoods[i].iGid=-1;
    						}
    					}
    				}
    				
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}

    		if(msg==3 && !XDefine$1.bOnRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    		}
    		return false;
    	}
    }

    GiveGoods.iRid;
    GiveGoods.sName;

    GiveGoods.GiveTo=function( drid, dname)
    {
    	GiveGoods.iRid=drid;
    	GiveGoods.sName=dname;

    	XStat$1.gi().PushStat(XStat$1.GS_GIVEGOODS);
    };

    class SelectList
    {/*
    	int type;
    	String name;
    	Object point;*/
    	
    	constructor()
    	{
    		this.name="";
    	}
    }
    class NearBy {

    	constructor()
    	{
    		this.OFFX=GmConfig$1.SCRW/4*3;
    		this.OFFY=GmConfig$1.SCRH/4*1;
    		
    		var i;
    		this.sls=new Array(NearBy.MAXSELECTCOUNT);//
    		for(i=0;i<NearBy.MAXSELECTCOUNT;i++)
    		{
    			this.sls[i]=new SelectList();
    		}
    		this.iSelectCount=0;
    		
    		this.btn_operate=new Array(16);//
    		for(i=0;i<16;i++)
    		{
    			this.btn_operate[i]=new XButton(GmPlay$1.xani_nui3);
    			this.btn_operate[i].Move(this.OFFX+50+i%2*80,this.OFFY+50+parseInt(i/2)*50, 80, 50);
    			this.btn_operate[i].InitButton("附近操作按钮");
    			this.btn_operate[i].sName="无无";//80x50
    		}
    	}
    	Clear()
    	{
    		this.iSelectCount=0;
    		this.iSelectPoint=-1;
    		this.iOperatePoint=-1;
    	}
    	Add( type, name, point)
    	{
    		if(this.iSelectCount>=NearBy.MAXSELECTCOUNT)return;
    		this.sls[this.iSelectCount].type=type;
    		this.sls[this.iSelectCount].name=name;
    		this.sls[this.iSelectCount].point=point;
    		this.iSelectCount++;
    	}
    	OpenMyBuy( name, drid, sl)
    	{
    		if(MyBuy.gi().bBuying)return;
    		MyBuy.gi().InitBuy(drid,name,sl);
    		GmProtocol$1.gi().s_StartBuy(drid);
    	}
    	Draw()
    	{
    		var i;
    		var sw=160;
    		if(this.iSelectCount<=0)return;
    		this.OFFX=GmConfig$1.SCRW/8*5;
    		this.OFFY=GmConfig$1.SCRH/4*1;
    		for(i=0;i<16;i++)
    		{
    			this.btn_operate[i].Move(this.OFFX+80+10+i%2*77,this.OFFY+80+parseInt(i/2)*53, 72, 50);
    		}
    		if(this.iSelectCount==1)
    		{//
    			if(this.iOperatePoint!=0)
    			{
    				this.iOperatePoint=0;
    				var nr=this.sls[this.iOperatePoint].point;
    				this.iORid=nr.iRid;
    			}
    			else
    			{
    				var nr=this.sls[this.iOperatePoint].point;
    				if(this.iORid!=nr.iRid)
    				{
    					this.iSelectCount=0;
    					return;
    //					GmPlay.sop(".....................................@@@@@@@@@@@@--@@@@@@@@@@@@@@@@@---@@@@@@@@@@@@@@");
    				}
    			}
    			if(this.sls[this.iOperatePoint].type==3)
    			{//直接打开摊位
    				var nr=this.sls[this.iOperatePoint].point;
    				this.OpenMyBuy(nr.sSellName,nr.iRid,nr.sName);
    				this.iSelectCount=0;
    				return;
    			}
    		}
    		if(this.iOperatePoint==-1)
    		{//选择目标阶段
    			this.x1=this.OFFX+100;
    			this.y1=this.OFFY;
    			this.x2=this.x1+10+10+sw;
    			this.y2=this.y1+10+10+this.iSelectCount*30;
    			DrawMode$1.new_framepc(this.x1-5,this.y1-5, this.x2-this.x1+10,this.y2-this.y1+10);
    //			DrawMode.DrawFrame1(this.x1,this.y1, this.x2-this.x1,this.y2-this.y1);
    //			M3DFast.gi().FillRect_2D(this.x1,this.y1,this.x2,this.y2, 0xff505050);
    			M3DFast$1.gi().SetViewClip(this.x1, this.y1, this.x2, this.y2);
    			for(i=0;i<this.iSelectCount;i++)
    			{
    //				if(i%2==0)M3DFast.gi().FillRect_2D(this.x1+10, this.y1+10+i*30, this.x1+10+sw, this.y1+10+i*30+30, 0x30000000);
    				if(this.iSelectPoint==i)M3DFast$1.gi().FillRect_2D(this.x1+10, this.y1+10+i*30, this.x1+10+sw, this.y1+10+i*30+30, 0xff0000ff);
    				if(this.sls[i].type==2)M3DFast$1.gi().DrawTextEx(this.x1+10, this.y1+10+i*30+2, "[队]"+this.sls[i].name, 0xffffffff, 25, 101, 1, 1, 0, -1, -1);
    				else M3DFast$1.gi().DrawTextEx(this.x1+10, this.y1+10+i*30+2, this.sls[i].name, 0xffffffff, 25, 101, 1, 1, 0, -1, -1);
    			}
    			M3DFast$1.gi().NoClip();
    		}
    		else
    		{//操作目标阶段
    			switch(this.sls[this.iOperatePoint].type)
    			{
    			case 1://主角
    				var me=this.sls[this.iOperatePoint].point;
    			//	GmPlay.xani_head.DrawAnima(GmConfig.SCRW - 500 - i * 83,0, "新头像"+(iRace * 2 + iSex),0 );
    				GmPlay$1.xani_head.DrawAnima(this.OFFX-33,this.OFFY-10, "新头像"+(me.iRace*2+me.iSex),0);
    				GmPlay$1.xani_ui.DrawAnimaEx(this.OFFX+50,this.OFFY-10, "附近操作框",0,101,1,1,0,0,0);
    				M3DFast$1.gi().DrawTextEx(this.OFFX+60,this.OFFY-5, me.sName, 0xffffffff, 25, 101, 1, 1, 0, -1, -1);
    				M3DFast$1.gi().DrawTextEx(this.OFFX+60,this.OFFY+25, "号码:"+me.iRid, 0xffffffff, 20, 101, 1, 1, 0, -1, -1);
    				
    //				M3DFast.gi().FillRect_2D(this.OFFX+50,this.OFFY,this.OFFX+50+200,this.OFFY+25, 0xff505050);
    //				M3DFast.gi().DrawTextEx(this.OFFX+50,this.OFFY, me.sName, 0xffffffff, 25, 101, 1, 1, 0, -1, -1);
    //				M3DFast.gi().FillRect_2D(this.OFFX+50,this.OFFY+25,this.OFFX+50+200,this.OFFY+50, 0xff505050);
    //				M3DFast.gi().DrawTextEx(this.OFFX+50,this.OFFY+25, "ID:"+me.iRid, 0xffffffff, 25, 101, 1, 1, 0, -1, -1);
    				this.btn_operate[0].sName="组队";//80x50
    				this.btn_operate[0].Draw();
    				this.btn_operate[1].sName="摆摊";//80x50
    				this.btn_operate[1].Draw();
    //				this.btn_operate[3].sName="给予";//80x50
    //				this.btn_operate[3].Draw();
    				break;
    			case 2://队长
    			case 4://人
    				var nr=this.sls[this.iOperatePoint].point;
    				GmPlay$1.xani_head.DrawAnima(this.OFFX,this.OFFY, "新头像"+(nr.iRace*2+nr.iSex),0);
    				DrawMode$1.new_framepc(this.OFFX+80, this.OFFY, 169, 297);
    				M3DFast$1.gi().DrawTextEx(this.OFFX+80+10,this.OFFY+22, nr.sName, 0xffffffff, 25, 101, 1, 1, 0, -1, -2);
    				M3DFast$1.gi().DrawTextEx(this.OFFX+80+10,this.OFFY+58, "号码:"+nr.iRid, 0xffffffff, 25, 101, 1, 1, 0, -1, -2);

    				if(this.sls[this.iOperatePoint].type==2)this.btn_operate[0].sName="入队";
    				else this.btn_operate[0].sName="组队";//80x50
    				this.btn_operate[0].Draw();
    				this.btn_operate[1].sName="好友";//80x50
    				this.btn_operate[1].Draw();
    				this.btn_operate[2].sName="发送";//80x50
    				this.btn_operate[2].Draw();
    				this.btn_operate[3].sName="给予";//80x50
    				this.btn_operate[3].Draw();
    				this.btn_operate[4].sName="攻击";//80x50
    				this.btn_operate[4].Draw();
    				this.btn_operate[5].sName="查看";//80x50
    				this.btn_operate[5].Draw();
    				this.btn_operate[6].sName="交易";//80x50
    				this.btn_operate[6].Draw();
    				break;
    			case 3://摊位
    				break;
    			}
    		}
    	}
    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.iSelectCount<=0)return false;

    		if(this.iOperatePoint==-1)
    		{//选择目标阶段
    			this.iSelectPoint=-1;
    			for(i=0;i<this.iSelectCount;i++)
    			{
    				if(XDefine$1.bInRect(x, y, this.x1+10, this.y1+10+i*30, 160, 30))
    				{
    					this.iSelectPoint=i;
    				}
    			}
    			if(this.iSelectPoint!=-1 && msg==3)
    			{//选择了某个，放开按键，对其操作
    				this.iOperatePoint=this.iSelectPoint;
    				//如果是摊位，直接打开
    				if(this.sls[this.iOperatePoint].type==3)
    				{//直接打开摊位
    					var nr=this.sls[this.iOperatePoint].point;
    					this.OpenMyBuy(nr.sSellName,nr.iRid,nr.sName);
    					this.iSelectCount=0;
    					return true;
    				}
    			}
    			if(XDefine$1.bInRect(x, y, this.x1, this.y1, this.x2-this.x1, this.y2-this.y1))return true;
    		}
    		else
    		{
    			switch(this.sls[this.iOperatePoint].type)
    			{
    			case 1://主角
    				if(this.btn_operate[0].ProcTouch(msg, x, y))
    				{
    					if(this.btn_operate[0].bCheck())
    					{
    						var me=this.sls[this.iOperatePoint].point;
    						if(MyTeam$1.bNoTeam())GmProtocol$1.gi().s_TeamOperate(0,0,0);//组队
    //						else GmProtocol.gi().s_TeamOperate(1,0);//离开/解散队伍
    						this.Clear();
    					}
    					return true;
    				}
    				if(this.btn_operate[1].ProcTouch(msg, x, y))
    				{
    					if(this.btn_operate[1].bCheck())
    					{//摆摊
    						if(MyTeam$1.bInTeam())EasyMessage.easymsg.AddMessage("队伍中不能摆摊");
    						else if(MySell.gi().bSelling)MySell.gi().bShow=true;
    						else
    						{//开始摆摊
    							GmProtocol$1.gi().s_StartSell(0,0,0,"");
    						}
    						this.Clear();
    					}
    					return true;
    				}
    //				if(this.btn_operate[3].ProcTouch(msg, x, y))
    //				{
    //					if(this.btn_operate[3].bCheck())
    //					{//给与
    //						GiveGoods.GiveTo(GmMe.me.iRid,GmMe.me.sName);
    //						this.Clear();
    //					}
    //					return true;
    //				}
    				break;
    			case 2://队长
    			case 4://普通玩家
    				if(this.btn_operate[0].ProcTouch(msg, x, y))
    				{//组队
    					if(this.btn_operate[0].bCheck())
    					{
    						var nr=this.sls[this.iOperatePoint].point;
    						var me=Gameing.gameing.me;
    						if(MyTeam$1.bTeamLeader())
    						{//自己是队长，邀请对方入队
    							GmProtocol$1.gi().s_TeamOperate(6,nr.iRid,0);
    						}
    						else if(MyTeam$1.bNoTeam() && nr.iIsLeader==1)
    						{//自己没队，对方是队长，请求入队
    							GmProtocol$1.gi().s_TeamOperate(3,nr.iRid,0);
    						}
    						else if(MyTeam$1.bNoTeam())
    						{//自己没队，对方也没队，先自己组队，并且邀请对方入队
    						}
    						this.Clear();
    					}
    					return true;
    				}
    				if(this.btn_operate[1].ProcTouch(msg, x, y))
    				{
    					if(this.btn_operate[1].bCheck())
    					{//好友
    						var nr=this.sls[this.iOperatePoint].point;
    						GmProtocol$1.gi().s_FriendOperate(0,nr.iRid,0);
    						this.Clear();
    					}
    					return true;
    				}
    				if(this.btn_operate[2].ProcTouch(msg, x, y))
    				{
    					if(this.btn_operate[2].bCheck())
    					{//发送
    						var nr=this.sls[this.iOperatePoint].point;
    						PrivateChat_Send.OpenChat( nr.iRid, nr.sName,nr.iRace*2+nr.iSex);
    						this.Clear();
    					}
    					return true;
    				}
    				if(this.btn_operate[3].ProcTouch(msg, x, y))
    				{
    					if(this.btn_operate[3].bCheck())
    					{//给与
    						if(GmMe$1.me.bHaveLock && GmMe$1.me.bLocked)
    						{
    							EasyMessage.easymsg.AddMessage("未解锁不能给予");
    							return true;
    						}
    						if(MySell.gi().bSelling)
    						{
    							EasyMessage.easymsg.AddMessage("摆摊中不能给予");
    							return true;
    						}
    						var nr=this.sls[this.iOperatePoint].point;
    						GiveGoods.GiveTo(nr.iRid,nr.sName);
    						this.Clear();
    					}
    					return true;
    				}
    				if(this.btn_operate[4].ProcTouch(msg, x, y))
    				{
    					if(this.btn_operate[4].bCheck())
    					{//攻击
    						var nr=this.sls[this.iOperatePoint].point;
    						GmProtocol$1.gi().s_PK(nr.iRid);
    						this.Clear();
    					}
    					return true;
    				}
    				if(this.btn_operate[5].ProcTouch(msg, x, y))
    				{
    					if(this.btn_operate[5].bCheck())
    					{//查看
    						var nr=this.sls[this.iOperatePoint].point;
    						GmProtocol$1.gi().s_WatchOn(0, nr.iRid, 0,"");
    						//GmProtocol.gi().s_PK(nr.iRid);
    						this.Clear();
    					}
    					return true;
    				}
    				if(this.btn_operate[6].ProcTouch(msg, x, y))
    				{
    					if(this.btn_operate[6].bCheck())
    					{//查看
    						if(GmMe$1.me.bHaveLock && GmMe$1.me.bLocked)
    						{
    							EasyMessage.easymsg.AddMessage("未解锁不能交易");
    							return true;
    						}
    						var nr=this.sls[this.iOperatePoint].point;
    						GmProtocol$1.gi().s_Trade(0,nr.iRid,0,0,0,0,0,0,0,0,0);
    //						GmProtocol.gi().s_WatchOn(0, nr.iRid, 0,"");
    						//GmProtocol.gi().s_PK(nr.iRid);
    						this.Clear();
    					}
    					return true;
    				}
    				break;
    			}			
    		}
    		return false;
    	}
    }
    NearBy.MAXSELECTCOUNT=15;

    class _EXTBTNS
    {/*
    	int iShow;//1漫游，2战斗，3同时
    	XButtonEx2 btn_icon;
    	String sAnima;
    	String sCmd;*/
    	constructor()
    	{

    	}
    }
    class ExtendButton {

    	
    	constructor()
    	{
    		var i;
    		this.btns=new Array(ExtendButton.MAXBTN);//
    		for(i=0;i<ExtendButton.MAXBTN;i++)this.btns[i]=null;
    	}
    	
    	SetIcon( pls)
    	{
    		var show=pls.GetNextInt();
    		var iconanima=pls.GetNextString();
    		var iconcmd=pls.GetNextString();
    		
    		var i;
    		if(show==0)
    		{
    			for(i=0;i<ExtendButton.MAXBTN;i++)
    			{
    				if(this.btns[i]!=null)
    				{
    					if(this.btns[i].sCmd==iconcmd &&
    							this.btns[i].sAnima==iconanima)
    					{
    						this.btns[i]=null;
    						return;
    					}
    				}
    			}
    		}
    		else
    		{
    			for(i=0;i<ExtendButton.MAXBTN;i++)
    			{
    				if(this.btns[i]!=null)
    				{
    					if(this.btns[i].sCmd==iconcmd &&
    							this.btns[i].sAnima==iconanima)
    					{//已有相同按钮存在
    						return;
    					}
    				}
    			}
    			for(i=0;i<ExtendButton.MAXBTN;i++)
    			{
    				if(this.btns[i]==null)
    				{
    					this.btns[i]=new _EXTBTNS();
    					this.btns[i].btn_icon=new XButtonEx2$1(GmPlay$1.xani_button);
    					this.btns[i].btn_icon.InitButton(iconanima);
    					this.btns[i].sAnima=iconanima;
    					this.btns[i].sCmd=iconcmd;
    					this.btns[i].iShow=show;
    					return;
    				}
    			}
    		}
    	}
    	
    	Draw( showtype)
    	{
    		var i;
    		var iOffX=GmConfig$1.SCRW-120-ExtendButton.BW;
    		var iOffY=GmConfig$1.SCRH-120-ExtendButton.BH;
    		for(i=0;i<ExtendButton.MAXBTN;i++)
    		{
    			if(this.btns[i]!=null)
    			{
    				if((this.btns[i].iShow&showtype)!=0)
    				{
    					DrawMode$1.new_framepc(iOffX, iOffY, ExtendButton.BW, ExtendButton.BH);
    					this.btns[i].btn_icon.Move(iOffX, iOffY, ExtendButton.BW, ExtendButton.BH);
    					this.btns[i].btn_icon.Draw();
    					iOffX-=ExtendButton.BW-20;
    				}
    			}
    		}
    	}
    	ProcTouch( showtype, msg, x, y)
    	{
    		var i;
    		for(i=0;i<ExtendButton.MAXBTN;i++)
    		{
    			if(this.btns[i]!=null)
    			{
    				if((this.btns[i].iShow&showtype)!=0)
    				{
    					if(this.btns[i].btn_icon.ProcTouch(msg, x, y))
    					{
    						if(this.btns[i].btn_icon.bCheck())
    						{//点击后，发送按钮所触发的命令
    							GmProtocol$1.gi().s_ExtendCmd(this.btns[i].sCmd,"","","","","","","");
    						}
    						return true;
    					}
    				}
    			}
    		}
    		return false;
    	}
    }

    ExtendButton.MAXBTN=3;
    ExtendButton.BW=80;
    ExtendButton.BH=80;
    ExtendButton.peb=new ExtendButton();

    class ProgressBar {
    	
    	constructor()
    	{
    		this.iW=200;
    		this.iH=18+6;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)*2/3;
    		this.bShow=false;
    	}
    	
    	InitProgress( pls)
    	{
    		var i=pls.GetNextInt();
    		if(i<=0)this.bShow=false;
    		else
    		{
    			this.iStartMillis= GmPlay$1.iNowMillis;
    			this.iLastMillis= GmPlay$1.iNowMillis+i;
    			this.bShow=true;
    			this.sDetail=pls.GetNextString();
    			this.sCmd=pls.GetNextString();
    		}
    	}
    	Draw()
    	{
    		if(!this.bShow)return;
    		var f=1.0*(GmPlay$1.iNowMillis-this.iStartMillis)/(this.iLastMillis-this.iStartMillis);
    		
    		DrawMode$1.new_framepc(this.iX, this.iY, this.iW, this.iH);
    //		M3DFast.gi().FillRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0xffffffff);
    		
    		DrawMode$1.frame_type1("埋宝地进度条8_18", this.iX+3, this.iY+3,  (f*(this.iW-6)), 8);
    //		M3DFast.gi().FillRect_2D(this.iX+1, this.iY+1,  (this.iX+1+f*(this.iW-2)), this.iY+this.iH-1, 0xffff0000);
    		var i=GmPlay$1.iDelay/10;
    		var ss="";
    		if(i%3==0)ss=".";
    		if(i%3==1)ss="..";
    		if(i%3==2)ss="...";
    		M3DFast$1.gi().DrawTextEx(this.iX, this.iY-30, this.sDetail+ss, 0xffffff00, 30, 101, 1, 1, 0, 0, 0);
    		if(GmPlay$1.iNowMillis>=this.iLastMillis)this.bShow=false;
    	}
    	
    	ProcTouch( showtype, msg, x, y)
    	{
    		return false;
    	}
    }

    ProgressBar.ppb=null;
    ProgressBar.gi=function()
    {
    	if(ProgressBar.ppb==null)ProgressBar.ppb=new ProgressBar();
    	return ProgressBar.ppb;
    };

    class Gameing extends BaseClass{

    	findnrs( rid)
    	{
    		var i;
    		for(i=0;i<Gameing.iNearMax;i++)
    		{
    			if(this.nrs[i].bUseing && this.nrs[i].iRid==rid)return this.nrs[i];
    		}
    		return null;
    	}
    	ClearPopo()
    	{
    		var i;
    		for(i=0;i<Gameing.iNearMax;i++)
    		{
    			if(this.nrs[i].bUseing)this.nrs[i].iPopoDelay=0;
    		}
    	}
    	findnrsbyname( name)
    	{
    		var i;
    		for(i=0;i<Gameing.iNearMax;i++)
    		{
    			if(this.nrs[i].bUseing && this.nrs[i].sName==name)return this.nrs[i];
    		}
    		return null;
    	}

    	constructor( ani)
    	{
    		super();
    		var i;
    		Gameing.gameing=this;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		this.pls=new PackageTools(512*1024);
    		
    		this.m_map=MapManager.gi();
    //cxunmz		this.m_map.OpenProject("maps", this.pls);
    //		this.m_map.LoadMap("map1.map",50,50);
    		
    		this.m_dbf=DrawBuffer.gi();
    		
    		this.me=GmMe$1.me;
    		this.me.iX=50;this.me.iY=50;
    		this.me.iRid=0;
    //		GmPlay.xani_role1.InitAnimaWithName("站立_1", me.aa);
    		
    		this.nrs=new Array(Gameing.iNearMax);//
    		for(i=0;i<Gameing.iNearMax;i++)
    		{
    			this.nrs[i]=new NearRole();
    		}
    		
    		this.nb=new NearBy();
    		
    		this.aa_pos=GmPlay$1.xani_nui3.InitAnimaWithName("地图坐标", null);
    		this.aa_network=GmPlay$1.xani_nui2.InitAnimaWithName("网络状况", null);
    		this.aa_numtime=GmPlay$1.xani_nui2.InitAnimaWithName("时间", null);
    		this.aa_numpos=GmPlay$1.xani_nui2.InitAnimaWithName("坐标", null);
    		
    		this.oldhour=0;
    		 this.iFStat=0;//无，1按下
    		 this.iFDT1=0;this.iFDT2=0;this.iFDT3=0;
    	}
    	FreshNearRole()
    	{
    		var i;
    		for(i=0;i<Gameing.iNearMax;i++)
    		{
    			this.nrs[i].bsc=true;
    		}
    	}
    /*画面顺序
     * 地面层
     * 角色+景物+npc+气泡聊天
     * 天空层
    右上角UI(头像,血条，队伍按钮，队员头像列表，重置按钮)

    点击附近玩家后，出现快捷操作按钮列表

    左下公共聊天框

    方向盘控制行走

    右下角快捷系统按钮

    右侧好友列表

    物品装备框

    别人发的私聊消息

    宠物属性页面

    人物属性页面
     */
    	DrawMapUI()
    	{
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return;
    		var i,j,k;
    		this.aa_pos.Draw(0, 0);//框子
    		
    		j=GmPlay$1.xntf.NetBusy();//网络条
    		for(i=j;i<j+5;i++)
    		{
    			if(i<5)k=0;
    			else if(i<9)k=i-4;
    			else k=4;
    			this.aa_network.iFrame= k;
    			this.aa_network.Draw((i-j)*23, 0);
    		}
    		
    		//地图名字
    		this.pm3f.DrawText_2(59, 42, MapManager.gi().mapdata.sMapDetail, 0xffffffff, 20, 101, 1, 1, 0, -2, -2,1,0xff000000);
    //		this.aa_numtime.iFrame=10;//冒号
    //		this.aa_numtime.Draw(59-17, 23);
    //		this.aa_numtime.Draw(59+17, 23);
    		M3DFast$1.gi().DrawTextEx(59-17,17,":",0xffffffff,20,101,1,1,0,-2,-2);
    		M3DFast$1.gi().DrawTextEx(59+17,17,":",0xffffffff,20,101,1,1,0,-2,-2);
    		
    		//画时间
    		i= parseInt((GmPlay$1.iNowMillis-GmMe$1.iMillis)/1000);
    		
    		j=GmMe$1.iTime[2]+i%60;
    //		GmPlay.sop("j="+j+",GmMe.iTime[2]="+GmMe.iTime[2]+",i="+(i%60));
    		k=(j>=60)?1:0;
    //		DrawXY(59+35,23,14,j%60,this.aa_numtime,true);
    		j=j%60;
    		M3DFast$1.gi().DrawTextEx(59+35,17,""+parseInt(j/10)+(j%10),0xffffffff,20,101,1,1,0,-2,-2);
    		
    		j=GmMe$1.iTime[1]+parseInt(i/60)%60+k;
    		k=(j>=60)?1:0;
    //		DrawXY(59,23,14,j%60,this.aa_numtime,true);
    		j=j%60;
    		M3DFast$1.gi().DrawTextEx(59,17,""+parseInt(j/10)+(j%10),0xffffffff,20,101,1,1,0,-2,-2);

    		j=GmMe$1.iTime[0]+parseInt(i/60/60)+k;
    //		DrawXY(59-35,23,14,j%24,this.aa_numtime,true);
    		j=j%24;
    		M3DFast$1.gi().DrawTextEx(59-35,17,""+parseInt(j/10)+(j%10),0xffffffff,20,101,1,1,0,-2,-2);
    		if(this.oldhour==23 && j==0)
    		{//清除背包中的五行本源
    			for(var m=0;m<20;m++)
    			{
    				if(MyGoods.gi().goods[2][m].iGid>0 && MyGoods.gi().goods[2][m].iTid>=347 && MyGoods.gi().goods[2][m].iTid<=351)MyGoods.gi().goods[2][m].iGid=-1;
    				if(MyGoods.gi().goods[3][m].iGid>0 && MyGoods.gi().goods[3][m].iTid>=347 && MyGoods.gi().goods[3][m].iTid<=351)MyGoods.gi().goods[3][m].iGid=-1;
    			}
    		}
    		this.oldhour=j;

    //		this.aa_numpos.iFrame=10;
    //		this.aa_numpos.Draw(59-40, 75);
    //		this.aa_numpos.iFrame=11;
    //		this.aa_numpos.Draw(59+19, 75);
    		M3DFast$1.gi().DrawTextEx(59,69,":",0xffffff00,20,101,1,1,0,-2,-2);
    //		this.aa_numpos.iFrame=12;
    //		this.aa_numpos.Draw(59, 75);//坐标
    //		DrawXY(59-30,75,12,GmMe.me.iX/16,this.aa_numpos,false);
    //		DrawXY(59+30,75,12,GmMe.me.iY/16,this.aa_numpos,false);
    		M3DFast$1.gi().DrawTextEx(59-30,69,""+parseInt(GmMe$1.me.iX/16),0xffffff00,20,101,1,1,0,-2,-2);
    		M3DFast$1.gi().DrawTextEx(59+30,69,""+parseInt(GmMe$1.me.iY/16),0xffffff00,20,101,1,1,0,-2,-2);

    //		GmPlay.xani_ui2.DrawAnima_aa(50, 40, aa_xy.iAnimaPoint,10);
    //		DrawXY(25,40,GmMe.me.iX/16);
    //		DrawXY(25+50,40,GmMe.me.iY/16);
    		
    		
    //		this.pm3f.DrawTextEx(50, 28, "X:"+GmMe.me.iX/16+",Y:"+GmMe.me.iY/16, 0xffffffff, 16, 101, 1, 1, 0, -2, 0);
    //		GmPlay.sop("MapManager.gi().vbk.iGoToNpcId=="+MapManager.gi().vbk.iGoToNpcId);
    //		Calendar c = Calendar.getInstance();
    //		var hour = c.get(Calendar.HOUR_OF_DAY);
    //		var minute = c.get(Calendar.MINUTE);
    //		var second = c.get(Calendar.SECOND);
    //		this.pm3f.DrawTextEx(100, 0,""+hour+":"+minute+":"+second, 0xffffffff, 16, 101, 1, 1, 0, 0, 0);
    	}
    	

    	Draw()
    	{
    		var i,j,k;
    //		GmPlay.sop("aaaaaa");
    //		this.pm3f.FillRect_2D(0, 0, this.pm3f.imf.SCRW, this.pm3f.imf.SCRH, 0xff000000);

    //GmPlay.sop("bbbbbb");
    		//////////////////////////////////////////////////////////////////////////////////////////~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~地图开始
    //		SystemOperate.iScreenLS=0;
    		// SystemOperate.SetScreenMode(10);
    		if(MapManager.gi().bMapLoaded)this.m_map.mto(this.me.iX,this.me.iY);

    		if(MapManager.gi().bMapLoaded)this.m_map.DrawGround();
    //		SystemOperate.SetScreenMode(10);
    		if(XFight.bFighting)
    		{//战斗中
    			MapManager.gi().iMapChangeing=0;
    			if(MapManager.gi().bMapLoaded)this.m_map.DrawMiddleDirect();
    			SystemOperate.SetScreenMode(11);
    			XFight.gi().Draw_UI1();
    			SystemOperate.SetScreenMode(10);
    			XFight.gi().Draw();
    			SystemOperate.SetScreenMode(11);
    			XFight.gi().Draw_UI2();
    			
    			PublicChat_SmallFrame.gi().Draw();//公聊
    			
    			this.DrawMapUI();
    			AutoFightFrame.aff.Draw();
    			this.me.TeamFollow();
    			
    			PublicChat_BigFrame.gi().Draw();
    			PrivateChatWatch.gi().Draw();//看别人发来的消息
    			
    			ExtendButton.peb.Draw(2);

    			this.me.DrawExp();
    			
    			if(XFight.gi().iAlphaEffect>=GmConfig$1.SCRW || XFight.gi().iFightStat!=300)return;
    			SystemOperate.SetScreenMode(10);
    		}
    		/////////////////////////////////////////////
    		this.m_dbf.ClearBuffer();
    		if(MapManager.gi().bMapLoaded)this.m_map.DrawMiddle(this.m_dbf);//地图中间层

    		//画主角自己
    		this.me.Draw();
    		ShowPath.psp.Draw();

    		this.me.next(this.m_map.mfy.iPath,this.m_map.mfy.iPathDeep);//走路

    		if(GmConfig$1.bDebug)
    		{
    			for(i=1;i<this.m_map.mfy.iPathDeep;i++)
    			{
    				M3DFast$1.gi().DrawLine(MapManager.gi().iOffx+this.m_map.mfy.iPath[i][0], MapManager.gi().iOffy+this.m_map.mfy.iPath[i][1],
    						MapManager.gi().iOffx+this.m_map.mfy.iPath[i-1][0], MapManager.gi().iOffy+this.m_map.mfy.iPath[i-1][1], 0xffff0000);
    			}
    			if(MapManager.gi().bMapLoaded)MapManager.gi().mfy.Draw();
    		}

    		this.me.TeamFollow();

    		//画附近玩家
    		this.iNearRoleCount=0;
    		for(i=0;i<Gameing.iNearMax;i++)
    		{
    			if(this.nrs[i].bUseing)
    			{
    				this.nrs[i].Go();
    				this.nrs[i].Draw();
    				this.iNearRoleCount++;
    			}
    		}
    		
    		this.m_dbf.SortAndDraw();
    		FireworksEffect.fe.Draw();
    		/////////////////////////////////////////////
    		if(MapManager.gi().bMapLoaded)this.m_map.DrawSky();

    		SystemOperate.SetScreenMode(11);
    		/////////////////////////////////////////////////////////////////////////////////////////////////////~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~地图结束
    		this.me.DrawUI();//右上角头像，血条，队伍人员等

    		this.DrawMapUI();//左上角

    		this.nb.Draw();//对其他玩家快捷操作

    		PublicChat_SmallFrame.gi().Draw();//左下公共聊天框
    		SteeringWheel.sw.Draw();//方向盘控制行走

    		FastButton.gi().Draw();//右下角快捷按钮
    		FriendList$1.gi().Draw();//好友列表
    		MissionLead.gi().Draw();
    //		MyGoods.gi().Draw();//物品，装备框
    		

    //		if(PrivateChat.pc.bShow)PrivateChat.pc.Draw();
    		PrivateChatWatch.gi().Draw();//看别人发来的消息
    	//	GmPlay.sop(""+PrivateChatWatch.gi().iMessageCount);

    //		M3DFast.gi().SetViewClip(10, 10, 100, 100);
    //		M3DFast.gi().FillRect_2D(0, 0, GmConfig.SCRW, GmConfig.SCRH, 0xffffffff);
    //		M3DFast.gi().DrawTextEx(0, 0, "大家好", 0xffff0000, 50, 101, 1, 1, 0, 0, 0);
    //		M3DFast.gi().NoClip();
    //		M3DFast.gi().DrawImageEx(0, 0, 0, trid, 0, 0, 1000, 1000, 101, 1, 1, 0, 0, 0);
    //		M3DFast.gi().DrawImageEx(0, 0, 0, 2, 0, 0, 500, 500, 101, 1, 1, 0, 0, 0);
    		if(Gameing.iFindWayOnce>0)Gameing.iFindWayOnce--;

    //		this.pm3f.DrawText(0, 0, "Gameing"+MapManager.gi().mapdata.iMapWidth+","+MapManager.gi().mapdata.iMapHeight, 0xffffffff);
    //		this.pm3f.DrawText(0, 30, "["+GmMe.me.iX+","+GmMe.me.iY, 0xffffffff);
    //		this.pm3f.DrawText(0, 30, MapManager.gi().mapdata.sMapName+"("+GmMe.me.iX+","+GmMe.me.iY+")", 0xffffffff);

    //		MyPets.mp.Draw();
    		
    		if(MySell.gi().bSelling)MySell.gi().Draw();
    		if(MyBuy.gi().bBuying)MyBuy.gi().Draw();
    		
    		TmpGoods.Draw();
    		MyAI.gi().Draw();
    		if(TeamCreate.iWaitingApplyMapId>0 && TeamCreate.iWaitingApplyMapId==MapManager.gi().iCurrentMapId)
    		{
    			TeamCreate.iWaitingApplyMapId=0;
    			GmProtocol$1.gi().s_TeamOperate(3, TeamCreate.iWaitingApplyRid, 0);
    		}
    		AutoFightFrame.aff.Draw();

    		GamePost.gi().Draw();
    		
    		
    		

    		Gameing.iTopIconOffX=130;
    		LeaderBoard.lb.Draw();
    		FiveGift.fg.Draw();
    		LoginGift.lg.Draw();
    		FirstCharge.fg.Draw();
    		StrengthUpgrade.su.Draw();
    		
    		if(this.iFStat==1)
    		{
    			this.iFDT2=XDefine$1.get_ms();
    			
    			if(this.iFDT2-this.iFDT1>500)
    			{//按下超过500ms，行走
    				this.iFDT1=this.iFDT2;
    				this.goon(this.iFX,this.iFY);
    //				GmPlay.sop("x="+this.iFX+",,,y="+this.iFY);
    			}
    		}
    		PublicChat_BigFrame.gi().Draw();
    		ExtendButton.peb.Draw(1);
    		this.m_map.vbk.mapdialog.Draw();
    		
    		MissionFinish.mf.Draw();
    		UpgradeEffect.ue.Draw();
    		
    		this.me.DrawExp();
    //		GmPlay.xani_skill.DrawAnima(300,300, "地阵_右",0);
    //		GmPlay.sop("flag="+MapManager.gi().vbk.iGoToNpcFlag+",id="+MapManager.gi().vbk.iGoToNpcId);
    //		GmPlay.xani_skill.DrawAnimaEx(500, 200, "火流星_左",GmPlay.iDelay/10,101,1,1,0,-1,-1);aas
    		JQMode.jq.JQLogic();
    		
    //		GmPlay.sop("SystemOperate.iPictureQuality="+SystemOperate.iPictureQuality+","+SystemOperate.iPictureBuffer);
    	}

    	ProcTouch( msg, x, y)
    	{
    		if(JQMode.jq.ProcTouch(msg, x, y))return true;
    		
    		if(AutoFightFrame.aff.ProcTouch(msg, x, y))return true;
    		if(XFight.bFighting)
    		{
    			if(ExtendButton.peb.ProcTouch(2,msg, x, y))return true;
    			if(PrivateChatWatch.gi().ProcTouch(msg, x, y))return true;
    			if(PublicChat_BigFrame.gi().ProcTouch(msg, x, y))return true;
    			if(PublicChat_SmallFrame.gi().ProcTouch(msg, x, y))return true;
    			//////////////////////////////////////////////////////////////////////////////////////////~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~地图开始
    			//SystemOperate.SetScreenMode(10);
    			//oldx=x;oldy=y;x=TouchManager._swapx(x);y=TouchManager._swapy(y);
    			XFight.gi().ProcTouch(msg, x, y);
    			//x=oldx;y=oldy;
    			//SystemOperate.SetScreenMode(11);
    			if(XFight.gi().iFightStat>=100)
    			{
    				if(FriendList$1.gi().ProcTouch(msg, x, y))return true;
    			}
    			return true;
    		}
    		
    		if(XStat$1.gi().iXStat==XStat$1.GS_GAMEING)
    		{
    			if(FastGoods.gi().ProcTouch(msg,x,y))return true;
    		}
    		if(this.m_map.vbk.mapdialog.ProcTouch(msg,x,y))
    		{
    			//回答对话框选项
    			return true;
    		}
    		if(ExtendButton.peb.ProcTouch(1,msg, x, y))return true;
    		if(PrivateChatWatch.gi().ProcTouch(msg, x, y))return true;//私聊窗口
    		if(PublicChat_BigFrame.gi().ProcTouch(msg, x, y))return true;
    		
    		var i,j;
    		var oldx,oldy;
    		var ox=MapManager.gi().iOffx;
    		var oy=MapManager.gi().iOffy;
    		
    		oldx=x;oldy=y;//x=TouchManager._swapx(x);y=TouchManager._swapy(y);
    		if(msg==2 && this.iFStat==1)
    		{
    			this.iFDT2=XDefine$1.get_ms();
    			
    			if(this.iFDT2-this.iFDT1>50 && this.iFDT2-this.iFDT3>500)
    			{//按下超过500ms，行走
    				this.iFDT1=this.iFDT2;
    				this.iFX=x;this.iFY=y;
    				this.goon(x,y);
    			}
    			return true;
    		}
    		if(msg==3 && this.iFStat==1)
    		{
    			this.iFStat=0;
    			this.iFDT2=XDefine$1.get_ms();
    			if(this.iFDT2-this.iFDT3<500)
    			{//快速点击才打开
    				if(MapManager.gi().vbk.GoToNpc(x-this.m_map.iOffx,y-this.m_map.iOffy))
    				{//按在npc身上
    					if((MyTeam$1.bNoTeam() || MyTeam$1.bTeamLeader() || MyTeam$1.bAway()) && !MySell.gi().bSelling)
    					{//不在队里	或		自己是队长
    //						MyAI.gi().FindNpc(MapManager.gi().vbk.iLockNpcId);
    						x=MapManager.gi().vbk.iNpcX+this.m_map.iOffx;
    						y=MapManager.gi().vbk.iNpcY+this.m_map.iOffy;

    						if(this.m_map.mfy.findway(this.me.iX,this.me.iY,x-this.m_map.iOffx,y-this.m_map.iOffy))
    						{
    							if(this.m_map.mfy.checkagain())
    							{
    								this.me.start(this.m_map.mfy.iPath,this.m_map.mfy.iPathDeep);
    								
    								TouchEffect.te.Add(x-this.m_map.iOffx,y-this.m_map.iOffy);
    							}
    						}
    						this.nb.Clear();
    					}
    				}
    				else
    				{
    					this.nb.Clear();
    					if(MySell.gi().bSelling)
    					{//自己的摊位
    					}
    					for(i=0;i<Gameing.iNearMax;i++)
    					{//判断选中其他玩家,弹出快捷菜单，对其操作
    						if(this.nrs[i].bUseing)
    						{
    							if(SystemOperate.bShowRole || MyTeam$1.bInTmpTeam(this.nrs[i].iRid))
    							{
    								if(GmPlay$1.xani_newrole[this.nrs[i].iRace*2+this.nrs[i].iSex].bInAnima(this.nrs[i].aa_body, ox+this.nrs[i].iX, oy+this.nrs[i].iY, x, y) || XDefine$1.bInRect(x-this.m_map.iOffx,y-this.m_map.iOffy,this.nrs[i].iX-20,this.nrs[i].iY-60,40,60))
    								{
    									GmPlay$1.sop("ppp===="+this.nrs[i].aa_body.iAnimaPoint);
    									if(this.nrs[i].iIsLeader==1)this.nb.Add(2,this.nrs[i].sName,this.nrs[i]);//队长
    									else this.nb.Add(4,this.nrs[i].sName,this.nrs[i]);//非队长
    								}
    							}
    						}
    					}
    					if(SystemOperate.bShowSell)
    					{
    						for(i=0;i<Gameing.iNearMax;i++)
    						{//判断选中其他玩家,弹出快捷菜单，对其操作
    							if(this.nrs[i].bUseing && XDefine$1.bInRect(x, y, ox+this.nrs[i].iX-this.nrs[i].iSellWidth/2, oy+this.nrs[i].iY-140, this.nrs[i].iSellWidth, 40))
    							{
    								if(this.nrs[i].iIsSelling==1)this.nb.Add(3,this.nrs[i].sSellName,this.nrs[i]);//点中摊位
    							}
    						}
    					}
    					if(this.nb.iSelectCount==0)
    					{//什么都没按到的话，直接行走
    						this.goon(x,y);
    					}
    				}
    			}
    			else this.goon(x,y);
    			return true;
    		}
    		x=oldx;y=oldy;
    		
    		if(LeaderBoard.lb.ProcTouch(msg, x, y))return true;
    		if(FirstCharge.fg.ProcTouch(msg, x, y))return true;
    		if(FiveGift.fg.ProcTouch(msg, x, y))return true;
    		if(LoginGift.lg.ProcTouch(msg, x, y))return true;
    		if(StrengthUpgrade.su.ProcTouch(msg, x, y))return true;
    		if(GamePost.gi().ProcTouch(msg, x, y))return true;

    		if(MyAI.gi().ProcTouch(TouchManager.gi().procing.iTouchStat,TouchManager.gi().procing.iX,TouchManager.gi().procing.iY))return true;
    		if(TmpGoods.ProcTouch(msg, x, y))return true;

    		if(MyBuy.gi().bBuying)
    		{
    			MyBuy.gi().ProcTouch(msg,x,y);
    			return true;
    		}
    		if(MySell.gi().bSelling && MySell.gi().bShow)
    		{//摆摊页面无法做其他任何操作
    			MySell.gi().ProcTouch(msg, x, y);
    			return true;
    		}

    		if(this.me.ProcTouch_AttFrame(msg, x, y))return true;//人物属性，宠物属性
    //		if(MyGoods.gi().ProcTouch(msg, x, y))return true;//物品栏
    //		GmPlay.sop("111111111111");
    //		if(PrivateChat.pc.bShow)
    //		{
    //			if(PrivateChat.pc.ProcTouch(msg, x, y))return true;
    //		}
    //		GmPlay.sop("222222222222222222");
    		if(FriendList$1.gi().ProcTouch(msg, x, y))return true;//右边好友列表
    		if(PublicChat_SmallFrame.gi().ProcTouch(msg, x, y))return true;
    		if(ProgressBar.gi().bShow)return true;

    		if(MissionLead.gi().ProcTouch(msg, x, y))return true;//快捷任务指引
    		
    		if(FastButton.gi().ProcTouch(msg,x,y))return true;//右下快捷菜单
    //		GmPlay.sop("3333333333");
    		if(SteeringWheel.sw.ProcTouch(msg,x,y))return true;

    		if(this.me.ProcTouch(msg, x, y))return true;
    		if(this.nb.ProcTouch(msg, x, y))return true;//附近玩家快捷菜单
    		
    //		x= ((x*GmConfig.SCRH)/GmConfig.REALW);
    //		y= ((y*GmConfig.SCRW)/GmConfig.REALH);
    		//////////////////////////////////////////////////////////////////////////////////////////~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~地图开始
    		//SystemOperate.SetScreenMode(10);
    		oldx=x;oldy=y;//x=TouchManager._swapx(x);y=TouchManager._swapy(y);
    //		GmPlay.sop("x="+x+",,,,,,y="+y+",,,,,oldy="+oldy+",,,,,,mxh="+SystemOperate.MAXH+",,,,,,,sysh="+GmConfig.SYSH);
    		MyAI.gi().bFinding=false;//停止自动寻路
    		////开始判断行走----------------------------------------------------
    		if(msg==1)
    		{//按下，空地上的话马上行走，否则记录按下时间，等待
    			if(MapManager.gi().vbk.bOnNpc(x-this.m_map.iOffx,y-this.m_map.iOffy))
    			{//按在npc身上
    			}
    			else
    			{
    				this.nb.Clear();
    				if(MySell.gi().bSelling)
    				{//自己的摊位
    				}
    				j=0;
    				for(i=0;i<Gameing.iNearMax;i++)
    				{//判断选中其他玩家,弹出快捷菜单，对其操作
    					if(this.nrs[i].bUseing)
    					{
    						if(SystemOperate.bShowRole || MyTeam$1.bInTmpTeam(this.nrs[i].iRid))
    						{
    							if(GmPlay$1.xani_newrole[this.nrs[i].iRace*2+this.nrs[i].iSex].bInAnima(this.nrs[i].aa_body, ox+this.nrs[i].iX, oy+this.nrs[i].iY, x, y) || XDefine$1.bInRect(x-this.m_map.iOffx,y-this.m_map.iOffy,this.nrs[i].iX-20,this.nrs[i].iY-60,40,60))
    							{
    								j++;
    							}
    						}
    					}
    				}
    				if(SystemOperate.bShowSell)
    				{
    					for(i=0;i<Gameing.iNearMax;i++)
    					{//判断选中其他玩家,弹出快捷菜单，对其操作
    						if(this.nrs[i].bUseing && XDefine$1.bInRect(x, y, ox+this.nrs[i].iX-this.nrs[i].iSellWidth/2, oy+this.nrs[i].iY-140, this.nrs[i].iSellWidth, 40))
    						{
    							j++;
    						}
    					}
    				}
    				if(j==0)
    				{//什么都没按到的话，直接行走
    					this.goon(x,y);
    				}
    			}
    			this.iFStat=1;
    			this.iFX=x;this.iFY=y;
    			this.iFDT1=XDefine$1.get_ms();
    			this.iFDT3=XDefine$1.get_ms();
    		}
    		x=oldx;y=oldy;
    		//SystemOperate.SetScreenMode(11);
    		
    		if(1==1)
    		{
    			return false;
    		}
    		i=0;
    		if(MapManager.gi().vbk.GoToNpc(x-this.m_map.iOffx,y-this.m_map.iOffy))
    		{//判断是否点击npc，走向npc
    //			x=MapManager.gi().vbk.iNpcX+this.m_map.iOffx;
    //			y=MapManager.gi().vbk.iNpcY+this.m_map.iOffy;
    			i=1;
    			this.nb.Clear();
    		}
    		if(i==0)
    		{
    			this.nb.Clear();
    //			if(GmPlay.xani_role[GmMe.me.iRace*2+GmMe.me.iSex].bInAnima(me.aa_body, ox+me.iX, oy+me.iY, x, y))
    //			{//点中自己，加入列表
    //				this.nb.Add(1, me.sName, me);
    //			}
    			if(MySell.gi().bSelling)
    			{//自己的摊位
    			}

    			for(i=0;i<Gameing.iNearMax;i++)
    			{//判断选中其他玩家,弹出快捷菜单，对其操作
    				if(this.nrs[i].bUseing)
    				{
    					if(SystemOperate.bShowRole || MyTeam$1.bInTmpTeam(this.nrs[i].iRid))
    					{
    						if(GmPlay$1.xani_newrole[this.nrs[i].iRace*2+this.nrs[i].iSex].bInAnima(this.nrs[i].aa_body, ox+this.nrs[i].iX, oy+this.nrs[i].iY, x, y) || XDefine$1.bInRect(x-this.m_map.iOffx,y-this.m_map.iOffy,this.nrs[i].iX-20,this.nrs[i].iY-60,40,60))
    						{
    							if(this.nrs[i].iIsLeader==1)this.nb.Add(2,this.nrs[i].sName,this.nrs[i]);//队长
    							else this.nb.Add(4,this.nrs[i].sName,this.nrs[i]);//非队长
    						}
    					}
    				}
    			}
    			if(SystemOperate.bShowSell)
    			{
    				for(i=0;i<Gameing.iNearMax;i++)
    				{//判断选中其他玩家,弹出快捷菜单，对其操作
    					if(this.nrs[i].bUseing && XDefine$1.bInRect(x, y, ox+this.nrs[i].iX-this.nrs[i].iSellWidth/2, oy+this.nrs[i].iY-140, this.nrs[i].iSellWidth, 40))
    					{
    						if(this.nrs[i].iIsSelling==1)this.nb.Add(3,this.nrs[i].sSellName,this.nrs[i]);//点中摊位
    					}
    				}
    			}
    		}
    		MyAI.gi().bFinding=false;
    		if(this.nb.iSelectCount==0 && Gameing.iFindWayOnce<=0 && !MySell.gi().bSelling)//地图行走
    		{
    			Gameing.iFindWayOnce=1;
    			if(MyTeam$1.bNoTeam() || MyTeam$1.bTeamLeader() || MyTeam$1.bAway())
    			{//没队伍，或是队长，才能走
    				i=0;
    				if(MapManager.gi().vbk.GoToNpc(x-this.m_map.iOffx,y-this.m_map.iOffy))
    				{//判断是否点击npc，走向npc
    					x=MapManager.gi().vbk.iNpcX+this.m_map.iOffx;
    					y=MapManager.gi().vbk.iNpcY+this.m_map.iOffy;
    					i=1;
    				}
    				if(this.m_map.mfy.findway(this.me.iX,this.me.iY,x-this.m_map.iOffx,y-this.m_map.iOffy))
    				{
    //					GmPlay.sop("check again start");
    					if(this.m_map.mfy.checkagain())
    					{
    //						GmPlay.sop("check again end1");
    //					GmPlay.sop("From"+me.iX+","+me.iY+"To"+(x-this.m_map.iOffx)+","+(y-this.m_map.iOffy));
    //					for(i=0;i<this.m_map.mfy.iPathDeep;i++)
    //					{
    //						GmPlay.sop("path:"+i+",x:"+this.m_map.mfy.iPath[i][0]+",y:"+this.m_map.mfy.iPath[i][1]);
    //					}
    						if(i==0)
    						{
    							MapManager.gi().vbk.iGoToNpcFlag=-1;
    							MapManager.gi().vbk.iGoToNpcId=-1;
    						}
    						this.me.start(this.m_map.mfy.iPath,this.m_map.mfy.iPathDeep);
    					}
    	//				else GmPlay.sop("check again end2");
    				}
    				else
    				{
    					SteeringWheel.sw.bLocked=true;
    					SteeringWheel.sw.iLockX=x-(MapManager.gi().iOffx+GmMe$1.me.iX)+SteeringWheel.sw.iX;
    					SteeringWheel.sw.iLockY=y-(MapManager.gi().iOffy+GmMe$1.me.iY)+SteeringWheel.sw.iY;
    					SteeringWheel.sw.bAutoRun=true;
    				}
    			}
    		}
    //		ChatFrame.chat.AddMessage(0, 0, "你好", "谢谢"+GmPlay.iDelay);
    		return false;
    	}

    	
    	 goon( x, y)
    	{
    		if(Gameing.iFindWayOnce>0)return;
    		Gameing.iFindWayOnce++;
    		if(!MySell.gi().bSelling)
    		{
    			if(MyTeam$1.bNoTeam() || MyTeam$1.bTeamLeader() || MyTeam$1.bAway())
    			{//没队伍，或是队长，才能走
    				if(this.m_map.mfy.findway(this.me.iX,this.me.iY,x-this.m_map.iOffx,y-this.m_map.iOffy))
    				{
    					if(this.m_map.mfy.checkagain())
    					{
    						MapManager.gi().vbk.iGoToNpcFlag=-1;
    						MapManager.gi().vbk.iGoToNpcId=-1;
    						this.me.start(this.m_map.mfy.iPath,this.m_map.mfy.iPathDeep);
    						SteeringWheel.sw.bLocked=false;
    						SteeringWheel.sw.bAutoRun=false;
    						
    						TouchEffect.te.Add(x-this.m_map.iOffx,y-this.m_map.iOffy);
    					}
    				}
    				else
    				{
    					SteeringWheel.sw.bLocked=true;
    					SteeringWheel.sw.iLockX=x-(MapManager.gi().iOffx+GmMe$1.me.iX)+SteeringWheel.sw.iX;
    					SteeringWheel.sw.iLockY=y-(MapManager.gi().iOffy+GmMe$1.me.iY)+SteeringWheel.sw.iY;
    					SteeringWheel.sw.bAutoRun=true;
    				}
    			}
    		}
    	}
    }

    	Gameing.iNearMax=50;

    	Gameing.iFindWayOnce=0;
    	
    	Gameing.bSheildRoles=false;//屏蔽所有其他玩家
    	Gameing.bSheildUis=false;//屏蔽所有UI
    	
    	Gameing.iTopIconOffX;

    class MyFriends {
    /*	public boolean bUseing;
    	public boolean bOnLine;//在线
    	public boolean bBlack;//黑名单中
    	public int iRid;
    	public String sName;

    	public int iRelation;//关系
    	public int iAmity;//友好度
    	public int iTeam;//分组
    	public int iImportant;//重要性
    */
    	 MyFriends()
    	{
    		this.bUseing=false;
    		this.sName="";
    	}
    }

    class _ChatRecord
    {
        constructor()
        {

        }
    /*	public int fromid;
    	public int toid;
    	public String sName;
    	public String sDetail;
    	public String sTime;*/
    }

    class PrivateChatRecord extends BaseClass{
    	
    	
    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=600;
    		this.iH=500;
    //		this.iW=400;
    //		this.iH=300;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		this.iOffY=0;
    		this.bLock=false;
    	}

    	Draw()
    	{
    		var i;
    		var x;
    		var h;
    		var offy;
    		DrawMode$1.new_framewatch(this.iX, this.iY, this.iW, this.iH);
    		M3DFast$1.gi().SetViewClip(this.iX+20, this.iY+20, this.iX+this.iW-20, this.iY+this.iH-20);
    		x=this.iX+20;
    		offy=this.iOffY+this.iY+20;
    //		GmPlay.sop("fffffffff"+iRecordPoint);
    		for(i=0;i<iRecordPoint;i++)
    		{
    			if(crs[i].fromid!=iRid && crs[i].toid!=iRid)continue;
    			FormatString.gi().FormatEx(crs[i].sName+":"+crs[i].sDetail, this.iW-40,25,0,0,27);
    //			GmPlay.sop("asdfsdffsdf"+x+"zzz"+offy);
    			h=FormatString.gi().iH;
    			FormatString.gi().Draw(x, offy);
    			offy+=h+3;
    			if(offy>=this.iY+this.iH-20)break;
    		}
    		if(i>=iRecordPoint)
    		{//拉到顶了，不能再向上拉
    			this.bCanDown=false;
    		}
    		else this.bCanDown=true;
    		M3DFast$1.gi().NoClip();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		if(msg==1)
    		{//锁定位置
    			if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    			{
    				this.bLock=true;
    				this.iLockY=y;
    			}
    		}
    		else if(msg==2)
    		{//手指移动，上下拉动
    			if(this.bLock)
    			{
    				var i=y-this.iLockY;
    				if(i>0 && this.iOffY<0)this.iOffY+=i;
    				else if(this.bCanDown)this.iOffY+=i;
    				if(this.iOffY>0)this.iOffY=0;
    				this.iLockY=y;
    			}
    		}
    		else if(msg==3)
    		{//解锁
    			this.bLock=false;
    		}
    		return false;
    	}
    }

    PrivateChatRecord.AddChatRecord=function( fid, tid, name, detail, time)
    {
        crs[iRecordPoint]=new _ChatRecord();
        crs[iRecordPoint].fromid=fid;
        crs[iRecordPoint].toid=tid;
        crs[iRecordPoint].sName=name;
        crs[iRecordPoint].sDetail=detail;
        crs[iRecordPoint].sTime=time;
        iRecordPoint++;
        
        if(iRecordPoint>=PrivateChatRecord.MAXCHATRECORD)
        {
            var i;
            for(i=0;i<PrivateChatRecord.MAXCHATRECORD/2;i++)
            {
                crs[i]=crs[PrivateChatRecord.MAXCHATRECORD/2+i];
            }
            iRecordPoint=PrivateChatRecord.MAXCHATRECORD/2;
        }
    };

    PrivateChatRecord.OpenRecord=function( rid, name, rax)
    {
        XRecordFast.iPrivateChatMode=1;
        PrivateChat_Send.OpenChat(rid, name,rax);
    //		iRid=rid;
    //		XStat.gi().PushStat(XStat.GS_PRIVATECHATRECORD);
    };

    PrivateChatRecord.iRid;
    PrivateChatRecord.iRecordPoint=0;
    PrivateChatRecord.MAXCHATRECORD=1000;
    PrivateChatRecord.crs=new Array(PrivateChatRecord.MAXCHATRECORD);//

    class FriendTeam extends BaseClass{
    	

    	
    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.iW=150;
    		this.iH=340;
    		this.iX=GmConfig$1.SCRW-this.iW-230;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		this.btn_team=new Array(4);//
    		for(i=0;i<4;i++)
    		{
    			this.btn_team[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_team[i].InitButton("按钮1_110");
    		}
    		this.btn_team[0].sName="亲密";
    		this.btn_team[1].sName="普通";
    		this.btn_team[2].sName="黑名单";
    		this.btn_team[3].sName="删除";
    	}
    	 Draw()
    	{
    		var i;
    		DrawMode$1.new_framewatch(this.iX, this.iY, this.iW, this.iH);
    		M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2, this.iY+20, FriendTeam.sName, 0xffffffff, 25, 101, 1, 1, 0, -2, 0);
    		M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2, this.iY+20+30, ""+FriendTeam.iRid, 0xffffffff, 25, 101, 1, 1, 0, -2, 0);
    		for(i=0;i<4;i++)
    		{
    			this.btn_team[i].Move(this.iX+20, this.iY+20+30+30+i*60, 110, 52);
    			this.btn_team[i].Draw();
    		}
    	}
    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<4;i++)
    		{
    			if(this.btn_team[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_team[i].bCheck())
    				{
    					GmProtocol$1.gi().s_FriendOperate(2,FriendTeam.iRid,i);
    					if(i==3)
    					{//删除
    						var mf=FriendList.gi().FindFriend(FriendTeam.iRid);
    						if(mf!=null)
    						{
    							mf.bUseing=false;
    						}
    						FriendList.gi().SortFriends();
    					}
    					XStat$1.gi().PopStat(1);
    				}
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return true;
    	}
    }
    FriendTeam.sName;
    FriendTeam.iRid;

    FriendTeam.Open=function( name, rid)
    {
        FriendTeam.sName=name;
        FriendTeam.iRid=rid;
        XStat$1.gi().PushStat(XStat$1.GS_FRIENDTEAM);
    };

    class TempChat
    {
    //	public int iRid;
    //	public String sName;
    //	public int iRax;
        constructor()
        {

        }
    	 copyfrom( t)
    	{
    		this.iRid=t.iRid;
    		this.sName=t.sName;
    		this.iRax=t.iRax;
    	}
    }


    class FriendList$1 {
    	
    //	XButton btn_near;//附近玩家列表
    //	XButton btn_online;
    //	XButton btn_offline;
    //	XButton btn_black;//黑名单
    	
    	//////////////////////////////////////////////////////////////////////////////////////////////////////
    	constructor()
    	{
    		var i;
    		this.pm3f=M3DFast$1.gi();

    		this.bShow=false;

    		this.btn_section=new Array(3);//
    		this.btn_mpl=new Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.btn_section[i]=new XButton(GmPlay$1.xani_nui3);
    			this.btn_section[i].InitButton("分类标签按钮");
    			
    			this.btn_mpl[i]=new XButton(GmPlay$1.xani_nui3);
    			this.btn_mpl[i].InitButton("分组标签按钮");
    		}
    		this.btn_mpl[0].sName="密";
    		this.btn_mpl[1].sName="普";
    		this.btn_mpl[2].sName="临";

    		this.btn_operate=new Array(4);//
    		for(i=0;i<4;i++)
    		{
    			this.btn_operate[i]=new XButton(GmPlay$1.xani_nui3);
    			this.btn_operate[i].InitButton("好友功能按钮");
    		}
    		//查看，前往，攻击
    		//发送，记录，分组，查看
    		//分组

    		////////////////////////////////////////////////////////////////////////////////////

    		this.iSectPoint=1;
    		this.iScrollOff=0;
    		this.iNameSize=24;
    		this.iSelectPoint=-1;

    		this.friends=new Array(FriendList$1.MAXFRIEND);//
    		for(i=0;i<FriendList$1.MAXFRIEND;i++)this.friends[i]=new MyFriends();
    		this.iOnLineFriendCount=0;
    		this.iOffLineFriendCount=0;
    		this.iBlackFriendCount=0;

    		this.btn_chat0=new XButtonEx2$1(GmPlay$1.xani_icon);
    //		this.btn_chat0.Move(this.iCbx,this.iCby, 60, 60);
    		this.btn_chat0.InitButton("好友功能按钮");
    		this.btn_chat0.bCheckByRect=true;
    		this.btn_chat1=new XButtonEx2$1(GmPlay$1.xani_icon);
    //		this.btn_chat1.Move(this.iCbx,this.iCby, 60, 60);
    		this.btn_chat1.InitButton("好友功能按钮");
    		this.btn_chat1.bCheckByRect=true;
    //		btn_chat.bSingleButton=true;
    //		btn_chat.sName="好友";

    		this.bOpening=false;
    		this.bCloseing=false;
    		this.iModifyX=0;

    		this.bLocked=false;
    		this.bDrag=false;
    		this.iModifyY=0;
    		this.iDragDelay=0;
    		this.iOffY=0;

    		this.iF1Count=0;
    		this.iF2Count=0;
    		this.iF3Count=0;
    		this.iF4Count=0;
    		this.tmpchat=new Array(FriendList$1.MAXTEMPCHAT);//
    		for(i=0;i<FriendList$1.MAXTEMPCHAT;i++)
    		{
    			this.tmpchat[i]=new TempChat();
    			this.tmpchat[i].iRid=0;
    		}
    	}
    	//附近    发送，查看，记录
    	//在线离线   发送，查看，记录，删除
    	//临时    发送，查看，记录，删除
    	Draw()
    	{
    		var i,j,k;
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return;
    		var mf;
    		var offlinecolor=0xffa0a0a0;
    		this.iW=200;
    		this.iH=GmConfig$1.SCRH-20;
    		this.iX=GmConfig$1.SCRW-this.iW;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		if(PublicInterface.gi().iBx>0)
    		{
    			this.iY=PublicInterface.gi().iBy+PublicInterface.gi().iBh;
    			this.iH=GmConfig$1.SCRH-this.iY-10;
    		}
    		
    		this.iCbx=GmConfig$1.SCRW-80;
    		
    		if(XFight.bFighting && XFight.gi().iAlphaEffect>=GmConfig$1.SCRW)this.iCby=GmConfig$1.SCRH-80-85*4;
    		else this.iCby=GmConfig$1.SCRH-80-85*3-5;
    		if(this.bOpening)
    		{
    			this.iModifyX+=this.iW/4;
    			if(this.iModifyX>=this.iW)
    			{
    				this.iModifyX=this.iW;
    				this.bOpening=false;
    			}
    		}
    		if(this.bCloseing)
    		{
    			this.iModifyX-=this.iW/4;
    			if(this.iModifyX<0)
    			{
    				this.iModifyX=0;
    				this.bCloseing=false;
    				this.bShow=false;
    			}
    		}
    		
    		if(this.bPrivateChatFlash)
    		{
    			this.bPrivateChatFlash=PrivateChatWatch.gi().bHaveUnWatched();
    		}
    		if(this.bShow)
    		{
    			this.btn_chat1.Move(this.iCbx-this.iModifyX,this.iCby, 72, 72);//关闭按钮
    //			this.btn_chat1.SetCheckRect(this.iCbx-this.iModifyX,this.iCby-30, 60, 60);
    //			if(this.bPrivateChatFlash && GmPlay.iDelay/2%2==0)this.btn_chat1.Move(this.iCbx+2-this.iModifyX,this.iCby+2, 60, 60);
    			if(this.bPrivateChatFlash && parseInt(GmPlay$1.iDelay/2)%2==0)this.btn_chat1.Move(this.iCbx-this.iModifyX+2,this.iCby+2, 72, 72);
    //			{
    //				aa_mail.Draw(this.iCbx-this.iModifyX,this.iCby-30);
    //				aa_mail.NextFrame();
    //			}
    //			else 
    				this.btn_chat1.Draw();
    				M3DFast$1.gi().DrawText_2(this.btn_chat1.iX+36, this.btn_chat1.iY+80, "好友", 0xfffdf5e8, 22, 101, 1, 1, 0, -2, -3,3,0xff1a0000);
    		}
    		else
    		{
    			this.btn_chat0.Move(this.iCbx-this.iModifyX,this.iCby, 72, 72);//打开按钮
    //			this.btn_chat1.SetCheckRect(this.iCbx-this.iModifyX,this.iCby-30, 60, 60);
    //			if(this.bPrivateChatFlash && GmPlay.iDelay/2%2==0)this.btn_chat0.Move(this.iCbx+2-this.iModifyX,this.iCby+2, 60, 60);
    			if(this.bPrivateChatFlash && parseInt(GmPlay$1.iDelay/2)%2==0)this.btn_chat0.Move(this.iCbx-this.iModifyX+2,this.iCby+2, 72, 72);
    //			{
    //				aa_mail.Draw(this.iCbx-this.iModifyX,this.iCby-30);
    //				aa_mail.NextFrame();
    //			}
    //			else 
    				this.btn_chat0.Draw();
    				M3DFast$1.gi().DrawText_2(this.btn_chat0.iX+36, this.btn_chat0.iY+80, "好友", 0xfffdf5e8, 22, 101, 1, 1, 0, -2, -3,3,0xff1a0000);
    		}
    		

    		
    		if(!this.bShow)return;

    		this.iX=GmConfig$1.SCRW-this.iModifyX;
    		
    		DrawMode$1.new_framepc(this.iX, this.iY, this.iW, this.iH);
    //		DrawMode.new_framepc(this.iX, this.iY, this.iW, this.iH);
    //		GmPlay.xani_ui.DrawAnima(this.iX, (GmConfig.SCRH-480)/2, "好友列表框", 0);
    //		this.pm3f.FillRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0xffff8040);
    //		this.btn_section[0].sName="附近("+Gameing.gameing.iNearRoleCount+")";
    //		this.btn_section[1].sName="在线("+this.iOnLineFriendCount+")";
    //		this.btn_section[2].sName="离线("+this.iOffLineFriendCount+")";
    //		this.btn_section[3].sName="黑名单("+this.iBlackFriendCount+")";
    		var x,y;
    		for(i=0;i<3;i++)
    		{
    			x=this.iX+5;
    			if(i<=this.iSectPoint)y= this.iY+5+45*i;
    			else y=this.iY+this.iH-45*3+45*i;

    			this.btn_section[i].Move(x, y, 190, 40);
    			this.btn_section[i].Draw();
    			if(i==this.iSectPoint)GmPlay$1.xani_nui3.DrawAnima(x+4, y+10, "打开关闭小箭头",1);
    			else GmPlay$1.xani_nui3.DrawAnima(x+4+6, y+4, "打开关闭小箭头",0);

    			M3DFast$1.gi().DrawTextEx(x+50, y+20, FriendList$1.btnstr[i], 0xffffffff, 30, 100, 1, 1, 0, 0, -2);
    			switch(i)
    			{//数量
    			case 0:M3DFast$1.gi().DrawTextEx(x+185, y+20, ""+Gameing.gameing.iNearRoleCount, 0xffffffff, 30, 100, 1, 1, 0, -3, -2);break;
    			case 1:M3DFast$1.gi().DrawTextEx(x+185, y+20, ""+(this.iF1Count+this.iF2Count+this.iF3Count), 0xffffffff, 30, 100, 1, 1, 0, -3, -2);break;
    			case 2:M3DFast$1.gi().DrawTextEx(x+185, y+20, ""+this.iF4Count, 0xffffffff, 30, 100, 1, 1, 0, -3, -2);break;
    			}
    		}
    		this.iOx=this.iX+5;
    		this.iOy=this.iY+5+45*(this.iSectPoint+1);
    		this.iDx=this.iOx+190;
    		this.iDy=this.iY+this.iH-45*3+45*(this.iSectPoint+1)-5;
    		
    //		this.pm3f.DrawRect_2D(this.iOx, this.iOy, this.iDx, this.iDy, 0xff000000);
    		this.pm3f.SetViewClip(this.iOx-60, this.iOy-3, this.iDx, this.iDy);
    		
    		this.iOy+=(this.iModifyY+this.iOffY);
    		/////////////////////////////////////////////////////
    		j=0;
    		var offx,offy;
    		this.bSelected=false;
    		switch(this.iSectPoint)
    		{
    		case 0://附近玩家列表,nrs
    			j=0;
    			for(i=0;i<Gameing.iNearMax;i++)
    			{
    				if(Gameing.gameing.nrs[i].bUseing)
    				{
    					offx=this.iOx;
    					offy=this.iOy+j*40;
    					if(this.iSelectPoint==j)
    					{
    						GmPlay$1.xani_nui3.DrawAnima(offx, offy-1, "选中好友",0);
    						
    						this.bSelected=true;
    						this.iSelectX=offx;this.iSelectY=offy;
    						this.iSelectRid=Gameing.gameing.nrs[i].iRid;
    						this.sSelectName=Gameing.gameing.nrs[i].sName;
    						this.iSelectRax=Gameing.gameing.nrs[i].iRace*2+Gameing.gameing.nrs[i].iSex;
    						this.iGoX=Gameing.gameing.nrs[i].iX;
    						this.iGoY=Gameing.gameing.nrs[i].iY;
    						this.iSBCount=3;
    						this.btn_operate[0].sName="查看";//，前往，攻击
    						this.btn_operate[1].sName="前往";
    						this.btn_operate[2].sName="攻击";
    					}
    					GmPlay$1.xani_nui3.DrawAnima(offx, offy, "小头像",Gameing.gameing.nrs[i].iRace*2+Gameing.gameing.nrs[i].iSex);
    					this.pm3f.DrawTextEx(offx+42,offy+20, Gameing.gameing.nrs[i].sName, 0xffffffff, this.iNameSize, 101, 1, 1, 0, 0, -2);
    //					if(Gameing.gameing.nrs[i].iIsLeader>0)this.pm3f.DrawTextEx(this.iOx+3-12, this.iOy+3+j*this.iNameSize+this.iNameSize/2, "[队]"+Gameing.gameing.nrs[i].sName, 0xffffff00, this.iNameSize, 101, 1, 1, 0, 0, -2);
    //					else this.pm3f.DrawTextEx(this.iOx+3, this.iOy+3+j*this.iNameSize+this.iNameSize/2, Gameing.gameing.nrs[i].sName, 0xffffffff, this.iNameSize, 101, 1, 1, 0, 0, -2);
    					j++;
    				}
    			}
    			break;
    		case 1://好友，亲密，普通，临时
    			for(i=0;i<3;i++)
    			{
    				if(FriendList$1.iMplPoint==i)
    				{
    					this.btn_mpl[i].bMouseDown=true;
    					this.btn_mpl[i].bMouseIn=true;
    				}
    				this.btn_mpl[i].Move(this.iOx+i*63, this.iOy-(this.iModifyY+this.iOffY)-3, 62, 50);
    				this.btn_mpl[i].Draw();
    			}
    			this.iOy+=50;
    			this.pm3f.SetViewClip(this.iOx-60, this.iOy-(this.iModifyY+this.iOffY)-3, this.iDx, this.iDy);
    			if(FriendList$1.iMplPoint==0)
    			{//亲密好友
    				for(i=0;i<this.iF1Count;i++)
    				{
    					offx=this.iOx;
    					offy=this.iOy+i*40;
    					mf=this.friends[this.flist1[i]];
    					if(this.iSelectPoint==i)
    					{
    						GmPlay$1.xani_nui3.DrawAnima(offx, offy-1, "选中好友",0);
    						
    						this.bSelected=true;
    						this.iSelectX=offx;this.iSelectY=offy;
    						this.iSelectRid=mf.iRid;
    						this.sSelectName=mf.sName;
    						this.iSelectRax=mf.iImportant%100;
    						//发送，记录，分组，查看
    						if(mf.bOnLine)this.iSBCount=4;
    						else this.iSBCount=3;
    						this.btn_operate[0].sName="发送";//，前往，攻击
    						this.btn_operate[1].sName="记录";
    						this.btn_operate[2].sName="分组";
    						this.btn_operate[3].sName="查看";
    					}
    					GmPlay$1.xani_nui3.DrawAnima(offx, offy, "小头像",mf.iImportant%100);
    					this.pm3f.DrawTextEx(offx+42,offy+20, mf.sName, mf.bOnLine?0xffffffff:offlinecolor, this.iNameSize, 101, 1, 1, 0, 0, -2);
    				}
    				j=this.iF1Count;
    			}
    			if(FriendList$1.iMplPoint==1)
    			{//普通好友
    				for(i=0;i<this.iF2Count;i++)
    				{
    					offx=this.iOx;
    					offy=this.iOy+i*40;
    					mf=this.friends[this.flist2[i]];
    					if(this.iSelectPoint==i)
    					{
    						GmPlay$1.xani_nui3.DrawAnima(offx, offy-1, "选中好友",0);
    						
    						this.bSelected=true;
    						this.iSelectX=offx;this.iSelectY=offy;
    						this.iSelectRid=mf.iRid;
    						this.sSelectName=mf.sName;
    						this.iSelectRax=mf.iImportant%100;
    						//发送，记录，分组，查看
    						if(mf.bOnLine)this.iSBCount=4;
    						else this.iSBCount=3;
    						this.btn_operate[0].sName="发送";//，前往，攻击
    						this.btn_operate[1].sName="记录";
    						this.btn_operate[2].sName="分组";
    						this.btn_operate[3].sName="查看";
    					}
    					GmPlay$1.xani_nui3.DrawAnima(offx, offy, "小头像",mf.iImportant%100);
    					this.pm3f.DrawTextEx(offx+42,offy+20, mf.sName, mf.bOnLine?0xffffffff:offlinecolor, this.iNameSize, 101, 1, 1, 0, 0, -2);
    				}
    				j=this.iF2Count;
    			}
    			if(FriendList$1.iMplPoint==2)
    			{//临时好友
    				for(i=0;i<this.iF3Count;i++)
    				{
    					offx=this.iOx;
    					offy=this.iOy+i*40;
    					if(this.iSelectPoint==i)
    					{
    						GmPlay$1.xani_nui3.DrawAnima(offx, offy-1, "选中好友",0);
    						
    						this.bSelected=true;
    						this.iSelectX=offx;this.iSelectY=offy;
    						this.iSelectRid=this.tmpchat[i].iRid;
    						this.sSelectName=this.tmpchat[i].sName;
    						this.iSelectRax=this.tmpchat[i].iRax;
    						//发送，记录，分组，查看
    						this.iSBCount=4;
    						this.btn_operate[0].sName="发送";//，前往，攻击
    						this.btn_operate[1].sName="记录";
    						this.btn_operate[2].sName="分组";
    						this.btn_operate[3].sName="查看";
    					}
    //					GmPlay.xani_nui3.DrawAnima(offx, offy, "小头像",mf.iImportant%100);
    //					this.pm3f.DrawTextEx(offx+42,offy+20, mf.sName, mf.bOnLine?0xffffffff:0xff808080, this.iNameSize, 101, 1, 1, 0, 0, -2);
    					this.pm3f.DrawTextEx(offx+2,offy+20, this.tmpchat[i].sName, 0xffffffff, this.iNameSize, 101, 1, 1, 0, 0, -2);
    				}
    				j=this.iF3Count;
    			}
    			this.pm3f.NoClip();
    			break;
    		case 2://黑名单
    			for(i=0;i<this.iF4Count;i++)
    			{
    				offx=this.iOx;
    				offy=this.iOy+i*40;
    				mf=this.friends[this.flist4[i]];
    				if(this.iSelectPoint==i)
    				{
    					GmPlay$1.xani_nui3.DrawAnima(offx, offy-1, "选中好友",0);
    					
    					this.bSelected=true;
    					this.iSelectX=offx;this.iSelectY=offy;
    					this.iSelectRid=mf.iRid;
    					this.sSelectName=mf.sName;
    					//发送，记录，分组，查看
    					this.iSBCount=1;
    					this.btn_operate[0].sName="分组";//，前往，攻击
    //					this.btn_operate[1].sName="记录";
    //					this.btn_operate[2].sName="分组";
    //					this.btn_operate[3].sName="查看";
    				}
    				GmPlay$1.xani_nui3.DrawAnima(offx, offy, "小头像",mf.iImportant%100);
    				this.pm3f.DrawTextEx(offx+42,offy+20, mf.sName, mf.bOnLine?0xffffffff:offlinecolor, this.iNameSize, 101, 1, 1, 0, 0, -2);
    			}
    			j=this.iF4Count;
    			break;

    		}
    		this.iOy-=(this.iModifyY+this.iOffY);
    		this.pm3f.NoClip();
    		
    		if(this.bSelected)
    		{
    			if(this.iSelectY>GmConfig$1.SCRH-this.iSBCount*51)this.iSelectY=GmConfig$1.SCRH-this.iSBCount*51;
    			for(i=0;i<4;i++)
    			{
    //				if(this.iSectPoint==0 && i==3)break;
    				if(i<this.iSBCount)
    				{
    					this.btn_operate[i].Move(this.iSelectX-80,this.iSelectY+i*51, 80, 51);
    					this.btn_operate[i].Draw();
    				}
    				else this.btn_operate[i].Move(0,0,0,0);
    				//查看，前往，攻击
    				//发送，记录，分组，查看
    				//分组
    			}
    		}

    		this.iSelectCount=j;
    		k=j*40-(this.iDy-this.iOy);
    		if(k<0)k=0;
    //		GmPlay.sop(""+(this.iDy-this.iOy));
    		if(this.iDragDelay!=0)
    		{
    			this.iDragDelay=this.iDragDelay/2;
    			if(this.iDragDelay>10 || this.iDragDelay<-10)this.iOffY+=this.iDragDelay;
    			else this.iDragDelay=0;
    		}
    		else if(this.iOffY<-k)
    		{
    			i=(-k-this.iOffY)/2;
    			if(i>10)this.iOffY+=i;
    			else this.iOffY=-k;
    		}
    		else if(this.iOffY>0)
    		{
    			i=this.iOffY/2;
    			if(i>10)this.iOffY-=i;
    			else this.iOffY=0;
    		}

    		if(this.bDrag)
    		{
    			this.iDragTime++;
    		}
    	}
    	Close()
    	{
    //		if(bOpen || this.bOpening)
    		{
    			this.bCloseing=true;
    			this.bOpening=false;
    //			this.iModifyX=this.iW;
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i,j;
    		var btn_chat;
    		if(this.bShow)btn_chat=this.btn_chat1;
    		else btn_chat=this.btn_chat0;
    		
    		if(!this.bShow)
    		{
    			if(btn_chat.ProcTouch(msg, x, y))
    			{
    				if(btn_chat.bCheck())
    				{//打开好友列表
    					if(this.bPrivateChatFlash)
    					{//看其他人发来的私聊消息
    						PrivateChatWatch.gi().ShowMessage();
    					}
    					else
    					{
    						if(FriendList$1.gi().bShow)
    						{
    							this.Close();
    						}
    						else
    						{
    							this.bShow=true;
    							this.bCloseing=false;
    							this.bOpening=true;
    							this.iModifyX=0;
    						}
    					}
    				}
    				return true;
    			}
    			return false;
    		}

    		switch(msg)
    		{
    		case 2://移动，如果是锁定状态，看移动距离是否超过15像素，超过责进入拖动状态
    			if(this.bLocked)
    			{
    				this.iDragY=y;
    				this.iModifyY=this.iDragY-this.iLockY;
    				///
    				i=this.iOffY+this.iModifyY;
    				if(i>0)
    				{
    					this.iModifyY-=i/2;
    					this.iDragTime=10;
    				}
    				///
    				j=this.iSelectCount*40-(this.iDy-this.iOy);
    				if(j<0)j=0;
    //				GmPlay.sop(""+(this.iDy-this.iOy));
    				if(i<-j)
    				{
    					this.iModifyY-=(i+j)/2;
    					this.iDragTime=10;
    				}
    				///
    				if(this.iModifyY>15 || this.iModifyY<-15)
    				{
    					this.bDrag=true;
    					this.iSelectPoint=-1;
    					return true;
    				}
    			}
    			break;
    		case 3:
    			this.bLocked=false;
    			if(this.bDrag)
    			{
    				this.iOffY+=this.iModifyY;
    				if(this.iDragTime<=0)this.iDragTime=1;
    				if(this.iDragTime<5)this.iDragDelay=this.iModifyY*3/this.iDragTime;
    				GmPlay$1.sop("this.iDragDelay="+this.iDragDelay);
    				//this.iDragDelay=0;//惯性
    				this.iModifyY=0;
    				this.bDrag=false;
    				return true;
    			}
    			break;
    		}
    		
    		for(i=0;i<3;i++)
    		{//大分页
    			if(this.btn_section[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_section[i].bCheck())
    				{
    					if(this.iSectPoint==i)this.iSectPoint=10;
    					else this.iSectPoint=i;
    					this.iScrollOff=0;
    					this.iOffY=0;
    					this.iSelectPoint=-1;
    				}
    				return true;
    			}
    		}
    		if(this.iSectPoint==1)
    		{//密普临小分页
    			for(i=0;i<3;i++)
    			{
    				if(this.btn_mpl[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_mpl[i].bCheck())
    					{
    						FriendList$1.iMplPoint=i;
    					}
    				}
    			}
    		}
    		if(this.bSelected)
    		{
    			for(i=0;i<this.iSBCount;i++)
    			{
    				if(this.btn_operate[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_operate[i].bCheck())
    					{
    						if(this.iSectPoint==0)
    						{//查看，前往，攻击
    							if(i==0)GmProtocol$1.gi().s_WatchOn(0, this.iSelectRid, 0, "");
    							if(i==1)
    							{
    								if(this.iSectPoint==0)
    								{
    									if(MySell.gi().bSelling)
    									{
    										EasyMessage.easymsg.AddMessage("摆摊中不能行走");
    									}
    									else if(MyTeam$1.bNoTeam() || MyTeam$1.bTeamLeader() || MyTeam$1.bAway())
    									{//没队伍，或是队长，才能走
    										if(MapManager.gi().mfy.findway(GmMe$1.me.iX,GmMe$1.me.iY,this.iGoX,this.iGoY))
    										{
    											GmPlay$1.sop("check again start");
    											if(MapManager.gi().mfy.checkagain())
    											{
    												MapManager.gi().vbk.iGoToNpcFlag=-1;
    												MapManager.gi().vbk.iGoToNpcId=-1;
    												GmMe$1.me.start(MapManager.gi().mfy.iPath,MapManager.gi().mfy.iPathDeep);
    											}
    											else GmPlay$1.sop("check again end2");
    										}
    									}
    								}
    							}
    							if(i==2)GmProtocol$1.gi().s_PK(this.iSelectRid);
    						}
    						if(this.iSectPoint==1)
    						{//发送，记录，分组，查看
    							if(i==0)PrivateChat_Send.OpenChat(this.iSelectRid,this.sSelectName,this.iSelectRax);
    							if(i==1)PrivateChatRecord.OpenRecord(this.iSelectRid,this.sSelectName,this.iSelectRax);
    							if(i==2)FriendTeam.Open(this.sSelectName, this.iSelectRid);//分组
    							if(i==3)GmProtocol$1.gi().s_WatchOn(0, this.iSelectRid, 0, "");
    						}
    						if(this.iSectPoint==2)
    						{//分组
    							if(i==0)FriendTeam.Open(this.sSelectName, this.iSelectRid);
    						}
    						this.iSelectPoint=-1;
    					}
    					return true;
    				}
    			}
    		}
    		this.iSelectPoint=-1;
    		if(XDefine$1.bInRect(x,y,this.iOx, this.iOy, this.iDx-this.iOx, this.iDy-this.iOy))
    		{
    			switch(msg)
    			{
    			case 1://按下，锁定当前位置
    //			case 2:
    				if(!this.bLocked)
    				{
    					this.bLocked=true;
    					this.iLockY=y;
    					this.iModifyY=0;
    					this.iDragTime=0;
    					this.iDragDelay=0;
    				}
    				break;
    			}
    //			this.iOy+=(this.iModifyY+this.iOffY);
    			this.iSelectPoint=-1;
    			for(i=0;i<this.iSelectCount;i++)
    			{
    				if(XDefine$1.bInRect(x, y, this.iOx, this.iOy+this.iOffY+i*40, this.iW-10,40))
    				{
    					this.iSelectPoint=i;
    				}
    			}
    		}
    		if(btn_chat.ProcTouch(msg, x, y))
    		{
    			if(btn_chat.bCheck())
    			{//打开好友列表
    				if(this.bPrivateChatFlash)
    				{//看其他人发来的私聊消息
    					PrivateChatWatch.gi().ShowMessage();
    				}
    				else
    				{
    					if(FriendList$1.gi().bShow)
    					{
    						this.Close();
    					}
    					else
    					{
    						this.bShow=true;
    						this.bCloseing=false;
    						this.bOpening=true;
    						this.iModifyX=0;
    					}
    				}
    			}
    			return true;
    		}
    		if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW+10, this.iH+1))return true;
    		return false;
    	}
    	 GetFreeFriendOle()
    	{
    		var i;
    		for(i=0;i<FriendList$1.MAXFRIEND;i++)
    		{
    			if(!this.friends[i].bUseing)return this.friends[i];
    		}
    		return null;
    	}
    	FindFriend( rid)
    	{
    		var i;
    		for(i=0;i<FriendList$1.MAXFRIEND;i++)
    		{
    			if(this.friends[i].bUseing && this.friends[i].iRid==rid)return this.friends[i];
    		}
    		return null;
    	}
    	Clean()
    	{
    		var i;
    		for(i=0;i<FriendList$1.MAXFRIEND;i++)
    		{
    			this.friends[i].bUseing=false;
    		}
    		this.SortFriends();
    	}
    	 GetFriends( pls)
    	{
    		var rid;
    		var stat;
    		var mf;
    		while(true)
    		{
    //			GmPlay.sop("1111111111");
    			stat=pls.GetNextByte();
    			if(stat==0)break;
    			rid=pls.GetNextInt();
    			mf=this.FindFriend(rid);
    			if(mf==null)mf=this.GetFreeFriendOle();
    			if(mf==null)break;
    			
    			if((stat&2)==0)mf.bOnLine=false;
    			else mf.bOnLine=true;
    			mf.iRid=rid;
    			mf.sName=pls.GetNextString();
    			
    			mf.iRelation=pls.GetNextByte();
    			mf.iAmity=pls.GetNextShort();
    			mf.iTeam=pls.GetNextByte();//分组
    			mf.iImportant=pls.GetNextByte();//头像

    			mf.bUseing=true;
    //			GmPlay.sop("2222222222="+mf.sName);
    		}
    		this.SortFriends();
    	}
    	
    	//亲密，普通，临时，黑名单
    	
    	 SortFriends()
    	{//
    		var i;
    		if(this.flist1==null)this.flist1=new Int32Array(FriendList$1.MAXFRIEND);
    		if(this.flist2==null)this.flist2=new Int32Array(FriendList$1.MAXFRIEND);
    		if(this.flist4==null)this.flist4=new Int32Array(FriendList$1.MAXFRIEND);
    		
    		this.iF1Count=0;
    		this.iF2Count=0;
    		this.iF4Count=0;
    		
    		for(i=0;i<FriendList$1.MAXFRIEND;i++)
    		{
    			if(this.friends[i].bUseing)
    			{
    				if(this.friends[i].iTeam==0 && this.friends[i].bOnLine)
    				{
    					this.flist1[this.iF1Count]=i;
    					this.iF1Count++;
    				}
    				if(this.friends[i].iTeam==1 && this.friends[i].bOnLine)
    				{
    					this.flist2[this.iF2Count]=i;
    					this.iF2Count++;
    				}
    				if(this.friends[i].iTeam==3 && this.friends[i].bOnLine)
    				{
    					this.flist4[this.iF4Count]=i;
    					this.iF4Count++;
    				}
    			}
    		}
    		for(i=0;i<FriendList$1.MAXFRIEND;i++)
    		{
    			if(this.friends[i].bUseing)
    			{
    				if(this.friends[i].iTeam==0 && !this.friends[i].bOnLine)
    				{
    					this.flist1[this.iF1Count]=i;
    					this.iF1Count++;
    				}
    				if(this.friends[i].iTeam==1 && !this.friends[i].bOnLine)
    				{
    					this.flist2[this.iF2Count]=i;
    					this.iF2Count++;
    				}
    				if(this.friends[i].iTeam==3 && !this.friends[i].bOnLine)
    				{
    					this.flist4[this.iF4Count]=i;
    					this.iF4Count++;
    				}
    			}
    		}
    	}
    	DelTmpChat( rid)
    	{
    		var i,j;
    		for(i=0;i<FriendList$1.MAXTEMPCHAT;i++)
    		{
    			if(this.tmpchat[i].iRid==rid)
    			{//找到
    				for(j=i;j<FriendList$1.MAXTEMPCHAT-1;j++)
    				{
    					this.tmpchat[j].iRid=this.tmpchat[j+1].iRid;
    					this.tmpchat[j].sName=this.tmpchat[j+1].sName;
    					this.tmpchat[j].iRax=this.tmpchat[j+1].iRax;
    				}
    				if(this.iF3Count>0)this.iF3Count--;
    				return;
    			}
    		}
    	}
    	 AddTmpChat( rid, name, rax)
    	{//添加临时好友，发送，接受对话时加入
    		var i,j;
    		//已有，提高到最前
    		for(i=0;i<FriendList$1.MAXTEMPCHAT;i++)
    		{
    			if(this.tmpchat[i].iRid==rid)
    			{//找到
    				for(j=i;j>0;j--)
    				{
    					this.tmpchat[j].copyfrom(this.tmpchat[j-1]);
    				}
    				this.tmpchat[0].iRid=rid;
    				this.tmpchat[0].sName=name;
    				this.tmpchat[0].iRax=rax;
    				return;
    			}
    		}
    		//没有，加入到最前
    		for(j=FriendList$1.MAXTEMPCHAT-1;j>0;j--)
    		{
    			this.tmpchat[j].copyfrom(this.tmpchat[j-1]);
    		}
    		this.tmpchat[0].iRid=rid;
    		this.tmpchat[0].sName=name;
    		this.tmpchat[0].iRax=rax;
    		if(this.iF3Count<FriendList$1.MAXTEMPCHAT)this.iF3Count++;
    	}
    }

    FriendList$1.MAXFRIEND=128;
    FriendList$1.iMplPoint=0;
    FriendList$1.MAXTEMPCHAT=16;
    FriendList$1.btnstr=["附近","好友","黑名单"];
    FriendList$1.flist=null;
    FriendList$1.gi=function()
    {
    	if(FriendList$1.flist==null)FriendList$1.flist=new FriendList$1();
    	return FriendList$1.flist;
    };

    class PrivateChatWatch {

    	 constructor()
    	{
    		this.pm3f=M3DFast$1.gi();
    		
    		var i;
    		this.pms=new Array(PrivateChatWatch.MAXMESSAGE);//
    		for(i=0;i<PrivateChatWatch.MAXMESSAGE;i++)
    		{
    			this.pms[i]=new PrivateMessage();
    		}
    		this.iMessageCount=0;
    		
    		this.bShow=false;
    		
    		this.iW=550;
    		this.iH=360;
    		
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2-50;
    		
    		this.btn_record=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_record.Move(this.iX+this.iW-25-90,this.iY+25, 90, 60);
    		this.btn_record.InitButton("发送聊天按钮");
    		this.btn_record.sName="记录";
    		
    		this.btn_watch=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_watch.Move(this.iX+this.iW-25-90-10-90,this.iY+25, 90, 60);
    		this.btn_watch.InitButton("发送聊天按钮");
    		this.btn_watch.sName="查看";
    		
    		this.btn_reply=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_reply.Move(this.iX+this.iW-25-90,this.iY+this.iH-60-25, 90, 60);
    		this.btn_reply.InitButton("发送聊天按钮");
    		this.btn_reply.sName="回复";
    	}
    	GetPrivateMessage( pls)
    	{
    		var i;
    		GmPlay$1.sop("aaaaaaaaaaaaaaaaa"+this.iMessageCount);
    		if(this.iMessageCount>=PrivateChatWatch.MAXMESSAGE)this.iMessageCount=PrivateChatWatch.MAXMESSAGE-1;
    		for(i=this.iMessageCount;i>0;i--)
    		{
    //			this.pms[i].copyfrom(this.pms[i-1]);
    			this.pms[i]=this.pms[i-1];
    		}
    		this.pms[0]=new PrivateMessage();
    		this.pms[0].iSession=pls.GetNextInt();
    		this.pms[0].iRid=pls.GetNextInt();
    		this.pms[0].sName=pls.GetNextString();
    		this.pms[0].iRax=pls.GetNextByte();
    		this.pms[0].iFlag=pls.GetNextByte();
    		this.pms[0].iDRid=pls.GetNextInt();
    		this.pms[0].sTime=pls.GetNextString();
    		this.pms[0].sDetail=pls.GetNextString();
    		this.pms[0].exts[0].type=3;//自己名字
    		this.pms[0].exts[0].eid=this.pms[0].iRid;
    		for(i=1;i<5;i++)
    		{
    			if(pls.iOffset>=pls.iLength)
    			{
    				this.pms[0].exts[i].type=100;
    				continue;
    			}
    			this.pms[0].exts[i].type=pls.GetNextByte();
    			switch(this.pms[0].exts[i].type)
    			{
    			case 0://物品
    			case 1://宠物
    			case 4://队伍
    				this.pms[0].exts[i].eid=pls.GetNextInt();
    				this.pms[0].exts[i].tid=pls.GetNextShort();
    				break;
    			case 2://语音
    				this.pms[0].exts[i].eid=pls.GetNextInt();
    				this.pms[0].exts[i].name=pls.GetNextString();
    				this.pms[0].exts[i].detail=pls.GetNextString();
    				break;
    			}
    		}

    		if(this.pms[0].iRid==GmMe$1.me.iRid)
    		{//自己的返回消息
    			this.pms[0].bFriend=false;
    			
    			this.pms[0].bWatched=true;
    			GmPlay$1.x_record.SavePrivateChat();
    			GmPlay$1.sop("bbbbbbbbb");
    		}
    		else
    		{
    			if(FriendList$1.gi().FindFriend(this.pms[0].iRid)==null)this.pms[0].bFriend=false;
    			else this.pms[0].bFriend=true;
    			
    			this.pms[0].bWatched=false;
    			FriendList$1.gi().AddTmpChat(this.pms[0].iRid, this.pms[0].sName,this.pms[0].iRax);
    			FriendList$1.gi().bPrivateChatFlash=true;//右下角好友图标开始闪烁
    			GmPlay$1.sop("cccccccccccc");
    		}
    		
    		this.iMessageCount++;
    	}

    	ShowMessage()
    	{
    		var i;
    		for(i=this.iMessageCount-1;i>=0;i--)
    		{
    			if(this.pms[i].bWatched==false)break;
    		}
    		if(i>=0)
    		{
    //			XRecordFast.iPrivateChatMode=1;
    			if(XRecordFast.iPrivateChatMode==0)
    			{//简单模式
    				this.showpms=this.pms[i];
    				GmProtocol$1.gi().s_ReviewPrivateChat(this.pms[i].iSession);//发到服务器
    				this.pms[i].bWatched=true;
    				GmPlay$1.x_record.SavePrivateChat();
    				this.bShow=true;
    			}
    			else
    			{//直接打开发送框，并设置此名字的全为已读
    				PrivateChat_Send.OpenChat(this.pms[i].iRid, this.pms[i].sName,this.pms[i].iRax);
    			}
    		}
    	}
    	bHaveUnWatched()
    	{
    		for(var i=0;i<this.iMessageCount;i++)
    		{
    			if(this.pms[i].bWatched==false)return true;
    		}
    		return false;
    	}
    	 Draw()
    	{
    		if(!this.bShow)return;
    //		this.iW=400;
    //		this.iH=240;
    //		
    //		this.iX=(GmConfig.SCRW-this.iW)/2;
    //		this.iY=(GmConfig.SCRH-this.iH)/2;
    		
    //		this.btn_watch.Move(this.iX+20, this.iY+this.iH-60, 70, 40);
    //		this.btn_reply.Move(this.iX+this.iW-70-20, this.iY+this.iH-40-20, 70, 40);
    //		btn_close.Move(this.iX+this.iW-90, this.iY+10, 80, 50);
    		
    //		this.pm3f.FillRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0xff000000);
    		var k=0;
    		if(!this.showpms.bFriend)
    		{//陌生人外框
    			var i=GmPlay$1.iDelay%20;
    			var j=i>=10?20-i:i;
    			k=((j*25)<<24)|0xff0000;
    			//if((GmPlay.iDelay/5%2)==0)
    			M3DFast$1.gi().FillRect_2D(this.iX-10, this.iY-10, this.iX+this.iW+10, this.iY+this.iH+10, k);
    			
    		}
    		DrawMode$1.frame_type4("中等框a52_50", this.iX, this.iY, this.iW, this.iH, 52, 50);
    		DrawMode$1.frame_type4("聊天显示框亮20_20",this.iX+25, this.iY+25+60+10, this.iW-50, this.iH-25-60-10-25-60-10,20,20);

    		GmPlay$1.xani_head.DrawAnimaEx(this.iX+25, this.iY+25, "新头像"+this.showpms.iRax, 0,101,60.0/80,60.0/80,0,0,0);
    		M3DFast$1.gi().DrawTextEx(this.iX+25+65, this.iY+25, "名字:"+this.showpms.sName, 0xff000000, 30, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(this.iX+25+65, this.iY+25+35+5, "号码:"+this.showpms.iRid, 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		
    		this.pm3f.DrawTextEx(this.iX+25, this.iY+this.iH-25-30, ""+this.showpms.sTime, 0xff000000, 30, 101, 1, 1, 0, 0, -2);
    		
    		this.btn_record.Draw();
    		this.btn_watch.Draw();
    		this.btn_reply.Draw();
    		
    //		this.pm3f.DrawRect_2D(fx, fy, fx+fw, fy+fh, 0xffffffff);
    		
    		this.DrawPms(this.iX+25,this.iY+25+60+10);
    //		FormatString.gi().FormatEx(this.showpms.sDetail, this.iW-50-30, 29,0,0,35);
    //		FormatString.gi().Draw(this.iX+25+15, this.iY+25+55+10+10);
    		
    //		btn_close.Draw();
    	}
    	 DrawPms( offx, offy)
    	{
    		var k;
    		var detail="#c176b51"+this.showpms.sDetail;
    		for(k=1;k<5;k++)
    		{
    			switch(this.showpms.exts[k].type)
    			{
    			case 0://物品
    				detail=FormatString.gi().InsertLocker(k, detail, "["+GmPlay$1.de_goods.strValue(this.showpms.exts[k].tid, 0, 4)+"]",GameData$1.EXTCOLOR,"#c00c000");
    				break;
    			case 1://宠物
    				detail=FormatString.gi().InsertLocker(k, detail, "["+GmPlay$1.de_pet.strValue(this.showpms.exts[k].tid, 0, 1)+"]",GameData$1.EXTCOLOR,"#c00c000");
    				break;
    			case 2://语音
    				detail=FormatString.gi().InsertLocker(k, detail, "[语音:"+this.showpms.exts[k].detail+"]",GameData$1.EXTCOLOR,"#c00c000");
    				break;
    			case 4://队伍
    				detail=FormatString.gi().InsertLocker(k, detail, "[申请入队]",GameData$1.EXTCOLOR,"#c00c000");
    				break;
    			}
    		}
    		FormatString.gi().Format(detail, this.iW-50-30, SystemOperate.WordSize(24));
    		FormatString.gi().CheckOutRect();
    		for(k=1;k<5;k++)
    		{
    			switch(this.showpms.exts[k].type)
    			{
    			case 0://物品
    			case 1://宠物
    			case 2://语音
    			case 3://人名
    			case 4://队伍
    				this.showpms.lrs_small[k].CopyFrom(FormatString.gi().lrs[k]);
    				break;
    			}
    		}
    		
    		this.showpms.ox=offx+15;
    		this.showpms.oy=offy+10;
    		this.showpms.ow=FormatString.gi().iW;
    		this.showpms.oh=FormatString.gi().iH;

    		this.DrawSelect(offx+15, offy+10);
    		FormatString.gi().Draw(offx+15, offy+10);
    	}
    	 DrawSelect( offx, offy)
    	{
    		var k;
    		for(k=1;k<5;k++)
    		{
    			switch(this.showpms.exts[k].type)
    			{
    			case 0://物品
    			case 1://宠物
    			case 2://语音
    				this.showpms.lrs_small[k].CopyFrom(FormatString.gi().lrs[k]);
    				if(this.showpms.exts[k].iShowDelay>0)
    				{
    					for(var m=0;m<this.showpms.lrs_small[k].iCount;m++)
    					{
    						var xx1=offx+this.showpms.lrs_small[k].rs[m].iX;
    						var yy1=offy+this.showpms.lrs_small[k].rs[m].iY;
    						var xx2=offx+this.showpms.lrs_small[k].rs[m].iX+this.showpms.lrs_small[k].rs[m].iW;
    						var yy2=offy+this.showpms.lrs_small[k].rs[m].iY+this.showpms.lrs_small[k].rs[m].iH;
    						M3DFast$1.gi().FillRect_2D(xx1,yy1,xx2,yy2, 0xff00ff|(this.showpms.exts[k].iShowDelay<<24));
    					}
    					if(this.showpms.exts[k].iShowDelay>200)this.showpms.exts[k].iShowDelay-=3;
    					else if(this.showpms.exts[k].iShowDelay>150)this.showpms.exts[k].iShowDelay-=6;
    					else if(this.showpms.exts[k].iShowDelay>100)this.showpms.exts[k].iShowDelay-=9;
    					else if(this.showpms.exts[k].iShowDelay>50)this.showpms.exts[k].iShowDelay-=12;
    					else this.showpms.exts[k].iShowDelay=0;
    				}
    				break;
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(!this.bShow)return false;
    		if(XDefine$1.bInRect(x, y, this.showpms.ox, this.showpms.oy, this.showpms.ow, this.showpms.oh))
    		{
    			for( j=1;j<5;j++)
    			{
    //				GmPlay.sop(""+this.pms[i].exts[j].type);
    				if(this.showpms.exts[j].type>=100)continue;
    				if(this.showpms.exts[j].iShowDelay>0)continue;
    			
    				if(this.showpms.lrs_small[j].bIn(x-this.showpms.ox, y-this.showpms.oy))
    				{
    					switch(this.showpms.exts[j].type)
    					{
    					case 0://物品
    						GmProtocol$1.gi().s_WatchOn(1, this.showpms.exts[j].eid, 0,"");
    						this.showpms.exts[j].iShowDelay=255;
    //						EasyMessage.easymsg.AddMessage("正在获取["+this.pms[i].exts[j].name+"]信息");
    						break;
    					case 1://宠物
    						GmProtocol$1.gi().s_WatchOn(2, this.showpms.exts[j].eid, 0,"");
    						this.showpms.exts[j].iShowDelay=255;
    //						EasyMessage.easymsg.AddMessage("正在获取["+this.pms[i].exts[j].name+"]信息");
    						break;
    					case 2://语音
    						GmPlay$1.m_vi.PlayUrlVoice(this.showpms.exts[j].name);
    						this.showpms.exts[j].iShowDelay=255;
    //						EasyMessage.easymsg.AddMessage("正在播放[语音]信息");
    						break;
    //					case 3://自己
    //						GmProtocol.gi().s_WatchOn(0, ps.pms[i].exts[j].eid, 0,"");
    //						ps.pms[i].exts[j].iShowDelay=255;
    //						EasyMessage.easymsg.AddMessage("正在获取["+this.pms[i].sName+"]信息");
    //						break;
    					case 4://队伍
    						if(MyTeam$1.bInTeam())EasyMessage.easymsg.AddMessage("已有队伍");
    						else GmProtocol$1.gi().s_TeamOperate(3,this.showpms.exts[j].eid,0);
    						this.showpms.exts[j].iShowDelay=255;
    						break;
    					}
    				}
    			}
    		}
    		if(this.btn_watch.ProcTouch(msg, x, y))
    		{
    			if(this.btn_watch.bCheck())
    			{
    				GmProtocol$1.gi().s_WatchOn(0, this.showpms.iRid, 0,"");
    			}
    		}
    		if(this.btn_record.ProcTouch(msg, x, y))
    		{
    			if(this.btn_record.bCheck())
    			{
    				XRecordFast.iPrivateChatMode=1;
    				PrivateChat_Send.OpenChat(this.showpms.iRid, this.showpms.sName,this.showpms.iRax);
    				this.bShow=false;
    			}
    		}
    		if(this.btn_reply.ProcTouch(msg, x, y))
    		{
    			if(this.btn_reply.bCheck())
    			{
    				PrivateChat_Send.OpenChat(this.showpms.iRid, this.showpms.sName,this.showpms.iRax);
    				this.bShow=false;
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			this.bShow=false;
    		}
    		return true;
    //		return false;
    	}
    }

    PrivateChatWatch.pp=null;
    PrivateChatWatch.gi=function()
    {
    	if(PrivateChatWatch.pp==null)PrivateChatWatch.pp=new PrivateChatWatch();
    	return PrivateChatWatch.pp;
    };

    PrivateChatWatch.MAXMESSAGE=1024;

    class XRecordFast {
    	
    	constructor( p)
    	{
    		this.pls=new PackageTools(1024*512);
    		
    		var i;
    		this.v=0;
    		this.iUserCount=0;
    		this.sUser=new Array(5);//
    		this.sPass=new Array(5);//
    		for(i=0;i<5;i++)
    		{
    			this.sUser[i]="";
    			this.sPass[i]="";
    		}
    		XRecordFast.iGuideFlags=new Int32Array(16);//
    		for(i=0;i<16;i++)XRecordFast.iGuideFlags[i]=0;
    		XRecordFast.iExtHelp=1;//普通引导
    		XRecordFast.iQQSay=0;
    	}
    	
    	SaveTo( fn)
    	{
    		var i;
    		this.pls.iOffset=0;
    		this.pls.InsertByte(this.v);
    		this.pls.InsertByte(this.iUserCount);
    		for(i=0;i<this.iUserCount;i++)
    		{
    			this.pls.InsertString(this.sUser[i]);
    			this.pls.InsertString(this.sPass[i]);
    		}
    		if(this.bSaveUser)this.pls.InsertByte(1);
    		else this.pls.InsertByte(0);
    		if(this.bSavePass)this.pls.InsertByte(1);
    		else this.pls.InsertByte(0);
    		
    		for(i=0;i<16;i++)this.pls.InsertInt(XRecordFast.iGuideFlags[i]);
    		
    		if(SystemOperate.bShowName)this.pls.InsertByte(0);
    		else this.pls.InsertByte(1);
    		if(SystemOperate.bShowRole)this.pls.InsertByte(0);
    		else this.pls.InsertByte(1);
    		if(SystemOperate.bShowSell)this.pls.InsertByte(0);
    		else this.pls.InsertByte(1);
    		
    		this.pls.InsertByte(SystemOperate.iNearRoleCount);
    		this.pls.InsertByte(SystemOperate.iPictureQuality);
    		this.pls.InsertByte(SystemOperate.iPictureBuffer);
    		this.pls.InsertByte(SystemOperate.iRenderType);
    		
    		if(GmPlay$1.bCheckRes)this.pls.InsertByte(1);
    		else this.pls.InsertByte(0);
    		
    		this.pls.InsertByte(SystemOperate.iMusic);
    		this.pls.InsertByte(SystemOperate.iSound);
    		
    		this.pls.InsertByte(XRecordFast.iHaveSeverRecord);
    		this.pls.InsertInt(XRecordFast.iLastSector);
    		this.pls.InsertInt(XRecordFast.iLastSever);
    		
    		this.pls.InsertByte(SystemOperate.iWheel);
    		
    		this.pls.InsertInt(SystemOperate.iSameRate);
    		this.pls.InsertInt(SystemOperate.iScreenLS);
    		if(SystemOperate.iScreenLS<0 || SystemOperate.iScreenLS>400)SystemOperate.iScreenLS=0;
    		this.pls.InsertInt(XRecordFast.iClientID);
    		
    		this.pls.InsertInt(XRecordFast.iExtHelp);
    		this.pls.InsertInt(XRecordFast.iQQSay);
    //		for(i=0;i<10;i++)GmPlay.sop("save XRecordFast.XRecordFast.iExtHelp="+XRecordFast.XRecordFast.iExtHelp);
    		
    		if(SystemOperate.bShowMount)this.pls.InsertByte(0);
    		else this.pls.InsertByte(1);
    		if(SystemOperate.bShowWeapon)this.pls.InsertByte(0);
    		else this.pls.InsertByte(1);
    		if(SystemOperate.bShowColor)this.pls.InsertByte(0);
    		else this.pls.InsertByte(1);
    		if(SystemOperate.bShowFollow)this.pls.InsertByte(0);
    		else this.pls.InsertByte(1);
    		if(SystemOperate.bShowTitle)this.pls.InsertByte(0);
    		else this.pls.InsertByte(1);
    		
    		this.pls.InsertInt(XRecordFast.iPublicVoiceShow);
    		this.pls.InsertByte(XRecordFast.iPrivateChatMode);
    		
    		this.pls.InsertInt(XRecordFast.iFilterChannel);
    		this.pls.InsertInt(XRecordFast.iAutoPlay);
    		this.pls.InsertInt(XRecordFast.iFastVoice);
    		this.pls.iLength=this.pls.iOffset;
    		this.pls.JS_DataToLocal(fn);
    		XDefine$1.sop("SaveTo 1"+SystemOperate.iMusic+","+SystemOperate.iSound);
    	}
    	ReadFrom( fn)
    	{
    		var i;
    		XDefine$1.sop("ReadFrom 1");
    		if(!this.pls.JS_DataFromLocal(fn))//cxunmz
    		{//第一次进入游戏，初始化数据
    			console.log('初始存储数据');
    			XRecordFast.iFirstOpen=true;
    			this.SaveTo(fn);
    			if(!this.pls.JS_DataFromLocal(fn))
    			{
    				XDefine$1.sop("ReadFrom 2");
    				return;
    			}
    		}
    		XDefine$1.sop("ReadFrom 3");
    		this.v=this.pls.GetNextByte();
    		this.iUserCount=this.pls.GetNextByte();//记录的用户数量
    		for(i=0;i<this.iUserCount;i++)
    		{
    			this.sUser[i]=this.pls.GetNextString();
    			this.sPass[i]=this.pls.GetNextString();
    		}
    		if(this.pls.GetNextByte()==0)this.bSaveUser=false;
    		else this.bSaveUser=true;
    		if(this.pls.GetNextByte()==0)this.bSavePass=false;
    		else this.bSavePass=true;
    		
    		for(i=0;i<16;i++)XRecordFast.iGuideFlags[i]=this.pls.GetNextInt();
    //		for(i=0;i<16;i++)XRecordFast.iGuideFlags[i]=0;
    		
    		if(this.pls.GetNextByte()==0)SystemOperate.bShowName=true;
    		else SystemOperate.bShowName=false;
    		if(this.pls.GetNextByte()==0)SystemOperate.bShowRole=true;
    		else SystemOperate.bShowRole=false;
    		if(this.pls.GetNextByte()==0)SystemOperate.bShowSell=true;
    		else SystemOperate.bShowSell=false;
    //		GmPlay.sop("aa"+this.bSaveUser+"bb"+this.bSavePass);
    //		GmPlay.sop("Load "+fn+" OK");
    //		this.iUserCount=1;
    //		this.sUser[0]="userb";
    //		this.sPass[0]="pass";
    		SystemOperate.iNearRoleCount=this.pls.GetNextByte();
    		SystemOperate.iNearRoleCount=25;
    		SystemOperate.iPictureQuality=this.pls.GetNextByte();
    		SystemOperate.iPictureQuality=1;
    		SystemOperate.iPictureBuffer=this.pls.GetNextByte();//
    		SystemOperate.iPictureBuffer=50;//每次启动设置为50
    		SystemOperate.iRenderType=this.pls.GetNextByte();
    		SystemOperate.iRenderType=1;//渲染模式固定为1

    		if(SystemOperate.iNearRoleCount<5)SystemOperate.iNearRoleCount=5;
    		
    		if(GmConfig$1.SYSW<=800)i=10;
    		else if(GmConfig$1.SYSW<1280)i=25;
    		else if(GmConfig$1.SYSW==1280)i=40;
    		else i=50;
    		
    		if(this.pls.GetNextByte()==1)
    		{
    			GmPlay$1.bCheckRes=true;
    			
    			if(SystemOperate.iNearRoleCount>20)SystemOperate.iNearRoleCount-=10;
    			else SystemOperate.iNearRoleCount=10;
    			
    //			if(SystemOperate.iPictureBuffer>i)SystemOperate.iPictureBuffer=i;
    //			else if(SystemOperate.iPictureBuffer>5)SystemOperate.iPictureBuffer-=5;
    //			else SystemOperate.iPictureBuffer=0;
    		}
    		else
    		{
    			GmPlay$1.bCheckRes=false;
    //			if(SystemOperate.iPictureBuffer<i)
    		}
    		if(XRecordFast.iFirstOpen)
    		{
    			SystemOperate.iPictureBuffer=i;
    		}
    		
    		SystemOperate.iMusic=this.pls.GetNextByte();
    		SystemOperate.iSound=this.pls.GetNextByte();
    		
    		XRecordFast.iHaveSeverRecord=this.pls.GetNextByte();
    		XRecordFast.iLastSector=this.pls.GetNextInt();
    		XRecordFast.iLastSever=this.pls.GetNextInt();
    		
    		SystemOperate.iWheel=this.pls.GetNextByte();
    		
    		SystemOperate.iSameRate=this.pls.GetNextInt();
    		SystemOperate.iSameRate=0;
    		SystemOperate.iScreenLS=this.pls.GetNextInt();
    		if(GmConfig$1.SYSW>=1280)SystemOperate.iScreenLS=(1280-800)*400/(GmConfig$1.SYSW-800);
    		else SystemOperate.iScreenLS=(GmConfig$1.SYSW-800)*400/(1280-800);
    		
    		XRecordFast.iClientID=this.pls.GetNextInt();
    		
    		XRecordFast.iExtHelp=this.pls.GetNextInt();
    		XRecordFast.iQQSay=this.pls.GetNextInt();
    //		for(i=0;i<10;i++)GmPlay.sop("load XRecordFast.XRecordFast.iExtHelp="+XRecordFast.XRecordFast.iExtHelp);
    //		GmPlay.sop("read XRecordFast.iExtHelp="+XRecordFast.iExtHelp);
    		
    		if(this.pls.GetNextByte()==0)SystemOperate.bShowMount=true;
    		else SystemOperate.bShowMount=false;
    		if(this.pls.GetNextByte()==0)SystemOperate.bShowWeapon=true;
    		else SystemOperate.bShowWeapon=false;
    		if(this.pls.GetNextByte()==0)SystemOperate.bShowColor=true;
    		else SystemOperate.bShowColor=false;
    		if(this.pls.GetNextByte()==0)SystemOperate.bShowFollow=true;
    		else SystemOperate.bShowFollow=false;
    		if(this.pls.GetNextByte()==0)SystemOperate.bShowTitle=true;
    		else SystemOperate.bShowTitle=false;
    		
    //		SystemOperate.bShowName=true;
    //		SystemOperate.bShowRole=true;
    //		SystemOperate.bShowSell=true;

    		if(SystemOperate.iPictureQuality==0)SystemOperate.iPictureBuffer=50;
    		else if(SystemOperate.iPictureQuality==1)SystemOperate.iPictureBuffer=25;
    		else SystemOperate.iPictureBuffer=0;
    		
    		XRecordFast.iPublicVoiceShow=this.pls.GetNextInt();
    		XRecordFast.iPrivateChatMode=this.pls.GetNextByte();
    		
    		if(this.pls.iOffset>=this.pls.iLength)XRecordFast.iFilterChannel=255;
    		else XRecordFast.iFilterChannel=this.pls.GetNextInt();
    		
    		if(this.pls.iOffset>=this.pls.iLength)XRecordFast.iAutoPlay=0;
    		else XRecordFast.iAutoPlay=this.pls.GetNextInt();

    		if(this.pls.iOffset>=this.pls.iLength)XRecordFast.iFastVoice=3;
    		else XRecordFast.iFastVoice=this.pls.GetNextInt();
    	}
    	
    	SavePrivateChat()
    	{//保存watch过的记录chatrecord_rid.dat
    		var i,j;
    		var ps=PrivateChatWatch.gi();
    		this.pls.iOffset=0;
    		for(i=0;i<ps.iMessageCount;i++)
    		{
    			if(ps.pms[i].bWatched)
    			{
    				this.pls.InsertInt(ps.pms[i].iRid);//from
    				this.pls.InsertString(ps.pms[i].sName);
    				this.pls.InsertByte(ps.pms[i].iRax);
    				this.pls.InsertInt(ps.pms[i].iDRid);//to
    				this.pls.InsertString(ps.pms[i].sTime);
    				this.pls.InsertString(ps.pms[i].sDetail);
    				for(j=1;j<5;j++)
    				{
    					this.pls.InsertByte(ps.pms[i].exts[j].type);
    					switch(ps.pms[i].exts[j].type)
    					{
    					case 0://物品
    					case 1://宠物
    						this.pls.InsertInt(ps.pms[i].exts[j].eid);
    						this.pls.InsertShort(ps.pms[i].exts[j].tid);
    						break;
    					case 2://语音
    						this.pls.InsertInt(ps.pms[i].exts[j].eid);
    						this.pls.InsertString(ps.pms[i].exts[j].name);
    						this.pls.InsertString(ps.pms[i].exts[j].detail);
    						break;
    					}
    				}
    			}
    		}
    		this.pls.InsertInt(123454321);
    		this.pls.JS_DataFromLocal("recordchat_"+GmMe$1.me.iRid+".dat");
    	}

    	ReadPrivateChat()
    	{//进入游戏，获得rid时，载入记录chatrecord_rid.dat
    		if(!this.pls.JS_DataFromLocal("recordchat_"+GmMe$1.me.iRid+".dat"))return;
    		var i,j;
    //		for(i=0;i<100;i++)GmPlay.sop("-------");
    		var ps=PrivateChatWatch.gi();
    		for(i=0;i<PrivateChatWatch.MAXMESSAGE;i++)
    		{
    			j=this.pls.GetNextInt();
    			if(j==123454321)break;
    			ps.pms[i].iRid=j;//from
    			ps.pms[i].sName=this.pls.GetNextString();
    			ps.pms[i].iRax=this.pls.GetNextByte();
    			ps.pms[i].iDRid=this.pls.GetNextInt();//to
    			ps.pms[i].sTime=this.pls.GetNextString();
    			ps.pms[i].sDetail=this.pls.GetNextString();
    			ps.pms[i].exts[0].type=3;//自己名字
    			ps.pms[i].exts[0].eid=ps.pms[i].iRid;
    			for(j=1;j<5;j++)
    			{
    				ps.pms[i].exts[j].type=this.pls.GetNextByte();
    				switch(ps.pms[i].exts[j].type)
    				{
    				case 0://物品
    				case 1://宠物
    					ps.pms[i].exts[j].eid=this.pls.GetNextInt();
    					ps.pms[i].exts[j].tid=this.pls.GetNextShort();
    					break;
    				case 2://语音
    					ps.pms[i].exts[j].eid=this.pls.GetNextInt();
    					ps.pms[i].exts[j].name=this.pls.GetNextString();
    					ps.pms[i].exts[j].detail=this.pls.GetNextString();
    					break;
    				}
    			}
    			ps.pms[i].bWatched=true;
    			ps.pms[i].iSession=0;
    		}
    //		GmPlay.sop("-------"+i);
    		ps.iMessageCount=i;
    	}
    }

    XRecordFast.iGuideFlags;
    XRecordFast.iExtHelp;
     XRecordFast.iQQSay;

     XRecordFast.iHaveSeverRecord=0;
    XRecordFast.iLastSector=0;
    XRecordFast.iLastSever=0;
    XRecordFast.iClientID=0;
    XRecordFast.sLastSeverName="";

    XRecordFast.iPublicVoiceShow=1;//快捷语音图标显示开关
    XRecordFast.iPrivateChatMode=0;//私聊对话框模式0小框，1带记录
     XRecordFast.iFilterChannel=255;//全开
    XRecordFast.iAutoPlay=0;//全关
    XRecordFast.iFastVoice=3;//当前，队伍

    XRecordFast.iFirstOpen=false;

    class GoodsStoreFrame extends BaseClass{

    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;

    		this.iW=30+430+20+430+30;
    		this.iH=30+60+20+345+20+50+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;

    //		btn_close=new XButton(GmPlay.xani_ui);
    //		btn_close.InitButton("统一关闭按钮");
    //		btn_close.Move(this.iX+this.iW-60-5, this.iY, 60, 60);

    		this.btn_switch=new Array(20);//
    		for(i=0;i<20;i++)
    		{
    			this.btn_switch[i]=new XButton(GmPlay$1.xani_nui3);
    			this.btn_switch[i].InitButton("仓库按钮");
    		}
    		
    		this.btn_out=new XButton(GmPlay$1.xani_nui2);
    		this.btn_out.InitButton("按钮1_110");
    		this.btn_out.sName="取出";
    		
    		this.btn_in=new XButton(GmPlay$1.xani_nui2);
    		this.btn_in.InitButton("按钮1_110");
    		this.btn_in.sName="存入";

    		this.iStorePoint=0;
    	}
    	Draw()
    	{
    		var i;
    		var offx,offy;
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		offx=this.iX+30;
    		offy=this.iY+30;
    		for(i=0;i<13;i++)
    		{
    			if(i==this.iStorePoint)
    			{
    				this.btn_switch[i].bMouseDown=true;
    				this.btn_switch[i].bMouseIn=true;
    			}
    			this.btn_switch[i].Move(offx+i*68, offy, 60, 60);
    			this.btn_switch[i].iNameColor=0xff003e57;
    			if(i<GoodsStoreFrame.iStoreCount)
    			{
    				this.btn_switch[i].sName=""+(i+1);
    				this.btn_switch[i].Draw();
    			}
    			else
    			{
    				this.btn_switch[i].sName="开";
    				this.btn_switch[i].Draw();
    				break;
    			}
    		}
    		offy+=60+20;
    		this.iGx1=offx;
    		this.iGy1=offy;
    		GoodsDraw.new_DrawGoods(offx, offy, MyGoods.gi().goods[this.iStorePoint+10], null, null);
    		if(this.lockgoods1!=null)
    		{
    			GoodsDraw.new_DrawRect(offx, offy, MyGoods.gi().goods[this.iStorePoint+10], this.lockgoods1, 0);
    //			GoodsDraw.Draw_Detail(this.lockgoods1, -1, -1);
    		}
    		
    		this.iGx2=offx+430+20;
    		this.iGy2=offy;
    		GoodsDraw.new_DrawGoods(this.iGx2, offy, MyGoods.gi().goods[2], null, null);
    		if(this.lockgoods2!=null)GoodsDraw.new_DrawRect(this.iGx2, offy, MyGoods.gi().goods[2], this.lockgoods2, 0);
    		
    		offy+=345+20;

    		this.btn_out.Move(offx+430-110, offy-1, 110, 52);
    		this.btn_out.Draw();
    		DrawMode$1.new_TagText2(offx, offy+9, 150, "存银", ""+GmMe$1.me.rbs.iStore);

    		this.btn_in.Move(offx+430+20+430-110, offy, 110, 52);
    		this.btn_in.Draw();//+"/20000000"
    		DrawMode$1.new_TagText2(offx+430+20, offy+9, 150, "铜币", ""+GmMe$1.me.rbs.iMoney);
    		
    		if(Confirm1.end(Confirm1.CONFIRM_BUYSTORE))
    		{//
    			if(Confirm1.bConfirm)
    			{//购买一个仓库
    				GmProtocol$1.gi().s_OpenStore(10, 10*(GoodsStoreFrame.iStoreCount-GoodsStoreFrame.MAXFREESTORE+1),0);
    			}
    		}
    		if(InNumber.end(InNumber.IN_IN))
    		{//
    			if(InNumber.bOk)
    			{//确认踢人
    				GmProtocol$1.gi().s_OpenStore(20,InNumber.iNumber,0);
    			}
    		}
    		if(InNumber.end(InNumber.IN_OUT))
    		{//
    			if(InNumber.bOk)
    			{//确认踢人
    				GmProtocol$1.gi().s_OpenStore(21,InNumber.iNumber,0);
    			}
    		}
    		if(GoodsDraw.bShowDetail())GoodsDraw.new_DrawDetail(null, -1, -1,0);
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if((this.lockgoods1==null && this.lockgoods2==null) || this.lockgoods1!=null)
    		{
    			this.lockgoods1=GoodsDraw.new_LockGoods(x, y, this.iGx1, this.iGy1, MyGoods.gi().goods[this.iStorePoint+10], msg);
    			if(GoodsDraw.bCanProc() && this.lockgoods1!=null)
    			{//从背包到道具栏
    				for(i=0;i<20;i++)
    				{
    					if(MyGoods.gi().goods[2][i].iGid<=0)
    					{
    						MyGoods.gi().MoveGoods(this.lockgoods1, MyGoods.gi().goods[2][i]);
    //						GmProtocol.gi().s_MoveGoods(this.lockgoods1.iGid, this.iStorePoint+10, this.lockgoods1.iPos, -1, 2, i);
    //						MyGoods.gi().goods[2][i].copyfrom(this.lockgoods1);
    //						this.lockgoods1.iGid=-1;
    						this.lockgoods1=null;
    						break;
    					}
    				}
    			}
    			if(GoodsDraw.bCanMove() && this.lockgoods1!=null)
    			{//交换物品
    				MyGoods.gi().MoveGoods(this.lockgoods1,GoodsDraw.swaplock);
    			}
    		}
    		
    		if((this.lockgoods1==null && this.lockgoods2==null) || this.lockgoods2!=null)
    		{
    			this.lockgoods2=GoodsDraw.new_LockGoods(x, y, this.iGx2, this.iGy2, MyGoods.gi().goods[2], msg);
    			if(GoodsDraw.bCanProc() && this.lockgoods2!=null)
    			{//从道具栏到背包
    				for(i=0;i<20;i++)
    				{
    					if(MyGoods.gi().goods[this.iStorePoint+10][i].iGid<=0)
    					{
    						MyGoods.gi().MoveGoods(this.lockgoods2, MyGoods.gi().goods[this.iStorePoint+10][i]);
    //						GmProtocol.gi().s_MoveGoods(this.lockgoods2.iGid, 2, this.lockgoods2.iPos, -1, this.iStorePoint+10, i);
    //						MyGoods.gi().goods[this.iStorePoint+10][i].copyfrom(this.lockgoods2);
    //						this.lockgoods2.iGid=-1;
    						this.lockgoods2=null;
    						break;
    					}
    				}
    			}
    			if(GoodsDraw.bCanMove() && this.lockgoods2!=null)
    			{//交换物品
    				MyGoods.gi().MoveGoods(this.lockgoods2,GoodsDraw.swaplock);
    			}
    		}
    		if(this.btn_out.ProcTouch(msg, x, y))
    		{
    			if(this.btn_out.bCheck())
    			{//取出
    				InNumber.start(InNumber.IN_OUT, "输入要取出金额", GmMe$1.me.rbs.iStore, GmMe$1.me.rbs.iStore);
    			}
    		}
    		if(this.btn_in.ProcTouch(msg, x, y))
    		{
    			if(this.btn_in.bCheck())
    			{//存入
    				if(GmMe$1.me.rbs.iStore+GmMe$1.me.rbs.iMoney>20000000)
    				{
    					i=20000000-GmMe$1.me.rbs.iStore;
    				}
    				else i=GmMe$1.me.rbs.iMoney;
    				InNumber.start(InNumber.IN_IN, "输入要存入金额", i,i);
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    			return true;
    		}
    		for(i=0;i<13;i++)
    		{
    			if(this.btn_switch[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_switch[i].bCheck())
    				{
    					if(i<GoodsStoreFrame.iStoreCount)
    					{
    						if(i!=this.iStorePoint)
    						{
    							this.iStorePoint=i;
    							XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    							GmProtocol$1.gi().s_OpenStore(0, i,0);
    						}
    					}
    					else if(i==GoodsStoreFrame.iStoreCount)
    					{//开启新背包格子
    						Confirm1.start(Confirm1.CONFIRM_BUYSTORE,"是否确认花费"+10*(GoodsStoreFrame.iStoreCount-GoodsStoreFrame.MAXFREESTORE+1)+"元宝开启一个仓库？");
    					}
    				}
    			}
    		}
    //		if(btn_close.ProcTouch(msg, x, y))
    //		{
    //			if(btn_close.bCheck())
    //			{
    //				XStat.gi().PopStat(1);
    //			}
    //			return true;
    //		}
    		return false;
    	}
    }

    GoodsStoreFrame.MAXFREESTORE=3;

    GoodsStoreFrame.iStoreCount;
    	
    	
    GoodsStoreFrame.ResetStoreCount=function( flag8)
    	{
    		GoodsStoreFrame.iStoreCount=flag8%100+GoodsStoreFrame.MAXFREESTORE;
    	};

    class PetStoreFrame extends BaseClass{
    	
    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW = 510;
    		this.iH = 400;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_io=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_io.InitButton("1号按钮90_60");
    		
    		this.btn_watch=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_watch.InitButton("1号按钮90_60");
    		this.btn_watch.sName="查看";
    		
    		this.iPid=new Int32Array(16);//
    		this.sPName=new Array(16);//
    		
    		this.iPetPoint=-1;
    		
    		this.btn_switch=new Array(20);//
    		for(i=0;i<20;i++)
    		{
    			this.btn_switch[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_switch[i].InitButton("4号按钮60_60");
    			this.btn_switch[i].Move(this.iX + 20 + i * 70, this.iY + this.iH-30-60, 60, 60);
    			this.btn_switch[i].sName=""+(i+1);
    		}
    	}

    	Draw()
    	{
    		var i;
    		var offx,offy;
    		var w,h;
    		DrawMode$1.frame_type4("10号框20_20", this.iX, this.iY, this.iW, this.iH, 20, 20);
    		
    		offx=this.iX+20;
    		offy=this.iY+20;
    		w=180;
    		h=260;
    		DrawMode$1.frame_type4("11号框20_20", offx, offy, w, h, 20, 20);
    		for(i=0;i<this.iCount;i++)
    		{//仓库内的宠物列表
    			if(this.iPetPoint>=0 && this.iPagePoint==0 && this.iPetPoint==i)
    			{
    				DrawMode$1.frame_type1("12号框20_30", offx + 10, offy + 10 + i * 30, w - 20, 20);
    			}
    			M3DFast$1.gi().DrawTextEx(offx + 10, offy + 10 + 15 + i * 30, this.sPName[i], 0xff114e61, 20, 101, 1, 1, 0, 0, -2);
    		}
    		
    		if(this.iPetPoint>=0)
    		{
    			if(this.iPagePoint==0)this.btn_io.sName="取出";
    			else this.btn_io.sName="存入";
    			this.btn_io.Move(offx + w + 10, offy + h / 2 - 30-60, 90, 60);
    			this.btn_io.Draw();
    			
    			this.btn_watch.Move(offx + w + 10, offy + h / 2 + 30, 90, 60);
    			this.btn_watch.Draw();
    		}
    		
    		offx = this.iX + 20 + w + 10+90+10;
    		DrawMode$1.frame_type4("11号框20_20", offx, offy, w, h, 20, 20);
    		for(i=0;i<MyPets$1.mp.iPetCount;i++)
    		{//仓库内的宠物列表
    			if(this.iPetPoint>=0 && this.iPagePoint==1 && this.iPetPoint==i)
    			{
    				DrawMode$1.frame_type1("12号框20_30", offx + 10, offy + 10 + i * 30, w - 20, 20);
    			}
    			M3DFast$1.gi().DrawTextEx(offx+10, offy+10+15+i*30, MyPets$1.mp.pets[i].sName, 0xff114e61, 20, 101, 1, 1, 0, 0, -2);
    		}
    //		this.btn_io.Move(x, y, w, h)
    		
    		for(i=0;i<6;i++)
    		{
    			if(i==this.iStorePoint)
    			{
    				this.btn_switch[i].bMouseDown=true;
    				this.btn_switch[i].bMouseIn=true;
    			}
    			if(i<PetStoreFrame.iStoreCount)
    			{
    				this.btn_switch[i].sName=""+(i+1);
    				this.btn_switch[i].Draw();
    			}
    			else
    			{
    				this.btn_switch[i].sName="开";
    				this.btn_switch[i].Draw();
    				break;
    			}
    		}
    		
    		if(Confirm1.end(Confirm1.CONFIRM_BUYSTORE))
    		{//
    			if(Confirm1.bConfirm)
    			{//购买一个宠物仓库
    				GmProtocol$1.gi().s_OpenStore(11, 10*(PetStoreFrame.iStoreCount-PetStoreFrame.MAXFREESTORE+1),0);
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		var offx,offy;
    		
    		if(this.iPetPoint>=0)
    		{
    			if(this.btn_io.ProcTouch(msg, x, y))
    			{
    				if(this.btn_io.bCheck())
    				{
    					if(this.iPagePoint==0)
    					{
    						GmProtocol$1.gi().s_OpenStore(31, this.iStorePoint,this.iPid[this.iPetPoint]);
    						this.btn_io.sName="取出";
    					}
    					else
    					{
    						GmProtocol$1.gi().s_OpenStore(30, this.iStorePoint,MyPets$1.mp.pets[this.iPetPoint].iPid);
    						this.btn_io.sName="存入";
    					}
    				}
    				return true;
    			}
    			if(this.btn_watch.ProcTouch(msg, x, y))
    			{
    				if(this.btn_watch.bCheck())
    				{//查看
    					if(this.iPagePoint==0)GmProtocol$1.gi().s_WatchOn(2,this.iPid[this.iPetPoint],0,"");
    					else GmProtocol$1.gi().s_WatchOn(2,MyPets$1.mp.pets[this.iPetPoint].iPid,0,"");
    				}
    				return true;
    			}
    		}
    		
    		this.iPetPoint=-1;
    		offx=this.iX+20;
    		offy=this.iY+20;
    		for(i=0;i<this.iCount;i++)
    		{//仓库内的宠物列表
    			if(XDefine$1.bInRect(x, y, offx+10, offy+10+i*30, 160, 30))
    			{
    				this.iPagePoint=0;
    				this.iPetPoint=i;
    				return true;
    			}
    		}
    		offx=this.iX+20+180+10+90+10;
    		for(i=0;i<MyPets$1.mp.iPetCount;i++)
    		{//仓库内的宠物列表
    			if(XDefine$1.bInRect(x, y, offx+10, offy+10+i*30, 160, 30))
    			{
    				this.iPagePoint=1;
    				this.iPetPoint=i;
    				return true;
    			}
    		}
    		
    		for(i=0;i<6;i++)
    		{
    			if(this.btn_switch[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_switch[i].bCheck())
    				{
    					if(i<PetStoreFrame.iStoreCount)
    					{
    						if(i!=this.iStorePoint)
    						{
    							this.iStorePoint=i;
    							XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    							GmProtocol$1.gi().s_OpenStore(1, i,0);
    						}
    					}
    					else if(i==PetStoreFrame.iStoreCount)
    					{//开启新背包格子
    						Confirm1.start(Confirm1.CONFIRM_BUYSTORE,"是否确认花费"+10*(PetStoreFrame.iStoreCount-PetStoreFrame.MAXFREESTORE+1)+"元宝开启一个宠物仓库？");
    					}
    				}
    			}
    		}
    		
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return false;
    	}
    }

    PetStoreFrame.MAXFREESTORE=1;
    	
    PetStoreFrame.iStoreCount;
    	
    PetStoreFrame.ResetStoreCount=function( flag8)
    	{
    		PetStoreFrame.iStoreCount=flag8/100+PetStoreFrame.MAXFREESTORE;
    	};
    	
    PetStoreFrame.Open=function( pls)
    	{
    		var i;
    		if(XStat$1.gi().LastStatType(0)==XStat$1.GS_LOADING1)XStat$1.gi().PopStat(1);
    		if(XStat$1.gi().LastStatType(0)!=XStat$1.GS_PETSTOREFRAME)XStat$1.gi().PushStat(XStat$1.GS_PETSTOREFRAME);
    		
    		var psf=(XStat$1.gi().LastStat(0));
    		
    		psf.iStorePoint=pls.GetNextByte();
    		psf.iCount=pls.GetNextByte();
    		for(i=0;i<psf.iCount;i++)
    		{
    			psf.iPid[i]=pls.GetNextInt();
    			psf.sPName[i]=pls.GetNextString();
    		}
    		psf.iPetPoint=-1;
    	};

    class _ROLEBASE
    {/*
    	public Int32Array iGovXiu=new Int32Array(10)(2);//
    	public Int32Array iGovSkill=new Int32Array(8);//
    	public Int32Array iSchoolSkill=new Int32Array(LearnSkill.MAXSKILLCOUNT);//
    	public int iHp,iMaxHp;
    	public int iMp,iMaxMp;
    	public int iPower,iMaxPower;//体力
    	public int iMoney,iInGot;
    	public int iStore;
    	public int iReserve;
    	public int iAnger;
    	public int iExp;
    	public int iLev;
    	public int iSchoolId;
    	public int iGovId;
    	public Int32Array iBaseAtt=new Int32Array(5);//
    	public int nut;//潜力点
    	public int tz,fl,ll,nl,mj;
    	public int iSpirit,iAttack,iDefence,iSpeed;
    	public int iRenQi;
    	public String sTitle;
    	*/
    	constructor()
    	{
    		this.sTitle="";
    		this.iLev=0;

    		this.iGovXiu=new Array(10);
    		for(var i=0;i<10;i++)this.iGovXiu[i]=new Int32Array(2);

    		this.iGovSkill=new Int32Array(8);

    		this.iSchoolSkill=new Int32Array(LearnSkill.MAXSKILLCOUNT);
    		this.iBaseAtt=new Int32Array(5);
    	}
    }

    class GmMe$1 {
    	constructor() {
    		this.iRace=0;
    		this.iSex=0;
    		this.bInited = false;
    		this.rbs = new _ROLEBASE();
    		this.iOldType = -1;

    		this.bShowHpDetail = false;
    		this.RETEXT_CHANGETYPE = 1;
    		this.RETEXT_LOCKER = 2;
    		this.RETEXT_ANGER = 4;
    		this.bHaveLock = false;
    	   this.bLocked;
    	   this.iUnlockTime;
    		this.RETBASE_HP = 1;
    		this.RETBASE_MP = 2;
    		this.RETBASE_POWER = 4;
    		this.RETBASE_MONEY = 8;
    		this.RETBASE_EXP = 16;
    		this.RETBASE_LEV = 32;
    		this.RETBASE_ATT = 64;
    		this.RETBASE_OTHER = 128;
    	   this.iScore;
    	   this.iComplexScore;
    	}

    	Init()
    	{
    		var i,j;
    		this.iFlag = new Int32Array(64);//
    		this.iFlagExt=new Int32Array(64);//

    		this.aa_body = new AnimaAction();
    		this.aa_weapon = new AnimaAction();
    		this.aa_mounts = new AnimaAction();
    		this.iSpeed = 8;
    		this.iPopoDelay = 0;

    		this.iWeapTid = -1;
    		this.bwc = true;
    		this.bsc = true;
    		this.bfc8 = false;
    		this.bfc4 = true;
    		this.bfc6 = false;
    		this.sStat = "站立";
    		this.iFace8 = 0;
    		this.sFace8 = "左";
    		this.iRid = 0;
    		this.iMarks = new Array(GmMe$1.MAXMARK);//
    		for(i=0;i<GmMe$1.MAXMARK;i++)this.iMarks[i]=new Int32Array(3);

    		this.iFollowPid = 0;
    		this.iFollowX = 0;
    		this.iFollowY = 0;
    		this.aa_follow = new AnimaAction();

    		this.aa_team = new AnimaAction();
    		GmPlay$1.xani_ui.InitAnimaWithName("队伍图标", this.aa_team);

    		this.btn_reset = new XButton(GmPlay$1.xani_ui);
    		this.btn_reset.Move(0, 0, 118, 83);
    		this.btn_reset.bSingleButton = true;
    		this.btn_reset.sName = "重置";

    		this.btn_att = new XButton(GmPlay$1.xani_ui);
    		this.btn_att.bSingleButton = true;
    		this.btn_att.sName = "属性";

    		this.btn_petatt = new XButton(GmPlay$1.xani_ui);
    		this.btn_petatt.bSingleButton = true;
    		this.btn_petatt.sName = "宠物";
    		this.btn_petatt.Move(GmConfig$1.SCRW - 190-83, 0, 83, 83);

    		this.iFightPid = -1;
    		this.iFollowPid = -1;
    		this.iFightMid = -1;
    		this.iMountsTid=-1;
    		this.iMountsJjLev=-1;
    		this.bInited = true;
    		
    		this.aa_mts=new Array(6);//
    		this.aa_bds=new Array(6);//
    		this.aa_cls=new Array(6);//
    		this.iColor=new Int32Array(6);//
    		for(i=0;i<6;i++)
    		{
    			this.aa_mts[i]=new AnimaAction();
    			this.aa_bds[i]=new AnimaAction();
    			this.aa_cls[i]=new Array(5);
    			for(j=0;j<5;j++)
    			{
    				this.aa_cls[i][j]=new AnimaAction();
    			}
    			this.iColor[i]=0;
    		}
    	}

    	BeInvite( pls) {// 被邀请
    		this.iInviteId = pls.GetNextInt();
    		var name = pls.GetNextString();

    		Confirm1.start(Confirm1.CONFIRM_INVITE, name + "邀请你加入队伍，是否同意？");
    	}



    	start( pathxy,  pathcount) {
    		this.iPathPoint = 0;

    		this.iSx = pathxy[this.iPathPoint][0];
    		this.iSy = pathxy[this.iPathPoint][1];
    		this.iDx = pathxy[this.iPathPoint + 1][0];
    		this.iDy = pathxy[this.iPathPoint + 1][1];

    		this.iTick = parseInt(XDefine$1.llength(this.iSx, this.iSy, this.iDx, this.iDy) / this.iSpeed);
    		this.iAt = 0;

    		if (this.iTick == 0) {
    			this.iX = this.iDx;
    			this.iY = this.iDy;
    		} else {
    			this.iX = this.iSx + (this.iDx - this.iSx) * this.iAt / this.iTick;
    			this.iY = this.iSy + (this.iDy - this.iSy) * this.iAt / this.iTick;
    		}
    		this.FaceTo();
    		this.ChangeStat("跑步");
    	}

    	TeamFollow() {// 队伍跟随
    		var i;
    		if (MyTeam$1.bTeamLeader()) 
    		{// 自己是队长，让队员跟随
    			for (i = 1; i < GmMe$1.MAXTEAMOLE; i++) 
    			{
    				if (MyTeam$1.iTeamRid[i] != 0) 
    				{
    					var nr = Gameing.gameing.findnrs(MyTeam$1.iTeamRid[i]);
    					if (nr != null)
    					{
    						nr.iDx = this.iMarks[i * 10][0];
    						nr.iDy = this.iMarks[i * 10][1];
    						nr.iDFaceTo = this.iMarks[i * 10][2];
    					}
    				}
    			}
    		}
    	}

    	next( pathxy,  pathcount) {
    		var i;
    		if (!this.IsStat("跑步"))
    			return true;
    		this.iAt++;
    		if (this.iTick == 0) {
    			this.iX = this.iDx;
    			this.iY = this.iDy;
    		} else {
    			for (i = GmMe$1.MAXMARK - 1; i > 0; i--) {
    				this.iMarks[i][0] = this.iMarks[i - 1][0];
    				this.iMarks[i][1] = this.iMarks[i - 1][1];
    				this.iMarks[i][2] = this.iMarks[i - 1][2];
    			}
    			this.iMarks[0][0] = this.iX;
    			this.iMarks[0][1] = this.iY;
    			this.iMarks[0][2] = this.iFace8 + this.iFace4 * 10;
    			this.iX = this.iSx + (this.iDx - this.iSx) * this.iAt / this.iTick;
    			this.iY = this.iSy + (this.iDy - this.iSy) * this.iAt / this.iTick;
    		}
    		if (this.iAt >= this.iTick) {
    			this.iPathPoint++;
    			if (this.iPathPoint >= pathcount - 1) {
    				this.ChangeStat("站立");
    				return true;
    			}

    			this.iSx = pathxy[this.iPathPoint][0];
    			this.iSy = pathxy[this.iPathPoint][1];
    			this.iDx = pathxy[this.iPathPoint + 1][0];
    			this.iDy = pathxy[this.iPathPoint + 1][1];

    			this.iTick = parseInt(XDefine$1.llength(this.iSx, this.iSy, this.iDx, this.iDy) / this.iSpeed);
    			this.iAt = 0;

    			if (this.iTick == 0) {
    				this.iX = this.iDx;
    				this.iY = this.iDy;
    			} else {
    				this.iX = this.iSx + (this.iDx - this.iSx) * this.iAt / this.iTick;
    				this.iY = this.iSy + (this.iDy - this.iSy) * this.iAt / this.iTick;
    			}
    			this.FaceTo();
    		}

    		return false;
    	}

    	FaceTo() {//
    		var i, j;
    		var s;

    		i = 360 - XDefine$1.GetAngleXY(this.iDx, this.iDy, this.iSx, this.iSy);
    		i %= 360;

    		j = this.iFace4;
    		if (0 <= i && i <= 90)
    			this.iFace4 = 0;
    		else if (90 <= i && i <= 180)
    			this.iFace4 = 3;
    		else if (180 <= i && i <= 270)
    			this.iFace4 = 2;
    		else
    			this.iFace4 = 1;
    		if (j != this.iFace4)
    			this.bfc4 = true;

    		j = this.iFace6;
    		if (0 <= i && i <= 30)
    			this.iFace6 = 0;
    		else if (30 < i && i <= 90)
    			this.iFace6 = 5;
    		else if (90 < i && i <= 150)
    			this.iFace6 = 4;
    		else if (150 < i && i <= 210)
    			this.iFace6 = 3;
    		else if (210 < i && i <= 270)
    			this.iFace6 = 2;
    		else if (270 < i && i <= 330)
    			this.iFace6 = 1;
    		else
    			this.iFace6 = 0;
    		if (j != this.iFace6)
    			this.bfc6 = true;

    		s = this.sFace8;
    		if (45 * 1 - 23 < i && i < 45 * 1 + 23) {
    			this.iFace8 = 1;
    			this.sFace8 = "右上";
    		} else if (45 * 2 - 23 < i && i < 45 * 2 + 23) {
    			this.iFace8 = 2;
    			this.sFace8 = "上";
    		} else if (45 * 3 - 23 < i && i < 45 * 3 + 23) {
    			this.iFace8 = 3;
    			this.sFace8 = "左上";
    		} else if (45 * 4 - 23 < i && i < 45 * 4 + 23) {
    			this.iFace8 = 4;
    			this.sFace8 = "左";
    		} else if (45 * 5 - 23 < i && i < 45 * 5 + 23) {
    			this.iFace8 = 5;
    			this.sFace8 = "左下";
    		} else if (45 * 6 - 23 < i && i < 45 * 6 + 23) {
    			this.iFace8 = 6;
    			this.sFace8 = "下";
    		} else if (45 * 7 - 23 < i && i < 45 * 7 + 23) {
    			this.iFace8 = 7;
    			this.sFace8 = "右下";
    		} else {
    			this.iFace8 = 0;
    			this.sFace8 = "右";
    		}
    		// if(i<180)
    		// {
    		// iFaceTo=1;
    		// sFaceTo="右";
    		// }
    		// else
    		// {
    		// iFaceTo=0;
    		// sFaceTo="左";
    		// }
    		if (s!=this.sFace8)
    			this.bfc8 = true;
    		// if(j!=iFaceTo)bfc=true;
    	}

    	ChangeStat( s) {
    		if (this.sStat!=s) {
    			this.sStat = s;
    			this.bsc = true;
    		}
    	}

    	IsStat( s) {
    		if (this.sStat==s)
    			return true;
    		else
    			return false;
    	}


    //	static int iOldFaceto=-1,iOldStat=-1;
    	DrawMounts( x, y, faceto, stat, changed)
    	{//1鹿,2狮,3马
    //		if(1==1)return;
    		var i,j=0;
    		var xb=this.iRace*2+this.iSex;
    		var ifaceto=GmMe$1.face_sti(faceto);
    		var istat=GmMe$1.stat_sti(stat);
    		var itype=this.iMountsTid-1;
    		var ijj=this.iMountsJjLev-1;
    //{{"前","人前","后","人后","武器"},{"武器","右翅膀","人右","身体","人左","左翅膀"},{"武器","右翅膀","人右","身体","人左","左翅膀"},{"武器","右翅膀","人右","身体","人左","左翅膀"},{"后","人","武器","前"},{"左翅膀","人左","身体","人右","右翅膀","武器"},{"左翅膀","人左","身体","人右","右翅膀","武器"},{"左翅膀","人左","身体","人右","右翅膀","武器"}},//二阶
    //GmPlay.xani_nmounts[itype]
    		var offy=0;
    		if(changed)this.iOffY=0;
    		var lionoff=0;
    		if(this.iMountsTid==2)lionoff=12;
    //		this.iMountsJjLev--;
    //		GmPlay.sop("itype="+itype+",,,,ijj="+ijj+",,,,istat="+istat+",,,ifaceto="+ifaceto);
    //		this.aa_mts,this.aa_bds，0up     1down      2left     ,3right        ,4middle
    		for(i=0;i<SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto].length;i++)
    		{
    //			GmPlay.sop(i+"="+SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]);
    			if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="左翅膀")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(this.iMountsJjLev+"_"+stat+"_"+faceto+"_左翅膀",this.aa_mts[2]);
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_mts[2]);
    				this.aa_mts[2].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="右翅膀")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(this.iMountsJjLev+"_"+stat+"_"+faceto+"_右翅膀",this.aa_mts[3]);
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_mts[3]);
    				this.aa_mts[3].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="前")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(this.iMountsJjLev+"_"+stat+"_"+faceto+"_前",this.aa_mts[0]);
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_mts[0]);
    				this.aa_mts[0].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="后")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(this.iMountsJjLev+"_"+stat+"_"+faceto+"_后",this.aa_mts[1]);
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_mts[1]);
    				this.aa_mts[1].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="身体")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(this.iMountsJjLev+"_"+stat+"_"+faceto+"_身体",this.aa_mts[4]);
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_mts[4]);
    				this.aa_mts[4].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="飘带")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_nmounts[itype][ijj].InitAnimaWithName(this.iMountsJjLev+"_"+stat+"_"+faceto+"_飘带",this.aa_mts[5]);
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_mts[5]);
    				this.aa_mts[5].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人前")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto+"_前",this.aa_bds[0]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto+"_前",0);
    					j=this.aa_bds[0].pani.iAnimaY(this.aa_bds[0]) - 30;
    					if(this.iOffY>j)this.iOffY=j;
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_bds[0]);
    				this.DrawColor(xb,this.aa_bds[0].iFrame,y+offy,x,y+lionoff,0);
    				this.aa_bds[0].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人后")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto+"_后",this.aa_bds[1]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto+"_后",1);
    					j=this.aa_bds[1].pani.iAnimaY(this.aa_bds[1]) - 30;
    					if(this.iOffY>j)this.iOffY=j;
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_bds[1]);
    				this.DrawColor(xb,this.aa_bds[1].iFrame,y+offy,x,y+lionoff,1);

    				this.aa_bds[1].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人左")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto+"_左",this.aa_bds[2]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto+"_左",2);
    					j=this.aa_bds[2].pani.iAnimaY(this.aa_bds[2]) - 30;
    					if(this.iOffY>j)this.iOffY=j;
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_bds[2]);
    				this.DrawColor(xb,this.aa_bds[2].iFrame,y+offy,x,y+lionoff,2);

    				this.aa_bds[2].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人右")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto+"_右",this.aa_bds[3]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto+"_右",3);
    					j=this.aa_bds[3].pani.iAnimaY(this.aa_bds[3]) - 30;
    					if(this.iOffY>j)this.iOffY=j;
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_bds[3]);
    				this.DrawColor(xb,this.aa_bds[3].iFrame,y+offy,x,y+lionoff,3);

    				this.aa_bds[3].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="人")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName("骑"+stat+"_"+faceto,this.aa_bds[4]);
    					this.ChangeColor(xb,"骑"+stat+"_"+faceto,4);
    					j=this.aa_bds[4].pani.iAnimaY(this.aa_bds[4]) - 30;
    					if(this.iOffY>j)this.iOffY=j;
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_bds[4]);
    				this.DrawColor(xb,this.aa_bds[4].iFrame,y+offy,x,y+lionoff,4);

    				this.aa_bds[4].NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT_MOUNT[itype][ijj][istat][ifaceto][i]=="武器")
    			{
    				if(changed)
    				{
    					this.iWeapTid = MyGoods.gi().GetWeaponTid();
    					if(this.iWeapTid>=0)GmPlay$1.xani_weap[xb][SortAnima.WeapFlag(this.iWeapTid)].InitAnimaWithName("骑"+stat+"_"+faceto, this.aa_weapon);
    				}
    				if(this.iWeapTid>=0)
    				{
    					if(SystemOperate.bShowWeapon)DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y+lionoff, this.aa_weapon);
    					this.aa_weapon.NextFrame();
    				}
    				offy++;
    			}
    		}
    //		this.iMountsJjLev++;
    //		this.iMountsTid
    //		if (pms == null) {
    //			this.bsc = true;
    //			return;
    //		}
    		//_ANIMASORT_MOUNT[2马][1二阶][0站立1跑步][方向][切割]
    	}
    	ChangeColor( xb, sa, m)
    	{
    		if(!SystemOperate.bShowColor)return;
    		var i;
    		for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    		{
    			if(this.iColor[i]<=0 || this.iColor[i]>=6)continue;
    			GmPlay$1.xani_color[xb][this.iColor[i]-1].InitAnimaWithName(SortAnima._CHANGECOLOR[xb][i]+"_"+sa, this.aa_cls[m][i]);
    //			GmPlay.sop(""+SortAnima._CHANGECOLOR[xb][i]+"_"+sa);
    		}
    	}
    	DrawColor( xb, frame, offy, x, y, m)
    	{
    		if(!SystemOperate.bShowColor)return;
    		var i;
    		for(i=0;i<SortAnima._CHANGECOLOR[xb].length;i++)
    		{
    			if(this.iColor[i]<=0 || this.iColor[i]>=6)continue;
    			this.aa_cls[m][i].iFrame=frame;
    			DrawBuffer.gi().DrawAnima_aa(offy,null, x, y, this.aa_cls[m][i]);
    		}
    	}

    	DrawRole( x,  y, faceto, stat, changed) 
    	{
    		var i;
    		var xb=this.iRace*2+this.iSex;
    		var ifaceto=GmMe$1.face_sti(faceto);
    		var istat=GmMe$1.stat_sti(stat);
    //		GmPlay.sop("SortAnima="+SortAnima.iii);
    //		GmPlay.sop("xb="+xb+",,,istat="+istat+",,,ifaceto="+ifaceto+",,,"+stat);
    //		GmPlay.sop("AnimaSort._ANIMASORT="+AnimaSort._ANIMASORT.length);
    		var offy=0;
    		for(i=0;i<SortAnima._ANIMASORT[xb][istat][ifaceto].length;i++)
    		{
    //			GmPlay.sop("");
    			if(SortAnima._ANIMASORT[xb][istat][ifaceto][i]=="人物")
    			{
    				if(changed)
    				{
    					GmPlay$1.xani_newrole[xb].InitAnimaWithName(stat+"_"+faceto, this.aa_body);
    					this.ChangeColor(xb,stat+"_"+faceto,0);
    					this.iOffY = this.aa_body.pani.iAnimaY(this.aa_body) - 30;
    				}
    				DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y, this.aa_body);
    				this.DrawColor(xb,this.aa_body.iFrame,y+offy,x,y,0);
    				this.aa_body.NextFrame();
    				offy++;
    			}
    			else if(SortAnima._ANIMASORT[xb][istat][ifaceto][i]=="武器")
    			{
    				if(changed)
    				{
    					this.iWeapTid = MyGoods.gi().GetWeaponTid();
    					if(this.iWeapTid>=0)GmPlay$1.xani_weap[xb][SortAnima.WeapFlag(this.iWeapTid)].InitAnimaWithName(stat+"_"+faceto, this.aa_weapon);
    				}
    				if(this.iWeapTid>=0)
    				{
    //					GmPlay.sop("SortAnima.WeapFlag(this.iWeapTid)="+SortAnima.WeapFlag(this.iWeapTid));
    					if(SystemOperate.bShowWeapon)DrawBuffer.gi().DrawAnima_aa(y+offy,null, x, y, this.aa_weapon);
    					this.aa_weapon.NextFrame();
    				}
    //				GmPlay.sop("this.iWeapTid="+this.iWeapTid);
    				offy++;
    			}
    		}
    		// int xb=race*2+sex;
    		// xani_newrole[0]
    	}

    	Draw() 
    	{
    //		GmPlay.sop("len1="+_ANIMASORT[1].length+"__"+_ANIMASORT[1][0].length+"__"+_ANIMASORT[1][1].length);
    //		this.iRace = 1;
    //		this.iSex = 1;
    		var bchanged = false;

    		var i;
    		if (this.iChangeType > 0)
    		{
    			if (this.iOldType != 0)
    			{
    				this.iOldType = 0;
    				bchanged = true;
    			}
    			bchanged = this.bStatChanged() | bchanged;
    			bchanged = this.bFaceChanged6() | bchanged;
    			if (bchanged) 
    			{// 变身
    				if (this.iFace6 == 0)this.sFace6 = "右";
    				else if (this.iFace6 == 1)this.sFace6 = "右下";
    				else if (this.iFace6 == 2)this.sFace6 = "左下";
    				else if (this.iFace6 == 3)this.sFace6 = "左";
    				else if (this.iFace6 == 4)this.sFace6 = "左上";
    				else if (this.iFace6 == 5)this.sFace6 = "右上";

    				if (this.iChangeType >= 10000)GmPlay$1.xani_pets[this.iChangeType % 10000].InitAnimaWithName("变异_" + this.sStat + "_" + this.sFace6, this.aa_body);
    				else GmPlay$1.xani_pets[this.iChangeType % 10000].InitAnimaWithName(this.sStat + "_" + this.sFace6, this.aa_body);
    				this.iOffY = this.aa_body.pani.iAnimaY(this.aa_body) - 30;
    			}
    		} 
    		else if (this.iFightMid > 0 && !MySell.gi().bSelling && SystemOperate.bShowMount) 
    		{// 非骑乘状态
    			if (this.iOldType != 2) {
    				this.iOldType = 2;
    				bchanged = true;
    			}
    			
    			bchanged = this.bWeapChanged() | bchanged;//武器变化
    			bchanged = this.bStatChanged() | bchanged;//站立/行走变化
    			bchanged = this.bFaceChanged8() | bchanged;//方向变化
    			
    			if (bchanged)
    			{
    				var pms = MyMounts.mm.FindMounts(this.iFightMid);
    				if (pms == null)
    				{
    					this.bsc = true;
    					return;
    				}
    				this.iMountsTid=pms.iTid;
    				this.iMountsJjLev=pms.iJjLev;
    			}
    		} 
    		else
    		{//有坐骑
    			if (this.iOldType != 1) 
    			{
    				this.iOldType = 1;
    				bchanged = true;
    			}
    			bchanged = this.bStatChanged() | bchanged;//动作变化
    			bchanged = this.bFaceChanged8() | bchanged;//方向变化
    			bchanged = this.bWeapChanged() | bchanged;//武器变化

    			
    		}

    		if (this.iFollowPid > 0 && SystemOperate.bShowFollow)
    		{
    			var ppet = MyPets$1.mp.FindPet(this.iFollowPid);
    			if (ppet != null) 
    			{// 跟人物对应起来
    					this.iFollowX = this.iMarks[5][0];
    					this.iFollowY = this.iMarks[5][1];
    					var s = "";
    					if ((ppet.iBaobao & 2) == 0)s = "";
    					else s = "变异_";
    					if (this.iFollowX > this.iX)s += this.sStat + "_左";
    					else s += this.sStat + "_右";
    					GmPlay$1.xani_pets[ppet.iTid].InitAnimaWithName(s, this.aa_follow);// 左
    					this.aa_follow.SetFrame(GmPlay$1.iDelay);

    					DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy + this.iFollowY,null, MapManager.gi().iOffx + this.iFollowX,MapManager.gi().iOffy + this.iFollowY, this.aa_follow);// 跟随的宠物
    					FireworksEffect.DrawAura(0,MapManager.gi().iOffx + this.iFollowX, MapManager.gi().iOffy+ this.iFollowY,DrawBuffer.gi(),MapManager.gi().iOffy + this.iFollowY - 1);

    					DrawBuffer.gi().DrawText_2(MapManager.gi().iOffy + this.iFollowY+ 1, 1, MapManager.gi().iOffx + this.iFollowX,MapManager.gi().iOffy + this.iFollowY + 30, ppet.sName,0xffffb080, 20, 1, 0xff000000);
    			}
    		}
    		DrawBuffer.gi().BeginGroup();
    		//1影子
    		FireworksEffect.DrawAura(0,MapManager.gi().iOffx + this.iX,MapManager.gi().iOffy + this.iY,DrawBuffer.gi(),MapManager.gi().iOffy + this.iY);

    		//4称谓，名字
    		if (this.rbs.sTitle.length > 0 && SystemOperate.bShowTitle)
    		{//有称谓
    			DrawBuffer.gi().DrawText_2(MapManager.gi().iOffy + this.iY, 1,	MapManager.gi().iOffx + this.iX, MapManager.gi().iOffy + this.iY + 20,this.rbs.sTitle, 0xff80c0ff, 20, 1, 0xff000000);// 蓝色
    			DrawBuffer.gi().DrawText_2(MapManager.gi().iOffy + this.iY, 1,MapManager.gi().iOffx + this.iX, MapManager.gi().iOffy + this.iY + 20+ 20, this.sName, 0xff80ff80, 20, 1, 0xff000000);// 绿色
    		} 
    		else
    		{//无称谓
    			DrawBuffer.gi().DrawText_2(MapManager.gi().iOffy + this.iY, 1,MapManager.gi().iOffx + this.iX, MapManager.gi().iOffy + this.iY + 30,this.sName, 0xff80ff80, 20, 1, 0xff000000);
    		}
    //2人物，武器，坐骑，变身
    		if (this.iChangeType > 0) 
    		{//变身
    			DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy + this.iY,null, MapManager.gi().iOffx+ this.iX, MapManager.gi().iOffy + this.iY, this.aa_body);
    			this.aa_body.NextFrame();
    		} 
    		else if (this.iFightMid > 0 && !MySell.gi().bSelling && SystemOperate.bShowMount)
    		{//非骑乘状态
    			this.DrawMounts(MapManager.gi().iOffx+this.iX,MapManager.gi().iOffy+this.iY,this.sFace8,this.sStat,bchanged);
    		} 
    		else
    		{// 骑乘状态
    			this.DrawRole(MapManager.gi().iOffx+this.iX,MapManager.gi().iOffy+this.iY,this.sFace8,this.sStat,bchanged);
    			
    //			this.iWeapTid = MyGoods.gi().GetWeaponTid();
    //			DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy + this.iY,GmPlay.xani_role[this.iRace * 2 + this.iSex], MapManager.gi().iOffx+ this.iX, MapManager.gi().iOffy + this.iY, this.aa_mounts);// 人
    //			this.aa_mounts.NextFrame();
    //			DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy + this.iY + 1,GmPlay.xani_role[this.iRace * 2 + this.iSex], MapManager.gi().iOffx+ this.iX, MapManager.gi().iOffy + this.iY, this.aa_body);// 人
    //			this.aa_body.NextFrame();
    		}
    		
    		//3摊位
    		if (MySell.gi().bSelling)
    		{// 摆摊中
    			var tw = M3DFast$1.gi().GetTextWidth(MySell.gi().sSellName, 25);
    			i = (tw - 60) / 30 + 2;// 摊位长度
    			if (i < 2)i = 2;
    			else if (i > 6)i = 6;
    			GmPlay$1.xani_ui2.InitAnimaWithName("普通摊位", GmPlay$1.aaa);

    			GmPlay$1.aaa.iFrame = 0;
    			DrawBuffer.gi().DrawAnimaEx(MapManager.gi().iOffy + this.iY - 2,MapManager.gi().iOffx + this.iX - tw / 2 - 9, MapManager.gi().iOffy	+ this.iY +this.iOffY + 5, GmPlay$1.aaa, 101, 1, 1, 0, 0, 0);
    			GmPlay$1.aaa.iFrame = 1;
    			DrawBuffer.gi().DrawAnimaEx(MapManager.gi().iOffy + this.iY - 2,MapManager.gi().iOffx + this.iX - tw / 2, MapManager.gi().iOffy + this.iY+this.iOffY + 5, GmPlay$1.aaa, 101, 1.0 * tw / 10, 1, 0,0, 0);
    			GmPlay$1.aaa.iFrame = 2;
    			DrawBuffer.gi().DrawAnimaEx(MapManager.gi().iOffy + this.iY - 2,MapManager.gi().iOffx + this.iX + tw / 2, MapManager.gi().iOffy + this.iY+this.iOffY + 5, GmPlay$1.aaa, 101, 1, 1, 0, 0, 0);
    			DrawBuffer.gi().DrawText(MapManager.gi().iOffy + this.iY - 1, 1,MapManager.gi().iOffx + this.iX, MapManager.gi().iOffy + this.iY +this.iOffY+20,	MySell.gi().sSellName, 0xff40c0ff, 25);
    		}

    		//5战斗，队伍标记
    		if (MyTeam$1.bTeamLeader()) {// 自己是队长，头上画队伍标记
    			DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy + this.iY, GmPlay$1.xani_ui,
    					MapManager.gi().iOffx + this.iX, MapManager.gi().iOffy + this.iY + this.iOffY,
    					this.aa_team);
    			// GmPlay.sop("offy="+offy);
    			// GmPlay.xani_ui.DrawAnima_aa(MapManager.gi().iOffx+this.iX,
    			// MapManager.gi().iOffy+this.iY-120, this.aa_team);
    			GmPlay$1.xani_ui.NextFrame(this.aa_team);
    		}
    		//6头顶聊天
    		this.DrawPopo(MapManager.gi().iOffx + this.iX, MapManager.gi().iOffy + this.iY);
    		DrawBuffer.gi().EndGroup();
    	}


    //	Draw1() {
    //		boolean bchanged = false;
    //		this.btn_att.Move(GmConfig.SCRW - 60, 0, 60, 60);
    //		this.btn_petatt.Move(GmConfig.SCRW - 200, 0, 60, 60);
    //
    //		var i;
    //		if (this.iChangeType > 0) {
    //			if (this.iOldType != 0) {
    //				this.iOldType = 0;
    //				bchanged = true;
    //			}
    //			bchanged = this.bStatChanged() | bchanged;
    //			bchanged = this.bFaceChanged6() | bchanged;
    //			if (bchanged) {// 变身
    //				if (this.iFace6 == 0)
    //					this.sFace6 = "右";
    //				else if (this.iFace6 == 1)
    //					this.sFace6 = "右下";
    //				else if (this.iFace6 == 2)
    //					this.sFace6 = "左下";
    //				else if (this.iFace6 == 3)
    //					this.sFace6 = "左";
    //				else if (this.iFace6 == 4)
    //					this.sFace6 = "左上";
    //				else if (this.iFace6 == 5)
    //					this.sFace6 = "右上";
    //
    //				// if(this.iFace6==0 || this.iFace6==1 || this.iFace6==5)this.sFace6="右";
    //				// else this.sFace6="左";
    //				if (this.iChangeType >= 10000)
    //					GmPlay.xani_pets[this.iChangeType % 10000].InitAnimaWithName(
    //							"变异_" + this.sStat + "_" + this.sFace6, this.aa_body);
    //				else
    //					GmPlay.xani_pets[this.iChangeType % 10000].InitAnimaWithName(
    //							this.sStat + "_" + this.sFace6, this.aa_body);
    //				this.iOffY = this.aa_body.pani.iAnimaY(this.aa_body) - 30;
    //			}
    //		} else if (this.iFightMid <= 0 || MySell.gi().bSelling) {// 非骑乘状态
    //			if (this.iOldType != 1) {
    //				this.iOldType = 1;
    //				bchanged = true;
    //			}
    //			bchanged = this.bStatChanged() | bchanged;
    //			bchanged = this.bFaceChanged8() | bchanged;
    //			if (bchanged) {
    //				// GmPlay.xani_role.InitAnimaWithName(this.sStat+"_"+(iFaceTo+1),
    //				// aa);
    //				GmPlay.xani_role[this.iRace * 2 + this.iSex].InitAnimaWithName(this.sStat
    //						+ "_" + this.sFace8, this.aa_body);
    //				this.iOffY = this.aa_body.pani.iAnimaY(this.aa_body) - 30;
    //
    //				if (this.iWeapTid >= 0)
    //					ResetWeap();
    //			}
    //			if (this.bWeapChanged()) {// 获得当前武器栏
    //				this.iWeapTid = MyGoods.gi().GetWeaponTid();
    //				if (this.iWeapTid >= 0) {
    //					ResetWeap();
    //				}
    //				// GmPlay.xani_role1.InitAnimaWithName(this.sStat+"_"+sFaceTo,
    //				// this.aa_body);
    //			}
    //		} else {
    //			if (this.iOldType != 2) {
    //				this.iOldType = 2;
    //				bchanged = true;
    //			}
    //			bchanged = this.bStatChanged() | bchanged;
    //			bchanged = this.bFaceChanged4() | bchanged;
    //			if (bchanged) {
    //				Mounts pms = MyMounts.mm.FindMounts(this.iFightMid);
    //				if (pms == null) {
    //					this.bsc = true;
    //					return;
    //				}
    //				if (this.iFace4 == 0)
    //					this.sFace4 = "右";
    //				else if (this.iFace4 == 1)
    //					this.sFace4 = "右下";
    //				else if (this.iFace4 == 2)
    //					this.sFace4 = "左下";
    //				else
    //					this.sFace4 = "左";
    //				GmPlay.xani_mounts[pms.iTid].InitAnimaWithName(pms.iJjLev + "_"
    //						+ this.sStat + "_" + this.sFace4, this.aa_mounts);
    //				GmPlay.xani_role[this.iRace * 2 + this.iSex].InitAnimaWithName(
    //						pms.sAnimaName + pms.iJjLev + "_" + this.sStat + "_"
    //								+ this.sFace4, this.aa_body);
    //				this.iOffY = this.aa_body.pani.iAnimaY(this.aa_body) - 30;
    //			}
    //		}
    //
    //		if (this.iFollowPid > 0) {
    //			Pets ppet = MyPets.mp.FindPet(this.iFollowPid);
    //			if (ppet != null) {
    //				{// 跟人物对应起来
    //					this.iFollowX = this.iMarks[5][0];
    //					this.iFollowY = this.iMarks[5][1];
    //					String s = "";
    //					if ((ppet.iBaobao & 2) == 0)
    //						s = "";
    //					else
    //						s = "变异_";
    //					if (this.iFollowX > this.iX)
    //						s += this.sStat + "_左";
    //					else
    //						s += this.sStat + "_右";
    //					GmPlay.xani_pets[ppet.iTid].InitAnimaWithName(s, this.aa_follow);// 左
    //					this.aa_follow.SetFrame(GmPlay.iDelay);
    //
    //					DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy + this.iFollowY,
    //							null, MapManager.gi().iOffx + this.iFollowX,
    //							MapManager.gi().iOffy + this.iFollowY, this.aa_follow);// 跟随的宠物
    //					DrawBuffer.gi().DrawAnima_aa(
    //							MapManager.gi().iOffy + this.iFollowY - 1, null,
    //							MapManager.gi().iOffx + this.iFollowX, MapManager.gi().iOffy
    //									+ this.iFollowY, GmPlay.aa_shadow);// 影子
    //					// DrawBuffer.gi().DrawText(MapManager.gi().iOffy+this.iFollowY, 1,
    //					// MapManager.gi().iOffx+this.iFollowX+1,
    //					// MapManager.gi().iOffy+this.iFollowY+30+1, ppet.sName,
    //					// 0xff000000,20);
    //					// DrawBuffer.gi().DrawText(MapManager.gi().iOffy+this.iFollowY+1,
    //					// 1, MapManager.gi().iOffx+this.iFollowX,
    //					// MapManager.gi().iOffy+this.iFollowY+30, ppet.sName,
    //					// 0xffffff00,20);
    //					DrawBuffer.gi().DrawText_2(MapManager.gi().iOffy + this.iFollowY
    //							+ 1, 1, MapManager.gi().iOffx + this.iFollowX,
    //							MapManager.gi().iOffy + this.iFollowY + 30, ppet.sName,
    //							0xffffb080, 20, 1, 0xff000000);
    //				}
    //			}
    //		}
    //		if (MySell.gi().bSelling) {// 摆摊中
    //			var tw = M3DFast.gi().GetTextWidth(MySell.gi().sSellName, 25);
    //			i = (tw - 60) / 30 + 2;// 摊位长度
    //			if (i < 2)
    //				i = 2;
    //			else if (i > 6)
    //				i = 6;
    //			// GmPlay.xani_ui.InitAnimaWithName("摊位"+i, GmPlay.aaa);
    //			// DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy+this.iY,GmPlay.xani_ui,
    //			// MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY-140, GmPlay.aaa);
    //			// if(this.iFlag[20]>0)GmPlay.xani_ui2.InitAnimaWithName("vip摊位",
    //			// GmPlay.aaa);
    //			// else
    //			GmPlay.xani_ui2.InitAnimaWithName("普通摊位", GmPlay.aaa);
    //
    //			GmPlay.aaa.iFrame = 0;
    //			DrawBuffer.gi().DrawAnimaEx(MapManager.gi().iOffy + this.iY - 2,
    //					MapManager.gi().iOffx + this.iX - tw / 2 - 9, MapManager.gi().iOffy
    //							+ this.iY - 140 + 5, GmPlay.aaa, 101, 1, 1, 0, 0, 0);
    //			GmPlay.aaa.iFrame = 1;
    //			DrawBuffer.gi().DrawAnimaEx(MapManager.gi().iOffy + this.iY - 2,
    //					MapManager.gi().iOffx + this.iX - tw / 2, MapManager.gi().iOffy + this.iY
    //							- 140 + 5, GmPlay.aaa, 101, 1.0f * tw / 10, 1, 0,
    //					0, 0);
    //			GmPlay.aaa.iFrame = 2;
    //			DrawBuffer.gi().DrawAnimaEx(MapManager.gi().iOffy + this.iY - 2,
    //					MapManager.gi().iOffx + this.iX + tw / 2, MapManager.gi().iOffy + this.iY
    //							- 140 + 5, GmPlay.aaa, 101, 1, 1, 0, 0, 0);
    //			// DrawBuffer.gi().FillRect(MapManager.gi().iOffy+this.iY,
    //			// MapManager.gi().iOffx+this.iX-tw/2, MapManager.gi().iOffy+this.iY-140,
    //			// MapManager.gi().iOffx+this.iX+tw/2, MapManager.gi().iOffy+this.iY-100,
    //			// 0xff000000);
    //			// if(this.iFlag[20]>0)DrawBuffer.gi().DrawText(MapManager.gi().iOffy+this.iY-1,
    //			// 1, MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY-120,
    //			// MySell.gi().sSellName, 0xff8080ff,25);
    //			// else
    //			DrawBuffer.gi().DrawText(MapManager.gi().iOffy + this.iY - 1, 1,
    //					MapManager.gi().iOffx + this.iX, MapManager.gi().iOffy + this.iY - 120,
    //					MySell.gi().sSellName, 0xff40c0ff, 25);
    //		}
    //		if (this.iChangeType > 0) {
    //			DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy + this.iY,
    //					GmPlay.xani_role[this.iRace * 2 + this.iSex], MapManager.gi().iOffx
    //							+ this.iX, MapManager.gi().iOffy + this.iY, this.aa_body);
    //		} else if (this.iFightMid <= 0 || MySell.gi().bSelling) {// 非骑乘状态
    //			DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy + this.iY,
    //					GmPlay.xani_role[this.iRace * 2 + this.iSex], MapManager.gi().iOffx
    //							+ this.iX, MapManager.gi().iOffy + this.iY, this.aa_body);// 人
    //			if (this.iWeapTid >= 0) {
    //				DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy + this.iY + 1,
    //						GmPlay.xani_role[this.iRace * 2 + this.iSex], MapManager.gi().iOffx
    //								+ this.iX, MapManager.gi().iOffy + this.iY, this.aa_weapon);// 武器
    //				this.aa_weapon.NextFrame();
    //			}
    //		} else {// 骑乘状态
    //			DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy + this.iY,
    //					GmPlay.xani_role[this.iRace * 2 + this.iSex], MapManager.gi().iOffx
    //							+ this.iX, MapManager.gi().iOffy + this.iY, this.aa_mounts);// 人
    //			this.aa_mounts.NextFrame();
    //			DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy + this.iY + 1,
    //					GmPlay.xani_role[this.iRace * 2 + this.iSex], MapManager.gi().iOffx
    //							+ this.iX, MapManager.gi().iOffy + this.iY, this.aa_body);// 人
    //		}
    //		DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy + this.iY - 1,
    //				GmPlay.aa_shadow.xani, MapManager.gi().iOffx + this.iX,
    //				MapManager.gi().iOffy + this.iY, GmPlay.aa_shadow);// 影子
    //		this.aa_body.NextFrame();
    //		// DrawBuffer.gi().DrawText(MapManager.gi().iOffy+this.iY+20, 1,
    //		// MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY+20,
    //		// this.sName+"["+GmMe.sRace()+"]["+GmMe.sSex()+"]", 0xffffff00,25);
    //		if (this.rbs.sTitle.length > 0) {
    //			// DrawBuffer.gi().DrawText(MapManager.gi().iOffy+this.iY, 1,
    //			// MapManager.gi().iOffx+this.iX+1, MapManager.gi().iOffy+this.iY+20+1,this.rbs.sTitle,
    //			// 0xff000000,20);//蓝色
    //			DrawBuffer.gi().DrawText_2(MapManager.gi().iOffy + this.iY, 1,
    //					MapManager.gi().iOffx + this.iX, MapManager.gi().iOffy + this.iY + 20,
    //					this.rbs.sTitle, 0xff80c0ff, 20, 1, 0xff000000);// 蓝色
    //
    //			// DrawBuffer.gi().DrawText(MapManager.gi().iOffy+this.iY, 1,
    //			// MapManager.gi().iOffx+this.iX+1, MapManager.gi().iOffy+this.iY+20+20+1, this.sName,
    //			// 0xff000000,20);
    //			DrawBuffer.gi().DrawText_2(MapManager.gi().iOffy + this.iY, 1,
    //					MapManager.gi().iOffx + this.iX, MapManager.gi().iOffy + this.iY + 20
    //							+ 20, this.sName, 0xff80ff80, 20, 1, 0xff000000);// 绿色
    //		} else {
    //			// DrawBuffer.gi().DrawText(MapManager.gi().iOffy+this.iY, 1,
    //			// MapManager.gi().iOffx+this.iX+1, MapManager.gi().iOffy+this.iY+30+1, this.sName,
    //			// 0xff000000,20);
    //			DrawBuffer.gi().DrawText_2(MapManager.gi().iOffy + this.iY, 1,
    //					MapManager.gi().iOffx + this.iX, MapManager.gi().iOffy + this.iY + 30,
    //					this.sName, 0xff80ff80, 20, 1, 0xff000000);
    //		}
    //		// DrawBuffer.gi().DrawText(MapManager.gi().iOffy+this.iY, 1,
    //		// MapManager.gi().iOffx+this.iX, MapManager.gi().iOffy+this.iY+20, this.sName,
    //		// 0xffffff00,25);
    //		if (iTeamRid[0] == this.iRid) {// 自己是队长，头上画队伍标记
    //			DrawBuffer.gi().DrawAnima_aa(MapManager.gi().iOffy + this.iY, GmPlay.xani_ui,
    //					MapManager.gi().iOffx + this.iX, MapManager.gi().iOffy + this.iY + this.iOffY,
    //					this.aa_team);
    //			// GmPlay.sop("offy="+offy);
    //			// GmPlay.xani_ui.DrawAnima_aa(MapManager.gi().iOffx+this.iX,
    //			// MapManager.gi().iOffy+this.iY-120, this.aa_team);
    //			GmPlay.xani_ui.NextFrame(this.aa_team);
    //		}
    //		this.DrawPopo(MapManager.gi().iOffx + this.iX, MapManager.gi().iOffy + this.iY);
    //
    //	}

    	DrawPopo( x,  y)
    	{
    		if (this.iPopoDelay <= 0)return;

    		this.iPopoDelay--;
    		FormatString.gi().Format(this.sPopoString, 151, 25);
    		x -= FormatString.gi().iW / 2;
    		// y-=(FormatString.gi().iH-this.iOffY-40);
    		var sy = y + this.iOffY + 40 - FormatString.gi().iH;
    		DrawBuffer.gi().FillRect(y, x, sy, x + FormatString.gi().iW, sy+ FormatString.gi().iH, 0x50000000);
    		FormatString.gi().DrawToBuffer(y + 1, x, sy);
    	}

    	weapname( race,  lev) {
    		var i;
    		for (i = 0; i < GmPlay$1.de_goods.iDataCount; i++) {
    			if (GmPlay$1.de_goods.datas[i].intValue(16) == 2
    					&& GmPlay$1.de_goods.datas[i].intValue(19) == race
    					&& GmPlay$1.de_goods.datas[i].intValue(9) == lev)
    				return GmPlay$1.de_goods.datas[i].strValue(4);
    		}
    		return "";
    	}

    	DrawFightUI() {
    		GmPlay$1.xani_ui.DrawAnima(GmConfig$1.SCRW, 0, "test", 0);// 右上角头像

    		// btn_chat.Move(iCbx,iCby, 80, 50);//私聊
    		// if(bPrivateChatFlash &&
    		// GmPlay.iDelay/2%2==0)btn_chat.Move(iCbx+1,iCby+1, 80+1, 50+1);
    		// btn_chat.Draw();

    		this.btn_att.Draw();// 属性
    		this.btn_petatt.Draw();// 宠物
    	}

    	DrawHpDetail() {
    		var x = GmConfig$1.SCRW - 88 - 60 - 150;
    		M3DFast$1.gi().FillRect_2D(x, 0, x + 150, 60, 0x80000000);
    		M3DFast$1.gi().DrawTextEx(x, 0, "气血:" + GmMe$1.me.rbs.iHp + "/"
    				+ GmMe$1.me.rbs.iMaxHp, 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(x, 20, "魔法:" + GmMe$1.me.rbs.iMp + "/"
    				+ GmMe$1.me.rbs.iMaxMp, 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(x, 40, "愤怒:" + GmMe$1.me.rbs.iAnger + "/150",
    				0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    	}
    	
    	DrawHeadEx( hp, maxhp, mp, maxmp, angry, lev, pettid, pethp, maxpethp, petmp, maxpetmp, petlev, petexp)
    	{
    		if (this.rbs.iMaxHp <= 0)return;
    		if (this.rbs.iMaxMp <= 0)return;
    		if (this.rbs.iLev < 0)return;
    		var offx=0;//cxunmz
    		if(PublicInterface.gi().iBx>0)offx=GmConfig$1.SCRW-PublicInterface.gi().iBx;
    		GmPlay$1.xani_frame.DrawAnima(GmConfig$1.SCRW-81-offx,1, "角色头像80_80", this.iRace*2+this.iSex);
    		
    		if(pettid<0)GmPlay$1.xani_frame.DrawAnima(GmConfig$1.SCRW-251-offx,3,"默认宠物头像框68_68",0);
    		else
    		{
    			GmPlay$1.xani_frame.DrawAnima(GmConfig$1.SCRW-251-offx,3,"默认宠物头像框68_68",1);
    			GmPlay$1.xani_head.DrawAnimaEx(GmConfig$1.SCRW-251-offx,3,GmPlay$1.de_pet.strValue(pettid, 0, 1),0,101,0.92,0.92,0x1000,0,0);
    		}
    		
    		GmPlay$1.xani_frame.DrawAnima(GmConfig$1.SCRW-336-offx, 0, "漫游属性框336_82", 0);
    		
    		var i;
    		var rat=0;
    		if(pettid>=0)
    		{
    				rat=79.0*pethp/maxpethp;
    				if(rat>1)DrawMode$1.frame_type1("气血框20_16",  (GmConfig$1.SCRW-336+3+79-rat)-offx, 3, rat, 20);
    				
    				rat=79.0*petmp/maxpetmp;
    				if(rat>1)DrawMode$1.frame_type1("魔法框20_16",  (GmConfig$1.SCRW-336+3+79-rat)-offx, 22, rat, 20);

    				if(petexp>GameData$1.iUpgradeExp[petlev]/3)i=GameData$1.iUpgradeExp[petlev]/3;
    				else i=petexp;
    				rat=79.0*i/(GameData$1.iUpgradeExp[petlev]/3);
    				if(rat>1)DrawMode$1.frame_type1("经验框20_16",  (GmConfig$1.SCRW-336+3+79-rat)-offx, 41, rat, 20);
    				
    				M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW-336+140-offx, 62, ""+petlev, 0xff264547, 16, 101, 1, 1, 0, -2, -2);
    		}
    		rat=96.0*hp/maxhp;
    		if(rat>1)DrawMode$1.frame_type1("气血框20_16",  (GmConfig$1.SCRW-336+158+96-rat)-offx, 3, rat, 20);
    		rat=96.0*mp/maxmp;
    		if(rat>1)DrawMode$1.frame_type1("魔法框20_16",  (GmConfig$1.SCRW-336+158+96-rat)-offx, 22, rat, 20);
    		rat=96.0*angry/150;
    		if(rat>1)DrawMode$1.frame_type1("愤怒框20_16",  (GmConfig$1.SCRW-336+158+96-rat)-offx, 41, rat, 20);
    		
    		M3DFast$1.gi().DrawTextEx(GmConfig$1.SCRW-336+320-offx, 71, ""+lev, 0xff264547, 16, 101, 1, 1, 0, -2, -2);
    	}
    	DrawHead()
    	{
    		if (this.rbs.iMaxHp <= 0)return;
    		if (this.rbs.iMaxMp <= 0)return;
    		if (this.rbs.iLev < 0)return;

    		var ppet = MyPets$1.mp.GetUseingPet();
    		if(ppet==null)this.DrawHeadEx(this.rbs.iHp,this.rbs.iMaxHp,this.rbs.iMp,this.rbs.iMaxMp,this.rbs.iAnger,this.rbs.iLev,-1,0,0,0,0,0,0);
    		else this.DrawHeadEx(this.rbs.iHp,this.rbs.iMaxHp,this.rbs.iMp,this.rbs.iMaxMp,this.rbs.iAnger,this.rbs.iLev,ppet.iTid,ppet.iHp,ppet.iMaxHp,ppet.iMp,ppet.iMaxMp,ppet.iLev,ppet.iExp);
    	}

    	DrawExp()
    	{
    		var i,j;
    		var k;
    		var exp,maxexp;
    		if (this.rbs.iExp > GameData$1.iUpgradeExp[GmMe$1.me.rbs.iLev])exp = GameData$1.iUpgradeExp[GmMe$1.me.rbs.iLev];
    		else	exp = this.rbs.iExp;
    		maxexp=GameData$1.iUpgradeExp[GmMe$1.me.rbs.iLev];
    		
    // 		j=maxexp/10;
    // 		for(i=0;i<10;i++)
    // 		{
    // 			if(exp/j>i)GmPlay.xani_frame.DrawAnima(40+i*124, GmConfig.SCRH-10, "经验底框124_10",1);
    // 			else GmPlay.xani_frame.DrawAnima(40+i*124, GmConfig.SCRH-10, "经验底框124_10",0);
    // 			if(exp/j==i)
    // 			{
    // 				k=exp%j;
    // //				GmPlay.sop("k1="+k);
    // 				k=k*124/j;
    // //				GmPlay.sop("k2="+k);
    // 				DrawMode.frame_type1("经验框20_10", 40+i*124, GmConfig.SCRH-10,  k, 20);
    // 			}
    // 		}

    j = maxexp/10;
    var NEW_W = 159; // <- 每格的目标宽
    var startX = 40;

    var p = Math.floor(exp / j);
    if (p < 0) p = 0;
    if (p > 9) p = 9;

    for (i = 0; i < 10; i++)
    {
    	var x = startX + i * NEW_W;
    	// 已满格（i < p）
    	if (i < p)
    		GmPlay$1.xani_frame.DrawAnimaEx(x, GmConfig$1.SCRH-10, "经验底框124_10", 1, 101, NEW_W/124, 1, 0, 0, 0);
    	else
    		GmPlay$1.xani_frame.DrawAnimaEx(x, GmConfig$1.SCRH-10, "经验底框124_10", 0, 101, NEW_W/124, 1, 0, 0, 0);

    	// 当前部分格（i == p）
    	if (i == p)
    	{
    		if (exp >= maxexp)
    		{
    			// 全满
    			DrawMode$1.frame_type1("经验框20_10", x, GmConfig$1.SCRH-10, NEW_W, 20);
    		}
    		else
    		{
    			k = exp - p * j; // 剩余经验落在当前格的量
    			if (k > 0)
    			{
    				k = Math.floor(k * NEW_W / j);
    				DrawMode$1.frame_type1("经验框20_10", x, GmConfig$1.SCRH-10, k, 20);
    			}
    		}
    	}
    }


    		GmPlay$1.xani_frame.DrawAnima(0, GmConfig$1.SCRH-10, "经验标签40_10",0);
    		M3DFast$1.gi().DrawTextEx(20, GmConfig$1.SCRH-5, "经  验", 0xffffff00, 10, 101, 1, 1, 0, -2, -2);
    	}
    	DrawUI() {
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return;
    		var offx=0;
    		if(PublicInterface.gi().iBx>0)offx=GmConfig$1.SCRW-PublicInterface.gi().iBx;
    		var i;
    		this.btn_att.Move(GmConfig$1.SCRW - 83-offx, 0, 83, 83);
    		this.btn_petatt.Move(GmConfig$1.SCRW - 253-offx, 0, 76, 76);
    		this.DrawHead();

    		// if(iTeamRid[0]==0)btn_team.sName="组队";
    		// else if(iTeamRid[0]==this.iRid)btn_team.sName="队伍";
    		// else btn_team.sName="队伍";
    		// GmPlay.sop("iTeamRid[0]="+iTeamRid[0]);
    //		if (iTeamButtonDelay == 0) {
    //			btn_team.Move(GmConfig.SCRW - 360, 0, 60, 60);
    //			if (bRequestFlash && GmPlay.iDelay / 2 % 2 == 0)
    //				btn_team.Move(GmConfig.SCRW - 360 + 1, 0 + 1, 60, 60);
    //			btn_team.Draw();
    //		} else
    //			iTeamButtonDelay--;

    		if (MyTeam$1.bInTeam()) 
    		{
    			var t_ras;
    			for (i = 0; i < 5; i++)
    			{
    				if (MyTeam$1.iTmpTeamRid[i] != 0)
    				{
    					if (MyTeam$1.iTmpTeamRid[i] == this.iRid) t_ras=this.iRace * 2 + this.iSex;
    					else t_ras=MyTeam$1.iRas[i];

    					
    					if (MyTeam$1.iTeamRid[i] == 0)GmPlay$1.xani_head.DrawAnimaEx(GmConfig$1.SCRW - 500 - i * 83-offx,0, "新头像"+t_ras,0, 50, 1, 1, 0, 0, 0);
    					else GmPlay$1.xani_head.DrawAnima(GmConfig$1.SCRW - 500 - i * 83-offx,0, "新头像"+t_ras,0);
    				}
    			}
    		}

    		// this.btn_reset.Draw();

    		// this.btn_att.Draw();
    		// this.btn_petatt.Draw();//宠物

    		if (Confirm1.end(Confirm1.CONFIRM_INVITE)) {//
    			if (Confirm1.bConfirm) {// 同意入队
    				GmProtocol$1.gi().s_TeamOperate(7, this.iInviteId, 0);
    			}
    		}
    		if (this.bShowHpDetail)
    			this.DrawHpDetail();
    	}

    	ProcTouch_AttFrame( msg,  x,  y) {
    		if (MyPets$1.mp.ProcTouch(msg, x, y))
    			return true;
    		return false;
    	}

    	ProcTouch( msg,  x,  y) {
    		this.bShowHpDetail = false;
    		if (this.btn_att.ProcTouch(msg, x, y)) {
    			if (this.btn_att.bCheck()) {
    				XStat$1.gi().PushStat(XStat$1.GS_MYATTFRAME);
    			}
    			return true;
    		}
    		if (this.btn_petatt.ProcTouch(msg, x, y)) {
    			if (this.btn_petatt.bCheck()) {
    				PetsFrame.Open();
    				// MyPets.mp.bShow=!MyPets.mp.bShow;
    			}
    			return true;
    		}
    		if (this.btn_reset.ProcTouch(msg, x, y)) {
    			if (this.btn_reset.bCheck()) {
    				// GmPlay.x_wav.StartWav("role1_hurt",false);
    				XStat$1.gi().PushStat(XStat$1.GS_SMALLMAP);
    				/*
    				 * if(MapManager.gi().iCurrentMapId==1) { GmMe.me.iX=760;
    				 * GmMe.me.iY=730; MapManager.gi().mfy.initboom(GmMe.me.iX,
    				 * GmMe.me.iY, MapManager.gi().mapdata.iMapWidth,
    				 * MapManager.gi().mapdata.iMapHeight, MapManager.gi().iBlockWidth,
    				 * MapManager.gi().iBlockHeight); } else { //
    				 * GmProtocol.gi().s_ChangeMap(0,3799,1918);
    				 * GmProtocol.gi().s_ChangeMap(1,760,730); //
    				 * XStat.gi().PushStat(XStat.GS_LOADING2); //
    				 * MapManager.gi().bMapLoaded=false; }
    				 */
    			}
    			return true;
    		}
    		// 点击头像，打开属性界面

    		if ((msg == 2 || msg == 1)
    				&& XDefine$1.bInRect(x, y, GmConfig$1.SCRW - 191, 0, 108, 80)) {// 在人物血条按下或移动
    			this.bShowHpDetail = true;
    			return true;
    		}

    		return false;
    	}

    	getinit( pls) {
    		this.iRid = pls.GetNextInt();
    		this.sName = pls.GetNextString();
    		GmPlay$1.m_vi.Login(""+this.iRid, this.sName);
    		this.iSex = pls.GetNextByte();
    		this.iRace = pls.GetNextByte();
    		this.iFightPid = pls.GetNextInt();
    		this.rbs.iSchoolId = pls.GetNextByte();
    		this.rbs.iInGot = pls.GetNextInt();
    		this.iFightMid = pls.GetNextInt();

    		this.rbs.iLev = pls.GetNextShort();
    		GmMe$1.iSecond = pls.GetNextInt();
    		
    		GmMe$1.iTime[0]=pls.GetNextShort();
    		GmMe$1.iTime[1]=pls.GetNextShort();
    		GmMe$1.iTime[2]=pls.GetNextShort();

    		console.log('初始化角色数据：',pls,this.iRace,this.iSex);

    		GmPlay$1.xani_newrole[this.iRace*2+this.iSex].LoadRes();  //预加载角色资源
    //		GmMe.iTime[2]=30;
    		GmMe$1.iMillis = XDefine$1.get_ms();

    		if (this.rbs.iLev <= 0) {
    			if(GmConfig$1.SYSW>=1280)
    			{//设置为1280的
    //				SystemOperate.iScreenLS=400;//最大缩放，高清
    				SystemOperate.iScreenLS=(1280-800)*400/(GmConfig$1.SYSW-800);
    			}
    			else
    			{
    				SystemOperate.iScreenLS=(GmConfig$1.SYSW-800)*400/(1280-800);
    			}
    			SystemOperate.iSameRate=0;
    //			if (GmConfig.SYSW >= 800 * 2 && GmConfig.SYSH >= 480 * 2)
    //				SystemOperate.SetScreenMode(3);
    //			else if (GmConfig.SYSW >= 1280) {
    //				SystemOperate.iScreenLS = 1280 * 400 / GmConfig.SYSW;
    //				SystemOperate.SetScreenMode(0);
    //			} else if (GmConfig.SYSW >= 800 && GmConfig.SYSH >= 480)
    //				SystemOperate.SetScreenMode(1);
    //			else
    //				SystemOperate.SetScreenMode(0);
    		}

    		PublicInterface.gi().mta_record(1, this.iRid, this.sName);

    		this.bsc = true;
    		// GmMe.me.bsc=true;//改变状态，重新载入角色动画

    		// for(i=0;i<100;i++)sop("2001");
    		// XStat.gi().ResetStat();
    		// XStat.gi().PushStat(XStat.GS_GAMEING);

    		// setTimeout(()=>{
    			// if (XStat.gi().LastStatType(0) != XStat.GS_GAMEING){
    			// 	XStat.gi().PopStat(1);
    			// }
    		// },1500)
    		
    		GmPlay$1.x_record.ReadPrivateChat();
    	}

    	getflag( pls) {
    		var i;
    		var oldcolor;
    		var flagtype=pls.GetNextByte();
    		if(flagtype==0)
    		{
    			oldcolor=this.iFlag[53];
    			for (i = 0; i < 64; i++)
    			{
    				this.iFlag[i] = pls.GetNextInt();
    //				GmPlay.sop(""+i+"=="+this.iFlag[i]);
    			}
    			this.iFlag[14] |= 1;
    			this.bDark = ((this.iFlag[2] & 1) == 0);// 0遇怪
    			this.bPk = ((this.iFlag[2] & 2) == 0);// 0可pk
    			this.bStandIn = ((this.iFlag[2] & 4) != 0);// 是否替身
    			this.bQP = ((this.iFlag[2] & 8) != 0);// 是否强P
    //			bStrange = ((this.iFlag[2] & 128) == 0);// 0允许陌生,1不允许

    			this.lt1 = XDefine$1.get_ms() / 1000;

    			GoodsStoreFrame.ResetStoreCount(this.iFlag[8]);
    			PetStoreFrame.ResetStoreCount(this.iFlag[8]);
    			GmMe$1.me.CalcFightAtt();
    			LoginGift.lg.SetStatByFlag();
    			FiveGift.fg.SetStatByFlag();
    			FirstCharge.fg.SetStatByFlag();
    			MyGoodsFrame.bSELock=false;
    			
    			var n=this.iFlag[53];
    			this.iColor[0]=n&7;
    			this.iColor[1]=(n>>3)&7;
    			this.iColor[2]=(n>>6)&7;
    			this.iColor[3]=(n>>9)&7;
    			this.iColor[4]=(n>>12)&7;
    			if(oldcolor!=n)
    			{//颜色改变，改变
    				this.bsc=true;
    			}
    		}
    		else if(flagtype==1)
    		{
    			for (i = 0; i < 64; i++)this.iFlagExt[i] = pls.GetNextInt();
    		}
    //		this.iColor[0]=1;
    //		this.iColor[1]=1;
    //		this.iColor[2]=1;
    //		this.iColor[3]=1;
    //		this.iColor[4]=1;
    	}


    	GetExt( pls) {
    		var flag = pls.GetNextInt();
    		if ((flag & this.RETEXT_CHANGETYPE) != 0) {
    			this.iOldType = -1;
    			this.iChangeType = pls.GetNextShort();
    			this.iChangeLast = pls.GetNextInt();
    			this.iChangeSkill = pls.GetNextInt();
    			this.iChangeAtt = pls.GetNextInt();
    			this.iChangeFC = pls.GetNextByte();
    		}
    		if ((flag & this.RETEXT_LOCKER) != 0) {
    			if (pls.GetNextByte() == 1) {
    				this.bHaveLock = true;
    				if (pls.GetNextByte() == 1)
    					this.bLocked = true;
    				else
    					this.bLocked = false;
    				this.iUnlockTime = pls.GetNextInt();
    			} else
    				this.bHaveLock = false;
    		}
    		if ((flag & this.RETEXT_ANGER) != 0) {
    			this.rbs.iAnger = pls.GetNextShort();// 更新当前怒气
    		}
    		GmMe$1.me.CalcFightAtt();
    		this.ltex = XDefine$1.get_ms() / 1000;
    	}


    	GetBaseAtt( pls) {
    		var i;
    		var flag = pls.GetNextByte();
    		if ((flag & this.RETBASE_HP) != 0) {
    			this.rbs.iHp = pls.GetNextShort();
    			this.rbs.iMaxHp = pls.GetNextShort();
    		}
    		if ((flag & this.RETBASE_MP) != 0) {
    			this.rbs.iMp = pls.GetNextShort();
    			this.rbs.iMaxMp = pls.GetNextShort();
    		}
    		if ((flag & this.RETBASE_POWER) != 0)
    			this.rbs.iPower = pls.GetNextShort();
    		if ((flag & this.RETBASE_MONEY) != 0)
    			this.rbs.iMoney = pls.GetNextInt();
    		if ((flag & this.RETBASE_EXP) != 0)
    			this.rbs.iExp = pls.GetNextInt();
    		if ((flag & this.RETBASE_LEV) != 0) {
    			this.rbs.iLev = pls.GetNextShort();
    			PublicInterface.gi().mta_record(2, this.rbs.iLev, ""
    					+ XRecordFast.iLastSever);
    		}
    		if ((flag & this.RETBASE_ATT) != 0) {
    			for (i = 0; i < 5; i++)
    				this.rbs.iBaseAtt[i] = pls.GetNextShort();
    		}
    		if ((flag & this.RETBASE_OTHER) != 0) {
    			this.rbs.iRenQi = pls.GetNextShort();
    			this.rbs.sTitle = pls.GetNextString();
    			MyGov.mg.iTick = pls.GetNextInt();
    			this.rbs.iInGot = pls.GetNextInt();
    			this.rbs.iStore = pls.GetNextInt();
    			this.rbs.iReserve = pls.GetNextInt();
    		}
    		this.CalcFightAtt();
    	}

    	getschoolskill( pls) {
    		var i;
    		for (i = 0; i < 6; i++)
    			this.rbs.iSchoolSkill[i] = pls.GetNextShort();
    		i = pls.GetNextShort();
    		if (i != this.rbs.iSchoolId && this.rbs.iSchoolId == 0) {// 入师门成功
    			this.rbs.iSchoolId = i;
    		}
    		this.rbs.iHp = pls.GetNextShort();
    		this.rbs.iMp = pls.GetNextShort();
    		this.CalcFightAtt();
    	}

    	getgovskill( pls) {
    		var i;
    		for (i = 0; i < 8; i++)
    			this.rbs.iGovSkill[i] = pls.GetNextShort();
    		this.CalcFightAtt();
    	}

    	getgovxiu( pls) {
    		var i;
    		for (i = 0; i < 10; i++) {
    			this.rbs.iGovXiu[i][0] = pls.GetNextShort();
    			this.rbs.iGovXiu[i][1] = pls.GetNextInt();
    		}
    	}

    	CalcFightAtt() 
    	{// 计算Maxhp,attack,多余属性
    		var i, j, m, n;
    		var gp;

    		i = this.rbs.iLev * 5;// 当前可能的属性上限
    		j = this.rbs.iBaseAtt[0] + this.rbs.iBaseAtt[1] + this.rbs.iBaseAtt[2]
    				+ this.rbs.iBaseAtt[3] + this.rbs.iBaseAtt[4];// 当前已加属性
    		this.rbs.nut = i - j;// 剩余属性点//潜力点
    		this.rbs.nut+=(this.iFlag[54]%1000);
    		// 显示属性点是 baseatt+lev+0级默认点

    		// this.iRace种族0人 1魔 2仙
    		// 0体 1魔 2力 3耐 4敏
    		var tz = GameData$1.iBaseAttAdd[this.iRace][0] + this.rbs.iBaseAtt[0] + this.rbs.iLev;// 0级基础+所加点+等级
    		var fl = GameData$1.iBaseAttAdd[this.iRace][1] + this.rbs.iBaseAtt[1] + this.rbs.iLev;
    		var ll = GameData$1.iBaseAttAdd[this.iRace][2] + this.rbs.iBaseAtt[2] + this.rbs.iLev;
    		var nl = GameData$1.iBaseAttAdd[this.iRace][3] + this.rbs.iBaseAtt[3] + this.rbs.iLev;
    		var mj = GameData$1.iBaseAttAdd[this.iRace][4] + this.rbs.iBaseAtt[4] + this.rbs.iLev;

    		if (this.iFlag[28] > 0)tz += (this.iFlag[27] >> 24) & 0x1f;
    		if (this.iFlag[29] > 0)fl += (this.iFlag[27] >> 18) & 0x1f;
    		if (this.iFlag[30] > 0)ll += (this.iFlag[27] >> 12) & 0x1f;
    		if (this.iFlag[31] > 0)nl += (this.iFlag[27] >> 6) & 0x1f;
    		if (this.iFlag[32] > 0)mj += (this.iFlag[27]) & 0x1f;

    		for (i = 0; i < 6; i++)
    		{//
    			if (MyGoods.gi().goods[1][i].iGid == -1)continue;
    			if (MyGoods.gi().goods[1][i].iAtts[5]%100000 <=0)continue;
    			gp = MyGoods.gi().goods[1][i];
    			// 1级属性加成
    			m = Math.floor(gp.iAtts[1] / 10000);
    			n = gp.iAtts[1] % 10000;
    			if (m > 0){
    				const mm = Math.floor(m / 1000);
    				if (mm == 0)					tz += m % 1000;
    				else if (mm == 1)				fl += m % 1000;
    				else if (mm == 2)				ll += m % 1000;
    				else if (mm == 3)				nl += m % 1000;
    				else if (mm == 4)				mj += m % 1000;
    			}
    			if (n > 0){
    				const nn = Math.floor(n / 1000);
    				if (nn == 0)					tz += n % 1000;
    				else if (nn == 1)				fl += n % 1000;
    				else if (nn == 2)				ll += n % 1000;
    				else if (nn == 3)				nl += n % 1000;
    				else if (nn == 4)				mj += n % 1000;
    			}
    		}

    		// 1灵 2伤 3防 4速
    		this.rbs.iMaxHp = tz * 50 + 1000;
    		this.rbs.iMaxMp = fl * 30;
    		this.rbs.iSpirit = tz * 3 + fl * 7 + ll * 4 + nl * 2;
    		this.rbs.iSpeed = tz + ll + nl + mj * 7;
    		switch (this.iRace)
    		{
    		case 0:// 人族
    			this.rbs.iAttack = Math.floor(ll * 25 / 3);
    			this.rbs.iDefence = nl * 15;
    			break;
    		case 1:// 魔族
    			this.rbs.iMaxHp += tz * 10;
    			this.rbs.iMaxMp -= fl * 5;

    			this.rbs.iAttack = Math.floor(ll * 27 / 3);
    			this.rbs.iDefence = nl * 14;
    			break;
    		case 2:// 仙族
    			this.rbs.iMaxHp -= tz * 5;
    			this.rbs.iMaxMp += fl * 5;

    			this.rbs.iAttack = Math.floor(ll * 23 / 3);
    			this.rbs.iDefence = nl * 16;
    			break;
    		}
    		for (i = 0; i < 6; i++)
    		{
    			if (MyGoods.gi().goods[1][i].iGid == -1)continue;
    			if (MyGoods.gi().goods[1][i].iAtts[5]%100000 <=0)continue;
    			gp = MyGoods.gi().goods[1][i];
    			// 2级属性加成
    			j = GmPlay$1.de_goods.intValue(gp.iTid, -1, 3);
    			if (j > 0)			this.rbs.iAttack += j * 10;
    			j = GmPlay$1.de_goods.intValue(gp.iTid, -1, 25);
    			if (j > 0)			this.rbs.iSpeed += j * 10;
    			j = GmPlay$1.de_goods.intValue(gp.iTid, -1, 24);
    			if (j > 0)			this.rbs.iMaxHp += j * 10;
    			j = GmPlay$1.de_goods.intValue(gp.iTid, -1, 23);
    			if (j > 0)			this.rbs.iSpirit += j * 10;
    			j = GmPlay$1.de_goods.intValue(gp.iTid, -1, 22);
    			if (j > 0)			this.rbs.iMaxMp += j * 10;
    			j = GmPlay$1.de_goods.intValue(gp.iTid, -1, 21);
    			if (j > 0)			this.rbs.iDefence += j * 10;

    			m = Math.floor(gp.iAtts[0] / 10000);
    			n = gp.iAtts[0] % 10000;
    			switch (i) 
    			{
    			case 0:// 头盔防御|魔法
    				this.rbs.iDefence += m * 10;
    				this.rbs.iMaxMp += n * 10;
    				break;
    			case 1:// 项链灵力
    				this.rbs.iSpirit += n * 10;
    				break;
    			case 2:// 武器伤害
    				this.rbs.iAttack += n * 10;
    				break;
    			case 3:// 衣服防御
    				this.rbs.iDefence += n * 10;
    				break;
    			case 4:// 腰带防御|血
    				this.rbs.iDefence += m * 10;
    				this.rbs.iMaxHp += n * 10;
    				break;
    			case 5:// 鞋子防御|速度
    				this.rbs.iDefence += m * 10;
    				this.rbs.iSpeed += n * 10;
    				break;
    			}
    			m = Math.floor(gp.iAtts[2] / 10000);// 宝石加成1
    			if (m > 0)
    			{
    				const mm = Math.floor(m / 1000);
    				switch (mm) 
    				{
    				case 0:
    					this.rbs.iAttack += (m % 1000) * 80;
    					break;
    				case 1:
    					this.rbs.iDefence += (m % 1000) * 120;
    					break;
    				case 2:
    					this.rbs.iMaxHp += (m % 1000) * 400;
    					break;
    				case 3:
    					this.rbs.iSpeed += (m % 1000) * 80;
    					break;
    				case 4:
    					this.rbs.iSpirit += (m % 1000) * 60;
    					break;
    				}
    			}
    			m = gp.iAtts[2] % 10000;// 宝石加成2
    			if (m > 0)
    			{
    				const mm = Math.floor(m / 1000);
    				switch (mm) 
    				{
    				case 0:
    					this.rbs.iAttack += (m % 1000) * 80;
    					break;
    				case 1:
    					this.rbs.iDefence += (m % 1000) * 120;
    					break;
    				case 2:
    					this.rbs.iMaxHp += (m % 1000) * 400;
    					break;
    				case 3:
    					this.rbs.iSpeed += (m % 1000) * 80;
    					break;
    				case 4:
    					this.rbs.iSpirit += (m % 1000) * 60;
    					break;
    				}
    			}
    		}
    		// 门派技能属性加成
    		// GmPlay.sop("this.iAttack="+this.rbs.iAttack);
    		if (GmMe$1.me.rbs.iSchoolId > 0 && GmMe$1.me.rbs.iSchoolId <= 9) {
    			for (i = 0; i < 6; i++) {
    				j = GmPlay$1.de_skill.intValue(
    						GameData$1.iSchoolSkillId[GmMe$1.me.rbs.iSchoolId][i], -1,
    						17);// +攻击
    				// GmPlay.sop("j="+j+",this.rbs.iSchoolSkill[i]="+this.rbs.iSchoolSkill[i]);
    				if (j > 0)
    					this.rbs.iAttack += this.rbs.iSchoolSkill[i] * j / 10;
    				j = GmPlay$1.de_skill.intValue(
    						GameData$1.iSchoolSkillId[GmMe$1.me.rbs.iSchoolId][i], -1,
    						18);// +防御
    				if (j > 0)
    					this.rbs.iDefence += this.rbs.iSchoolSkill[i] * j / 10;
    				j = GmPlay$1.de_skill.intValue(
    						GameData$1.iSchoolSkillId[GmMe$1.me.rbs.iSchoolId][i], -1,
    						19);// +速度
    				if (j > 0)
    					this.rbs.iSpeed += this.rbs.iSchoolSkill[i] * j / 10;
    				j = GmPlay$1.de_skill.intValue(
    						GameData$1.iSchoolSkillId[GmMe$1.me.rbs.iSchoolId][i], -1,
    						20);// +灵力
    				if (j > 0)
    					this.rbs.iSpirit += this.rbs.iSchoolSkill[i] * j / 10;
    				j = GmPlay$1.de_skill.intValue(
    						GameData$1.iSchoolSkillId[GmMe$1.me.rbs.iSchoolId][i], -1,
    						21);// +气血
    				if (j > 0)
    					this.rbs.iMaxHp += this.rbs.iSchoolSkill[i] * j / 10;
    				j = GmPlay$1.de_skill.intValue(
    						GameData$1.iSchoolSkillId[GmMe$1.me.rbs.iSchoolId][i], -1,
    						22);// +魔法
    				if (j > 0)
    					this.rbs.iMaxMp += this.rbs.iSchoolSkill[i] * j / 10;
    			}
    		}

    		var pms = MyMounts.mm.FindMounts(this.iFightMid);
    		if (pms != null) {// 坐骑产生效果
    							// if(pms.iBSD>=600)
    		// {
    		// j=pms.iLingQi*100/pms.iMaxLingQi;
    		// if(j>60)
    		// {
    			this.rbs.iMaxHp += pms.iMaxHp;
    			this.rbs.iMaxMp += pms.iMaxMp;
    			this.rbs.iAttack += pms.iAttack;
    			this.rbs.iDefence += pms.iDefence;
    			this.rbs.iSpirit += pms.iSpirit;
    			this.rbs.iSpeed += pms.iSpeed;
    			// }
    			// }
    		}
    		// GmPlay.sop("eiAttack="+this.rbs.iAttack);
    		this.rbs.tz = Math.floor(tz);
    		this.rbs.fl = Math.floor(fl);
    		this.rbs.ll = Math.floor(ll);
    		this.rbs.nl = Math.floor(nl);
    		this.rbs.mj = Math.floor(mj);

    		this.rbs.iMaxPower = this.rbs.iLev * 5 + 100;
    		// 帮派技能加成
    		if (this.rbs.iGovSkill[0] > 0) {// 强身
    			this.rbs.iMaxHp += (this.rbs.iMaxHp * this.rbs.iGovSkill[0] / 100);
    		}
    		if (this.rbs.iGovSkill[6] > 0) {// 健体
    			this.rbs.iMaxPower += this.rbs.iGovSkill[6] * 5;
    		}
    		if (this.rbs.iGovSkill[7] > 0) {// 修心
    			this.rbs.iMaxMp += (this.rbs.iMaxMp * this.rbs.iGovSkill[7] / 100);
    		}
    		// 变身属性影响
    		if (this.iChangeType > 0) {
    			if (this.iChangeAtt > 0) {
    				i = (this.iChangeAtt % 1000);
    				switch (Math.floor(this.iChangeAtt / 1000) % 10) {
    				case 0:// 气血
    					this.rbs.iMaxHp = Math.floor(this.rbs.iMaxHp * i / 100);
    					break;
    				case 1:// 灵力
    					this.rbs.iSpirit = Math.floor(this.rbs.iSpirit * i / 100);
    					break;
    				case 2:// 攻击
    					this.rbs.iAttack = Math.floor(this.rbs.iAttack * i / 100);
    					break;
    				case 3:// 防御
    					this.rbs.iDefence = Math.floor(this.rbs.iDefence * i / 100);
    					break;
    				case 4:// 速度
    					this.rbs.iSpeed = Math.floor(this.rbs.iSpeed * i / 100);
    					break;
    				}
    			}
    			if (this.iChangeSkill > 0) {
    				if (this.iChangeSkill == 212)
    					this.rbs.iDefence += this.rbs.iLev * 18;
    				else if (this.iChangeSkill == 211)
    					this.rbs.iDefence += this.rbs.iLev * 12;
    				else if (this.iChangeSkill == 210)
    					this.rbs.iDefence += this.rbs.iLev * 6;

    				if (this.iChangeSkill == 215)
    					this.rbs.iAttack += this.rbs.iLev * 15;
    				else if (this.iChangeSkill == 214)
    					this.rbs.iAttack += this.rbs.iLev * 10;
    				else if (this.iChangeSkill == 213)
    					this.rbs.iAttack += this.rbs.iLev * 5;
    			}
    		}

    		this.rbs.iMaxHp = parseInt(this.rbs.iMaxHp/10);
    		this.rbs.iMaxMp = parseInt(this.rbs.iMaxMp/10);
    		this.rbs.iSpirit = parseInt(this.rbs.iSpirit/10);
    		this.rbs.iAttack = parseInt(this.rbs.iAttack/10);
    		this.rbs.iDefence = parseInt(this.rbs.iDefence/10);
    		this.rbs.iSpeed = parseInt(this.rbs.iSpeed/10);
    		if (this.rbs.iHp > this.rbs.iMaxHp)
    			this.rbs.iHp = this.rbs.iMaxHp;
    		if (this.rbs.iMp > this.rbs.iMaxMp)
    			this.rbs.iMp = this.rbs.iMaxMp;

    		// this.rbs.iMaxPower=this.rbs.iLev*5+100;
    	}

    	CalcUserScore()
    	{
    		var a = 0, b=0, c=0, d = 0,e=0;
    		var i, j, k;
    		for (i = 1; i <= this.rbs.iLev; i++)
    		{
    			a += i;
    		}
    		a *= 2;//等级评分
    		if(this.rbs.iSchoolId>0)
    		{
    			j = 0;
    			for (i = 0; i < 6; i++)
    			{
    				if (this.rbs.iSchoolSkill[i]>0)j += this.rbs.iSchoolSkill[i];
    			}
    			b = j * 3;
    		}
    		j = 0;
    		if (this.rbs.iGovSkill[0] > 0)j += this.rbs.iGovSkill[0];
    		if (this.rbs.iGovSkill[6] > 0)j += this.rbs.iGovSkill[6];
    		if (this.rbs.iGovSkill[7] > 0)j += this.rbs.iGovSkill[7];
    		b += j * 3;
    		j = 0;
    		if (this.rbs.iGovSkill[1] > 0)j += this.rbs.iGovSkill[1];
    		if (this.rbs.iGovSkill[2] > 0)j += this.rbs.iGovSkill[2];
    		if (this.rbs.iGovSkill[3] > 0)j += this.rbs.iGovSkill[3];
    		if (this.rbs.iGovSkill[4] > 0)j += this.rbs.iGovSkill[4];
    		if (this.rbs.iGovSkill[5] > 0)j += this.rbs.iGovSkill[5];
    		b += j * 2;//技能评分

    		for(i=0;i<6;i++)
    		{
    			if(MyGoods.gi().goods[1][i].iGid>0)
    			{
    				c+=MyGoods.gi().goods[1][i].CalcSetScore();
    			}
    		}
    		
    		j = 0;//修炼评分
    		for (i = 0; i < 10; i++) j += this.rbs.iGovXiu[i][0];
    		k = 8;
    		while (j > 0)
    		{
    			if(j>=10)d+=10*k;
    			else d += j*k;
    			j = j - 10;
    			k = k + 8;
    		}

    		//阵法评分
    		for (i = 1; i < 10; i++)
    		{
    			if ((this.iFlag[14] & (1 << i)) != 0)
    			{
    				e += 50;
    //				GmPlay.sop(""+i);
    			}
    		}

    //		GmPlay.sop("14="+this.iFlag[14]);
    //		GmPlay.sop("+"+a+"+"+b+"+"+c+"+"+d+"+"+e);
    		i = parseInt(a + b + c + d + e);
    		if (i != this.iScore)
    		{
    			this.iScore = i;
    		}

    		this.CalcComplexScore();
    		return this.iScore;
    	}

    	CalcComplexScore()
    	{
    		var i, j, ts = 0;
    		var ps=new Int32Array(8);
    		for (i = 0; i < 8; i++)
    		{
    			if (MyPets$1.mp.pets[i].iPid>0)
    			{
    				MyPets$1.mp.pets[i].CalcPetScore();
    				ps[i] = MyPets$1.mp.pets[i].iScore;
    			}
    			else ps[i] = 0;
    		}
    		for (i = 0; i < 7; i++)
    		{
    			for (j = i+1; j < 8; j++)
    			{
    				if (ps[i] < ps[j])
    				{
    					ts = ps[i];
    					ps[i] = ps[j];
    					ps[j] = ts;
    				}
    			}
    		}
    		ts = ps[0] + ps[1] + ps[2] + ps[3];
    		ts += this.iScore;
    		if (ts != this.iComplexScore)
    		{
    			this.iComplexScore = ts;
    		}
    //		FrameMessage.fm.Open(""+GmMe.me.iComplexScore+",,"+GmMe.me.iScore+",,,"+ts);
    		return this.iComplexScore;
    	}

    	bWeapChanged(){
    		if (this.bwc)
    		{
    			this.bwc = false;
    			return true;
    		}
    		return false;
    	}
       
       bFaceChanged4() {
    		if (this.bfc4) {
    			this.bfc4 = false;
    			return true;
    		}
    		return false;
    	}
       
       bFaceChanged6() {
    		if (this.bfc6) {
    			this.bfc6 = false;
    			return true;
    		}
    		return false;
    	}
       
       bFaceChanged8() {
    		if (this.bfc8) {
    			this.bfc8 = false;
    			return true;
    		}
    		return false;
    	}
       
       bStatChanged() {
    		if (this.bsc) {
    			this.bsc = false;
    			return true;
    		}
    		return false;
    	}
    }
    GmMe$1.iTime=new Int32Array(3);
     GmMe$1.iSecond;
     GmMe$1.iMillis;//基准毫秒数

    GmMe$1.MAXTEAMOLE = 5;
     // public int iMapId;
    GmMe$1.MAXMARK = 60;

    GmMe$1.iTeamZhen = 0;
    GmMe$1.iTeamMap=0;

     GmMe$1.me;


    GmMe$1.sSex=function( i) {
    	 return (i == 0 ? "女" : "男");
     };

    GmMe$1.sRace=function( i) {
    	 if (i == 0)return "人";
    	 else if (i == 1)return "魔";
    	 else	return "仙";
     };


     GmMe$1.face_sti=function( s)
     {
    	 if(s=="上")return 0;
    	 else if(s=="左上")return 1;
    	 else if(s=="左")return 2;
    	 else if(s=="左下")return 3;
    	 else if(s=="下")return 4;
    	 else if(s=="右下")return 5;
    	 else if(s=="右")return 6;
    	 else if(s=="右上")return 7;
    	 return 0;
     };
     GmMe$1.stat_sti=function( s)
     {
    	 if(s=="站立")return 0;
    	 else if(s=="跑步")return 1;
    	 else if(s=="战斗站立")return 2;
    	 else if(s=="普通攻击")return 3;
    	 else if(s=="施法")return 4;
    	 else if(s=="防御")return 5;
    	 else if(s=="死亡过程")return 6;
    	 else if(s=="被攻击")return 6;
    	 else if(s=="死亡")return 6;
    	 return 7;
     };

    class FindWay {
        /*
    	public COLLPATH pps;
    	int iMapWidth,iMapHeight;
    	int iBlockWidth,iBlockHeight;
    	int iMx,iMy;
    	int boom;
    	int iDelay;

    	int iBx1,iBy1,iBx2,iBy2;
    	
    	public int iPathDeep;
    	public int iPath;
    */
    	 Draw()
    	{
    		var i,j;
    		for(i=0;i<MapData.MAXPATHCOUNT;i++)
    		{
    			if(this.pps[i]!=null)
    			{
    				for(j=1;j<this.pps[i].iPathCount;j++)
    				{
    					M2DFast.xm3f.DrawLine(MapManager.gi().iOffx+this.pps[i].path[j-1][0],MapManager.gi().iOffy+this.pps[i].path[j-1][1],
    							MapManager.gi().iOffx+this.pps[i].path[j][0],MapManager.gi().iOffy+this.pps[i].path[j][1], 0xffff00ff);
    				}
    			}
    		}
    		this.DrawBoom();
    	}
    	DrawBoom()
    	{
    //		iMapWidth=mapw;
    //		iMapHeight=maph;
    //		iBlockWidth=bw;
    //		iBlockHeight=bh;
    		var i,j,m,n;
    		for(i=0;i<this.iMapWidth/this.iBlockWidth;i++)
    		{
    			for(j=0;j<this.iMapHeight/this.iBlockHeight;j++)
    			{
    				if(this.boom[j][i]>=2)
    				{
    					m=MapManager.gi().iOffx+i*32;
    					n=MapManager.gi().iOffy+j*32;
    					if(m<0 || m>GmConfig$1.SCRW || n<0 || n>GmConfig$1.SCRH)continue;
    					M2DFast.xm3f.FillRect_2D(m-3,n-3,m+3,n+3 ,0xffff0000);
    				}
    			}
    		}
    	}
    	 constructor()
    	{
    		this.iDelay=0;
            this.iPathDeep=0;
            this.iPath=new Array(256);
            this.boom=new Array(256);
            for(var i=0;i<256;i++)
            {
                this.iPath[i]=new Int32Array(2);
                this.boom[i]=new Int32Array(256);
    		}
    		
    		this.tmpst=new Array(4096);
    		for(var i=0;i<4096;i++)
    		{
    			this.tmpst[i]=new Int32Array(2);
    		}
    	}
    	 bCanMove( x, y, dx, dy)
    	{
    		//把直线前后延长
    		if(dx<0 || dy<0 || dx>MapManager.gi().mapdata.iMapWidth || dy>MapManager.gi().mapdata.iMapHeight)return false;

    		var i,j;
    		for(i=0;i<MapData.MAXPATHCOUNT;i++)
    		{
    			if(this.pps[i]!=null)
    			{
    				for(j=1;j<this.pps[i].iPathCount;j++)
    				{
    					if(x<this.pps[i].path[j-1][0] &&
    						dx<this.pps[i].path[j-1][0] &&
    						x<this.pps[i].path[j][0] &&
    						dx<this.pps[i].path[j][0])continue;
    					if(x>this.pps[i].path[j-1][0] &&
    							dx>this.pps[i].path[j-1][0] &&
    							x>this.pps[i].path[j][0] &&
    							dx>this.pps[i].path[j][0])continue;
    					if(y<this.pps[i].path[j-1][1] &&
    							dy<this.pps[i].path[j-1][1] &&
    							y<this.pps[i].path[j][1] &&
    							dy<this.pps[i].path[j][1])continue;
    					if(y>this.pps[i].path[j-1][1] &&
    							dy>this.pps[i].path[j-1][1] &&
    							y>this.pps[i].path[j][1] &&
    							dy>this.pps[i].path[j][1])continue;
    					if(MapData.llcollision_ai(x,y,dx,dy,
    						this.pps[i].path[j-1][0],this.pps[i].path[j-1][1],
    						this.pps[i].path[j][0],this.pps[i].path[j][1]))
    					{//产生碰撞
    						this.iBx1=this.pps[i].path[j-1][0];
    						this.iBy1=this.pps[i].path[j-1][1];
    						this.iBx2=this.pps[i].path[j][0];
    						this.iBy2=this.pps[i].path[j][1];
    						return false;
    					}
    				}
    			}
    		}
    		return true;
    	}
    	 setboom( x, y, dx, dy, k)
    	{
    		if(this.boom[dy][dx]==1)
    		{
    			if(this.bCanMove(x*this.iBlockWidth,y*this.iBlockHeight,dx*this.iBlockWidth,dy*this.iBlockHeight))
    			{
    				this.boom[dy][dx]=k;
    				return true;
    			}
    		}
    		return false;
    	}
    //	initboom(COLLPATH pl, mx, my, mapw, maph, bw, bh)
    //	{
    //		var i,j,k,o;
    //		pps=pl;
    //		iMapWidth=mapw;
    //		iMapHeight=maph;
    //		iBlockWidth=bw;
    //		iBlockHeight=bh;
    	initboom( mx, my, mapw, maph, bw, bh)
    	{
    		var i,j,k,o;
    		if(mx<0)mx=0;
    		if(my<0)my=0;
    		this.pps=MapManager.gi().mapdata.pps;
    		this.iMapWidth=mapw;
    		this.iMapHeight=maph;
    		this.iBlockWidth=bw;
    		this.iBlockHeight=bh;

    		for(i=0;i<mapw/bw;i++)
    		{
    			for(j=0;j<maph/bh;j++)
    			{
    				this.boom[j][i]=1;
    			}
    		}
    		this.boom[parseInt(my/this.iBlockHeight)][parseInt(mx/this.iBlockWidth)]=2;
    		//0碰撞，1未到达，2起点
    		k=2;o=1;
    		while(o>0)
    		{
    			o=0;
    			for(i=1;i<mapw/bw;i++)
    			{
    				for(j=1;j<maph/bh;j++)
    				{
    					if(this.boom[j][i]==k)
    					{
    //						if(this.setboom(i,j,i-1,j,k+1))o++;
    //						if(this.setboom(i,j,i+1,j,k+1))o++;
    //						if(this.setboom(i,j,i,j-1,k+1))o++;
    //						if(this.setboom(i,j,i,j+1,k+1))o++;
    						if(this.setboom(i,j,i-1,j,k+1))o++;
    						if(this.setboom(i,j,i+1,j,k+1))o++;
    						if(this.setboom(i,j,i,j-1,k+1))o++;
    						if(this.setboom(i,j,i,j+1,k+1))o++;
    					}
    				}
    			}
    			k++;
    		}
    		for(i=0;i<mapw/bw+1;i++)
    		{
    			for(j=0;j<maph/bh+1;j++)
    			{
    				if(this.boom[j][i]==1 || i>=mapw/bw || j>=maph/bh)this.boom[j][i]=0;
    			}
    		}
    	}

    	findway( mx, my, dx, dy)
    	{//把起点和目标点转换到最近的可以到达点
    		if(XDefine$1.llength(mx, my, dx, dy)<20)return false;
    		if(dx<0 || dy<0 || dx>=MapManager.gi().mapdata.iMapWidth || dy>=MapManager.gi().mapdata.iMapHeight)return false;
    		if(this.bCanMove(mx,my,dx,dy))
    		{//直接走,写入路径
    			this.iPath[0][0]=mx;
    			this.iPath[0][1]=my;
    			this.iPath[1][0]=dx;
    			this.iPath[1][1]=dy;
    			this.iPathDeep=2;
    			return true;
    		}

    		//所点击目标点周围4/5碰撞，直接返回false;
    		
    		var i,j;
    		var mmx,mmy,ddx,ddy;
    		for(i=0;i<this.iMapWidth/this.iBlockWidth+2;i++)
    		{
    			for(j=0;j<this.iMapHeight/this.iBlockHeight+2;j++)
    			{
    				if(this.boom[j][i]>2)this.boom[j][i]=2;
    			}
    		}
    //		GmPlay.sop("2222222222222222222");

    		mmx=parseInt(mx/this.iBlockWidth);
    		mmy=parseInt(my/this.iBlockHeight);
    		if(this.bCanMove(mmx*this.iBlockWidth,mmy*this.iBlockHeight,mx,my));
    		else if(this.bCanMove((mmx+1)*this.iBlockWidth,mmy*this.iBlockHeight,mx,my))mmx++;
    		else if(this.bCanMove((mmx-1)*this.iBlockWidth,mmy*this.iBlockHeight,mx,my))mmx--;
    		else if(this.bCanMove(mmx*this.iBlockWidth,(mmy+1)*this.iBlockHeight,mx,my))mmy++;
    		else if(this.bCanMove(mmx*this.iBlockWidth,(mmy-1)*this.iBlockHeight,mx,my))mmy--;
    		else
    		{//自己所在位置被卡住，寻找周围可到达点直接设置
    			if(this.boom[mmy][mmx]==2);
    			else if(this.boom[mmy+1][mmx]==2)mmy+=1;
    			else if(this.boom[mmy-1][mmx]==2)mmy-=1;
    			else if(this.boom[mmy][mmx+1]==2)mmx+=1;
    			else if(this.boom[mmy][mmx-1]==2)mmx-=1;
    			else return false;

    			this.iPath[0][0]=mx;
    			this.iPath[0][1]=my;
    			this.iPath[1][0]=mmx*this.iBlockWidth;
    			this.iPath[1][1]=mmy*this.iBlockHeight;
    			this.iPathDeep=2;
    			return true;
    //			GmMe.me.iX=mmx*iBlockWidth;
    //			GmMe.me.iY=mmy*iBlockHeight;
    //			GmPlay.sop("kakakakakakaka");
    //			return false;
    		}
    //		GmPlay.sop("3333333333333333");
    		ddx=parseInt(dx/this.iBlockWidth);
    		ddy=parseInt(dy/this.iBlockHeight);
    		if(this.bCanMove(ddx*this.iBlockWidth,ddy*this.iBlockHeight,dx,dy));
    		else if(this.bCanMove((ddx+1)*this.iBlockWidth,ddy*this.iBlockHeight,dx,dy))ddx++;
    		else if(this.bCanMove((ddx-1)*this.iBlockWidth,ddy*this.iBlockHeight,dx,dy))ddx--;
    		else if(this.bCanMove(ddx*this.iBlockWidth,(ddy+1)*this.iBlockHeight,dx,dy))ddy++;
    		else if(this.bCanMove(ddx*this.iBlockWidth,(ddy-1)*this.iBlockHeight,dx,dy))ddy--;
    		else return false;
    		if(ddx<0 || ddy<0)return false;
    //		GmPlay.sop("44444444444444444444444");
    		i=0;
    		if(this.boom[ddy][ddx]==0)i++;
    		if(ddx-1>=0 && this.boom[ddy][ddx-1]==0)i++;
    		if(ddy-1>=0 && this.boom[ddy-1][ddx]==0)i++;
    		if(this.boom[ddy][ddx+1]==0)i++;
    		if(this.boom[ddy+1][ddx]==0)i++;
    		if(i>=3)return false;//目标点周围4/5是不可行走区域
    //		GmPlay.sop("555555555555555");

    /*		if(boom[mmy][mmx]<2 && boom[ddy][ddx]<2)
    		{//重新初始化地图碰撞信息
    			initboom(MapManager.gi().mapdata.pps, mx, my, MapManager.gi().mapdata.iMapWidth, MapManager.gi().mapdata.iMapHeight, iBlockWidth, iBlockHeight);
    			return false;
    		}*/
    		

    //		boom[ddy][ddx]>=2 && 
    //		GmPlay.sop("ddx="+ddx+",ddy="+ddy);
    //		GmPlay.sop(""+MapManager.gi().mapdata.iMapWidth+",,,"+MapManager.gi().mapdata.iMapHeight);
    		if(this.findway_(mmx*this.iBlockWidth,mmy*this.iBlockHeight,ddx*this.iBlockWidth,ddy*this.iBlockHeight))
    		{
    			this.iPath[0][0]=mx;
    			this.iPath[0][1]=my;
    			this.iPath[this.iPathDeep-1][0]=dx;
    			this.iPath[this.iPathDeep-1][1]=dy;

    			this.iDelay++;
    //			if(iDelay%2==0)
    				this.pullline();//cxcx
    			return true;
    		}
    		else
    		{//没有路，走到离目标最近的位置
    			if(1==1)return false;
    			while(true)
    			{
    				if(this.bCanMove(mx,my,dx,dy))
    				{//直接走,写入路径
    					this.iPath[0][0]=mx;
    					this.iPath[0][1]=my;
    					this.iPath[1][0]=dx;
    					this.iPath[1][1]=dy;
    					this.iPathDeep=2;
    					return true;
    				}
    				else
    				{
    					i=XDefine$1.llength(mx,my,MapData.iJx,MapData.iJy);
    					if(i<20)return false;
    					dx=parseInt(mx+(MapData.iJx-mx)*(i-10)/i);
    					dy=parseInt(my+(MapData.iJy-my)*(i-10)/i);
    				}
    			}
    		}
    	}
    //	
    //	var tmpst=new Int32Array(MAXST)(2);//
    	 findway_( mx, my, dx, dy)
    	{
    		console.log('寻路2');
    		if(mx<0 || my<0 || mx>=MapManager.gi().mapdata.iMapWidth || my>=MapManager.gi().mapdata.iMapHeight)return false;
    		if(dx<0 || dy<0 || dx>=MapManager.gi().mapdata.iMapWidth || dy>=MapManager.gi().mapdata.iMapHeight)return false;

            var MAXST=4096;
    		var i,j,k,o;
    		this.boom[parseInt(my/this.iBlockHeight)][parseInt(mx/this.iBlockWidth)]=3;//起点

    		var ns,nt,es,et;
    		this.tmpst[0][0]=parseInt(mx/this.iBlockWidth);
    		this.tmpst[0][1]=parseInt(my/this.iBlockHeight);
    		ns=0;
    		nt=1;
    		es=1;
    		et=1;
    		k=3;
    		while(true)
    		{
    			for(o=ns;o<nt;o++)
    			{
    				i=this.tmpst[o%MAXST][0];
    				j=this.tmpst[o%MAXST][1];
    				if(i-1>=0)
    				{
    					if(this.boom[j][i-1]==2 && this.bCanMove(i*this.iBlockWidth,j*this.iBlockHeight,(i-1)*this.iBlockWidth,j*this.iBlockHeight))
    					{
    						this.boom[j][i-1]=k+1;
    						
    						this.tmpst[et%MAXST][0]=i-1;
    						this.tmpst[et%MAXST][1]=j;
    						et++;
    					}
    				}
    				if(i+1<this.iMapWidth/this.iBlockWidth)
    				{
    					if(this.boom[j][i+1]==2 && this.bCanMove(i*this.iBlockWidth,j*this.iBlockHeight,(i+1)*this.iBlockWidth,j*this.iBlockHeight))
    					{
    						this.boom[j][i+1]=k+1;
    						
    						this.tmpst[et%MAXST][0]=i+1;
    						this.tmpst[et%MAXST][1]=j;
    						et++;
    					}
    				}
    				if(j-1>=0)
    				{
    					if(this.boom[j-1][i]==2 && this.bCanMove(i*this.iBlockWidth,j*this.iBlockHeight,i*this.iBlockWidth,(j-1)*this.iBlockHeight))
    					{
    						this.boom[j-1][i]=k+1;
    						
    						this.tmpst[et%MAXST][0]=i;
    						this.tmpst[et%MAXST][1]=j-1;
    						et++;
    					}
    				}
    				if(j+1<this.iMapHeight/this.iBlockHeight)
    				{
    					if(this.boom[j+1][i]==2 && this.bCanMove(i*this.iBlockWidth,j*this.iBlockHeight,i*this.iBlockWidth,(j+1)*this.iBlockHeight))
    					{
    						this.boom[j+1][i]=k+1;
    						
    						this.tmpst[et%MAXST][0]=i;
    						this.tmpst[et%MAXST][1]=j+1;
    						et++;
    					}
    				}
    			}
    			if(this.boom[parseInt(dy/this.iBlockHeight)][parseInt(dx/this.iBlockWidth)]>2)
    			{//找到终点//回溯
    				this.getback(parseInt(dx/this.iBlockWidth),parseInt(dy/this.iBlockHeight));
    				return true;
    			}
    			if(es==et)break;//没有扩展，退出
    			//有扩展，继续搜索
    			ns=es;
    			nt=et;
    			es=et;
    			k++;
    		}
    		return false;
    	}
    	 findway____( mx, my, dx, dy)
    	{
    		console.log('寻路3');
    		if(mx<0 || my<0 || mx>=MapManager.gi().mapdata.iMapWidth || my>=MapManager.gi().mapdata.iMapHeight)return false;
    		if(dx<0 || dy<0 || dx>=MapManager.gi().mapdata.iMapWidth || dy>=MapManager.gi().mapdata.iMapHeight)return false;

    		var i,j,k,o;
    		boom[parseInt(my/this.iBlockHeight)][parseInt(mx/this.iBlockWidth)]=3;//起点

    		k=3;o=1;
    		while(o>0)
    		{
    			o=0;
    			for(i=0;i<this.iMapWidth/this.iBlockWidth;i++)
    			{
    				for(j=0;j<this.iMapHeight/this.iBlockHeight;j++)
    				{
    					if(this.boom[j][i]==k)
    					{
    						if(i-1>=0)
    						{
    							if(this.boom[j][i-1]==2 && this.bCanMove(i*this.iBlockWidth,j*this.iBlockHeight,(i-1)*this.iBlockWidth,j*this.iBlockHeight))
    							{
    								boom[j][i-1]=k+1;
    								o++;
    							}
    						}
    						if(i+1<this.iMapWidth/this.iBlockWidth)
    						{
    							if(this.boom[j][i+1]==2 && this.bCanMove(i*this.iBlockWidth,j*this.iBlockHeight,(i+1)*this.iBlockWidth,j*this.iBlockHeight))
    							{
    								this.boom[j][i+1]=k+1;
    								o++;
    							}
    						}
    						if(j-1>=0)
    						{
    							if(this.boom[j-1][i]==2 && this.bCanMove(i*this.iBlockWidth,j*this.iBlockHeight,i*this.iBlockWidth,(j-1)*this.iBlockHeight))
    							{
    								this.boom[j-1][i]=k+1;
    								o++;
    							}
    						}
    						if(j+1<this.iMapHeight/this.iBlockHeight)
    						{
    							if(this.boom[j+1][i]==2 && this.bCanMove(i*this.iBlockWidth,j*this.iBlockHeight,i*this.iBlockWidth,(j+1)*this.iBlockHeight))
    							{
    								this.boom[j+1][i]=k+1;
    								o++;
    							}
    						}
    					}
    				}
    			}
    			if(this.boom[parseInt(dy/this.iBlockHeight)][parseInt(dx/this.iBlockWidth)]>2)
    			{//找到终点
    				//回溯
    //				String s;
    //				GmPlay.sop(""+dy/iBlockHeight+","+dx/iBlockWidth);
    //				for(j=0;j<iMapHeight/iBlockHeight;j++)
    //				{
    //					s="("+j+")";
    //					for(i=0;i<iMapWidth/iBlockWidth;i++)
    //					{
    //						s+=boom[j][i]+",";
    //					}
    //					GmPlay.sop(s);
    //				}
    this.getback(parseInt(dx/this.iBlockWidth),parseInt(dy/this.iBlockHeight));
    				return true;
    			}
    			k++;
    			if(k>=256)return false;//超过50个中间点
    		}
    		return false;
    	}

    	 getback( x, y)
    	{
    		var i;
    		this.iPathDeep=this.boom[y][x];
    		i=this.iPathDeep-2;
    		while(i>1)
    		{
    			this.iPath[i][0]=x*this.iBlockWidth;
    			this.iPath[i][1]=y*this.iBlockHeight;
    			i--;
    			if(x-1>=0 && this.boom[y][x-1]==this.boom[y][x]-1 && this.bCanMove(x*this.iBlockWidth,y*this.iBlockHeight,(x-1)*this.iBlockWidth,y*this.iBlockHeight))x--;
    			else if(x+1<this.iMapWidth/this.iBlockWidth && this.boom[y][x+1]==this.boom[y][x]-1 && this.bCanMove(x*this.iBlockWidth,y*this.iBlockHeight,(x+1)*this.iBlockWidth,y*this.iBlockHeight))x++;
    			else if(y-1>=0 && this.boom[y-1][x]==this.boom[y][x]-1 && this.bCanMove(x*this.iBlockWidth,y*this.iBlockHeight,x*this.iBlockWidth,(y-1)*this.iBlockHeight))y--;
    			else if(y+1<this.iMapHeight/this.iBlockHeight && this.boom[y+1][x]==this.boom[y][x]-1 && this.bCanMove(x*this.iBlockWidth,y*this.iBlockHeight,x*this.iBlockWidth,(y+1)*this.iBlockHeight))y++;
    		}
    		this.iPath[i][0]=x*this.iBlockWidth;
    		this.iPath[i][1]=y*this.iBlockHeight;
    //		for(i=0;i<iPathDeep;i++)
    //		{
    //			GmPlay.sop("i="+i+",iPath[i][0]="+iPath[i][0]+",iPath[i][1]="+iPath[i][1]);
    //		}
    	}
    	 bCanMoveEx( x, y, dx, dy)
    	{
    		var i,j;
    		var a,b,c,d,e;
    		//计算直线方程
    		if(dx!=x)
    		{
    			a=1.0*(dy-y)/(dx-x);
    			b=-1;
    			c=1.0*y-a*x;
    		}
    		else if(dy!=y)
    		{
    			a=1;
    			b=-1.0*(x-dx)/(y-dy);
    			c=-(1.0*x-a*y);
    		}
    		else return false;
    		
    		for(i=0;i<MapData.MAXPATHCOUNT;i++)
    		{
    			if(this.pps[i]!=null)
    			{
    				for(j=0;j<this.pps[i].iPathCount;j++)
    				{
    					if(this.pps[i].path[j][0]<x && this.pps[i].path[j][0]<dx)continue;
    					if(this.pps[i].path[j][0]>x && this.pps[i].path[j][0]>dx)continue;
    					
    					if(this.pps[i].path[j][1]<y && this.pps[i].path[j][1]<dy)continue;
    					if(this.pps[i].path[j][1]>y && this.pps[i].path[j][1]>dy)continue;
    					
    					//计算点到直线距离│AXo＋BYo＋C│／√（A²＋B²）
    					d=a*this.pps[i].path[j][0]+b*this.pps[i].path[j][1]+c;
    					if(d<0)d=-d;
    					e=Math.sqrt(a*a+b*b);
    					d=d/e;
    					if(d<10)
    					{
    //						GmPlay.sop("sdfsaddfasdfsfasfdsdf");
    						return false;
    					}
    				}
    			}
    		}
    		return true;
    	}
    	 pullline()
    	{//去除多余路径点，判断碰撞点到路径的距离
    		var i;
    		var s;
    		s=0;
    		for(i=2;i<this.iPathDeep;i++)
    		{
    			if(i==s+1)
    			{
    				//Log.e("aaaaaaaaaaaaaaaaaa","bbbbbbbbbbbbbbbbbbbbbbb");
    				continue;
    			}
    			if(this.bCanMoveEx(this.iPath[s][0],this.iPath[s][1],this.iPath[i][0],this.iPath[i][1]) && this.bCanMove(this.iPath[s][0],this.iPath[s][1],this.iPath[i][0],this.iPath[i][1]))
    			{
    				this.iPath[s+1][0]=this.iPath[i][0];
    				this.iPath[s+1][1]=this.iPath[i][1];
    			}
    			else
    			{
    				s++;
    				i--;
    			}
    		}
    		this.iPathDeep=s+2;
    	}
    	 checkagain()
    	{
    		var i;
    		
    		for(i=1;i<this.iPathDeep;i++)
    		{
    			if(!this.bCanMove(this.iPath[i-1][0],this.iPath[i-1][1],this.iPath[i][0],this.iPath[i][1]))return false;
    		}
    		return true;
    	}


    //	public boolean findway2( mx, my, dx, dy)
    //	{
    //		if(dx<0 || dy<0 || dx>MapManager.gi().mapdata.iMapWidth || dy>MapManager.gi().mapdata.iMapHeight)return false;
    //
    //		return false;
    //	}
    	
    	findway1( mx, my, dx, dy)
    	{//找到一个最近的交点
    		if(XDefine$1.llength(mx, my, dx, dy)<20)return false;
    		var i,j,k;
    		var ijx=0,ijy=0,ijl;
    		var bj;
    		
    		if(dx<0 || dy<0 || dx>MapManager.gi().mapdata.iMapWidth || dy>MapManager.gi().mapdata.iMapHeight)return false;

    		ijl=999999;
    		bj=false;
    		FindWay.bAutoBoom=false;
    		for(i=0;i<MapData.MAXPATHCOUNT;i++)
    		{
    			if(this.pps[i]!=null)
    			{
    				for(j=1;j<this.pps[i].iPathCount;j++)
    				{
    					if(mx<this.pps[i].path[j-1][0] &&
    						dx<this.pps[i].path[j-1][0] &&
    						mx<this.pps[i].path[j][0] &&
    						dx<this.pps[i].path[j][0])continue;
    					if(mx>this.pps[i].path[j-1][0] &&
    							dx>this.pps[i].path[j-1][0] &&
    							mx>this.pps[i].path[j][0] &&
    							dx>this.pps[i].path[j][0])continue;
    					if(my<this.pps[i].path[j-1][1] &&
    							dy<this.pps[i].path[j-1][1] &&
    							my<this.pps[i].path[j][1] &&
    							dy<this.pps[i].path[j][1])continue;
    					if(my>this.pps[i].path[j-1][1] &&
    							dy>this.pps[i].path[j-1][1] &&
    							my>this.pps[i].path[j][1] &&
    							dy>this.pps[i].path[j][1])continue;
    //					if(MapData.llcollision(mx,my,dx,dy,
    //						pps[i].path[j-1][0],pps[i].path[j-1][1],
    //						pps[i].path[j][0],pps[i].path[j][1]))
    					if(MapData.llcollision_ai(mx,my,dx,dy,
    						this.pps[i].path[j-1][0],this.pps[i].path[j-1][1],
    						this.pps[i].path[j][0],this.pps[i].path[j][1]))
    					{//产生碰撞
    						//交线
    						k=XDefine$1.llength(mx, my, MapData.iJx, MapData.iJy);
    						if(k<ijl || !bj)
    						{
    							this.iBx1=this.pps[i].path[j-1][0];
    							this.iBy1=this.pps[i].path[j-1][1];
    							this.iBx2=this.pps[i].path[j][0];
    							this.iBy2=this.pps[i].path[j][1];
    							ijx=MapData.iJx;
    							ijy=MapData.iJy;
    							ijl=k;
    							bj=true;
    							FindWay.bAutoBoom=true;
    						}
    					}
    				}
    			}
    		}
    		if(bj)
    		{//碰撞了
    			//根据交点，速度，计算修正的两个偏移点
    			var x1,y1;
    			var f1,f2,f3;
    			var a = 0,b=0,c=0,d=0,e=0,f=0;
    			//-----------------------------------------
    			f1=XDefine$1.GetAngleXY_ext(iBx1, iBy1, iBx2, iBy2);
    			a= (Math.cos(f1+0.15)*80);
    			b= (Math.sin(f1+0.15)*80);
    			c= (Math.cos(f1-0.15)*80);
    			d= (Math.sin(f1-0.15)*80);
    			e= (Math.cos(f1)*80);
    			f= (Math.sin(f1)*80);
    			i=XDefine$1.llength(mx, my, ijx+e, ijy+f);
    			j=XDefine$1.llength(mx, my, ijx-e, ijy-f);
    			if(i>j)
    			{
    //				a=mx+a;
    //				b=my+b;
    //				c=mx+c;
    //				d=my+d;
    //				e=mx+e;
    //				f=my+f;
    			}
    			else
    			{
    				a=-a;
    				b=-b;
    				c=-c;
    				d=-d;
    				e=-e;
    				f=-f;
    			}
    			var bb1=this.bCanMove(mx,my,(mx+a),(my+b));
    			var bb2=this.bCanMove(mx,my,(mx+c),(my+d));
    			var bb3=this.bCanMove(mx,my,(mx+e),(my+f));
    			
    			if(!bb3)return false;//中不通
    			if(bb1 && bb2)
    			{//两边都通，走中路
    				this.iPath[0][0]=mx;
    				this.iPath[0][1]=my;
    				this.iPath[1][0]=(mx+e*5/8);
    				this.iPath[1][1]=(my+f*5/8);
    				this.iPathDeep=2;
    				return true;
    			}
    			else if(!bb1 && bb2)
    			{
    				this.iPath[0][0]=mx;
    				this.iPath[0][1]=my;
    				this.iPath[1][0]=(mx+c*5/8);
    				this.iPath[1][1]=(my+d*5/8);
    				this.iPathDeep=2;
    				return true;
    			}
    			else if(bb1 && !bb2)
    			{
    				this.iPath[0][0]=mx;
    				this.iPath[0][1]=my;
    				this.iPath[1][0]=(mx+a*5/8);
    				this.iPath[1][1]=(my+b*5/8);
    				this.iPathDeep=2;
    				return true;
    			}
    			else return false;
    //			
    //			boolean bext=false;
    //			if(iBx1==iBx2)
    //			{
    //				x1=iBx1;
    //				y1=GmMe.me.iSpeed;
    //			}
    //			else if(iBy1==iBy2)
    //			{
    //				y1=iBy1;
    //				x1=GmMe.me.iSpeed;
    //			}
    //			else
    //			{
    //				f1=XDefine.GetAngleXY_ext(iBx1, iBy1, iBx2, iBy2);
    //				f2= (Math.sin(f1)*50);//y
    //				f3= (Math.cos(f1)*50);//x
    //				x1=f3;
    //				y1=f2;
    //				
    //				a= (Math.cos(f1+0.35)*80);
    //				b= (Math.sin(f1+0.35)*80);
    //				c= (Math.cos(f1-0.35)*80);
    //				d= (Math.sin(f1-0.35)*80);
    //				e= (Math.cos(f1)*80);
    //				f= (Math.sin(f1)*80);
    //				
    //				bext=true;
    ////				GmPlay.sop("jd="+(f1*180/3.1415926));
    //			}
    //			i=XDefine.llength(mx, my, ijx+x1, ijy+y1);
    //			j=XDefine.llength(mx, my, ijx-x1, ijy-y1);
    //			if(i>j)
    //			{
    //				dx=mx+x1;
    //				dy=my+y1;
    //				if(bext)
    //				{
    //					a=mx+a;
    //					b=my+b;
    //					c=mx+c;
    //					d=my+d;
    //					e=mx+e;
    //					f=my+f;
    //				}
    //			}
    //			else
    //			{
    //				dx=mx-x1;
    //				dy=my-y1;
    //				if(bext)
    //				{
    //					a=mx-a;
    //					b=my-b;
    //					c=mx-c;
    //					d=my-d;
    //					e=mx-e;
    //					f=my-f;
    //				}
    //			}
    //			GmPlay.sop("x1="+x1+",y1="+y1);
    //			if(this.bCanMove(mx,my,dx,dy))
    //			{
    //				if(bext)
    //				{
    //					boolean b1=this.bCanMove(mx,my,a,b);
    //					boolean b2=this.bCanMove(mx,my,c,d);
    //					boolean b3=this.bCanMove(mx,my,e,f);
    //					
    //					if(!b1 && b2)
    //					{
    //						iPath[0][0]=mx;
    //						iPath[0][1]=my;
    //						iPath[1][0]=c;
    //						iPath[1][1]=d;
    //						iPathDeep=2;
    //						return true;
    //					}
    //					else if(b1 && !b2)
    //					{
    //						iPath[0][0]=mx;
    //						iPath[0][1]=my;
    //						iPath[1][0]=a;
    //						iPath[1][1]=b;
    //						iPathDeep=2;
    //						return true;
    //					}
    //					else if(!b1 && !b2)
    //					{
    //						return false;
    //					}
    //				}
    //				iPath[0][0]=mx;
    //				iPath[0][1]=my;
    //				iPath[1][0]=dx;
    //				iPath[1][1]=dy;
    //				iPathDeep=2;
    //				return true;
    //			}
    //			return false;
    		}
    		else
    		{//不碰撞
    			this.iPath[0][0]=mx;
    			this.iPath[0][1]=my;
    			this.iPath[1][0]=dx;
    			this.iPath[1][1]=dy;
    			this.iPathDeep=2;
    			return true;
    		}
    //		return false;
    	}
    }
    FindWay.bAutoBoom=false;

    class SourceFrom
    {
    //	int iSid;
    //	byte iType;
    //	String sName;
    	constructor()
    	{
    		this.sName="";
    	}
    }

    class FromAnima extends SourceFrom
    {
    //	XAnima xani;
        constructor( imf)
        {
            super();
    		this.xani=new XAnima(imf);
    	}
    }

    class FromCut extends SourceFrom
    {
    //	String sImageName;
    //	int iBw,iBh;
    //	int iRid;
    	constructor()
    	{
            super();
    		this.sImageName="";
    		this.iRid=-1;
    	}
    }
    class FromPng extends SourceFrom
    {
    //	int w,h;
    //	int ww,hh;
    //	int iRid;
    //	String sImagePath;
    	constructor()
    	{
            super();
    		var i,j;
    		this.iRid=new Array(10);
    //		sResName=new String(10)(10);//
    		for(i=0;i<10;i++)
    		{
                this.iRid[i]=new Int32Array(10);
    			for(j=0;j<10;j++)
    			{
    				this.iRid[i][j]=-1;
    //				sResName[i][j]="";
    			}
    		}
    	}
    };


    class MAPLIST
    {//地图<->ID对应表
    //	public int iMapId;
    //	public String sMapName;
    	constructor()
    	{
    		this.sMapName="";
    		this.iMapId=-1;
    	}
    }

    class MapManager {
    /*	
    	PackageTools pls;
    	String sProjectPath;
    	public int iBlockWidth,iBlockHeight;
    	
    	int iSourceCount;
    	SourceFrom pSourceList;
    	SourceFrom pSourceIndex;
    	
    	public MapData mapdata;
    	public FindWay mfy;
    	public VisualBlock vbk;
    	
    	MAPLIST maplist; 
    	
    	String sCurrentMapName;
    	public int iCurrentMapId;
    	public int iVisualMapId;
    	
    	public boolean bMapLoaded;
    	public int iMapChangeing;//10->0变亮，100->110变暗
    	*/
    	
    	
    	constructor()
    	{
    		this.iOffx=0;
    		this.iOffy=0;
    		var i;
    		this.xm3f=M3DFast$1.gi();
    		this.pSourceIndex=new SourceFrom(MapManager.SOURCECOUNT);
    		this.pSourceList=new SourceFrom(MapManager.SOURCECOUNT);
    		for(i=0;i<MapManager.SOURCECOUNT;i++)
    		{
    			this.pSourceIndex[i]=null;
    			this.pSourceList[i]=null;
    		}
    		this.mapdata=new MapData();
    		this.mfy=new FindWay();
    		this.vbk=new VisualBlock(this.xm3f);
    		
    		this.maplist=new MAPLIST(MapManager.MAXMAPCOUNT);
    		for(i=0;i<MapManager.MAXMAPCOUNT;i++)this.maplist[i]=new MAPLIST();
    		
    		this.sCurrentMapName="";
    //		mm=this;
    		
    this.bMapLoaded=false;
    this.iMapChangeing=0;
    		
    //		TouchEffect.te=new TouchEffect();
    this.bOpenProjected=false;
    this.bLoadSourced=false;
    this.iLoadStat=0;

    this.iKeepDetialAsMapId=-1;
    	}
    	LoadMapList()
    	{
    		var i,j,k;
    		var mid,vid;
    		for(i=0;i<GmPlay$1.de_map.iDataCount;i++)
    		{
    			mid=GmPlay$1.de_map.datas[i].iDid;
    			this.maplist[mid].iMapId=mid;
    			for(j=0;j<GmPlay$1.de_map.datas[i].iItemCount;j++)
    			{
    				for(k=0;k<GmPlay$1.de_map.datas[i].items[j].iValueCount;k++)
    				{
    					vid=GmPlay$1.de_map.datas[i].items[j].values[k].iVid;
    					if(vid==2)this.maplist[mid].sMapName=GmPlay$1.de_map.datas[i].items[j].values[k].sValue;
    				}
    			}
    		}
    		/*
    		var i=0;
    		
    		pls.InitDataFromResFile(sProjectPath+"/maplist.dat");
    		maplist[i].iMapId=pls.GetNextInt();
    		while(maplist[i].iMapId!=-1)
    		{
    			maplist[i].sMapName=pls.GetNextString();
    //			GmPlay.sop(""+maplist[i].iMapId+"MapName:"+maplist[i].sMapName);
    			i++;
    			maplist[i].iMapId=pls.GetNextInt();
    		}
    		*/
    	}
    	 IdToName(inid)
    	{
    		var i;
    		for(i=0;i<MapManager.MAXMAPCOUNT;i++)
    		{
    			if(this.maplist[i].iMapId==inid)return this.maplist[i].sMapName;
    //			if(maplist[i].iMapId==-1)return "";
    		}
    		return "";
    	}
    	 NameToId( name)
    	{
    		var i;
    		for(i=0;i<MapManager.MAXMAPCOUNT;i++)
    		{
    			GmPlay$1.sop("------------"+this.maplist[i].sMapName+"==="+name+"------------");
    			if(this.maplist[i].sMapName==name)return this.maplist[i].iMapId;
    //			if(maplist[i].iMapId==-1)return -1;
    		}
    		return -1;
    	}
    	LoadLogic()
    	{
    		switch(this.iLoadStat)
    		{
    		case 0:
    			this.sProjectPath="res/datapackage/maps";
    			this.pls=PackageTools.gi();
    			this.OpenProject();
    			this.iLoadStat=1;
    			break;
    		case 1:
    			if(this.bOpenProjected)
    			{
    				this.iLoadStat=2;
    				this.LoadSource();
    			}
    			break;
    		case 2:
    			if(this.bLoadSourced)
    			{
    				this.iLoadStat=3;
    				this.Load2Source();

    			}
    			break;
    		case 3:
    			for(var i=0;i<this.iSourceCount;i++)
    			{
    				if(!this.pSourceList[i].bLoaded)return false;
    			}
    			this.iLoadStat=4;
    			this.vbk.LoadNpcs(this.pls, this.sProjectPath+"/npcs");
    			break;
    		case 4:
    			if(this.vbk.ani_npcs.bLoadSuccess)this.iLoadStat=5;
    			break;
    		case 5:
    			return true;
    			break;
    		}
    		return false;
    	}
    	Load2Source()
    	{
    		for(var i=0;i<this.iSourceCount;i++)
    		{
    			GmPlay$1.sop("载入:"+this.pSourceList[i].iType+","+this.pSourceList[i].sName);
    			this.pSourceList[i].bLoaded=false;

    			this._Load2Source(i,XDefine$1.BASE_URL+this.sProjectPath+"/source_"+this.pSourceList[i].sName+"/config.dat");
    		}
    	}
    	_Load2Source(i,path,data)
    	{
    		if(data==null)
    		{
    			Laya.loader.load(path,Laya.Handler.create(this, this._Load2Source,[i,path]),null,Laya.Loader.BUFFER);
    			return;
    		}
    		this.pSourceList[i].bLoaded=true;
    		this.pls.GetData3(data);
    		var pani;
    		var pcut;
    		var ppng;

    		var tp="datapackage/maps";

    			this.pls.GetNextByte();
    			this.pls.GetNextByte();
    			switch(this.pSourceList[i].iType)
    			{
    			case 0:
    				pani=this.pSourceList[i];
    				this.pls.GetNextString();
    				this.pls.GetNextString();
    				pani.iSid=this.pls.GetNextInt();
    				
    				pani.xani.LoadAnima_fullpath(this.sProjectPath+"/source_"+this.pSourceList[i].sName,this.pls,true);
    				this.pSourceIndex[pani.iSid]=pani;
    				break;
    			case 1:
    				pcut=this.pSourceList[i];
    				this.pls.GetNextString();
    				this.pls.GetNextString();
    				pcut.iSid=this.pls.GetNextInt();
    				this.pls.GetNextString();
    				pcut.sImageName=this.pls.GetNextString();
    				pcut.iBw=this.pls.GetNextInt();
    				pcut.iBh=this.pls.GetNextInt();
    				
    				GmPlay$1.sop(this.sProjectPath+"/source_"+this.pSourceList[i].sName+"/"+pcut.sImageName);
    				pcut.sImageName=tp+"/source_"+this.pSourceList[i].sName+"/"+pcut.sImageName;
    				pcut.iRid=-1;
    //				pcut.iRid=M3DFast.gi().LoadFromFile(sProjectPath+"/source_"+pSourceList[i].sName+"/"+pcut.sImageName, -1);
    this.pSourceIndex[pcut.iSid]=pcut;
    //				GmPlay.sop("111");
    				break;
    			case 2:
    				ppng=this.pSourceList[i];
    				this.pls.GetNextString();
    				this.pls.GetNextString();
    				ppng.iSid=this.pls.GetNextInt();
    				this.pls.GetNextString();
    				this.pls.GetNextString();
    				ppng.ww=this.pls.GetNextInt();
    				ppng.hh=this.pls.GetNextInt();
    				ppng.w=this.pls.GetNextInt();
    				ppng.h=this.pls.GetNextInt();
    				ppng.sImagePath=tp+"/source_"+this.pSourceList[i].sName+"/";
    //				GmPlay.sop(sProjectPath+"/source_"+pSourceList[i].sName+"/"+pcut.sImageName);
    //				pcut.sImageName=sProjectPath+"/source_"+pSourceList[i].sName+"/"+pcut.sImageName;
    //				pcut.iRid=-1;
    //				pcut.iRid=gi().LoadFromFile(sProjectPath+"/source_"+pSourceList[i].sName+"/"+pcut.sImageName, -1);
    this.pSourceIndex[ppng.iSid]=ppng;
    //				GmPlay.sop("111");
    				break;
    			}
    	}
    	OpenProject()
    	{
    		this._OpenProject(this,XDefine$1.BASE_URL+this.sProjectPath+"/project.dat");
    	}
    	_OpenProject(p,path,data)//"/res/cx"
    	{
    		if(data==null)
    		{
    			Laya.loader.load(path,Laya.Handler.create(this, this._OpenProject,[this,path]),null,Laya.Loader.BUFFER);
    			return;
    		}
    		this.pls.GetData3(data);
    		this.pls.GetNextByte();
    		GmPlay$1.sop("打开工程:"+this.pls.GetNextString());
    		this.iBlockWidth=this.pls.GetNextInt();
    		this.iBlockHeight=this.pls.GetNextInt();
    		GmPlay$1.sop("BW:"+this.iBlockWidth+",BH:"+this.iBlockHeight);
    		
    //		this.LoadSource();
    		this.LoadMapList();
    		
    		
    		this.bOpenProjected=true;
    	}
    	LoadSource()
    	{
    		this._LoadSource(this,XDefine$1.BASE_URL+this.sProjectPath+"/sourceconfig.dat");
    	}
    	_LoadSource(p,path,data)
    	{
    		if(data==null)
    		{
    			Laya.loader.load(path,Laya.Handler.create(this, this._LoadSource,[this,path]),null,Laya.Loader.BUFFER);
    			return;
    		}
    		this.bLoadSourced=true;	
    		var i,j;
    		i=0;
    		this.pls.GetData3(data);
    		
    		this.pls.GetNextByte();//10
    		
    		i=0;
    		j=this.pls.GetNextByte();
    		while(j>=0)
    		{
    			switch(j)
    			{
    			case 0://anima
                this.pSourceList[i]=new FromAnima(this.xm3f);
    				break;
    			case 1://cut
                this.pSourceList[i]=new FromCut();
    				break;
    			case 2://ground
                this.pSourceList[i]=new FromPng();
    				break;
    			}
    			
    			this.pSourceList[i].iType=j;
    			this.pSourceList[i].sName=this.pls.GetNextString();
    			GmPlay$1.sop("["+i+"]Source:"+j+","+this.pSourceList[i].sName);
    			
    			j=this.pls.GetNextByte();
    			i++;
    		}
    		this.iSourceCount=i;
    	}
    	LoadMap( mapid, vmapid, mx, my)//bbb.map
    {
    		this.iVisualMapId=vmapid;
    		if(this.iCurrentMapId==mapid)return;
    //		if(this.NameToId(mn)==-1)return;
    		GmPlay$1.gi().mapChanging.changed = false;
    		this.sCurrentMapName=this.IdToName(mapid);
    		this.iCurrentMapId=mapid;
    //		iVisualMapId=vmapid;
    		this._LoadMap(this,XDefine$1.BASE_URL+this.sProjectPath+"/maps/"+this.sCurrentMapName);
    		GmPlay$1.sop(this.sProjectPath+"/"+this.sCurrentMapName);
    	}
    	_LoadMap(p,path,data)
    	{
    		if(data==null){
    			Laya.loader.load(path,Laya.Handler.create(p, p._LoadMap,[p,path]),null,Laya.Loader.BUFFER);
    			return;
    		}
    		var i,j,k,m,n;
    		this.pls.GetData3(data);
    		this.pls.xordata(this.pls.iLength);
    		this.pls.GetNextByte();
    		this.pls.GetNextInt();
    //		iCurrentMapId=pls.GetNextInt();//mapid
    		this.mapdata.sMapName=this.pls.GetNextString();//文件名
    		if(this.iCurrentMapId==this.iKeepDetialAsMapId){
    			this.iKeepDetialAsMapId=-1;
    			this.pls.GetNextString();//detail中文名
    		}
    		else this.mapdata.sMapDetail=this.pls.GetNextString();//detail中文名
    		this.mapdata.iMapWidth=this.pls.GetNextInt();
    		this.mapdata.iMapHeight=this.pls.GetNextInt();
    		this.mapdata.iGroundSourceId=this.pls.GetNextInt();
    		this.mapdata.iMapFlag=0;
    				
    		this.mapdata.iBCW=parseInt((this.mapdata.iMapWidth+this.iBlockWidth-1)/this.iBlockWidth);
    		this.mapdata.iBCH=parseInt((this.mapdata.iMapHeight+this.iBlockHeight-1)/this.iBlockHeight);
    		GmPlay$1.sop("open map:"+this.mapdata.sMapName+","+this.mapdata.iMapWidth+","+this.mapdata.iMapHeight+","+this.mapdata.iBCW+","+this.mapdata.iBCH);
    		this.mapdata.InitCutLevel();
    		//
    		GmPlay$1.sop("at 1="+this.pls.iOffset);
    		//三层地面
    		m=this.pls.GetNextInt();
    		n=0;
    		for(i=0;i<3;i++)
    		{
    			for(j=0;j<this.mapdata.iBCH;j++)
    			{
    				for(k=0;k<this.mapdata.iBCW;k++)
    				{
    					if(n>=m)
    					{
    						if(j==18 && k==14)
    						{
    					//	GmPlay.sop("zzzzzzzzzzzzzzzzz");
    						}
    						//GmPlay.sop("at x="+pls.iOffset);
    						this.mapdata.cutlevel[i][j][k][0]=this.pls.GetNextShort();
    					//	GmPlay.sop("pt:"+mapdata.cutlevel[i][j][k][0]);
    						if(this.mapdata.cutlevel[i][j][k][0]==-1)
    						{
    							m=this.pls.GetNextInt();
    							n=0;
    						//	GmPlay.sop("m="+m);
    						}
    						else
    						{
    							this.mapdata.cutlevel[i][j][k][1]=this.pls.GetNextShort();
    							//绑定到sf
    							/*
    							for(o=0;o<SOURCECOUNT;o++)
    							{
    								if(sf[o]->bUseing && sf[o]->iSid==mapdata.blocks[i].level[j][k].sourceId)
    								{//
    									mapdata.blocks[i].level[j][k].sf=sf[o];
    									break;
    								}
    							}
    							if(o>=SOURCECOUNT)
    							{
    								mapdata.blocks[i].level[j][k].sourceId=-1;
    							}*/
    						}
    					}
    					n++;
    				}
    			}
    		}
    		GmPlay$1.sop("at 2="+this.pls.iOffset);
    		//景物层
    		var pani;
    		for(i=0;i<3;i++)
    		{
    			j=0;
    			while(1==1)
    			{
    				k=this.pls.GetNextShort();
    				if(k==-1)break;
    				this.mapdata.animalevel[i][j]=new ANIMALEVEL();
    				this.mapdata.animalevel[i][j].sourceId=k;
    				this.mapdata.animalevel[i][j].iX=this.pls.GetNextInt();
    				this.mapdata.animalevel[i][j].iY=this.pls.GetNextInt();
    				this.mapdata.animalevel[i][j].sName=this.pls.GetNextString();
    //				GmPlay.sop("k="+k+","+mapdata.animalevel[i][j].sourceId);
    				pani=this.pSourceIndex[this.mapdata.animalevel[i][j].sourceId];
    				pani.xani.InitAnimaWithName(this.mapdata.animalevel[i][j].sName, this.mapdata.animalevel[i][j].aa);
    				/////
    				j++;
    			}
    		}
    		//√
    		i=0;
    		k=this.pls.GetNextByte();
    		while(k>0)
    		{
    			this.mapdata.pps[i]=new COLLPATH(k);
    			for(j=0;j<k;j++)
    			{
    				this.mapdata.pps[i].path[j][0]=this.pls.GetNextShort();
    				this.mapdata.pps[i].path[j][1]=this.pls.GetNextShort();
    			}
    			i++;
    			k=this.pls.GetNextByte();
    		}
    		GmPlay$1.sop("at 3="+this.pls.iOffset);
    		this.vbk.LoadVisual(this.pls);//npc事件
    //		mfy.initboom(mx, my, mapdata.iMapWidth, mapdata.iMapHeight, iBlockWidth, iBlockHeight);
    		this.mfy.initboom(this.vbk.iBoomX, this.vbk.iBoomY, this.mapdata.iMapWidth, this.mapdata.iMapHeight, this.iBlockWidth, this.iBlockHeight);
    		
    		GmPlay$1.sop("at 4="+this.pls.iOffset);
    		
    		//console.log('地图加载完成')
    		this.bMapLoaded=true;
    		
    		if(GmPlay$1.iTraverse==1)
    		{//无障碍
    			this.RemoveTraverse(0);
    		}
    	}
    	
    	RemoveTraverse( type)
    	{
    		var i;
    		if(type==0)
    		{
    			if(this.iCurrentMapId==3)
    			{
    				for(i=0;i<MapData.MAXPATHCOUNT;i++)
    				{
    					if(this.mapdata.pps[i]==null)break;
    					if(this.mapdata.pps[i].path[0][0]==1248 && this.mapdata.pps[i].path[0][1]==713)
    					{
    						this.mapdata.pps[i].iPathCount=0;
    						this.mfy.initboom(this.vbk.iBoomX, this.vbk.iBoomY, this.mapdata.iMapWidth, this.mapdata.iMapHeight, this.iBlockWidth, this.iBlockHeight);
    						return;
    					}
    				}
    			}
    		}
    		
    	}
    	 mto( mx, my)
    	{
    		var dox,doy;
    		this.vbk.CheckNow(mx,my);
    		if(this.vbk.bFaceToFace)
    		{
    			this.vbk.bFaceToFace=false;
    			JQMode.jq.iGoToNpc=0;
    			//停下
    			GmMe$1.me.ChangeStat("站立");
    		}
    		dox=GmConfig$1.SCRW/2-mx;
    		doy=GmConfig$1.SCRH/2-my;
    		if(dox>0)dox=0;
    		if(dox<GmConfig$1.SCRW-this.mapdata.iMapWidth)dox=GmConfig$1.SCRW-this.mapdata.iMapWidth;
    		if(doy>0)doy=0;
    		if(doy<GmConfig$1.SCRH-this.mapdata.iMapHeight)doy=GmConfig$1.SCRH-this.mapdata.iMapHeight;
    		this.iOffx=dox;
    		this.iOffy=doy;
    		if(this.mapdata.iMapWidth<GmConfig$1.SCRW)
    		{
    			this.iOffx=(GmConfig$1.SCRW-this.mapdata.iMapWidth)/2;
    		}
    		if(this.mapdata.iMapHeight<GmConfig$1.SCRH)
    		{
    			this.iOffy=(GmConfig$1.SCRH-this.mapdata.iMapHeight)/2;
    		}
    	}
    	 Draw()
    	{
    		var i,j,k;
    		var pcut;
    		var pani;
    //		if(1==1)return;
    		var sx,sy,sw,sh;
    		sx=-this.iOffx/this.iBlockWidth;
    		sy=-this.iOffy/this.iBlockHeight;
    		sw=sx+(GmConfig$1.SCRW+this.iBlockWidth-1)/this.iBlockWidth+1;
    		sh=sy+(GmConfig$1.SCRH+this.iBlockHeight-1)/this.iBlockHeight+1;
    		if(sw>this.mapdata.iBCW)sw=this.mapdata.iBCW;
    		if(sh>this.mapdata.iBCH)sh=this.mapdata.iBCH;
    //		GmPlay.sop("sx="+sx+",sw="+sw);
    //		GmPlay.sop("sy="+sy+",sh="+sh);
    		for(i=0;i<3;i++)
    		{
    			for(j=sy;j<sh;j++)
    			{
    				for(k=sx;k<sw;k++)
    				{
    					if(this.mapdata.cutlevel[i][j][k][0]!=-1)
    					{
    //						GmPlay.sop("i="+i+"j="+j+"k="+k);
    //						GmPlay.sop("mapdata.cutlevel[i][j][k][0]="+mapdata.cutlevel[i][j][k][0]);
    						pcut=this.pSourceIndex[this.mapdata.cutlevel[i][j][k][0]];
    						if(pcut.iRid==-1)pcut.iRid=M3DFast$1.gi().LoadFromFile(pcut.sImageName, -1,GameData$1.bFromSD);
    						this.xm3f.DrawImageEx(0, this.iOffx+k*this.iBlockWidth,this.iOffy+j*this.iBlockHeight, pcut.iRid,
                                this.mapdata.cutlevel[i][j][k][1]%pcut.iBw*this.iBlockWidth,this.mapdata.cutlevel[i][j][k][1]/pcut.iBw*this.iBlockHeight,
                                this.iBlockWidth,this.iBlockHeight,100,1,1,0,0,0);
    					}
    				}
    			}
    			for(j=0;j<256;j++)
    			{
    				if(this.mapdata.animalevel[i][j]!=null)
    				{
    					pani=this.pSourceIndex[this.mapdata.animalevel[i][j].sourceId];
    					pani.xani.DrawAnima_aa(this.iOffx+this.mapdata.animalevel[i][j].iX, this.iOffy+this.mapdata.animalevel[i][j].iY, this.mapdata.animalevel[i][j].aa);
    					pani.xani.NextFrame(this.mapdata.animalevel[i][j].aa);
    				}
    			}
    		}
    	}
    	//int this.idsx,this.idsy,this.idsw,this.idsh;
    	DrawGround()
    	{
    		var i,j,k;
    		var x,y;
    		var pcut;
    		var pani;
    //		if(1==1)return;
    		this.idsx=-this.iOffx/this.iBlockWidth;
    		this.idsy=-this.iOffy/this.iBlockHeight;
    		this.idsw=this.idsx+(GmConfig$1.SCRW+this.iBlockWidth-1)/this.iBlockWidth+1;
    		this.idsh=this.idsy+(GmConfig$1.SCRH+this.iBlockHeight-1)/this.iBlockHeight+1;
    		if(this.idsx<0)this.idsx=0;
    		if(this.idsy<0)this.idsy=0;
    		if(this.idsw>this.mapdata.iBCW)this.idsw=this.mapdata.iBCW;
    		if(this.idsh>this.mapdata.iBCH)this.idsh=this.mapdata.iBCH;
    //		GmPlay.sop("sx="+sx+",sw="+sw);
    //		GmPlay.sop("sy="+sy+",sh="+sh);
    		// if(SystemOperate.iPictureQuality==1)XImgFast.bLow=true;
    		if(this.mapdata.iGroundSourceId>=0)
    		{//整图底面
    //			GmPlay.sop("mapdata.iGroundSourceId="+mapdata.iGroundSourceId);
    			var ppng=this.pSourceIndex[this.mapdata.iGroundSourceId];
    			for(i=0;i<ppng.ww;i++)
    			{
    				for(j=0;j<ppng.hh;j++)
    				{
    					x=this.iOffx+i*512;
    					y=this.iOffy+j*512;

    					if(ppng.iRid[j][i]==-1)
    					{
    						//console.log('地图：',ppng.sImagePath)
    						ppng.iRid[j][i]=M3DFast$1.gi().LoadFromFile(ppng.sImagePath+"spirit_"+i+"_"+j+".png", -1,GameData$1.bFromSD);
    					}
    					if(x+512<0)continue;
    					if(x>=GmConfig$1.SCRW)continue;
    					if(y+512<0)continue;
    					if(y>=GmConfig$1.SCRH)continue;
    //					GmPlay.sop("i="+i+",j="+j+",fn="+ppng.sImagePath+"spirit_"+i+"_"+j+".png");
    					this.xm3f.DrawImageEx(0, x,y, ppng.iRid[j][i],
    							0,0,512,512,
    							100,1,1,0,0,0);
    				}
    			}
    		}
    		// if(SystemOperate.iPictureQuality==1)XImgFast.bLow=false;
    		i=0;
    		{
    			if(1==0)
    			{//切片层，暂时屏蔽
    			for(j=this.idsy;j<this.idsh;j++)
    			{
    				for(k=this.idsx;k<this.idsw;k++)
    				{
    //					GmPlay.sop("i="+i+"j="+j+"k="+k);
    //					GmPlay.sop("mapdata.cutlevel[i][j][k][0]="+mapdata.cutlevel[i][j][k][0]);
    					if(this.mapdata.cutlevel[i][j][k][0]!=-1)
    					{
    						pcut=this.pSourceIndex[this.mapdata.cutlevel[i][j][k][0]];
    						if(pcut.iRid==-1)pcut.iRid=M3DFast$1.gi().LoadFromFile(pcut.sImageName, -1,true);
    						this.xm3f.DrawImageEx(0, this.iOffx+k*this.iBlockWidth,this.iOffy+j*this.iBlockHeight, pcut.iRid,
                                this.mapdata.cutlevel[i][j][k][1]%pcut.iBw*this.iBlockWidth,this.mapdata.cutlevel[i][j][k][1]/pcut.iBw*this.iBlockHeight,
                                this.iBlockWidth,this.iBlockHeight,100,1,1,0,0,0);
    					}
    				}
    			}
    			}
    			for(j=0;j<256;j++)
    			{
    				if(this.mapdata.animalevel[i][j]!=null)
    				{
    					pani=this.pSourceIndex[this.mapdata.animalevel[i][j].sourceId];
    					pani.xani.DrawAnima_aa(this.iOffx+this.mapdata.animalevel[i][j].iX, this.iOffy+this.mapdata.animalevel[i][j].iY, this.mapdata.animalevel[i][j].aa);
    					pani.xani.NextFrame(this.mapdata.animalevel[i][j].aa);
    				}
    			}
    		}
    		if(this.mapdata.iMapWidth<GmConfig$1.SCRW && this.mapdata.iMapWidth%512!=0)
    		{
    			M2DFast.xm3f.FillRect_2D(this.iOffx+this.mapdata.iMapWidth, this.iOffy, GmConfig$1.SCRW, GmConfig$1.SCRH, 0xff000000);
    		}
    		if(this.mapdata.iMapHeight<GmConfig$1.SCRH && this.mapdata.iMapHeight%512!=0)
    		{
    			M2DFast.xm3f.FillRect_2D(this.iOffx, this.iOffy+this.mapdata.iMapHeight, GmConfig$1.SCRW, GmConfig$1.SCRH, 0xff000000);
    		}
    		if(this.iCurrentMapId>=41 && this.iCurrentMapId<=45)
    		{
    			for(i=0;i<MyLand.iMaxArable;i++)
    			{
    				if((MyLand.iArableGrow&(1<<i))!=0)
    				{//有土地，画土地，根据当前地类型
    					GmPlay$1.xani_grow.DrawAnima(this.iOffx+MyLand.iArableOff[i][0], this.iOffy+MyLand.iArableOff[i][1], MyLand.sLandName[this.iCurrentMapId-41]+"地块",0);
    				}
    				//画地面格子
    				else if(MyLand.bShowBlock)GmPlay$1.xani_grow.DrawAnima(this.iOffx+MyLand.iArableOff[i][0], this.iOffy+MyLand.iArableOff[i][1], "选择地块",0);
    			}
    		}
    		if(GmPlay$1.iTraverse==1)
    		{
    			if(this.iCurrentMapId==3)
    			{
    				//GmPlay.sop1("补路");
    				GmPlay$1.xani_ui4.DrawAnima(this.iOffx+1218, this.iOffy+718, "西阳补路",0);
    			}
    		}
    		TouchEffect.te.Draw();
    	}
    	DrawMiddleDirect()
    	{
    		var i,j,k;
    		var pcut;
    		var pani;

    		i=1;
    		{
    			if(1==0)
    			{
    			for(j=this.idsy;j<this.idsh;j++)
    			{
    				for(k=this.idsx;k<this.idsw;k++)
    				{
    					if(this.mapdata.cutlevel[i][j][k][0]!=-1)
    					{
    //						GmPlay.sop("i="+i+"j="+j+"k="+k);
    //						GmPlay.sop("mapdata.cutlevel[i][j][k][0]="+mapdata.cutlevel[i][j][k][0]);
    						pcut=this.pSourceIndex[this.mapdata.cutlevel[i][j][k][0]];
    						if(pcut.iRid==-1)pcut.iRid=M3DFast$1.gi().LoadFromFile(pcut.sImageName, -1,true);
    						this.xm3f.DrawImageEx(0, this.iOffx+k*this.iBlockWidth,this.iOffy+j*this.iBlockHeight, pcut.iRid,
                                this.mapdata.cutlevel[i][j][k][1]%pcut.iBw*this.iBlockWidth,this.mapdata.cutlevel[i][j][k][1]/pcut.iBw*this.iBlockHeight,
                                this.iBlockWidth,this.iBlockHeight,100,1,1,0,0,0);
    					}
    				}
    			}
    			}
    			for(j=0;j<256;j++)
    			{
    				if(this.mapdata.animalevel[i][j]!=null)
    				{
    					pani=this.pSourceIndex[this.mapdata.animalevel[i][j].sourceId];
    					pani.xani.DrawAnima_aa(this.iOffx+this.mapdata.animalevel[i][j].iX, this.iOffy+this.mapdata.animalevel[i][j].iY, this.mapdata.animalevel[i][j].aa);
    					pani.xani.NextFrame(this.mapdata.animalevel[i][j].aa);
    				}
    			}
    		}
    	}
    	DrawMiddle( pdbf)
    	{
    		var i,j,k;
    		var pcut;
    		var pani;
    //		if(1==1)return;

    		i=1;
    		{
    			if(1==0)
    			{
    			for(j=this.idsy;j<this.idsh;j++)
    			{
    				for(k=this.idsx;k<this.idsw;k++)
    				{
    					if(this.mapdata.cutlevel[i][j][k][0]!=-1)
    					{
    //						GmPlay.sop("i="+i+"j="+j+"k="+k);
    //						GmPlay.sop("mapdata.cutlevel[i][j][k][0]="+mapdata.cutlevel[i][j][k][0]);
    						pcut=this.pSourceIndex[mapdata.cutlevel[i][j][k][0]];
    						if(pcut.iRid==-1)pcut.iRid=M3DFast$1.gi().LoadFromFile(pcut.sImageName, -1,true);
    						pdbf.DrawImage(this.iOffx+k*this.iBlockWidth,this.iOffy+j*this.iBlockHeight, pcut.iRid,
                                this.mapdata.cutlevel[i][j][k][1]%pcut.iBw*this.iBlockWidth,this.mapdata.cutlevel[i][j][k][1]/pcut.iBw*this.iBlockHeight,
                                this.iBlockWidth,this.iBlockHeight);
    					}
    				}
    			}
    			}
    			for(j=0;j<256;j++)
    			{
    				if(this.mapdata.animalevel[i][j]!=null)
    				{
    					pani=this.pSourceIndex[this.mapdata.animalevel[i][j].sourceId];
                        pdbf.DrawAnima_aa(this.iOffy+this.mapdata.animalevel[i][j].iY,pani.xani,this.iOffx+this.mapdata.animalevel[i][j].iX, 
                            this.iOffy+this.mapdata.animalevel[i][j].iY, this.mapdata.animalevel[i][j].aa);
    					pani.xani.NextFrame(this.mapdata.animalevel[i][j].aa);
    				}
    			}
    		}
    		this.vbk.DrawNpcInBuffer(pdbf,this.iOffx,this.iOffy);
    	}
    	DrawSky()
    	{
    		var i,j,k;
    		var pcut;
    		var pani;
    //		if(1==1)return;

    //		this.idsx=-this.iOffx/iBlockWidth;
    //		this.idsy=-this.iOffy/iBlockHeight;
    //		this.idsw=this.idsx+(gi().SCRW+iBlockWidth-1)/iBlockWidth+1;
    //		this.idsh=this.idsy+(gi().SCRH+iBlockHeight-1)/iBlockHeight+1;
    //		if(this.idsx<0)this.idsx=0;
    //		if(this.idsy<0)this.idsy=0;
    //		if(this.idsw>mapdata.iBCW)this.idsw=mapdata.iBCW;
    //		if(this.idsh>mapdata.iBCH)this.idsh=mapdata.iBCH;
    //		GmPlay.sop("sx="+sx+",sw="+sw);
    //		GmPlay.sop("sy="+sy+",sh="+sh);
    		i=2;
    		{
    			if(1==0)
    			{
    			for(j=this.idsy;j<this.idsh;j++)
    			{
    				for(k=this.idsx;k<this.idsw;k++)
    				{
    					if(this.mapdata.cutlevel[i][j][k][0]!=-1)
    					{
    //						GmPlay.sop("i="+i+"j="+j+"k="+k);
    //						GmPlay.sop("mapdata.cutlevel[i][j][k][0]="+mapdata.cutlevel[i][j][k][0]);
    						pcut=this.pSourceIndex[this.mapdata.cutlevel[i][j][k][0]];
    						this.xm3f.DrawImageEx(0, this.iOffx+k*this.iBlockWidth,this.iOffy+j*this.iBlockHeight, pcut.iRid,
                                this.mapdata.cutlevel[i][j][k][1]%pcut.iBw*this.iBlockWidth,this.mapdata.cutlevel[i][j][k][1]/pcut.iBw*this.iBlockHeight,
                                this.iBlockWidth,this.iBlockHeight,100,1,1,0,0,0);
    					}
    				}
    			}
    			}
    			for(j=0;j<256;j++)
    			{
    				if(this.mapdata.animalevel[i][j]!=null)
    				{
    					pani=this.pSourceIndex[this.mapdata.animalevel[i][j].sourceId];
    					pani.xani.DrawAnima_aa(this.iOffx+this.mapdata.animalevel[i][j].iX, this.iOffy+this.mapdata.animalevel[i][j].iY, this.mapdata.animalevel[i][j].aa);
    					pani.xani.NextFrame(this.mapdata.animalevel[i][j].aa);
    				}
    			}
    		}
    //		vbk.mapdialog.Draw();
    	}
    }
    MapManager.MAXMAPCOUNT=128;
    MapManager.SOURCECOUNT=128;
    MapManager.mm=null;
    MapManager.gi=function()
    {
    	if(MapManager.mm==null)MapManager.mm=new MapManager();
    	return MapManager.mm;
    };

    class _AMESSAGE {
        constructor()
        {
            this.MAXMESSAGESIZE=2048;
            this.iSize;
            this.data=new Uint8Array(this.MAXMESSAGESIZE);//
        }

    	copyfrom( msg)
    	{
    		this.iSize=msg.iSize;
    		XDefine$1.arraycopy(msg.data, 0, this.data, 0, this.iSize);
    	}
    }

    class _MESSAGEBUFFER
    {
    	constructor()
    	{
            this.MAXRECVBUFFERCOUNT=64;
            this.MAXSENDBUFFERCOUNT=64;

    		var i;
    		this.iRecvHead=0;
    		this.iRecvTail=0;
    		this.recv=new Array(this.MAXRECVBUFFERCOUNT);//
    		for(i=0;i<this.MAXRECVBUFFERCOUNT;i++)this.recv[i]=new _AMESSAGE();
    		this.recvout=new _AMESSAGE();
    		
    		this.iSendHead=0;
    		this.iSendTail=0;
    		this.send=new Array(this.MAXSENDBUFFERCOUNT);//
    		for(i=0;i<this.MAXSENDBUFFERCOUNT;i++)this.send[i]=new _AMESSAGE();
    		this.sendout=new _AMESSAGE();
    		
    		this.bStartMessage=false;
    		this.bEndMessage=false;
    		this.startmessage=new _AMESSAGE();
    		this.endmessage=new _AMESSAGE();
    	}
    	 ResetQueue()
    	{
    		this.iRecvHead=0;
    		this.iRecvTail=0;
    		this.iSendHead=0;
    		this.iSendTail=0;
    	}
    	
    	 SetStartMessage( size, buf)
    	{
    		this.startmessage.iSize=size;
    		XDefine$1.arraycopy(buf, 0, this.startmessage.data, 0, size);
    		this.bStartMessage=true;
    	}
    	 SetEndMessage( size, buf)
    	{
    		this.endmessage.iSize=size;
    		XDefine$1.arraycopy(buf, 0, this.endmessage.data, 0, size);
    		this.bEndMessage=true;
    	}
    	
    	 InSendQueue( size, buf)
    	{
    		while(this.iSendTail-this.iSendHead>=this.MAXSENDBUFFERCOUNT)
    		{
    //			if(!slp->bUseing)return false;
    			return false;
    		}
    		var j=this.iSendTail%this.MAXSENDBUFFERCOUNT;
    		this.send[j].iSize=size;
    		XDefine$1.arraycopy(buf, 0,this.send[j].data,0,size);
    		this.iSendTail++;
    		return true;
    	}
    	 OutSendQueue()
    	{
    		if(this.iSendTail-this.iSendHead<=0)return false;
    		this.sendout.copyfrom(this.send[this.iSendHead%this.MAXSENDBUFFERCOUNT]);
    		this.iSendHead++;
    		return true;
    	}
    	
    	 InRecvQueue( size, buf)
    	{
    		while(this.iRecvTail-this.iRecvHead>=this.MAXRECVBUFFERCOUNT)
    		{
    			return false;
    		}
    //		if (isFull) DebugOutput("满了~\n");

    		var j=this.iRecvTail%this.MAXRECVBUFFERCOUNT;
    		this.recv[j].iSize=size;
    		XDefine$1.arraycopy(buf, 0,this.recv[j].data,0,size);
    		this.iRecvTail++;
    		return true;
    	}
    	 OutRecvQueue()
    	{
    		if(this.iRecvTail-this.iRecvHead<=0)return false;
    		this.recvout.copyfrom(this.recv[this.iRecvHead%this.MAXRECVBUFFERCOUNT]);
    		this.iRecvHead++;
    		return true;
    	}
    }

    class NetFast {
      constructor(desturl) {
        this.socket = new Laya.Socket();

        this.socket.on(Laya.Event.OPEN, this, this.onConnect);
        this.socket.on(Laya.Event.MESSAGE, this, this.onReceive);
        this.socket.on(Laya.Event.CLOSE, this, this.onClose);
        this.socket.on(Laya.Event.ERROR, this, this.onError);

        this.sConnectUrl = desturl;
        //this.sConnectUrl="ws://"+ip+":"+port;
        this.socket.connectByUrl(this.sConnectUrl);
        // this.socket.connect(ip,port);

        this.bConnected = false;
        this.pls = new PackageTools(10240);
        this.pls_package = new PackageTools(10240);
        this.pls_ext = new PackageTools(10240);

        this.msg = new _MESSAGEBUFFER();
        this.iLastSendMs = XDefine$1.get_ms();
        this.bAllow = true;
        this.bReconnect = false;
        this.byte = new Laya.Byte();

        this.bWaitingClose = false;
        /*
        	iLastConnectDelay=0;
        	iMaxConnectDelay=0;
        	iStat=0;
        	recvhead=new Int8Array(10);//
        	
        	this.ResetSever(ip,port);
     //   	this.ResetSever("192.168.1.100",8002);
    //    	this.Init1();
        	
            thread = new Thread(this);
    		thread.start();*/

        this.iReconnectDelay = 0;
        this.iReTryCount = 0;
      }

      onConnect() {
        this.bConnected = true;
        XDefine$1.sop("onConnect");
        if (GmPlay$1.gi().mapChanging.changed) {
          // 如果已经地图传送，重连的时候再传送一次
          let type = GmPlay$1.gi().mapChanging.type;
          let dest = GmPlay$1.gi().mapChanging.dest;
          GmProtocol$1.gi().s_ChangeMapNew(type, dest);
        }
      }

      onReceive(msg) {
        //XDefine.sop("onReceive");
        this.byte.clear();
        this.byte.writeArrayBuffer(msg);
        this.byte.pos = 0;
        for (var i = 0; i < this.byte.length; i++) {
          var b = this.byte.getByte();
          if (b < 0) {
            b = 256 + b;
          }
          this.pls_package.databuf[i] = b;
        }
        this.pls_package.iLength = this.byte.length;
        this.pls_package.iOffset = 0;

        this.AnalyzePackage();
      }
      onClose() {
        XDefine$1.sop("onClose");
        this.bConnected = false;
        this.bWaitingClose = false;
      }
      onError() {
        XDefine$1.sop("onError");
        this.socket.close();
        this.bConnected = false;
      }

      Init1() {
        this.pls_ext.iOffset = 0;
        this.pls_ext.InsertInt(0);
        this.pls_ext.InsertInt(0);
        this.pls_ext.InsertInt(0);
        this.InQueue(500, this.pls_ext.iOffset, this.pls_ext.databuf);
      }

      InQueue(iid, ilen, data) {
        XDefine$1.sop("---send " + iid + " : " + ilen);
        this.pls.iOffset = 0;
        this.pls.InsertShort(iid);
        XDefine$1.arraycopy(data, 0, this.pls.databuf, this.pls.iOffset, ilen);
        return this.msg.InSendQueue(this.pls.iOffset + ilen, this.pls.databuf);
      }

      GetQueue() {
        return this.msg.OutRecvQueue();
      }

      CreatePackage() {
        var i = 0;
        if (XStat$1.gi().bGameing()) GmProtocol$1.gi().s_UploadMyPos();
        this.pls_package.iOffset = 10;
        if (this.msg.bStartMessage) {
          this.pls_package.InsertData(
            this.msg.startmessage.data,
            this.msg.startmessage.iSize
          );
          i++;
        } else if (this.msg.iSendTail - this.msg.iSendHead <= 0) {
          //没有头，并且没有身体
          this.Init1();
          //			GmPlay.sop("Init1");
        }
        while (this.msg.OutSendQueue()) {
          this.pls_package.InsertData(
            this.msg.sendout.data,
            this.msg.sendout.iSize
          );
          i++;
          if (this.pls_package.iOffset >= 1024) break;
        }
        if (this.msg.bEndMessage) {
          this.pls_package.InsertData(
            this.msg.endmessage.data,
            this.msg.endmessage.iSize
          );
          i++;
        }
        this.pls_package.databuf[this.pls_package.iOffset++] = "E".charCodeAt(0);
        this.pls_package.databuf[this.pls_package.iOffset++] = "O".charCodeAt(0);
        this.pls_package.databuf[this.pls_package.iOffset++] = "F".charCodeAt(0);
        this.pls_package.databuf[0] = "s".charCodeAt(0);
        this.pls_package.databuf[1] = "o".charCodeAt(0);
        this.pls_package.databuf[2] = "s".charCodeAt(0);
        this.pls_package.databuf[3] = 0;
        this.pls_package.databuf[4] = 0;
        this.pls_package.databuf[5] = 0;
        this.pls_package.databuf[6] = 0;
        this.pls_package.databuf[7] = i;
        this.pls_package.databuf[8] = (this.pls_package.iOffset >> 8) & 0xff;
        this.pls_package.databuf[9] = this.pls_package.iOffset & 0xff;
      }

      Sleep(t) {
        Thread.sleep(t);
      }
      send() {
        for (var i = 0; i < this.pls_package.iOffset; i++) {
          this.socket.output.writeByte(this.pls_package.databuf[i]);
        }
        this.socket.flush();

        return true;
      }
      recv() {
        var i;

        this.pls_package.iLength = 0;
        while (true) {
          // 			long t1,t2;
          // 			t1=XDefine.get_ms();
          i = m_is.read(
            this.pls_package.databuf,
            this.pls_package.iLength,
            1024 * 2
          );
          //  			t2=XDefine.get_ms()-t1;
          //  			if(t2>500)GmPlay.sop("555555555");
          //  			GmPlay.sop("recv size = "+i);
          if (i <= 0) break;
          this.pls_package.iLength += i;
          if (
            this.pls_package.databuf[this.pls_package.iLength - 3] == "E" &&
            this.pls_package.databuf[this.pls_package.iLength - 2] == "O" &&
            this.pls_package.databuf[this.pls_package.iLength - 1] == "F"
          ) {
            this.pls_package.iOffset = 0;
            return true;
          }
          if (iLastConnectDelay > 1000) {
            this.bReconnect = true;
            break;
          }
        }

        return false;
      }
      AnalyzePackage() {
        var mcount;
        var realen;
        var p = 0;

        if (this.pls_package.iLength < 13 || this.pls_package.iLength >= 4096)
          return -1;
        realen =
          ((this.pls_package.databuf[p + 8] << 8) & 0xff00) |
          (this.pls_package.databuf[p + 9] & 0xff);
        if (realen == 0) {
        }
        if (this.pls_package.iLength < realen || realen < 13 || realen >= 4096)
          return -1;
        mcount = this.pls_package.databuf[p + 7];
        //		for(int i=0;i<this.pls_package.iLength;i++)System.out.println("ii="+i+"="+this.pls_package.databuf[i]);

        this.pls_package.iOffset = 10;
        //		this.pls_package.iOpenType=1;
        while (mcount > 0) {
          this.pls_package.GetNextData();
          this.msg.InRecvQueue(this.pls_package.obi, this.pls_package.obd);
          mcount--;
        }

        return realen;
      }
      //	long lstart,lend;
      ResetSever(desturl) {
        if (this.sConnectUrl == desturl) return;
        this.sConnectUrl = desturl;
        XDefine$1.sop("ResetSever:" + desturl);
        this.msg.ResetQueue();
        this.bReconnect = true;
        this.socket.close();

        this.bWaitingClose = true;
      }
      NetLogic() {
        if (!this.bAllow) return;
        if (this.bWaitingClose) return;
        if (!this.bConnected) {
          if (this.bReconnect) {
            // this.socket=new Laya.Socket();
            // this.socket.on(Laya.Event.OPEN,this,this.onConnect);
            // this.socket.on(Laya.Event.MESSAGE,this,this.onReceive);
            // this.socket.on(Laya.Event.CLOSE,this,this.onClose);
            // this.socket.on(Laya.Event.ERROR,this,this.onError);

            this.socket.connectByUrl(this.sConnectUrl);
            XDefine$1.sop("do connect");
            this.bReconnect = false;
          } else if (this.iReTryCount < 10) {
            this.iReconnectDelay++;
            if (this.iReconnectDelay >= 60) {
              this.iReconnectDelay = 0;
              this.bReconnect = true;
              this.iReTryCount++;
            }
          }
          return;
        }

        if (this.iLastSendMs + 600 > XDefine$1.get_ms()) return;
        this.iLastSendMs = XDefine$1.get_ms();
        this.CreatePackage();
        this.send();

        //    		this.recv();

        //    		this.AnalyzePackage();
      }
      //    long ltime1,ltime2;
      //    boolean bWatching;
      //   int iNetBusy=0;
      NetBusy() {
        /*    	var i;
        	if(bWatching)
        	{
        		ltime2=(XDefine.get_ms()-ltime1)/1000;
        		if(ltime2<10)i= ltime2;
        		else i=10;
        		if(iNetBusy<i)iNetBusy=i;
        	}
    		return iNetBusy;*/
        return 3;
      }

      InitClient(ip, port) {
        //

        //       	SeverURL.delete(0, SeverURL.length).append("http://").append(ip).append(":").append(port);
        //           SeverURL.delete(0, SeverURL.length).append("socket://").append(ip).append(":").append(port);
        //            nc = (StreamConnection) Connector.open(SeverURL.toString());
        //            m_os = nc.openOutputStream();
        //            m_is = nc.openInputStream();
        //            System.out.println(SeverURL.toString());
        //            URL url = new URL(SeverURL.toString());
        //            System.out.println(SeverURL.toString());
        GmPlay$1.sop("connect:" + ip + ":" + port);
        sock = new Socket(ip, port);
        //            GmPlay.sop("connect ok");
        m_os = sock.getOutputStream();
        m_is = sock.getInputStream();
        //            nc = url.openConnection();
        //            m_os = nc.getOutputStream();
        //            m_is = nc.getInputStream();
        /*
            } catch (IOException e) {
                // TODO Auto-generated catch block
     //           e.printStackTrace();
                CloseClient();
                GmPlay.sop("Connect Failed !!!");
                iNetBusy=10;
                return false;
            }*/
        return true;
      }
      CloseClient() {
        if (m_os != null) m_os.close();
        m_os = null;
        if (m_is != null) m_is.close();
        m_is = null;
        if (sock != null) sock.close();
        sock = null;
      }
    }

    class GmProtocol$1 {

    	constructor( p, n)
    	{
    		this.pls=new PackageTools(1024*3);
    		this.xntf=n;
    		this.iEchoId=0;

    		this.pos1=0,this.pos2,this.pos3=0;
     		this.ox,this.oy;
    	}
    	GetBase( pls)
    	{
    		this.iSid=pls.GetNextInt();
    		this.iPid=pls.GetNextInt();
    		this.iUid=pls.GetNextInt();
    		this.xntf.msg.SetStartMessage(pls.iLength, pls.databuf);
    	}
    	set_Head()
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertShort(500);
    		this.pls.InsertInt(this.iSid);
    		this.pls.InsertInt(this.iPid);
    		this.pls.InsertInt(this.iUid);
    		this.pls.InsertInt(GameData$1.APKVersion);
    		this.pls.InsertByte(this.iEchoId);
    		this.xntf.msg.SetStartMessage(this.pls.iOffset, this.pls.databuf);
    	}

    	s_CheckVersion()
    	{
    //		for(int i=0;i<100;i++)GmPlay.sop("ffffffffffffffffffffffffff");
    		if(GmProtocol$1.sMid=="0")GmProtocol$1.sMid="";//设备号
    		this.pls.iOffset=0;
    		this.pls.InsertInt(GameData$1.APKVersion);
    		this.pls.InsertInt(XRecordFast.iClientID);
    		this.pls.InsertString(GmProtocol$1.sMid);
    		this.xntf.InQueue(510, this.pls.iOffset, this.pls.databuf);
    	}
    	s_CheckReply( i)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(i);
    		this.xntf.InQueue(512, this.pls.iOffset, this.pls.databuf);
    	}
    	s_Check2Reply( i)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(i);
    		this.xntf.InQueue(514, this.pls.iOffset, this.pls.databuf);
    	}
    	s_ClientExp( s)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertString(s);
    		this.xntf.InQueue(513, this.pls.iOffset, this.pls.databuf);
    	}
    	s_Regist( user, pass)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertString(user);
    		this.pls.InsertString(pass);
    		this.xntf.InQueue(1000, this.pls.iOffset, this.pls.databuf);
    	}
    	s_Login( user, pass)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertString(user);
    		this.pls.InsertString(pass);
    		this.xntf.InQueue(1001, this.pls.iOffset, this.pls.databuf);
    	}
    	s_Login_xyx(qudao,token,cs)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(qudao);
    		this.pls.InsertString(token);
    		this.pls.InsertString(cs);
    		this.xntf.InQueue(4002, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GetRoleList( sectorid, severid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(sectorid);
    		this.pls.InsertInt(severid);
    		this.xntf.InQueue(1006, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GetSeverList( sid)
    	{//区id
    		this.pls.iOffset=0;
    		this.pls.InsertByte(sid);
    		this.xntf.InQueue(1003, this.pls.iOffset, this.pls.databuf);
    	}
    	s_CreateRole( secId, sevId, name, sex, race)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(secId);
    		this.pls.InsertInt(sevId);
    		this.pls.InsertString(name);
    		this.pls.InsertByte(sex);
    		this.pls.InsertByte(race);
    		this.xntf.InQueue(1004, this.pls.iOffset, this.pls.databuf);
    	}
    	s_StartGame( rid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(rid);
    		this.pls.InsertInt(GameData$1.GV);
    		console.log('请求进入游戏：',rid,this.pls);
    		this.xntf.InQueue(1005, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GetRandName( sex)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(sex);
    		this.xntf.InQueue(1007, this.pls.iOffset, this.pls.databuf);
    	}
    ///////////////////////////////////////////////////////////////////
    	s_UpgradeMe( to)
    	{//升到to级
    		this.pls.iOffset=0;
    		this.pls.InsertShort(to);
    		this.xntf.InQueue(2001, this.pls.iOffset, this.pls.databuf);
    	}
    	s_AddPoint( tz, fl, ll, nl, mj)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertShort(tz);
    		this.pls.InsertShort(fl);
    		this.pls.InsertShort(ll);
    		this.pls.InsertShort(nl);
    		this.pls.InsertShort(mj);
    		this.xntf.InQueue(2002, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GetInSchool( sid)
    	{//school id
    		this.pls.iOffset=0;
    		this.pls.InsertByte(sid);
    		this.xntf.InQueue(2003, this.pls.iOffset, this.pls.databuf);
    	}
    	s_learnschoolskill( sid, point)
    	{//skill id
    		this.pls.iOffset=0;
    		this.pls.InsertInt(sid);
    		this.pls.InsertByte(point);
    		this.xntf.InQueue(2004, this.pls.iOffset, this.pls.databuf);
    	}
    	s_setflag( flagid, type, value)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(flagid);
    		this.pls.InsertInt(type);
    		this.pls.InsertInt(value);
    		this.xntf.InQueue(2005, this.pls.iOffset, this.pls.databuf);
    	}
    	s_getflag()
    	{
    		this.pls.iOffset=0;
    		this.xntf.InQueue(2006, this.pls.iOffset, this.pls.databuf);
    	}
    	s_proctitle( type, title)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertString(title);
    		this.xntf.InQueue(2007, this.pls.iOffset, this.pls.databuf);
    	}
    	s_changenick( nick)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertString(nick);
    		this.xntf.InQueue(2008, this.pls.iOffset, this.pls.databuf);
    	}
    	s_SetLock( type, cs, detail)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(cs);
    		this.pls.InsertString(detail);
    		this.xntf.InQueue(2009, this.pls.iOffset, this.pls.databuf);
    	}
    	//////////////////////////////////////////////////////////////////////
    	s_PublicChat( channel, s)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(channel);//当前所在频道
    		this.pls.InsertString(s);
    		for(var i=0;i<4;i++)
    		{
    			this.pls.InsertByte(PublicChat_Send.cext[i].type);
    			if(PublicChat_Send.cext[i].type>=100)continue;
    			if(PublicChat_Send.cext[i].type==0 || PublicChat_Send.cext[i].type==1 || PublicChat_Send.cext[i].type==4)
    			{//物品，宠物
    				this.pls.InsertInt(PublicChat_Send.cext[i].eid);
    				this.pls.InsertShort(PublicChat_Send.cext[i].tid);
    			}
    			else if(PublicChat_Send.cext[i].type==2)
    			{//语音
    				this.pls.InsertInt(PublicChat_Send.cext[i].eid);
    				this.pls.InsertString(PublicChat_Send.cext[i].name);
    				this.pls.InsertString(PublicChat_Send.cext[i].detail);
    			}
    		}
    		this.xntf.InQueue(2020, this.pls.iOffset, this.pls.databuf);
    	}
    	s_FriendOperate( type, rid, cs)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(rid);
    		this.pls.InsertInt(cs);
    		this.xntf.InQueue(2021, this.pls.iOffset, this.pls.databuf);
    	}
    	s_PrivateChat( rid, name, s)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(rid);//发给目标的ID
    		this.pls.InsertString(name);//发给目标的名字
    		this.pls.InsertString(s);
    		
    		for(var i=0;i<4;i++)
    		{
    			this.pls.InsertByte(PrivateChat_Send.cext[i].type);
    			if(PrivateChat_Send.cext[i].type>=100)continue;
    			if(PrivateChat_Send.cext[i].type==0 || PrivateChat_Send.cext[i].type==1 || PrivateChat_Send.cext[i].type==4)
    			{//物品，宠物
    				this.pls.InsertInt(PrivateChat_Send.cext[i].eid);
    				this.pls.InsertShort(PrivateChat_Send.cext[i].tid);
    			}
    			else if(PrivateChat_Send.cext[i].type==2)
    			{//语音
    				this.pls.InsertInt(PrivateChat_Send.cext[i].eid);
    				this.pls.InsertString(PrivateChat_Send.cext[i].name);
    				this.pls.InsertString(PrivateChat_Send.cext[i].detail);
    			}
    		}
    		this.xntf.InQueue(2022, this.pls.iOffset, this.pls.databuf);
    	}
    	s_ReviewPrivateChat( session)
    	{//看过了私聊消息,让服务器设置标记
    		this.pls.iOffset=0;
    		this.pls.InsertInt(session);
    		this.xntf.InQueue(2023, this.pls.iOffset, this.pls.databuf);
    	}
    	//////////////////////////
    	s_ChangeMapNew( type, dest)
    	{
    		GmPlay$1.gi().mapChanging.changed = true;
    		GmPlay$1.gi().mapChanging.type = type;
    		GmPlay$1.gi().mapChanging.dest = dest;
    		
    		this.pls.iOffset=0;
    		this.pls.InsertInt(type);//目标地图ID
    		this.pls.InsertInt(dest);
    		this.xntf.InQueue(2032, this.pls.iOffset, this.pls.databuf);
    		MapManager.gi().iMapChangeing=100;//变暗
    	}
    	s_ChangeMap( to, dx, dy)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(to);//目标地图ID
    		this.pls.InsertInt(dx);
    		this.pls.InsertInt(dy);
    		this.xntf.InQueue(2030, this.pls.iOffset, this.pls.databuf);
    		MapManager.gi().iMapChangeing=100;//变暗
    	}

    	s_UploadMyPos()
    	{
    		var i;
    		if(GmMe$1.me.iRid==0)return;
    		this.pls.iOffset=0;
    		this.pls.InsertInt(MapManager.gi().iVisualMapId);//当前所在地图ID
    		this.pls.InsertInt(Gameing.gameing.me.iX);
    		this.pls.InsertInt(Gameing.gameing.me.iY);
    		this.pls.InsertByte(GmMe$1.me.iFace8+GmMe$1.me.iFace4*10);
    		this.pos2=(XDefine$1.get_ms()%100000000);
    		this.pls.InsertInt(parseInt(this.pos2));
    //		this.pos2=(XDefine.get_ms()%100000);
    //		GmPlay.sop("this.pos2="+this.pos2);
    //		GmPlay.sop("new="+this.pos2+","+GmMe.me.iX+","+GmMe.me.iY);
    //		GmPlay.sop("this.pos2="+this.pos2+",,,,,len="+XDefine.llength(this.ox, this.oy, GmMe.me.iX, GmMe.me.iY)*10000);

    //		if(GmMe.me.iWeapLev>=0 && GmMe.me.iWeapLev<=160)this.pls.InsertByte(GmMe.me.iWeapLev/10);
    //		else this.pls.InsertByte(100);
    		
    		//前行路径
    		
    		if(MyTeam$1.bTeamLeader())
    		{//带着队伍,更新队伍成员位置
    			this.pls.InsertByte(1);
    			for(i=1;i<5;i++)
    			{
    				if(MyTeam$1.iTeamRid[i]!=0)
    				{//
    					var nr=Gameing.gameing.findnrs(MyTeam$1.iTeamRid[i]);
    					if(nr!=null)
    					{
    						this.pls.InsertInt(nr.iRid);
    						this.pls.InsertShort(nr.iDx);
    						this.pls.InsertShort(nr.iDy);
    						this.pls.InsertByte(nr.iDFaceTo);
    //						GmPlay.sop("x="+nr.iDx+",y="+nr.iDy+",f="+nr.iDFaceTo);
    					}
    				}
    			}
    			this.pls.InsertInt(0);
    		}
    		else this.pls.InsertByte(0);
    		
    		if(this.pos1==0)this.pos1=XDefine$1.get_ms();
    		else
    		{
    			this.pos2=XDefine$1.get_ms()-this.pos1;
    			
    //			GmPlay.sop("speed="+XDefine.llength(this.ox, this.oy, GmMe.me.iX, GmMe.me.iY)*10000/this.pos2);
    			
    			//距离除以时间差
    			this.pos1=XDefine$1.get_ms();

    			this.ox=GmMe$1.me.iX;
    			this.oy=GmMe$1.me.iY;
    		}
    		this.xntf.InQueue(2031, this.pls.iOffset, this.pls.databuf);
    	}
    	s_TeamOperate( type, rid, did)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(rid);
    		this.pls.InsertInt(did);
    //		System.
    //		Log.e("SOP","jh="+rid+","+did);
    		this.xntf.InQueue(2035, this.pls.iOffset, this.pls.databuf);
    	}
    	s_TeamOperateEx( type, rid, did, lev1, lev2)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(rid);
    		this.pls.InsertInt(did);
    		this.pls.InsertInt(lev1);
    		this.pls.InsertInt(lev2);
    		this.xntf.InQueue(2035, this.pls.iOffset, this.pls.databuf);
    	}
    	s_TeamOperateEx( type, rid, did, s)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(rid);
    		this.pls.InsertInt(did);
    		this.pls.InsertString(s);
    		this.xntf.InQueue(2035, this.pls.iOffset, this.pls.databuf);
    	}
    	s_ChangeZhen( zhen)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(zhen);
    		this.xntf.InQueue(2036, this.pls.iOffset, this.pls.databuf);
    	}
    	///////////////////////////////////////
    	s_SwapEquipment( swapto)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(swapto);
    		this.xntf.InQueue(2044, this.pls.iOffset, this.pls.databuf);
    	}
    	s_MoveGoods( gid, oid, pos, dgid, doid, dpos)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(gid);
    		this.pls.InsertByte(oid);
    		this.pls.InsertByte(pos);
    		this.pls.InsertInt(dgid);
    		this.pls.InsertByte(doid);
    		this.pls.InsertByte(dpos);
    		this.xntf.InQueue(2040, this.pls.iOffset, this.pls.databuf);
    	}
    	s_DropGoods( gid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(gid);
    		this.xntf.InQueue(2041, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GiveGoods( type, drid, gid, count)
    	{//0给钱，1给物品
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(drid);
    		this.pls.InsertInt(gid);
    		this.pls.InsertInt(count);
    		this.xntf.InQueue(2042, this.pls.iOffset, this.pls.databuf);
    	}
    	s_StartSell( type, point, price, sn)
    	{//type=0开始摆摊，1上架物品，2下架物品，3上架宠物，4下架宠物，5结束摆摊，6修改摊名
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(point);
    		this.pls.InsertInt(price);
    		this.pls.InsertString(sn);
    		this.xntf.InQueue(2043, this.pls.iOffset, this.pls.databuf);
    	}
    	s_StartBuy( drid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(drid);
    		this.xntf.InQueue(2045, this.pls.iOffset, this.pls.databuf);
    	}
    	s_MyBuy( type, drid, gid, count)
    	{//type=0买物品，type=1买宠物
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(drid);
    		this.pls.InsertInt(gid);
    		this.pls.InsertInt(count);
    		this.xntf.InQueue(2046,this.pls.iOffset, this.pls.databuf);
    	}
    	s_UseGoods( gid, count, msg)
    	{//非战斗使用物品
    		this.pls.iOffset=0;
    		this.pls.InsertInt(gid);
    		this.pls.InsertByte(count);
    		this.pls.InsertString(msg);
    		this.xntf.InQueue(2047,this.pls.iOffset, this.pls.databuf);
    	}
    	s_RecoverGoods( gid)
    	{//回收物品
    		this.pls.iOffset=0;
    		this.pls.InsertInt(gid);
    		this.xntf.InQueue(2048,this.pls.iOffset, this.pls.databuf);
    	}
    	s_NewShopBuy( shopid, pos, tid, count)
    	{//在npc商店购买
    		this.pls.iOffset=0;
    		this.pls.InsertInt(shopid);
    		this.pls.InsertInt(pos);
    		this.pls.InsertInt(tid);
    		this.pls.InsertInt(count);
    		this.xntf.InQueue(2049, this.pls.iOffset, this.pls.databuf);
    	}
    	////////////////////////////////////////
    	s_ChangePetName( pid, name)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(pid);
    		this.pls.InsertString(name);
    		this.xntf.InQueue(2050, this.pls.iOffset, this.pls.databuf);
    	}
    	s_ChangeFightPet( pid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(pid);
    		this.xntf.InQueue(2051, this.pls.iOffset, this.pls.databuf);
    	}
    	s_ChangeFollowPet( pid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(pid);
    		this.xntf.InQueue(2057, this.pls.iOffset, this.pls.databuf);
    	}
    	s_PetJJ( pid, type, cs)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(pid);
    		this.pls.InsertInt(type);
    		this.pls.InsertInt(cs);
    		this.xntf.InQueue(2058, this.pls.iOffset, this.pls.databuf);
    	}
    	s_DropPet( pid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(pid);
    		this.xntf.InQueue(2052, this.pls.iOffset, this.pls.databuf);
    	}
    	s_AddPetPoint( pid, tz, fl, ll, nl, mj)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(pid);
    		this.pls.InsertShort(tz);
    		this.pls.InsertShort(fl);
    		this.pls.InsertShort(ll);
    		this.pls.InsertShort(nl);
    		this.pls.InsertShort(mj);
    		this.xntf.InQueue(2053, this.pls.iOffset, this.pls.databuf);
    	}
    	s_LearnPetSkill( pid, gid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(pid);
    		this.pls.InsertInt(gid);
    		this.xntf.InQueue(2054, this.pls.iOffset, this.pls.databuf);
    	}
    	s_WashPet( pid, gid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(pid);
    		this.pls.InsertInt(gid);
    		this.xntf.InQueue(2055, this.pls.iOffset, this.pls.databuf);
    	}
    	s_OpenStore( type, order, iid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(order);
    		this.pls.InsertInt(iid);
    		this.xntf.InQueue(2056, this.pls.iOffset, this.pls.databuf);
    	}
    	/////////////////////////////////////////////////////////
    	s_SeverSelect( mtype, stype, cs)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(mtype);
    		this.pls.InsertByte(stype);
    		this.pls.InsertInt(cs);
    		this.xntf.InQueue(2061, this.pls.iOffset, this.pls.databuf);
    	}
    	s_SevConfirm( cmd)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertString(cmd);
    		this.xntf.InQueue(2068, this.pls.iOffset, this.pls.databuf);
    	}
    	s_NpcReply( npcid, sid, order)
    	{//回答npc的问题
    		this.pls.iOffset=0;
    		this.pls.InsertInt(npcid);
    		this.pls.InsertInt(sid);
    		this.pls.InsertByte(order);
    		this.xntf.InQueue(2062, this.pls.iOffset, this.pls.databuf);
    	}
    	s_NpcCmd( fromsev, npcid, sid, cmd, cs2, cs3, cs4, cs5)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertString(fromsev);
    		this.pls.InsertString(npcid);
    		this.pls.InsertString(sid);
    		this.pls.InsertString(cmd);
    		
    		this.pls.InsertString(cs2);
    		this.pls.InsertString(cs3);
    		this.pls.InsertString(cs4);
    		this.pls.InsertString(cs5);

    		this.xntf.InQueue(2063, this.pls.iOffset, this.pls.databuf);
    	}
    	s_NpcShop( shopid)
    	{//打开npc商店
    		console.log('打开商店：',shopid);
    		//return;
    		this.pls.iOffset=0;
    		this.pls.InsertInt(shopid);
    		this.xntf.InQueue(2064, this.pls.iOffset, this.pls.databuf);
    	}
    	s_NpcShopBuy( shopid, gtype, count)
    	{//在npc商店购买
    		this.pls.iOffset=0;
    		this.pls.InsertInt(shopid);
    		this.pls.InsertInt(gtype);
    		this.pls.InsertInt(count);
    		this.xntf.InQueue(2065, this.pls.iOffset, this.pls.databuf);
    	}
    	s_IngotMall( cs1, cs2)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(cs1);
    		this.pls.InsertInt(cs2);
    		this.xntf.InQueue(2066, this.pls.iOffset, this.pls.databuf);
    	}
    	s_IngotMallBuy( shopid, gtype, count)
    	{//在npc商店购买
    		this.pls.iOffset=0;
    		this.pls.InsertInt(shopid);
    		this.pls.InsertInt(gtype);
    		this.pls.InsertInt(count);
    		this.xntf.InQueue(2067, this.pls.iOffset, this.pls.databuf);
    	}
    	////////////////////////////////////////////
    	s_GetSchoolMission( sid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(sid);
    		this.xntf.InQueue(2070, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GetMissionDetail( mid, type)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(mid);
    		this.pls.InsertByte(type);
    		this.xntf.InQueue(2071, this.pls.iOffset, this.pls.databuf);
    	}
    	s_FinishMission( type, mpoint, extgid, extpid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(mpoint);
    		this.pls.InsertInt(extgid);
    		this.pls.InsertInt(extpid);
    		this.xntf.InQueue(2072, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GetMission( type, mid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(mid);
    		this.xntf.InQueue(2073, this.pls.iOffset, this.pls.databuf);
    	}
    	s_CancelMission( mid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(mid);
    		this.xntf.InQueue(2074, this.pls.iOffset, this.pls.databuf);
    	}
    	////////////////////////////////////////////帮派
    	s_CreateGov( name, detail)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertString(name);
    		this.pls.InsertString(detail);
    		this.xntf.InQueue(2080, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GetGovList( page)
    	{//获取帮派列表,页数
    		this.pls.iOffset=0;
    		this.pls.InsertByte(page);
    		this.xntf.InQueue(2081, this.pls.iOffset, this.pls.databuf);
    	}
    	s_ApplyForGov( govid)
    	{//申请加入帮派
    		this.pls.iOffset=0;
    		this.pls.InsertInt(govid);
    		this.xntf.InQueue(2082, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GetBaseGovData( dtype, cs)
    	{//获取基本帮派资料
    		this.pls.iOffset=0;
    		this.pls.InsertByte(dtype);
    		this.pls.InsertInt(cs);
    		this.xntf.InQueue(2083, this.pls.iOffset, this.pls.databuf);
    	}
    	s_OperateGovMember( rid, type, cs)
    	{//对帮派成员操作，设置职位，踢出，允许加入
    		this.pls.iOffset=0;
    		this.pls.InsertInt(rid);
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(cs);
    		this.xntf.InQueue(2084, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GetIntoGov( govid)
    	{//进入帮派
    		this.pls.iOffset=0;
    		this.pls.InsertInt(govid);
    		this.xntf.InQueue(2085, this.pls.iOffset, this.pls.databuf);
    		MapManager.gi().iMapChangeing=100;//变暗
    	}
    	s_HireWorker( type, lev, time)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertByte(lev);
    		this.pls.InsertByte(time);
    		this.xntf.InQueue(2086, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GovSet( type, cs)
    	{//帮主对帮派设置
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(cs);
    		this.xntf.InQueue(2087, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GovOperateFrame( type)
    	{//打开帮派操作页面
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.xntf.InQueue(2088, this.pls.iOffset, this.pls.databuf);
    	}
    	s_LearnGovSkill( sid, point)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(sid);
    		this.pls.InsertInt(point);
    		this.xntf.InQueue(2089, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GovXiu( sid, point)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(sid);
    		this.pls.InsertInt(point);
    		this.xntf.InQueue(2090, this.pls.iOffset, this.pls.databuf);
    	}
    	s_LeaveGov()
    	{
    		this.pls.iOffset=0;
    		this.xntf.InQueue(2091, this.pls.iOffset, this.pls.databuf);
    	}
    	s_UseSkill( skillid, cs1, cs2, cs3, cs4, cs5, cs6)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(skillid);
    		this.pls.InsertInt(cs1);
    		this.pls.InsertInt(cs2);
    		this.pls.InsertInt(cs3);
    		this.pls.InsertInt(cs4);
    		this.pls.InsertInt(cs5);
    		this.pls.InsertInt(cs6);
    		this.xntf.InQueue(2092, this.pls.iOffset, this.pls.databuf);
    	}
    	s_WatchOn( type, iid, flag, name)
    	{//类型0角色，1物品，2宠物
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(iid);
    		this.pls.InsertInt(flag);
    		this.pls.InsertString(name);
    		this.xntf.InQueue(2093, this.pls.iOffset, this.pls.databuf);
    	}
    	s_NewGovOperate( type, cs1, cs2, cs3, cs4, detail)
    	{//类型0，1cs，2cs，3detail
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(cs1);
    		this.pls.InsertInt(cs2);
    		this.pls.InsertInt(cs3);
    		this.pls.InsertInt(cs4);
    		this.pls.InsertString(detail);
    		this.xntf.InQueue(2095, this.pls.iOffset, this.pls.databuf);
    		if(type==4)MapManager.gi().iMapChangeing=100;
    	}
    	//////////////////////////////////////////
    	s_ChangeFightMounts( mid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(mid);
    		this.xntf.InQueue(2101, this.pls.iOffset, this.pls.databuf);
    	}
    	s_DropMounts( mid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(mid);
    		this.xntf.InQueue(2102, this.pls.iOffset, this.pls.databuf);
    	}
    	s_TrainMounts( mid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(mid);
    		this.xntf.InQueue(2103, this.pls.iOffset, this.pls.databuf);
    	}
    	s_AddMountsPoint( mid, tz, fl, ll, nl, mj)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(mid);
    		this.pls.InsertShort(tz);
    		this.pls.InsertShort(fl);
    		this.pls.InsertShort(ll);
    		this.pls.InsertShort(nl);
    		this.pls.InsertShort(mj);
    		this.xntf.InQueue(2104, this.pls.iOffset, this.pls.databuf);
    	}
    	s_FeedMounts( mid, gid, tid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(mid);
    		this.pls.InsertInt(gid);
    		this.pls.InsertInt(tid);
    		this.xntf.InQueue(2105, this.pls.iOffset, this.pls.databuf);
    	}
    	s_JJMounts( mid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(mid);
    		this.xntf.InQueue(2106, this.pls.iOffset, this.pls.databuf);
    	}
    	//////////////////////////////////////////
    	s_FightOperate( rop, cmd)
    	{//发送战斗操作
    		this.pls.iOffset=0;
    		this.pls.InsertByte(rop);//人物还是宠物?
    		this.pls.InsertByte(cmd[0]);//操作类型
    		this.pls.InsertInt(cmd[1]);//操作参数
    		this.pls.InsertInt(cmd[2]);//操作目标
    		this.xntf.InQueue(2200, this.pls.iOffset, this.pls.databuf);
    	}
    	s_PK( rid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(rid);
    		this.xntf.InQueue(2201, this.pls.iOffset, this.pls.databuf);
    	}
    	s_WatchFight( type, rid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);//0进入观战，1离开观战
    		this.pls.InsertInt(rid);
    		this.xntf.InQueue(2202, this.pls.iOffset, this.pls.databuf);
    	}
    	s_Trade( type, g1, c1, g2, c2, g3, c3, p1, p2, p3, money)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(g1);
    		this.pls.InsertInt(c1);
    		this.pls.InsertInt(g2);
    		this.pls.InsertInt(c2);
    		this.pls.InsertInt(g3);
    		this.pls.InsertInt(c3);
    		this.pls.InsertInt(p1);
    		this.pls.InsertInt(p2);
    		this.pls.InsertInt(p3);
    		this.pls.InsertInt(money);
    		this.xntf.InQueue(2010, this.pls.iOffset, this.pls.databuf);
    	}
    	s_SeverEvent( mtype, stype, cs1, cs2, cs3)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(mtype);
    		this.pls.InsertByte(stype);
    		this.pls.InsertInt(cs1);
    		this.pls.InsertInt(cs2);
    		this.pls.InsertInt(cs3);
    		this.xntf.InQueue(2100, this.pls.iOffset, this.pls.databuf);
    	}
    	////////////////////
    	s_NoviceHelp( type, cs1, cs2, s)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(cs1);
    		this.pls.InsertInt(cs2);
    		this.pls.InsertString(s);
    		this.xntf.InQueue(2300, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GetCodeReward( type, s)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertString(s);
    		this.xntf.InQueue(2301, this.pls.iOffset, this.pls.databuf);
    	}
    	s_Pay( qudao, oid, amount, extid, extdetail)
    	{//充值订单号->服务器:渠道ID，订单号，金额，extid,extdetail
    		this.pls.iOffset=0;
    		this.pls.InsertInt(GameVersion$1.QUDAO);
    		this.pls.InsertString(oid);
    		this.pls.InsertInt(amount);
    		this.pls.InsertInt(extid);
    		this.pls.InsertString(extdetail);
    		this.xntf.InQueue(2302, this.pls.iOffset, this.pls.databuf);
    	}
    	s_PromptActivity( type, cs)
    	{//活跃度请求
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(cs);
    		this.xntf.InQueue(2304, this.pls.iOffset, this.pls.databuf);
    	}
    	s_FuBen( type, cs1)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(cs1);
    		this.xntf.InQueue(2400, this.pls.iOffset, this.pls.databuf);
    	}
    	s_CreateFuBen( fbid, detail)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(fbid);
    		this.pls.InsertString(detail);
    		this.xntf.InQueue(2401, this.pls.iOffset, this.pls.databuf);
    	}
    	s_ApplyFuBen( fbid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(fbid);
    		this.xntf.InQueue(2402, this.pls.iOffset, this.pls.databuf);
    	}
    	s_ManageFuBen( type, cs1, cs2)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(type);
    		this.pls.InsertInt(cs1);
    		this.pls.InsertInt(cs2);
    		this.xntf.InQueue(2403, this.pls.iOffset, this.pls.databuf);
    	}
    	s_FuBenMail( cs)
    	{//获取副本积分兑换
    		this.pls.iOffset=0;
    		this.pls.InsertInt(cs);
    		this.xntf.InQueue(2408, this.pls.iOffset, this.pls.databuf);
    	}
    	s_FubenMallBuy( flag, tid, price)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(flag);
    		this.pls.InsertInt(tid);
    		this.pls.InsertInt(price);
    		this.xntf.InQueue(2409, this.pls.iOffset, this.pls.databuf);
    	}
    	s_LandOperate( type, cs1, cs2, cs3)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(cs1);
    		this.pls.InsertInt(cs2);
    		this.pls.InsertInt(cs3);
    		this.xntf.InQueue(2150, this.pls.iOffset, this.pls.databuf);
    	}
    	/////////////////////////////////////////战队
    	s_CreateFT( name, detail)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertString(name);
    		this.pls.InsertString(detail);
    		this.xntf.InQueue(2500, this.pls.iOffset, this.pls.databuf);
    	}
    	s_ApplyFT( fid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(fid);
    		this.xntf.InQueue(2502, this.pls.iOffset, this.pls.databuf);
    	}
    	s_GetApply( page)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(page);
    		this.xntf.InQueue(2503, this.pls.iOffset, this.pls.databuf);
    	}
    	s_FTAgree( type, rid)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(rid);
    		this.xntf.InQueue(2504, this.pls.iOffset, this.pls.databuf);
    	}
    	s_FTChallenge( type, cs, cs2)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(cs);
    		this.pls.InsertInt(cs2);
    		this.xntf.InQueue(2505, this.pls.iOffset, this.pls.databuf);
    	}
    	s_FTOperate( type, cs1, cs2)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertByte(type);
    		this.pls.InsertInt(cs1);
    		this.pls.InsertInt(cs2);
    		this.xntf.InQueue(2506, this.pls.iOffset, this.pls.databuf);
    	}
    	//商会
    	s_CreateShop( name, type)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertString(name);
    		this.pls.InsertInt(type);
    		this.xntf.InQueue(2600, this.pls.iOffset, this.pls.databuf);
    	}
    	//活动
    	s_AfternoooQuestion( type, cs1, cs2)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(type);
    		this.pls.InsertInt(cs1);
    		this.pls.InsertInt(cs2);
    		this.xntf.InQueue(2700, this.pls.iOffset, this.pls.databuf);
    	}
    	//
    	s_ExtendCmd( cmd, cs1, cs2, cs3, cs4, cs5, cs6, cs7)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertString(cmd);
    		this.pls.InsertString(cs1);
    		this.pls.InsertString(cs2);
    		this.pls.InsertString(cs3);
    		this.pls.InsertString(cs4);
    		this.pls.InsertString(cs5);
    		this.pls.InsertString(cs6);
    		this.pls.InsertString(cs7);
    		this.xntf.InQueue(2800, this.pls.iOffset, this.pls.databuf);
    	}
    	xms_send( cmd, cs1, cs2, cs3, cs4, cs5, cs6)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertString(cmd);
    		this.pls.InsertString(cs1);
    		this.pls.InsertString(cs2);
    		this.pls.InsertString(cs3);
    		this.pls.InsertString(cs4);
    		this.pls.InsertString(cs5);
    		this.pls.InsertString(cs6);
    		this.xntf.InQueue(5000, this.pls.iOffset, this.pls.databuf);
    	}
    	s_LeaderBoardFresh( type, cs1, cs2)
    	{
    		this.pls.iOffset=0;
    		this.pls.InsertInt(type);
    		this.pls.InsertInt(cs1);
    		this.pls.InsertInt(cs2);
    		this.xntf.InQueue(2910, this.pls.iOffset, this.pls.databuf);
    	}
    }
    GmProtocol$1.sMid="0";
    GmProtocol$1.pt=null;
    GmProtocol$1.gi=function()
    {
    	if(GmProtocol$1.pt==null)GmProtocol$1.pt=new GmProtocol$1(null,GmPlay$1.xntf);
    	return GmProtocol$1.pt;
    };

    class SystemOperate extends BaseClass{
    	
    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;

    		SystemOperate.iW=980;
    		SystemOperate.iH=640;
    		SystemOperate.iX=(GmConfig$1.SCRW-SystemOperate.iW)/2;
    		SystemOperate.iY=(GmConfig$1.SCRH-SystemOperate.iH)/2;

    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(SystemOperate.iX+SystemOperate.iW-35, SystemOperate.iY-25, 60, 60);
    		
    		this.btn_page=new Array(3);//
    		for(i=0;i<3;i++)
    		{//145,56
    			this.btn_page[i]=new XButtonEx2$1(GmPlay$1.xani_nui2); 
    			this.btn_page[i].InitButton("按钮2");
    		}
    		this.btn_page[0].sName="显示";
    		this.btn_page[1].sName="声音";
    		this.btn_page[2].sName="其他";
    		this.iPage=0;

    		this.chk_show=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.chk_show[i]=new XCheckBox(GmPlay$1.xani_nui3);
    			this.chk_show[i].InitBox("统一勾选");
    			this.chk_show[i].Move(SystemOperate.iX+SystemOperate.iW-25-50-60, SystemOperate.iY+25+55*i, 50, 50);
    			this.chk_show[i].bTrue=true;
    //			if(i>0)chk_switch[i].bTrue=SingleChatFrame.chat.bMessageSwitch[i-1];
    		}
    		this.chk_show[0].sDetail="显示人物";
    		this.chk_show[1].sDetail="显示坐骑";
    		this.chk_show[2].sDetail="显示武器";
    		this.chk_show[3].sDetail="显示换色";
    		this.chk_show[4].sDetail="显示跟随宠物";
    		this.chk_show[5].sDetail="显示名字";
    		this.chk_show[6].sDetail="显示称谓";
    		this.chk_show[7].sDetail="显示摊位";
    		this.chk_show[0].bTrue=SystemOperate.bShowRole;
    		this.chk_show[1].bTrue=SystemOperate.bShowMount;
    		this.chk_show[2].bTrue=SystemOperate.bShowWeapon;
    		this.chk_show[3].bTrue=SystemOperate.bShowColor;
    		this.chk_show[4].bTrue=SystemOperate.bShowFollow;
    		this.chk_show[5].bTrue=SystemOperate.bShowName;
    		this.chk_show[6].bTrue=SystemOperate.bShowTitle;
    		this.chk_show[7].bTrue=SystemOperate.bShowSell;

    		this.btn_resetrate=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_resetrate.InitButton("按钮1_110");
    		this.btn_resetrate.sName="重置";
    //		btn_samerate=new XCheckBox(GmPlay.xani_nui3);
    //		btn_samerate.InitBox("统一勾选");
    //		btn_samerate.sDetail="等比拉伸";
    //		if(SystemOperate.iSameRate==1)btn_samerate.bTrue=true;
    //		else btn_samerate.bTrue=false;
    		this.adj_ls=new XAdjust(GmPlay$1.xani_nui3);
    		this.adj_ls.InitAdjust("左右调节");
    		this.adj_ls.SetPos(0, 400, SystemOperate.iScreenLS);

    		this.btn_pq=new Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.btn_pq[i]=new XCheckBox(GmPlay$1.xani_nui3);
    			this.btn_pq[i].InitBox("圆形选中");
    			this.btn_pq[i].bTrue=false;
    		}
    		XDefine$1.sop("SystemOperate.iPictureQuality"+SystemOperate.iPictureQuality);
    		XDefine$1.sop("SystemOperate.iMusic"+SystemOperate.iMusic);
    		this.btn_pq[SystemOperate.iPictureQuality].bTrue=true;
    		this.btn_pq[0].sDetail="高";
    		this.btn_pq[1].sDetail="中";
    		this.btn_pq[2].sDetail="低";
    		this.adj_pb=new XAdjust(GmPlay$1.xani_nui3);
    		this.adj_pb.InitAdjust("左右调节");
    		this.adj_pb.SetPos(0,50,SystemOperate.iPictureBuffer);
    		this.adj_nrc=new XAdjust(GmPlay$1.xani_nui3);
    		this.adj_nrc.InitAdjust("左右调节");
    		this.adj_nrc.SetPos(10, 50, SystemOperate.iNearRoleCount);

    		this.chk_music=new XCheckBox(GmPlay$1.xani_nui3);
    		this.chk_music.InitBox("统一勾选");
    		if(SystemOperate.iMusic==1)this.chk_music.bTrue=true;
    		else this.chk_music.bTrue=false;
    		this.chk_music.sDetail="音乐";
    		
    		this.chk_sound=new XCheckBox(GmPlay$1.xani_nui3);
    		this.chk_sound.InitBox("统一勾选");
    		if(SystemOperate.iSound==1)this.chk_sound.bTrue=true;
    		else this.chk_sound.bTrue=false;
    		this.chk_sound.sDetail="音效";
    		//////////////////////////////////////////////////
    		this.chk_wheel=new XCheckBox(GmPlay$1.xani_nui3);
    		this.chk_wheel.InitBox("统一勾选");
    		if(SystemOperate.iWheel==0)this.chk_wheel.bTrue=true;
    		else this.chk_wheel.bTrue=false;
    		this.chk_wheel.sDetail="方向盘控制";
    		
    		this.chk_exthelp=new XCheckBox(GmPlay$1.xani_nui3);
    		this.chk_exthelp.InitBox("统一勾选");
    		if(XRecordFast.iExtHelp==1)this.chk_exthelp.bTrue=true;
    		else this.chk_exthelp.bTrue=false;
    		this.chk_exthelp.sDetail="开启新手引导";
    		
    		SystemOperate.bAllowTeam=(GmMe$1.me.iFlag[2]&256)>0;
    		SystemOperate.bAllowGoods=(GmMe$1.me.iFlag[2]&512)>0;
    		SystemOperate.bAllowTrade=(GmMe$1.me.iFlag[2]&1024)>0;
    		SystemOperate.bAllowChat=(GmMe$1.me.iFlag[2]&128)>0;
    		
    		this.chk_allowteam=new XCheckBox(GmPlay$1.xani_nui3);
    		this.chk_allowteam.InitBox("统一勾选");
    		this.chk_allowteam.bTrue=SystemOperate.bAllowTeam;
    		this.chk_allowteam.sDetail="拒绝其他玩家发起的组队邀请";//组队邀请
    		
    		this.chk_allowgoods=new XCheckBox(GmPlay$1.xani_nui3);
    		this.chk_allowgoods.InitBox("统一勾选");
    		this.chk_allowgoods.bTrue=SystemOperate.bAllowGoods;
    		this.chk_allowgoods.sDetail="拒绝接受其他玩家给予的物品";//接受物品
    		
    		this.chk_allowtrade=new XCheckBox(GmPlay$1.xani_nui3);
    		this.chk_allowtrade.InitBox("统一勾选");
    		this.chk_allowtrade.bTrue=SystemOperate.bAllowTrade;
    		this.chk_allowtrade.sDetail="屏蔽其他玩家发起的交易";//交易
    		
    		this.chk_allowchat=new XCheckBox(GmPlay$1.xani_nui3);
    		this.chk_allowchat.InitBox("统一勾选");
    		this.chk_allowchat.bTrue=SystemOperate.bAllowChat;
    		this.chk_allowchat.sDetail="屏蔽陌生人的私聊信息";//陌生人聊天

    		// this.btn_checkres=new XButtonEx2(GmPlay.xani_button);
    		// this.btn_checkres.InitButton("普通按钮200_55");
    		// this.btn_checkres.sName="客户端检测";

    //		btn_pb[0].sName="";
    //		btn_pb[1].sName="";
    //		btn_pb[2].sName="";
    //		this.btn_pq[0].sName="";
    //		this.btn_pq[1].sName="";
    //		this.btn_pq[2].sName="";

    //		GmPlay.sop1("SystemOperate.iScreenLS="+SystemOperate.iScreenLS);
    		
    		// this.btn_logout=new XButtonEx2(GmPlay.xani_button);
    		// this.btn_logout.InitButton("1号按钮150_60");
    		// this.btn_logout.sName="注销登录";
    	}
    	ResetAnima()
    	{
    		var j;
    		for (j = 0; j < Gameing.iNearMax; j++)
    		{
    			if (Gameing.gameing.nrs[j].bUseing)Gameing.gameing.nrs[j].bfc8=true;
    		}
    		GmMe$1.me.bfc8=true;
    	}
    	Draw()
    	{
    		var i,offy;
    //		iW=800;
    //		SystemOperate.iH=480;
    		SystemOperate.iX=(GmConfig$1.SCRW-SystemOperate.iW)/2;
    		SystemOperate.iY=(GmConfig$1.SCRH-SystemOperate.iH)/2;
    	
    		//12.19   画左按钮图标、文字、以及 基本大框
    		DrawMode$1.new_baseframe2(SystemOperate.iX,SystemOperate.iY,SystemOperate.iW,SystemOperate.iH,"系","统");
    		
    		this.btn_close.Draw();
    		
    		var offx,w,h;
    		offx=SystemOperate.iX+30;
    		offy=SystemOperate.iY+30;
    		w=145+40;
    		h=SystemOperate.iH-60;
    		DrawMode$1.new_framein(offx, offy, w, h);
    		for(i=0;i<3;i++)
    		{
    			if(this.iPage==i)
    			{
    				this.btn_page[i].bMouseDown=true;
    				this.btn_page[i].bMouseIn=true;
    			}
    			this.btn_page[i].Move(offx+20, offy+20+i*(56+20), 145, 56);
    			this.btn_page[i].Draw();
    		}

    		offx+=w+20;
    		w=SystemOperate.iW-60-20-w;
    		DrawMode$1.new_framein(offx, offy, w, h);
    		if(this.iPage==0)
    		{//显示
    			offx+=20;
    			offy+=20;
    //			DrawMode.new_frameon(offx, offy, w-40, 30+50*3+20, 0);
    			offx+=15;
    			offy+=15;
    			this.chk_show[0].Move(offx, offy, 50, 50);
    			this.chk_show[1].Move(offx+200, offy, 50, 50);
    			this.chk_show[2].Move(offx+400, offy, 50, 50);
    			
    			offy+=60;
    			this.chk_show[3].Move(offx+200, offy, 50, 50);
    			this.chk_show[4].Move(offx+400, offy, 50, 50);
    			
    			offy+=60;
    			this.chk_show[5].Move(offx, offy, 50, 50);
    			this.chk_show[6].Move(offx+200, offy, 50, 50);
    			this.chk_show[7].Move(offx+400, offy, 50, 50);
    			for(i=0;i<8;i++)
    			{
    				this.chk_show[i].Draw();
    			}

    			if(SystemOperate.bShowRole!=this.chk_show[0].bTrue)
    			{
    				SystemOperate.bShowRole=this.chk_show[0].bTrue;
    				this.ResetAnima();
    			}
    			if(SystemOperate.bShowMount!=this.chk_show[1].bTrue)
    			{
    				SystemOperate.bShowMount=this.chk_show[1].bTrue;
    				this.ResetAnima();
    			}
    			if(SystemOperate.bShowWeapon!=this.chk_show[2].bTrue)
    			{
    				SystemOperate.bShowWeapon=this.chk_show[2].bTrue;
    				this.ResetAnima();
    			}
    			if(SystemOperate.bShowColor!=this.chk_show[3].bTrue)
    			{
    				SystemOperate.bShowColor=this.chk_show[3].bTrue;
    				this.ResetAnima();
    			}
    			if(SystemOperate.bShowFollow!=this.chk_show[4].bTrue)
    			{
    				SystemOperate.bShowFollow=this.chk_show[4].bTrue;
    				this.ResetAnima();
    			}
    			if(SystemOperate.bShowName!=this.chk_show[5].bTrue)
    			{
    				SystemOperate.bShowName=this.chk_show[5].bTrue;
    				this.ResetAnima();
    			}
    			if(SystemOperate.bShowTitle!=this.chk_show[6].bTrue)
    			{
    				SystemOperate.bShowTitle=this.chk_show[6].bTrue;
    				this.ResetAnima();
    			}
    			if(SystemOperate.bShowSell!=this.chk_show[7].bTrue)
    			{
    				SystemOperate.bShowSell=this.chk_show[7].bTrue;
    				this.ResetAnima();
    			}
    			
    			offx-=15;
    			offy+=50+15+10;

    			offx+=15;
    //cx			offy+=15;
    //cx			M3DFast.gi().DrawTextEx(offx,offy+10, "画面拉伸", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    			SystemOperate.iSameRate=0;

    //cx			this.btn_resetrate.Move(offx+400,offy-1, 110, 52);
    //cx			this.btn_resetrate.Draw();
    			
    //cx			offy+=50+20;
    //cx			M3DFast.gi().DrawTextEx(offx,offy, "拉伸调整", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    //cx			this.adj_ls.Move(offx+150,offy-5, 450, 40);
    //cx			this.adj_ls.Draw();
    			
    //cx			offy+=35+15+10;
    			offx-=15;

    			offx+=15;
    			offy+=15;
    			M3DFast$1.gi().DrawTextEx(offx,offy+10, "画面缓存", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    			DrawMode$1.new_numberframe(offx+150,offy,70,""+parseInt(this.adj_pb.iPos));
    			this.adj_pb.Move(offx+150+100, offy+10, 350, 30);
    			this.adj_pb.Draw();
    			offy+=50;
    			M3DFast$1.gi().DrawTextEx(offx,offy+10, "画面质量", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    			for(i=0;i<3;i++)
    			{
    				if(this.btn_pq[i].bTrue)
    				{

    				}
    				this.btn_pq[i].Move(offx+150+i*180, offy, 50, 50);//人物，名字，摊位
    				this.btn_pq[i].Draw();
    			}
    			offy+=50;
    			M3DFast$1.gi().DrawTextEx(offx,offy+10, "周围玩家数", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    			DrawMode$1.new_numberframe(offx+150,offy,70,""+parseInt(this.adj_nrc.iPos));
    			this.adj_nrc.Move(offx+150+100, offy+10, 350, 30);
    			this.adj_nrc.Draw();
    			
    			// this.btn_logout.Move(SystemOperate.iX+SystemOperate.iW-150-50, SystemOperate.iY+SystemOperate.iH-60-50, 150, 60);
    			// if(GameVersion.QUDAO!=4 && GameVersion.QUDAO!=6)this.btn_logout.Draw();
    		}
    		if(this.iPage==1)
    		{//声音
    			offx+=20;
    			offy+=20;
    			this.chk_music.Move(offx, offy, 50, 50);
    			if(this.chk_music.bTrue)SystemOperate.iMusic=1;
    			else SystemOperate.iMusic=0;
    			this.chk_music.Draw();
    			
    			this.chk_sound.Move(offx+200, offy, 50, 50);
    			if(this.chk_sound.bTrue)SystemOperate.iSound=1;
    			else SystemOperate.iSound=0;
    			this.chk_sound.Draw();
    		}
    		if(this.iPage==2)
    		{//其他
    			offx+=20;
    			offy+=20;
    			this.chk_wheel.Move(offx, offy, 50, 50);
    			if(this.chk_wheel.bTrue)SystemOperate.iWheel=0;
    			else SystemOperate.iWheel=1;
    			this.chk_wheel.Draw();
    			
    			offy+=70;
    			this.chk_exthelp.Move(offx, offy, 50, 50);
    			if(this.chk_exthelp.bTrue)XRecordFast.iExtHelp=1;
    			else XRecordFast.iExtHelp=3;
    			this.chk_exthelp.Draw();
    			
    			offy+=70;
    			this.chk_allowteam.Move(offx, offy, 50, 50);
    			if(SystemOperate.bAllowTeam!=this.chk_allowteam.bTrue)
    			{
    				SystemOperate.bAllowTeam=this.chk_allowteam.bTrue;
    				GmProtocol$1.gi().s_setflag(2, 8, SystemOperate.bAllowTeam?1:0);
    				if(SystemOperate.bAllowTeam)GmMe$1.me.iFlag[2]=GmMe$1.me.iFlag[2]|(1<<8);
    				else GmMe$1.me.iFlag[2]=GmMe$1.me.iFlag[2]&(~(1<<8));
    			}
    			this.chk_allowteam.Draw();//组队邀请
    			
    			offy+=70;
    			this.chk_allowgoods.Move(offx, offy, 50, 50);
    			if(SystemOperate.bAllowGoods!=this.chk_allowgoods.bTrue)
    			{
    				SystemOperate.bAllowGoods=this.chk_allowgoods.bTrue;
    				GmProtocol$1.gi().s_setflag(2, 9, SystemOperate.bAllowGoods?1:0);
    				if(SystemOperate.bAllowGoods)GmMe$1.me.iFlag[2]=GmMe$1.me.iFlag[2]|(1<<9);
    				else GmMe$1.me.iFlag[2]=GmMe$1.me.iFlag[2]&(~(1<<9));
    			}
    			this.chk_allowgoods.Draw();//接受物品
    			
    			offy+=70;
    			this.chk_allowtrade.Move(offx, offy, 50, 50);
    			if(SystemOperate.bAllowTrade!=this.chk_allowtrade.bTrue)
    			{
    				SystemOperate.bAllowTrade=this.chk_allowtrade.bTrue;
    				GmProtocol$1.gi().s_setflag(2, 10, SystemOperate.bAllowTrade?1:0);
    				if(SystemOperate.bAllowTrade)GmMe$1.me.iFlag[2]=GmMe$1.me.iFlag[2]|(1<<10);
    				else GmMe$1.me.iFlag[2]=GmMe$1.me.iFlag[2]&(~(1<<10));
    			}
    			this.chk_allowtrade.Draw();//交易
    			
    			offy+=70;
    			this.chk_allowchat.Move(offx, offy, 50, 50);
    			if(SystemOperate.bAllowChat!=this.chk_allowchat.bTrue)
    			{
    				SystemOperate.bAllowChat=this.chk_allowchat.bTrue;
    				GmProtocol$1.gi().s_setflag(2, 7, SystemOperate.bAllowChat?1:0);
    				if(SystemOperate.bAllowChat)GmMe$1.me.iFlag[2]=GmMe$1.me.iFlag[2]|(1<<7);
    				else GmMe$1.me.iFlag[2]=GmMe$1.me.iFlag[2]&(~(1<<7));
    			}
    			this.chk_allowchat.Draw();//陌生人聊天
    			
    			offy+=70;
    			// this.btn_checkres.Move(offx, offy, 200, 55);
    			// this.btn_checkres.Draw();
    		}
    ////////////////////////////////////////////////////////////////////////////////音乐，音效，方向盘

    		/////////////////////////////////////////////////////////////////////////////////

    //		btn_scrfull.Move(SystemOperate.iX+224,SystemOperate.iY+offy,70,40);
    //		M3DFast.gi().DrawTextEx(SystemOperate.iX+224+35,SystemOperate.iY+offy+2, "拉伸", 0xffffffff, 30, 101, 1, 1, 0, 0, 0);
    //		
    //		btn_scrnice.Move(SystemOperate.iX+224+140,SystemOperate.iY+offy,70,40);
    //		M3DFast.gi().DrawTextEx(SystemOperate.iX+224+140+35,SystemOperate.iY+offy+2, "高清", 0xffffffff, 30, 101, 1, 1, 0, 0, 0);
    //				
    //		btn_scrmiddle.Move(SystemOperate.iX+224+2*140,SystemOperate.iY+offy,70,40);
    //		M3DFast.gi().DrawTextEx(SystemOperate.iX+224+2*140+35,SystemOperate.iY+offy+2, "居中", 0xffffffff, 30, 101, 1, 1, 0, 0, 0);
    //		
    //		btn_double.Move(SystemOperate.iX+224+3*140,SystemOperate.iY+offy,70,40);
    //		M3DFast.gi().DrawTextEx(SystemOperate.iX+224+3*140+35,SystemOperate.iY+offy+2, "两倍", 0xffffffff, 30, 101, 1, 1, 0, 0, 0);
    		
    //		switch(iScreenSet)
    //		{
    //		case 0:
    //			btn_scrfull.bMouseDown=true;
    //			btn_scrfull.bMouseIn=true;
    //			break;
    //		case 1:
    //			btn_scrnice.bMouseDown=true;
    //			btn_scrnice.bMouseIn=true;
    //			break;
    //		case 2:
    //			btn_scrmiddle.bMouseDown=true;
    //			btn_scrmiddle.bMouseIn=true;
    //			break;
    //		case 3:
    //			btn_double.bMouseDown=true;
    //			btn_double.bMouseIn=true;
    //			break;
    //		}
    //		btn_scrfull.Draw();
    //		btn_scrnice.Draw();
    //		btn_scrmiddle.Draw();
    //		btn_double.Draw();
    		

    	}

    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<3;i++)
    		{
    			if(this.btn_page[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_page[i].bCheck())
    				{
    					this.iPage=i;
    				}
    			}
    		}
    		if(this.iPage==0)
    		{
    			for(i=0;i<8;i++)
    			{
    				this.chk_show[i].ProcTouch(msg, x, y);
    			}
    //			btn_samerate.ProcTouch(msg, x, y);//等比勾选
    /*cx			if(this.btn_resetrate.ProcTouch(msg, x, y))
    			{//重置按钮
    				if(this.btn_resetrate.bCheck())
    				{
    					if(GmConfig.SYSW>=1280)SystemOperate.SystemOperate.iScreenLS=(1280-800)*400/(GmConfig.SYSW-800);
    					else SystemOperate.SystemOperate.iScreenLS=(GmConfig.SYSW-800)*400/(1280-800);
    					SystemOperate.iSameRate=0;
    					this.adj_ls.iPos=SystemOperate.SystemOperate.iScreenLS;
    				}
    			}
    			if(this.adj_ls.ProcTouch(msg, x, y))
    			{//拉伸调整
    				SystemOperate.iScreenLS=this.adj_ls.iPos;
    				SetScreenMode(0);
    				return true;
    			}*/
    			if(this.adj_pb.ProcTouch(msg, x, y))
    			{
    				SystemOperate.iPictureBuffer=parseInt(this.adj_pb.iPos);
    				return true;
    			}
    			for(i=0;i<3;i++)
    			{
    				if(this.btn_pq[i].ProcTouch(msg, x, y))
    				{
    					if(msg==3)
    					{
    						this.btn_pq[0].bTrue=false;
    						this.btn_pq[1].bTrue=false;
    						this.btn_pq[2].bTrue=false;
    						this.btn_pq[i].bTrue=true;
    						EasyMessage.easymsg.AddMessage("调整画面质量需重启游戏后才生效");
    						
    						SystemOperate.iPictureQuality=i;
    						if(SystemOperate.iPictureQuality==0)SystemOperate.iPictureBuffer=50;
    						else if(SystemOperate.iPictureQuality==1)SystemOperate.iPictureBuffer=25;
    						else SystemOperate.iPictureBuffer=0;
    						this.adj_pb.SetPos(0,50,SystemOperate.iPictureBuffer);
    					}
    				}
    			}
    			if(this.adj_nrc.ProcTouch(msg, x, y))
    			{
    				SystemOperate.iNearRoleCount=parseInt(this.adj_nrc.iPos);
    				return true;
    			}

    			// if(GameVersion.QUDAO!=4 && GameVersion.QUDAO!=6 && this.btn_logout.ProcTouch(msg, x, y))
    			// {
    			// 	if(this.btn_logout.bCheck())
    			// 	{
    			// 		PublicChat_SmallFrame.gi().iMessageCount=0;
    			// 		FriendList.gi().Clean();
    			// 		PublicInterface.gi().Logout();
    			// 		return true;
    			// 	}
    			// }
    		}
    		if(this.iPage==1)
    		{
    			if(msg == TouchManager.TOUCH_UP){
    				if(this.chk_music.ProcTouch(msg, x, y)){
    					if(this.chk_music.bTrue){
    						SystemOperate.iMusic=1;
    					}else{
    						SystemOperate.iMusic=0;
    					}
    					GmPlay$1.ResetSound();
    				}

    				if(this.chk_sound.ProcTouch(msg, x, y)){
    					if(this.chk_sound.bTrue){
    						SystemOperate.iSound = 1;
    					}else{
    						SystemOperate.iSound = 0;
    					}
    				}
    			}
    		}
    		if(this.iPage==2)
    		{
    			this.chk_wheel.ProcTouch(msg, x, y);
    			this.chk_exthelp.ProcTouch(msg, x, y);
    			this.chk_allowteam.ProcTouch(msg, x, y);
    			this.chk_allowgoods.ProcTouch(msg, x, y);
    			this.chk_allowtrade.ProcTouch(msg, x, y);
    			this.chk_allowchat.ProcTouch(msg, x, y);
    			// if(this.btn_checkres.ProcTouch(msg, x, y))
    			// {
    			// 	if(this.btn_checkres.bCheck())
    			// 	{
    			// 		var f;
    			// 		f=new File(GameData.sSDTo+"currentcheck.dat");
    			// 		f.delete();
    			// 		f=new File(GameData.sSDTo+"currentversion.dat");
    			// 		f.delete();
    			// 		f=new File(GameData.sSDTo+"updatedetail.dat");
    			// 		f.delete();
    			// 		f=new File(GameData.sSDTo+"lead.dat");
    			// 		f.delete();
    			// 		f=new File(GameData.sSDTo+"resfrom.dat");
    			// 		f.delete();
    			// 		FrameMessage.fm.Open("已设置检测标记，将在下次重启客户端时自动进行检测");
    			// 	}
    			// }
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    //						if(SystemOperate.bShowRole)Gameing.gameing.FreshNearRole();
    		return false;
    	}

    }
    SystemOperate.iX=0;
    SystemOperate.iY=0;
    SystemOperate.iW=0;
    SystemOperate.iH=0;
    SystemOperate.bShowRole=true;
    SystemOperate.bShowMount=true;
    SystemOperate.bShowWeapon=true;
    SystemOperate.bShowColor=true;
    SystemOperate.bShowFollow=true;
    SystemOperate.bShowName=true;
    SystemOperate.bShowSell=true;
    SystemOperate.bShowTitle=true;
    SystemOperate.bAllowTeam=true;
    SystemOperate.bAllowGoods=true;
    SystemOperate.bAllowTrade=true;
    SystemOperate.bAllowChat=true;

    	SystemOperate.iSameRate=0;//0等真实屏幕比例拉伸，1不等比拉伸
    	SystemOperate.iScreenLS=0;//----------------------------------------------
    	SystemOperate.iPictureQuality=0;////画质：高0，中1，低2-----
    	SystemOperate.iPictureBuffer=50;//-----------------------------------------------
    	SystemOperate.iNearRoleCount=25;//-------------------------------------------------
    	SystemOperate.iMusic=1,SystemOperate.iSound=1;
    	SystemOperate.iWheel=1;//0是开,1是关
    	SystemOperate.iFPS;
    	SystemOperate.iRenderType=1;//渲染方式
    	SystemOperate.BASEW=1280;
    	SystemOperate.BASEH=720;
    	SystemOperate.MAXW=1280,SystemOperate.MAXH=720;
    	SystemOperate.iWordRate=1000;

    	SystemOperate.SetScreenMode=function( mode)
    	{
    		mode=6;
    		if(XStat$1.gi().bGameing())
    		{
    			SystemOperate.BASEH=SystemOperate.BASEW*GmConfig$1.SYSH/GmConfig$1.SYSW;
    			SystemOperate.MAXH=SystemOperate.BASEH;
    		}
    //		if(mode<10)mode=0;///全局永远为拉伸1280*720模式
    //		
    //		if(mode==11)mode=iOldMode;
    //		if(mode<4)iScreenSet=mode;
    		if(mode==10)
    		{//用于局部拉伸，用于地图缩放控制
    			//iOldMode=1;
    			
    			GmConfig$1.SCRW = 800;
    			GmConfig$1.SCRH = 480;
    			
    			if(GmConfig$1.SYSW>SystemOperate.MAXW)SystemOperate.MAXW=GmConfig$1.SYSW;
    			if(GmConfig$1.SYSH>SystemOperate.MAXH)SystemOperate.MAXH=GmConfig$1.SYSH;
    			
    			GmConfig$1.SCRW = 800+(SystemOperate.iScreenLS*(SystemOperate.MAXW-800)/400);
    			if(SystemOperate.iSameRate==0)GmConfig$1.SCRH=GmConfig$1.SCRW*GmConfig$1.SYSH/GmConfig$1.SYSW;//
    			else GmConfig$1.SCRH = 480+(SystemOperate.iScreenLS*(SystemOperate.MAXH-480)/400);
    //			GmPlay.sop("SystemOperate.iSameRate="+SystemOperate.iSameRate+",,,GmConfig.SCRW="+GmConfig.SCRW+",,,,,GmConfig.SCRH="+GmConfig.SCRH);
    			
    			M3DFast$1.iNVPW = GmConfig$1.SCRW;
    			M3DFast$1.iNVPH = GmConfig$1.SCRH;
    			GmConfig$1.REALW=GmConfig$1.SYSW;//拉伸
    			GmConfig$1.REALH=GmConfig$1.SYSH;
    			GmConfig$1.OFFX=(GmConfig$1.SYSW-GmConfig$1.REALW)/2;
    			GmConfig$1.OFFY=(GmConfig$1.SYSH-GmConfig$1.REALH)/2;
    		}
    		else// if(mode==0)
    		{//绝对拉伸到basew,baseh，用于ui
    			GmConfig$1.SCRW = SystemOperate.BASEW;
    			GmConfig$1.SCRH = SystemOperate.BASEH;
    			
    //			GmConfig.SCRW = SystemOperate.BASEW+(SystemOperate.iScreenLS*(GmConfig.SYSW-SystemOperate.BASEW)/400);
    //			GmConfig.SCRH = SystemOperate.BASEH+(SystemOperate.iScreenLS*(GmConfig.SYSH-SystemOperate.BASEH)/400);
    			
    			//M3DFast.iNVPW = GmConfig.SCRW;
    			//M3DFast.iNVPH = GmConfig.SCRH;
    			GmConfig$1.REALW=GmConfig$1.SYSW;//拉伸
    			GmConfig$1.REALH=GmConfig$1.SYSH;
    			GmConfig$1.OFFX=(GmConfig$1.SYSW-GmConfig$1.REALW)/2;
    			GmConfig$1.OFFY=(GmConfig$1.SYSH-GmConfig$1.REALH)/2;
    		}
    //		else if(mode==1)
    //		{//高清
    //			GmConfig.SCRW = GmConfig.SYSW;
    //			GmConfig.SCRH = GmConfig.SYSH;
    //			if(GmConfig.SCRW<SystemOperate.BASEW)GmConfig.SCRW=SystemOperate.BASEW;
    //			if(GmConfig.SCRH<SystemOperate.BASEH)GmConfig.SCRH=SystemOperate.BASEH;
    //			M3DFast.iNVPW = GmConfig.SCRW;
    //			M3DFast.iNVPH = GmConfig.SCRH;
    //			GmConfig.REALW=GmConfig.SYSW;
    //			GmConfig.REALH=GmConfig.SYSH;
    //			GmConfig.OFFX=(GmConfig.SYSW-GmConfig.REALW)/2;
    //			GmConfig.OFFY=(GmConfig.SYSH-GmConfig.REALH)/2;
    //		}
    //		else if(mode==2)
    //		{//居中
    //			GmConfig.SCRW = SystemOperate.BASEW;
    //			GmConfig.SCRH = SystemOperate.BASEH;
    //			M3DFast.iNVPW = GmConfig.SCRW;
    //			M3DFast.iNVPH = GmConfig.SCRH;
    //			GmConfig.REALW=GmConfig.SCRW;
    //			GmConfig.REALH=GmConfig.SCRH;
    //			GmConfig.OFFX=(GmConfig.SYSW-GmConfig.REALW)/2;
    //			GmConfig.OFFY=(GmConfig.SYSH-GmConfig.REALH)/2;
    //		}
    //		else if(mode==3)
    //		{//两倍
    ////			GmConfig.SCRW = 800;
    ////			GmConfig.SCRH = 480;
    //			GmConfig.SCRW =GmConfig.SYSW/2;
    //			GmConfig.SCRH =GmConfig.SYSH/2;
    //			M3DFast.iNVPW = GmConfig.SCRW;
    //			M3DFast.iNVPH = GmConfig.SCRH;
    //			GmConfig.REALW=GmConfig.SCRW*2;
    //			GmConfig.REALH=GmConfig.SCRH*2;
    //			GmConfig.OFFX=(GmConfig.SYSW-GmConfig.REALW)/2;
    //			GmConfig.OFFY=(GmConfig.SYSH-GmConfig.REALH)/2;
    //		}
    //		else if(mode==4)
    //		{//BIG UI 模式
    //			GmConfig.SCRW = GmConfig.BUW;
    //			GmConfig.SCRH = GmConfig.BUH;
    //			M3DFast.iNVPW = GmConfig.SCRW;
    //			M3DFast.iNVPH = GmConfig.SCRH;
    //			GmConfig.REALW=GmConfig.SYSW;//拉伸
    //			GmConfig.REALH=GmConfig.SYSH;
    //			GmConfig.OFFX=(GmConfig.SYSW-GmConfig.REALW)/2;
    //			GmConfig.OFFY=(GmConfig.SYSH-GmConfig.REALH)/2;
    //		}
    //		else if(mode==5)
    //		{//主菜单，固定分辨率
    //			GmConfig.SCRW = SystemOperate.BASEW;
    //			GmConfig.SCRH = SystemOperate.BASEH;
    //			
    //			M3DFast.iNVPW = GmConfig.SCRW;
    //			M3DFast.iNVPH = GmConfig.SCRH;
    //			GmConfig.REALW=GmConfig.SYSW;//拉伸
    //			GmConfig.REALH=GmConfig.SYSH;
    //			GmConfig.OFFX=(GmConfig.SYSW-GmConfig.REALW)/2;
    //			GmConfig.OFFY=(GmConfig.SYSH-GmConfig.REALH)/2;
    //		}
    //		else if(mode==6)
    //		{
    //			GmConfig.SCRW = 1280;
    //			GmConfig.SCRH = 720;
    //			
    //			M3DFast.iNVPW = GmConfig.SCRW;
    //			M3DFast.iNVPH = GmConfig.SCRH;
    //			GmConfig.REALW=GmConfig.SYSW;//拉伸
    //			GmConfig.REALH=GmConfig.SYSH;
    //			GmConfig.OFFX=0;
    //			GmConfig.OFFY=0;
    //		}
    ///		M3DFast.gi().SetScreenMode();
    //		iW=580;
    //		SystemOperate.iH=400;
    		SystemOperate.iX=(GmConfig$1.SCRW-SystemOperate.iW)/2;
    		SystemOperate.iY=(GmConfig$1.SCRH-SystemOperate.iH)/2;
    		
    //		if(!SingleChatFrame.chat.bLock)
    //		{
    //			SingleChatFrame.iW=GmConfig.SCRW*500/1280;
    //			SingleChatFrame.SystemOperate.iH=GmConfig.SCRH*160/720;
    //		}
    //		if(SingleChatFrame.chat.bOpen && !SingleChatFrame.chat.bCloseing && !SingleChatFrame.chat.bOpening)
    //		{
    //			SingleChatFrame.iModifyW=SingleChatFrame.iW;
    //			SingleChatFrame.iModifyH=SingleChatFrame.SystemOperate.iH;
    //		}
    //		SystemOperate.iWordRate=GmConfig.SCRH*1000/720;
    	};
    	SystemOperate.WordSize=function( size)
    	{
    		return size*SystemOperate.iWordRate/1000;
    	};

    class _TOUCHMANAGE
    {/*
    	public byte iTouchStat; //1 :点中  2拖动   3up
    	public int iTid;//第几次点击，用于判断多点触摸
    	public int iPX,iPY;
    	public int iX,iY;
    	public int iSourceX,iSourceY;
    	*/
    	constructor()
    	{
    		this.iTouchStat=0;
    	}
    	 copyfrom( t)
    	{
    		this.iTid=t.iTid;
    		this.iTouchStat=t.iTouchStat;
    		this.iPX=t.iPX;
    		this.iPY=t.iPY;
    		this.iX=t.iX;
    		this.iY=t.iY;
    		this.iSourceX=t.iSourceX;
    		this.iSourceY=t.iSourceY;
    	}
    }

    class TouchManager {

    	
    	constructor()
    	{
    		this.procstack=new _TOUCHMANAGE(TouchManager.MAXTOUCHPROC);
    		this.procing=new _TOUCHMANAGE();

    		this.ISHENGPING = false;//判断是否横屏，使用系统横屏
    		var i;
    		for(i=0;i<TouchManager.MAXTOUCH;i++)
    		{
    			TouchManager.ths[i]=new _TOUCHMANAGE();
    			TouchManager.ths[i].iTouchStat=TouchManager.TOUCH_NONE;
    		}
    		for(i=0;i<TouchManager.MAXTOUCHPROC;i++)
    		{
    			this.procstack[i]=new _TOUCHMANAGE();
    		}
    		this.iTouchCount=0;
    		this.iProcPoint=0;
    		this.iProcEnd=0;
    		TouchManager.iFingerId=-1;
    	}
    	clear()
    	{
    		var i;
    		for(i=0;i<TouchManager.MAXTOUCH;i++)
    		{
    			TouchManager.ths[i].iTouchStat=TouchManager.TOUCH_NONE;
    		}
    		this.iTouchCount=0;
    		this.iProcPoint=0;
    		this.iProcEnd=0;
    		TouchManager.iFingerId=-1;
    	}
    	pushtouch( index)
    	{
    		if(this.iProcEnd<this.iProcPoint+TouchManager.MAXTOUCHPROC)
    		{
    			this.procstack[this.iProcEnd%TouchManager.MAXTOUCHPROC].copyfrom(TouchManager.ths[index]);
    			this.iProcEnd++;
    			return true;
    		}
    		GmPlay$1.sop("Not Enuphy touch");
    		return false;
    	}
    	poptouch()
    	{
    		if(this.iProcPoint<this.iProcEnd)
    		{
    			this.procing.copyfrom(this.procstack[this.iProcPoint%TouchManager.MAXTOUCHPROC]);
    			TouchManager.iFingerId=this.procing.iTid;
    //			this.procingbuffer.copyfrom(this.procing);
    			this.iProcPoint++;
    			return true;
    		}
    		return false;
    	}

    //	SwapSCRWH( fScaleRate)
    //	{
    //		this.procing.iX= (1.0f*this.procingbuffer.iX/fScaleRate);
    //		this.procing.iY= (1.0f*this.procingbuffer.iY/fScaleRate);
    //	}
    	
    	touch_count()
    	{
    		return this.iTouchCount;
    	}
    	calcxy( x, y)
    	{
    		if(this.ISHENGPING)
    		{
    			x= ((x*GmConfig$1.SCRH)/GmConfig$1.REALW);
    			y= ((y*GmConfig$1.SCRW)/GmConfig$1.REALH);
    			
    			this.cy=x;
    			this.cx=y;
    		}
    		else 
    		{//
    //			this.cx= (((x-GmConfig.OFFX)*GmConfig.SCRW)/GmConfig.REALW);
    //			this.cy= (((y-GmConfig.OFFY)*GmConfig.SCRH)/GmConfig.REALH);
    			this.cx= (((x-GmConfig$1.OFFX)*SystemOperate.BASEW)/GmConfig$1.REALW);
    			this.cy= (((y-GmConfig$1.OFFY)*SystemOperate.BASEH)/GmConfig$1.REALH);
    		}
    	}
    //	GmConfig.SCRW = 800+(iScreenLS*(GmConfig.SYSW-800)/400);
    //	GmConfig.SCRH = 480+(iScreenLS*(GmConfig.SYSH-480)/400);

    	touch_down( tid, x, y)
    	{
    		if(TouchManager.ths[tid].iTouchStat!=TouchManager.TOUCH_NONE)return;//触摸中，不再次触发
    		this.calcxy(x,y);
    		
    		this.iLastDownX=this.cx;
    		this.iLastDownY=this.cy;
    		TouchManager.ths[tid].iTouchStat=TouchManager.TOUCH_DOWN;
    		TouchManager.ths[tid].iTid=tid;
    		TouchManager.ths[tid].iX=this.cx;
    		TouchManager.ths[tid].iY=this.cy;
    		TouchManager.ths[tid].iPX=this.cx;
    		TouchManager.ths[tid].iPY=this.cy;
    		TouchManager.ths[tid].iSourceX=x;
    		TouchManager.ths[tid].iSourceY=y;
    		this.pushtouch(tid);
    		
    		this.iTouchCount++;
    	}
    	touch_up( tid, x, y)
    	{
    		if(TouchManager.ths[tid].iTouchStat==TouchManager.TOUCH_NONE)return;
    		this.calcxy(x,y);

    		TouchManager.ths[tid].iTouchStat=TouchManager.TOUCH_UP;
    		TouchManager.ths[tid].iX=this.cx;
    		TouchManager.ths[tid].iY=this.cy;
    		TouchManager.ths[tid].iSourceX=x;
    		TouchManager.ths[tid].iSourceY=y;
    		this.pushtouch(tid);
    		TouchManager.ths[tid].iTouchStat=TouchManager.TOUCH_NONE;
    		this.iTouchCount--;
    	}

    	touch_move( x, y)
    	{
    		var i,j,k=99999;
    		var tid=-1;
    		this.calcxy(x,y);
    		for(i=0;i<TouchManager.MAXTOUCH;i++)
    		{
    			if(TouchManager.ths[i].iTouchStat==TouchManager.TOUCH_NONE)continue;
    			j=XDefine$1.llength(this.cx, this.cy, TouchManager.ths[i].iX, TouchManager.ths[i].iY);
    			if(j==0)return;
    			if(tid==-1)
    			{
    				tid=i;
    				k=j;
    			}
    			else if(j<k)
    			{
    				tid=i;
    				k=j;
    			}
    		}
    		if(tid==-1)return;
    //		if(k>50)return;

    		TouchManager.ths[tid].iTouchStat=TouchManager.TOUCH_MOVE;
    		TouchManager.ths[tid].iPX=TouchManager.ths[tid].iX;
    		TouchManager.ths[tid].iPY=TouchManager.ths[tid].iY;
    		TouchManager.ths[tid].iX=this.cx;
    		TouchManager.ths[tid].iY=this.cy;
    		TouchManager.ths[tid].iSourceX=x;
    		TouchManager.ths[tid].iSourceY=y;
    		this.pushtouch(tid);
    	}
    	
    //	touch_realwh( fromw,  fromh, tow, toh) {
    //		this.iRealScrW = fromw;
    //		this.iRealScrH = fromh;
    //		this.SCRW = tow;
    //		this.SCRH = toh;
    //	}

    }
    	TouchManager.TOUCH_NONE=0;
    	TouchManager.TOUCH_DOWN=1;
    	TouchManager.TOUCH_MOVE=2;
    	TouchManager.TOUCH_UP=3;

    	TouchManager.MAXTOUCHPROC=64;
    	TouchManager.MAXTOUCH=64;
    	TouchManager.ths=new Array(TouchManager.MAXTOUCH);//
    	//TouchManager.tm=new TouchManager();
    	TouchManager.iFingerId;

    	TouchManager.tm=null;
    	TouchManager.gi=function()
    	{
    		if(TouchManager.tm==null)TouchManager.tm=new TouchManager();
    		return TouchManager.tm;
    	};
    	TouchManager.FingerLocker=function( fg)
    {
    	if(fg==-1)return -1;
    	if(TouchManager.ths[fg].iTouchStat==TouchManager.TOUCH_NONE)return -1;
    	return fg;
    };
    TouchManager._swapx=function( x)
    	{
    		var i;

    		i = 800+(SystemOperate.iScreenLS*(SystemOperate.MAXW-800)/400);
    //		if(SystemOperate.iSameRate==0)j=GmConfig.SCRW*GmConfig.SYSH/GmConfig.SYSW;//
    //		else j = 480+(SystemOperate.iScreenLS*(maxh-480)/400);

    		return x*i/SystemOperate.BASEW;
    	};
    	TouchManager. _swapy=function( y)
    	{
    		var i,j;

    		if(SystemOperate.iSameRate==0)
    		{
    			i = 800+(SystemOperate.iScreenLS*(SystemOperate.MAXW-800)/400);
    			j=i*GmConfig$1.SYSH/GmConfig$1.SYSW;//
    		}
    		else j = 480+(SystemOperate.iScreenLS*(SystemOperate.MAXH-480)/400);
    		
    		return y*j/SystemOperate.BASEH;
    	};

    class XButtonEx2$1
    {
        constructor(ani)
        {
    		this.pani=ani;
    		this.pm3f=this.pani.pm3f;
    //		this.pm3f=M3DFast.xm3f;
    		this.bSingleButton=false;
    		this.bCheckByRect=false;
    		this.bCheckByRect1=false;
    		
    		this.ReleaseButton();
    		this.sName="";
    		this.iNameColor=0xffffec80;
    		this.Move(0,0,100,100);
    //		bHide=false;
    		this.iFingerLocker=-1;
    		this.iAnimaStat=0;
    		this.fScale=1.0;
    		this.iNameSize=30;
    		this.bChecked=false;
    		
    		this.exts=new Int32Array(3);//
        }
        InitButton( an)
    	{
    		this.sAnimaName=an;
    		this.pani.InitAnimaWithName(an,GmPlay$1.aaa);
    		GmPlay$1.aaa.iFrame=0;this.SetAnimaNormal(GmPlay$1.aaa,false);
    		GmPlay$1.aaa.iFrame=1;this.SetAnimaMouseon(GmPlay$1.aaa,false);
    		this.SetAnimaMousedown(GmPlay$1.aaa,false);
    		GmPlay$1.aaa.iFrame=2;this.SetAnimaDisable(GmPlay$1.aaa,false);
    	}
    	ReleaseButton()
    	{
    //		this.aa_normal_to_on=null;
    //		iStat_normal_to_on=0;

    		this.aa_normal=null;
    		this.act_normal=false;
    		this.aa_mouseon=null;
    		this.act_mouseon=false;
    		this.aa_mousedown=null;
    		this.act_mousedown=false;

    		this.aa_disable=null;

    		this.bMouseIn=false;
    		this.bMouseDown=false;
    		this.bVisible=true;
    		this.bDisable=false;

    		this.iX=0;
    		this.iY=0;
    	}
    	SetAnimaNormal( aa, bact)
    	{
    		if(this.aa_normal==null)this.aa_normal=new AnimaAction();
    		this.aa_normal.copyfrom(aa);
    		this.act_normal=bact;
    	}
    	SetAnimaMouseon( aa, bact)
    	{
    		if(this.aa_mouseon==null)this.aa_mouseon=new AnimaAction();
    		this.aa_mouseon.copyfrom(aa);
    		this.act_mouseon=bact;
    	}
    	SetAnimaMousedown( aa, bact)
    	{
    		if(this.aa_mousedown==null)this.aa_mousedown=new AnimaAction();
    		this.aa_mousedown.copyfrom(aa);
    		this.act_mousedown=bact;
    	}
    	SetAnimaDisable( aa, bact)
    	{
    		if(this.aa_disable==null)this.aa_disable=new AnimaAction();
    		this.aa_disable.copyfrom(aa);
    		this.act_disable=bact;
    	}
    	Move( x, y, w, h)
    	{
    		this.iX=x;
    		this.iY=y;
    		this.iW=w;
    		this.iH=h;
    		
    	}
    	setdown()
    	{
    		this.bMouseDown=true;
    		this.bMouseIn=true;
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.iFingerLocker!=-1 && this.iFingerLocker!=TouchManager.iFingerId)return false;
    		if(!this.bVisible)return false;
    		if(this.bDisable)return this.bMoveIn(x,y);
    		
    		if(msg==3)this.iFingerLocker=-1;
    		if(!this.bMoveIn(x,y))
    		{
    			this.iFingerLocker=-1;
    			this.bMouseDown=false;
    			if(this.iAnimaStat==0 && this.fScale!=1.0)this.iAnimaStat=11;
    			return false;
    		}
    		switch(msg)
    		{
    		case 1://down
    			this.iFingerLocker=TouchManager.iFingerId;
    			this.bMouseDown=true;
    			this.iAnimaStat=1;
    			break;
    		case 2://move
    			break;
    		case 3://up
    			if(this.bMouseDown)
    			{
    				this.bMouseDown=false;
    				this.bChecked=true;
    				this.iAnimaStat=11;
    			}
    			this.iFingerLocker=-1;
    			break;
    		}
    		return true;
    	}
    	bCheck()
    	{
    		if(this.bChecked)
    		{
    			this.bChecked=false;
    			return true;
    		}
    		return false;
    	}
    	bMoveIn( x, y)
    	{
    		this.bMouseIn=false;
    		if(this.bCheckByRect1)
    		{
    			if(x>=this.iCheckX && x<=this.iCheckX+this.iCheckW && y>=this.iCheckY && y<=this.iCheckY+this.iCheckH)this.bMouseIn=true;
    			else this.bMouseIn=false;
    		}
    		else if(this.bSingleButton || this.bCheckByRect)
    		{
    			if(x>=this.iX && x<=this.iX+this.iW && y>=this.iY && y<=this.iY+this.iH)this.bMouseIn=true;
    			else this.bMouseIn=false;
    		}
    		else
    		{
    //			if(x>=this.iX && x<=this.iX+this.iW && y>=this.iY && y<=this.iY+this.iH)this.bMouseIn=true;
    			if(this.pani.bInAnima(this.aa_normal,this.iX,this.iY,x,y))this.bMouseIn=true;
    			else this.bMouseIn=false;
    		}
    		return this.bMouseIn;
    	}
    	SetNormal()
    	{
    		this.bMouseDown=false;
    		this.iAnimaStat=0;
    		this.fScale=1;
    	}
    	Draw()
    	{
    		while(PublicInterface.gi().bInBound(this.iX,this.iY,this.iW,this.iH))this.iX--;
    //		switch(this.iAnimaStat)
    //		{
    //		case 0://什么都不做
    //			break;
    //		case 1://变大
    //			this.fScale+=0.2f;
    //			if(this.fScale>1.3f)this.iAnimaStat=2;
    //			break;
    //		case 2://缩小一点点
    //			this.fScale-=0.2f;
    //			this.iAnimaStat=0;
    //			break;
    //		case 11://缩小
    //			this.fScale-=0.2f;
    //			if(this.fScale<1)this.iAnimaStat=12;
    //			break;
    //		case 12://变大一点点
    //			this.fScale=1.0f;
    //			this.iAnimaStat=0;
    //			break;
    //		}
    		switch(this.iAnimaStat)
    		{
    		case 0://什么都不做
    			break;
    		case 1://变大
    			this.fScale-=0.1;
    			if(this.fScale<0.8)this.iAnimaStat=2;
    			break;
    		case 2://缩小一点点
    			this.fScale+=0.1;
    			this.iAnimaStat=0;
    			break;
    		case 11://缩小
    			this.fScale+=0.1;
    			if(this.fScale>1)this.iAnimaStat=12;
    			break;
    		case 12://变大一点点
    			this.fScale=1.0;
    			this.iAnimaStat=0;
    			break;
    		}
    		if(!this.bVisible)return;
    		if(this.bDisable)
    		{
    			if(this.bSingleButton)this.pm3f.FillRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0xC0ffffff);
    			else this.pani.DrawAnima_aa(this.iX, this.iY, this.aa_disable);
    		}
    		else
    		{
    //			this.pani.DrawAnima_aa(this.iX, this.iY, this.aa_normal);
    			if(this.bMouseDown)this.pani.DrawAnimaEx((this.iX-((this.fScale-1)*this.iW/2)), (this.iY-((this.fScale-1)*this.iH/2)), this.aa_mousedown, 101, this.fScale, this.fScale, 0, 0, 0);
    			else
    			{
    				this.pani.DrawAnimaEx((this.iX-((this.fScale-1)*this.iW/2)), (this.iY-((this.fScale-1)*this.iH/2)), this.aa_normal, 101, this.fScale, this.fScale, 0, 0, 0);
    //				this.pani.DrawAnima_aa(this.iX, this.iY, this.aa_normal);
    			}
    		}
    /*		else if(this.bMouseIn)
    		{
    			if(this.bMouseDown)
    			{
    				if(this.bSingleButton)
    				{
    					this.pm3f.FillRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0x80ffffff);
    					this.pm3f.DrawRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0xffffffff);
    				}
    				else this.pani.DrawAnima_aa(this.iX, this.iY, this.aa_mousedown);
    			}
    			else
    			{
    				if(this.bSingleButton)
    				{
    					this.pm3f.FillRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0x40ffffff);
    					this.pm3f.DrawRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0xffffffff);
    				}
    				else this.pani.DrawAnima_aa(this.iX, this.iY, this.aa_normal);
    			}
    		}
    		else
    		{
    			if(this.bSingleButton)this.pm3f.DrawRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH,0xffffffff);
    			else this.pani.DrawAnima_aa(this.iX, this.iY,this.aa_normal);
    		}*/
    		this.DrawText(0,0);
    //		if(this.bSingleButton || this.sName.length>0)
    //		{
    //			var c=this.iNameColor;
    //			if(this.bDisable)c=0xff808080;
    ////			this.pm3f.DrawText_2(this.iX+this.iW/2,this.iY+this.iH/2,this.sName,0xff60e0e0,this.iNameSize,101,this.fScale,this.fScale,0,-2,-2,2,0xff000000);
    //			this.pm3f.DrawText_2(this.iX+this.iW/2,this.iY+this.iH/2,this.sName,c, (this.fScale*this.iNameSize),101,1,1,0,-2,-2,4,0xff00244d);
    ////			this.pm3f.DrawText_2(this.iX+this.iW/2,this.iY+this.iH/2+50,this.sName,c,50,101,1,1,0,-2,-2,2,0xff000000);
    ////			this.pm3f.DrawTextEx(this.iX+this.iW/2,this.iY+this.iH/2+100,this.sName,c,50,101,1,1,0,-2,-2);
    ////			GmPlay.sop(""+( (this.fScale*this.iNameSize)));
    //		}
    //		GmPlay.sop(this.sName+","+this.iX+","+this.iY);
    	}
    	DrawText( offx, offy)
    	{
    		if(this.bSingleButton || this.sName.length>0)
    		{
    			var c=this.iNameColor;
    			if(this.bDisable)c=0xff808080;
    			this.pm3f.DrawText_2(this.iX+this.iW/2+offx,this.iY+this.iH/2+offy,this.sName,c, (this.fScale*this.iNameSize),101,1,1,0,-2,-2,4,0xff00244d);
    		}
    	}
    	SetCheckRect( x, y, w, h)
    	{
    		this.bCheckByRect1=true;
    		this.iCheckX=x;
    		this.iCheckY=y;
    		this.iCheckW=w;
    		this.iCheckH=h;
    	}
    }

    class SmallMap extends BaseClass{

    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iNpcCount=0;
    		this.btn_npcs=new Array(64);//
    		for(i=0;i<64;i++)
    		{
    			this.btn_npcs[i]=new XButtonEx2$1(GmPlay$1.xani_nui3);
    //			this.btn_npcs[i].InitButton("按钮1");
    			this.btn_npcs[i].bSingleButton=true;
    		}
    		
    		this.btn_worldmap=new XButtonEx2$1(GmPlay$1.xani_ui2);
    		this.btn_worldmap.InitButton("世界地图按钮");
    	}
    	 Draw_smallmap()
    	{
    		var i,j,x,y,w,h,dw,dh;
    		w=MapManager.gi().mapdata.iMapWidth;
    		h=MapManager.gi().mapdata.iMapHeight;
    //		if(w>h)i=w;//得到一个大的用以计算比例
    //		else i=h;
    //		this.iRate=700.0f/i;//得到缩放比例

    //		iMapX= (SmallMap.iX+10+(700-iMapW)/2);
    //		SmallMap.iMapY= (SmallMap.iY+10+());

    //		SmallMap.iW=iMapW+20+160;
    //		SmallMap.iH=iMapH+20;
    //		SmallMap.iX=(GmConfig.SCRW-SmallMap.iW)/2;
    //		SmallMap.iY=(GmConfig.SCRH-SmallMap.iH)/2;
    		
    		
    //		DrawMode.Frame1_BR(SmallMap.iX, SmallMap.iY, SmallMap.iW, SmallMap.iH);
    	
    		
    		// if(SystemOperate.iPictureQuality==1)XImgFast.bLow=true;
    		if(MapManager.gi().mapdata.iGroundSourceId>=0)
    		{//整图底面
    			var ppng=MapManager.gi().pSourceIndex[MapManager.gi().mapdata.iGroundSourceId];
    			for(i=0;i<ppng.ww;i++)
    			{
    				for(j=0;j<ppng.hh;j++)
    				{
    					x= parseInt(this.iRate*i*512) + SmallMap.iMapX;
    					y= parseInt(this.iRate*j*512) + SmallMap.iMapY;
    					
    					if(w<(i+1)*512)dw=w%512;
    					else dw=512;
    					if(h<(j+1)*512)dh=h%512;
    					else dh=512;
    //					dw=(i+1)*512;//去掉白边
    //					if(dw>w)dw=w%512;
    //					dh=(j+1)*512;
    //					if(dh>h)dh=h%512;
    					
    					if(ppng.iRid[j][i]==-1)
    					{
    						ppng.iRid[j][i]=M3DFast$1.gi().LoadFromFile(ppng.sImagePath+"spirit_"+i+"_"+j+".png", -1,true);
    					}
    					M3DFast$1.gi().DrawImageEx(0, x,y, ppng.iRid[j][i],
    							0,0,dw,dh,
    							100,this.iRate,this.iRate,0,-1,-1);
    				}
    			}
    		}
    //		DrawMode.ui3_Frame3(SmallMap.iMapX, SmallMap.iMapY, iMapW, iMapH);
    		// if(SystemOperate.iPictureQuality==1)XImgFast.bLow=false;
    		x= parseInt(this.iRate*GmMe$1.me.iX+SmallMap.iMapX);
    		y= parseInt(this.iRate*GmMe$1.me.iY+SmallMap.iMapY);
    		M3DFast$1.gi().FillRect_2D(x-5,y-5,x+5,y+5, 0xffff0000);

    //			if(mapdata.iMapWidth<GmConfig.SCRW && mapdata.iMapWidth%512!=0)
    //			{
    //				M3DFast.gi().FillRect_2D(iOffx+mapdata.iMapWidth, iOffy, GmConfig.SCRW, GmConfig.SCRH, 0xff000000);
    //			}
    //			if(mapdata.iMapHeight<GmConfig.SCRH && mapdata.iMapHeight%512!=0)
    //			{
    //				M3DFast.gi().FillRect_2D(iOffx, iOffy+mapdata.iMapHeight, GmConfig.SCRW, GmConfig.SCRH, 0xff000000);
    //			}
    	}
    	Draw()
    	{
    		var w,h;
    		//根据当前地图大小，重新计算框体长宽
    		w=MapManager.gi().mapdata.iMapWidth;
    		h=MapManager.gi().mapdata.iMapHeight;
    		if(w>h)this.iRate=700/w;
    		else this.iRate=700/h;
    		SmallMap.iMapW= parseInt(w*this.iRate);
    		SmallMap.iMapH= parseInt(h*this.iRate);
    		SmallMap.iW=SmallMap.iMapW+20;
    		SmallMap.iH=SmallMap.iMapH+20;
    		SmallMap.iX=(GmConfig$1.SCRW-SmallMap.iW)/2;
    		SmallMap.iY=(GmConfig$1.SCRH-SmallMap.iH)/2;
    		SmallMap.iMapX=SmallMap.iX+10;
    		SmallMap.iMapY=SmallMap.iY+10;
    		DrawMode$1.new_bigframe(SmallMap.iX,SmallMap.iY,SmallMap.iW,SmallMap.iH);
    		
    		this.Draw_smallmap();
    		this.Draw_npc();
    		
    		this.iFindWayOnce=0;
    		
    		this.btn_worldmap.Move(SmallMap.iX+10, SmallMap.iY+10, 60, 60);
    		this.btn_worldmap.Draw();
    	}
    	 Draw_npc()
    	{
    		var i;
    		var x,y,w;
    		var vbk=MapManager.gi().vbk;
    		this.iNpcCount=0;
    		for(i=0;i<vbk.MAXVISUALBLOCK;i++)
    		{
    			if(vbk.vbs[i]!=null)
    			{
    				if(!vbk.vbs[i].bCurrentBlock)continue;
    				if(vbk.vbs[i].iX>0 && vbk.vbs[i].iY>0)
    				{
    					if(vbk.vbs[i].sNpcName.length>0)
    					{			
    						w=M3DFast$1.gi().GetTextWidth(vbk.vbs[i].sNpcName, 20)+20;
    						x= parseInt(this.iRate*vbk.vbs[i].iX)-w/2+SmallMap.iMapX;
    						y= parseInt(this.iRate*vbk.vbs[i].iY)-16+SmallMap.iMapY;
    						
    						if(x<SmallMap.iMapX)x=SmallMap.iMapX;
    						if(y<SmallMap.iMapY)y=SmallMap.iMapY;
    						if(x+w>SmallMap.iMapX+SmallMap.iMapW)x=SmallMap.iMapX+SmallMap.iMapW-w;
    						if(y+32>SmallMap.iMapY+SmallMap.iMapH)y=SmallMap.iMapY+SmallMap.iMapH-32;
    						if(this.iNpcPoint==i)
    						{//所前往的npc
    							M3DFast$1.gi().FillRect_2D(x-3,y-3,x+w+3,y+32+3, 0xffff0000);
    						}
    						//DrawMode.new_Text(x, y, w, vbk.vbs[i].sNpcName);
    						EasyMessage.new_Text(x, y, w);
    						M3DFast$1.gi().DrawText_2(x+w/2, y+16, vbk.vbs[i].sNpcName, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    						this.btn_npcs[this.iNpcCount].Move(x,y,w,32);
    						this.btn_npcs[this.iNpcCount].exts[0]=vbk.vbs[i].iX;
    						this.btn_npcs[this.iNpcCount].exts[1]=vbk.vbs[i].iY;
    						this.btn_npcs[this.iNpcCount].exts[2]=vbk.vbs[i].iDownFlag;
    						this.btn_npcs[this.iNpcCount].sName=vbk.vbs[i].sNpcName;
    						if(vbk.vbs[i].sNpcName=="前往郊外")
    						{
    							SmallMap.x_x=x;
    							SmallMap.x_y=y;
    							SmallMap.x_w=w;
    							SmallMap.x_h=32;
    						}
    						this.iNpcCount++;//30
    					}
    				}
    			}
    		}
    	}
    	

    	ProcTouch( msg, x, y)
    	{
    		var i;
    		var xx,yy;
    		
    		
    		if(this.btn_worldmap.ProcTouch(msg, x, y))
    		{
    			if(this.btn_worldmap.bCheck())
    			{
    				XStat$1.gi().PushStat(XStat$1.GS_WORLDMAP);
    			}
    			return true;
    		}
    		
    		if(XDefine$1.bInRect(x, y, SmallMap.iX, SmallMap.iY, SmallMap.iW, SmallMap.iH))
    		{//点击npc列表
    			for(i=0;i<this.iNpcCount;i++)
    			{
    				if(XDefine$1.bInRect(x, y, this.btn_npcs[i].iX, this.btn_npcs[i].iY, this.btn_npcs[i].iW, this.btn_npcs[i].iH))GmPlay$1.sop("3");
    				if(this.btn_npcs[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_npcs[i].bCheck())
    					{
    								if(MySell.gi().bSelling)
    								{
    									EasyMessage.easymsg.AddMessage("摆摊中不能行走");
    								}
    								else if(MyTeam$1.bNoTeam() || MyTeam$1.bTeamLeader() || MyTeam$1.bAway())
    								{//没队伍，或是队长，才能走
    									if(MapManager.gi().mfy.findway(GmMe$1.me.iX,GmMe$1.me.iY,this.btn_npcs[i].exts[0],this.btn_npcs[i].exts[1]))
    									{
    										GmPlay$1.sop("check again start");
    										if(MapManager.gi().mfy.checkagain())
    										{//前往npc
    											EasyMessage.easymsg.AddMessage("自动寻路："+this.btn_npcs[i].sName);
    											MapManager.gi().vbk.iNpcX=this.btn_npcs[i].exts[0];
    											MapManager.gi().vbk.iNpcY=this.btn_npcs[i].exts[1];
    											MapManager.gi().vbk.iGoToNpcFlag=this.btn_npcs[i].exts[2];
    											GmMe$1.me.start(MapManager.gi().mfy.iPath,MapManager.gi().mfy.iPathDeep);
    											this.iNpcPoint=i;
    										}
    										else GmPlay$1.sop("check again end2");
    									}
    								}
    								XStat$1.gi().PopStat(1);
    								return true;
    					}
    				}
    			}
    		}
    		else if(msg==3)XStat$1.gi().PopStat(1);
    		this.iNpcPoint=-1;
    		var m_map=MapManager.gi();
    		if(XDefine$1.bInRect(x, y, SmallMap.iMapX, SmallMap.iMapY, SmallMap.iMapW, SmallMap.iMapH))
    		{//点击在小地图内，直接走过去
    			if(this.iFindWayOnce<=0 && !MySell.gi().bSelling)
    			{
    				if(MyTeam$1.bNoTeam() || MyTeam$1.bTeamLeader() || MyTeam$1.bAway())
    				{////没队伍，或是队长，才能走
    					xx= parseInt(1.0*(x-SmallMap.iMapX)/this.iRate);//转换为真实地图坐标
    					yy= parseInt(1.0*(y-SmallMap.iMapY)/this.iRate);
    					SteeringWheel.sw.bAutoRun=false;
    					SteeringWheel.sw.bLocked=false;
    					if(m_map.mfy.findway(GmMe$1.me.iX,GmMe$1.me.iY,xx,yy))
    					{
    						GmPlay$1.sop("check again start");
    						if(m_map.mfy.checkagain())
    						{
    							MapManager.gi().vbk.iGoToNpcFlag=-1;
    							MapManager.gi().vbk.iGoToNpcId=-1;
    							GmPlay$1.sop("check again end1");
    							GmMe$1.me.start(m_map.mfy.iPath,m_map.mfy.iPathDeep);
    						}
    						else GmPlay$1.sop("check again end2");
    					}
    					else
    					{
    						SteeringWheel.sw.bLocked=true;
    						SteeringWheel.sw.iLockX=xx-(MapManager.gi().iOffx+GmMe$1.me.iX)+SteeringWheel.sw.iX;
    						SteeringWheel.sw.iLockY=yy-(MapManager.gi().iOffy+GmMe$1.me.iY)+SteeringWheel.sw.iY;
    						SteeringWheel.sw.bAutoRun=true;
    					}
    					this.iFindWayOnce++;
    				}
    			}
    		}
    		return false;
    	}
    }

    SmallMap.iX,SmallMap.iY,SmallMap.iW,SmallMap.iH;
    SmallMap.iMapX,SmallMap.iMapY;
    SmallMap.iMapW,SmallMap.iMapH;
    SmallMap.x_x;SmallMap.x_y;SmallMap.x_w;SmallMap.x_h;

    class WorldMap extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=800;
    		this.iH=480;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx1(GmPlay$1.xani_ui3);
    		this.btn_close.InitButton("统一关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-60-5, this.iY, 60, 60);
    	}

    	 Draw()
    	{
    		if(WorldMap.ipid1<0)WorldMap.ipid1=M3DFast$1.gi().LoadFromFile("bk/ba.xxx",-1,false);
    		if(WorldMap.ipid2<0)WorldMap.ipid2=M3DFast$1.gi().LoadFromFile("bk/bb.xxx",-1,false);
    		
    		DrawMode$1.Frame2_MD(this.iX, this.iY, this.iW, this.iH);
    		M3DFast$1.gi().DrawImageEx(0, this.iX, this.iY, WorldMap.ipid1, 0, 0, 512, 480, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawImageEx(0, this.iX+512, this.iY, WorldMap.ipid2, 0, 0, 800-512, 480, 101, 1, 1, 0, 0, 0);
    //		GmPlay.xani_ui2.DrawAnima(this.iX, this.iY, "世界地图",0);
    		this.btn_close.Draw();
    	}
    	 ProcTouch( msg, x, y)
    	{
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }

    WorldMap.ipid1=-1;
    WorldMap.ipid2=-1;

    class FastGetin_uc  extends BaseClass{
    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.btn_autogetin=new XButton(GmPlay$1.xani_ui3);
    //		this.btn_autogetin.sName="UC登陆";
    		this.btn_autogetin.InitButton("登录按钮");
    		this.bLogined=false;
    	}
    	Draw()
    	{
    //		MainMenu.dpics(1);
    		GmPlay$1.xani_ui3.DrawAnimaEx((GmConfig$1.SCRW-354)/2, GmConfig$1.SCRH/2-204, "登陆logo", 0, 101, 1,1, 0, 0, 0);

    		this.btn_autogetin.Move((GmConfig$1.SCRW-170)/2, 300, 170, 65);
    		this.btn_autogetin.Draw();
    		
    		if(!this.bLogined)
    		{
    			this.bLogined=true;
    			PublicInterface.gi().Login();
    		}
    	}
    	 ProcTouch( msg, x, y)
    	{
    		if(this.btn_autogetin.ProcTouch(msg, x, y))
    		{
    			if(this.btn_autogetin.bCheck())
    			{
    //				EasyMessage.easymsg.AddMessage("此功能暂未开发");
    				PublicInterface.gi().Login();
    			}
    		}
    		
    		return false;
    	}
    }

    class Logo extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		iStatType=XStat$1.GS_LOGO;
    		
    		this.pani=ani;
    		this.pm3f=M3DFast$1.xm3f;
    		this.iDelay=40;
    		
    		this.iLogoId1=M3DFast$1.gi().LoadFromFile("bk/ca.xxx",-1,false);
    		this.iLogoId2=M3DFast$1.gi().LoadFromFile("bk/cb.xxx",-1,false);
    		this.iW=480;
    		this.iH=320;
    	}
    	Draw()
    	{
    		this.pm3f.FillRect_2D(0, 0, GmConfig$1.SCRW, GmConfig$1.SCRH, 0xff000000);
    		this.pm3f.DrawImageEx(0, 0, 0, this.iLogoId1, 0, 0, 512, 480, 101, 1,1, 0, 0, 0);
    		this.pm3f.DrawImageEx(0, 512, 0, this.iLogoId2, 0, 0, 800-512, 480, 101, 1,1, 0, 0, 0);
    //		this.pm3f.DrawText(0, 0, "LOGO"+this.iDelay, 0xffffffff);
    	//	this.pani.DrawAnima(GmConfig.SCRW/2,GmConfig.SCRH/2, "Logo",0);
    		this.iDelay--;
    		if(this.iDelay<=0 && Logo.bInited)
    		{
    			XStat$1.gi().PopStat(1);
    //			XStat.gi().PushStat(XStat.GS_FASTLOGIN);
    			XStat$1.gi().PushStat(XStat$1.GS_LEADPAGE);
    		}
    		if(GameData$1.bAutoGetInForDebug)
    		{
    			XStat$1.gi().PopStat(1);
    			XStat$1.gi().PushStat(XStat$1.GS_LOGIN);
    			XStat$1.gi().oCurrentView.in_user.sDetail="user";
    			XStat$1.gi().oCurrentView.in_pass.sDetail="pass";
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		return false;
    	}
    }
    Logo.bInited=false;
    /*
    import M3DFast from "../../engine/graphics/M3DFast"
    import XAnima from "../../engine/graphics/XAnima"

    	XAnima this.pani;
    	M3DFast this.pm3f;
    	
    	public MainMenu( ani)
    	{
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    	}
    	Draw()
    	{
    		this.pm3f.FillRect_2D(0, 0, this.pm3f.imf.SCRW, this.pm3f.imf.SCRH, 0xff000000);
    		this.pm3f.DrawText(0, 0, "LOGO", 0xffffffff);
    	}
    	public boolean ProcTouch( msg, x, y)
    	{
    		return false;
    	}
     
    */

    class CreateRole extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.WHEELGAP=1000;
    		this.WHEELMAX=this.WHEELGAP*6;
    		 this.school_special=[
    			"物理输出、点杀","高敏、封系、控制","辅助、奶妈、复活、恢复",
    			"物理输出、群攻","最高法系伤害、群秒(但目标数量较少)","封印、解封、控制",	
    			"较高法系伤害、群秒(目标数量多)","固定伤害、随机群秒、辅助、持续恢复","单体高伤、复活、持续蓝恢复、封印"];

    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.bDown=false;
    		this.iWheel=this.WHEELGAP/2;
    		this.iSelectPoint=0;
    		
    		this.in_nick=new XInput(ani);
    		this.bCanRand=true;
    		this.iRandNameDelay=0;
    		this.btn_randname=new XButtonEx2$1(GmPlay$1.xani_nui1);
    		this.btn_randname.InitButton("随机按钮");
    		this.btn_randname.Move(706*GmConfig$1.SCRW/1280, 634, 48, 48);
    		
    		this.btn_create=new XButtonEx2$1(GmPlay$1.xani_nui1);
    		this.btn_create.InitButton("创建按钮");
    		this.btn_create.Move(GmConfig$1.SCRW-126-25, 576, 126, 128);
    		
    		this.btn_back=new XButtonEx2$1(GmPlay$1.xani_nui1);
    		this.btn_back.InitButton("返回按钮");
    		this.btn_back.Move(25, 576, 126, 128);
    		
    		this.aa_roles=new Array(6);//
    		this.aa_weapons=new Array(6);//
    		for(i=0;i<6;i++)
    		{
    			this.aa_roles[i]=new AnimaAction();
    			GmPlay$1.xani_newrole[i].InitAnimaWithName("站立_下", this.aa_roles[i]);
    		}
    	}
    	wheeldraw( wheel)
    	{
    		var i,j,k,m;
    		var lor;//-1left，1right
    		while(wheel<0)wheel+=this.WHEELMAX;
    		wheel%=this.WHEELMAX;
    		for(i=0;i<6;i++)
    		{
    			if(i*this.WHEELGAP<=wheel && wheel<=(i+1)*this.WHEELGAP)
    			{
    				this.iSelectPoint=i;//当前指向人物
    				break;
    			}
    		}
    		//画出6个人物
    		for(m=0;m<2;m++)
    		{
    			for(i=0;i<6;i++)
    			{
    				j=i*this.WHEELGAP+this.WHEELGAP/2;//正中位置
    				k=Math.abs(j-wheel);//距离
    				if(j<wheel)lor=-1;
    				else lor=1;
    				if(k>this.WHEELMAX/2)
    				{
    					k=Math.abs(j+this.WHEELMAX-wheel);
    					if(j+this.WHEELMAX<wheel)lor=-1;
    					else lor=1;
    				}
    				if(k>this.WHEELMAX/2)
    				{
    					k=Math.abs(j-this.WHEELMAX-wheel);
    					if(j-this.WHEELMAX<wheel)lor=-1;
    					else lor=1;
    				}//365,575
    				var ttt=300*GmConfig$1.SCRW/1280;
    				if(k<this.WHEELGAP)
    				{//边上到中间过渡,,100%<>50%
    					if(m==1)
    					{
    						GmPlay$1.xani_nui1.DrawAnimaEx(558*GmConfig$1.SCRW/1280+lor*ttt*k/this.WHEELGAP, 544-100*k/this.WHEELGAP, "人物原画", i, 101                                  , 0.65+0.35*(this.WHEELGAP-k)/this.WHEELGAP, 0.65+0.35*(this.WHEELGAP-k)/this.WHEELGAP, 
    												  0, -2,-2);
    					}
    				}
    				else if(k<this.WHEELGAP*2)
    				{//没有到边上过渡
    					if(m==0)
    					{
    						GmPlay$1.xani_nui1.DrawAnimaEx(558*GmConfig$1.SCRW/1280+lor*ttt                , 544-100                , "人物原画", i, 100*(this.WHEELGAP*2-k)/this.WHEELGAP, 0.65                                     , 0.65                                     , 
    												  0, -2,-2);
    					}
    				}
    			}
    		}
    	}
    	Draw()
    	{
    		var i,j;
    		
    		CreateRole.drawback();
    		
    		this.wheeldraw(this.iWheel+(this.bDown?(this.iLockX-this.iMoveX)*2:0));
    		if(!this.bDown)
    		{
    			while(this.iWheel<0)this.iWheel+=this.WHEELMAX;
    			this.iWheel%=this.WHEELMAX;
    			
    			i=this.iSelectPoint*this.WHEELGAP+this.WHEELGAP/2;
    			j=100;
    			if(this.iWheel<i-j)this.iWheel+=j;
    			else if(this.iWheel>i+j)this.iWheel-=j;
    			else this.iWheel=i;
    		}
    		
    		GmPlay$1.xani_nui1.DrawAnima(557*GmConfig$1.SCRW/1280-(557-512),15, "种族性别",this.iSelectPoint);
    		
    		for(i=0;i<3;i++)
    		{//右侧可选门派描述
    			j=parseInt(this.iSelectPoint/2)*3+i;
    			M3DFast$1.gi().DrawTextEx(1137*GmConfig$1.SCRW/1280, 47+i*106, GameData$1.sSchools[j+1], 0xffffffff, SystemOperate.WordSize(20), 101, 1, 1, 0, -2, -2);
    			FormatString.gi().Format(this.school_special[j], SystemOperate.WordSize(120)*GmConfig$1.SCRW/1280, SystemOperate.WordSize(20));
    //			FormatString.gi().FormatEx(this.school_special[j], SystemOperate.WordSize(120), SystemOperate.WordSize(20), 3, 0xff000000, 0);
    			FormatString.gi().Draw(1076*GmConfig$1.SCRW/1280, 72+i*106);
    		}
    		
    		GmPlay$1.xani_nui1.DrawAnimaEx(1140*GmConfig$1.SCRW/1280,525, "选中角色底", GmPlay$1.iDelay, 101, 0.5, 0.5, 0, -2, -2);
    		this.aa_roles[this.iSelectPoint].Draw(1140*GmConfig$1.SCRW/1280,525);
    		this.aa_roles[this.iSelectPoint].NextFrame();
    		
    		this.in_nick.Move(365*GmConfig$1.SCRW/1280, 629,330*GmConfig$1.SCRW/1280, 56);
    		
    		if(this.in_nick.sDetail.length<=0)M3DFast$1.gi().DrawTextEx(536*GmConfig$1.SCRW/1280,657,"角  色  昵  称",0x70ffffff,SystemOperate.WordSize(33), 101,1,1,0,-2,-2);
    		else M3DFast$1.gi().DrawTextEx(536*GmConfig$1.SCRW/1280,657,this.in_nick.sDetail,0xffffffff,SystemOperate.WordSize(30), 101,1,1,0,-2,-2);
    		if(this.iRandNameDelay<=0)
    		{
    			if(this.bCanRand)this.btn_randname.Draw();
    		}
    		else this.iRandNameDelay--;
    //		this.in_nick.DrawText();
    		this.in_nick.onscr();
    		
    		this.btn_create.Draw();
    		this.btn_back.Draw();
    	}

    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(y<570)
    		{
    			if(msg==1)
    			{
    				this.bDown=true;
    				this.iLockX=x;
    				this.iMoveX=x;
    			}
    		}
    		if(this.bDown)
    		{
    			if(msg==2)
    			{
    				this.iMoveX=x;
    			}
    			if(msg==3)
    			{
    				this.iWheel+=(this.iLockX-this.iMoveX)*2;
    				this.bDown=false;
    			}
    		}
    		if(this.iRandNameDelay<=0 && this.bCanRand)
    		{
    			if(this.btn_randname.ProcTouch(msg, x, y))
    			{
    				if(this.btn_randname.bCheck())
    				{
    					this.iRandNameDelay=20;
    					this.bCanRand=false;
    					GmProtocol$1.gi().s_GetRandName(this.iSelectPoint%2);
    				}
    				return true;
    			}
    		}
    		this.in_nick.ProcTouch(msg, x, y);
    		
    		if(this.btn_create.ProcTouch(msg, x, y))
    		{
    			if(this.btn_create.bCheck())
    			{//检测输入昵称是否正确，发送创建信息
    				if(!CreateRole.bCheckNick(this.in_nick.sDetail,4,24))
    				{//昵称格式有问题
    					EasyMessage.easymsg.AddMessage("请填写正确的昵称");
    				}
    				else
    				{//昵称没问题,申请注册
    					GmProtocol$1.gi().s_CreateRole(XRecordFast.iLastSector,
    							XRecordFast.iLastSever,
    							this.in_nick.sDetail, this.iSelectPoint%2, this.iSelectPoint/2);
    					XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    //					((Loading1)(XStat.gi().LastStat(0))).sDetail="创建中...";
    				}
    			}
    			return true;
    		}
    		if(this.btn_back.ProcTouch(msg, x, y))
    		{
    			if(this.btn_back.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}

    }
    CreateRole.res_bk=-1;
    CreateRole.drawback=function()
    {
    	if(CreateRole.res_bk<0)CreateRole.res_bk=M3DFast$1.gi().LoadFromFile("datapackage/others/createrole.png",-1,true);
    	M3DFast$1.gi().DrawImageEx(0, 0, 0, CreateRole.res_bk, 0, 0, 1280, 720, 101, SystemOperate.BASEW/1280, 1, 0, 0, 0);
    };

    CreateRole.GetRandName=function( pls)
    {
    	if (XStat$1.gi().LastStatType(0) != XStat$1.GS_CREATEROLE)return;
    	var cr=XStat$1.gi().LastStat(0);
    	cr.in_nick.sDetail=pls.GetNextString();
    	cr.in_nick.OpenInput();
    	cr.bCanRand=true;
    };

    CreateRole.bCheckNick=function( s, min, max)
    {
    	var i;
    	var buf=GU.utf8_to_gb2312a(s);
    	if(buf.length<min || buf.length>max)return false;
    	for(i=0;i<buf.length;i++)
    	{
    			if(buf[i]=='\\'.charCodeAt(0))return false;
    			if(buf[i]=='/'.charCodeAt(0))return false;
    			if(buf[i]=='|'.charCodeAt(0))return false;
    //				if(buf[i]>='a' && buf[i]<='z')continue;
    //				if(buf[i]>='A' && buf[i]<='Z')continue;
    //				if(buf[i]>='0' && buf[i]<='9')continue;
    //				return false;
    	}
    	return true;

    };

    class _ROLELIST {
    /*	public int iRid;
    	public String sName;
    	public int iSex;
    	public int iRace;
    //	public String sSs;
    	
    	public int iStat;//服务器状态,0维护中，1可登录
    	public String sSectorName;//区名称
    	public String sSeverName;//服务器名称
    	
    	public XAnima xani;
    	public AnimaAction aa;*/
    	
    	constructor()
    	{
    		this.sName="";
    		this.aa=new AnimaAction();
    //		sSs="";
    	}
    }

    class StartGame  extends BaseClass{

    	constructor()
    	{
    		super();
    		this.btn_startgame=new XButtonEx2$1(GmPlay$1.xani_local);
    		this.btn_startgame.InitButton("登陆游戏");
    		this.btn_startgame.Move(GmConfig$1.SCRW/2, GmConfig$1.SCRH/2+200, 50, 50);
    		this.btn_startgame.SetCheckRect(GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2+200-100,200,200);
    		
    		this.bLogined=false;
    	}

    	Draw()
    	{
    		drawback(true);
    		this.btn_startgame.Draw();
    		
    		if(!this.bLogined)
    		{
    			this.bLogined=true;
    			PublicInterface.gi().Login();
    		}
    	}

    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_startgame.ProcTouch(msg, x, y))
    		{
    			if(this.btn_startgame.bCheck())
    			{//打开登陆
    				PublicInterface.gi().Login();
    			}
    		}
    		return false;
    	}
    }
    	StartGame.res_bk=-1;
    	StartGame.drawback=function( withside)
    	{
    		if(StartGame.res_bk<0)StartGame.res_bk=M3DFast$1.gi().LoadFromFile("datapackage/others/back.png",-1,true);
    		M3DFast$1.gi().DrawImageEx(0, 0, 0, StartGame.res_bk, 0, 0, 1280, 720, 101, GmConfig$1.SCRW/1280, 1, 0, 0, 0);
    		
    		if(withside)
    		{
    			M3DFast$1.gi().DrawImageEx(0, 0, 720-100, StartGame.res_bk,       0, 720, 1280, 99, 101, GmConfig$1.SCRW/1280, 1, 0, 0, 0);
    			//M3DFast.gi().DrawImageEx(0, (GmConfig.SCRW-1280)/2, 720-100, StartGame.res_bk, 0, 720, 1280, 99, 101, GmConfig.SCRW/1280, 1, 180, GmConfig.SCRW/2, 720-50);
    		}
    	};

    class SelectRole extends BaseClass{
    	
    	constructor( ani)
    	{
    		super();
    		this.MAXROLECOUNT=6;
    		this.posX = new Int32Array(5);
    		this.posY = new Int32Array(5);

    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.posX[0] = 130; this.posY[0] = 480;
    		this.posX[1] = 330; this.posY[1] = 380;
    		this.posX[2] = 530; this.posY[2] = 480;
    		this.posX[3] = 730; this.posY[3] = 380;
    		this.posX[4] = 930; this.posY[4] = 480;
    		
    		
    		this.rlist=new Array(this.MAXROLECOUNT);//
    		for(i=0;i<this.MAXROLECOUNT;i++)
    		{
    			this.rlist[i]=new _ROLELIST(); 
    		}
    		
    		this.btn_select=new Array(this.MAXROLECOUNT+1);//
    		for(i=0;i<this.MAXROLECOUNT+1;i++)
    		{
    			this.btn_select[i]=new XButton(ani);
    			this.btn_select[i].bSingleButton=true;
    			this.btn_select[i].sName="";
    //			this.btn_select[i].Move(this.pm3f.imf.SCRW/2-200, 20+i*90, 400, 80);
    		}
    		this.iRoleCount=0;
    		
    		this.btn_changesever=new XButtonEx2$1(GmPlay$1.xani_nui1);
    		this.btn_changesever.InitButton("选服按钮");
    		this.btn_changesever.sName="选择服务器";
    		this.btn_changesever.Move(GmConfig$1.OX+919, 50, 183, 54);
    		
    		this.btn_createrole=new XButtonEx2$1(GmPlay$1.xani_nui1);
    		this.btn_createrole.InitButton("选服按钮");
    		this.btn_createrole.sName="创建角色";
    		this.btn_createrole.Move(GmConfig$1.OX+1057, 299, 183, 54);
    		
    		this.btn_startgame=new XButtonEx2$1(GmPlay$1.xani_nui1);
    		this.btn_startgame.InitButton("选服按钮");
    		this.btn_startgame.sName="进入游戏";
    		this.btn_startgame.Move(GmConfig$1.OX+1057, 391, 183, 54);
    		
    		this.se=new StarEffect();
    		this.se.Init2(0, 0, 80, 50);

    		this.iSelectRolePoint=0;
    	}
    	

    	Draw()
    	{
    		StartGame.drawback(true);
    		M3DFast$1.gi().FillRect_2D(0, 0, GmConfig$1.SCRW, GmConfig$1.SCRH, 0x50000000);
    		GmPlay$1.xani_nui1.DrawAnima(GmConfig$1.OX+186, 47, "区服条",0);
    		M3DFast$1.gi().DrawTextEx(GmConfig$1.OX+380, 74, this.sSectorName, 0xffffffff, SystemOperate.WordSize(30), 101, 1, 1, 0, -2, -2);
    		M3DFast$1.gi().DrawTextEx(GmConfig$1.OX+700, 74, this.sSeverName, 0xffffffff, SystemOperate.WordSize(30), 101, 1, 1, 0, -2, -2);
    		
    		this.btn_changesever.Draw();
    		
    		DrawMode$1.local_frame1(GmConfig$1.OX+1046, 262, 207, 219);
    		this.btn_createrole.Draw();
    		this.btn_startgame.Draw();
    		var i;

    		for(i=0;i<5;i++)
    		{
    			GmPlay$1.xani_nui1.DrawAnimaEx(GmConfig$1.OX+this.posX[i], this.posY[i], "站台", 0, 101, 1.0, 1.0, 0, 0, 0);
    			if(this.iSelectRolePoint==i)
    			{
    				GmPlay$1.xani_nui1.DrawAnimaEx(GmConfig$1.OX+this.posX[i], this.posY[i], "选中角色底", GmPlay$1.iDelay, 101, 1.0, 1.0, 0, 0, 0);
    				this.se.Draw(GmConfig$1.OX+this.posX[i], this.posY[i]);
    			}
    			this.btn_select[i].Move(GmConfig$1.OX+this.posX[i]-120/2, this.posY[i]-250, 120, 300);
    			if(i<this.iRoleCount)
    			{
    				this.rlist[i].aa.Draw(GmConfig$1.OX+this.posX[i], this.posY[i]);
    				this.rlist[i].aa.NextFrame();
    //				this.rlist[i].xani.DrawAnimaEx(this.posX[i], this.posY[i], this.rlist[i].aa,101,2,2,0,0,0);
    //				this.rlist[i].xani.NextFrame(this.rlist[i].aa);
    				
    				GmPlay$1.xani_nui1.DrawAnimaEx(GmConfig$1.OX+this.posX[i], this.posY[i]-250, "名字框", 0, 101, 1.0, 1.0, 0, 0, 0);
    				this.pm3f.DrawTextEx(GmConfig$1.OX+this.posX[i], this.posY[i]-250, this.rlist[i].sName, 0xffffffff, SystemOperate.WordSize(30), 101, 1, 1, 0, -2, -2);
    			}
    			if(this.iSelectRolePoint==i)
    			{
    				this.se.DrawFront(GmConfig$1.OX+this.posX[i], this.posY[i]);
    			}
    		}
    		
    /*		for(i=0;i<this.iRoleCount+1;i++)
    		{
    			this.btn_select[i].Draw();
    			if(i<this.iRoleCount)
    			{
    				this.pm3f.DrawText(this.btn_select[i].iX+5+50, this.btn_select[i].iY+5, this.rlist[i].sName+"(号码:"+this.rlist[i].iRid+")", 0xffffffff);
    				this.pm3f.DrawText(this.btn_select[i].iX+5+50, this.btn_select[i].iY+5+30, this.rlist[i].sSs, 0xffffffff);
    			}
    		}*/
    		if(GameData$1.bAutoGetInForDebug)
    		{
    			XStat$1.gi().PopStat(1);
    			XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    			GmProtocol$1.gi().s_StartGame(this.rlist[0].iRid);
    			GmMe$1.me.iSex=this.rlist[0].iSex;
    			GmMe$1.me.iRace=this.rlist[0].iRace;
    			GmMe$1.me.bsc=true;
    		}
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.btn_createrole.ProcTouch(msg, x, y))
    		{
    			if(this.btn_createrole.bCheck())
    			{
    				if(this.iRoleCount>=5)EasyMessage.easymsg.AddMessage("最多创建5个角色");
    				else XStat$1.gi().PushStat(XStat$1.GS_CREATEROLE);
    			}
    			return true;
    		}
    		if(this.btn_startgame.ProcTouch(msg, x, y))
    		{
    			if(this.btn_startgame.bCheck())
    			{
    				if(this.iRoleCount<=0)EasyMessage.easymsg.AddMessage("请先创建角色");
    				else if(this.iSelectRolePoint<0 || this.iSelectRolePoint>=this.iRoleCount)EasyMessage.easymsg.AddMessage("请先选择角色");
    				else
    				{
    					XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    					GmProtocol$1.gi().s_StartGame(this.rlist[this.iSelectRolePoint].iRid);
    					GmMe$1.me.iSex=this.rlist[this.iSelectRolePoint].iSex;
    					GmMe$1.me.iRace=this.rlist[this.iSelectRolePoint].iRace;
    					GmMe$1.me.bsc=true;
    				}
    			}
    			return true;
    		}
    		if(this.btn_changesever.ProcTouch(msg, x, y))
    		{
    			if(this.btn_changesever.bCheck())
    			{
    				GmProtocol$1.gi().s_GetSeverList(XRecordFast.iLastSector);
    				XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    			}
    			return true;
    		}
    		for(i=0;i<5;i++)
    		{
    			if(this.btn_select[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_select[i].bCheck())
    				{
    					if(i<this.iRoleCount)
    					{//选择了角色,开始游戏
    						if(this.rlist[i].iStat==0)
    						{
    							EasyMessage.easymsg.AddMessage("服务器维护中,进入失败");
    						}
    						else
    						{/*
    							XStat.gi().PushStat(XStat.GS_LOADING1);
    							GmProtocol.gi().s_StartGame(this.rlist[i].iRid);
    							engtst.mgm.gameing.me.GmMe.me.iSex=this.rlist[i].iSex;
    							engtst.mgm.gameing.me.GmMe.me.iRace=this.rlist[i].iRace;
    							engtst.mgm.gameing.me.GmMe.me.bsc=true;*/
    							if(this.iSelectRolePoint==i)
    							{
    								XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    								GmProtocol$1.gi().s_StartGame(this.rlist[this.iSelectRolePoint].iRid);
    								GmMe$1.me.iSex=this.rlist[this.iSelectRolePoint].iSex;
    								GmMe$1.me.iRace=this.rlist[this.iSelectRolePoint].iRace;
    								GmMe$1.me.bsc=true;
    							}
    							else this.iSelectRolePoint=i;
    						}
    					}
    					else if(i>=this.iRoleCount)
    					{//新建角色
    						XStat$1.gi().PushStat(XStat$1.GS_CREATEROLE);
    	//					XStat.gi().PushStat(XStat.GS_SELECTSEVER);
    	//					XStat.gi().PushStat(XStat.GS_LOADING1);
    	//					GmProtocol.gi().s_GetSeverList(0);
    					}
    					return true;
    				}
    			}
    		}
    		return false;
    	}
    }

    SelectRole.Open=function( pls)
    	{
    		var i;
    		var sr;
    		while(XStat$1.gi().iXStat==XStat$1.GS_LOADING1)XStat$1.gi().PopStat(1);
    		while(XStat$1.gi().iXStat==XStat$1.GS_SELECTSEVER)XStat$1.gi().PopStat(1);
    		if(XStat$1.gi().iXStat==XStat$1.GS_SELECTROLE)sr=XStat$1.gi().LastStat(0);
    		else sr=XStat$1.gi().PushStat(XStat$1.GS_SELECTROLE);
    		
    		sr.iSectorId=pls.GetNextInt();
    		sr.sSectorName=pls.GetNextString();
    		sr.iSeverId=pls.GetNextInt();
    		sr.sSeverName=pls.GetNextString();
    		
    		XRecordFast.iHaveSeverRecord=1;
    		XRecordFast.iLastSector=sr.iSectorId;
    		XRecordFast.iLastSever=sr.iSeverId;
    		
    		sr.iRoleCount=pls.GetNextByte();
    		for(i=0;i<sr.iRoleCount;i++)
    		{//
    			sr.rlist[i].iRid=pls.GetNextInt();
    			
    			sr.rlist[i].sName=pls.GetNextString();
    			sr.rlist[i].iSex=pls.GetNextByte();
    			sr.rlist[i].iRace=pls.GetNextByte();//种族
    			
    //			sr.rlist[i].xani=GmPlay.xani_role[sr.rlist[i].iRace*2+sr.rlist[i].iSex];
    //			GmPlay.sop("psr.rlist[i].iRace*2+psr.rlist[i].iSex="+(sr.rlist[i].iRace*2+sr.rlist[i].iSex));
    //			sr.rlist[i].xani.InitAnimaWithName("站立_下", sr.rlist[i].aa);
    			
    			sr.rlist[i].aa=GmPlay$1.xani_nui1.InitAnimaWithName("展示"+(sr.rlist[i].iRace*2+sr.rlist[i].iSex), null);
    //			sr.rlist[i].aa=GmPlay.xani_newrole[sr.rlist[i].iRace*2+sr.rlist[i].iSex].InitAnimaWithName("站立_下", null);
    			
    			sr.rlist[i].iStat=1;
    //			ts1=pls.GetNextString();
    //			ts2=pls.GetNextString();
    //			sr.rlist[i].sSectorName=pls.GetNextString();//区名称
    //			sr.rlist[i].iStat=pls.GetNextByte();//服务器状态，0维护中，1正常
    //			sr.rlist[i].sSeverName=pls.GetNextString();//服务器名称
    //			psr.rlist[i].sSs=ts1+","+ts2;
    			pls.GetNextByte();//busy
    		}
    		if(sr.iRoleCount<=0)sr.iSelectRolePoint=-1;
    		else sr.iSelectRolePoint=0;
    	};

    class CreateFuBen extends BaseClass{
    	
    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=800;
    		this.iH=480;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_ui3);
    		this.btn_close.InitButton("统一关闭按钮");
    		this.btn_close.Move(this.iX+748, this.iY, 60, 60);
    		
    		this.ifblist=new Int32Array(16);//
    		this.btn_fuben=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.btn_fuben[i]=new XButton(GmPlay$1.xani_ui3);
    			this.btn_fuben[i].InitButton("统一按钮2");
    			this.btn_fuben[i].Move(this.iX+60, this.iY+40+i*50, 128, 32);
    			this.btn_fuben[i].iNameSize=20;
    		}
    		this.iPoint=0;
    		
    		this.btn_create=new XButtonEx1(GmPlay$1.xani_ui3);
    		this.btn_create.InitButton("统一按钮1");
    		this.btn_create.Move(this.iX+620, this.iY+390, 117, 40);
    		this.btn_create.sName="创 建";
    		
    		this.btn_detail=new XButtonEx1(GmPlay$1.xani_ui3);
    		this.btn_detail.InitButton("统一按钮1");
    		this.btn_detail.Move(this.iX+620, this.iY+310, 117, 40);
    		this.btn_detail.sName="修改简介";
    		this.btn_detail.iNameSize=25;
    		
    		this.sDetail="无";
    		
    		this.in_detail=new XInput(GmPlay$1.xani_frame);
    		this.in_detail.Move(GmConfig$1.SCRW, GmConfig$1.SCRH, 10,10);
    		this.in_detail.sDetail="";
    		this.bEditingName=false;
    	}

    	Draw()
    	{
    		var i;
    		DrawMode$1.ui3_BaseFrame4(this.iX, this.iY, "创", "建","副","本");
    		this.btn_close.Draw();
    		
    		for(i=0;i<this.iCount;i++)
    		{
    			if(this.iPoint==i)
    			{
    				GmPlay$1.xani_ui3.DrawAnimaEx(this.iX+45, this.iY+30+i*50+5, "选中背景",0,101,0.9,0.71,0,0,0);
    			}
    			this.btn_fuben[i].sName=GmPlay$1.de_fuben.strValue(this.ifblist[i], 0, 1);
    			
    			this.btn_fuben[i].Draw();
    		}
    		GmPlay$1.xani_ui3.DrawAnima(this.iX+200, this.iY, "大框分割线",0);
    		
    		//具体描述
    		DrawMode$1.ui3_Frame2(this.iX+230, this.iY+40, 500, 120);
    		FormatString.gi().Format(GmPlay$1.de_fuben.strValue(this.ifblist[this.iPoint], 0, 2), 480, 20);
    		FormatString.gi().Draw(this.iX+230+10, this.iY+40+10);
    		
    		//难度，副本时间，
    		//人数区间，等级区间，创建花费，
    		DrawMode$1.ui3_Text1(this.iX+230, this.iY+180, 100, 130, "人数限制", GmPlay$1.de_fuben.strValue(this.ifblist[this.iPoint], 0, 3)+"~"+GmPlay$1.de_fuben.strValue(this.ifblist[this.iPoint], 0, 4));
    		DrawMode$1.ui3_Text1(this.iX+230+270, this.iY+180, 100, 130, "等级限制", GmPlay$1.de_fuben.strValue(this.ifblist[this.iPoint], 0, 5)+"~"+GmPlay$1.de_fuben.strValue(this.ifblist[this.iPoint], 0, 6));
    		DrawMode$1.ui3_Text1(this.iX+230, this.iY+180+50, 100, 130, "创建花费", GmPlay$1.de_fuben.strValue(this.ifblist[this.iPoint], 0, 8)+"金钱");
    		
    		M3DFast$1.gi().DrawText_2(this.iX+230, this.iY+180+100, "团队简介:", 0xffffe0a0, 20, 101, 1, 1, 0, 0, 0, 3, 0xff000000);
    		DrawMode$1.ui3_Frame2(this.iX+230, this.iY+180+100+30, 350, 120);
    		FormatString.gi().Format(this.sDetail, 330, 20);
    		FormatString.gi().Draw(this.iX+230+10, this.iY+180+100+30+10);
    		
    		this.btn_detail.Draw();
    		this.btn_create.Draw();
    		
    		if(this.bEditingName)
    		{
    			this.in_detail.onscr();
    			this.sDetail=this.in_detail.sDetail;
    			if(this.in_detail.bFinished)
    			{//编辑完成//发送到服务器改名
    //				GmPlay.sop("send name");
    				this.bEditingName=false;
    				this.in_detail.bFinished=false;
    //				GmProtocol.gi().s_ChangePetName(ppet.iPid, in_name.sDetail);
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<this.iCount;i++)
    		{
    			if(this.btn_fuben[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_fuben[i].bCheck())
    				{
    					this.iPoint=i;
    				}
    				return true;
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		if(this.btn_create.ProcTouch(msg, x, y))
    		{
    			if(this.btn_create.bCheck())
    			{
    				GmProtocol$1.gi().s_CreateFuBen(this.ifblist[this.iPoint],this.sDetail);
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		
    		if(this.btn_detail.ProcTouch(msg, x, y))
    		{
    			if(this.btn_detail.bCheck())
    			{
    				this.in_detail.Move(this.btn_detail.iX,this.btn_detail.iY,this.btn_detail.iW,this.btn_detail.iH);
    				this.in_detail.sDetail=this.sDetail;
    				this.in_detail.OpenInput();
    				this.in_detail.ProcTouch(3,GmConfig$1.SCRW+1,GmConfig$1.SCRH+1);
    				this.bEditingName=true;
    			}
    		}
    		return false;
    	}
    }

    class _SEVERLIST
    {/*
    	public int iSeverId;
    	public String sName;
    	public int iStatus;//0维护，1正常，3爆满，5爆满无法进入
    	public int this.iSectorId;
    	public boolean bNew;
    //	public int iTuiJian;//是否推荐
    */
    }

    class SelectSever extends BaseClass{

    	constructor( ani)
    	{
    		super();
    		 this.MAXSECTORCOUNT=10;
    		 this.MAXSEVERCOUNT=10;
    		this.iW=800;
    		this.iH=480;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		this.sSectorName=new Array(this.MAXSECTORCOUNT);//
    		this.iSectorId=new Int32Array(this.MAXSECTORCOUNT);//
    		
    		this.slist=new Array(this.MAXSEVERCOUNT);//
    		this.tjlist=new Array(this.MAXSEVERCOUNT);//
    		for(i=0;i<this.MAXSEVERCOUNT;i++)
    		{
    			this.slist[i]=new _SEVERLIST();
    			this.tjlist[i]=new _SEVERLIST();
    		}
    		this.iSeverCount=0;
    		this.iSectorCount=0;
    		this.iCurrentSectorId=0;
    		
    		this.btn_sector=new Array(this.MAXSECTORCOUNT);//
    		for(i=0;i<this.MAXSECTORCOUNT;i++)
    		{
    			this.btn_sector[i]=new XButtonEx2$1(GmPlay$1.xani_nui1);
    			this.btn_sector[i].InitButton("选区按钮1");
    			this.btn_sector[i].sName="";
    			this.btn_sector[i].Move(GmConfig$1.OX+200, 270+i*73, 183, 54);
    		}
    		
    		this.btn_sever=new Array(this.MAXSEVERCOUNT);//
    		this.btn_tj=new Array(this.MAXSEVERCOUNT);//
    		for(i=0;i<this.MAXSEVERCOUNT;i++)
    		{
    			this.btn_sever[i]=new XButtonEx2$1(GmPlay$1.xani_nui1);
    			this.btn_sever[i].InitButton("选服按钮2");
    			this.btn_sever[i].sName="";
    			this.btn_sever[i].Move(GmConfig$1.OX+457+(i%3)*220,253+parseInt(i/3)*86, 178, 51);
    			
    			this.btn_tj[i]=new XButtonEx2$1(GmPlay$1.xani_nui1);
    			this.btn_tj[i].InitButton("选服按钮2");
    			this.btn_tj[i].sName="";
    			this.btn_tj[i].Move(GmConfig$1.OX+457+(i%3)*220,112+(i/3)*86, 178, 51);
    		}
    		
    		this.btn_create=new XButtonEx2$1(GmPlay$1.xani_nui1);
    		this.btn_create.InitButton("确定服务器");
    		this.btn_create.Move(GmConfig$1.SCRW-126-25, 576, 126, 128);
    		
    		this.btn_back=new XButtonEx2$1(GmPlay$1.xani_nui1);
    		this.btn_back.InitButton("返回按钮");
    		this.btn_back.Move(25, 576, 126, 128);
    		
    		this.se=new StarEffect();
    		this.se.Init1(0, 0, 178, 50, 100);
    	}

    	InitSeverList( pls)
    	{
    		var i,j;
    		this.iCurrentSectorId=pls.GetNextInt();//区号
    		this.iSectorCount=pls.GetNextByte();//区数量
    		for(i=0;i<this.iSectorCount;i++)
    		{//区列表
    			this.sSectorName[i]=pls.GetNextString();
    			this.iSectorId[i]=pls.GetNextInt();
    			this.btn_sector[i].bMouseIn=false;
    			this.btn_sector[i].bMouseDown=false;
    			this.btn_sector[i].sName=this.sSectorName[i];
    //			GmPlay.sop(""+this.sSectorName[i]);
    		}
    		/////////////服务器列表
    		this.iCurrentSeverId=-1;
    		for(i=0;i<100;i++)
    		{
    			j=pls.GetNextByte();
    			if(j!=1)break;
    			this.slist[i].sName=pls.GetNextString();
    			this.slist[i].iSeverId=pls.GetNextInt();
    			this.slist[i].iStatus=pls.GetNextByte();
    //			this.slist[i].iTuiJian=pls.GetNextByte();
    			this.btn_sever[i].sName=this.slist[i].sName;
    			switch(this.slist[i].iStatus)
    			{
    			case 0://维护
    			default://其他异常状态
    				this.btn_sever[i].InitButton("选服按钮a");
    				break;
    			case 1://良好
    				this.btn_sever[i].InitButton("选服按钮b");
    				break;
    			case 2://繁忙
    				this.btn_sever[i].InitButton("选服按钮c");
    				break;
    			case 3://火爆
    			case 5://火爆到无法进入
    				this.btn_sever[i].InitButton("选服按钮d");
    				break;
    			}
    			if(this.slist[i].iSeverId==XRecordFast.iLastSever)this.iCurrentSeverId=XRecordFast.iLastSever;
    			this.slist[i].bNew=false;
    		}
    		this.iSeverCount=i;
    		if(this.iCurrentSeverId==-1 && this.iSeverCount>0)this.iCurrentSeverId=this.slist[0].iSeverId;
    		///////////推荐服列表
    		for(i=0;i<100;i++)
    		{
    			j=pls.GetNextByte();
    			if(j!=2)break;
    			this.tjlist[i].sName=pls.GetNextString();
    			this.tjlist[i].iSectorId=pls.GetNextInt();
    			this.tjlist[i].iSeverId=pls.GetNextInt();
    			this.tjlist[i].iStatus=pls.GetNextByte();
    //			this.slist[i].iTuiJian=pls.GetNextByte();
    			this.btn_tj[i].sName=this.tjlist[i].sName;
    			switch(this.tjlist[i].iStatus)
    			{
    			case 0://维护
    			default://其他异常状态
    				this.btn_tj[i].InitButton("选服按钮a");
    				break;
    			case 1://良好
    				this.btn_tj[i].InitButton("选服按钮b");
    				break;
    			case 2://繁忙
    				this.btn_tj[i].InitButton("选服按钮c");
    				break;
    			case 3://火爆
    			case 5://火爆到无法进入
    				this.btn_tj[i].InitButton("选服按钮d");
    				break;
    			}
    			if(this.tjlist[i].iSeverId==XRecordFast.iLastSever)this.iCurrentSeverId=XRecordFast.iLastSever;
    		}
    		this.iTJCount=i;
    		
    //		GmPlay.sop(":=============");
    		var k;
    		for(i=0;i<100;i++)
    		{
    			j=pls.GetNextByte();
    //			GmPlay.sop(":============="+j);
    			if(j!=3)break;
    			k=pls.GetNextInt();//iSeverId
    			for(j=0;j<this.iSeverCount;j++)
    			{
    				if(this.slist[j].iSeverId==k)
    				{
    					this.slist[j].bNew=true;
    					break;
    				}
    			}
    		}
    //		GmPlay.sop("zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz="+this.iCurrentSectorId+"?="+this.iSectorId[0]);
    	}
    	Draw()
    	{
    		var i,j;
    		StartGame.drawback(true);
    		
    		DrawMode$1.local_frame2((GmConfig$1.SCRW-950)/2, (GmConfig$1.SCRH-560)/2, 950, 560);
    		
    		GmPlay$1.xani_nui1.DrawAnimaEx(GmConfig$1.OX+640, 80, "背景框2", 8, 101, 1, 1, 0, 0, 0);
    		
    		GmPlay$1.xani_nui1.DrawAnimaEx(GmConfig$1.OX+300,137, "推荐区标题", 0, 101, 1, 1, 0, 0, 0);
    		
    		GmPlay$1.xani_local.DrawAnimaEx(GmConfig$1.OX+140, 210, "分隔条", 0,101,1.0*1000/400,1,0,0,0);
    		GmPlay$1.xani_local.DrawAnimaEx(GmConfig$1.OX+420, 210, "分隔条", 0,101,1,1,90,GmConfig$1.OX+420, 210);
    		for(i=-6;i<6;i++)GmPlay$1.xani_nui1.DrawAnimaEx(GmConfig$1.OX+640+76*i, 180, "底纹", 0, 101, 1, 1, 0, 0, 0);
    		
    		GmPlay$1.xani_local.DrawAnimaEx(GmConfig$1.OX+291, 239, "方向指引", 0,101,1,1,0,0, 0);
    		GmPlay$1.xani_local.DrawAnimaEx(GmConfig$1.OX+291, 586, "方向指引", 0,101,1,1,180,-1, -1);
    		for(i=0;i<this.iSectorCount;i++)
    		{
    			if(this.iSectorId[i]==this.iCurrentSectorId)
    			{
    				GmPlay$1.xani_nui1.DrawAnimaEx(this.btn_sector[i].iX, this.btn_sector[i].iY, "选区按钮2", 0, 101, 1, 1, 0, 0, 0);
    				this.btn_sector[i].DrawText(0,0);
    			}
    			else this.btn_sector[i].Draw();
    		}
    		this.se.Logic();
    		for(i=0;i<this.iSeverCount;i++)
    		{
    			this.btn_sever[i].Draw();
    			if(this.slist[i].iSeverId==this.iCurrentSeverId)
    			{//画选中效果框
    				this.se.Draw(this.btn_sever[i].iX-20, this.btn_sever[i].iY);
    			}
    			if(this.slist[i].bNew)
    			{//画新服标记
    				GmPlay$1.xani_nui4.DrawAnima(this.btn_sever[i].iX+160-44+15, this.btn_sever[i].iY-15, "新服提示",0);
    			}
    		}
    		for(i=0;i<this.iTJCount;i++)
    		{
    			this.btn_tj[i].Draw();
    			if(this.tjlist[i].iSeverId==this.iCurrentSeverId)
    			{//画选中效果框
    				this.se.Draw(this.btn_tj[i].iX-20, this.btn_tj[i].iY);
    			}
    		}
    		
    		i=GmConfig$1.OX+560;j=580;
    		GmPlay$1.xani_nui1.DrawAnimaEx(i, j, "状态说明", 0,101,1,1,0,0, 0);
    		GmPlay$1.xani_nui1.DrawAnimaEx(i+30, j+16, "状态说明", 1,101,1,1,0,0, 0);
    		M3DFast$1.gi().DrawTextEx(i+50, j+16, "维护", 0xffffffff, 20, 101, 1, 1, 0, 0, -2);
    		i+=124;
    		GmPlay$1.xani_nui1.DrawAnimaEx(i+30, j+16, "状态说明", 2,101,1,1,0,0, 0);
    		M3DFast$1.gi().DrawTextEx(i+50, j+16, "良好", 0xffffffff, 20, 101, 1, 1, 0, 0, -2);
    		i+=124;
    		GmPlay$1.xani_nui1.DrawAnimaEx(i+30, j+16, "状态说明", 3,101,1,1,0,0, 0);
    		M3DFast$1.gi().DrawTextEx(i+50, j+16, "繁忙", 0xffffffff, 20, 101, 1, 1, 0, 0, -2);
    		i+=124;
    		GmPlay$1.xani_nui1.DrawAnimaEx(i+30, j+16, "状态说明", 4,101,1,1,0,0, 0);
    		M3DFast$1.gi().DrawTextEx(i+50, j+16, "火爆", 0xffffffff, 20, 101, 1, 1, 0, 0, -2);

    		this.btn_create.Draw();
    		this.btn_back.Draw();

    		
    		if(GameData$1.bAutoGetInForDebug)
    		{
    			this.iCurrentSeverId=this.slist[1].iSeverId;
    			GmProtocol$1.gi().s_GetRoleList(this.iCurrentSectorId,this.iCurrentSeverId);
    			XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    		}
    	}

    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.btn_create.ProcTouch(msg, x, y))
    		{
    			if(this.btn_create.bCheck())
    			{//选择了服务器进入
    				for(i=0;i<this.iSeverCount;i++)
    				{
    					if(this.iCurrentSeverId==this.slist[i].iSeverId)
    					{
    						if(this.slist[i].iStatus==0)EasyMessage.easymsg.AddMessage("服务器维护中，不能进入");
    						else
    						{//根据所选服务器，获取角色列表
    							GmProtocol$1.gi().s_GetRoleList(this.iCurrentSectorId,this.iCurrentSeverId);
    							XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    							return true;
    						}
    					}
    				}
    				for(i=0;i<this.iTJCount;i++)
    				{
    					if(this.iCurrentSeverId==this.tjlist[i].iSeverId)
    					{
    						if(this.tjlist[i].iStatus==0)EasyMessage.easymsg.AddMessage("服务器维护中，不能进入");
    						else
    						{//根据所选服务器，获取角色列表
    							GmProtocol$1.gi().s_GetRoleList(this.tjlist[i].iSectorId,this.iCurrentSeverId);
    							XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    							return true;
    						}
    					}
    				}
    				EasyMessage.easymsg.AddMessage("请先选中服务器");
    			}
    			return true;
    		}
    		if(this.btn_back.ProcTouch(msg, x, y))
    		{
    			if(this.btn_back.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		for(i=0;i<this.iSectorCount;i++)
    		{
    			if(this.btn_sector[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_sector[i].bCheck())
    				{//换区
    					if(this.iSectorId[i]!=this.iCurrentSectorId)
    					{
    						XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    						GmProtocol$1.gi().s_GetSeverList(this.iSectorId[i]);
    					}
    				}
    			}
    		}
    		for(i=0;i<this.iSeverCount;i++)
    		{
    			if(this.btn_sever[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_sever[i].bCheck())
    				{//选择了某个服务器，进入创建角色
    					this.iCurrentSeverId=this.slist[i].iSeverId;
    				}
    			}
    		}
    		for(i=0;i<this.iTJCount;i++)
    		{
    			if(this.btn_tj[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_tj[i].bCheck())
    				{//选择了某个服务器，进入创建角色
    					this.iCurrentSeverId=this.tjlist[i].iSeverId;
    				}
    			}
    		}
    		return false;
    	}
    }
    SelectSever.Open=function( pls)
    {
    	var ss;
    	while(XStat$1.gi().iXStat==XStat$1.GS_LOADING1)XStat$1.gi().PopStat(1);
    	if(XStat$1.gi().iXStat==XStat$1.GS_LEADPAGE)XStat$1.gi().PopStat(1);
    	if(XStat$1.gi().iXStat==XStat$1.GS_SELECTSEVER)ss=XStat$1.gi().LastStat(0);
    	else ss=XStat$1.gi().PushStat(XStat$1.GS_SELECTSEVER);
    	
    	ss.InitSeverList(pls);
    };

    class FastGetin_local  extends BaseClass{
    		
    	constructor()
    	{
    		super();
    		this.MAXDESTORYUSER=5;
    		var i;
    		this.pani=GmPlay$1.xani_ui;
    		this.pm3f=GmPlay$1.xani_ui.pm3f;
    		
    		this.btn_history=new Array(this.MAXDESTORYUSER);//
    		this.btn_delete=new Array(this.MAXDESTORYUSER);//
    		for(i=0;i<this.MAXDESTORYUSER;i++)
    		{
    			this.btn_history[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_history[i].InitButton("主菜单按钮2");
    			
    			this.btn_delete[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_delete[i].sName="x";
    			this.btn_delete[i].InitButton("中按钮1");
    		}
    		this.InitUserBtn();
    		
    		this.btn_autogetin=new XButton(GmPlay$1.xani_ui);
    		this.btn_autogetin.sName="渠道登陆";
    		this.btn_autogetin.InitButton("主菜单按钮2");
    		
    		this.btn_regist=new XButton(GmPlay$1.xani_ui);
    		this.btn_regist.sName="注册帐号";
    		this.btn_regist.InitButton("主菜单按钮2");
    		
    		this.btn_login=new XButton(GmPlay$1.xani_ui);
    		this.btn_login.sName="登录";
    		this.btn_login.InitButton("主菜单按钮2");
    	}
    	InitUserBtn()
    	{
    		var i;
    		for(i=0;i<GmPlay$1.x_record.iUserCount;i++)
    		{
    			this.btn_history[i].sName=GmPlay$1.x_record.sUser[i];
    		}
    	}
    	Draw()
    	{
    		var i,j,k;
    		StartGame.drawback(true);
    		GmPlay$1.xani_local.DrawAnimaEx(240,150, "七国标题", 0, 101, 1,1, 0, 0, 0);

    		this.InitUserBtn();
    		j=0;
    		k=218;
    //		for(i=0;i<GmPlay.x_record.iUserCount;i++)
    //		{
    //			this.btn_history[i].Move(offx+offw/2-k/2, offy+j*60, k, 50);
    //			this.btn_history[i].Draw();
    //			
    //			this.btn_delete[i].Move(offx+offw/2-k/2+k-51, offy+j*60+6, 40, 40);
    //			this.btn_delete[i].Draw();
    //			j++;
    //		}
    		
    //		this.btn_autogetin.Move(offx+offw/2-k/2, offy+j*60, k, 50);
    //		this.btn_autogetin.Draw();
    //		j++;
    //		this.btn_regist.Move(offx+offw/2-k/2, offy+j*60, k, 50);
    //		this.btn_regist.Draw();
    //		j++;
    //		this.btn_login.Move(offx+offw/2-k/2, offy+j*60, k, 50);
    //		this.btn_login.Draw();
    //		j++;
    		
    		for(i=0;i<GmPlay$1.x_record.iUserCount;i++)
    		{
    			this.btn_history[i].Move(GmConfig$1.SCRW/2-k/2, GmConfig$1.SCRH/2+j*60, k, 50);
    			this.btn_history[i].Draw();
    			
    			this.btn_delete[i].Move(GmConfig$1.SCRW/2+k/2-51, GmConfig$1.SCRH/2+j*60+6, 40, 40);
    			this.btn_delete[i].Draw();
    			j++;
    		}
    		this.btn_login.Move(GmConfig$1.SCRW/2-k/2, GmConfig$1.SCRH/2+j*60, k, 50);
    		this.btn_login.Draw();
    		
    		j++;
    		this.btn_regist.Move(GmConfig$1.SCRW/2-k/2, GmConfig$1.SCRH/2+j*60, k, 50);
    		this.btn_regist.Draw();
    		
    		if(GameData$1.bAutoGetInForDebug)
    		{
    			XStat$1.gi().PopStat(1);
    			XStat$1.gi().PushStat(XStat$1.GS_LOGIN);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i,j;
    		for(i=0;i<GmPlay$1.x_record.iUserCount;i++)
    		{
    			if(this.btn_delete[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_delete[i].bCheck())
    				{
    					GmPlay$1.x_record.iUserCount--;
    					for(j=i;j<GmPlay$1.x_record.iUserCount;j++)
    					{
    						GmPlay$1.x_record.sUser[j]=GmPlay$1.x_record.sUser[j+1];
    						GmPlay$1.x_record.sPass[j]=GmPlay$1.x_record.sPass[j+1];
    					}
    					this.InitUserBtn();
    					GmPlay$1.x_record.SaveTo(XDefine$1.RECORDFILENAME);
    					return true;
    				}
    			}
    			
    			if(this.btn_history[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_history[i].bCheck())
    				{
    					XStat$1.gi().PushStat(XStat$1.GS_LOGIN);
    					XStat$1.gi().oCurrentView.in_user.sDetail=GmPlay$1.x_record.sUser[i];
    					XStat$1.gi().oCurrentView.in_pass.sDetail=GmPlay$1.x_record.sPass[i];
    					XStat$1.gi().oCurrentView.in_user.OpenInput();
    					XStat$1.gi().oCurrentView.in_pass.OpenInput();
    					XStat$1.gi().oCurrentView.chk_saveuser.bTrue=GmPlay$1.x_record.bSaveUser;
    					XStat$1.gi().oCurrentView.chk_savepass.bTrue=GmPlay$1.x_record.bSavePass;
    					return true;
    				}
    			}
    		}
    		
    		if(this.btn_login.ProcTouch(msg, x, y))
    		{//登录
    			if(this.btn_login.bCheck())
    			{
    				XStat$1.gi().PushStat(XStat$1.GS_LOGIN);
    				((XStat$1.gi().oCurrentView)).in_user.sDetail="";
    				((XStat$1.gi().oCurrentView)).in_pass.sDetail="";
    				((XStat$1.gi().oCurrentView)).in_user.OpenInput();
    				((XStat$1.gi().oCurrentView)).in_pass.OpenInput();
    				((XStat$1.gi().oCurrentView)).chk_saveuser.bTrue=GmPlay$1.x_record.bSaveUser;
    				((XStat$1.gi().oCurrentView)).chk_savepass.bTrue=GmPlay$1.x_record.bSavePass;
    			}
    		}
    		if(this.btn_regist.ProcTouch(msg, x, y))
    		{//手动注册
    			if(this.btn_regist.bCheck())
    			{
    //				EasyMessage.easymsg.AddMessage("暂时关闭注册功能");
    				XStat$1.gi().PushStat(XStat$1.GS_REGIST);
    				((XStat$1.gi().oCurrentView)).in_user.sDetail="";
    				((XStat$1.gi().oCurrentView)).in_pass.sDetail="";
    			}
    		}
    		if(true)return false;
    		if(this.btn_autogetin.ProcTouch(msg, x, y))
    		{
    			if(this.btn_autogetin.bCheck())
    			{
    //				EasyMessage.easymsg.AddMessage("此功能暂未开发");
    				PublicInterface.gi().Login();
    			}
    		}
    		
    		return false;
    	}
    }

    class Regist_local  extends BaseClass{
    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.in_user=new XInput(this.pani);
    		this.in_user.Move(GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2-100, 300, 50);
    		this.in_user.sDetail="user";
    		
    		this.in_pass=new XInput(this.pani);
    		this.in_pass.Move(GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2-20, 300, 50);
    		this.in_pass.sDetail="pass";
    		
    		this.btn_regist=new XButton(ani);
    		this.btn_regist.sName="确定注册";
    		this.btn_regist.Move(GmConfig$1.SCRW/2-70, GmConfig$1.SCRH/2+80, 140, 50);
    		this.btn_regist.InitButton("大按钮4");
    		
    		this.iErrorDelay=0;
    	}
    	Draw()
    	{
    		this.pm3f.FillRect_2D(0, 0, GmConfig$1.SCRW, GmConfig$1.SCRH, 0xff202020);
    		this.pm3f.DrawText(0, 0, "注册帐号", 0xffffffff);

    		this.pm3f.DrawText(GmConfig$1.SCRW/2-200, GmConfig$1.SCRH/2-100+10, "账号:", 0xffffffff);
    		this.pm3f.DrawText(GmConfig$1.SCRW/2-200, GmConfig$1.SCRH/2-20+10, "密码:", 0xffffffff);
    		this.in_user.Draw();
    		this.in_pass.Draw();
    		this.btn_regist.Draw();

    		this.in_user.onscr();
    		this.in_pass.onscr();
    	}
    	ProcTouch( msg, x, y)
    	{
    		this.in_user.ProcTouch(msg, x, y);
    		this.in_pass.ProcTouch(msg, x, y);

    		if(this.btn_regist.ProcTouch(msg, x, y))
    		{
    			if(this.btn_regist.bCheck())
    			{//判断输入的是否复合帐号和密码规范
    				if(!Regist_local.bCheckString(this.in_user.sDetail,4,24))
    				{//帐号格式有误
    					this.iErrorDelay=30;
    					EasyMessage.easymsg.AddMessage("帐号格式有误");
    					this.sErrorDetail="帐号格式有误";
    				}
    				else if(!Regist_local.bCheckString(this.in_pass.sDetail,4,24))
    				{//密码格式有误
    					this.iErrorDelay=30;
    					EasyMessage.easymsg.AddMessage("密码格式有误");
    					this.sErrorDetail="密码格式有误";
    				}
    				else
    				{//没问题，提交到服务器，进入等待状态
    					GmProtocol$1.gi().s_Regist(this.in_user.sDetail, this.in_pass.sDetail);
    					XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    				}
    			}
    		}
    		return false;
    	}

    }
    Regist_local.bCheckString=function( s, min, max)
    {//判断字符串是否符合规范
    	var i;
    	var buf=GU.utf8_to_gb2312a(s);
    	if(buf.length<min || buf.length>max)return false;
    	for(i=0;i<buf.length;i++)
    	{
    		if(buf[i]>='a'.charCodeAt(0) && buf[i]<='z'.charCodeAt(0))continue;
    		if(buf[i]>='A'.charCodeAt(0) && buf[i]<='Z'.charCodeAt(0))continue;
    		if(buf[i]>='0'.charCodeAt(0) && buf[i]<='9'.charCodeAt(0))continue;
    		return false;
    	}

    	return true;
    };

    class Login_local  extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;

    		this.in_user=new XInput(this.pani);
    		this.in_user.Move(GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2-100, 200, 50);
    		this.in_user.sDetail="user";
    		this.in_user.OpenInput();

    		this.in_pass=new XInput(this.pani);
    		this.in_pass.Move(GmConfig$1.SCRW/2-100, GmConfig$1.SCRH/2-20, 200, 50);
    		this.in_pass.sDetail="pass";
    		this.in_pass.OpenInput();

    		this.btn_login=new XButton(ani);
    		this.btn_login.sName="确定登录";
    		this.btn_login.Move(GmConfig$1.SCRW/2-70, GmConfig$1.SCRH/2+60, 140, 50);
    		this.btn_login.InitButton("主菜单按钮2");

    		this.chk_saveuser=new XCheckBox(ani);
    		this.chk_saveuser.Move(GmConfig$1.SCRW/2+120, GmConfig$1.SCRH/2-100+5, 40, 40);
    		this.chk_saveuser.sDetail="";//"记住帐号";
    		this.chk_saveuser.InitBox("复选框");

    		this.chk_savepass=new XCheckBox(ani);
    		this.chk_savepass.Move(GmConfig$1.SCRW/2+120, GmConfig$1.SCRH/2-20+5, 40, 40);
    		this.chk_savepass.sDetail="";//"记住密码";
    		this.chk_savepass.InitBox("复选框");

    		this.iErrorDelay=0;
    	}
    	Draw()
    	{
    //		this.pm3f.FillRect_2D(0, 0, this.pm3f.imf.SCRW, this.pm3f.imf.SCRH, 0xff000000);
    //		this.pm3f.DrawText(0, 0, "登录", 0xffffffff);
    		var offx,offy;
    		
    		StartGame.drawback(true);
    		GmPlay$1.xani_local.DrawAnimaEx(240,150, "七国标题", 0, 101, 1,1, 0, 0, 0);

    		offx=GmConfig$1.SCRW/2-100;
    //		GmPlay.xani_back.DrawAnimaEx(0, 0, "大背景", 0, 101, 1.0f*GmConfig.SCRW/800, 1.0f*GmConfig.SCRH/480, 0, 0, 0);
    //		this.pm3f.FillRect_2D(offx, 0, offx+offw, GmConfig.SCRH, 0x50000000);
    //		GmPlay.xani_ui.DrawAnimaEx(offx+offw/2,20, "七国名", 0, 101, 1.0f*GmConfig.SCRW/800, 1.0f*GmConfig.SCRH/480, 0, 0, 0);
    		
    		offy=200;
    		GmPlay$1.xani_ui.DrawAnimaEx(offx-70,offy+55, "账号密码", 0, 101, 1.0, 1.0, 0, 0, 0);
    		GmPlay$1.xani_ui.DrawAnimaEx(offx+30,offy+50, "账号密码", 2, 101, 1.0, 1.0, 0, 0, 0);
    		this.in_user.Move(offx+30,offy+50, 215, 47);
    		this.in_user.DrawText();
    		this.chk_saveuser.Move(offx+30+215+10, offy+53, 40, 40);
    		this.chk_saveuser.Draw();
    		
    		offy=300;
    		GmPlay$1.xani_ui.DrawAnimaEx(offx-70,offy+55, "账号密码", 1, 101, 1.0, 1.0, 0, 0, 0);
    		GmPlay$1.xani_ui.DrawAnimaEx(offx+30,offy+50, "账号密码", 2, 101, 1.0, 1.0, 0, 0, 0);
    		this.in_pass.Move(offx+30,offy+50, 215, 47);
    		this.in_pass.DrawText();
    		this.chk_savepass.Move(offx+30+215+10, offy+53, 40, 40);
    		this.chk_savepass.Draw();

    		this.in_user.onscr();
    		this.in_pass.onscr();
    		
    //		DrawMode.DrawTextFrame1(this.in_user.iX, this.in_user.iY,this.in_user.iW);
    //		DrawMode.DrawTextFrame1(this.in_pass.iX, this.in_pass.iY,this.in_pass.iW);
    //		this.in_user.Draw();
    //		this.in_pass.Draw();
    //		this.chk_saveuser.Draw();
    //		this.chk_savepass.Draw();
    		
    		offy=450;
    		this.btn_login.Move(GmConfig$1.SCRW/2-218/2, offy, 218, 50);
    		this.btn_login.Draw();
    		
    		if(GameData$1.bAutoGetInForDebug)
    		{
    			XStat$1.gi().PopStat(1);
    			GmProtocol$1.gi().s_Login(this.in_user.sDetail, this.in_pass.sDetail);
    			XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    		}

    //		GmPlay.xani_nui1.DrawAnimaEx(500, 500, "人物原画", 0, 101,   1,  1,0, -2, -2);
    //		GmPlay.xani_nui1.DrawAnimaEx(500, 500, "人物原画", 0, 101, 0.5,0.5,0, 500, 500);
    	}
    	 ProcTouch( msg, x, y)
    	{
    		this.in_user.ProcTouch(msg, x, y);
    		this.in_pass.ProcTouch(msg, x, y);
    		
    		this.chk_saveuser.ProcTouch(msg, x, y);
    		this.chk_savepass.ProcTouch(msg, x, y);

    		if(this.btn_login.ProcTouch(msg, x, y))
    		{
    			if(this.btn_login.bCheck())
    			{//判断输入的是否复合帐号和密码规范
    				if(!Regist_local.bCheckString(this.in_user.sDetail,4,24))
    				{//帐号格式有误
    					this.iErrorDelay=30;
    					EasyMessage.easymsg.AddMessage("帐号格式有误");
    					this.sErrorDetail="帐号格式有误";
    				}
    				else if(!Regist_local.bCheckString(this.in_pass.sDetail,4,24))
    				{//密码格式有误
    					this.iErrorDelay=30;
    					EasyMessage.easymsg.AddMessage("密码格式有误");
    					this.sErrorDetail="密码格式有误";
    				}
    				else
    				{//没问题，提交到服务器，进入等待状态
    //					GmProtocol.gi().s_Login("", "");
    					GmProtocol$1.gi().s_Login(this.in_user.sDetail, this.in_pass.sDetail);
    					XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    					
    					if(this.chk_saveuser.bTrue)
    					{
    						GmPlay$1.x_record.sUser[0]=this.in_user.sDetail;
    						if(this.chk_savepass.bTrue)GmPlay$1.x_record.sPass[0]=this.in_pass.sDetail;
    						else GmPlay$1.x_record.sPass[0]="";
    						GmPlay$1.x_record.iUserCount=1;

    //						for(i=0;i<GmPlay.x_record.iUserCount;i++)
    //						{
    //							if(GmPlay.x_record.sUser[i]==this.in_user.sDetail)break;
    //						}
    //						if(i>=GmPlay.x_record.iUserCount)
    //						{
    //							i=GmPlay.x_record.iUserCount;
    //							GmPlay.x_record.iUserCount++;
    //							
    //							GmPlay.x_record.sUser[i]=this.in_user.sDetail;
    //						}
    //						
    //						if(this.chk_savepass.bTrue)
    //						{
    //							GmPlay.x_record.sPass[i]=this.in_pass.sDetail;
    //						}
    //						else GmPlay.x_record.sPass[i]="";
    						
    						GmPlay$1.x_record.bSaveUser=this.chk_saveuser.bTrue;
    						GmPlay$1.x_record.bSavePass=this.chk_savepass.bTrue;
    						
    						GmPlay$1.x_record.SaveTo(XDefine$1.RECORDFILENAME);
    					}
    				}
    			}
    		}
    		return false;
    	}
    }

    class ExitConfirm extends BaseClass{
    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		
    		this.iW=350;
    		this.iH=200;
    		
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_ok=null;
    		this.btn_cancel=null;
    	}
    	Draw()
    	{
    		if(!GmPlay$1.bInited)return;
    		if(this.btn_ok==null)
    		{
    			this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_nui3);
    			this.btn_ok.InitButton("内框按钮");
    			this.btn_ok.Move(this.iX+10,this.iY+this.iH-60, 70, 40);
    //			this.btn_ok.bSingleButton=true;
    			this.btn_ok.sName="确定";
    			
    			this.btn_cancel=new XButtonEx2$1(GmPlay$1.xani_nui3);
    			this.btn_cancel.InitButton("内框按钮");
    			this.btn_cancel.Move(this.iX+this.iW-90,this.iY+this.iH-60, 70, 40);
    //			this.btn_cancel.bSingleButton=true;
    			this.btn_cancel.sName="取消";
    		}
    		FormatString.gi().FormatEx("是否确定退出游戏", this.iW-40, 26, 0, 0, 30);
    //		pm3f.DrawText(0, pm3f.imf.SCRH-30, "Confirm", 0xffffffff);
    		
    //		pm3f.FillRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0xff000000);
    //		pm3f.DrawRect_2D(this.iX, this.iY, this.iX+this.iW, this.iY+this.iH, 0xffffffff);
    		this.iH=20+FormatString.gi().iH+20+55+20;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_ok.Move(this.iX+20,this.iY+this.iH-70, 98, 55);
    		this.btn_cancel.Move(this.iX+this.iW-98-20,this.iY+this.iH-70, 98, 55);
    		
    	//	DrawMode.Frame1_BR(this.iX, this.iY, this.iW, this.iH);
    		DrawMode.new_framewatch(this.iX, this.iY, this.iW, this.iH);
    		
    		FormatString.gi().Draw(this.iX+20, this.iY+20);
    		
    		this.btn_ok.Draw();
    		this.btn_cancel.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(!GmPlay$1.bInited)return false;
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    				PublicInterface.gi().Exit();
    			}
    		}
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		return false;
    	}
    }

    class KickOut extends BaseClass{
    	 constructor( ani)
    	{
    		super();
    		this.iW=300;
    		this.iH=200;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;

    		this.sDetail="点击确定关闭游戏";

    		this.btn_ok=null;
    	}
    	
    	Draw()
    	{
    		if(this.btn_ok==null)
    		{
    			this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_ok.sName="确定";
    			this.btn_ok.Move(this.iX + (this.iW - 90) / 2, this.iY + this.iH - 60 - 20, 90, 60);
    			this.btn_ok.InitButton("1号按钮90_60");
    		}
    		M3DFast$1.gi().FillRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH, 0x80000000);
    		M3DFast$1.gi().DrawRect_2D(this.iX,this.iY,this.iX+this.iW,this.iY+this.iH, 0xffffffff);
    		
    		// FormatString.gi().Format("#cffff00"+this.sDetail, this.iW-40, 20);
    		FormatString.gi().Format("#cffff00已掉线", this.iW-40, 20);
    		FormatString.gi().Draw(this.iX+20, this.iY+20);
    		
    		// this.btn_ok.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_ok==null)return false;
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{
    				PublicInterface.gi().Exit();
    			}
    		}
    		return false;
    	}
    }

    class Loading1 extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		this.iDelay=0;
    		
    		this.aa_loading=GmPlay$1.xani_ui.InitAnimaWithName("载入中", null);
    	}
    	Draw()
    	{
    		if(this.iDelay<0x80)this.iDelay+=15;
    		M3DFast$1.gi().FillRect_2D(0, 0, GmConfig$1.SCRW, GmConfig$1.SCRH, this.iDelay<<24);
    		this.aa_loading.Draw(GmConfig$1.SCRW/2, GmConfig$1.SCRH*3/5);
    		
    //		this.aa_loading.Draw(GmConfig.SCRW/2, GmConfig.SCRH*3/5,16);
    //		this.aa_loading.Draw(GmConfig.SCRW/2, GmConfig.SCRH*3/5,17);
    //		this.aa_loading.Draw(GmConfig.SCRW/2, GmConfig.SCRH*3/5,18);
    		this.aa_loading.NextFrame();
    	}
    	ProcTouch( msg, x, y)
    	{
    		return false;
    	}
    }

    //全屏地图切换载入
    class Loading2 extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		this.iStat=0;
    		this.iDelay=0;
    		
    		this.aa_loading=GmPlay$1.xani_ui.InitAnimaWithName("载入中", null);
    	}
    	Draw()
    	{
    //		this.pm3f.FillRect_2D(0, 0, GmConfig.SCRW, GmConfig.SCRH, 0xff303030);
    //		var i,j=5;
    //		this.iDelay++;
    //		if(this.iDelay>1)
    //		{
    //			this.iDelay=0;
    //			this.iStat++;
    //			this.iStat%=j;
    //		}
    //		for(i=0;i<j;i++)
    //		{
    //			if(this.iStat==i)GmPlay.xani_ui.DrawAnima(0+i*50, GmConfig.SCRH-50, "loading", 1);
    //			else GmPlay.xani_ui.DrawAnima(0+i*50, GmConfig.SCRH-50, "loading", 0);
    //		}
    		M3DFast$1.gi().FillRect_2D(0, 0, GmConfig$1.SCRW, GmConfig$1.SCRH, 0xff000000);
    		this.aa_loading.Draw(GmConfig$1.SCRW/2, GmConfig$1.SCRH*3/5);
    		
    		this.aa_loading.NextFrame();
    	}
    	ProcTouch( msg, x, y)
    	{
    		return false;
    	}
    }

    class Message1 extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    	}

    	Draw()
    	{
    		this.pm3f.FillRect_2D(0, 0, GmConfig$1.SCRW, GmConfig$1.SCRH, 0xff000000);
    		this.pm3f.DrawText(0, 0, "Message", 0xffffffff);
    		this.pm3f.DrawText(100, GmConfig$1.SCRH/2, this.sDetail, 0xffffffff);
    		if(parseInt(this.iDelay/5)%2==0)this.pm3f.DrawText(100, GmConfig$1.SCRH/2+50, "按任意键继续...", 0xffffffff);
    		this.iDelay++;
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(msg==TouchManager.TOUCH_UP)XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    Message1.Open=function( detail)
    {
    	var msg=XStat$1.gi().PushStat(XStat$1.GS_MESSAGE1);
    	msg.sDetail =detail;
    };

    class SevConfirm extends BaseClass{
    	
    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=350;
    		this.iH=200;
    		
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_nui3);
    		this.btn_ok.InitButton("内框按钮");
    		this.btn_ok.Move(this.iX+10,this.iY+this.iH-60, 70, 40);
    //		this.btn_ok.bSingleButton=true;
    //		this.btn_ok.sName="确定";
    		
    		this.btn_cancel=new XButtonEx2$1(GmPlay$1.xani_nui3);
    		this.btn_cancel.InitButton("内框按钮");
    		this.btn_cancel.Move(this.iX+this.iW-90,this.iY+this.iH-60, 70, 40);
    //		this.btn_cancel.bSingleButton=true;
    //		this.btn_cancel.sName="取消";
    	}
    	Draw()
    	{
    		FormatString.gi().FormatEx(this.sMsg, this.iW-40, 26, 0, 0, 30);

    		this.iH=20+FormatString.gi().iH+20+55+20;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_ok.Move(this.iX+20,this.iY+this.iH-70, 98, 55);
    		this.btn_cancel.Move(this.iX+this.iW-98-20,this.iY+this.iH-70, 98, 55);
    		
    	//	DrawMode.Frame1_BR(this.iX, this.iY, this.iW, this.iH);
    		DrawMode.new_framewatch(this.iX, this.iY, this.iW, this.iH);
    		
    		FormatString.gi().Draw(this.iX+20, this.iY+20);
    		
    		this.btn_ok.Draw();
    		this.btn_cancel.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{
    				GmProtocol$1.gi().s_SevConfirm(this.sCmd);
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		return false;
    	}
    }
    SevConfirm.Open=function( pls)
    {
    	if(XStat$1.gi().LastStatType(0)!=XStat$1.GS_CONFIRM2)
    	{
    		var psc=XStat$1.gi().PushStat(XStat$1.GS_CONFIRM2);
    		psc.sMsg=pls.GetNextString();
    		psc.btn_ok.sName=pls.GetNextString();
    		psc.btn_cancel.sName=pls.GetNextString();
    		psc.sCmd=pls.GetNextString();
    	}
    };

    class _RANKLIST
    {
        constructor()
        {

        }
    //	public int iRank;
    //	public String sName;
    //	public int iSchoolId;
    //	public int iScore;
    }

    class PeakFight extends BaseClass{
    	 constructor( ani)
    	{
    		super();
    		this.campscore=new Int32Array(3);
    		this.ranklist=new _RANKLIST(6);
    		for(var i=0;i<6;i++)this.ranklist[i]=new _RANKLIST();
    		this.iW=950;
    		this.iH=570;
    		this.iX=(GmConfig.SCRW-this.iW)/2;
    		this.iY=(GmConfig.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2(GmPlay.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.sAttack=new Array(2);
    		this.btn_attack=new Array(2);
    		for(i=0;i<2;i++)
    		{
    			this.btn_attack[i]=new XButtonEx2(GmPlay.xani_button);
    			this.btn_attack[i].InitButton("巅峰决战进攻173_94");
    		}
    		
    		this.list_rank=new UIList(0,4,490,50+40*6);
    		this.list_rank.SetTitle(0, "排名",80 ,false);
    		this.list_rank.SetTitle(1, "玩家名称", 160,false);
    		this.list_rank.SetTitle(2, "门派", 100,false);
    		this.list_rank.SetTitle(3, "个人积分", 150,false);
    		
    		this.iCountDown=[[0,0,0],[0,0,0]];
    	}

    	_open( pls)
    	{
    		var i;
    		
    		this.campscore[0]=pls.GetNextInt();
    		this.campscore[1]=pls.GetNextInt();
    		this.campscore[2]=pls.GetNextInt();
    		
    		for(i=0;i<5;i++)
    		{
    			this.ranklist[i].iRank=i+1;
    			this.ranklist[i].sName=pls.GetNextString();
    			this.ranklist[i].iSchoolId=pls.GetNextByte();
    			this.ranklist[i].iScore=pls.GetNextInt();
    		}
    		this.ranklist[5].iRank=pls.GetNextInt()+1;
    		this.ranklist[5].sName=GmMe.me.sName;
    		this.ranklist[5].iSchoolId=GmMe.me.rbs.iSchoolId;
    		this.ranklist[5].iScore=pls.GetNextInt();
    		this.iMyCamp=pls.GetNextInt();
    		
    		this.iCountDown[0][0]=pls.GetNextInt();//进攻倒计时上限
    		this.iCountDown[0][1]=pls.GetNextInt();//进攻倒计时剩余
    		this.iCountDown[0][2]=XDefine.get_ms();
    		
    		this.iCountDown[1][0]=pls.GetNextInt();//防守倒计时上限
    		this.iCountDown[1][1]=pls.GetNextInt();//防守倒计时剩余
    		this.iCountDown[1][2]=XDefine.get_ms();
    	}
    	
    	Draw()
    	{
    		var i,j,k;
    		var m;
    		
    		DrawMode.frame_type4("主背景框a150_150", this.iX,this.iY, this.iW, this.iH, 150, 150);
    		DrawMode.frame_type4("子背景框b35_35", this.iX+30, this.iY+30, this.iW-60, this.iH-60, 35, 35);
    		
    		this.btn_close.Draw();
    		
    		for(i=0;i<3;i++)
    		{
    			GmPlay.xani_frame.DrawAnima(this.iX+100+i*260, this.iY+50, "巅峰决战国家框172_84",0);
    			GmPlay.xani_icon.DrawAnima(this.iX+100+i*260, this.iY+50, "巅峰决战国"+(i+1),0);
    			M3DFast.gi().DrawTextEx(this.iX+100+i*260+115, this.iY+50+42, ""+this.campscore[i], 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		}
    		
    		this.list_rank.BeginDraw(this.iX+100, this.iY+150);
    		for(i=0;i<6;i++)
    		{
    			if(this.ranklist[i].iScore>0)
    			{
    				this.list_rank.DrawUnit(0,i, ""+this.ranklist[i].iRank);
    				this.list_rank.DrawUnit(1,i, this.ranklist[i].sName);
    				this.list_rank.DrawUnit(2,i, GameData.sSchools[this.ranklist[i].iSchoolId]);
    				this.list_rank.DrawUnit(3,i, ""+this.ranklist[i].iScore);
    			}
    		}
    		this.list_rank.FinishDraw();
    		
    		switch(this.iMyCamp)
    		{
    		case 0:
    			this.sAttack[0]="伐楚";
    			this.sAttack[1]="伐齐";
    			break;
    		case 1:
    			this.sAttack[0]="伐秦";
    			this.sAttack[1]="伐齐";
    			break;
    		case 2:
    			this.sAttack[0]="伐秦";
    			this.sAttack[1]="伐楚";
    			break;
    		}
    		for(i=0;i<2;i++)
    		{
    			this.btn_attack[i].Move(this.iX+620, this.iY+180+i*130, 173, 94);
    			this.btn_attack[i].Draw();
    			GmPlay.xani_icon.DrawAnima(this.btn_attack[i].iX+10, this.btn_attack[i].iY+8, "巅峰决战旗",0);
    			M3DFast.gi().DrawText_2(this.btn_attack[i].iX+100, this.btn_attack[i].iY+47, this.sAttack[i],0xffffff00,30,101,1,1,0,-2,-2,4,0xff00244d);
    		}
    		
    		DrawMode.frame_type1("文本框a20_40", this.iX+this.iW/2-650/2, this.iY+this.iH-90, 650, 20);
    		
    		DrawMode.frame_type1("活跃进度外框a20_24", this.iX+50, this.iY+this.iH-100, 850, 20);
    		
    		j=this.iY+this.iH-100+2;
    		m=this.iCountDown[0][1]*1000-(XDefine.get_ms()-this.iCountDown[0][2]);
    		if(m<0)m=0;
    		M3DFast.gi().DrawTextEx(this.iX+this.iW/2-60, this.iY+this.iH-80+4, "进攻冷却倒计时："+m/1000+"秒", 0xffffff00, 24, 101, 1, 1, 0, -3, 0);
    		k= (m*425/this.iCountDown[0][0]/1000);
    		i=this.iX+50+2+425-k;
    		DrawMode.frame_type1("活跃进度内框a10_18", i,j, k, 10);
    		i=this.iX+50+425+2;
    		m=this.iCountDown[1][1]*1000-(XDefine.get_ms()-this.iCountDown[1][2]);
    		if(m<0)m=0;
    		M3DFast.gi().DrawTextEx(this.iX+this.iW/2+60, this.iY+this.iH-80+4, "防守冷却倒计时："+m/1000+"秒", 0xffffff00, 24, 101, 1, 1, 0, -1, 0);
    		k= (m*425/this.iCountDown[1][0]/1000);
    		DrawMode.frame_type1("活跃进度内框a10_18", i,j, k, 10);
    		
    		GmPlay.xani_icon.DrawAnima(this.iX+this.iW/2-126/2, this.iY+this.iH-125, "巅峰决战狮子头",0);
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat.gi().PopStat(1);
    			}
    			return true;
    		}
    		for(i=0;i<2;i++)
    		{
    			if(this.btn_attack[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_attack[i].bCheck())
    				{
    					GmProtocol.gi().s_SevConfirm("巅峰之战进攻"+i);
    				}
    			}
    		}
    		return false;
    	}
    }

    PeakFight.Open=function( pls)
    {
        var pk=XStat.gi().FindStat(XStat.GS_PEAKFIGHT);
        if(pk==null)pk=XStat.gi().PushStat(XStat.GS_PEAKFIGHT);
        pk._open(pls);
    };

    class AQDoing extends BaseClass{
    	
    	
    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.sAnswers=new Array(4);
    		
    		this.iW=750;
    		this.iH=540;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_sel=new Array(4);
    		for(i=0;i<4;i++)
    		{
    			this.btn_sel[i]=new XButtonEx2$1(GmPlay$1.xani_nui3);
    			this.btn_sel[i].InitButton("分类标签按钮");
    		}
    		this.btn_exit=new XButtonEx2$1(GmPlay$1.xani_nui3);
    		this.btn_exit.InitButton("分类标签按钮");
    		this.btn_exit.sName="退出答题";
    		this.btn_exit.Move(this.iX+this.iW-40-190,this.iY+this.iH-40-40,190,40);
    		
    		this.btn_get=new XButtonEx2$1(GmPlay$1.xani_ngoods);
    		this.btn_get.InitButton("礼包1");
    //		this.btn_get.sName="领奖";
            this.bWin=false;
            this._bigletter=["A.","B.","C.","D."];
    	}
    	
    	
    	Draw()
    	{
    		var i;
    		var offx,offy;
    		var offw=200;
    		var offh=200;
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		offx=this.iX+30;
    		offy=this.iY+30;
    		DrawMode$1.new_framein(offx,offy,offw,offh);//左上
    		M3DFast$1.gi().DrawTextEx(offx+20, offy+20, "答对题数", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(offx+50, offy+60, this.iRightCount+"/"+this.iReplyCount, 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		
    		offx+=offw+20;
    		DrawMode$1.new_framein(offx,offy,this.iW-offw-30-30-20,offh);//右上
    		if(!this.bWin)
    		{
    		M3DFast$1.gi().DrawTextEx(offx+20, offy+20, "题目"+GameData$1.sBigNum[this.iReplyCount+1], 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		FormatString.gi().FormatEx("#c003e57"+this.sQuestion, this.iW-offw-30-30-20, 30, 0, 0,35);
    		FormatString.gi().Draw(offx+20, offy+60);
    //		M3DFast.gi().DrawTextEx(offx+20, offy+60, this.sQuestion, 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		i= parseInt((this.iTm-GmPlay$1.iNowMillis)/1000);
    		if(i<0)i=0;
    		M3DFast$1.gi().DrawTextEx(this.iX+this.iW-30-20, offy+offh-20, "倒计时："+i+"s", 0xff003e57, 30, 101, 1, 1, 0, -3, -3);
    		}
    		
    		offx=this.iX+30;
    		offy+=offh+20;
    		DrawMode$1.new_framein(offx,offy,offw,this.iH-offh-30-30-20);//左下
    		M3DFast$1.gi().DrawTextEx(offx+20, offy+20, "活动奖励", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		if(this.bWin)
    		{
    			this.btn_get.Move(offx+offw/2-80/2, offy+100, 80, 80);
    			this.btn_get.Draw();
    		}
    		
    		offx+=offw+20;
    		DrawMode$1.new_framein(offx,offy,this.iW-offw-30-30-20,this.iH-offh-30-30-20-40-40);//右下
    		if(!this.bWin)
    		{
    		for(i=0;i<this.iACount;i++)
    		{
    			this.btn_sel[i].Move(offx+30+i%2*220,offy+30+parseInt(i/2)*80,190,40);
    			this.btn_sel[i].sName=this._bigletter[i]+this.sAnswers[i];
    			this.btn_sel[i].Draw();
    		}
    		}
    		
    		this.btn_exit.Draw();
    		
    		if(Confirm1.end(Confirm1.CONFIRM_EXITAQ))
    		{
    			if(Confirm1.bConfirm)
    			{//同意升级
    				GmProtocol$1.gi().s_AfternoooQuestion(3,0,0);
    				XStat$1.gi().PopStat(1);
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<this.iACount;i++)
    		{
    			if(this.btn_sel[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_sel[i].bCheck())
    				{
    					GmProtocol$1.gi().s_AfternoooQuestion(1, this.iCheck, i);
    				}
    			}
    		}
    		if(this.btn_exit.ProcTouch(msg, x, y))
    		{
    			if(this.btn_exit.bCheck())
    			{//点退出，确认结束答题
    				if(this.bWin)Confirm1.start(Confirm1.CONFIRM_EXITAQ,"你已答满15道题，可以点击左侧图标领取额外奖励，退出后奖励无法领取");
    				else Confirm1.start(Confirm1.CONFIRM_EXITAQ,"离开活动界面后计算为活动失败，是否确定退出活动？");
    			}
    		}
    		if(this.bWin)
    		{
    			if(this.btn_get.ProcTouch(msg, x, y))
    			{
    				if(this.btn_get.ProcTouch(msg, x, y))
    				{//领奖
    					GmProtocol$1.gi().s_AfternoooQuestion(2, 0, 0);
    					XStat$1.gi().PopStat(1);
    				}
    			}
    		}
    		return false;
    	}
    }

    AQDoing.Open=function( pls)
    	{
    		var i;
    		var type=pls.GetNextInt();
    		if(type==1)
    		{//得到题目
    			if(XStat$1.gi().iXStat!=XStat$1.GS_AQDOING)XStat$1.gi().PushStat(XStat$1.GS_AQDOING);
    			
    			var aqd=XStat$1.gi().LastStat(0);
    			aqd.sQuestion=pls.GetNextString();
    			aqd.iACount=pls.GetNextInt();
    			for(i=0;i<aqd.iACount;i++)
    			{
    				aqd.sAnswers[i]=pls.GetNextString();
    			}
    			aqd.iCheck=pls.GetNextInt();
    			aqd.iReplyCount=pls.GetNextInt();
    			aqd.iRightCount=pls.GetNextInt();
    			aqd.iTm=GmPlay$1.iNowMillis+20000;
    		}
    		if(type==2)
    		{//失败结束
    			if(XStat$1.gi().iXStat==XStat$1.GS_AQDOING)XStat$1.gi().PopStat(1);
    		}
    		if(type==3)
    		{//胜利领奖
    			if(XStat$1.gi().iXStat!=XStat$1.GS_AQDOING)XStat$1.gi().PushStat(XStat$1.GS_AQDOING);
    			var aqd=XStat$1.gi().LastStat(0);
    			aqd.iReplyCount=pls.GetNextInt();
    			aqd.iRightCount=pls.GetNextInt();
    			aqd.bWin=true;
    		}
    	};

    class CameoOperate extends BaseClass{
    	constructor( ani){
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=30+420+430+40+30;
    		this.iH=345+40+60+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_goods=new Array(8);//
    		this.gmake=new Array(8);//
    		this.igsub=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.btn_goods[i]=new XButton(GmPlay$1.xani_button);
    			this.btn_goods[i].InitButton("物品格");
    			this.btn_goods[i].bSingleButton=true;
    			this.gmake[i]=null;
    			this.igsub[i]=1;
    		}
    		//(this.iX+10,this.iY+65,360,this.iH-75)//360=60*2+x*3
    		this.btn_goods[0].Move(this.iX+35+80, this.iY+120, 80, 80);//装备/宝石
    		this.btn_goods[1].Move(this.iX+35+80+(60+80), this.iY+120, 80, 80);//宝石
    		
    		this.btn_make=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_make.InitButton("按钮1_110");
    		this.btn_make.sName="制造";
    	}

    	Draw(){
    		var i,offx,offy;
    		DrawMode$1.new_baseframe4(this.iX, this.iY, this.iW, this.iH, "镶", "嵌","合","成");
    		this.btn_close.Draw();
    		GmPlay$1.xani_nui3.DrawAnima(this.iX+230, this.iY+200, "炼丹炉背景",0);
    		offx=this.iX+this.iW-30-430-40;
    		offy=this.iY+30;
    		DrawMode$1.new_framein(offx,offy, 430+40, this.iH-60);
    		
    		M3DFast$1.gi().DrawTextEx(offx+20, offy+20, "双击选择装备或宝石：", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		this.iGx=offx+20;
    		this.iGy=offy+20+30;
    		GoodsDraw.new_DrawGoods(this.iGx,this.iGy, MyGoods.gi().goods[2], this.gmake,this.igsub);
    		if(this.lockgoods!=null)GoodsDraw.new_DrawRect(this.iGx,this.iGy, MyGoods.gi().goods[2], this.lockgoods, 0);
    		
    		for(i=0;i<2;i++)
    		{
    			GmPlay$1.xani_nui3.DrawAnima(this.btn_goods[i].iX,this.btn_goods[i].iY, "物品格子",0);
    			//this.btn_goods[i].Draw();
    			if(this.gmake[i]!=null)
    			{
    				GoodsDraw.new_DrawOneGoods_ext(this.btn_goods[i].iX, this.btn_goods[i].iY, this.gmake[i], 1);
    			}
    		}
    		offy=this.iY+this.iH-30-160;
    		DrawMode$1.new_framein(this.iX+30, offy, 400, 160);
    		var s="#c003e57"+this.Check();
    		FormatString.gi().FormatEx(s, 360, 25, 0, 0, 30);
    		FormatString.gi().Draw(this.iX+30+20, offy+20);
    //		this.pm3f.DrawTextEx(this.iX+30+10, this.iY+300+10, , 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		this.btn_make.Move(this.iX+30+400-20-110, offy+160-20-52, 110, 52);
    		if(this.iCanMake==1)
    		{
    			this.btn_make.sName="合成";
    			this.btn_make.Draw();
    		}
    		else if(this.iCanMake==2)
    		{
    			this.btn_make.sName="镶嵌";
    			this.btn_make.Draw();
    		}
    		else if(this.iCanMake==3)
    		{
    			this.btn_make.sName="使用";
    			this.btn_make.Draw();
    		}
    		
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}

    	 Check()
    	{
    		var i,j,m,n;
    		var type,lev;
    		this.iCanMake=0;
    		if(this.gmake[0]==null)
    		{
    			return "请先放入镶嵌的装备或合成的宝石";
    		}
    		//有图纸，检查手艺，和所需材料
    		type=GmPlay$1.de_goods.intValue(this.gmake[0].iTid, -1, 16);//装备类型
    		if(type==-1)
    		{//第一格是宝石，判断第二格
    			if(this.gmake[1]==null)
    			{
    				return "请先放入同类型同等级的宝石进行合成";
    			}
    			else if(this.gmake[1].iTid!=this.gmake[0].iTid)
    			{
    				return "宝石类型不同，不能合成";
    			}
    			else if(this.gmake[1].iAtts[0]!=this.gmake[0].iAtts[0])
    			{
    				return "宝石等级不同，不能合成";
    			}
    			this.iCanMake=1;
    			return "#c00ff00宝石齐备，可以合成";
    		}
    		else
    		{//第一格是装备，判断宝石是否可打到装备上
    			//根据装备类型，判断宝石是否可镶嵌种类
    			if(this.gmake[1]!=null && this.gmake[1].iTid==229)
    			{
    				this.iCanMake=3;
    				return "碎石锤可以除去装备上的宝石";
    			}
    			switch(type)
    			{
    			case 0:
    				if(this.gmake[1]==null)return "放入红宝石或月光石进行镶嵌";
    				else if(this.gmake[1].iTid!=101 && this.gmake[1].iTid!=102)return "只能镶嵌红宝石或月光石";
    				break;
    			case 1:
    				if(this.gmake[1]==null)return "放入碧玺石进行镶嵌";
    				else if(this.gmake[1].iTid!=105)return "只能镶嵌碧玺石";
    				break;
    			case 2:
    				if(this.gmake[1]==null)return "放入红宝石进行镶嵌";
    				else if(this.gmake[1].iTid!=101)return "只能镶嵌红宝石";
    				break;
    			case 3:
    				if(this.gmake[1]==null)return "放入紫鸦石或月光石进行镶嵌";
    				else if(this.gmake[1].iTid!=103 && this.gmake[1].iTid!=102)return "只能镶嵌紫鸦石或月光石";
    				break;
    			case 4:
    				if(this.gmake[1]==null)return "放入紫鸦石或墨晶石进行镶嵌";
    				else if(this.gmake[1].iTid!=103 && this.gmake[1].iTid!=104)return "只能镶嵌紫鸦石或墨晶石";
    				break;
    			case 5:
    				if(this.gmake[1]==null)return "放入墨晶石或碧玺石进行镶嵌";
    				else if(this.gmake[1].iTid!=104 && this.gmake[1].iTid!=105)return "只能镶嵌墨晶石或碧玺石";
    				break;
    			default:
    				return "数据错误3";
    			}
    			//看装备上是否已有同类宝石，并提高镶嵌等级
    			m = Math.floor(this.gmake[0].iAtts[2]/10000);//宝石1
    			n = this.gmake[0].iAtts[2]%10000;//宝石2
    			lev=1;
    			if(m!=0)lev+=m%1000;
    			if(n!=0)lev+=n%1000;
    			if(this.gmake[1].iAtts[0]!=lev)return "必须镶嵌"+lev+"级宝石";
    			//等级过关，看是否有同类型直接提升
    			if(m!=0 && Math.floor(m/1000) == this.gmake[1].iTid-101)
    			{//直接提升
    				this.iCanMake=2;
    				return "#c00ff00宝石齐备，可以镶嵌";
    			}
    			if(n!=0 && Math.floor(n/1000) == this.gmake[1].iTid-101)
    			{//直接提升
    				this.iCanMake=2;
    				return "#c00ff00宝石齐备，可以镶嵌";
    			}
    			if(m!=0 && n!=0)return "已经镶嵌两种不同类型宝石";
    			
    			//看装备上已镶嵌数量，超过2种不同的，则无法再镶嵌其他宝石
    			this.iCanMake=2;
    			return "#c00ff00宝石齐备，可以镶嵌";
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		for(i=0;i<2;i++)
    		{
    			if(this.btn_goods[i].ProcTouch(msg, x, y))
    			{
    				console.log('点击物品');
    				if(this.btn_goods[i].bCheck())
    				{
    					this.gmake[i]=null;
    				}
    				return true;
    			}
    		}

    		var i,j;
    		if(this.iCanMake>0)
    		{
    			if(this.btn_make.ProcTouch(msg, x, y))
    			{
    				if(this.btn_make.bCheck())
    				{
    					var ids=[0,0,0,0,0,0,0,0];
    					for(i=0;i<8;i++)
    					{
    						if(this.gmake[i]!=null)
    						{
    							ids[i]=this.gmake[i].iGid;
    							j=GmPlay$1.de_goods.intValue(this.gmake[i].iTid, 0, 28);
    							if(j>1)
    							{
    								this.gmake[i].iCount--;
    								if(this.gmake[i].iCount<=0)this.gmake[i].iGid=-1;
    							}
    							else this.gmake[i].iGid=-1;
    							this.gmake[i]=null;
    						}
    					}
    					GmProtocol$1.gi().s_UseSkill(5, ids[0], ids[1], ids[2], ids[3], ids[4], ids[5]);
    				}
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}

    		this.lockgoods=GoodsDraw.new_LockGoods(x,y,this.iGx,this.iGy, MyGoods.gi().goods[2],msg);
    		if(msg==3 && this.lockgoods!=null && GoodsDraw.bCanProc())
    		{//点击物品，判断类型，放入格子(制造书，材料，幸运符，手艺)
    			var type;
    			type=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 16);
    			if(type!=-1)this.gmake[0]=this.lockgoods;//是装备，直接放入第一格
    			else
    			{
    				if(this.lockgoods.iTid>=101 && this.lockgoods.iTid<=105)
    				{//是宝石，看是否能放入第一格，不能则放入第二格
    					if(this.gmake[0]==null)this.gmake[0]=this.lockgoods;
    					else if(this.gmake[1]==null && this.gmake[0]!=this.lockgoods)this.gmake[1]=this.lockgoods;
    				}
    				if(this.lockgoods.iTid==229)this.gmake[1]=this.lockgoods;
    /*				if(this.gmake[0]==null)
    				{//第一格为空，如果是宝石直接放入第一格
    					if(this.lockgoods.iTid>=101 && this.lockgoods.iTid<=105)
    					{
    						this.gmake[0]=this.lockgoods;
    					}
    				}
    				else
    				{//判断第一格的是宝石还是装备，是宝石，则需要同类才能合成
    					type=GmPlay.de_goods.intValue(this.gmake[0].iTid, 0, 16);
    					if(type!=1)
    					{//第一格是装备，判断点击的宝石是否符合镶嵌要求
    					}
    					else if(this.gmake[0].iTid>=101 && this.gmake[0].iTid<=105)
    					{//第一格是宝石，要同类同等级
    						if(this.lockgoods.iTid==this.gmake[0].iTid && this.lockgoods.iAtts[0]==this.gmake[0].iAtts[0])
    						{
    							this.gmake[1]=this.lockgoods;
    						}
    					}
    				}*/
    			}
    			
    			this.lockgoods=null;
    		}
    		
    		return false;
    	}
    }

    class ImproveEquip extends BaseClass{


    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=30+420+430+40+30;
    		this.iH=345+40+60+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_goods=new Array(8);//
    		this.gmake=new Array(8);//
    		this.igsub=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.btn_goods[i]=new XButton(GmPlay$1.xani_ui);
    			this.btn_goods[i].InitButton("物品格");
    			
    			this.gmake[i]=null;
    			this.igsub[i]=1;
    		}
    		//(this.iX+10,this.iY+65,360,this.iH-75)
    		this.btn_goods[0].Move(this.iX+35+80, this.iY+80, 80, 80);//装备
    		this.btn_goods[1].Move(this.iX+35+80+(60+80), this.iY+80, 80, 80);//强化符
    		this.btn_goods[2].Move(this.iX+35+80, this.iY+180, 80, 80);//幸运符
    		this.btn_goods[3].Move(this.iX+35+80+(60+80), this.iY+180, 80, 80);//替身人偶
    		
    		this.btn_make=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_make.InitButton("按钮1_110");
    		this.btn_make.sName="强化";
    		this.btn_make.Move(this.iX+270, this.iY+this.iH-40-40, 70, 40);
    	}


    	 Draw()
    	{
    		var i,offx,offy;
    		DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH, "强", "化");
    		this.btn_close.Draw();
    		GmPlay$1.xani_nui3.DrawAnima(this.iX+230, this.iY+200, "炼丹炉背景",0);
    		offx=this.iX+this.iW-30-430-40;
    		offy=this.iY+30;
    		DrawMode$1.new_framein(offx,offy, 430+40, this.iH-60);
    		
    		M3DFast$1.gi().DrawTextEx(offx+20, offy+20, "双击选择要强化的装备：", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		this.iGx=offx+20;
    		this.iGy=offy+20+30;
    		GoodsDraw.new_DrawGoods(this.iGx,this.iGy, MyGoods.gi().goods[2], this.gmake,this.igsub);
    		if(this.lockgoods!=null)GoodsDraw.new_DrawRect(this.iGx,this.iGy, MyGoods.gi().goods[2], this.lockgoods, 0);
    		if(this.gmake[1]!=null)
    		{
    			if(this.igsub[1]!=this.iNeed)this.igsub[1]=this.iNeed;
    			if(this.igsub[1]>this.gmake[1].iCount)this.igsub[1]=this.gmake[1].iCount;
    		}
    		for(i=0;i<4;i++)
    		{
    			GmPlay$1.xani_nui3.DrawAnima(this.btn_goods[i].iX,this.btn_goods[i].iY, "物品格子",0);
    //		this.btn_goods[i].Draw();
    			if(this.gmake[i]!=null)
    			{
    				GoodsDraw.new_DrawOneGoods_ext(this.btn_goods[i].iX, this.btn_goods[i].iY, this.gmake[i], this.igsub[i]);
    			}
    		}
    		offy=this.iY+this.iH-30-160;
    		DrawMode$1.new_framein(this.iX+30, offy, 400, 160);
    		var s="#c003e57"+this.Check();
    		FormatString.gi().FormatEx(s, 360, 25, 0, 0, 30);
    		FormatString.gi().Draw(this.iX+30+20, offy+20);
    //		this.pm3f.DrawTextEx(this.iX+30+10, this.iY+300+10, , 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		if(this.bCanMake)
    		{
    			this.btn_make.Move(this.iX+30+400-20-110, offy+160-20-52, 110, 52);
    			this.btn_make.Draw();
    		}
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    		if(Confirm1.end(Confirm1.CONFIRM_IMPROVEEQUIP))
    		{
    			if(Confirm1.bConfirm)
    			{//
    				this.ie();
    			}
    		}
    	}
    	 Check()
    	{
    		this.iNeed=1;
    		var k;
    		var type,lev;
    		var ret="#c00ff00材料齐备，可以强化";
    		this.bCanMake=false;
    		if(this.gmake[0]==null)
    		{
    			return "请先放入需要强化的装备";
    		}
    		type=GmPlay$1.de_goods.intValue(this.gmake[0].iTid, -1, 16);//装备类型
    		if(type==-1)return "数据异常6";
    		lev=this.gmake[0].iAtts[3]/10000;//已强化等级
    		if(lev>=9)return "装备已经强化到顶层";
    		this.iNeed=GmPlay$1.de_goods.intValue(this.gmake[0].iTid, 0, 9)/10+lev+1;//穿戴要求等级
    		if(this.gmake[1]==null)
    		{
    			return "请放入强化符"+this.iNeed+"张";
    		}
    		if(this.gmake[1].iCount<this.iNeed)
    		{
    			return "强化符数量不足，需要"+this.iNeed+"张";
    		}
    		k=115-lev*15;
    		if(this.gmake[3]!=null)k+=20;//幸运符+20%成功率
    		if(k>100)k=100;
    		ret+="#e强化成功率"+k+"%";
    		if(this.gmake[3]==null && k<100)ret+="#e#cff0000幸运符提高强化成功率";
    		if(this.gmake[2]==null && k<100)ret+="#e#cff0000替身木偶使装备不损毁";
    //		if(this.gmake[2]==null && k<100)
    //		{
    //			ret+="#e#c00ff00放入替身人偶，强化失败装备不会消失";
    //		}
    //		if(this.gmake[3]==null)
    //		{
    //			ret+="#e#c00ff00放入幸运符提高强化成功率，并提高强化幸运度";
    //		}

    		this.bCanMake=true;
    		return ret;
    	}
    	 ie()
    	{
    		var i;
    		var ids=[0,0,0,0,0,0,0,0];
    		for(i=0;i<8;i++)
    		{
    			if(this.gmake[i]!=null)
    			{
    				ids[i]=this.gmake[i].iGid;
    /*							j=GmPlay.de_goods.intValue(this.gmake[i].iTid, 0, 28);
    				if(j>1)
    				{
    					this.gmake[i].iCount--;
    					if(this.gmake[i].iCount<=0)this.gmake[i].iGid=-1;
    				}
    				else this.gmake[i].iGid=-1;*/
    				this.gmake[i].iGid=-1;
    				this.gmake[i]=null;
    			}
    		}
    		GmProtocol$1.gi().s_UseSkill(6, ids[0], ids[1], ids[2], ids[3], ids[4], ids[5]);
    	}
    	 ProcTouch( msg, x, y)
    	{
    		var i,j,k;
    		if(this.bCanMake)
    		{
    			if(this.btn_make.ProcTouch(msg, x, y))
    			{
    				if(this.btn_make.bCheck())
    				{
    					if(this.gmake[2]==null)Confirm1.start(Confirm1.CONFIRM_IMPROVEEQUIP, "#cff0000没有放入替身木偶，如果强化失败，装备会消失，是否确定继续强化？");
    					else this.ie();
    				}
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		this.lockgoods=GoodsDraw.new_LockGoods(x,y,this.iGx,this.iGy, MyGoods.gi().goods[2],msg);
    		if(msg==3 && this.lockgoods!=null && GoodsDraw.bCanProc())
    		{//点击物品，判断类型，放入格子(制造书，材料，幸运符，手艺)
    			var type;
    			type=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 16);
    			if(type!=-1)
    			{
    				this.gmake[0]=this.lockgoods;//是装备，直接放入第一格
    				//放入，强化符，幸运符，替身
    				j=GmPlay$1.de_goods.intValue(this.gmake[0].iTid, 0, 9)/10+this.gmake[0].iAtts[3]/10000+1;//穿戴要求等级
    				for(k=0;k<20;k++)
    				{//放入强化符
    					if(MyGoods.gi().goods[2][k].iGid>0 && MyGoods.gi().goods[2][k].iTid==107 && MyGoods.gi().goods[2][k].iCount>=j)
    					{
    						this.gmake[1]=MyGoods.gi().goods[2][k];
    						break;
    					}
    				}
    				for(k=0;k<20;k++)
    				{//放入木偶
    					if(MyGoods.gi().goods[2][k].iGid>0 && MyGoods.gi().goods[2][k].iTid==106)
    					{
    						this.gmake[2]=MyGoods.gi().goods[2][k];
    						break;
    					}
    				}
    				for(k=0;k<20;k++)
    				{//放入幸运符
    					if(MyGoods.gi().goods[2][k].iGid>0 && MyGoods.gi().goods[2][k].iTid==108)
    					{
    						this.gmake[3]=MyGoods.gi().goods[2][k];
    						break;
    					}
    				}
    			}
    			else
    			{
    				if(this.lockgoods.iTid==107)this.gmake[1]=this.lockgoods;//强化符
    				if(this.lockgoods.iTid==106)this.gmake[2]=this.lockgoods;//替身人偶
    				if(this.lockgoods.iTid==108)this.gmake[3]=this.lockgoods;//幸运符
    			}
    			this.lockgoods=null;
    		}
    		for(i=0;i<4;i++)
    		{
    			if(this.btn_goods[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_goods[i].bCheck())
    				{
    					this.gmake[i]=null;
    				}
    			}
    		}
    		return false;
    	}

    }

    class FindFriend extends BaseClass{

    	
    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW = 40 + 80 + 20 + 160 + 20+90+40;
    		this.iH = 40+50+40+50+40;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		//30,50,30,50,30
    		this.in_name=new XInput(GmPlay$1.xani_ui);
    		this.in_name.Move(this.iX + 40+80+20, this.iY + 40, 160, 50);
    		this.in_name.sDetail="";
    		this.in_name.iTextSize=30;
    		this.in_name.iLength=12;
    		this.in_name.iTextColor = 0xff114e61;
    		
    		this.in_id=new XInput(GmPlay$1.xani_ui);
    		this.in_id.Move(this.iX + 40+80+20, this.iY + 40+50+40 , 160, 50);
    		this.in_id.sDetail="";
    		this.in_id.bNumber=true;
    		this.in_id.iTextSize=30;
    		this.in_id.iMaxNumber=99999999;//2147483647;
    		this.in_id.iTextColor = 0xff114e61;
    		
    		this.btn_name=new XButton(GmPlay$1.xani_button);
    		this.btn_name.InitButton("1号按钮90_60");
    		this.btn_name.sName="查找";
    		this.btn_name.Move(this.iX + 40+80+20+160+20, this.iY + 35, 90, 60);
    		
    		this.btn_id=new XButton(GmPlay$1.xani_button);
    		this.btn_id.InitButton("1号按钮90_60");
    		this.btn_id.sName="查找";
    		this.btn_id.Move(this.iX + 40 + 80 + 20 + 160 + 20, this.iY + 40 + 50 + 40 - 5, 90, 60);
    	}

    	Draw()
    	{
    		DrawMode$1.frame_type4("7号框52_52", this.iX, this.iY, this.iW, this.iH, 52, 52);
    		
    		M3DFast$1.gi().DrawTextEx(this.iX + 40, this.iY + 40+25, "根据名字", 0xff114e61, 20, 101, 1, 1, 0, 0, -2);
    		DrawMode$1.frame_type4("8号框20_20", this.in_name.iX, this.in_name.iY, this.in_name.iW, 50, 20, 20);
    		this.in_name.DrawText();
    		this.btn_name.Draw();
    		
    		M3DFast$1.gi().DrawTextEx(this.iX + 40, this.iY + 40 + 50 + 40 + 25, "根据号码", 0xff114e61, 20, 101, 1, 1, 0, 0, -2);
    		DrawMode$1.frame_type4("8号框20_20", this.in_id.iX, this.in_id.iY, this.in_id.iW, 50, 20, 20);
    		this.in_id.DrawText();
    		this.btn_id.Draw();

    		this.in_name.onscr();
    		this.in_id.onscr();
    	}
    	ProcTouch( msg, x, y)
    	{
    		this.in_name.ProcTouch(msg, x, y);
    		this.in_id.ProcTouch(msg, x, y);
    		
    		if(this.btn_name.ProcTouch(msg, x, y))
    		{
    			if(this.btn_name.bCheck())
    			{
    				if(this.in_name.sDetail.length<=0)EasyMessage.easymsg.AddMessage("请先输入玩家名字");
    				else GmProtocol$1.gi().s_WatchOn(4, 0, 0,this.in_name.sDetail);
    			}
    		}
    		if(this.btn_id.ProcTouch(msg, x, y))
    		{
    			if(this.btn_id.bCheck())
    			{
    				if(this.in_id.sDetail.length<=0)EasyMessage.easymsg.AddMessage("请先输入号码");
    				else GmProtocol$1.gi().s_WatchOn(0, parseInt(this.in_id.sDetail), 0,"");
    			}
    		}
    		
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return false;
    	}

    }

    class WatchOn extends BaseClass{
    	
    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=530;
    		this.iH=340;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.goods=new Goods();
    		this.goods.iGid=-1;
    		this.pet=new Pets();
    		this.pet.iPid=-1;
    //		btn_base=new XButton(GmPlay.xani_ui);
    //		btn_base.InitButton("统一中按钮4");
    //		btn_base.sName="基础属性";
    //		btn_skill=new XButton(GmPlay.xani_ui);
    //		btn_skill.InitButton("统一中按钮4");
    //		btn_skill.sName="资质技能";
    		
    		this.btn_send=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_send.InitButton("1号按钮90_60");
    		this.btn_send.sName="发送";
    		
    		this.btn_friend=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_friend.InitButton("1号按钮90_60");
    		this.btn_friend.sName="好友";
    		
    		this.bInited=false;
    		
    		this.iRankCount=0;
    		this.sRankDetail=new Array(10);//
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.InitButton("关闭按钮");
    	}
    	
    	
    	Draw_Pet()
    	{
    		var i;
    		
    		this.iW=915;
    		this.iH=610;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		DrawMode$1.new_bigframe(this.iX,this.iY,this.iW,this.iH);
    		
    		var offxx,offyy,offww,offhh;
    		
    		offxx=this.iX+28;
    		offyy=this.iY+28;
    		offww=406;
    		offhh=553;
    		
    		DrawMode$1.new_framein(offxx,offyy,offww,offhh);//左背景
    		
    		offxx=offxx+offww+15;
    		offww=450-10;
    		offhh=553;
    		
    		DrawMode$1.new_framein(offxx,offyy,offww,offhh);//右背景
    		
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.Draw();
    		
    		//以下为左边大显示
    		
    		//int offx=this.iX+150;
    		//int offy=this.iY+65;
    		
    		GmPlay$1.xani_nui2.DrawAnima(this.iX+28+406/2-260/2,this.iY+50,"宠物背景",0);
    		FireworksEffect.DrawAura(0, this.iX+28+406/2, this.iY+240, null, 0);//查看世界频道的宠物
    		this.pet.aa_body.Draw(this.iX+28+406/2, this.iY+240);
    		this.pet.aa_body.NextFrame();
    		
    		//this.pet's name
    		PetsFrame.wordframe(this.iX+28+406/2-200/2,this.iY+50,200);
    		M3DFast$1.gi().DrawText_2(this.iX+28+406/2, this.iY+50+16, this.pet.sName, 0xffffffff, 22, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		this.pet.CalcPetScore();
    		M3DFast$1.gi().DrawText_2(this.iX+28+406/2, this.iY+50+16 + 50, "评分:"+this.pet.iScore, 0xffffffff, 26, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		//？ 逻辑为加入
    		//进阶星星
    		for(i=0;i<5;i++)
    		{//ppet.iStar
    			if(i<this.pet.iStar)GmPlay$1.xani_nui2.DrawAnima(this.iX+54,this.iY+60+40*i, "宠物进阶星星",1);
    			else GmPlay$1.xani_nui2.DrawAnima(this.iX+54,this.iY+60+40*i, "宠物进阶星星",0);
    //			GmPlay.xani_ui4.DrawAnima(this.iX+220+30+i*30, this.iY+40+180-30, "黄色五角星",0);
    		}
    //		GmPlay.xani_nui2.DrawAnima(this.iX+54,this.iY+85, "宠物进阶星星",1);
    //		GmPlay.xani_nui2.DrawAnima(this.iX+54,this.iY+85+39, "宠物进阶星星",0);

    		//？ 逻辑未加入
    		//宠物类型红印
    		GmPlay$1.xani_nui2.DrawAnima(this.iX+380,this.iY+128, "宠物类型红印",this.pet.iBaobao&3);
    //		GmPlay.xani_nui2.DrawAnima(this.iX+380,this.iY+128, "宠物类型红印",2);
    		
    		M3DFast$1.gi().DrawText_2(this.iX+130,this.iY+239, this.pet.iLev+"级", 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		M3DFast$1.gi().DrawText_2(this.iX+350,this.iY+239, "仙露仙桃："+this.pet.iFlag%100, 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		
    		
    		var xx,yy,x=this.iX+45,y=this.iY+285;
    		
    		for(i=0;i<12;i++)
    		{
    			{//有技能
    				xx=x+i%4*(92+5);
    				yy=y+parseInt(i/4)*(92+5);
    			
    				GmPlay$1.xani_nui2.DrawAnima(xx, yy, "技能框",0);

    				if(i<this.pet.iSkillBlock && this.pet.jn[i]>0)
    				{
    					GmPlay$1.xani_nicon.DrawAnima_aa(xx, yy, GmPlay$1.de_skill.strValue(this.pet.jn[i], 0, 5),0);
    				}
    				if(i>=this.pet.iSkillBlock)GmPlay$1.xani_nui2.DrawAnima(xx, yy, "技能框",1);
    			}
    		}
    		for(i=0;i<12;i++)
    		{
    			xx=x+i%4*(92+5);
    			yy=y+parseInt(i/4)*(92+5);
    			
    			if(WatchOn.btn_skilllist[i]==null)
    			{
    				WatchOn.btn_skilllist[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    				WatchOn.btn_skilllist[i].bSingleButton=true;
    			}
    			WatchOn.btn_skilllist[i].Move(xx,yy,92,92);

    			if(WatchOn.btn_skilllist[i].bMouseDown && this.pet.jn[i]>0)
    			{
    				MyAttFrame.Skill_Detail(this.pet.jn[i], xx, yy, -1);
    			}
    		}
    		
    		
    		//以下为右边大显示
    		x = this.iX+470+10; y=this.iY+49;
    		GmPlay$1.xani_nui2.DrawAnima(x, y, "提示1",0);
    		M3DFast$1.gi().DrawText_2(x+67/2, y+16, "气血", 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		GmPlay$1.xani_nui2.DrawAnima(x, y+38, "提示1",0);
    		M3DFast$1.gi().DrawText_2(x+67/2, y+38+16, "魔法", 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		GmPlay$1.xani_nui2.DrawAnima(x, y+76, "提示1",0);
    		M3DFast$1.gi().DrawText_2(x+67/2, y+76+16, "经验", 0xffffffff, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		
    		
    		var w=67,h=36;
    		
    		GmPlay$1.xani_nui2.DrawAnima(x+w, y, "宠物大血条",0);
    		GmPlay$1.xani_nui2.DrawAnima(x+w, y+h, "宠物大血条",0);
    		GmPlay$1.xani_nui2.DrawAnima(x+w, y+h*2, "宠物大血条",0);

    		M3DFast$1.gi().SetViewClip(x, y, x+w+311*this.pet.iHp/this.pet.iMaxHp, y+480);
    		GmPlay$1.xani_nui2.DrawAnima(x+w+2, y+3, "宠物大血条",1);
    		M3DFast$1.gi().NoClip();
    		M3DFast$1.gi().SetViewClip(x, y, x+w+311*this.pet.iMp/this.pet.iMaxMp, y+480);
    		GmPlay$1.xani_nui2.DrawAnima(x+w+2, y+h+3, "宠物大血条",2);
    		M3DFast$1.gi().NoClip();
    		M3DFast$1.gi().SetViewClip(x, y, x+w+311*this.pet.iExp/(GameData$1.iUpgradeExp[this.pet.iLev]/3), y+480);
    		GmPlay$1.xani_nui2.DrawAnima(x+w+2, y+h*2+3, "宠物大血条",3);
    		
    		M3DFast$1.gi().NoClip();
    	
    		M3DFast$1.gi().DrawTextEx(x+w+311/2, y+15,this.pet.iHp+"/"+this.pet.iMaxHp, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		M3DFast$1.gi().DrawTextEx(x+w+311/2, y+40+13,this.pet.iMp+"/"+this.pet.iMaxMp, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		M3DFast$1.gi().DrawTextEx(x+w+311/2, y+80+12,this.pet.iExp+"/"+parseInt(GameData$1.iUpgradeExp[this.pet.iLev]/3), 0xffffffff, 20, 101, 1, 1, 0, -2, -2);
    		
    		//
    		x=this.iX+470+10; y=this.iY+176;
    		y+=105;
    		DrawMode$1.ui3_Text1_(x, y-60-45,67,100,"体质",""+this.pet.tz);
    		DrawMode$1.ui3_Text1_(x, y-20-45-2,67,100,"法力",""+this.pet.fl);
    		DrawMode$1.ui3_Text1_(x, y+20-45-4,67,100,"力量",""+this.pet.ll);
    		DrawMode$1.ui3_Text1_(x, y+60-45-6,67,100,"耐力",""+this.pet.nl);
    		DrawMode$1.ui3_Text1_(x, y+100-45-8,67,100,"敏捷",""+this.pet.mj);
    		
    		DrawMode$1.ui3_Text1_(x+220, y-60-45,67,100,"灵力",""+this.pet.iSpirit);
    		DrawMode$1.ui3_Text1_(x+220, y-20-45-2,67,100,"伤害",""+this.pet.iAttack);
    		DrawMode$1.ui3_Text1_(x+220, y+20-45-4,67,100,"防御",""+this.pet.iDefence);
    		DrawMode$1.ui3_Text1_(x+220, y+60-45-6,67,100,"速度",""+this.pet.iSpeed);
    		DrawMode$1.ui3_Text1_(x+220, y+100-45-8,67,100,"潜能",""+this.pet.nut);
    		
    		//
    		x=this.iX+470+10; y=this.iY+378;
    		DrawMode$1.ui3_Text1_4word(x, y,110,100,"体质资质",""+this.pet.zz[0]);
    		DrawMode$1.ui3_Text1_4word(x, y+40-2,110,100,"法力资质",""+this.pet.zz[1]);
    		DrawMode$1.ui3_Text1_4word(x, y+80-4,110,100,"力量资质",""+this.pet.zz[2]);
    		DrawMode$1.ui3_Text1_4word(x, y+120-6,110,100,"耐力资质",""+this.pet.zz[3]);
    		DrawMode$1.ui3_Text1_4word(x, y+160-8,110,100,"敏捷资质",""+this.pet.zz[4]);
    		
    		DrawMode$1.ui3_Text1_(x+220, y,67,100,"成长",""+MyPets$1.swapcz(this.pet.cz));
    		
    		if(this.pet.iLife>30000)DrawMode$1.ui3_Text1_(x+220, y+40-2,67,100,"寿命","永生");
    		else DrawMode$1.ui3_Text1_(x+220, y+40-2,67,100,"寿命",""+this.pet.iLife);
    	}
    	
    //	Draw_Pet_()
    //	{
    ////		DrawMode.Frame3_BK(this.iX, this.iY, this.iW, this.iH,"宠物属性");
    ////		
    ////		if(this.pet.iPid<=0)return;
    ////		
    ////		GmPlay.aa_shadow.Draw(this.iX+10+100,this.iY+240);
    ////		this.pet.aa.Draw(this.iX+10+100, this.iY+240);
    ////		this.pet.aa.NextFrame();
    ////		
    ////		PetsFrame.Draw_Base1(this.iX+10, this.iY+285, this.pet);
    ////		
    ////		btn_base.Move(this.iX+10+210, this.iY+65+10, 130, 40);
    ////		btn_base.Draw();
    ////		btn_skill.Move(this.iX+10+210+170, this.iY+65+10, 130, 40);
    ////		btn_skill.Draw();
    ////		
    ////		PetsFrame.Draw_Base2(this.iX+10+210, this.iY+65+60, this.pet);
    ////		PetsFrame.Draw_Base3(this.iX+10+210, this.iY+65+60, this.pet);
    //		
    //		this.iW=580;
    //		this.iH=420;
    //		this.iX=(GmConfig.SCRW-this.iW)/2;
    //		this.iY=(GmConfig.SCRH-this.iH)/2;
    //		
    //		DrawMode.Frame2_MD(this.iX, this.iY, this.iW, this.iH);
    //		
    //		if(this.pet.iPid<=0)return;
    //		
    //		GmPlay.aa_shadow.Draw(this.iX+10+100,this.iY+180);
    //		this.pet.aa_body.Draw(this.iX+10+100, this.iY+180);
    //		this.pet.aa_body.NextFrame();
    //		for(int i=0;i<this.pet.iStar;i++)GmPlay.xani_ui4.DrawAnima(this.iX+110-60+i*30, this.iY+40+180, "黄色五角星",0);
    //		
    //		PetsFrame.Draw_Base1(this.iX-30, this.iY+300, this.pet);
    //		
    ////		if(iPetPage==0)
    ////		{
    ////			PetsFrame.Draw_Base2(this.iX+200, this.iY+160, this.pet);
    ////			
    ////			btn_base.bMouseDown=true;
    ////			btn_base.bMouseIn=true;
    ////		}
    ////		if(iPetPage==1)
    ////		{
    ////			PetsFrame.Draw_Base3(this.iX+200, this.iY+160, this.pet);
    ////			
    ////			btn_skill.bMouseDown=true;
    ////			btn_skill.bMouseIn=true;
    ////		}
    ////		
    ////		btn_base.Move(this.iX+10+210, this.iY+10, 130, 40);
    ////		btn_base.Draw();
    ////		btn_skill.Move(this.iX+10+210+170, this.iY+10, 130, 40);
    ////		btn_skill.Draw();
    //	}

    	Draw_Role()
    	{//可加为好友,发送私聊,,,名字，等级，门派，帮派，头像
    		var j;
    		this.iW = 500;
    		this.iH = 335;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		DrawMode$1.frame_type4("7号框52_52", this.iX, this.iY, this.iW, this.iH, 52, 52);
    		
    //		GmPlay.xani_ui.DrawAnimaEx(this.iX+20+5, this.iY+20, "头像", this.r_head, 101, 1, 1, 0, 0, 0);//120*120
    		GmPlay$1.xani_head.DrawAnima(this.iX+ 20+350+20, this.iY+20, "新头像"+this.r_head,0);
    		
    		this.btn_send.Move(this.iX + 20+350+20-5, this.iY + 20 + 60 + 20+50, 90, 60);
    		this.btn_send.Draw();
    		this.btn_friend.Move(this.iX + 20+350+20-5, this.iY + 20 + 60 + 20 + 60+20 + 70, 90, 60);
    		this.btn_friend.Draw();

    		j = 260;
    		DrawMode$1.frame_type4("11号框20_20", this.iX+20, this.iY+20, 350, 295, 20, 20);
    		DrawMode$1.ui3_Text1(this.iX+30, this.iY+30, 70, j, "名字", this.r_name);
    		DrawMode$1.ui3_Text1(this.iX + 30, this.iY + 30+35, 70, j, "号码", ""+(this.r_rid));
    		DrawMode$1.ui3_Text1(this.iX + 30, this.iY + 30+35*2, 70, j, "等级", ""+(this.r_lev));
    		DrawMode$1.ui3_Text1(this.iX + 30, this.iY + 30 + 35 * 3, 70, j, "门派", GameData$1.sSchools[this.r_school]);
    		if (this.r_title.length <= 0)DrawMode$1.ui3_Text1(this.iX + 30, this.iY + 30 + 35 * 4, 70, j, "称谓", "无");
    		else DrawMode$1.ui3_Text1(this.iX + 30, this.iY + 30 + 35 * 4, 70, j, "称谓", this.r_title);
    		DrawMode$1.ui3_Text1(this.iX + 30, this.iY + 30 + 35 * 5, 70, j, "帮派", this.r_gov);
     
    		if (this.r_relation == 0)DrawMode$1.ui3_Text1(this.iX + 30, this.iY + 30 + 35 * 6, 70, j, "关系", "陌生人");
    		else
    		{//有关系，&1普通朋友，&2他是徒弟，&4他是师傅
    			var s="";
    			if ((this.r_relation & 2) != 0 || (this.r_relation & 8) != 0)s+= "徒弟";
    			if ((this.r_relation & 4) != 0)s+= "师傅";
    			if (s.length<=0)s= "普通朋友";
    			DrawMode$1.ui3_Text1(this.iX + 30, this.iY + 30 + 35 * 6, 70, j, "关系", s);
    		}
    		DrawMode$1.ui3_Text1(this.iX + 30, this.iY + 30 + 35 * 7, 70, j, "友好度", ""+(this.r_amity));
    	}
    	Draw_Goods()
    	{
    		this.iX=(GmConfig$1.SCRW+270)/2;
    		this.iY=(GmConfig$1.SCRH)/2;
    		this.iW=270;
    		this.iH=270;
    		GoodsDraw.new_DrawDetail(this.goods, this.iX,this.iY,0);
    		this.iX-=270;
    		this.iY-=270/2;
    	}
    	Draw()
    	{
    		if(!this.bInited)return;
    		switch(this.iType)
    		{
    		case 0:
    		case 4:
    			this.Draw_Role();
    			break;
    		case 1:
    			this.Draw_Goods();
    			break;
    		case 2:
    			this.Draw_Pet();
    			break;
    		case 10://排行榜
    		case 11:
    		case 12:
    		case 13:
    			this.Draw_Rank();
    			break;
    		}
    	}
    	 Draw_Rank()
    	{
    		var i;
    		
    		this.iW=300;
    		this.iH=350;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		DrawMode$1.Frame2_MD(this.iX, this.iY, this.iW, this.iH);
    		
    		if(this.iType==10)M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2, this.iY+30, "~~~实力排行榜~~~", 0xff000000, 30, 101, 1, 1, 0, -2, -2);
    		else if(this.iType==11)M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2, this.iY+30, "~~~财富排行榜~~~", 0xff000000, 30, 101, 1, 1, 0, -2, -2);
    		else if(this.iType==12)M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2, this.iY+30, "~~~帮派排行榜~~~", 0xff000000, 30, 101, 1, 1, 0, -2, -2);
    		else if(this.iType==13)M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2, this.iY+30, this.sRankTitle, 0xff000000, 30, 101, 1, 1, 0, -2, -2);
    		
    		M3DFast$1.gi().DrawTextEx(this.iX+50, this.iY+30+40, "排名", 0xff000000, 20, 101, 1, 1, 0, -2, -2);
    		M3DFast$1.gi().DrawTextEx(this.iX+200, this.iY+30+40, "名称", 0xff000000, 20, 101, 1, 1, 0, -2, -2);
    		
    		for(i=0;i<this.iRankCount;i++)
    		{
    			if(i%2==0)M3DFast$1.gi().FillRect_2D(this.iX+20, this.iY+30+40+30+i*25-13,          this.iX+this.iW-20, this.iY+30+40+30+i*25+13, 0x20000000);
    			M3DFast$1.gi().DrawTextEx(this.iX+50, this.iY+30+40+30+i*25, ""+(i+1), 0xff000000, 20, 101, 1, 1, 0, -2, -2);
    			M3DFast$1.gi().DrawTextEx(this.iX+200, this.iY+30+40+30+i*25,this.sRankDetail[i], 0xff000000, 20, 101, 1, 1, 0, -2, -2);
    		}
    	}
    	
    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    				return true;
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    			return true;
    		}
    		switch(this.iType)
    		{
    		case 0:
    		case 4:
    			if(this.btn_send.ProcTouch(msg, x, y))
    			{
    				if(this.btn_send.bCheck())
    				{
    					XStat$1.gi().PopStat(1);
    					PrivateChat_Send.OpenChat(this.r_rid, this.r_name,this.r_head);
    				}
    				return true;
    			}
    			if(this.btn_friend.ProcTouch(msg, x, y))
    			{
    				if(this.btn_friend.bCheck())
    				{
    					GmProtocol$1.gi().s_FriendOperate(0,this.r_rid,0);
    					XStat$1.gi().PopStat(1);
    				}
    				return true;
    			}
    			break;
    		case 1:
    			break;
    		case 2:
    //			if(btn_base.ProcTouch(msg, x, y))
    //			{
    //				if(btn_base.bCheck())
    //				{
    //					iPetPage=0;
    //				}
    //			}
    //			if(btn_skill.ProcTouch(msg, x, y))
    //			{
    //				if(btn_skill.bCheck())
    //				{
    //					iPetPage=1;
    //				}
    //			}
    			for(i=0;i<12;i++)
    			{
    				if(WatchOn.btn_skilllist[i]==null)continue;
    				WatchOn.btn_skilllist[i].ProcTouch(msg, x, y);
    			}
    			break;
    		}
    		return false;
    	}
    	
    	InitData( pls)
    	{
    		var i,k;
    		this.iType=pls.GetNextByte();
    		this.iId=pls.GetNextInt();
    		this.iFlag=pls.GetNextInt();
    		if(this.iType==0 || this.iType==4)
    		{
    			this.r_name=pls.GetNextString();
    			this.r_rid=pls.GetNextInt();
    			this.r_lev=pls.GetNextInt();
    			this.r_school=pls.GetNextByte();
    			this.r_head=pls.GetNextByte();
    			this.r_gov=pls.GetNextString();
    			this.r_relation=pls.GetNextByte();

    			this.r_amity=pls.GetNextInt();//友好度
    			this.r_title=pls.GetNextString();
    //			MyFriends pmf=FriendList.gi().FindFriend(this.r_rid);
    //			if(pmf!=null)this.r_amity=pmf.iAmity;
    //			else this.r_amity=0;
    		}
    		else if(this.iType==1)
    		{
    			this.goods.iGid=pls.GetNextInt();
    			this.goods.iTid=pls.GetNextShort();
    			pls.GetNextInt();//rid
    			pls.GetNextByte();//oid
    			pls.GetNextByte();//pos
    			this.goods.iCount=pls.GetNextByte();//count
    			for(i=0;i<8;i++)this.goods.iAtts[i]=pls.GetNextInt();
    			GmPlay$1.xani_ngoods.InitAnimaWithName(GmPlay$1.de_goods.strValue(this.goods.iTid, -1, 10), this.goods.aa);
    		}
    		else if(this.iType==2)
    		{
    			this.pet.iPid=pls.GetNextInt();
    			this.pet.iTid=pls.GetNextShort();
    			this.pet.sName=pls.GetNextString()+"("+GmPlay$1.de_pet.strValue(this.pet.iTid, 0, 1)+")";
    			this.pet.iLev=pls.GetNextShort();
    			this.pet.iExp=pls.GetNextInt();
    			this.pet.iHp=pls.GetNextShort();
    			this.pet.iMp=pls.GetNextShort();
    			this.pet.iLife=pls.GetNextShort();
    			for(k=0;k<5;k++)this.pet.iBaseAtt[k]=pls.GetNextShort();
    			for(k=0;k<5;k++)this.pet.zz[k]=pls.GetNextShort();
    			this.pet.cz=pls.GetNextShort();
    			for(k=0;k<8;k++)this.pet.jn[k]=pls.GetNextShort();
    			this.pet.iAddAtt=pls.GetNextByte();
    			this.pet.iBaobao=pls.GetNextByte();
    			this.pet.iFlag=pls.GetNextShort();
    			this.pet.jn[8]=pls.GetNextShort();
    			this.pet.jn[9]=pls.GetNextShort();
    			this.pet.jn[10]=pls.GetNextShort();
    			this.pet.jn[11]=pls.GetNextShort();
    			if((this.pet.iBaobao&2)==0)GmPlay$1.xani_pets[this.pet.iTid].InitAnimaWithName("站立_右下", this.pet.aa_body);
    			else GmPlay$1.xani_pets[this.pet.iTid].InitAnimaWithName("变异_站立_右下", this.pet.aa_body);
    			MyPets$1.CalcFightAtt(this.pet);
    		}
    		else if(this.iType==10)
    		{//实力排行榜
    			this.iRankCount=pls.GetNextInt();
    			for(k=0;k<this.iRankCount;k++)this.sRankDetail[k]=pls.GetNextString();
    		}
    		else if(this.iType==11)
    		{//财富排行榜
    			this.iRankCount=pls.GetNextInt();
    			for(k=0;k<this.iRankCount;k++)this.sRankDetail[k]=pls.GetNextString();
    		}
    		else if(this.iType==12)
    		{//帮派排行榜
    			this.iRankCount=pls.GetNextInt();
    			for(k=0;k<this.iRankCount;k++)this.sRankDetail[k]=pls.GetNextString();
    		}
    		else if(this.iType==13)
    		{//其他排行榜
    			this.sRankTitle=pls.GetNextString();
    			this.iRankCount=pls.GetNextInt();
    			for(k=0;k<this.iRankCount;k++)this.sRankDetail[k]=pls.GetNextString();
    		}
    		else XStat$1.gi().PopStat(1);
    		this.bInited=true;
    	}
    	

    }

    WatchOn.btn_skilllist=new Array(12);//

    WatchOn.Init_Pet=function( p)
    {
        XStat$1.gi().PushStat(XStat$1.GS_WATCHON);
        var wo=XStat$1.gi().LastStat(0);
        wo.pet.copyfrom(p);
        wo.pet.sName=p.sName+"("+GmPlay$1.de_pet.strValue(p.iTid, 0, 1)+")";
        if((wo.pet.iBaobao&2)==0)GmPlay$1.xani_pets[wo.pet.iTid].InitAnimaWithName("站立_右下", wo.pet.aa_body);
        else GmPlay$1.xani_pets[wo.pet.iTid].InitAnimaWithName("变异_站立_右下", wo.pet.aa_body);
        MyPets$1.CalcFightAtt(wo.pet);
        wo.iType=2;
        wo.bInited=true;
    };

    //花费资金挑战自己往前的10名
    class FTChallenge extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=500;
    		this.iH=350;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.in_money=new XInput(GmPlay$1.xani_ui);
    //		this.in_money.Move(this.iX+this.iW/2+60, this.iY+140, 128,50);
    		this.in_money.sDetail="100000";
    		this.in_money.bNumber=true;
    		this.in_money.iTextSize=20;
    		this.in_money.iMaxNumber=20000000;
    		this.in_money.iTextColor=0xff114e61;
    		
    		this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_ok.Move(this.iX+330,this.iY+60+50+10, 150, 60);
    		this.btn_ok.InitButton("1号按钮150_60");
    		this.btn_ok.sName="确定挑战";
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.InitButton("关闭按钮");
    	}
    	
    	Draw()
    	{
    		var yy;
    		yy=this.iY+15;
    		DrawMode$1.frame_type4("7号框52_52", this.iX, this.iY, this.iW, this.iH, 52, 52);
    		this.pm3f.DrawText_2(this.iX+this.iW/2, yy, "发起挑战", 0xfffeec7e, 40, 101, 1, 1, 0, -2, 0,2,0xff01152e);
    		yy+=60;
    		this.pm3f.DrawText_2(this.iX+20, yy, "挑战战队:"+this.sDName, 0xfffeec7e, 30, 101, 1, 1, 0, 0, 0,2,0xff01152e);
    		yy+=60;
    		this.pm3f.DrawText_2(this.iX+20, yy, "挑战金", 0xfffeec7e, 30, 101, 1, 1, 0, 0, 0,2,0xff01152e);
    		
    		this.in_money.Move(this.iX+120,yy-10, 155, 50);
    //		DrawMode.DrawTextFrame1(this.in_money.iX, this.in_money.iY,this.in_money.iW);
    		DrawMode$1.frame_type4("8号框20_20", this.in_money.iX, this.in_money.iY,this.in_money.iW,50, 20, 20);
    		this.in_money.DrawText();

    		this.in_money.onscr();
    		
    		yy+=60;
    		FormatString.gi().Format("#c114e61说明：挑战金从战队资金支出，最低10万，扣除挑战金后，战队资金不能低于100万，否则挑战无效。#e如同一战队被多个战队挑战，挑战金高者配对成功#e配对成功后，系统将扣除10%挑战金#e挑战胜利，剩余90%挑战金归还挑战方；#e挑战失败，挑战金归被挑战方所有", this.iW-40, 20);
    		FormatString.gi().Draw(this.iX+20, yy);
    		
    		this.btn_ok.Draw();
    		this.btn_close.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{
    				if(this.in_money.sDetail.length>0)
    				{
    					i=parseInt(this.in_money.sDetail);
    					if(i<100000)EasyMessage.easymsg.AddMessage("挑战金不能低于10万");
    					else
    					{
    						GmProtocol$1.gi().s_FTChallenge(1,i,this.iDFid);
    						XStat$1.gi().PopStat(1);
    					}
    				}
    			}
    			return true;
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		this.in_money.ProcTouch(msg, x,y);
    		return false;
    	}
    }
    FTChallenge.Open=function( nm, fid)
    {
        var ftc;
        if(XStat$1.gi().iXStat==XStat$1.GS_FTCHALLENGE)
        {
            ftc= XStat$1.gi().oCurrentView;
        }
        else
        {
            ftc= XStat$1.gi().PushStat(XStat$1.GS_FTCHALLENGE);
        }
        ftc.sDName=nm;
        ftc.iDFid=fid;
    };

    class _FTRANK
    {/*
    	public int fid,rank;
    	public String name,leader;
        public int nowar;*/
        constructor()
        {

        }
    };
    //战队属性界面
    class FTRank extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=600;
    		this.iH=480;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_pageup=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_pageup.Move(this.iX+30,this.iY+this.iH-30-60, 120, 60);
    		this.btn_pageup.InitButton("1号按钮120_60");
    		this.btn_pageup.sName="上一页";
    		
    		this.btn_pagedown=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_pagedown.Move(this.iX+this.iW-30-120,this.iY+this.iH-30-60, 120, 60);
    		this.btn_pagedown.InitButton("1号按钮120_60");
    		this.btn_pagedown.sName="下一页";
    		
    		this.btn_fight=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_fight.Move(this.iX+this.iW/2-120/2,this.iY+this.iH-30-60, 120, 60);
    		this.btn_fight.InitButton("1号按钮120_60");
    		this.btn_fight.sName="挑战";
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.Move(this.iX+this.iW-30, this.iY-20, 60, 60);
    		this.btn_close.InitButton("关闭按钮");
    	}
    	
    	Draw()
    	{
    		var i,x,y,w;
    		DrawMode$1.frame_type4("10号框20_20", this.iX, this.iY, this.iW, this.iH, 20, 20);
    		this.pm3f.DrawText_2(this.iX+this.iW/2, this.iY+15, "战队排行", 0xfffeec7e, 40, 101, 1, 1, 0, -2, 0,2,0xff01152e);
    		
    		for(i=0;i<10;i++)
    		{
    			x=this.iX+20+Math.floor(i/5)*this.iW/2;
    			y=this.iY+60+i%5*65;
    			
    			if(this.iPoint==i)this.pm3f.FillRect_2D(x, y, x+this.iW/2-40,y+60, 0x80000080);
    			else if(i<this.iCount && this.ranklist[i].fid==MyFT.mft.iFTid)this.pm3f.FillRect_2D(x, y, x+this.iW/2-40,y+60, 0x80008000);
    			else DrawMode$1.frame_type4("2号框20_20", x, y, this.iW/2-40, 60, 20, 20);
    		}
    		w=this.iW/2-40;
    		for(i=0;i<this.iCount;i++)
    		{
    			x=this.iX+20+Math.floor(i/5)*this.iW/2;
    			y=this.iY+60+i%5*65;
    			this.pm3f.DrawText_2(x+15, y+30, ""+this.ranklist[i].rank, 0xffffC800, 50, 101, 1, 1, 0, 0, -2,2,0xff000000);
    			
    			this.pm3f.DrawTextEx(x+w-10, y+5, "队名:"+this.ranklist[i].name, 0xffffffff, 20, 101, 1, 1, 0, -3, 0);
    			this.pm3f.DrawTextEx(x+w-10, y+5+30, "队长:"+this.ranklist[i].leader, 0xffffffff, 20, 101, 1, 1, 0, -3, 0);
    			if(this.ranklist[i].nowar>0)
    			{
    				M3DFast$1.gi().DrawTextEx(x+w/2-50,y+30-25, "免战", 0xffff0000, 50, 101, 1, 1, 30, x+w/2,y+30 );
    			}
    			if(this.ranklist[i].fid==FTRank.iDFid)
    			{
    				M3DFast$1.gi().DrawTextEx(x+w/2-50,y+30-25, "挑战", 0xffff0000, 50, 101, 1, 1, 30, x+w/2,y+30 );				
    			}
    		}
    //		GmPlay.sop(""+this.ranklist[this.iPoint].rank+"___"+this.iMyRank+"___"+ this.ranklist[this.iPoint].fid+"___"+MyFT.mft.iFTid +"___"+this.ranklist[this.iPoint].nowar);
    		if(this.iNoWar>0)
    		{
    			this.pm3f.DrawTextEx(this.btn_fight.iX,this.btn_fight.iY, "免战中", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		}
    		else if(FTRank.iFTStat==2)
    		{//挑战查询
    			this.btn_fight.sName="挑战查询";
    			this.btn_fight.Draw();
    		}
    		else if(FTRank.iFTStat==1)
    		{
    			if(FTRank.iDFid==0)
    			{
    				this.btn_fight.sName="发起挑战";
    				if(this.iPoint>=0 && this.iPoint<this.iCount && this.ranklist[this.iPoint].rank<this.iMyRank && this.ranklist[this.iPoint].fid!=MyFT.mft.iFTid && this.ranklist[this.iPoint].nowar==0)
    				{
    					this.btn_fight.Draw();
    				}
    			}
    			else
    			{
    				this.btn_fight.sName="取消挑战";
    				this.btn_fight.Draw();
    			}
    		}

    		GmPlay$1.sop("ftstat="+FTRank.iFTStat);
    		
    		this.btn_pageup.Draw();
    		this.btn_pagedown.Draw();

    		this.btn_close.Draw();
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		var i,j,k;
    		if(FTRank.iFTStat==2)
    		{
    			if(this.btn_fight.ProcTouch(msg, x, y))
    			{
    				if(this.btn_fight.bCheck())
    				{//弹出挑战框
    					GmProtocol$1.gi().s_FTChallenge(3, 0, 0);
    				}
    				return true;
    			}
    		}
    		else if(FTRank.iFTStat==1)
    		{
    			if(FTRank.iDFid==0)
    			{
    				if(this.iPoint>=0 && this.iPoint<this.iCount && this.ranklist[this.iPoint].rank<this.iMyRank && this.ranklist[this.iPoint].fid!=MyFT.mft.iFTid && this.ranklist[this.iPoint].nowar==0)
    				{
    					if(this.btn_fight.ProcTouch(msg, x, y))
    					{
    						if(this.btn_fight.bCheck())
    						{//弹出挑战框
    							FTChallenge.Open(this.ranklist[this.iPoint].name,this.ranklist[this.iPoint].fid);
    						}
    						return true;
    					}
    				}
    			}
    			else
    			{
    					if(this.btn_fight.ProcTouch(msg, x, y))
    					{
    						if(this.btn_fight.bCheck())
    						{//弹出挑战框
    							GmProtocol$1.gi().s_FTChallenge(2, 0, 0);
    						}
    						return true;
    					}
    			}
    		}
    		
    		this.iPoint=-1;
    		for(i=0;i<10;i++)
    		{
    			j=this.iX+20+Math.floor(i/5)*this.iW/2;
    			k=this.iY+60+i%5*65;
    			if(XDefine$1.bInRect(x, y, j, k, this.iW/2-40, 60))this.iPoint=i;
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		if(this.btn_pageup.ProcTouch(msg, x, y))
    		{
    			if(this.btn_pageup.bCheck())
    			{//上一页
    				if(this.iPage>0)
    				{
    					this.iPage--;
    					GmProtocol$1.gi().s_FTChallenge(0, this.iPage,0);
    				}
    				else EasyMessage.easymsg.AddMessage("已到首页");
    			}
    			return true;
    		}
    		if(this.btn_pagedown.ProcTouch(msg, x, y))
    		{
    			if(this.btn_pagedown.bCheck())
    			{//下一页
    //				if(iFtCount>=10)
    				{
    					this.iPage++;
    					GmProtocol$1.gi().s_FTChallenge(0, this.iPage,0);
    				}
    //				else EasyMessage.easymsg.AddMessage("已到末页");
    			}
    			return true;
    		}
    		
    		if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))return true;
    		return false;
    	}
    }

    FTRank.iFTStat;
    FTRank.iDFid;
    FTRank.iDMoney;

    FTRank._2506c=function( pls)
    {
       FTRank.iFTStat=pls.GetNextInt();
       FTRank.iDFid=pls.GetNextInt();
       FTRank.iDMoney=pls.GetNextInt();
       if(FTRank.iDMoney<=0)FTRank.iDFid=0;
    };
    FTRank.Open=function( pls)
    {
       if(XStat$1.gi().iXStat==XStat$1.GS_LOADING1)XStat$1.gi().PopStat(1);
       var i;
       var ftr;
       if(XStat$1.gi().iXStat==XStat$1.GS_FTRANK)
       {
           ftr= XStat$1.gi().oCurrentView;
       }
       else
       {
           ftr= XStat$1.gi().PushStat(XStat$1.GS_FTRANK);
           ftr.ranklist=new Array(10);//
           for(i=0;i<10;i++)ftr.ranklist[i]=new _FTRANK();
       }
       ftr.iNoWar=pls.GetNextInt();
       ftr.iMyRank=pls.GetNextInt();
       ftr.iPage=pls.GetNextInt();//当前页码
       ftr.iCount=pls.GetNextInt();
       for(i=0;i<ftr.iCount;i++)
       {
           ftr.ranklist[i].rank=pls.GetNextInt();
           ftr.ranklist[i].fid=pls.GetNextInt();
           ftr.ranklist[i].name=pls.GetNextString();
           ftr.ranklist[i].leader=pls.GetNextString();
           ftr.ranklist[i].nowar=pls.GetNextInt();
       }
       ftr.iPoint=-1;
    };

    //注入资金
    class FTPutIn extends BaseClass{
    	
    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=30+200+20+150+30;
    		this.iH=30+50+10+40+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.in_money=new XInput(GmPlay$1.xani_ui);
    		this.in_money.sDetail="0";
    		this.in_money.bNumber=true;
    		this.in_money.iTextSize=20;
    		this.in_money.iMaxNumber=20000000;
    		this.in_money.iTextColor=0xff114e61;
    		
    		this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_ok.Move(this.iX+30+200+20,this.iY+30-5, 150, 60);
    		this.btn_ok.InitButton("1号按钮150_60");
    		this.btn_ok.sName="存入";
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.InitButton("关闭按钮");
    	}
    	Draw()
    	{
    		DrawMode$1.frame_type4("7号框52_52", this.iX, this.iY, this.iW, this.iH, 52, 52);
    		
    		this.in_money.Move(this.iX+30,this.iY+30, 200, 50);
    		DrawMode$1.frame_type4("8号框20_20", this.in_money.iX, this.in_money.iY, this.in_money.iW, this.in_money.iH, 20, 20);
    		this.in_money.DrawText();
    		this.in_money.onscr();
    		
    		FormatString.gi().Format("#c000000说明：将你的铜币存入到战队资金，战队资金总额最高不能超过2000万", this.iW-40, 20);
    		FormatString.gi().Draw(this.iX+30, this.iY+30+50+10);
    		
    		this.btn_ok.Draw();
    		this.btn_close.Draw();
    	}
    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{
    				if(this.in_money.sDetail.length>0)
    				{
    					i=parseInt(this.in_money.sDetail);
    					if(i<=0)
    					{
    						EasyMessage.easymsg.AddMessage("存入资金不能为0");
    						return true;
    					}
    					else if(i>GmMe$1.me.rbs.iMoney)
    					{
    						EasyMessage.easymsg.AddMessage("存入资金不能超过上限");
    						return true;
    					}
    					else
    					{//确定注入
    						GmProtocol$1.gi().s_FTOperate(1,i,0);
    					}
    					XStat$1.gi().PopStat(1);
    				}
    			}
    			return true;
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		this.in_money.ProcTouch(msg, x,y);
    		return false;
    	}
    }

    FTPutIn.Open=function( m)
    {
        var ftc;
        if(XStat$1.gi().iXStat==XStat$1.GS_FTPUTIN)
        {
            ftc= XStat$1.gi().oCurrentView;
        }
        else
        {
            ftc=XStat$1.gi().PushStat(XStat$1.GS_FTPUTIN);
        }
        ftc.in_money.iMaxNumber=20000000-m;
        if(ftc.in_money.iMaxNumber>GmMe$1.me.rbs.iMoney)ftc.in_money.iMaxNumber=GmMe$1.me.rbs.iMoney;
    };

    //注入资金
    class FTGetOut extends BaseClass{


    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=30+200+20+150+30;
    		this.iH=30+50+10+40+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.in_money=new XInput(GmPlay$1.xani_ui);
    		this.in_money.sDetail="0";
    		this.in_money.bNumber=true;
    		this.in_money.iTextSize=20;
    		this.in_money.iMaxNumber=20000000;
    		this.in_money.iTextColor=0xff114e61;
    		
    		this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_ok.Move(this.iX+30+200+20,this.iY+30-5, 150, 60);
    		this.btn_ok.InitButton("1号按钮150_60");
    		this.btn_ok.sName="取出";
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.InitButton("关闭按钮");
    	}
    	 Draw()
    	{
    		DrawMode$1.frame_type4("7号框52_52", this.iX, this.iY, this.iW, this.iH, 52, 52);
    		
    		this.in_money.Move(this.iX+30,this.iY+30, 200, 50);
    		DrawMode$1.frame_type4("8号框20_20", this.in_money.iX, this.in_money.iY, this.in_money.iW, this.in_money.iH, 20, 20);
    		this.in_money.DrawText();

    		this.in_money.onscr();
    		
    		FormatString.gi().Format("#c000000说明：从战队资金中取出铜币，战队剩余资金不能低于100万", this.iW-40, 20);
    		FormatString.gi().Draw(this.iX+30, this.iY+30+50+10);
    		
    		this.btn_ok.Draw();
    		this.btn_close.Draw();
    	}
    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{
    				if(this.in_money.sDetail.length>0)
    				{
    					i=parseInt(this.in_money.sDetail);
    					if(i<=0)
    					{
    						EasyMessage.easymsg.AddMessage("取出资金不能为0");
    						return true;
    					}
    					else
    					{//确定取出
    						GmProtocol$1.gi().s_FTOperate(2,i,0);
    					}
    					XStat$1.gi().PopStat(1);
    				}
    			}
    			return true;
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		this.in_money.ProcTouch(msg, x,y);
    		return false;
    	}
    }
    FTGetOut.Open=function( m)
    {
        var ftc;
        if(XStat$1.gi().iXStat==XStat$1.GS_FTGETOUT)
        {
            ftc= XStat$1.gi().oCurrentView;
        }
        else
        {
            ftc= XStat$1.gi().PushStat(XStat$1.GS_FTGETOUT);
        }
        ftc.in_money.iMaxNumber=m-1000000;
    };

    class FTMiJing  extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=500;
    		this.iH=60+105*3+40;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_open=new Array(5);//
    		for(var i=0;i<3;i++)
    		{
    			this.btn_open[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_open[i].InitButton("1号按钮90_60");
    			this.btn_open[i].sName="开启";
    		}
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.InitButton("关闭按钮");
    	}
    	Draw()
    	{
    		var offx,offy,offw,offh;
    		DrawMode$1.frame_type4("10号框20_20", this.iX, this.iY, this.iW, this.iH, 20, 20);
    		this.pm3f.DrawText_2(this.iX+this.iW/2, this.iY+15, "战队秘境", 0xfffeec7e, 40, 101, 1, 1, 0, -2, 0,2,0xff01152e);
    		
    		offx=this.iX+20;
    		offy=this.iY+60;
    		offw=this.iW-40;
    		offh=100;
    		DrawMode$1.frame_type4("2号框20_20", offx, offy, offw, offh, 20, 20);
    		this.pm3f.DrawText_2(offx+5, offy+5, "封印之地1", 0xfffeec7e, 30, 101, 1, 1, 0, 0, 0,2,0xff01152e);
    		this.pm3f.DrawTextEx(offx+5, offy+5+30, "进入条件：本战队成员且等级>=40", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		this.pm3f.DrawTextEx(offx+5, offy+5+50, "消耗：100声望", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		this.pm3f.DrawTextEx(offx+5, offy+5+70, "通关掉落：一级封印兽魂", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    //		FormatString.gi().Format("#e#e", offw-130, 20);
    //		FormatString.gi().Draw(offx+5, offy+5);
    		this.btn_open[0].Move(offx+offw-20-90,offy+offh/2-60/2, 90, 60);
    		this.btn_open[0].Draw();
    		
    		offy+=105;
    		DrawMode$1.frame_type4("2号框20_20", offx, offy, offw, offh, 20, 20);
    		this.pm3f.DrawText_2(offx+5, offy+5, "封印之地2", 0xfffeec7e, 30, 101, 1, 1, 0, 0, 0,2,0xff01152e);
    		this.pm3f.DrawTextEx(offx+5, offy+5+30, "进入条件：本战队成员且等级>=40", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		this.pm3f.DrawTextEx(offx+5, offy+5+50, "消耗：200声望", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		this.pm3f.DrawTextEx(offx+5, offy+5+70, "通关掉落：二级封印兽魂", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		this.btn_open[1].Move(offx+offw-20-90,offy+offh/2-60/2, 90, 60);
    		this.btn_open[1].Draw();
    		
    		offy+=105;
    		DrawMode$1.frame_type4("2号框20_20", offx, offy, offw, offh, 20, 20);
    		this.pm3f.DrawText_2(offx+5, offy+5, "封印之地3", 0xfffeec7e, 30, 101, 1, 1, 0, 0, 0,2,0xff01152e);
    		this.pm3f.DrawTextEx(offx+5, offy+5+30, "进入条件：本战队成员且等级>=60", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		this.pm3f.DrawTextEx(offx+5, offy+5+50, "消耗：400声望", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		this.pm3f.DrawTextEx(offx+5, offy+5+70, "通关掉落：三级封印兽魂", 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    		this.btn_open[2].Move(offx+offw-20-90,offy+offh/2-60/2, 90, 60);
    		this.btn_open[2].Draw();
    		
    		this.pm3f.DrawTextEx(offx, this.iY+this.iH-40, "注：加入战队七天以上才能参与秘境", 0xff114e61, 20, 101, 1, 1, 0, 0, 0);
    //		FormatString.gi().Format("#e#e", offw-130, 20);
    //		FormatString.gi().Draw(offx+5, offy+5);
    //		this.btn_open[0].Move(offx+offw-120,offy-offh/2+40/2, 110, 40);
    //		this.btn_open[0].Draw();
    		
    		this.btn_close.Draw();
    		if(Confirm1.end(Confirm1.CONFIRM_FTMJ1))
    		{
    			if(Confirm1.bConfirm)
    			{//开启秘境1
    				GmProtocol$1.gi().s_FTOperate(7, 1, 0);
    				XStat$1.gi().PopStat(2);
    			}
    		}
    		if(Confirm1.end(Confirm1.CONFIRM_FTMJ2))
    		{
    			if(Confirm1.bConfirm)
    			{//开启秘境1
    				GmProtocol$1.gi().s_FTOperate(7, 2, 0);
    				XStat$1.gi().PopStat(2);
    			}
    		}
    		if(Confirm1.end(Confirm1.CONFIRM_FTMJ3))
    		{
    			if(Confirm1.bConfirm)
    			{//开启秘境1
    				GmProtocol$1.gi().s_FTOperate(7, 3, 0);
    				XStat$1.gi().PopStat(2);
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<3;i++)
    		{
    			if(this.btn_open[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_open[i].bCheck())
    				{
    					if(MyFT.mft.iFTJob==0)Confirm1.start(Confirm1.CONFIRM_FTMJ1+i, "战队秘境开启后只能持续一小时，未完成计算为失败，是否确定开启？");
    					else EasyMessage.easymsg.AddMessage("队长才能开启秘境");
    				}
    			}
    		}

    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{//
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))return true;
    		return false;
    	}
    }
    FTMiJing.Open=function()
    {
        var fmj;
        if(XStat$1.gi().iXStat==XStat$1.GS_FTMIJING)
        {
            fmj= XStat$1.gi().oCurrentView;
        }
        else
        {
            fmj= XStat$1.gi().PushStat(XStat$1.GS_FTMIJING);
        }
    };

    //战队属性界面
    class FTFrame extends BaseClass{
    	//注入资金，提取资金
    	//免战：关，领取声望
    	//解散战队

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=590;
    		this.iH=420;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_putin=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_putin.Move(this.iX+30,this.iY+this.iH-30-60-10-60, 150, 60);
    		this.btn_putin.InitButton("1号按钮150_60");
    		this.btn_putin.sName="存入资金";
    		
    		this.btn_getout=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_getout.Move(this.iX+30,this.iY+this.iH-30-60, 150, 60);
    		this.btn_getout.InitButton("1号按钮150_60");
    		this.btn_getout.sName="提取资金";
    		
    		this.btn_nowar=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_nowar.Move(this.iX+this.iW/2-150/2,this.iY+this.iH-30-60-10-60, 150, 60);
    		this.btn_nowar.InitButton("1号按钮150_60");
    		this.btn_nowar.sName="免战";
    		
    		this.btn_sw=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_sw.Move(this.iX+this.iW/2-150/2,this.iY+this.iH-30-60, 150, 60);
    		this.btn_sw.InitButton("1号按钮150_60");
    		this.btn_sw.sName="领取声望";
    		
    		this.btn_secret=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_secret.Move(this.iX+this.iW-30-150,this.iY+this.iH-30-60-10-60, 150, 60);
    		this.btn_secret.InitButton("1号按钮150_60");
    		this.btn_secret.sName="战队秘境";
    		
    		this.btn_dismiss=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_dismiss.Move(this.iX+this.iW-30-150,this.iY+this.iH-30-60, 150, 60);
    		this.btn_dismiss.InitButton("1号按钮150_60");
    		if(MyFT.mft.iFTJob==0)this.btn_dismiss.sName="解散战队";
    		else this.btn_dismiss.sName="退出战队";
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.InitButton("关闭按钮");
    	}
    	
    	Draw()
    	{
    		DrawMode$1.frame_type4("10号框20_20",this.iX, this.iY, this.iW, this.iH,20,20);
    //		this.pm3f.DrawText_2(this.iX+this.iW/2, this.iY+15, this.sName, 0xfffeec7e, 40, 101, 1, 1, 0, -2, 0,2,0xff01152e);
    		
    		DrawMode$1.ui3_Text1(this.iX+30, this.iY+40, 80, 160, "名称", this.sName);
    		DrawMode$1.ui3_Text1(this.iX+30, this.iY+40+40*1, 80, 160, "队长", this.sLeader);
    		DrawMode$1.ui3_Text1(this.iX+30, this.iY+40+40*2, 80, 160, "号码", ""+this.iRid);
    		DrawMode$1.ui3_Text1(this.iX+30, this.iY+40+40*3, 80, 160, "荣誉", ""+this.iRy);
    		DrawMode$1.ui3_Text1(this.iX+30, this.iY+40+40*4, 80, 160, "声望", ""+this.iSw);
    		
    		if(this.iRank>=100000)DrawMode$1.ui3_Text1(this.iX+30+250, this.iY+40,120,160,"战队排名", "暂无");
    		else DrawMode$1.ui3_Text1(this.iX+30+250, this.iY+40,120,160,"战队排名", ""+this.iRank);
    		DrawMode$1.ui3_Text1(this.iX+30+250, this.iY+40+40*1,120,160,"胜利场次", ""+this.iWin);
    		DrawMode$1.ui3_Text1(this.iX+30+250, this.iY+40+40*2,120,160,"失败场次", ""+this.iLost);
    		DrawMode$1.ui3_Text1(this.iX+30+250, this.iY+40+40*3,120,160,"放弃场次", ""+this.iGiveup);
    		DrawMode$1.ui3_Text1(this.iX+30+250, this.iY+40+40*4,120,160,"战队资金", ""+this.iMoney);
    		
    		if(MyFT.mft.iFTJob==0)
    		{//队长
    			this.btn_putin.Draw();
    			this.btn_getout.Draw();
    			if(this.iNoWar==0)this.btn_nowar.sName="免战：关";
    			else this.btn_nowar.sName="免战：开";
    			this.btn_nowar.Draw();
    			if(this.iSwAdd>0)
    			{
    				this.btn_sw.Draw();
    				if(Confirm1.end(Confirm1.CONFIRM_SWADD))
    				{
    					if(Confirm1.bConfirm)
    					{//领取当日声望
    						GmProtocol$1.gi().s_FTOperate(4, this.iSwAdd, 0);
    						this.iSwAdd=0;
    					}
    				}
    			}
    			
    			if(Confirm1.end(Confirm1.CONFIRM_NOWAR))
    			{
    				if(Confirm1.bConfirm)
    				{//同意切换免战
    					if(this.iNoWar==0)this.iNoWar=1;
    					else this.iNoWar=0;
    					GmProtocol$1.gi().s_FTOperate(3, this.iNoWar, 0);
    				}
    			}
    		}
    		this.btn_secret.Draw();
    		this.btn_dismiss.Draw();
    		if(Confirm1.end(Confirm1.CONFIRM_FTDISMISS))
    		{
    			if(Confirm1.bConfirm)
    			{//离开战队
    				GmProtocol$1.gi().s_FTOperate(5, MyFT.mft.iFTJob, 0);
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		this.btn_close.Draw();
    	}
    	
    	 ProcTouch( msg, x, y)
    	{
    		if(MyFT.mft.iFTJob==0)
    		{//队长
    			if(this.btn_putin.ProcTouch(msg, x, y))
    			{
    				if(this.btn_putin.bCheck())
    				{
    					if(this.iMoney>=20000000)EasyMessage.easymsg.AddMessage("战队资金已达2000万");
    					else FTPutIn.Open(this.iMoney);
    				}
    				return true;
    			}
    			if(this.btn_getout.ProcTouch(msg, x, y))
    			{
    				if(this.btn_getout.bCheck())
    				{
    					if(this.iMoney<=1000000)EasyMessage.easymsg.AddMessage("战队资金不能低于100万");
    					else FTGetOut.Open(this.iMoney);
    				}
    				return true;
    			}
    			if(this.btn_nowar.ProcTouch(msg, x, y))
    			{
    				if(this.btn_nowar.bCheck())
    				{
    					Confirm1.start(Confirm1.CONFIRM_NOWAR, "每天20:00:00~24:00:00之间可切换免战状态#e免战开启后，可免受其他战队的挑战(每天0点将扣除10万战队资金)#e是否确定切换免战状态？");
    				}
    				return true;
    			}
    			if(this.iSwAdd>0)
    			{
    				if(this.btn_sw.ProcTouch(msg, x, y))
    				{
    					if(this.btn_sw.bCheck())
    					{
    						Confirm1.start(Confirm1.CONFIRM_SWADD, "每天18:00:00之前可领取当日战队声望奖励#e当前可领"+this.iSwAdd+"点战队声望，战队排名越靠前，每日可领取声望越多#e是否确定领取？");
    					}
    					return true;
    				}
    			}
    		}
    		if(this.btn_secret.ProcTouch(msg, x, y))
    		{
    			if(this.btn_secret.bCheck())
    			{
    				XStat$1.gi().PushStat(XStat$1.GS_FTMIJING);
    			}
    			return true;
    		}
    		if(this.btn_dismiss.ProcTouch(msg, x, y))
    		{
    			if(this.btn_dismiss.bCheck())
    			{
    				if(MyFT.mft.iFTJob==0)Confirm1.start(Confirm1.CONFIRM_FTDISMISS, "战队解散后，战队资金将消失#e是否确定解散战队？");
    				else Confirm1.start(Confirm1.CONFIRM_FTDISMISS, "是否确定离开战队？");
    			}
    			return true;
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{//
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))return true;
    		return false;
    	}
    }
    FTFrame.Open=function( pls)
    {
        var ftf;
        
        if(XStat$1.gi().iXStat==XStat$1.GS_FTFRAME)
        {
            ftf= XStat$1.gi().oCurrentView;
        }
        else ftf= XStat$1.gi().PushStat(XStat$1.GS_FTFRAME);
        
        ftf.sName=pls.GetNextString();
        ftf.iRank=pls.GetNextInt();
        ftf.iMoney=pls.GetNextInt();
        ftf.iWin=pls.GetNextInt();
        ftf.iLost=pls.GetNextInt();
        ftf.iGiveup=pls.GetNextInt();
        ftf.iSw=pls.GetNextInt();
        ftf.iSwAdd=pls.GetNextInt();
        ftf.iRy=pls.GetNextInt();
        ftf.iNoWar=pls.GetNextInt();
        ftf.sLeader=pls.GetNextString();
        ftf.iRid=pls.GetNextInt();
    };

    class _FTAGREE
    {/*
    	public int rid,lev;
    	public String name;
        public int online;*/
        constructor()
        {

        }
    };
    //战队属性界面
    class FTAgree extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=560;
    		this.iH=30+50+50+40*10+20+60+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_refuse=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_refuse.Move(this.iX+30,this.iY+this.iH-30-60, 150, 60);
    		this.btn_refuse.InitButton("1号按钮150_60");
    		this.btn_refuse.sName="拒绝";
    		
    		this.btn_agree=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_agree.Move(this.iX+this.iW/2-150/2,this.iY+this.iH-30-60, 150, 60);
    		this.btn_agree.InitButton("1号按钮150_60");
    		this.btn_agree.sName="同意";
    		
    		this.btn_watch=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_watch.Move(this.iX+this.iW-30-150,this.iY+this.iH-30-60, 150, 60);
    		this.btn_watch.InitButton("1号按钮150_60");
    		this.btn_watch.sName="查看";
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.InitButton("关闭按钮");
    		
    		this.ui_mlist=new UIList$1(0,4,500,50+40*10);
    		this.ui_mlist.SetTitle(0, "序号", 80, false);
    		this.ui_mlist.SetTitle(1, "名字", 200, false);
    		this.ui_mlist.SetTitle(2, "等级", 80, false);
    		this.ui_mlist.SetTitle(3, "是否在线", 140, false);
    	}
    	
    	Draw()
    	{
    		var i;
    		DrawMode$1.frame_type4("10号框20_20", this.iX, this.iY, this.iW, this.iH, 20, 20);
    		this.pm3f.DrawText_2(this.iX+this.iW/2, this.iY+30+25, "申请列表", 0xfffeec7e, 36, 101, 1, 1, 0, -2, -2,2,0xff01152e);
    		
    		this.ui_mlist.BeginDraw(this.iX+30, this.iY+30+50);
    		for(i=0;i<this.iAppCount;i++)
    		{
    			this.ui_mlist.DrawUnit(0, i, ""+(i+1));
    			this.ui_mlist.DrawUnit(1, i, this.applist[i].name);
    			this.ui_mlist.DrawUnit(2, i, ""+this.applist[i].lev);

    			if(this.applist[i].online!=0)this.ui_mlist.DrawUnit(3, i, "在线");
    		}
    		this.ui_mlist.FinishDraw();
    		if(this.iPoint>=0 && this.iPoint<this.iAppCount)
    		{
    			this.btn_agree.Draw();
    			this.btn_refuse.Draw();
    			this.btn_watch.Draw();
    		}

    		this.btn_close.Draw();
    		this.iPoint=this.ui_mlist.iLockPoint;
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		if(this.ui_mlist.ProcTouch(msg, x, y))return true;
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(this.iPoint>=0 && this.iPoint<this.iAppCount)
    		{
    			if(this.btn_agree.ProcTouch(msg, x, y))
    			{
    				if(this.btn_agree.bCheck())
    				{//同意
    					GmProtocol$1.gi().s_FTAgree(0,this.applist[this.iPoint].rid);
    					XStat$1.gi().PopStat(1);
    					XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    				}
    				return true;
    			}
    			if(this.btn_refuse.ProcTouch(msg, x, y))
    			{
    				if(this.btn_refuse.bCheck())
    				{//拒绝
    					GmProtocol$1.gi().s_FTAgree(1,this.applist[this.iPoint].rid);
    					XStat$1.gi().PopStat(1);
    					XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    				}
    				return true;
    			}
    			if(this.btn_watch.ProcTouch(msg, x, y))
    			{
    				if(this.btn_watch.bCheck())
    				{//查看
    					GmProtocol$1.gi().s_WatchOn(0, this.applist[this.iPoint].rid, 0, "");
    				}
    				return true;
    			}
    		}
    		if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))return true;
    		return false;
    	}
    }

    FTAgree.Open=function( pls)
    {
        if(XStat$1.gi().iXStat==XStat$1.GS_LOADING1)XStat$1.gi().PopStat(1);
        var i;
        var fta;
        if(XStat$1.gi().iXStat==XStat$1.GS_FTAGREE)
        {
            fta= XStat$1.gi().oCurrentView;
        }
        else
        {
            fta= XStat$1.gi().PushStat(XStat$1.GS_FTAGREE);
            fta.applist=new Array(10);//
            for(i=0;i<10;i++)fta.applist[i]=new _FTAGREE();
        }
        fta.iAppCount=pls.GetNextInt();//当前页码
        for(i=0;i<fta.iAppCount;i++)
        {
            fta.applist[i].rid=pls.GetNextInt();
            fta.applist[i].online=pls.GetNextByte();
            fta.applist[i].name=pls.GetNextString();
            fta.applist[i].lev=pls.GetNextInt();
        }
        fta.iPoint=-1;
    };

    class _FTAPPLIST
    {
    //	public int fid,rank;
    //	public String name,header;
    constructor()
    {

    }
    };
    //战队属性界面
    class FTApply extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=560;
    		this.iH=30+50+50+40*10+20+60+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_pageup=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_pageup.Move(this.iX+30,this.iY+this.iH-30-60, 120, 60);
    		this.btn_pageup.InitButton("1号按钮120_60");
    		this.btn_pageup.sName="上一页";
    		
    		this.btn_pagedown=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_pagedown.Move(this.iX+this.iW-30-120,this.iY+this.iH-30-60, 120, 60);
    		this.btn_pagedown.InitButton("1号按钮120_60");
    		this.btn_pagedown.sName="下一页";
    		
    		this.btn_apply=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_apply.Move(this.iX+this.iW/2-120/2,this.iY+this.iH-30-60, 120, 60);
    		this.btn_apply.InitButton("1号按钮120_60");
    		this.btn_apply.sName="申请";
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.InitButton("关闭按钮");
    		
    		this.ui_mlist=new UIList$1(0,3,500,50+40*10);
    		this.ui_mlist.SetTitle(0, "序号", 100, false);
    		this.ui_mlist.SetTitle(1, "战队名称", 200, false);
    		this.ui_mlist.SetTitle(2, "队长", 200, false);
    	}
    	
    	Draw()
    	{
    		var i;
    		DrawMode$1.frame_type4("10号框20_20", this.iX, this.iY, this.iW, this.iH, 20, 20);
    		this.pm3f.DrawText_2(this.iX+this.iW/2, this.iY+30+25, "申请加入战队", 0xfffeec7e, 36, 101, 1, 1, 0, -2, -2,2,0xff01152e);
    		
    		this.ui_mlist.BeginDraw(this.iX+30, this.iY+30+50);
    		for(i=0;i<this.iFtCount;i++)
    		{
    			this.ui_mlist.DrawUnit(0, i, ""+(this.iPage*10+1+i));
    			this.ui_mlist.DrawUnit(1, i, this.ftlist[i].name);
    			this.ui_mlist.DrawUnit(2, i, this.ftlist[i].header);
    		}
    		this.ui_mlist.FinishDraw();
    		
    		this.iPoint=this.ui_mlist.iLockPoint;
    		if(this.iPoint>=0 && this.iPoint<this.iFtCount)this.btn_apply.Draw();
    		
    		this.btn_pageup.Draw();
    		this.btn_pagedown.Draw();
    		this.btn_close.Draw();
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		if(this.ui_mlist.ProcTouch(msg, x, y)	)return true;
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(this.iPoint>=0 && this.iPoint<this.iFtCount)
    		{
    			if(this.btn_apply.ProcTouch(msg, x, y))
    			{
    				if(this.btn_apply.bCheck())
    				{//申请
    					GmProtocol$1.gi().s_ApplyFT(this.ftlist[this.iPoint].fid);
    				}
    				return true;
    			}
    		}
    		
    		if(this.btn_pageup.ProcTouch(msg, x, y))
    		{
    			if(this.btn_pageup.bCheck())
    			{//上一页
    				if(this.iPage>0)
    				{
    					this.iPage--;
    					GmProtocol$1.gi().s_SeverEvent(18,2,this.iPage,0,0);
    				}
    				else EasyMessage.easymsg.AddMessage("已到首页");
    			}
    			
    			return true;
    		}
    		if(this.btn_pagedown.ProcTouch(msg, x, y))
    		{
    			if(this.btn_pagedown.bCheck())
    			{//下一页
    				if(this.iFtCount>=10)
    				{
    					this.iPage++;
    					GmProtocol$1.gi().s_SeverEvent(18,2,this.iPage,0,0);
    				}
    				else EasyMessage.easymsg.AddMessage("已到末页");
    			}
    			
    			return true;
    		}
    		
    		if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))return true;
    		return false;
    	}
    }

    FTApply.Open=function( pls)
    	{
    		var i;
    		var fta;
    		if(XStat$1.gi().iXStat==XStat$1.GS_FTAPPLY)
    		{
    			fta= XStat$1.gi().oCurrentView;
    		}
    		else
    		{
    			fta= XStat$1.gi().PushStat(XStat$1.GS_FTAPPLY);
    			fta.ftlist=new Array(10);//
    			for(i=0;i<10;i++)fta.ftlist[i]=new _FTAPPLIST();
    		}
    		fta.iPage=pls.GetNextShort();
    		fta.iFtCount=pls.GetNextByte();//当前页码
    		for(i=0;i<fta.iFtCount;i++)
    		{
    			fta.ftlist[i].fid=pls.GetNextInt();
    			fta.ftlist[i].rank=pls.GetNextInt();
    			fta.ftlist[i].name=pls.GetNextString();
    			fta.ftlist[i].header=pls.GetNextString();
    		}
    		fta.iPoint=-1;
    	};

    class _FTMEMBER
    {/*
    	public int rid,job,tick,maxtick;
    	public String name;
        public int online;*/
        constructor()
        {

        }
    };
    //战队属性界面
    class FTMember extends BaseClass{
    	
    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=600+60;
    		this.iH=30+50+50+40*10+20+60+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    	
    		this.btn_watch=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_watch.Move(this.iX+30,this.iY+this.iH-30-60, 90, 60);
    		this.btn_watch.InitButton("1号按钮90_60");
    		this.btn_watch.sName="查看";
    		
    		this.btn_tranfer=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_tranfer.Move(this.iX+30+(90+20)*1,this.iY+this.iH-30-60, 90, 60);
    		this.btn_tranfer.InitButton("1号按钮90_60");
    		this.btn_tranfer.sName="转让";
    		
    		this.btn_kick=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_kick.Move(this.iX+30+(90+20)*2,this.iY+this.iH-30-60, 90, 60);
    		this.btn_kick.InitButton("1号按钮90_60");
    		this.btn_kick.sName="踢出";
    		
    		this.btn_agree=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_agree.Move(this.iX+this.iW-30-90-20-150,this.iY+this.iH-30-60, 150, 60);
    		this.btn_agree.InitButton("1号按钮150_60");
    		this.btn_agree.sName="申请列表";
    		
    		this.btn_message=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_message.Move(this.iX+this.iW-30-90,this.iY+this.iH-30-60, 90, 60);
    		this.btn_message.InitButton("1号按钮90_60");
    		this.btn_message.sName="群邮";
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.InitButton("关闭按钮");
    		
    		this.ui_mlist=new UIList$1(0,5,600,50+40*10);
    		this.ui_mlist.SetTitle(0, "序号", 80, false);
    		this.ui_mlist.SetTitle(1, "名字", 200, false);
    		this.ui_mlist.SetTitle(2, "贡献", 120, false);
    		this.ui_mlist.SetTitle(3, "职位", 80, false);
    		this.ui_mlist.SetTitle(4, "是否在线", 120, false);
    	}
    	
    	Draw()
    	{
    		var i;
    		DrawMode$1.frame_type4("10号框20_20", this.iX, this.iY, this.iW, this.iH, 20, 20);
    		this.pm3f.DrawText_2(this.iX+this.iW/2, this.iY+30+25, "战队成员", 0xfffeec7e, 36, 101, 1, 1, 0, -2, -2,2,0xff01152e);
    		
    		this.ui_mlist.BeginDraw(this.iX+30, this.iY+30+50);
    		for(i=0;i<this.iMemberCount;i++)
    		{
    			this.ui_mlist.DrawUnit(0, i, ""+(i+1));
    			this.ui_mlist.DrawUnit(1, i, this.ftmember[i].name);
    			this.ui_mlist.DrawUnit(2, i, this.ftmember[i].tick+"/"+this.ftmember[i].maxtick);
    			if(this.ftmember[i].online!=0)this.ui_mlist.DrawUnit(4, i, "在线");
    			
    			if(this.ftmember[i].job==0)this.ui_mlist.DrawUnit(3, i, "队长");
    			else if(this.ftmember[i].job==1)this.ui_mlist.DrawUnit(3, i, "副队长");
    			else this.ui_mlist.DrawUnit(3, i, "队员");
    		}
    		this.ui_mlist.FinishDraw();
    //		if(this.iPoint>=0 && this.iPoint<iFtCount)btn_apply.Draw();

    		this.btn_close.Draw();
    		
    		this.iPoint=this.ui_mlist.iLockPoint;
    		if(this.iPoint>=0 && this.iPoint<this.iMemberCount)this.btn_watch.Draw();
    		this.btn_message.Draw();
    		//job==0才能看到
    		if(MyFT.mft.iFTid>0 && MyFT.mft.iFTJob==0)
    		{
    			if(this.iPoint>0 && this.iPoint<this.iMemberCount)
    			{
    				this.btn_kick.Draw();
    				this.btn_tranfer.Draw();
    			}
    			this.btn_agree.Draw();
    			
    			if(Confirm1.end(Confirm1.CONFIRM_FTKICK))
    			{
    				if(Confirm1.bConfirm)
    				{//同意切换免战
    					if(this.iPoint>=0 && this.iPoint<this.iMemberCount)
    					{
    						GmProtocol$1.gi().s_FTOperate(6, this.ftmember[this.iPoint].rid, 0);
    					}
    				}
    			}
    			if(Confirm1.end(Confirm1.CONFIRM_FTTRANFER))
    			{
    				if(Confirm1.bConfirm)
    				{//同意转让战队
    					if(this.iPoint>=0 && this.iPoint<this.iMemberCount)
    					{
    						GmProtocol$1.gi().s_FTOperate(9, this.ftmember[this.iPoint].rid, 0);
    						XStat$1.gi().PopStat(1);
    					}
    				}
    			}
    		}

    	}
    	
    	 ProcTouch( msg, x, y)
    	{
    		if(this.ui_mlist.ProcTouch(msg, x, y))return true;
    		if(MyFT.mft.iFTid>0 && MyFT.mft.iFTJob==0)
    		{
    			if(this.btn_agree.ProcTouch(msg, x, y))
    			{
    				if(this.btn_agree.bCheck())
    				{//打开申请列表，同意/拒绝申请者加入
    					XStat$1.gi().PopStat(1);
    					GmProtocol$1.gi().s_GetApply(0);
    				}
    				return true;
    			}
    			if(this.iPoint>=0 && this.iPoint<this.iMemberCount)
    			{
    				if(this.btn_kick.ProcTouch(msg, x, y))
    				{
    					if(this.btn_kick.bCheck())
    					{
    						Confirm1.start(Confirm1.CONFIRM_FTKICK, "是否确定将"+this.ftmember[this.iPoint].name+"("+this.ftmember[this.iPoint].rid+")"+"踢出战队？");
    					}
    					return true;
    				}
    				if(this.btn_tranfer.ProcTouch(msg, x, y))
    				{
    					if(this.btn_tranfer.bCheck())
    					{
    						Confirm1.start(Confirm1.CONFIRM_FTTRANFER, "是否确定将战队转让给"+this.ftmember[this.iPoint].name+"("+this.ftmember[this.iPoint].rid+")"+"？(转让战队需要扣除20万战队资金)");
    					}
    					return true;
    				}
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(this.iPoint>=0 && this.iPoint<this.iMemberCount)
    		{
    			if(this.btn_watch.ProcTouch(msg, x, y))
    			{
    				if(this.btn_watch.bCheck())
    				{//查看
    					GmProtocol$1.gi().s_WatchOn(0, this.ftmember[this.iPoint].rid, 0, "");
    				}
    				return true;
    			}
    		}
    		if(this.btn_message.ProcTouch(msg, x, y))
    		{
    			if(this.btn_message.bCheck())
    			{
    				PrivateChat_Send.OpenChat( 10001, "战队群邮",6);
    				EasyMessage.easymsg.AddMessage("发送收取1万铜币");
    			}
    		}
    		
    		if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))return true;
    		return false;
    	}
    }

    FTMember. Open=function( pls)
    {
        var i;
        var ftm;
        if(XStat$1.gi().iXStat==XStat$1.GS_FTMEMBER)
        {
            ftm=XStat$1.gi().oCurrentView;
        }
        else
        {
            ftm=XStat$1.gi().PushStat(XStat$1.GS_FTMEMBER);
            ftm.ftmember=new Array(10);//
            for(i=0;i<10;i++)ftm.ftmember[i]=new _FTMEMBER();
        }
        ftm.iMemberCount=pls.GetNextByte();
        for(i=0;i<ftm.iMemberCount;i++)
        {
            ftm.ftmember[i].rid=pls.GetNextInt();
            ftm.ftmember[i].online=pls.GetNextByte();
            ftm.ftmember[i].name=pls.GetNextString();
            ftm.ftmember[i].job=pls.GetNextInt();
            ftm.ftmember[i].tick=pls.GetNextInt();
            ftm.ftmember[i].maxtick=pls.GetNextInt();
        }
        ftm.iPoint=-1;
    };

    // class _FUBEN
    // {/*
    // 	public int iFid;
    // 	public int iType;
    // 	public int iRid;
    // 	public String sName;
    // 	public int iLev;
    // 	public int ras;
    // 	public String tm;
    // 	public String sDetail;
    //     public byte iOnLine;//0不在线,1在线*/
    //     constructor()
    //     {

    //     }
    // }
    class ApplyFuBen extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW = 950;
    		this.iH = 610;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_button);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX + this.iW - 35, this.iY - 25, 60, 60);
    		
    		this.fblist=new Array(10);//
    		for(i=0;i<10;i++)
    		{
    			this.fblist[i]=new Object();
    		}
    		this.iCount=0;
    		
    		this.btn_apply=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_apply.InitButton("1号按钮150_60");
    		this.btn_apply.Move(this.iX + this.iW - 40 - 150, this.iY + this.iH - 40 - 60, 150, 60);
    		this.btn_apply.sName="申 请";
    		
    		this.btn_up=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_up.InitButton("1号按钮150_60");
    		this.btn_up.Move(this.iX + 50, this.iY + this.iH-40-60, 150, 60);
    		this.btn_up.sName="上一页";
    		
    		this.btn_down=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_down.InitButton("1号按钮150_60");
    		this.btn_down.Move(this.iX + 50+520-150, this.iY + this.iH -40 - 60, 150, 60);
    		this.btn_down.sName="下一页";
    		
    		this.ui_fblist=new UIList$1(0, 4, 520, 50 + 40 * 10);
    //		this.ui_fblist.UIList_init(0, 4, 520, 50 + 40 * 10);
    		this.ui_fblist.SetTitle(0, "副本名", 100, false);
    		this.ui_fblist.SetTitle(1, "团长", 200, false);
    		this.ui_fblist.SetTitle(2, "团长等级", 120, false);
    		this.ui_fblist.SetTitle(3, "状态", 100, false);
    	}

    	Draw()
    	{
    		var i;
    		var offx,offy;
    		DrawMode$1.new_baseframe4(this.iX, this.iY, this.iW, this.iH, "加", "入", "副", "本");
    		DrawMode$1.new_framein(this.iX + 25, this.iY + 25, this.iW - 50, this.iH - 50);
    		this.btn_close.Draw();
    		
    		this.ui_fblist.BeginDraw(this.iX+50, this.iY+50);
    		for (i = 0; i < 10; i++)
    		{
    			if (i >= this.iCount)continue;
    			this.ui_fblist.DrawUnit(0, i, GmPlay$1.de_fuben.strValue(this.fblist[i].iType, 0, 1));
    			this.ui_fblist.DrawUnit(1, i, this.fblist[i].sName);
    			this.ui_fblist.DrawUnit(2, i, ""+this.fblist[i].iLev);
    			this.ui_fblist.DrawUnit(3, i, "招募中");
    		}
    		this.ui_fblist.FinishDraw();
    		
    		M3DFast$1.gi().DrawText_2(this.iX+50+260,this.iY+ this.iH-40-30, ""+(this.iPage+1)+" / "+this.iTotalPage, 0xffffe0a0, 20, 101, 1, 1, 0, -2, -2, 3, 0xff000000);
    		
    		this.btn_up.Draw();
    		this.btn_down.Draw();
    		
    		if(this.ui_fblist.iLockPoint>=0 && this.ui_fblist.iLockPoint<this.iCount)
    		{//副本描述
    			DrawMode$1.ui3_Text1(this.iX+590, this.iY+50, 100, 220, "副本名", GmPlay$1.de_fuben.strValue(this.fblist[this.ui_fblist.iLockPoint].iType, 0, 1));
    			DrawMode$1.ui3_Text1(this.iX+590, this.iY+50+35, 100, 220, "团长", this.fblist[this.ui_fblist.iLockPoint].sName);
    			DrawMode$1.ui3_Text1(this.iX+590, this.iY+50+35*2, 100, 220, "团长号码", this.fblist[this.ui_fblist.iLockPoint].iRid+"("+(this.fblist[this.ui_fblist.iLockPoint].iOnLine==0?"离线":"在线")+")");
    			DrawMode$1.ui3_Text1(this.iX+590, this.iY+50+35*3, 100, 220, "人数限制", GmPlay$1.de_fuben.strValue(this.fblist[this.ui_fblist.iLockPoint].iType, 0, 3)+"~"+GmPlay$1.de_fuben.strValue(this.fblist[this.ui_fblist.iLockPoint].iType, 0, 4));
    			DrawMode$1.ui3_Text1(this.iX+590, this.iY+50+35*4, 100, 220, "等级限制", GmPlay$1.de_fuben.strValue(this.fblist[this.ui_fblist.iLockPoint].iType, 0, 5)+"~"+GmPlay$1.de_fuben.strValue(this.fblist[this.ui_fblist.iLockPoint].iType, 0, 6));
    			DrawMode$1.ui3_Text1(this.iX+590, this.iY+50+35*5, 100, 220, "创建时间", GmPlay$1.de_fuben.strValue(this.fblist[this.ui_fblist.iLockPoint].iType, 0, 5)+"~"+GmPlay$1.de_fuben.strValue(this.fblist[this.ui_fblist.iLockPoint].iType, 0, 6));
    			
    			M3DFast$1.gi().DrawText_2(this.iX+590, this.iY+50+35*6+5, "团队简介:", 0xffffe0a0, 28, 101, 1, 1, 0, 0, 0, 3, 0xff000000);
    			DrawMode$1.frame_type4("2号框20_20", this.iX + 590, this.iY + 50 + 35 * 7, 320, 205, 20, 20);
    			FormatString.gi().Format(this.fblist[this.ui_fblist.iLockPoint].sDetail, 300, 20);
    			FormatString.gi().Draw(this.iX+600, this.iY+50+35*7+10);
    			
    			this.btn_apply.Draw();
    		}

    		/*
    		//具体描述
    		DrawMode.ui3_Frame2(this.iX+230, this.iY+40, 500, 120);
    		FormatString.gi().Format(GmPlay.de_fuben.strValue(ifblist[iPoint], 0, 2), 480, 20);
    		FormatString.gi().Draw(this.iX+230+10, this.iY+40+10);
    		
    		//难度，副本时间，
    		//人数区间，等级区间，创建花费，
    		DrawMode.ui3_Text1(this.iX+230, this.iY+180, 100, 130, "人数", GmPlay.de_fuben.strValue(ifblist[iPoint], 0, 3)+"~"+GmPlay.de_fuben.strValue(ifblist[iPoint], 0, 4));
    		DrawMode.ui3_Text1(this.iX+230+270, this.iY+180, 100, 130, "等级", GmPlay.de_fuben.strValue(ifblist[iPoint], 0, 5)+"~"+GmPlay.de_fuben.strValue(ifblist[iPoint], 0, 6));
    		DrawMode.ui3_Text1(this.iX+230, this.iY+180+50, 100, 130, "创建花费", GmPlay.de_fuben.strValue(ifblist[iPoint], 0, 8)+"金钱");
    		
    		M3DFast.gi().DrawText_2(this.iX+230, this.iY+180+100, "团队简介:", 0xffffe0a0, 20, 101, 1, 1, 0, 0, 0, 3, 0xff000000);
    		DrawMode.ui3_Frame2(this.iX+230, this.iY+180+100+30, 350, 120);
    		FormatString.gi().Format(sDetail, 330, 20);
    		FormatString.gi().Draw(this.iX+230+10, this.iY+180+100+30+10);
    		
    		btn_detail.Draw();
    		btn_create.Draw();
    		
    		if(bEditingName)
    		{
    			sDetail=in_detail.sDetail;
    			if(in_detail.bFinished)
    			{//编辑完成//发送到服务器改名
    //				GmPlay.sop("send name");
    				bEditingName=false;
    				in_detail.bFinished=false;
    //				GmProtocol.gi().s_ChangePetName(ppet.iPid, in_name.sDetail);
    			}
    		}*/
    	}
    	ProcTouch( msg, x, y)
    	{
    		if (this.ui_fblist.ProcTouch(msg, x, y))return true;
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		if(this.btn_apply.ProcTouch(msg, x, y))
    		{
    			if(this.btn_apply.bCheck())
    			{
    				GmProtocol$1.gi().s_ApplyFuBen(this.fblist[this.ui_fblist.iLockPoint].iFid);
    //				XStat.gi().PopStat(1);
    			}
    		}
    		
    		if(this.btn_up.ProcTouch(msg, x, y))
    		{
    			if(this.btn_up.bCheck())
    			{
    				if(this.iPage>0)
    				{
    					this.iPage--;
    					GmProtocol$1.gi().s_FuBen(2,this.iPage);
    					XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    				}
    			}
    		}
    		if(this.btn_down.ProcTouch(msg, x, y))
    		{
    			if(this.btn_down.bCheck())
    			{
    				if(this.iPage<this.iTotalPage-1)
    				{
    					this.iPage++;
    					GmProtocol$1.gi().s_FuBen(2,this.iPage);
    					XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    				}
    			}
    		}
    		
    		return false;
    	}
    }

    class _SHOPGOODS$1
    {
    /*	int iFlag;
    	int iTid;
    	int iCount;
    	int iPrice;*/
    	constructor()
    	{

    	}
    }
    class FubenMall extends BaseClass{

    	 constructor( ani)
    	{
    		super();
            this.sTitle="";
    		var i,j;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=800;
    		this.iH=405;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.sgs=new Array(20);//
    		for(i=0;i<20;i++)this.sgs[i]=new _SHOPGOODS$1();
    		

    		
    		this.btn_buy=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_buy.InitButton("按钮1_110");
    		this.btn_buy.sName="兑换";
    		
    		this.goods=new Array(20);//
    		for(i=0;i<20;i++)
    		{
    			this.goods[i]=new Goods();
    			this.goods[i].iPos=i;
    		}
    	}

    	Draw_0()
    	{
    		var i;
    		
    		var offx,offy;
    		offx=this.iX+30;
    		offy=this.iY+30;
    		GoodsDraw.new_DrawGoods(offx, offy, this.goods, null, null);
    		
    //		offx=this.iX+240;
    //		offy=this.iY+this.iH-60-60;
    //		DrawMode.Frame1_BR(offx,offy, this.iW-250-40, 60);
    //		GmPlay.xani_ui.DrawAnimaEx(offx+10,offy+17, "元宝", 0, 101, 1, 1, 0, 0, 0);
    //		M3DFast.gi().DrawTextEx(offx+10+40, offy+20, ""+GmMe.me.rbs.iInGot, 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    //		M3DFast.gi().DrawTextEx(offx+10+40+200, offy+20, "1元=10元宝", 0xffffff00, 20, 101, 1, 1, 0, 0, 0);
    		
    		M3DFast$1.gi().DrawTextEx(offx+430+20, offy+10, "拥有:"+GmMe$1.me.iFlag[25]+"积分", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		if(this.lockgoods!=null)
    		{
    			M3DFast$1.gi().DrawTextEx(offx+430+20, offy+10+50, "名称:"+GmPlay$1.de_goods.strValue(this.lockgoods.iTid, 0, 4), 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    			M3DFast$1.gi().DrawTextEx(offx+430+20, offy+10+50*2, "数量:1", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    			M3DFast$1.gi().DrawTextEx(offx+430+20, offy+10+50*3, "价格:"+this.sgs[this.lockgoods.iPos].iPrice+"积分", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    			this.btn_buy.Move(this.iX+this.iW-110-30, this.iY+this.iH-30-52, 110, 52);
    			this.btn_buy.Draw();
    			GoodsDraw.new_DrawRect(offx, offy, this.goods, this.lockgoods, 0);
    		}
    		if(GoodsDraw.bShowDetail())GoodsDraw.new_DrawDetail(null, -1, -1,0);
    	}

    	Draw()
    	{
    //		var i;
    //		DrawMode.ui3_DefineFrame(this.iX, this.iY, this.iW, this.iH);
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		this.btn_close.Draw();

    		this.Draw_0();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}

    		var offx,offy;

    		offx=this.iX+30;
    		offy=this.iY+30;
    		
    		if(this.lockgoods!=null)
    		{
    			if(this.btn_buy.ProcTouch(msg, x, y))
    			{
    				if(this.btn_buy.bCheck())
    				{
    					if(GmMe$1.me.iFlag[25]<this.sgs[this.lockgoods.iPos].iPrice)EasyMessage.easymsg.AddMessage("积分不足");
    					else
    					{
    						GmProtocol$1.gi().s_FubenMallBuy(this.sgs[this.lockgoods.iPos].iFlag, this.sgs[this.lockgoods.iPos].iTid, this.sgs[this.lockgoods.iPos].iPrice);
    						XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    					}
    				}
    				return true;
    			}
    		}
    		
    		this.lockgoods=GoodsDraw.new_LockGoods(x, y, offx, offy, this.goods, msg);
    		GoodsDraw.NoMove();

    		return false;
    	}
    }
    FubenMall.OPEN=function( pls)
    	{
    		var i,j;
    		if(XStat$1.gi().iXStat!=XStat$1.GS_FUBENMALL)
    		{
    			XStat$1.gi().PushStat(XStat$1.GS_FUBENMALL);
    		}
    		var im=XStat$1.gi().LastStat(0);
    		im.iShopId=pls.GetNextInt();
    		im.sShopName=pls.GetNextString();
    //		im.iSgCount=pls.GetNextInt();
    		
    		if(im.iShopId!=0)
    		{
    			XStat$1.gi().PopStat(1);
    			return;
    		}
    		for(i=0;i<20;i++)
    		{
    			im.goods[i].iGid=-1;
    		}
    		
    		i=0;
    		while(true)
    		{//下标，类型，价格
    			im.sgs[i].iFlag=pls.GetNextInt();
    			if(im.sgs[i].iFlag==-1)break;
    			im.sgs[i].iTid=pls.GetNextInt();
    			im.sgs[i].iPrice=pls.GetNextInt();
    			im.sgs[i].iCount=1;

    			im.goods[i].iGid=1;
    			im.goods[i].iTid=im.sgs[i].iTid;
    			im.goods[i].iCount=im.sgs[i].iCount;
    			for(j=0;j<8;j++)im.goods[i].iAtts[j]=0;
    			GmPlay$1.xani_ngoods.InitAnimaWithName(GmPlay$1.de_goods.strValue(im.goods[i].iTid, -1, 10), im.goods[i].aa);
    			i++;
    		}
    		im.iSgCount=i;
    		im.lockgoods=null;
    		im.sTitle=pls.GetNextString();
    	};

    class _FUBENMEMBER
    {
        /*
    	public String sName;
    	public int iRid;
        public byte iOnLine;*/
        
    }
    class ManageFuBen extends BaseClass{
    	
    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW = 880;
    		this.iH = 550;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_button);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX + this.iW-35, this.iY-25, 60, 60);
    		
    		this.fuben=new Object();
    		this.members=new Array(128);//
    		this.applyers=new Array(128);//
    		for(i=0;i<128;i++)
    		{
    			this.members[i]=new _FUBENMEMBER();
    			this.applyers[i]=new _FUBENMEMBER();
    		}

    		
    		this.btn_leave=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_leave.InitButton("1号按钮150_60");
    		this.btn_leave.Move(this.iX + this.iW-40-320, this.iY + this.iH-40-60, 150, 60);
    		this.btn_leave.sName="离开团队";
    		
    		this.btn_start=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_start.InitButton("1号按钮150_60");
    		this.btn_start.Move(this.iX + this.iW-40-150, this.iY + this.iH-40-60, 150, 60);
    		this.btn_start.sName="开始副本";
    		
    		this.btn_watch=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_watch.InitButton("1号按钮120_60");
    		this.btn_watch.sName="查看";
    		
    		this.btn_agree=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_agree.InitButton("1号按钮120_60");
    		this.btn_agree.sName="同意";
    		
    		this.btn_refuse=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_refuse.InitButton("1号按钮120_60");
    		this.btn_refuse.sName="拒绝";
    		
    		this.btn_kick=new XButtonEx1(GmPlay$1.xani_button);
    		this.btn_kick.InitButton("1号按钮120_60");
    		this.btn_kick.sName="踢出";
    		
    		this.iSelectPoint=-1;
    	}

    	Draw()
    	{
    		var i;
    		var offx,offy;
    		DrawMode$1.new_baseframe4(this.iX, this.iY, this.iW, this.iH, "管", "理", "副", "本");
    		this.btn_close.Draw();
    		DrawMode$1.new_framein(this.iX+25, this.iY+25,this.iW-50 , this.iH-50);
    		//申请表
    		offx = this.iX + 50;
    		offy = this.iY + 40;
    		M3DFast$1.gi().DrawText_2(offx + 210 / 2, offy, "申请列表", 0xfffeec7e, 28, 101, 1, 1, 0, -2, 0, 3, 0xff01152e);
    		DrawMode$1.frame_type4("2号框20_20", offx, offy+30, 210, 360, 20, 20);
    		if (this.iSelectPoint >=0 && this.iSelectPage == 0)
    		{
    			DrawMode$1.frame_type1("12号框20_30", offx + 5, offy + 50 + this.iSelectPoint * 20 - 15, 200, 20);
    		}
    		for (i = 0; i<this.iApplyCount; i++)
    		{
    			M3DFast$1.gi().DrawText_2(offx + 10, offy + 50 + i * 20, this.applyers[i].sName, 0xffffffff, 20, 101, 1, 1, 0, 0, -2, 0, 0xff000000);
    			if (this.applyers[i].iOnLine == 1)M3DFast$1.gi().DrawText_2(offx + 200, offy + 50 + i * 20, "在线", 0xffffe0a0, 20, 101, 1, 1, 0, -3, -2, 3, 0xff000000);
    		}
    		
    		//成员
    		offx = this.iX + 60 + 210 + 20;
    		offy = this.iY + 40;
    		M3DFast$1.gi().DrawText_2(offx + 210 / 2, offy, "团队成员", 0xfffeec7e, 28, 101, 1, 1, 0, -2, 0, 3, 0xff01152e);
    		DrawMode$1.frame_type4("2号框20_20", offx, offy + 30, 210, 360, 20, 20);
    		if (this.iSelectPoint >=0 && this.iSelectPage == 1)
    		{
    			DrawMode$1.frame_type1("12号框20_30", offx + 5, offy + 50 + this.iSelectPoint * 20 - 15, 200, 20);
    		}
    		for (i = 0; i<this.iMemberCount; i++)
    		{
    			M3DFast$1.gi().DrawText_2(offx + 10, offy + 50 + i * 20, this.members[i].sName, 0xffffffff, 20, 101, 1, 1, 0, 0, -2, 0, 0xff000000);
    			if (this.members[i].iOnLine == 1)this.pm3f.DrawText_2(offx + 200, offy + 50 + i * 20, "在线", 0xffffe0a0, 20, 101, 1, 1, 0, -3, -2, 3, 0xff000000);
    		}
    		
    		//副本简介
    		DrawMode$1.ui3_Text1(this.iX+520, this.iY+70, 100, 220, "副本名", GmPlay$1.de_fuben.strValue(this.fuben.iType, 0, 1));
    		DrawMode$1.ui3_Text1(this.iX+520, this.iY+70+35, 100, 220, "团长", this.fuben.sName);
    		DrawMode$1.ui3_Text1(this.iX+520, this.iY+70+35*2, 100, 220, "团长号码", this.fuben.iRid+"("+(this.fuben.iOnLine==0?"离线":"在线")+")");
    		DrawMode$1.ui3_Text1(this.iX+520, this.iY+70+35*3, 100, 220, "人数限制", GmPlay$1.de_fuben.strValue(this.fuben.iType, 0, 3)+"~"+GmPlay$1.de_fuben.strValue(this.fuben.iType, 0, 4));
    		DrawMode$1.ui3_Text1(this.iX+520, this.iY+70+35*4, 100, 220, "等级限制", GmPlay$1.de_fuben.strValue(this.fuben.iType, 0, 5)+"~"+GmPlay$1.de_fuben.strValue(this.fuben.iType, 0, 6));
    		DrawMode$1.ui3_Text1(this.iX+520, this.iY+70+35*5, 100, 220, "创建时间", this.fuben.tm);

    		M3DFast$1.gi().DrawText_2(this.iX + 520, this.iY + 70 + 35 * 6+5, "团队简介:", 0xfffeec7e, 28, 101, 1, 1, 0, 0, 0, 3, 0xff01152e);
    		DrawMode$1.frame_type4("2号框20_20", this.iX + 520, this.iY + 70 + 35 * 7, 320, 115, 20, 20);
    		FormatString.gi().Format(this.fuben.sDetail, 300, 20);
    		FormatString.gi().Draw(this.iX+530, this.iY+70+35*7+10);

    		if(this.fuben.iRid==GmMe$1.me.iRid)
    		{//我是团长,
    			this.btn_leave.Move(this.iX + this.iW - 40 - 320, this.iY + this.iH - 40 - 60, 150, 60);
    			this.btn_leave.sName="解散团队";
    			this.btn_start.Draw();
    			//查看，拒绝申请，同意申请，，，，，查看，踢出团队,,,,,,,,,,,开始副本,解散团队
    			if(this.iSelectPoint>=0)
    			{
    				if (this.iSelectPage == 0)
    				{//查看，拒绝申请，同意入团
    					this.btn_watch.Move(this.iX + 50 , this.iY + this.iH-40-60, 120, 60);
    					this.btn_watch.Draw();
    					this.btn_agree.Move(this.iX + 50  +45+ 120, this.iY + this.iH - 40 - 60, 120,60);
    					this.btn_agree.Draw();
    					this.btn_refuse.Move(this.iX + 50  +45+ 120+45+120, this.iY + this.iH - 40 - 60, 120, 60);
    					this.btn_refuse.Draw();
    				}
    				else
    				{//查看，踢出团队
    					this.btn_watch.Move(this.iX + 50 + 70, this.iY + this.iH - 40 - 60, 120, 60);
    					this.btn_watch.Draw();
    					this.btn_kick.Move(this.iX + 50 + 70 + 120+70, this.iY + this.iH - 40 - 60, 120, 60);
    					this.btn_kick.Draw();
    				}
    			}
    		}
    		else
    		{//
    			this.btn_leave.Move(this.iX + this.iW - 40 - 150, this.iY + this.iH - 40 - 60, 150, 60);
    			this.btn_leave.sName="离开团队";
    			//查看
    			if(this.iSelectPoint>=0 && this.iSelectPage==1)
    			{//查看
    				this.btn_watch.Move(this.iX + 50 + 45 + 120, this.iY + this.iH - 40 - 60, 120, 60);
    				this.btn_watch.Draw();
    			}
    		}
    		this.btn_leave.Draw();
    		
    		if(Confirm1.end(Confirm1.CONFIRM_LEAVEFUBEN))
    		{//
    			if(Confirm1.bConfirm)
    			{//同意离开副本
    				GmProtocol$1.gi().s_ManageFuBen(0,0,0);
    				XStat$1.gi().PopStat(1);
    			}
    		}
    	}
    	 ProcTouch( msg, x, y)
    	{
    		if(this.iSelectPoint>=0)
    		{
    			if(this.btn_watch.ProcTouch(msg, x, y))
    			{
    				if(this.btn_watch.bCheck())
    				{
    					if(this.iSelectPage==0)GmProtocol$1.gi().s_WatchOn(0, this.applyers[this.iSelectPoint].iRid, 0,"");
    					else GmProtocol$1.gi().s_WatchOn(0, this.members[this.iSelectPoint].iRid, 0,"");
    //					this.iSelectPoint=-1;
    				}
    				return true;
    			}
    		}
    		if(this.fuben.iRid==GmMe$1.me.iRid)
    		{//我是团长,
    			if(this.btn_start.ProcTouch(msg, x, y))
    			{
    				if(this.btn_start.bCheck())
    				{//开始副本
    					GmProtocol$1.gi().s_ManageFuBen(4,0,0);
    				}
    				return true;
    			}
    			if(this.iSelectPoint>=0)
    			{
    				if(this.iSelectPage==0)
    				{//查看，拒绝申请，同意入团
    					if(this.btn_agree.ProcTouch(msg, x, y))
    					{
    						if(this.btn_agree.bCheck())
    						{
    							GmProtocol$1.gi().s_ManageFuBen(1,this.applyers[this.iSelectPoint].iRid,0);
    							this.iSelectPoint=-1;
    						}
    						return true;
    					}
    					if(this.btn_refuse.ProcTouch(msg, x, y))
    					{
    						if(this.btn_refuse.bCheck())
    						{
    							GmProtocol$1.gi().s_ManageFuBen(3,this.applyers[this.iSelectPoint].iRid,0);
    							this.iSelectPoint=-1;
    						}
    						return true;
    					}
    				}
    				else
    				{//查看，踢出团队
    					if(this.btn_kick.ProcTouch(msg, x, y))
    					{
    						if(this.btn_kick.bCheck())
    						{
    							GmProtocol$1.gi().s_ManageFuBen(2,this.members[this.iSelectPoint].iRid,0);
    							this.iSelectPoint=-1;
    						}
    						return true;
    					}
    				}
    			}
    		}

    		if(this.btn_leave.ProcTouch(msg, x, y))
    		{
    			if(this.btn_leave.bCheck())
    			{
    				if(this.fuben.iRid==GmMe$1.me.iRid)Confirm1.start(Confirm1.CONFIRM_LEAVEFUBEN, "是否确定解散团队？");
    				else Confirm1.start(Confirm1.CONFIRM_LEAVEFUBEN, "是否确定退出团队？");
    			}
    			return true;
    		}

    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		if(this.btn_leave.ProcTouch(msg, x, y))
    		{
    			if(this.btn_leave.bCheck())
    			{
    //				GmProtocol.gi().s_CreateFuBen(ifblist[0],sDetail);
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		
    		this.iSelectPoint=-1;
    		var i;
    		var xx,yy;
    		var offx,offy;
    		offx=this.iX+60;
    		offy=this.iY+40;
    		for(i=0;i<this.iApplyCount;i++)
    		{
    			xx=offx+10;
    			yy=offy+50+i*20;
    			if(XDefine$1.bInRect(x, y, xx, yy-10, 190, 20))
    			{
    				this.iSelectPage=0;
    				this.iSelectPoint=i;
    			}
    		}
    		
    		//成员
    		offx=this.iX+60+210+20;
    		offy=this.iY+40;
    		for(i=0;i<this.iMemberCount;i++)
    		{
    			xx=offx+10;
    			yy=offy+50+i*20;
    			if(XDefine$1.bInRect(x, y, xx, yy-10, 190, 20))
    			{
    				this.iSelectPage=1;
    				this.iSelectPoint=i;
    			}
    		}
    		
    		return false;
    	}
    }

    class CreateGov extends BaseClass{
    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=480;
    		this.iH=440;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.in_govname=new XInput(GmPlay$1.xani_frame);
    		this.in_govname.Move(this.iX+25+20, this.iY+25+20+30, this.iW-90, 50);
    		this.in_govname.bHideText=true;
    		
    		this.in_govdetail=new XInput(GmPlay$1.xani_frame);
    		this.in_govdetail.Move(this.iX+25+20, this.iY+25+20+30+50+20+30, this.iW-90, 150);
    		this.in_govdetail.bHideText=true;
    		
    		this.btn_create=new XButton(GmPlay$1.xani_nui2);
    		this.btn_create.Move(this.iX+this.iW-25-20-110,this.iY+this.iH-25-20-52, 110, 52);
    		this.btn_create.InitButton("按钮1_110");
    		this.btn_create.sName="创建";
    		
    		this.btn_cancel=new XButton(GmPlay$1.xani_nui2);
    		this.btn_cancel.Move(this.iX+25+20,this.iY+this.iH-25-20-52, 110, 52);
    		this.btn_cancel.InitButton("按钮1_110");
    		this.btn_cancel.sName="取消";
    	}

    	Draw()
    	{
    		DrawMode$1.new_bigframe(this.iX,this.iY,this.iW,this.iH);//, "创","建","帮","派");
    		DrawMode$1.new_framein(this.iX+25, this.iY+25, this.iW-50, this.iH-50);

    		this.pm3f.DrawTextEx(this.in_govname.iX, this.in_govname.iY-30, "输入帮派名称(2~8字)：", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		DrawMode$1.new_frameon(this.in_govname.iX, this.in_govname.iY, this.in_govname.iW, this.in_govname.iH, 1);
    		DrawMode$1.new_framepc(this.in_govname.iX, this.in_govname.iY, this.in_govname.iW, this.in_govname.iH);
    		this.pm3f.DrawTextEx(this.in_govname.iX+10,this.in_govname.iY+25,this.in_govname.sDetail,0xffffffff,30, 101, 1, 1, 0, 0, -2);

    		this.pm3f.DrawTextEx(this.in_govdetail.iX, this.in_govdetail.iY-30, "输入帮派简介：", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		DrawMode$1.new_frameon(this.in_govdetail.iX, this.in_govdetail.iY, this.in_govdetail.iW, this.in_govdetail.iH, 1);
    		DrawMode$1.new_framepc(this.in_govdetail.iX, this.in_govdetail.iY, this.in_govdetail.iW, this.in_govdetail.iH);		
    		FormatString.gi().Format(this.in_govdetail.sDetail, this.in_govdetail.iW-20, 30);//"#c000000"+
    		FormatString.gi().Draw(this.in_govdetail.iX+10, this.in_govdetail.iY+10);

    		this.btn_create.Draw();
    		this.btn_cancel.Draw();

    		this.in_govname.onscr();
    		this.in_govdetail.onscr();
    	}

    	ProcTouch( msg, x, y)
    	{
    		this.in_govname.ProcTouch(msg, x, y);
    		this.in_govdetail.ProcTouch(msg, x, y);
    		
    		if(this.btn_create.ProcTouch(msg, x, y))
    		{
    			if(this.btn_create.bCheck())
    			{//检测文字是否合理，创建帮派
    					if(this.in_govname.length<2 || this.in_govname.length>8)
    					{
    						EasyMessage.easymsg.AddMessage("帮派名称2-8个字");
    						return true;
    					}

    					if(this.in_govdetail.length<2 || this.in_govdetail.length>40)
    					{
    						EasyMessage.easymsg.AddMessage("帮派宗旨2-40个字");
    						return true;
    					}

    				//发送创建请求
    				GmProtocol$1.gi().s_CreateGov(this.in_govname.sDetail, this.in_govdetail.sDetail);
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{//
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		if(XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))return true;
    		return false;
    	}
    }

    class _EXTSKILL
    {/*
    	public int iPoint;
    	public int iSid;
    	public int iLev,iMaxLev;
    	public int iNeedExp,iNeedMoney;
    	public int iNeedOther;*/
    	constructor()
    	{

    	}
    }
    class ExtLearnSkill extends BaseClass{


    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=800;
    		this.iH=400;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.elist=new Array(8);//
    		for(i=0;i<8;i++)this.elist[i]=new _EXTSKILL();
    		
    		this.btn_learn=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_learn.InitButton("按钮1_110");
    		this.btn_learn.sName="学习";
    		
    		this.btn_select=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.btn_select[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_select[i].InitButton("按钮2");
    		}
    		this.iSelectPoint=0;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    	}

    	Draw()
    	{//145+20+20
    		var i,w;
    		var offx,offy;
    		w=this.iW-185-20-25-25;
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		DrawMode$1.new_framein(this.iX+25, this.iY+25, 185, this.iH-25-25);
    		DrawMode$1.new_framein(this.iX+25+185+20, this.iY+25, w, this.iH-25-25);
    		
    		for(i=0;i<this.iCount;i++)
    		{
    			offx=this.iX+20+25;
    			offy=this.iY+25+20+i*70;
    			this.btn_select[i].Move(offx, offy, 145, 56);
    			this.btn_select[i].sName=GovFrame.sSkill(this.elist[i].iPoint);
    			if(this.iSelectPoint==i)
    			{
    				this.btn_select[i].bMouseDown=true;
    				this.btn_select[i].bMouseIn=true;
    			}
    			this.btn_select[i].Draw();
    			
    //			if(this.iSelectPoint==i)GmPlay.xani_ui.DrawAnimaEx(offx,offy, "统一红黑框",9, 101, 1.0f*160/10, 1, 0,0, 0);
    //			this.pm3f.DrawTextEx(offx,offy, GovFrame.sSkill(this.elist[i].iPoint)+this.elist[i].iLev+"/"+this.elist[i].iMaxLev, 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		}
    		
    		if(this.iSelectPoint>=0)
    		{
    			offx=this.iX+25+185+20+20;
    			offy=this.iY+25+20;
    //			this.pm3f.DrawTextEx(x,y,"当前等级"+GmMe.me.rbs.iGovSkill[i], 0xffffffff, 25, 101, 1, 1, 0, 0, 0);
    //			y+=30;
    //			this.pm3f.DrawTextEx(x,y,"学习上限"+GmMe.me.rbs.iGovSkill[i], 0xffffffff, 25, 101, 1, 1, 0, 0, 0);
    			GmPlay$1.xani_nicon.DrawAnima_aa(offx, offy, GmPlay$1.de_skill.strValue(this.elist[this.iSelectPoint].iSid, 0, 6),0);
    			this.pm3f.DrawTextEx(offx+90,offy+25, GmPlay$1.de_skill.strValue(this.elist[this.iSelectPoint].iSid, 0, 6), 0xff003e57, 40, 101, 1, 1, 0, 0, -2);
    			this.pm3f.DrawTextEx(offx+90,offy+80, "等级："+this.elist[this.iSelectPoint].iLev+"/"+this.elist[this.iSelectPoint].iMaxLev, 0xff003e57, 30, 101, 1, 1, 0, 0, -3);
    			offy+=90;
    			FormatString.gi().FormatEx("#c003e57"+GmPlay$1.de_skill.strValue(this.elist[this.iSelectPoint].iSid, 0, 3), w-40, 30, 0, 0, 32);
    			FormatString.gi().Draw(offx, offy);
    			offy+=FormatString.gi().iH+8;

    			if(this.elist[this.iSelectPoint].iNeedExp<=GmMe$1.me.rbs.iExp)this.pm3f.DrawTextEx(offx,offy, "升级经验："+this.elist[this.iSelectPoint].iNeedExp+"/"+GmMe$1.me.rbs.iExp, 0xff00ff00, 30, 101, 1, 1, 0, 0, 0);
    			else this.pm3f.DrawTextEx(offx,offy, "升级经验："+this.elist[this.iSelectPoint].iNeedExp+"/"+GmMe$1.me.rbs.iExp, 0xffff0000, 30, 101, 1, 1, 0, 0, 0);
    			offy+=35;
    			if(this.elist[this.iSelectPoint].iNeedMoney<=GmMe$1.me.rbs.iMoney)this.pm3f.DrawTextEx(offx,offy, "升级金钱:"+this.elist[this.iSelectPoint].iNeedMoney+"/"+GmMe$1.me.rbs.iMoney, 0xff00ff00, 30, 101, 1, 1, 0, 0, 0);
    			else this.pm3f.DrawTextEx(offx,offy, "升级金钱:"+this.elist[this.iSelectPoint].iNeedMoney+"/"+GmMe$1.me.rbs.iMoney, 0xffff0000, 30, 101, 1, 1, 0, 0, 0);
    			offy+=35;
    			this.pm3f.DrawTextEx(offx,offy, "绑铜："+GmMe$1.me.rbs.iReserve, 0xff003e57, 30, 101, 1, 1, 0, 0, 0);

    			this.btn_learn.Move(this.iX+this.iW-110-25-20, this.iY+this.iH-52-25-20, 110, 52);
    			this.btn_learn.Draw();
    		}
    		this.btn_close.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    			return true;
    		}

    		if(this.iSelectPoint>=0)
    		{
    			if(this.btn_learn.ProcTouch(msg, x, y))
    			{
    				if(this.btn_learn.bCheck())
    				{
    					GmProtocol$1.gi().s_SeverEvent(6, this.stype, this.elist[this.iSelectPoint].iPoint, this.elist[this.iSelectPoint].iSid, 0);
    					XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    				}
    				return true;
    			}
    		}
    		
    		for(i=0;i<this.iCount;i++)
    		{
    			if(this.btn_select[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_select[i].bCheck())
    				{
    					this.iSelectPoint=i;
    				}
    			}
    		}
    		
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }
    ExtLearnSkill. Open=function( pls)
    {
    	var i;
    	var es;
    	if(XStat$1.gi().iXStat==XStat$1.GS_LOADING1)XStat$1.gi().PopStat(1);
    	if(XStat$1.gi().iXStat==XStat$1.GS_EXTLEARNSKILL)es=XStat$1.gi().LastStat(0);
    	else es=XStat$1.gi().PushStat(XStat$1.GS_EXTLEARNSKILL);
    	
    	es.stype=pls.GetNextInt();
    	es.iCount=pls.GetNextByte();
    	for(i=0;i<es.iCount;i++)
    	{
    		es.elist[i].iPoint=pls.GetNextByte();
    		es.elist[i].iSid=pls.GetNextShort();
    		
    		es.elist[i].iLev=pls.GetNextShort();
    		es.elist[i].iMaxLev=pls.GetNextShort();
    		
    		es.elist[i].iNeedExp=pls.GetNextInt();
    		es.elist[i].iNeedMoney=pls.GetNextInt();
    		es.elist[i].iNeedOther=pls.GetNextInt();
    	}
    	
    //		es.iW=800;
    //		es.iH=400;
    //		es.iX=(GmConfig.SCRW-es.iW)/2;
    //		es.iY=(GmConfig.SCRH-es.iH)/2;
    	

    //		es.iSelectPoint=0;
    };

    class GovXiu extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=560;
    		this.iH=500;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		var i;
    		this.iDelay=new Int32Array(6);//
    		this.btn_xiu=new Array(6);//
    		for(i=0;i<6;i++)
    		{
    			this.iDelay[i]=0;
    			this.btn_xiu[i]=new XButtonEx2$1(GmPlay$1.xani_nui3);
    			this.btn_xiu[i].InitButton("内框按钮");
    			this.btn_xiu[i].sName="修炼";
    		}
    	}
    	
    	Draw()
    	{
    		var i;
    		var x,y;
    		var offx,offy,w,h;
    		var lev;
    		
    		DrawMode$1.new_baseframe2(this.iX, this.iY, this.iW, this.iH, "修","炼");
    		this.btn_close.Draw();
    		
    		offx=this.iX+25;
    		offy=this.iY+25;
    		w=this.iW-50;
    		h=this.iH-50-70;
    		DrawMode$1.new_framein(offx, offy, w, h);
    		
    		for(i=0;i<6;i++)
    		{
    			x=offx+10;
    			y=offy+i*60+10;
    			DrawMode$1.new_frameon(x, y, w-20, 60, 0);
    			
    			lev=GmMe$1.me.rbs.iGovXiu[i][0];
    			this.pm3f.DrawTextEx(x+10, y+30, GmPlay$1.de_skill.strValue(GameData$1.iGovXiuId[i], 0, 6)+lev+"级", 0xffffffff, 25, 101, 1, 1, 0, 0, -2);
    			this.pm3f.DrawTextEx(x+w-20-180, y+30, ""+GmMe$1.me.rbs.iGovXiu[i][1]+"/"+MyGov.iBuildingUpgrad[lev]/10, 0xffffffff, 20, 101, 1, 1, 0, -2, -2);

    			this.btn_xiu[i].Move(x+w-20-2-98, y+(60-55)/2, 98, 55);
    			if(this.iDelay[i]>0)
    			{
    				this.iDelay[i]--;
    				this.btn_xiu[i].bDisable=true;
    			}
    			else
    			{
    				this.btn_xiu[i].bDisable=false;
    			}

    			this.btn_xiu[i].Draw();
    		}
    		this.pm3f.DrawTextEx(this.iX+25, this.iY+this.iH-25-60, "每次修炼花费30000金钱和5点帮贡，并消耗5点帮派行动力", 0xff003e57, 20, 101, 1, 1, 0, 0, 0);
    		this.pm3f.DrawTextEx(this.iX+25, this.iY+this.iH-25-30, "如果背包中有修炼丹，优先消耗修炼丹", 0xff003e57, 20, 101, 1, 1, 0, 0, 0);
    	}

    	ProcTouch( msg, x, y)
    	{
    		var i,j;
    		var lev;
    		
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		for(i=0;i<6;i++)
    		{
    			if(this.btn_xiu[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_xiu[i].bCheck())
    				{
    					lev=GmMe$1.me.rbs.iGovXiu[i][0];
    					if(lev>=GmMe$1.me.rbs.iLev/5)
    					{
    						EasyMessage.easymsg.AddMessage("修炼不能超过人物等级/5");
    					}
    					else if(MyGov.mg.iTick<5)
    					{
    						EasyMessage.easymsg.AddMessage("帮贡不足");
    					}
    					else if(MyGov.mg.iGovTick<5)
    					{
    						EasyMessage.easymsg.AddMessage("帮派行动力不足");
    					}
    					else if(GmMe$1.me.rbs.iMoney+GmMe$1.me.rbs.iReserve<30000)
    					{
    						EasyMessage.easymsg.AddMessage("金钱不足");
    					}
    					else
    					{
    						this.iDelay[i]=20;
    						if(GmMe$1.me.rbs.iReserve>=30000)
    						{
    							GmMe$1.me.rbs.iReserve-=30000;
    						}
    						else
    						{
    							j=30000-GmMe$1.me.rbs.iReserve;
    							GmMe$1.me.rbs.iReserve=0;
    							GmMe$1.me.rbs.iMoney-=j;
    						}
    //						GmMe.me.rbs.iMoney-=30000;
    						MyGov.mg.iGovTick-=5;
    						MyGov.mg.iTick-=5;
    						
    						GmMe$1.me.rbs.iGovXiu[i][1]+=10;
    						if(GmMe$1.me.rbs.iGovXiu[i][1]>=MyGov.iBuildingUpgrad[lev]/10)
    						{
    							GmMe$1.me.rbs.iGovXiu[i][0]++;
    							GmMe$1.me.rbs.iGovXiu[i][1]-=MyGov.iBuildingUpgrad[lev]/10;
    						}
    						GmProtocol$1.gi().s_GovXiu(GameData$1.iGovXiuId[i],i);
    					}
    				}
    			}
    		}
    		return false;
    	}
    }

    class LearnGovSkill extends BaseClass{

    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=800;
    		this.iH=550;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);

    		this.btn_learn=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_learn.InitButton("按钮1_110");
    		this.btn_learn.sName="学习";
    		
    		this.btn_select=new Array(10);//
    		for(i=0;i<10;i++)
    		{
    			this.btn_select[i]=new XButtonEx2$1(GmPlay$1.xani_nui2);
    			this.btn_select[i].InitButton("按钮2");
    		}
    		this.iSelectPoint=0;
    	}
    	
    	Draw()
    	{
    		var i,w;
    		var offx,offy;
    		w=this.iW-185-20-25-25;
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		DrawMode$1.new_framein(this.iX+25, this.iY+25, 185, this.iH-25-25);
    		DrawMode$1.new_framein(this.iX+25+185+20, this.iY+25, w, this.iH-25-25);
    		this.btn_close.Draw();
    		
    		for(i=0;i<8;i++)
    		{
    			offx=this.iX+20+25;
    			offy=this.iY+25+20+i*56;
    			this.btn_select[i].Move(offx, offy, 145, 56);
    			this.btn_select[i].sName=GovFrame.sSkill(i);
    			if(this.iSelectPoint==i)
    			{
    				this.btn_select[i].bMouseDown=true;
    				this.btn_select[i].bMouseIn=true;
    			}
    			this.btn_select[i].Draw();
    			
    //			x=this.iX+10+20;
    //			y=this.iY+65+20+i*30;
    //			if(iSkillPoint==i)GmPlay.xani_ui.DrawAnimaEx(x,y-2, "统一红黑框",9, 101, 1.0f*160/10, 1, 0,0, 0);
    //			this.pm3f.DrawTextEx(x,y, GovFrame.sSkill(i)+GmMe.me.rbs.iGovSkill[i]+"/"+MyGov.mg.iGovSkillLev[i], 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		}
    		
    		if(this.iSelectPoint>=0)
    		{
    			offx=this.iX+25+185+20+20;
    			offy=this.iY+25+20;
    //			this.pm3f.DrawTextEx(x,y,"当前等级"+GmMe.me.rbs.iGovSkill[i], 0xffffffff, 25, 101, 1, 1, 0, 0, 0);
    //			y+=30;
    //			this.pm3f.DrawTextEx(x,y,"学习上限"+GmMe.me.rbs.iGovSkill[i], 0xffffffff, 25, 101, 1, 1, 0, 0, 0);
    			GmPlay$1.xani_nicon.DrawAnima_aa(offx, offy, GmPlay$1.de_skill.strValue(GameData$1.iGovSkillId[this.iSelectPoint], 0, 6),0);
    			this.pm3f.DrawTextEx(offx+90,offy+25, GmPlay$1.de_skill.strValue(GameData$1.iGovSkillId[this.iSelectPoint], 0, 6), 0xff003e57, 40, 101, 1, 1, 0, 0, -2);
    			this.pm3f.DrawTextEx(offx+90,offy+80, "等级："+GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]+"/"+MyGov.mg.iGovSkillLev[this.iSelectPoint], 0xff003e57, 30, 101, 1, 1, 0, 0, -3);
    			offy+=90;
    			FormatString.gi().FormatEx("#c003e57"+GmPlay$1.de_skill.strValue(GameData$1.iGovSkillId[this.iSelectPoint], 0, 3), w-40, 30, 0, 0, 32);
    			FormatString.gi().Draw(offx, offy);
    			offy+=FormatString.gi().iH+8;

    			if(parseInt(GameData$1.iUpgradeExp[GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]]/6)<=GmMe$1.me.rbs.iExp)this.pm3f.DrawTextEx(offx,offy, "升级经验："+parseInt(GameData$1.iUpgradeExp[GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]]/6)+"/"+GmMe$1.me.rbs.iExp, 0xff00ff00, 30, 101, 1, 1, 0, 0, 0);
    			else this.pm3f.DrawTextEx(offx,offy, "升级经验："+parseInt(GameData$1.iUpgradeExp[GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]]/6)+"/"+GmMe$1.me.rbs.iExp, 0xffff0000, 30, 101, 1, 1, 0, 0, 0);
    			offy+=35;
    			if(parseInt(GameData$1.iUpgradeMoney[GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]]/18)<=GmMe$1.me.rbs.iMoney)this.pm3f.DrawTextEx(offx,offy, "升级金钱:"+parseInt(GameData$1.iUpgradeMoney[GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]]/18)+"/"+GmMe$1.me.rbs.iMoney, 0xff00ff00, 30, 101, 1, 1, 0, 0, 0);
    			else this.pm3f.DrawTextEx(offx,offy, "升级金钱:"+parseInt(GameData$1.iUpgradeMoney[GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]]/18)+"/"+GmMe$1.me.rbs.iMoney, 0xffff0000, 30, 101, 1, 1, 0, 0, 0);
    			offy+=35;
    			if((GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]+1)*5<=MyGov.mg.iTick)this.pm3f.DrawTextEx(offx,offy, "升级贡献:"+(GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]+1)*5+"/"+MyGov.mg.iTick, 0xff00ff00, 30, 101, 1, 1, 0, 0, 0);
    			else this.pm3f.DrawTextEx(offx,offy, "升级贡献:"+(GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]+1)*5+"/"+MyGov.mg.iTick, 0xffff0000, 30, 101, 1, 1, 0, 0, 0);
    			offy+=35;
    			if((GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]+1)<=MyGov.mg.iGovTick)this.pm3f.DrawTextEx(offx,offy, "升级行动力:"+(GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]+1)+"/"+MyGov.mg.iGovTick, 0xff00ff00, 30, 101, 1, 1, 0, 0, 0);
    			else this.pm3f.DrawTextEx(offx,offy, "升级行动力:"+(GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]+1)+"/"+MyGov.mg.iGovTick, 0xffff0000, 30, 101, 1, 1, 0, 0, 0);
    			offy+=35;
    			this.pm3f.DrawTextEx(offx,offy, "绑铜："+GmMe$1.me.rbs.iReserve, 0xff003e57, 30, 101, 1, 1, 0, 0, 0);

    			this.btn_learn.Move(this.iX+this.iW-110-25-20, this.iY+this.iH-52-25-20, 110, 52);
    			this.btn_learn.Draw();
    		}
    		//+GmMe.me.rbs.iGovSkill[i]+"/"+MyGov.mg.iGovSkillLev[i]
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		var xx,yy;
    		
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		for(i=0;i<8;i++)
    		{
    			if(this.btn_select[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_select[i].bCheck())
    				{
    					this.iSelectPoint=i;
    				}
    			}
    		}

    		if(this.iSelectPoint>=0)
    		{
    			if(this.btn_learn.ProcTouch(msg, x, y))
    			{
    				if(this.btn_learn.bCheck())
    				{
    					if(GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]>=MyGov.mg.iGovSkillLev[this.iSelectPoint])
    					{
    						EasyMessage.easymsg.AddMessage("已达学习上限");
    					}
    					else if(GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]>=GmMe$1.me.rbs.iLev+10)
    					{
    						EasyMessage.easymsg.AddMessage("不能超过人物等级10级");
    					}
    					else if(parseInt(GameData$1.iUpgradeExp[GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]]/6)>GmMe$1.me.rbs.iExp)
    					{
    						EasyMessage.easymsg.AddMessage("经验不足");
    					}
    					else if(parseInt(GameData$1.iUpgradeMoney[GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]]/18)>GmMe$1.me.rbs.iMoney)
    					{
    						EasyMessage.easymsg.AddMessage("金钱不足");
    					}
    					else if((GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]+1)*5>MyGov.mg.iTick)
    					{
    						EasyMessage.easymsg.AddMessage("帮派贡献不足");
    					}
    					else if((GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]+1)>MyGov.mg.iGovTick)
    					{
    						EasyMessage.easymsg.AddMessage("帮派行动力不足");
    					}
    					else
    					{
    						GmProtocol$1.gi().s_LearnGovSkill(GameData$1.iGovSkillId[this.iSelectPoint], this.iSelectPoint);
    						GmMe$1.me.rbs.iExp-=parseInt(GameData$1.iUpgradeExp[GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]]/6);
    						GmMe$1.me.rbs.iMoney-=parseInt(GameData$1.iUpgradeExp[GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]]/18);
    						MyGov.mg.iTick-=(GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]+1)*5;
    						MyGov.mg.iGovTick-=(GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]+1);
    						
    						GmMe$1.me.rbs.iGovSkill[this.iSelectPoint]++;
    						GmMe$1.me.CalcFightAtt();
    					}
    				}
    			}
    		}
    		return false;
    	}
    }

    class MemberDetail extends BaseClass{

    	constructor( ani)
    	{
    		super();
    		this.iJobList=[0,1,2,3,4,5,10];
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=540;
    		this.iH=310+30;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_ui);
    		this.btn_close.InitButton("统一关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-60-5, this.iY, 60, 60);
    		
    		var offy=40-5;
    		//this.btn_send,this.btn_add,this.btn_kick,this.btn_set
    		this.btn_send=new XButton(GmPlay$1.xani_ui);
    		this.btn_send.InitButton("统一中按钮4");
    		this.btn_send.Move(this.iX+this.iW-130-30, this.iY+offy+50, 130, 40);
    		this.btn_send.sName="发送消息";
    		
    		this.btn_add=new XButton(GmPlay$1.xani_ui);
    		this.btn_add.InitButton("统一中按钮4");
    		this.btn_add.Move(this.iX+this.iW-130-30, this.iY+offy+50*2, 130, 40);
    		this.btn_add.sName="加为好友";
    		
    		this.btn_set=new XButton(GmPlay$1.xani_ui);
    		this.btn_set.InitButton("统一中按钮4");
    		this.btn_set.Move(this.iX+this.iW-130-30, this.iY+offy+50*3, 130, 40);
    		this.btn_set.sName="职位设置";
    		
    		this.btn_kick=new XButton(GmPlay$1.xani_ui);
    		this.btn_kick.InitButton("统一中按钮4");
    		this.btn_kick.Move(this.iX+this.iW-130-30, this.iY+offy+50*4, 130, 40);
    		this.btn_kick.sName="踢出帮派";
    		
    		this.bInited=false;
    		this.bSetJob=false;
    	}
    	Draw()
    	{
    		DrawMode$1.Frame3_BK(this.iX, this.iY, this.iW, this.iH,"成员属性");
    		this.btn_close.Draw();
    		DrawMode$1.Frame2_MD(this.iX+10, this.iY+70-5, this.iW-20, this.iH-80);
    		DrawMode$1.Frame1_BR(this.iX+30, this.iY+90-5, 340, this.iH-120);

    //		if(!this.bInited)return;
    		var offx=this.iX+30;
    		var offy=this.iY+90-5;

    		DrawMode$1.Data1_BR(offx+10, offy+10, "名字",this.sName, 60, 100);
    		DrawMode$1.Data1_BR(offx+180, offy+10, "号码",""+this.iRid, 40, 100);

    		DrawMode$1.Data1_BR(offx+10, offy+10+30, "性别",GmMe$1.sSex(this.iSex), 60, 60);
    		DrawMode$1.Data1_BR(offx+180, offy+10+30, "种族",GmMe$1.sRace(this.iRace), 60, 80);

    		DrawMode$1.Data1_BR(offx+10, offy+10+30*2, "等级",""+this.iLev, 60, 50);
    		DrawMode$1.Data1_BR(offx+180, offy+10+30*2, "门派",GameData$1.sSchools[this.iSchoolId], 60, 80);

    		DrawMode$1.Data1_BR(offx+10, offy+10+30*3, "职位",GovFrame.sJob(this.iJob), 60,80);
    		DrawMode$1.Data1_BR(offx+180, offy+10+30*3, "贡献",""+this.iTick, 60, 80);

    		DrawMode$1.Data1_BR(offx+10, offy+10+30*4, "历史帮贡",""+this.iMaxTick, 100,200);
    		DrawMode$1.Data1_BR(offx+10, offy+10+30*5, "入帮时间",this.sJoinTime, 100,200);
    		DrawMode$1.Data1_BR(offx+10, offy+10+30*6, "登陆时间",this.sLoginTime, 100,200);

    //		var this.iRid;
    //		String this.sName;
    //		var this.iRace,this.iSex;
    //		var this.iLev,this.iSchoolId;
    //		var this.iJob,this.iTick;
    //		String this.sJoinTime,this.sLoginTime;
    		
    		this.btn_send.Draw();
    		this.btn_add.Draw();
    		
    		if(MyGov.mg.iJob==0 || MyGov.mg.iJob==1)
    		{
    			if(MyGov.mg.iJob<this.iJob)
    			{
    				if(Confirm1.end(Confirm1.CONFIRM_GOVKICK))
    				{//
    					if(Confirm1.bConfirm)
    					{//确认踢人
    						GmProtocol$1.gi().s_OperateGovMember(this.iRid,2,0);
    						XStat$1.gi().PopStat(1);
    						GovFrame.ReloadMember();
    					}
    				}
    				
    				this.btn_kick.Draw();
    				this.btn_set.Draw();
    			}
    		}
    		if(this.bSetJob)
    		{
    			var i;
    			var ow=100+40;
    			var oh=7*30+55;
    			var ox=(GmConfig$1.SCRW-ow)/2;
    			var oy=(GmConfig$1.SCRH-oh)/2;
    			
    			DrawMode$1.Frame2_MD(ox,oy,ow,oh);
    			DrawMode$1.Frame1_BR(ox+20, oy+20, ow-40, oh-40);
    			
    			for(i=0;i<7;i++)
    			{
    				offx=ox+30;
    				offy=oy+30+i*30;
    				if(i==this.iJobPoint)this.pm3f.FillRect_2D(offx,offy,offx+ow-60,offy+30,0xff00ff00);
    				if(this.iJobList[i]<=MyGov.mg.iJob)this.pm3f.DrawTextEx(offx, offy, GovFrame.sJob(this.iJobList[i]), 0xff808080, 25, 101, 1, 1, 0, 0, 0);
    				else this.pm3f.DrawTextEx(offx, offy, GovFrame.sJob(this.iJobList[i]), 0xffffffff, 25, 101, 1, 1, 0, 0, 0);
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.bSetJob)
    		{
    			var ow=100+40;
    			var oh=7*30+55;
    			var ox=(GmConfig$1.SCRW-ow)/2;
    			var oy=(GmConfig$1.SCRH-oh)/2;
    			this.iJobPoint=-1;
    			for(i=0;i<7;i++)
    			{
    				var offx=ox+30;
    				var offy=oy+30+i*30;
    				if(XDefine$1.bInRect(x, y, offx, offy, ow-60, 30))
    				{
    					if(this.iJobList[i]<MyGov.mg.iJob)this.iJobPoint=-1;
    					else this.iJobPoint=i;
    				}
    			}
    			if(msg==3 && this.iJobPoint!=-1)
    			{//设置职位
    				this.iJob=this.iJobList[this.iJobPoint];
    				GmProtocol$1.gi().s_OperateGovMember(this.iRid,3,this.iJob);
    				this.bSetJob=false;
    				XStat$1.gi().PopStat(1);
    				GovFrame.ReloadMember();
    			}
    			if(msg==1 && !XDefine$1.bInRect(x, y, ox, oy, ow, oh))this.bSetJob=false;
    			return false;
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    //		if(!this.bInited)return false
    		if(this.btn_send.ProcTouch(msg, x, y))
    		{
    			if(this.btn_send.bCheck())
    			{
    				PrivateChat_Send.OpenChat( this.iRid, this.sName,this.iRace*2+this.iSex);
    			}
    			return true;
    		}
    		if(this.btn_add.ProcTouch(msg, x, y))
    		{
    			if(this.btn_add.bCheck())
    			{
    				GmProtocol$1.gi().s_FriendOperate(0,this.iRid,0);
    			}
    			return true;
    		}
    		if(MyGov.mg.iJob==0 ||
    				MyGov.mg.iJob==1 ||
    				MyGov.mg.iJob==4)
    		{////帮主，副帮主，长老
    			if(MyGov.mg.iJob<this.iJob)
    			{
    				if(this.btn_kick.ProcTouch(msg, x, y))
    				{
    					if(this.btn_kick.bCheck())
    					{
    						Confirm1.start(Confirm1.CONFIRM_GOVKICK, "是否确定把"+this.sName+"踢出帮派？");
    					}
    					return true;
    				}
    				if(this.btn_set.ProcTouch(msg, x, y))
    				{
    					if(this.btn_set.bCheck())
    					{
    						this.iJobPoint=-1;
    						this.bSetJob=true;
    					}
    					return true;
    				}
    			}
    		}
    		return false;
    	}
    	
    	getgovdata( pls)
    	{
    		var dtype=pls.GetNextByte();
    		if(dtype!=6)return;
    		
    		this.iRid=pls.GetNextInt();
    		this.sName=pls.GetNextString();
    		this.iRace=pls.GetNextByte();
    		this.iSex=pls.GetNextByte();
    		
    		this.iLev=pls.GetNextInt();
    		this.iSchoolId=pls.GetNextByte();
    		
    		this.iJob=pls.GetNextInt();
    		this.iTick=pls.GetNextInt();
    		this.sJoinTime=pls.GetNextString();
    		this.sLoginTime=pls.GetNextString();
    		this.iMaxTick=pls.GetNextInt();
    		this.bInited=true;
    	}
    }

    class PetXiu extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=540;
    		this.iH=350;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.iDelay=0;
    		this.btn_xiu=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_xiu.InitButton("1号按钮90_60");
    		this.btn_xiu.sName="修炼";
    		
    		this.iXiuPoint=0;
    	}
    	
    	Draw()
    	{
    		var i;
    		var x,y;
    		var lev;
    		var c;
    		
    		DrawMode$1.frame_type4("10号框20_20", this.iX, this.iY, this.iW, this.iH, 20, 20);
    		this.btn_close.Draw();
    		
    		this.pm3f.DrawText_2(this.iX+this.iW/2, this.iY+30, "宠物修炼", 0xfffeec7e, 36, 101, 1, 1, 0, -2, 0, 2, 0xff01152e);
    		DrawMode$1.frame_type4("11号框20_20", this.iX+20, this.iY+70, this.iW-40, 150, 20, 20);
    		
    		for(i=0;i<4;i++)
    		{
    			x=this.iX+30;
    			y=this.iY+65+20+i*30;
    			c=0xff114e61;
    			
    			if(this.iXiuPoint==i)
    			{
    				DrawMode$1.frame_type1("12号框20_30", x,y, this.iW-60, 20);

    				if(this.iDelay>0)
    				{
    					this.iDelay--;
    					this.btn_xiu.bDisable=true;
    				}
    				else this.btn_xiu.bDisable=false;

    			}
    			
    			lev=GmMe$1.me.rbs.iGovXiu[i+6][0];
    			this.pm3f.DrawTextEx(x+10, y+15, ""+GmPlay$1.de_skill.strValue(GameData$1.iGovXiuId[i+6], 0, 6)+lev+"级", c, 20, 101, 1, 1, 0, 0, -2);
    			this.pm3f.DrawTextEx(this.iX+this.iW-40, y+15, ""+GmMe$1.me.rbs.iGovXiu[i+6][1]+"/"+MyGov.iBuildingUpgrad[lev]/10, c, 20, 101, 1, 1, 0, -3, -2);
    		}
    		
    		this.btn_xiu.Move(this.iX+this.iW-20-90, this.iY+this.iH-20-60, 90, 60);
    		this.btn_xiu.Draw();
    		
    		DrawMode$1.frame_type4("11号框20_20", this.iX+20, this.iY+70+150+20, this.iW-40-90-20, 90, 20, 20);
    //		DrawMode.Frame1_BR(this.iX+30, this.iY+270-30, this.iW-60, 40+30);
    		this.pm3f.DrawTextEx(this.iX+40, this.iY+260, "当前拥有修炼积分:"+GmMe$1.me.iFlag[13], 0xff114e61, 20, 101, 1, 1, 0, 0, 0);
    		this.pm3f.DrawTextEx(this.iX+40, this.iY+290, "每次修炼花费10点修炼积分", 0xff114e61, 20, 101, 1, 1, 0, 0, 0);
    	}

    	ProcTouch( msg, x, y)
    	{
    		var i;
    		var lev;
    		
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		
    		for(i=0;i<4;i++)
    		{
    			var xx=this.iX+30;
    			var yy=this.iY+65+20+i*30;
    			if(XDefine$1.bInRect(x, y, xx, yy, this.iW-60, 30))
    			{
    				this.iXiuPoint=i;
    			}
    		}
    		if(this.iXiuPoint>=0 && this.iXiuPoint<4 && this.iDelay<=0)
    		{
    			i=this.iXiuPoint;
    			if(this.btn_xiu.ProcTouch(msg, x, y))
    			{
    				if(this.btn_xiu.bCheck())
    				{
    					lev=GmMe$1.me.rbs.iGovXiu[i+6][0];
    					if(lev>=GmMe$1.me.rbs.iLev/5)
    					{
    						EasyMessage.easymsg.AddMessage("修炼不能超过人物等级/5");
    					}
    					else if(GmMe$1.me.iFlag[13]<10)
    					{
    						EasyMessage.easymsg.AddMessage("宠修积分不足");
    					}
    					else
    					{
    //						this.iDelay=20;
    						GmMe$1.me.iFlag[13]-=10;
    						
    						GmMe$1.me.rbs.iGovXiu[i+6][1]+=10;
    						if(GmMe$1.me.rbs.iGovXiu[i+6][1]>=MyGov.iBuildingUpgrad[lev]/10)
    						{
    							GmMe$1.me.rbs.iGovXiu[i+6][0]++;
    							GmMe$1.me.rbs.iGovXiu[i+6][1]-=MyGov.iBuildingUpgrad[lev]/10;
    						}
    						GmProtocol$1.gi().s_GovXiu(GameData$1.iGovXiuId[i+6],i+6);
    					}
    				}
    			}
    		}
    		return false;
    	}
    }

    class _GOVLIST
    {/*
    	String sGovName;
    	int iGovId;
    	int iGovLev;
    	int iMemberCount,iMaxMemberCount;
    	String sMaster;
    	int iMasterId;
    	String sDetail;
    	boolean bApplyed;
        short iInitStat;*/
        constructor()
        {

        }
    }
    //申请入帮
    class ApplyForGov extends BaseClass{

    	 constructor( ani)
    	{
    		super();
            this.MAXGOVLIST=32;
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.govlist=new Array(this.MAXGOVLIST);

    		for(i=0;i<this.MAXGOVLIST;i++)
    		{
    			this.govlist[i]=new _GOVLIST();
    		}
    		this.Init();
    	}

    	///////////////////////////////////////////////////////////////////////////

    	ApplyedGovs( pls)
    	{
    		var i,j,k,m;
    		j=pls.GetNextInt();
    		
    		for(i=0;i<j;i++)
    		{
    			m=pls.GetNextShort();
    			for(k=0;k<this.iGovCount;k++)
    			{
    				if(this.govlist[k]!=null && this.govlist[k].iGovId==m)
    				{
    					this.govlist[k].bApplyed=true;
    				}
    			}
    		}
        }

    	 GetGovDetail( pls)
    	{
    		var i=pls.GetNextInt();
    		var j=pls.GetNextByte();
    		for(var k=0;k<this.iGovCount;k++)
    		{
    			if(this.govlist[k]!=null && this.govlist[k].iGovId==i)
    			{
    				if(this.govlist[k].iInitStat==1)
    				{
    					if(j==0)this.govlist[k].iInitStat=3;
    					else
    					{
    						this.govlist[k].iInitStat=2;
    						this.govlist[k].sGovName=pls.GetNextString();
    						this.govlist[k].iGovLev=pls.GetNextInt();
    						this.govlist[k].iMemberCount=pls.GetNextInt();
    						this.govlist[k].iMaxMemberCount=pls.GetNextInt();
    						this.govlist[k].sMaster=pls.GetNextString();
    						this.govlist[k].iMasterId=pls.GetNextInt();
    						this.govlist[k].sDetail=pls.GetNextString();
    					}
    				}
    				break;
    			}
    		}
        }

    	 GetIdList( pls)
    	{
    		var i,off;
    		i=pls.GetNextInt();
    		off=pls.GetNextShort();//起始偏移量
    		if(off==0)
    		{
    			this.iGovCount=i;
    			this.govlist=new Array(this.iGovCount);//
    			this.iOffY=0;
    		}
    		
    		while(true)
    		{
    			i=pls.GetNextShort();
    			if(i==30000 || pls.iOffset>1024 || off>=this.iGovCount)break;
    			if(this.govlist[off]==null)this.govlist[off]=new _GOVLIST();
    			this.govlist[off].iGovId=i;
    			this.govlist[off].iInitStat=0;
    			this.govlist[off].bApplyed=false;
    			off++;
    		}
    	}

    	 Init()
    	{
    		this.iW=920;
    		this.iH=620;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.ui_govlist=new UIList$1(0,6,this.iW-90,330);
    		this.ui_govlist.SetTitle(0, "序号", 90,false);
    		this.ui_govlist.SetTitle(1, "名称", 200,false);
    		this.ui_govlist.SetTitle(2, "帮派号码", 130,false);
    		this.ui_govlist.SetTitle(3, "等级", 90,false);
    		this.ui_govlist.SetTitle(4, "人数", 140,false);
    		this.ui_govlist.SetTitle(5, "帮主", 180,false);
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.govlist=null;
    		this.iGovCount=-1;
    		
    		this.in_govni=new XInput(GmPlay$1.xani_ui);
    		this.in_govni.sDetail="";
    		this.in_govni.sBackPrompt="点击这里输入帮派号码或名称";
    		this.in_govni.iBackSize=24;
    		this.in_govni.iTextSize=30;
    		
    		this.btn_find=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_find.InitButton("查找按钮60_60");
    		
    		this.btn_callmaster=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_callmaster.InitButton("普通按钮195_55");
    		this.btn_callmaster.sName="联系帮主";
    		this.btn_applyall=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_applyall.InitButton("普通按钮195_55");
    		this.btn_applyall.sName="一键申请";
    		this.btn_applyone=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_applyone.InitButton("普通按钮195_55");
    		this.btn_applyone.sName="申请加入";
    		this.btn_creategov=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_creategov.InitButton("普通按钮195_55");
    		this.btn_creategov.sName="创建帮派";
    		
    		this.btn_getingov=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_getingov.InitButton("普通按钮195_55");
    		this.btn_getingov.sName="进入帮派";
    		
    		this.aa_applyed=GmPlay$1.xani_frame.InitAnimaWithName("选中勾a43_36", null);
    		this.bApplyAll=false;
    		
    	}
    	Draw()
    	{
    		var i;
    		var offx,offy;
    		var w,h;
    		DrawMode$1.new_baseframe4(this.iX, this.iY, this.iW,this.iH,"帮","派","列","表");
    //		DrawMode.Frame3_BK(this.iX, this.iY, this.iW,this.iH,"申请入帮");
    		this.btn_close.Draw();
    		
    		offx=this.iX+25;
    		offy=this.iY+25;
    		w=this.iW-50;
    		h=this.iH-50;
    		DrawMode$1.new_framein(offx, offy, w, h);
    		
    		offx+=20;offy+=20;
    		this.ui_govlist.BeginDraw(offx,offy);
    		for(i=0;i<this.iGovCount;i++)
    		{
    			this.ui_govlist.DrawUnit(0, i, ""+(i+1));
    			
    			if(this.ui_govlist.bShow(i) && this.govlist[i]!=null)
    			{
    //				this.ui_govlist.DrawUnit(2, i, ""+govlist[i].iGovId);
    				if(this.govlist[i].iInitStat==0)
    				{//获取信息
    					this.govlist[i].iInitStat=1;
    					GmProtocol$1.gi().s_NewGovOperate(1, this.govlist[i].iGovId, 0, 0,0,"");
    				}
    				else if(this.govlist[i].iInitStat==1)
    				{//正在获取
    					this.ui_govlist.DrawUnit(1, i, "获取中...");
    				}
    				else if(this.govlist[i].iInitStat==2)
    				{//已获取显示
    					if(this.govlist[i].bApplyed)this.ui_govlist.DrawUnitEx_Anima(0,i,this.aa_applyed,60,2);
    					else if(this.bApplyAll)
    					{
    						GmProtocol$1.gi().s_ApplyForGov(this.govlist[i].iGovId);
    						this.govlist[i].bApplyed=!this.govlist[i].bApplyed;
    					}
    					this.ui_govlist.DrawUnit(1, i, this.govlist[i].sGovName);
    					this.ui_govlist.DrawUnit(2, i, ""+this.govlist[i].iGovId);
    					this.ui_govlist.DrawUnit(3, i, ""+(this.govlist[i].iGovLev+1));
    					this.ui_govlist.DrawUnit(4, i, this.govlist[i].iMemberCount+"/"+this.govlist[i].iMaxMemberCount);
    					this.ui_govlist.DrawUnit(5, i, this.govlist[i].sMaster);
    				}
    			}
    		}
    		this.ui_govlist.FinishDraw();
    		
    		offx=this.iX+25+20;
    		offy=this.iY+25+20+330+20;
    		
    		DrawMode$1.frame_type3("纯色b10_10",offx,offy,400,180,10,10);
    		DrawMode$1.frame_type2("外边框a10_10",offx,offy,400,180,10,10);
    		DrawMode$1.frame_type1("帮派宣言a20_44",offx+200-60,offy+20,120,20);
    		M3DFast$1.gi().DrawTextEx(offx+200,offy+20+22, "帮派宣言", 0xff000000, 25, 101, 1, 1, 0, -2, -2);
    		if(this.ui_govlist.iLockPoint>=0 && this.ui_govlist.iLockPoint<this.iGovCount)
    		{//宣言
    			i=this.ui_govlist.iLockPoint;
    			if(this.govlist[i].iInitStat==2)
    			{
    				FormatString.gi().FormatEx("#c000000"+this.govlist[i].sDetail, 360, 20, 0, 0, 20);
    				FormatString.gi().Draw(offx+20,offy+80);
    			}
    			
    			this.btn_callmaster.bDisable=false;
    			this.btn_applyone.bDisable=false;
    			if(this.govlist[i].bApplyed)this.btn_applyone.sName="撤销申请";
    			else this.btn_applyone.sName="申请加入";
    			this.btn_getingov.bDisable=false;
    		}
    		else
    		{
    			this.btn_callmaster.bDisable=true;
    			this.btn_applyone.bDisable=true;
    			this.btn_getingov.bDisable=true;
    		}
    		
    		offx+=400+20;
    		this.in_govni.Move(offx,offy,300,47);
    		DrawMode$1.frame_type1("输入框a20_47",offx,offy,300,20);
    		this.in_govni.DrawText();
    		this.btn_find.Move(offx+300+30, offy-(60-47)/2, 60, 60);
    		this.btn_find.Draw();
    		this.in_govni.onscr();
    		
    		offy+=47+20;
    		this.btn_callmaster.Move(offx, offy, 195, 55);
    		this.btn_callmaster.Draw();
    		if(MyGov.mg.iRealGid==-1)
    		{
    			this.btn_applyall.Move(offx+205, offy, 195, 55);
    			this.btn_applyall.Draw();
    			this.btn_applyone.Move(offx, offy+60, 195, 55);
    			this.btn_applyone.Draw();
    			this.btn_creategov.Move(offx+205, offy+60, 195, 55);
    			this.btn_creategov.Draw();
    		}
    		else
    		{
    			this.btn_getingov.Move(offx+205, offy, 195, 55);
    			this.btn_getingov.Draw();
    		}
    		this.bApplyAll=false;
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.ui_govlist.ProcTouch(msg, x, y))
    		{
    			return true;
    		}
    		if(this.in_govni.ProcTouch(msg, x, y))return true;
    		

    		
    		if(this.btn_find.ProcTouch(msg, x, y))
    		{
    			if(this.btn_find.bCheck())
    			{
    				if(this.in_govni.sDetail.length>0)
    				{
    					GmProtocol$1.gi().s_NewGovOperate(0,0,0,0,0,this.in_govni.sDetail);
    					GmProtocol$1.gi().s_NewGovOperate(2,0,0,0,0,"");
    					this.ui_govlist.iLockPoint=-1;
    				}
    				else EasyMessage.easymsg.AddMessage("请先输入搜索内容");
    			}
    			return true;
    		}
    		if(this.ui_govlist.iLockPoint>=0 && this.ui_govlist.iLockPoint<this.iGovCount)
    		{//宣言
    			var i=this.ui_govlist.iLockPoint;
    			if(this.btn_callmaster.ProcTouch(msg, x, y))
    			{
    				if(this.btn_callmaster.bCheck())
    				{//联系帮主
    					PrivateChat_Send.OpenChat( this.govlist[i].iMasterId, this.govlist[i].sMaster,6);
    //					this.govlist[i].iMasterId;
    				}
    				return true;
    			}
    			if(MyGov.mg.iRealGid==-1)
    			{
    				if(this.btn_applyone.ProcTouch(msg, x, y))
    				{
    					if(this.btn_applyone.bCheck())
    					{
    						if(GmMe$1.me.rbs.iLev<20)FrameMessage.fm.Open("达到20级才能申请入帮");
    						else
    						{
    							GmProtocol$1.gi().s_ApplyForGov(this.govlist[i].iGovId);
    							this.govlist[i].bApplyed=!this.govlist[i].bApplyed;
    						}
    					}
    					return true;
    				}
    			}
    			else
    			{
    				if(this.btn_getingov.ProcTouch(msg, x, y))
    				{
    					if(this.btn_getingov.bCheck())
    					{//根据id进入帮派
    						XStat$1.gi().PopStat(1);
    						GmProtocol$1.gi().s_GetIntoGov(this.govlist[i].iGovId);
    					}
    					return true;
    				}
    			}
    		}
    		if(MyGov.mg.iRealGid==-1)
    		{
    			if(this.btn_applyall.ProcTouch(msg, x, y))
    			{
    				if(this.btn_applyall.bCheck())
    				{
    					if(GmMe$1.me.rbs.iLev<20)FrameMessage.fm.Open("达到20级才能申请入帮");
    					else this.bApplyAll=true;
    				}
    				return true;
    			}
    			if(this.btn_creategov.ProcTouch(msg, x, y))
    			{
    				if(this.btn_creategov.bCheck())
    				{
    					FrameMessage.fm.Open("集齐七国旗后可以找郢城的帮派总管创建帮派");
    				}
    				return true;
    			}
    		}
    		
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		
    		return false;
    	}
    }
    ApplyForGov.Applyed=function( pls)
    {
        var afg;
        afg=XStat$1.gi().FindStat(XStat$1.GS_APPLYFORGOV);
        if (afg!=null)
        {
            afg.ApplyedGovs(pls);
        }
    };
    ApplyForGov.Get=function( pls)
    {
        var afg;
        afg=XStat$1.gi().FindStat(XStat$1.GS_APPLYFORGOV);
        if (afg!=null)
        {
            afg.GetGovDetail(pls);
        }
    };
    ApplyForGov.Open=function( pls)
    {
        var afg;
        if (XStat$1.gi().iXStat != XStat$1.GS_APPLYFORGOV)afg= XStat$1.gi().PushStat(XStat$1.GS_APPLYFORGOV);
        else afg =  XStat$1.gi().LastStat(0);
        afg.GetIdList(pls);
    };

    class HireTraderWorker extends BaseClass{
    	 constructor( a)
    	{
    		super();
    		var i;
    		
    		this.iW=750;
    		this.iH=480;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.iCount=new Int32Array(3);//
    				
    		this.btn_hire=new Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.btn_hire[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_hire[i].sName="雇佣";
    			this.btn_hire[i].InitButton("普通按钮140_55");
    		}
    	}
    	Draw()
    	{
    		DrawMode$1.frame_type4("中等框a52_50", this.iX, this.iY, this.iW, this.iH, 52, 50);
    		if(this.iType==0)this.Draw_0();
    		else this.Draw_1();
    	}
    	Draw_0()
    	{
    		var offx,offy;
    		M3DFast$1.gi().DrawTextEx(this.iX+30, this.iY+30, "我这里的工人无所不能！", 0xff035d44, 30, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(this.iX+30, this.iY+30+40, "当前正在工作的普通工人"+this.iCount[0]+"名，高级工人"+this.iCount[1]+"名，特殊工人"+this.iCount[2]+"名", 0xff155058, 20, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(this.iX+30, this.iY+30+80, "维护时增加"+this.iAdd+"建筑进度", 0xff155058, 20, 101, 1, 1, 0, 0, 0);
    		
    		offx=this.iX+30;
    		offy=this.iY+150;
    		this.DrawEntry(0,offx,offy,"普通工人","6万铜币(获得60帮贡)");
    		this.DrawEntry(1,offx,offy+100,"高级工人","12万铜币(获得90帮贡)");
    		this.DrawEntry(2,offx,offy+200,"特殊工人","20元宝(获得120帮贡)");
    	}
    	Draw_1()
    	{
    		var offx,offy;
    		M3DFast$1.gi().DrawTextEx(this.iX+30, this.iY+30, "我这里的商人个个都是好手！", 0xff035d44, 30, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(this.iX+30, this.iY+30+40, "当前正在工作的普通商人"+this.iCount[0]+"名，高级商人"+this.iCount[1]+"名，特殊商人"+this.iCount[2]+"名", 0xff155058, 20, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(this.iX+30, this.iY+30+80, "维护时恢复"+this.iAdd+"帮派资金", 0xff155058, 20, 101, 1, 1, 0, 0, 0);
    		
    		offx=this.iX+30;
    		offy=this.iY+150;
    		this.DrawEntry(0,offx,offy,"普通商人","6万铜币(获得60帮贡)");
    		this.DrawEntry(1,offx,offy+100,"高级商人","12万铜币(获得90帮贡)");
    		this.DrawEntry(2,offx,offy+200,"特殊商人","20元宝(获得120帮贡)");
    	}
    	 DrawEntry( p, offx, offy, title, detail)
    	{
    		var ww=690;
    		DrawMode$1.frame_type1("帮派福利条a20_92",offx,offy,ww,20);
    		
    		GmPlay$1.xani_icon.DrawAnima_aa(offx+20, offy+(92-73)/2, title,0);
    		
    		M3DFast$1.gi().DrawText_2(offx+20+73+20,offy+92/2, title, 0xffffff00, 30, 101, 1, 1, 0, 0, -2, 4, 0xffa57841);
    		if(detail.length>0)M3DFast$1.gi().DrawTextEx(offx+20+73+20+160, offy+92/2, detail, 0xff000000, 20, 101, 1, 1, 0, 0, -2);
    		this.btn_hire[p].Move(offx+ww-20-140,offy+(92-55)/2,140,55);
    		this.btn_hire[p].Draw();
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<3;i++)
    		{
    			if(this.btn_hire[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_hire[i].bCheck())
    				{
    					GmProtocol$1.gi().s_HireWorker(this.iType,i,24);
    					XStat$1.gi().PopStat(1);
    				}
    				break;
    			}
    		}
    		if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH) && msg==3)XStat$1.gi().PopStat(1);
    		return false;
    	}
    }

    HireTraderWorker.Open=function( pls)
    {
    	var tt=pls.GetNextInt();
    	if(tt!=0)return;
    	var htw=XStat$1.gi().PushStat(XStat$1.GS_HIRETRADERWORKER);
    	
    	htw.iType=pls.GetNextInt();
    	htw.iCount[0]=pls.GetNextInt();
    	htw.iCount[1]=pls.GetNextInt();
    	htw.iCount[2]=pls.GetNextInt();
    	htw.iAdd=pls.GetNextInt();
    };

    class _MYPRICE
    {/*
    	int iFlag;
    	int iLable;
    	int iMoney;
    	int iIngot;
    	int iGovTick;*/
    	constructor()
    	{
    		this.Clear();
    	}
    	 Clear()
    	{
    		this.iMoney=0;
    		this.iIngot=0;
    		this.iGovTick=0;
    	}
    }

    class NewShop extends BaseClass{
    	_Open( pls)
    	{
    		var i,j,k;
    		this.iShopId=pls.GetNextInt();
    		this.sName=pls.GetNextString();
    		for(i=0;i<20;i++)
    		{
    			this.goods[i].iGid=-1;
    			this.goods[i].iTid=pls.GetNextInt();
    			if(this.goods[i].iTid==0)continue;
    			this.goods[i].iGid=1;
    			this.goods[i].iCount=pls.GetNextByte();
    			this.iOnceBuyCount[i]=pls.GetNextByte();
    			k=pls.GetNextByte();
    			for(j=0;j<8;j++)
    			{
    				if((k&(1<<j))!=0)this.goods[i].iAtts[j]=pls.GetNextInt();
    			}
    			GmPlay$1.xani_ngoods.InitAnimaWithName(GmPlay$1.de_goods.strValue(this.goods[i].iTid, 0, 10), this.goods[i].aa);
    			
    			k=pls.GetNextShort();
    			this.price[i].iFlag=k;
    			if((k&1)!=0)this.price[i].iMoney=pls.GetNextInt();
    			if((k&2)!=0)this.price[i].iIngot=pls.GetNextInt();
    			if((k&4)!=0)this.price[i].iGovTick=pls.GetNextInt();
    			if((k&8)!=0)pls.GetNextInt();
    			if((k&16)!=0)pls.GetNextInt();
    			if((k&32)!=0)pls.GetNextInt();
    			if((k&64)!=0)pls.GetNextInt();
    			if((k&128)!=0)pls.GetNextInt();
    			
    			if((k&256)!=0)pls.GetNextInt();
    			if((k&512)!=0)pls.GetNextInt();
    			if((k&1024)!=0)pls.GetNextInt();
    			if((k&2048)!=0)pls.GetNextInt();
    			if((k&4096)!=0)pls.GetNextInt();
    			if((k&8192)!=0)pls.GetNextInt();
    			if((k&16384)!=0)pls.GetNextInt();
    			if((k&32768)!=0)pls.GetNextInt();
    			
    			this.price[i].iLable=pls.GetNextByte();
    		}
    //		GmPlay.sop("zzzzz"+this.lockgoods);
    		if(this.lockgoods!=null)
    		{
    //			GmPlay.sop("zzzzzzzz"+this.lockgoods.iGid);
    			if(this.lockgoods.iGid<=0)
    			{
    				this.lockgoods=null;
    				GoodsDraw.Reset();
    			}
    		}
    	}
    	 constructor( a)
    	{
    		super();
    		var i;
    		this.goods=new Array(20);//
    		this.price=new Array(20);//
    		this.iOnceBuyCount=new Int32Array(20);//

    		for(i=0;i<20;i++){
    			this.goods[i]=new Goods();
    			this.goods[i].iPos=i;
    			this.price[i]=new _MYPRICE();
    		}
    		
    		this.pani=a;
    		this.pm3f=a.pm3f;
    		
    		this.iW=710;
    		this.iH=345+60;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.lockgoods = null;

    		this.btn_close = new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_buy=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_buy.InitButton("按钮1_110");
    		this.btn_buy.sName="购买";
    		this.btn_buy.Move(this.iX+this.iW-110-30,this.iY+this.iH-52-30,110,52);
    		
    		this.in_count=new XInputNumber(GmPlay$1.xani_nui3);
    		this.in_count.iNumber=1;
    	}
    	Draw()
    	{
    		var i,j;
    		var x,y,offx,offy;
    //		DrawMode.new_baseframe4(x, y, w, h, s1, s2, s3, s4)
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		this.btn_close.Draw();
    		
    		this.pm3f.DrawTextEx(this.iX+430+30+15, this.iY+35, this.sName, 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    		
    		GoodsDraw.new_DrawGoods(this.iX+30, this.iY+30, this.goods, null, null);
    		offx=this.iX+30+5;
    		offy=this.iY+30+5;

    		for(i=0;i<5;i++)
    		{
    			for(j=0;j<4;j++)
    			{
    				x=offx+i*85;
    				y=offy+j*85;
    				if(this.goods[j*5+i].iGid!=-1 && this.price[j*5+i].iLable>0)
    				{//折扣标签
    					GmPlay$1.xani_other.DrawAnima(x, y, "商店标签"+this.price[j*5+i].iLable,0);
    				}
    			}
    		}
    		
    		if(this.lockgoods!=null)
    		{
    			GoodsDraw.new_DrawRect(this.iX+30, this.iY+30, this.goods,this.lockgoods, 0);
    			offx=this.iX+430+30+15;
    			offy=this.iY+80;
    			this.pm3f.DrawTextEx(offx,offy, "名称："+GmPlay$1.de_goods.strValue(this.lockgoods.iTid, 0, 4), 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    			offy+=30;
    			this.pm3f.DrawTextEx(offx,offy, "单价：", 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    			offy+=30;
    			j=this.lockgoods.iPos;
    			if((this.price[j].iFlag&1)!=0)
    			{
    				this.pm3f.DrawTextEx(offx+20,offy, "铜币："+this.price[j].iMoney, 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    				offy+=30;
    			}
    			if((this.price[j].iFlag&2)!=0)
    			{
    				this.pm3f.DrawTextEx(offx+20,offy, "元宝："+this.price[j].iIngot, 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    				offy+=30;
    			}
    			if((this.price[j].iFlag&4)!=0)
    			{
    				this.pm3f.DrawTextEx(offx+20,offy, "帮贡："+this.price[j].iGovTick, 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    				offy+=30;
    			}

    			this.pm3f.DrawTextEx(offx,offy, "数量：", 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    			offy+=30;
    			this.in_count.Move(offx+20,offy, 100);
    			this.in_count.Draw();
    		}
    		if(this.btn_buy.bDisable)
    		{
    			this.iBuyDelay--;
    			if(this.iBuyDelay<=0)this.btn_buy.bDisable=false;
    		}
    		this.btn_buy.Draw();
    		
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.lockgoods!=null)
    		{
    			if(this.in_count.ProcTouch(msg, x, y))
    			{
    				return true;
    			}
    			if(this.btn_buy.ProcTouch(msg, x, y))
    			{
    				if(this.btn_buy.bCheck())
    				{
    					i=this.lockgoods.iPos;
    //					GmPlay.sop(""+MyGov.mg.iGovTick+",,,,,,,,,,,,,,"+this.price[i].iGovTick*this.in_count.iNumber);
    					
    					if(this.in_count.iNumber<=0)EasyMessage.easymsg.AddMessage("购买数量不能为0");
    					else if(this.in_count.iNumber>this.iOnceBuyCount[i])EasyMessage.easymsg.AddMessage("购买数量超过单次可购买上限");
    					else if(this.in_count.iNumber>this.lockgoods.iCount)EasyMessage.easymsg.AddMessage("购买数量超过上限");
    					else if((this.price[i].iFlag&1)!=0 && GmMe$1.me.rbs.iMoney<this.price[i].iMoney*this.in_count.iNumber)EasyMessage.easymsg.AddMessage("铜币不足");
    					else if((this.price[i].iFlag&2)!=0 && GmMe$1.me.rbs.iInGot<this.price[i].iIngot*this.in_count.iNumber)EasyMessage.easymsg.AddMessage("铜币不足");
    					else if((this.price[i].iFlag&4)!=0 && MyGov.mg.iTick<this.price[i].iGovTick*this.in_count.iNumber)EasyMessage.easymsg.AddMessage("帮贡不足");
    					else
    					{
    						GmProtocol$1.gi().s_NewShopBuy(this.iShopId, this.lockgoods.iPos,this.lockgoods.iTid, this.in_count.iNumber);
    						this.btn_buy.bDisable=true;
    						this.iBuyDelay=30;
    					}
    //					else if(NpcShop.ns.iUseType==0 && GmMe.me.rbs.iMoney<NpcShop.ns.price[this.lockgoods.iPos]*this.in_count.iNumber)EasyMessage.easymsg.AddMessage("铜币不足");
    //					else GmProtocol.gi().s_NpcShopBuy(NpcShop.ns.iShopId, this.lockgoods.iTid, this.in_count.iNumber);
    				}
    				return true;
    			}
    		}

    		var g;
    		g=GoodsDraw.new_LockGoods(x,y,this.iX+30, this.iY+30, this.goods,msg);
    		GoodsDraw.NoMove();
    		if(msg==3 && g!=null)
    		{//点击物品，选中准备购买
    			if(g!=this.lockgoods)this.in_count.iNumber=1;
    			this.lockgoods=g;
    			i=this.lockgoods.iCount;
    			if(i>this.iOnceBuyCount[this.lockgoods.iPos])i=this.iOnceBuyCount[this.lockgoods.iPos];
    			this.in_count.MinMax(1, i);
    //			if(iNeedCount==0)iNeedCount=1;
    //			else if(iNeedCount==1)iNeedCount=10;
    //			else if(iNeedCount==10)iNeedCount=this.lockgoods.iCount;
    //			if(iNeedCount>this.lockgoods.iCount)iNeedCount=this.lockgoods.iCount;
    		}
    		else if(g==null)this.lockgoods=null;
    		
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    NewShop.Open=function( pls)
    {
    	var ns;
    	ns= XStat$1.gi().FindStat(XStat$1.GS_NEWSHOP);
    	if(ns==null)ns= XStat$1.gi().PushStat(XStat$1.GS_NEWSHOP);
    	ns._Open(pls);
    };

    class ReleaseGovMission$1 extends BaseClass{

    	 constructor( a)
    	{
    		super();
    		var i;
    		this.iW=640;
    		this.iH=560;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_select=new Array(4);//
    		for(i=0;i<4;i++)
    		{
    			this.btn_select[i]=new XButtonEx2$1(GmPlay$1.xani_icon);
    			this.btn_select[i].InitButton(_FOUR[i]);
    		}
    		
    		this.btn_ok=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_ok.InitButton("普通按钮140_55");
    		this.btn_ok.sName="确定";
    		this.btn_cancel=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_cancel.InitButton("普通按钮140_55");
    		this.btn_cancel.sName="取消";
    		
    		this.in_ingot=new XInputNumber(GmPlay$1.xani_nui3);
    		this.in_ingot.iNumber=0;
    		this.in_ingot.MinMax(0, 200);
    		
    		this.in_money=new XInputNumber(GmPlay$1.xani_nui3);
    		this.in_money.iNumber=0;
    		this.in_money.MinMax(0, 2000000);
    		
    		this.in_count=new XInputNumber(GmPlay$1.xani_nui3);
    		this.in_count.iNumber=1;
    		this.in_count.MinMax(1, 20);
    	}

    	
    	Draw()
    	{
    		var i;
    		var offx,offy;
    		DrawMode$1.frame_type4("中等框a52_50",this.iX,this.iY,this.iW,this.iH,52,50);
    		M3DFast$1.gi().DrawTextEx(this.iX+this.iW/2, this.iY+20+15, "发布委托", 0xff005b41, 30, 101, 1, 1, 0, -2, -2);
    		
    		offx=this.iX+30;
    		offy=this.iY+20+30+20;
    		M3DFast$1.gi().DrawTextEx(offx, offy, "任务类型:", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		offy+=25+10;
    		for(i=0;i<4;i++)
    		{
    			this.btn_select[i].Move(offx+50+i*130,offy,73,73);
    			this.btn_select[i].Draw();
    			M3DFast$1.gi().DrawTextEx(this.btn_select[i].iX+this.btn_select[i].iW/2,this.btn_select[i].iY+this.btn_select[i].iH+5 ,_FOUR[i], 0xff000000, 25, 101, 1, 1, 0, -2, 0);
    			if(this.iMissionType==i)DrawMode$1.frame_type2("黄色透明框a25_25", this.btn_select[i].iX, this.btn_select[i].iY, 73, 73,25,25);
    		}
    		
    		offy+=73+5+25+20;
    		M3DFast$1.gi().DrawTextEx(offx, offy, "委托花费:", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		offy+=25+15;
    		M3DFast$1.gi().DrawTextEx(offx+40, offy, "元宝:", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		this.in_ingot.Move(offx+40+70, offy+(25-47)/2, 140);
    		this.in_ingot.Draw();
    		i=(this.in_ingot.iNumber*5/100);
    		i=i<1?1:i;
    		if(this.in_ingot.iNumber==0)i=0;
    		M3DFast$1.gi().DrawTextEx(offx+40+70+150, offy, "(额外收取手续费"+i+"元宝)", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		offy+=25+15+15;
    		i=(this.in_money.iNumber*5/100);
    		i=i<10000?10000:i;
    		if(this.in_money.iNumber==0)i=0;
    		M3DFast$1.gi().DrawTextEx(offx+40+70+150, offy, "(额外收取手续费"+i+"铜币)", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(offx+40, offy, "铜币:", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		this.in_money.Move(offx+40+70, offy+(25-47)/2, 140);
    		this.in_money.Draw();

    		offy+=25+15+20;
    		M3DFast$1.gi().DrawTextEx(offx, offy, "委托轮数:", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		offy+=25+15;
    		M3DFast$1.gi().DrawTextEx(offx+40, offy, "数量:", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		this.in_count.Move(offx+40+70, offy+(25-47)/2, 140);
    		this.in_count.Draw();
    		M3DFast$1.gi().DrawTextEx(offx+40+70+150, offy, "(当前可发布"+this.iCanEntrust+"轮)", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		
    		this.btn_ok.Move(this.iX+this.iW-30-140, this.iY+this.iH-30-55, 140, 55);
    		this.btn_ok.Draw();
    		this.btn_cancel.Move(this.iX+30, this.iY+this.iH-30-55, 140, 55);
    		this.btn_cancel.Draw();
    		
    		if(Confirm1.end(Confirm1.CONFIRM_GOVRELEASEENTRUST))
    		{
    			if(Confirm1.bConfirm)
    			{//
    				GmProtocol$1.gi().s_NewGovOperate(16, this.iMissionType,this.in_count.iNumber,this.in_ingot.iNumber, this.in_money.iNumber, "");
    				XStat$1.gi().PopStat(1);
    				GmProtocol$1.gi().s_NewGovOperate(14,100,0,0,0,"");
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i,j;
    		
    		if(this.in_count.ProcTouch(msg, x, y))
    		{
    			this.in_money.bShow=false;
    			this.in_ingot.bShow=false;
    			return true;
    		}
    		if(this.in_money.ProcTouch(msg, x, y))
    		{
    			this.in_count.bShow=false;
    			this.in_ingot.bShow=false;
    			return true;
    		}
    		if(this.in_ingot.ProcTouch(msg, x, y))
    		{
    			this.in_count.bShow=false;
    			this.in_money.bShow=false;
    			return true;
    		}
    		
    		for(i=0;i<4;i++)
    		{
    			if(this.btn_select[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_select[i].bCheck())
    				{
    					this.iMissionType=i;
    				}
    				return true;
    			}
    		}
    		
    		if(this.btn_ok.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ok.bCheck())
    			{
    				if(this.in_ingot.iNumber==0)i=0;
    				else
    				{
    					i=(this.in_ingot.iNumber*5/100);
    					if(i<1)i=1;
    					i+=this.in_ingot.iNumber;
    					i*=this.in_count.iNumber;
    				}
    				
    				if(this.in_money.iNumber==0)j=0;
    				else
    				{
    					j=(this.in_money.iNumber*5/100);
    					if(j<10000)j=10000;
    					j+=this.in_money.iNumber;
    					j*=this.in_count.iNumber;
    				}
    				if(i==0 && j==0)EasyMessage.easymsg.AddMessage("请先设置委托奖励");
    				else if(GmMe$1.me.rbs.iInGot<i)FrameMessage.fm.Open("元宝不足");
    				else if(GmMe$1.me.rbs.iMoney<j)FrameMessage.fm.Open("铜币不足");
    				else Confirm1.start(Confirm1.CONFIRM_GOVRELEASEENTRUST,"发布"+this.in_count.iNumber+"轮"+_FOUR[this.iMissionType]+"共需花费"+i+"元宝，"+j+"铜币#e#e撤销委托不退还手续费，是否确定发布？");//转让确认
    			}
    		}
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		if(!XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH) && msg==3)XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    ReleaseGovMission$1._FOUR=["朱雀任务","青龙任务","白虎任务","玄武任务"];

    ReleaseGovMission$1.Open=function( defmtype, cs1, cs2)
    {
    	var afg;
    	if (XStat$1.gi().iXStat != XStat$1.GS_RELEASEGOVMISSION)
    	{
    		afg= XStat$1.gi().PushStat(XStat$1.GS_RELEASEGOVMISSION);
    		afg.iMissionType=defmtype;
    		afg.iCanEntrust=cs1;
    		afg.iMaxCanEntrust=cs2;
    		afg.in_count.MinMax(1,cs1);
    	}
    };

    class DayAttend extends BaseClass{


    	
    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=460;
    		this.iH=350;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_get=new XButton(GmPlay$1.xani_button);
    		this.btn_get.InitButton("统一大按钮2");
    		this.btn_get.Move(this.iX+this.iW-60-5, this.iY, 60, 60);
    		this.btn_get.sName="签到";
    		
    		this.iNeedDay=new Int32Array(6);//
    		this.sGiveDetail=new Array(6);//
    	}
    	
    	Draw()
    	{
    		var i,j,k,m;
    		var offx,offy,w,h;
    		DrawMode$1.Frame2_MD(this.iX, this.iY, this.iW, this.iH);
    		
    		offx=this.iX+20;
    		offy=this.iY+20;
    		w=200;
    		h=230;
    		M3DFast$1.gi().FillRect_2D(offx, offy, offx+w, offy+h, 0x20000000);
    		if(this.iWeek==0)k=7;
    		else k=this.iWeek;
    		m=0;
    		for(i=0;i<7;i++)
    		{
    			if(i==0)j=7;
    			else j=i;
    			if(j<k)
    			{//显示是否签到过
    				M3DFast$1.gi().DrawTextEx(offx+10, offy+10+j*30-30, "周"+GameData$1.sWeek[j], 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    				if((this.iFlag19&(1<<i))==0)M3DFast$1.gi().DrawTextEx(offx+10+120, offy+10+j*30-30, "未签到", 0xffff0000, 20, 101, 1, 1, 0, 0, 0);
    				else
    				{
    					M3DFast$1.gi().DrawTextEx(offx+10+120, offy+10+j*30-30, "已签到", 0xff00ff00, 20, 101, 1, 1, 0, 0, 0);
    					m++;
    				}
    			}
    			else if(k==j)
    			{
    				M3DFast$1.gi().FillRect_2D(offx+10, offy+10+j*30-30,offx+w-10, offy+10+j*30-30+20, 0x20000000);
    				M3DFast$1.gi().DrawTextEx(offx+10, offy+10+j*30-30, "周"+GameData$1.sWeek[j], 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    				if((this.iFlag19&(1<<i))!=0)
    				{
    					M3DFast$1.gi().DrawTextEx(offx+10+120, offy+10+j*30-30, "已签到", 0xff00ff00, 20, 101, 1, 1, 0, 0, 0);
    					m++;
    				}
    			}
    			else
    			{
    				M3DFast$1.gi().DrawTextEx(offx+10, offy+10+j*30-30, "周"+GameData$1.sWeek[j], 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    			}
    		}
    		
    		offy+=h;
    		M3DFast$1.gi().DrawTextEx(offx+10, offy+10, "当前活跃度"+this.iAct, 0xff000000, 30, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(offx+10, offy+50, "活跃度达到"+this.iNeedAct+"可签到", 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    		
    		offx+=w+20;
    		offy=this.iY+20;
    		M3DFast$1.gi().FillRect_2D(offx, offy, offx+w, offy+h, 0x20000000);
    		var s="#cffff00本周已累计签到"+m+"次#e#e#c000000";
    		for(i=0;i<this.iGiveCount;i++)
    		{
    			s+="累计签到"+this.iNeedDay[i]+"次可获得:#e"+this.sGiveDetail[i];
    			s+="#e#e";
    		}
    		FormatString.gi().Format(s, 180, 20);
    		FormatString.gi().Draw(offx+10, offy+10);
    		
    		offy+=h;
    		
    		this.btn_get.Move(offx+w/2-80/2,offy+20,80,50);
    		this.btn_get.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_get.ProcTouch(msg, x, y))
    		{
    			if(this.btn_get.bCheck())
    			{
    				if(this.iAct<this.iNeedAct)EasyMessage.easymsg.AddMessage("活跃度未达不能签到");
    				else
    				{                                                                                                         
    					GmProtocol$1.gi().s_GetCodeReward(3, "");
    					XStat$1.gi().PopStat(1);
    				}
    			}
    			return true;
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    		}
    		return false;
    	}

    }
    DayAttend.Open=function( pls)
    {
    	var i;
    	var da=XStat$1.gi().PushStat(XStat$1.GS_DAYATTEND);
    	da.iWeek=pls.GetNextByte();//今天周几
    	da.iFlag19=pls.GetNextInt();//本周签到情况
    	da.iAct=pls.GetNextInt();//当前活跃
    	da.iNeedAct=pls.GetNextInt();//需要活跃
    	
    	da.iGiveCount=pls.GetNextByte();
    	for(i=0;i<da.iGiveCount;i++)
    	{
    		da.iNeedDay[i]=pls.GetNextByte();
    		da.sGiveDetail[i]=pls.GetNextString();
    	}
    };

    class LeaderBoardRole extends BaseClass{

    	constructor( ani)
    	{
    		super();
    		this.iW=500;
    		this.iH=320;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.iColor=new Int32Array(6);//
    	}
    	//Open(role_list[i].iRid,role_list[i].sName,role_list[i].iComplexScore,role_list[i].iScore,ras,color,weap);

    	Draw()
    	{
    		var i;
    		var ww=200;
    		DrawMode$1.frame_type4("10号框20_20", this.iX, this.iY, this.iW, this.iH, 20, 20);
    		this.btn_close.Draw();
    		
    		FireworksEffect.DrawAura(0,this.iX+30+ww/2, this.iY+this.iH-30-30-60,null,0);
    		GmPlay$1.xani_newrole[this.iRas].DrawAnima(this.iX+30+ww/2, this.iY+this.iH-30-30-60, "站立_下", GmPlay$1.iDelay/2);
    		for(i=0;i<SortAnima._CHANGECOLOR[this.iRas].length;i++)
    		{
    			if(this.iColor[i]<=0)continue;
    			GmPlay$1.xani_color[this.iRas][this.iColor[i]-1].DrawAnima(this.iX+30+ww/2, this.iY+this.iH-30-30-60, SortAnima._CHANGECOLOR[this.iRas][i]+"_站立_下",GmPlay$1.iDelay/2);
    		}
    		GmPlay$1.xani_weap[this.iRas][SortAnima.WeapFlag(this.iWeapId)].DrawAnima(this.iX+30+ww/2, this.iY+this.iH-30-30-60, "站立_下", GmPlay$1.iDelay/2);
    		
    		DrawMode$1.frame_type1("4号框20_30", this.iX+30, this.iY+this.iH-30-30, ww, 20);
    		M3DFast$1.gi().DrawTextEx(this.iX+30+ww/2, this.iY+this.iH-30-15, this.sName, 0xffffffff, 24, 101, 1, 1, 0, -2, -2);
    		
    		if(this.iRank==0)M3DFast$1.gi().DrawText_2(this.iX+30+ww+30, this.iY+30, "未上榜", 0xffffec7e, 24, 101, 1, 1, 0, 0, 0, 3, 0xff01152e);
    		else if(this.iRank==1)M3DFast$1.gi().DrawText_2(this.iX+30+ww+30, this.iY+30, "超越下一名："+this.iGap, 0xffffec7e, 24, 101, 1, 1, 0, 0, 0, 3, 0xff01152e);
    		else M3DFast$1.gi().DrawText_2(this.iX+30+ww+30, this.iY+30, "距离上一名："+this.iGap, 0xffffec7e, 24, 101, 1, 1, 0, 0, 0, 3, 0xff01152e);
    		M3DFast$1.gi().DrawText_2(this.iX+30+ww+30, this.iY+30+30, "综合评分："+this.iComplexScore, 0xffffec7e, 24, 101, 1, 1, 0, 0, 0, 3, 0xff01152e);
    		
    		DrawMode$1.frame_type4("11号框20_20", this.iX+30+ww+30, this.iY+30+60, this.iW-30-ww-30-30, (this.iH-30-60-30-20)/2, 20, 20);
    		M3DFast$1.gi().DrawTextEx(this.iX+30+ww+30+15, this.iY+30+60+15, "人物评分："+this.iScore, 0xff124c60, 20, 101, 1, 1, 0, 0, 0);
    		FormatString.gi().Format("#c124c60(与等级，技能，修炼，装备，阵法相关)", this.iW-30-ww-30-30-30, 16);
    		FormatString.gi().Draw(this.iX+30+ww+30+15, this.iY+30+60+15+25);
    		
    		DrawMode$1.frame_type4("11号框20_20", this.iX+30+ww+30, this.iY+30+60+(this.iH-30-60-30-20)/2+20, this.iW-30-ww-30-30, (this.iH-30-60-30-20)/2, 20, 20);
    		M3DFast$1.gi().DrawTextEx(this.iX+30+ww+30+15, this.iY+30+60+15+(this.iH-30-60-30-20)/2+20, "宠物评分："+(this.iComplexScore-this.iScore), 0xff124c60, 20, 101, 1, 1, 0, 0, 0);
    		FormatString.gi().Format("#c124c60(与携带评分最高的四只宠物相关)", this.iW-30-ww-30-30-30, 16);
    		FormatString.gi().Draw(this.iX+30+ww+30+15, this.iY+30+60+15+25+(this.iH-30-60-30-20)/2+20);
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    				return true;
    			}
    		}
    		return false;
    	}
    }
    LeaderBoardRole.Open=function( rid, name, compscore, rolescore, ras, color, weap, rank, gap)
    {
    	var lbr=XStat$1.gi().PushStat(XStat$1.GS_LEADERBOARDROLE);
    	lbr.iRid=rid;
    	lbr.sName=name;
    	lbr.iComplexScore=compscore;
    	lbr.iScore=rolescore;
    	lbr.iPetScore=compscore-rolescore;
    	lbr.iRas=ras;
    //		lbr.iColor=color;
    	lbr.iWeapId=weap;
    	lbr.iRank=rank;
    	lbr.iGap=gap;
    	
    	lbr.iColor[0]=color&7;
    	lbr.iColor[1]=(color>>3)&7;
    	lbr.iColor[2]=(color>>6)&7;
    	lbr.iColor[3]=(color>>9)&7;
    	lbr.iColor[4]=(color>>12)&7;
    };

    class _EQUIPLIST
    {
    /*	public int iGid;
    	public int iTid;
    	public int iRid;
    	public String sOwner;
    	public int iScore;
    	public int iInitProc;*/
    	constructor()
    	{

    	}
    }
    class _ROLELIST$1
    {
    /*	public int iRid;
    	public String sName;
    	public int iSchoolId;
    	public int iScore;
    	public int iComplexScore;
    	public int iLev;
    	public int iInitProc;
    	public int iFlag16;
    	public int iMoney;//ingot
    */	constructor()
    	{
    		this.iComplexScore=0;
    		this.iScore=0;
    	}
    }
    class _PETLIST
    {
    /*	public int iPid;
    	public int iTid;
    	public int iRid;
    	public String sOwner;
    	public int iScore;
    	public int iInitProc;*/
    	constructor()
    	{

    	}
    }

    class LeaderBoardFrame extends BaseClass
    {
    	constructor( ani)
    	{
    		super();
    		this._titles=[
    			["七国第一","七国英杰","七国才俊"],
    			["独占鳌头","超群绝伦","出类拔萃"],
    			["驯兽大师","驯兽达人","驯兽有方"],
    			["会当凌绝顶","山高我为峰","高处不胜寒"],
    			["锻器大师","锻器达人","锻器有方"],
    			["富甲天下","富可敌国","家财万贯"],
    			["壕气冲天","威风壕壕","英雄壕杰"]
    		];
    		var i;

    		this.iLW=660;
    		this.iW=340+this.iLW;
    		this.iH=530;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		this.iShowH=this.iH-80;
    		this.iDestH=0;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_grsl=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_grsl.InitButton("6号按钮210_60");
    		this.btn_grsl.sName="个人实力";
    		this.btn_zhpf=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_zhpf.InitButton("7号按钮180_60");
    		this.btn_zhpf.sName="综合评分";
    		this.btn_rwpf=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_rwpf.InitButton("7号按钮180_60");
    		this.btn_rwpf.sName="人物评分";
    		this.btn_cwpf=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_cwpf.InitButton("7号按钮180_60");
    		this.btn_cwpf.sName="宠物评分";
    		this.btn_dj=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_dj.InitButton("7号按钮180_60");
    		this.btn_dj.sName="等级";
    		
    		this.btn_jssb=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_jssb.InitButton("6号按钮210_60");
    		this.btn_jssb.sName="绝世神兵";
    		this.btn_wq=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_wq.InitButton("7号按钮180_60");
    		this.btn_wq.sName="武器";
    		this.btn_xl=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_xl.InitButton("7号按钮180_60");
    		this.btn_xl.sName="项链";
    		this.btn_yf=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_yf.InitButton("7号按钮180_60");
    		this.btn_yf.sName="衣服";
    		this.btn_tk=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_tk.InitButton("7号按钮180_60");
    		this.btn_tk.sName="头盔";
    		this.btn_yd=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_yd.InitButton("7号按钮180_60");
    		this.btn_yd.sName="腰带";
    		this.btn_xz=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_xz.InitButton("7号按钮180_60");
    		this.btn_xz.sName="鞋子";
    		
    		this.btn_bwjfb=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_bwjfb.InitButton("6号按钮210_60");
    		this.btn_bwjfb.sName="比武积分榜";
    		this.btn_49z=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_49z.InitButton("7号按钮180_60");
    		this.btn_49z.sName="上届49组";
    		this.btn_69z=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_69z.InitButton("7号按钮180_60");
    		this.btn_69z.sName="上届69组";
    		this.btn_89z=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_89z.InitButton("7号按钮180_60");
    		this.btn_89z.sName="上届80组";
    		
    		this.btn_qgyh=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_qgyh.InitButton("6号按钮210_60");
    		this.btn_qgyh.sName="七国英豪";
    		this.btn_49t=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_49t.InitButton("7号按钮180_60");
    		this.btn_49t.sName="49组";
    		this.btn_69t=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_69t.InitButton("7号按钮180_60");
    		this.btn_69t.sName="69组";
    		this.btn_89t=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_89t.InitButton("7号按钮180_60");
    		this.btn_89t.sName="80组";
    		
    		this.btn_cfb=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_cfb.InitButton("6号按钮210_60");
    		this.btn_cfb.sName="财富榜";
    		this.btn_money=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_money.InitButton("7号按钮180_60");
    		this.btn_money.sName="铜币榜";
    		this.btn_ingot=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_ingot.InitButton("7号按钮180_60");
    		this.btn_ingot.sName="元宝榜";
    		
    		this.btn_hyb=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_hyb.InitButton("6号按钮210_60");
    		this.btn_hyb.sName="活跃榜";
    		this.btn_thisweek=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_thisweek.InitButton("7号按钮180_60");
    		this.btn_thisweek.sName="本周活跃榜";
    		this.btn_previousweek=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_previousweek.InitButton("7号按钮180_60");
    		this.btn_previousweek.sName="上周活跃榜";
    		
    		this.equip_list=new Array(50);//
    		this.role_list=new Array(50);//
    		this.pet_list=new Array(50);//
    		for(i=0;i<50;i++)
    		{
    			this.equip_list[i]=new _EQUIPLIST();
    			this.role_list[i]=new _ROLELIST$1();
    			this.pet_list[i]=new _PETLIST();
    		}
    		this.ui_equip=new UIList$1(0,4,this.iW-25-25-20-240-30,this.iH-50-30);//800-25-25-20-210-30=490
    		this.ui_equip.SetTitle(0, "排名", 160, false);
    		this.ui_equip.SetTitle(1, "神兵名称", 170, false);
    		this.ui_equip.SetTitle(2, "拥有者", 170, false);
    		this.ui_equip.SetTitle(3, "评分", 160, false);

    		this.ui_role=new UIList$1(0,4,this.iW-25-25-20-240-30,this.iH-50-30);//800-25-25-20-210-30=490
    		this.ui_role.SetTitle(0, "排名", 160, false);
    		this.ui_role.SetTitle(1, "角色名称", 170, false);
    		this.ui_role.SetTitle(2, "门派", 170, false);
    		this.ui_role.SetTitle(3, "评分", 160, false);

    		this.ui_pet=new UIList$1(0,4,this.iW-25-25-20-240-30,this.iH-50-30);//800-25-25-20-210-30=490
    		this.ui_pet.SetTitle(0, "排名", 160, false);
    		this.ui_pet.SetTitle(1, "宠物名称", 170, false);
    		this.ui_pet.SetTitle(2, "主人名称", 170, false);
    		this.ui_pet.SetTitle(3, "评分", 160, false);

    		this.iSelect1=0;
    		this.iSelect2=0;
    		
    		this.iRoleCount=0;
    		this.iPetCount=0;
    		this.iEquipCount=0;
    		GmProtocol$1.gi().s_LeaderBoardFresh(0, this.iSelect1, this.iSelect2);
    		
    		GmMe$1.me.CalcUserScore();
    		
    		this.btn_explain=new Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.btn_explain[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_explain[i].InitButton("5号按钮30_30");
    			this.btn_explain[i].Move(0, 0, 30, 30);
    		}
    		
    		this.btn_getprice=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_getprice.InitButton("3号按钮160_42");
    		this.btn_getprice.sName="领取奖励";
    		
    		this.aa_icon=GmPlay$1.xani_frame.InitAnimaWithName("皇冠图标38_32", null);
    		
    		this.btn_self=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_self.bSingleButton=true;
    		this.iOffY=0;
    		this.bLocked1=false;
    	}
    	
    	Draw()
    	{
    		var i;
    		DrawMode$1.new_baseframe3(this.iX, this.iY, this.iW, this.iH, "排", "行","榜");
    		this.btn_close.Draw();
    		
    		if(!this.bLocked1)
    		{
    			if(this.iOffY>0)this.iOffY/=2;
    			if(this.iOffY<0)
    			{
    				if(this.iDestH<this.iY+this.iH-40)
    				{
    					i=this.iY+this.iH-40-this.iDestH;
    					this.iOffY+=i/2;
    				}
    			}
    		}

    		DrawMode$1.new_framein(this.iX+25,this.iY+25,240,this.iH-50);
    		M3DFast$1.gi().SetViewClip(this.iX+40, this.iY+40, this.iX+40+210, this.iY+this.iH-40);
    		var offx=this.iX+25+15;
    		var offy=this.iY+25+15+this.iOffY;
    		this.btn_grsl.Move(offx, offy, 210, 60);
    		if(this.iSelect1==0)this.btn_grsl.setdown();
    		this.btn_grsl.Draw();
    		offy+=60;
    		if(this.iSelect1==0)
    		{
    			this.btn_zhpf.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==0)this.btn_zhpf.setdown();
    			this.btn_zhpf.Draw();
    			offy+=60;
    			this.btn_rwpf.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==1)this.btn_rwpf.setdown();
    			this.btn_rwpf.Draw();
    			offy+=60;
    			this.btn_cwpf.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==2)this.btn_cwpf.setdown();
    			this.btn_cwpf.Draw();
    			offy+=60;
    			this.btn_dj.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==3)this.btn_dj.setdown();
    			this.btn_dj.Draw();
    			offy+=60;
    		}
    		
    		this.btn_jssb.Move(offx, offy, 210, 60);
    		if(this.iSelect1==1)this.btn_jssb.setdown();
    		this.btn_jssb.Draw();
    		offy+=60;
    		if(this.iSelect1==1)
    		{
    			this.btn_wq.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==0)this.btn_wq.setdown();
    			this.btn_wq.Draw();
    			offy+=60;
    			this.btn_xl.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==1)this.btn_xl.setdown();
    			this.btn_xl.Draw();
    			offy+=60;
    			this.btn_yf.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==2)this.btn_yf.setdown();
    			this.btn_yf.Draw();
    			offy+=60;
    			this.btn_tk.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==3)this.btn_tk.setdown();
    			this.btn_tk.Draw();
    			offy+=60;
    			this.btn_yd.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==4)this.btn_yd.setdown();
    			this.btn_yd.Draw();
    			offy+=60;
    			this.btn_xz.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==5)this.btn_xz.setdown();
    			this.btn_xz.Draw();
    			offy+=60;
    		}
    		
    		this.btn_bwjfb.Move(offx, offy, 210, 60);
    		if(this.iSelect1==2)this.btn_bwjfb.setdown();
    		this.btn_bwjfb.Draw();
    		offy+=60;
    		if(this.iSelect1==2)
    		{
    			this.btn_49z.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==0)this.btn_49z.setdown();
    			this.btn_49z.Draw();
    			offy+=60;
    			this.btn_69z.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==1)this.btn_69z.setdown();
    			this.btn_69z.Draw();
    			offy+=60;
    			this.btn_89z.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==2)this.btn_89z.setdown();
    			this.btn_89z.Draw();
    			offy+=60;
    		}
    		
    		this.btn_qgyh.Move(offx, offy, 210, 60);
    		if(this.iSelect1==3)this.btn_qgyh.setdown();
    		this.btn_qgyh.Draw();
    		offy+=60;
    		if(this.iSelect1==3)
    		{
    			this.btn_49t.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==0)this.btn_49t.setdown();
    			this.btn_49t.Draw();
    			offy+=60;
    			this.btn_69t.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==1)this.btn_69t.setdown();
    			this.btn_69t.Draw();
    			offy+=60;
    			this.btn_89t.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==2)this.btn_89t.setdown();
    			this.btn_89t.Draw();
    			offy+=60;
    		}
    		
    		this.btn_cfb.Move(offx, offy, 210, 60);
    		if(this.iSelect1==5)this.btn_cfb.setdown();
    		this.btn_cfb.Draw();
    		offy+=60;
    		if(this.iSelect1==5)
    		{
    			this.btn_money.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==0)this.btn_money.setdown();
    			this.btn_money.Draw();
    			offy+=60;
    			this.btn_ingot.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==1)this.btn_ingot.setdown();
    			this.btn_ingot.Draw();
    			offy+=60;
    		}
    		
    		this.btn_hyb.Move(offx, offy, 210, 60);
    		if(this.iSelect1==6)this.btn_hyb.setdown();
    		this.btn_hyb.Draw();
    		offy+=60;
    		if(this.iSelect1==6)
    		{
    			this.btn_thisweek.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==0)this.btn_thisweek.setdown();
    			this.btn_thisweek.Draw();
    			offy+=60;
    			this.btn_previousweek.Move(offx+15, offy, 180, 60);
    			if(this.iSelect2==1)this.btn_previousweek.setdown();
    			this.btn_previousweek.Draw();
    			offy+=60;
    		}
    		
    		this.iDestH=offy;
    		M3DFast$1.gi().NoClip();
    		//////////////////////////////////////////////////////////////
    		var offw=this.iW-25-25-20-240;
    		DrawMode$1.new_framein(this.iX+25+240+20,this.iY+25,offw,this.iH-50);
    		offx=this.iX+25+240+20;
    		offy=this.iY+25;
    		this.myrank=-1;
    //		this.ui_role.BeginDraw(offx+15, offy+15);
    //		this.ui_role.DrawUnit(0, 0, "adsf");
    //		this.ui_role.FinishDraw();
    //		if(1==1)return;
    		if(this.iSelect1==0)
    		{
    			if(this.iSelect2!=2)
    			{
    				if(this.iSelect2==3)this.ui_role.SetTitle(3, "等级", 160, false);
    				else this.ui_role.SetTitle(3, "评分", 160, false);
    				this.ui_role.BeginDraw(offx+15, offy+15);
    				for(i=0;i<this.iRoleCount+1;i++)
    				{
    					if(i<this.iRoleCount && this.role_list[i].iRid==GmMe$1.me.iRid)this.myrank=i;
    					if(!this.ui_role.bShow(i))continue;
    					if(i==this.iRoleCount)
    					{
    						this.ui_role.DrawUnit(0, i, "");
    						break;
    					}
    					this.ui_role.DrawUnit(0, i, ""+(i+1));
    					if(i<3)
    					{
    						this.aa_icon.iFrame= i;
    						this.ui_role.DrawUnitEx_Anima(0, i, this.aa_icon, 80-38/2,20-32/2 );
    						this.ui_role.DrawUnitEx_Button(0, i, this.btn_explain[i], 100, 5);
    					}
    					
    					switch(this.role_list[i].iInitProc)
    					{
    					case 0:
    						GmProtocol$1.gi().s_LeaderBoardFresh(2, this.role_list[i].iRid, 0);
    						this.role_list[i].iInitProc=1;
    						break;
    					case 1:
    						this.ui_role.DrawUnit(1, i, "获取中...");
    						break;
    					case 2:
    						this.ui_role.DrawUnit(1, i, this.role_list[i].sName);
    						this.ui_role.DrawUnit(2, i, GameData$1.sSchools[this.role_list[i].iSchoolId]);
    						if(this.iSelect2==0)this.ui_role.DrawUnit(3, i, ""+this.role_list[i].iComplexScore);
    						else if(this.iSelect2==1)this.ui_role.DrawUnit(3, i, ""+this.role_list[i].iScore);
    						else if(this.iSelect2==3)this.ui_role.DrawUnit(3, i, ""+this.role_list[i].iLev);
    						break;
    					}
    				}
    				this.ui_role.FinishDraw();
    				
    				{//综合评分
    					offy+=50+9*40;
    //					M3DFast.gi().FillRect_2D(offx+15, offy+15, offx+15+this.iLW, offy+15+40, 0x80ffffff);
    					this.btn_self.Move(offx+15, offy+15, this.iLW, 40);
    					DrawMode$1.frame_type4("22号框20_20", offx+15, offy+15, this.iLW, 40, 20, 20);
    					if(this.myrank>=0)
    					{
    						if(this.myrank<3)this.aa_icon.Draw(this.ui_role.OffX(0)-38/2, offy+15+20-32/2, this.myrank);
    						else M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(0),offy+15+20,""+(this.myrank+1),0xffffffff,20,101,1,1,0,-2,-2);
    					}
    					else M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(0),offy+15+20,"未上榜",0xffffffff,20,101,1,1,0,-2,-2);
    					M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(1),offy+35,GmMe$1.me.sName,0xffffffff,20,101,1,1,0,-2,-2);
    					M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(2),offy+35,GameData$1.sSchools[GmMe$1.me.rbs.iSchoolId],0xffffffff,20,101,1,1,0,-2,-2);
    					if(this.iSelect2==0)M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(3),offy+35,""+GmMe$1.me.iComplexScore,0xffffffff,20,101,1,1,0,-2,-2);
    					if(this.iSelect2==1)M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(3),offy+35,""+GmMe$1.me.iScore,0xffffffff,20,101,1,1,0,-2,-2);
    					if(this.iSelect2==3)M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(3),offy+35,""+GmMe$1.me.rbs.iLev,0xffffffff,20,101,1,1,0,-2,-2);
    				}
    			}
    			else
    			{
    				this.ui_pet.BeginDraw(offx+15, offy+15);
    				for(i=0;i<this.iPetCount+1;i++)
    				{
    					if(!this.ui_pet.bShow(i))continue;
    					if(i==this.iPetCount)
    					{
    						this.ui_pet.DrawUnit(0, i, "");
    						continue;
    					}
    					this.ui_pet.DrawUnit(0, i, ""+(i+1));
    					if(i<3)
    					{
    						this.aa_icon.iFrame= i;
    						this.ui_pet.DrawUnitEx_Anima(0, i, this.aa_icon, 80-38/2,20-32/2 );
    						this.ui_pet.DrawUnitEx_Button(0, i, this.btn_explain[i], 100, 5);
    					}
    					
    					switch(this.pet_list[i].iInitProc)
    					{
    					case 0:
    						GmProtocol$1.gi().s_LeaderBoardFresh(3, this.pet_list[i].iPid, 0);
    						this.pet_list[i].iInitProc=1;
    						break;
    					case 1:
    						this.ui_pet.DrawUnit(1, i, "获取中...");
    						break;
    					case 2:
    						this.ui_pet.DrawUnit(1, i, GmPlay$1.de_pet.strValue(this.pet_list[i].iTid, 0, 1));
    						this.ui_pet.DrawUnit(2, i, this.pet_list[i].sOwner);
    						this.ui_pet.DrawUnit(3, i, ""+this.pet_list[i].iScore);
    						break;
    					}
    				}
    				this.ui_pet.FinishDraw();
    				//GmPlay.sop(""+this.iPetCount);
    			}
    		}

    		if(this.iSelect1==1)
    		{
    			this.ui_equip.BeginDraw(offx+15, offy+15);
    			for(i=0;i<this.iEquipCount;i++)
    			{
    				if(!this.ui_equip.bShow(i))continue;
    				this.ui_equip.DrawUnit(0, i, ""+(i+1));
    				
    				if(i<3)
    				{
    					this.aa_icon.iFrame=i;
    					this.ui_equip.DrawUnitEx_Anima(0, i, this.aa_icon, 80-38/2,20-32/2 );
    					this.ui_equip.DrawUnitEx_Button(0, i, this.btn_explain[i], 100, 5);
    				}
    				
    				switch(this.equip_list[i].iInitProc)
    				{
    				case 0://获取装备信息
    					GmProtocol$1.gi().s_LeaderBoardFresh(1, this.equip_list[i].iGid, 0);
    					this.equip_list[i].iInitProc=1;
    					break;
    				case 1://loading
    					this.ui_equip.DrawUnit(1, i, "获取中...");
    					break;
    				case 2://显示装备信息
    					this.ui_equip.DrawUnit(1, i, GmPlay$1.de_goods.strValue(this.equip_list[i].iTid, 0, 4));
    					this.ui_equip.DrawUnit(2, i, this.equip_list[i].sOwner);
    					this.ui_equip.DrawUnit(3, i, ""+this.equip_list[i].iScore);
    					break;
    				}
    			}
    			this.ui_equip.FinishDraw();
    		}
    		
    		if(this.iSelect1==2)
    		{
    			this.ui_role.SetTitle(3, "积分", 160, false);
    			this.ui_role.BeginDraw(offx+15, offy+15);
    			for(i=0;i<this.iRoleCount+1;i++)
    			{
    				if(i<this.iRoleCount && this.role_list[i].iRid==GmMe$1.me.iRid)this.myrank=i;
    				if(!this.ui_role.bShow(i))continue;
    				if(i==this.iRoleCount)
    				{
    					this.ui_role.DrawUnit(0, i, "");
    					break;
    				}
    				this.ui_role.DrawUnit(0, i, ""+(i+1));
    				if(i<3)
    				{
    					this.aa_icon.iFrame=i;
    					this.ui_role.DrawUnitEx_Anima(0, i, this.aa_icon, 80-38/2,20-32/2 );
    //					this.ui_role.DrawUnitEx_Button(0, i, this.btn_explain[i], 100, 5);
    				}
    				switch(this.role_list[i].iInitProc)
    				{
    				case 0:
    					GmProtocol$1.gi().s_LeaderBoardFresh(2, this.role_list[i].iRid, 0);
    					this.role_list[i].iInitProc=1;
    					break;
    				case 1:
    					this.ui_role.DrawUnit(1, i, "获取中...");
    					break;
    				case 2:
    					this.ui_role.DrawUnit(1, i, this.role_list[i].sName);
    					this.ui_role.DrawUnit(2, i, GameData$1.sSchools[this.role_list[i].iSchoolId]);
    					this.ui_role.DrawUnit(3, i, ""+this.role_list[i].iFlag16);
    					break;
    				}
    			}
    			this.ui_role.FinishDraw();
    			
    			offy+=50+9*40;
    //			M3DFast.gi().FillRect_2D(offx+15, offy+15, offx+15+this.iLW, offy+15+40, 0x80ffffff);
    			this.btn_self.Move(offx+15, offy+15, this.iLW, 40);
    			DrawMode$1.frame_type4("22号框20_20", offx+15, offy+15, this.iLW, 40, 20, 20);
    			if(this.myrank>=0)
    			{
    				if(this.myrank<3)this.aa_icon.Draw(this.ui_role.OffX(0)-38/2, offy+15+20-32/2, this.myrank);
    				else M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(0),offy+15+20,""+(this.myrank+1),0xffffffff,20,101,1,1,0,-2,-2);
    			}
    			else M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(0),offy+15+20,"未上榜",0xffffffff,20,101,1,1,0,-2,-2);
    			M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(1),offy+35,GmMe$1.me.sName,0xffffffff,20,101,1,1,0,-2,-2);
    			M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(2),offy+35,GameData$1.sSchools[GmMe$1.me.rbs.iSchoolId],0xffffffff,20,101,1,1,0,-2,-2);
    			M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(3),offy+35,""+GmMe$1.me.iFlag[16],0xffffffff,20,101,1,1,0,-2,-2);
    		}
    		if(this.iSelect1==3)
    		{
    			this.ui_role.SetTitle(3, "综合评分", 160, false);
    			this.ui_role.BeginDraw(offx+15, offy+15);
    			for(i=0;i<this.iRoleCount+1;i++)
    			{
    				if(i<this.iRoleCount && this.role_list[i].iRid==GmMe$1.me.iRid)this.myrank=i;
    				if(!this.ui_role.bShow(i))continue;
    				if(i==this.iRoleCount)
    				{
    					this.ui_role.DrawUnit(0, i, "");
    					break;
    				}
    				this.ui_role.DrawUnit(0, i, ""+(i+1));
    				if(i<3)
    				{
    					this.aa_icon.iFrame= i;
    					this.ui_role.DrawUnitEx_Anima(0, i, this.aa_icon, 80-38/2,20-32/2 );
    //					this.ui_role.DrawUnitEx_Button(0, i, this.btn_explain[i], 100, 5);
    				}
    				
    				switch(this.role_list[i].iInitProc)
    				{
    				case 0:
    					GmProtocol$1.gi().s_LeaderBoardFresh(2, this.role_list[i].iRid, 0);
    					this.role_list[i].iInitProc=1;
    					break;
    				case 1:
    					this.ui_role.DrawUnit(1, i, "获取中...");
    					break;
    				case 2:
    					this.ui_role.DrawUnit(1, i, this.role_list[i].sName);
    					this.ui_role.DrawUnit(2, i, GameData$1.sSchools[this.role_list[i].iSchoolId]);
    					this.ui_role.DrawUnit(3, i, ""+this.role_list[i].iComplexScore);
    					break;
    				}
    			}
    			this.ui_role.FinishDraw();
    			
    			offy+=50+9*40;
    //			M3DFast.gi().FillRect_2D(offx+15, offy+15, offx+15+this.iLW, offy+15+40, 0x80ffffff);
    			this.btn_self.Move(offx+15, offy+15, this.iLW, 40);
    			DrawMode$1.frame_type4("22号框20_20", offx+15, offy+15, this.iLW, 40, 20, 20);
    			if(this.myrank>=0)
    			{
    				if(this.myrank<3)this.aa_icon.Draw(this.ui_role.OffX(0)-38/2, offy+15+20-32/2, this.myrank);
    				else M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(0),offy+15+20,""+(this.myrank+1),0xffffffff,20,101,1,1,0,-2,-2);
    			}
    			else M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(0),offy+15+20,"未上榜",0xffffffff,20,101,1,1,0,-2,-2);
    			M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(1),offy+35,GmMe$1.me.sName,0xffffffff,20,101,1,1,0,-2,-2);
    			M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(2),offy+35,GameData$1.sSchools[GmMe$1.me.rbs.iSchoolId],0xffffffff,20,101,1,1,0,-2,-2);
    			M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(3),offy+35,""+GmMe$1.me.iComplexScore,0xffffffff,20,101,1,1,0,-2,-2);
    		}
    		if(this.iSelect1==5)
    		{
    			if(this.iSelect2==0)this.ui_role.SetTitle(3, "铜币", 160, false);
    			else this.ui_role.SetTitle(3, "元宝", 160, false);
    			this.ui_role.BeginDraw(offx+15, offy+15);
    			for(i=0;i<this.iRoleCount+1;i++)
    			{
    				if(i<this.iRoleCount && this.role_list[i].iRid==GmMe$1.me.iRid)this.myrank=i;
    				if(!this.ui_role.bShow(i))continue;
    				if(i==this.iRoleCount)
    				{
    					this.ui_role.DrawUnit(0, i, "");
    					break;
    				}
    				this.ui_role.DrawUnit(0, i, ""+(i+1));
    				if(i<3)
    				{
    					this.aa_icon.iFrame= i;
    					this.ui_role.DrawUnitEx_Anima(0, i, this.aa_icon, 80-38/2,20-32/2 );
    					this.ui_role.DrawUnitEx_Button(0, i, this.btn_explain[i], 100, 5);
    				}
    				
    				switch(this.role_list[i].iInitProc)
    				{
    				case 0:
    					GmProtocol$1.gi().s_LeaderBoardFresh(2, this.role_list[i].iRid, 0);
    					this.role_list[i].iInitProc=1;
    					break;
    				case 1:
    					this.ui_role.DrawUnit(1, i, "获取中...");
    					break;
    				case 2:
    					this.ui_role.DrawUnit(1, i, this.role_list[i].sName);
    					this.ui_role.DrawUnit(2, i, GameData$1.sSchools[this.role_list[i].iSchoolId]);
    					this.ui_role.DrawUnit(3, i, ""+this.role_list[i].iMoney);
    					break;
    				}
    			}
    			this.ui_role.FinishDraw();
    			
    			offy+=50+9*40;
    //			M3DFast.gi().FillRect_2D(offx+15, offy+15, offx+15+this.iLW, offy+15+40, 0x80ffffff);
    			this.btn_self.Move(offx+15, offy+15, this.iLW, 40);
    			DrawMode$1.frame_type4("22号框20_20", offx+15, offy+15, this.iLW, 40, 20, 20);
    			if(this.myrank>=0)
    			{
    				if(this.myrank<3)this.aa_icon.Draw(this.ui_role.OffX(0)-38/2, offy+15+20-32/2, this.myrank);
    				else M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(0),offy+15+20,""+(this.myrank+1),0xffffffff,20,101,1,1,0,-2,-2);
    			}
    			else M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(0),offy+15+20,"未上榜",0xffffffff,20,101,1,1,0,-2,-2);
    			M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(1),offy+35,GmMe$1.me.sName,0xffffffff,20,101,1,1,0,-2,-2);
    			M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(2),offy+35,GameData$1.sSchools[GmMe$1.me.rbs.iSchoolId],0xffffffff,20,101,1,1,0,-2,-2);
    			if(this.iSelect2==0)M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(3),offy+35,""+(GmMe$1.me.rbs.iMoney+GmMe$1.me.rbs.iStore),0xffffffff,20,101,1,1,0,-2,-2);
    			else M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(3),offy+35,""+GmMe$1.me.rbs.iInGot,0xffffffff,20,101,1,1,0,-2,-2);
    		}
    		
    		if(this.iSelect1==6)
    		{
    			this.ui_role.SetTitle(3, "活跃度积分", 160, false);
    			this.ui_role.BeginDraw(offx+15, offy+15);
    			for(i=0;i<this.iRoleCount+1;i++)
    			{
    				if(i<this.iRoleCount && this.role_list[i].iRid==GmMe$1.me.iRid)this.myrank=i;
    				if(!this.ui_role.bShow(i))continue;
    				if(i==this.iRoleCount)
    				{
    					this.ui_role.DrawUnit(0, i, "");
    					break;
    				}
    				this.ui_role.DrawUnit(0, i, ""+(i+1));
    				if(i<3)
    				{
    					this.aa_icon.iFrame= i;
    					this.ui_role.DrawUnitEx_Anima(0, i, this.aa_icon, 80-38/2,20-32/2 );
    					this.ui_role.DrawUnitEx_Button(0, i, this.btn_explain[i], 100, 5);
    				}
    				
    				switch(this.role_list[i].iInitProc)
    				{
    				case 0:
    					GmProtocol$1.gi().s_LeaderBoardFresh(2, this.role_list[i].iRid, 0);
    					this.role_list[i].iInitProc=1;
    					break;
    				case 1:
    					this.ui_role.DrawUnit(1, i, "获取中...");
    					break;
    				case 2:
    					this.ui_role.DrawUnit(1, i, this.role_list[i].sName);
    					this.ui_role.DrawUnit(2, i, GameData$1.sSchools[this.role_list[i].iSchoolId]);
    					this.ui_role.DrawUnit(3, i, ""+this.role_list[i].iMoney);
    					break;
    				}
    			}
    			this.ui_role.FinishDraw();
    			
    			offy+=50+9*40;
    //			M3DFast.gi().FillRect_2D(offx+15, offy+15, offx+15+this.iLW, offy+15+40, 0x80ffffff);
    			this.btn_self.Move(offx+15, offy+15, this.iLW, 40);
    			DrawMode$1.frame_type4("22号框20_20", offx+15, offy+15, this.iLW, 40, 20, 20);
    			if(this.myrank>=0)
    			{
    				if(this.myrank<3)this.aa_icon.Draw(this.ui_role.OffX(0)-38/2, offy+15+20-32/2, this.myrank);
    				else M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(0),offy+15+20,""+(this.myrank+1),0xffffffff,20,101,1,1,0,-2,-2);
    			}
    			else M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(0),offy+15+20,"未上榜",0xffffffff,20,101,1,1,0,-2,-2);
    			M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(1),offy+35,GmMe$1.me.sName,0xffffffff,20,101,1,1,0,-2,-2);
    			M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(2),offy+35,GameData$1.sSchools[GmMe$1.me.rbs.iSchoolId],0xffffffff,20,101,1,1,0,-2,-2);
    			if(this.iSelect2==0)M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(3),offy+35,""+(GmMe$1.me.iFlagExt[25]+GmMe$1.me.iFlagExt[24]),0xffffffff,20,101,1,1,0,-2,-2);
    			else
    			{
    				M3DFast$1.gi().DrawTextEx(this.ui_role.OffX(3),offy+35,""+GmMe$1.me.iFlagExt[26],0xffffffff,20,101,1,1,0,-2,-2);
    				if(this.myrank>=0 && this.myrank<3)
    				{
    					this.btn_getprice.Move(this.ui_role.OffX(3)-80,offy+15-1, 160, 42);
    					this.btn_getprice.Draw();
    				}
    			}
    		}
    	}

    	ProcTouch( msg, x, y)
    	{
    		var i;
    		if(msg==3)
    		{
    			if(this.bLocked1)
    			{
    				this.bLocked1=false;
    				return true;
    			}
    		}
    		if(msg==2)
    		{
    			if(this.bLocked1)
    			{
    				i=this.iLockY-y;
    				this.iOffY-=i;
    				this.iLockY=y;
    				return true;
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(this.iSelect1==0)
    		{
    			if(this.iSelect2!=2)
    			{
    				if(this.btn_self.ProcTouch(msg, x, y))
    				{
    					if(this.btn_self.bCheck())
    					{
    						if(this.iSelect2==0)GmProtocol$1.gi().s_LeaderBoardFresh(4, GmMe$1.me.iRid, 0);
    						if(this.iSelect2==1 || this.iSelect2==3)GmProtocol$1.gi().s_WatchOn(0, GmMe$1.me.iRid, 0, "");
    					}
    					return true;
    				}
    				if(this.ui_role.ProcTouch(msg, x, y))
    				{
    					for(i=0;i<3;i++)
    					{
    						if(this.btn_explain[i].bCheck())
    						{
    							FrameMessage.fm.Open("每日0点前排名第"+(i+1)+"的玩家获得称谓"+this._titles[this.iSelect2][i]+"，持续一天");
    						}
    					}
    					i=this.ui_role.iChecked();
    					if(i>=0)
    					{
    						if(i<this.iRoleCount)
    						{//点击了一行，获取详细信息
    							if(this.iSelect2==0)GmProtocol$1.gi().s_LeaderBoardFresh(4, this.role_list[i].iRid, 0);
    							if(this.iSelect2==1 || this.iSelect2==3)GmProtocol$1.gi().s_WatchOn(0, this.role_list[i].iRid, 0, "");
    						}
    					}
    					return true;
    				}
    			}
    			else
    			{
    				if(this.ui_pet.ProcTouch(msg, x, y))
    				{
    					for(i=0;i<3;i++)
    					{
    						if(this.btn_explain[i].bCheck())
    						{
    							FrameMessage.fm.Open("每日0点前排名第"+(i+1)+"的玩家获得称谓"+this._titles[this.iSelect2][i]+"，持续一天");
    						}
    					}
    					i=this.ui_pet.iChecked();
    					if(i>=0)
    					{
    						if(i<this.iPetCount)
    						{//点击了一行，获取详细信息
    							GmProtocol$1.gi().s_WatchOn(2, this.pet_list[i].iPid, 0, "");
    						}
    					}
    					return true;
    				}
    			}
    		}
    		else if(this.iSelect1==1)
    		{
    			if(this.ui_equip.ProcTouch(msg, x, y))
    			{
    				for(i=0;i<3;i++)
    				{
    					if(this.btn_explain[i].bCheck())
    					{
    						FrameMessage.fm.Open("每日0点前排名第"+(i+1)+"的玩家获得称谓"+this._titles[4][i]+"，持续一天");
    					}
    				}
    				i=this.ui_equip.iChecked();
    				if(i>=0)
    				{
    					if(i<this.iEquipCount)
    					{//点击了一行，获取详细信息
    						GmProtocol$1.gi().s_WatchOn(1, this.equip_list[i].iGid, 0, "");
    					}
    				}
    				return true;
    			}
    		}
    		else if(this.iSelect1==2)
    		{
    			if(this.btn_self.ProcTouch(msg, x, y))
    			{
    				if(this.btn_self.bCheck())
    				{
    					GmProtocol$1.gi().s_WatchOn(0, GmMe$1.me.iRid, 0, "");
    				}
    				return true;
    			}
    			if(this.ui_role.ProcTouch(msg, x, y))
    			{
    				i=this.ui_role.iChecked();
    				if(i>=0)
    				{
    					if(i<this.iRoleCount)
    					{//点击了一行，获取详细信息
    						GmProtocol$1.gi().s_WatchOn(0, this.role_list[i].iRid, 0, "");
    					}
    				}
    				return true;
    			}
    		}
    		else if(this.iSelect1==3)
    		{
    			if(this.btn_self.ProcTouch(msg, x, y))
    			{
    				if(this.btn_self.bCheck())
    				{
    					GmProtocol$1.gi().s_LeaderBoardFresh(4, GmMe$1.me.iRid, 0);
    				}
    				return true;
    			}
    			if(this.ui_role.ProcTouch(msg, x, y))
    			{
    				i=this.ui_role.iChecked();
    				if(i>=0)
    				{
    					if(i<this.iRoleCount)
    					{//点击了一行，获取详细信息
    						GmProtocol$1.gi().s_LeaderBoardFresh(4, this.role_list[i].iRid, 0);
    					}
    				}
    				return true;
    			}
    		}
    		else if(this.iSelect1==5 || this.iSelect1==6)
    		{
    			if(this.iSelect1==6 && this.iSelect2==1)
    			{
    				if(this.myrank>=0 && this.myrank<3)
    				{
    					if(this.btn_getprice.ProcTouch(msg, x, y))
    					{
    						if(this.btn_getprice.bCheck())
    						{
    							GmProtocol$1.gi().s_ExtendCmd("领取活跃排行奖励", "", "", "", "", "", "", "");
    						}
    						return true;
    					}
    				}
    			}
    			if(this.btn_self.ProcTouch(msg, x, y))
    			{
    				if(this.btn_self.bCheck())
    				{
    					GmProtocol$1.gi().s_WatchOn(0, GmMe$1.me.iRid, 0, "");
    				}
    				return true;
    			}
    			if(this.ui_role.ProcTouch(msg, x, y))
    			{
    				for(i=0;i<3;i++)
    				{
    					if(this.btn_explain[i].bCheck())
    					{
    						if(this.iSelect1==5)
    						{
    								if(this.iSelect2==0)FrameMessage.fm.Open("每日0点前排名第"+(i+1)+"的玩家获得称谓"+this._titles[5][i]+"，持续一天");
    								else if(this.iSelect2==1)FrameMessage.fm.Open("每日0点前排名第"+(i+1)+"的玩家获得称谓"+this._titles[6][i]+"，持续一天");
    						}
    						else if(this.iSelect1==6)
    						{
    							if(i==0)FrameMessage.fm.Open("每周活跃第一的玩家将获得活跃礼包，可获得丰厚奖励，更有概率获得特级技能书");
    							else if(i==1)FrameMessage.fm.Open("每周活跃第二的玩家将获得活跃礼包，可获得丰厚奖励");
    							else FrameMessage.fm.Open("每周活跃第三的玩家将获得活跃礼包，可获得丰厚奖励");
    						}
    					}
    				}
    				i=this.ui_role.iChecked();
    				if(i>=0)
    				{
    					if(i<this.iRoleCount)
    					{//点击了一行，获取详细信息
    						GmProtocol$1.gi().s_WatchOn(0, this.role_list[i].iRid, 0, "");
    					}
    				}
    				return true;
    			}
    		}
    		
    		//////////////////////////////////////////////////////
    		var doget=false;
    		if(this.btn_grsl.ProcTouch(msg, x, y))
    		{
    			if(this.btn_grsl.bCheck())
    			{
    				if(this.iSelect1!=0)
    				{
    					this.iSelect1=0;
    					this.iSelect2=0;
    					doget=true;
    				}
    			}
    		}
    		if(this.iSelect1==0)
    		{
    			if(this.btn_zhpf.ProcTouch(msg, x, y))
    			{
    				if(this.btn_zhpf.bCheck() && this.iSelect2!=0)
    				{
    					this.iSelect2=0;
    					doget=true;
    				}
    			}
    			if(this.btn_rwpf.ProcTouch(msg, x, y))
    			{
    				if(this.btn_rwpf.bCheck() && this.iSelect2!=1)
    				{
    					this.iSelect2=1;
    					doget=true;
    				}
    			}
    			if(this.btn_cwpf.ProcTouch(msg, x, y))
    			{
    				if(this.btn_cwpf.bCheck() && this.iSelect2!=2)
    				{
    					this.iSelect2=2;
    					doget=true;
    				}
    			}
    			if(this.btn_dj.ProcTouch(msg, x, y))
    			{
    				if(this.btn_dj.bCheck() && this.iSelect2!=3)
    				{
    					this.iSelect2=3;
    					doget=true;
    				}
    			}
    		}
    		if(this.btn_jssb.ProcTouch(msg, x, y))
    		{
    			if(this.btn_jssb.bCheck())
    			{
    				if(this.iSelect1!=1)
    				{
    					this.iSelect1=1;
    					this.iSelect2=0;
    					doget=true;
    				}
    			}
    		}
    		if(this.iSelect1==1)
    		{
    			if(this.btn_wq.ProcTouch(msg, x, y))
    			{
    				if(this.btn_wq.bCheck() && this.iSelect2!=0)
    				{
    					this.iSelect2=0;
    					doget=true;
    				}
    			}
    			if(this.btn_xl.ProcTouch(msg, x, y))
    			{
    				if(this.btn_xl.bCheck() && this.iSelect2!=1)
    				{
    					this.iSelect2=1;
    					doget=true;
    				}
    			}
    			if(this.btn_yf.ProcTouch(msg, x, y))
    			{
    				if(this.btn_yf.bCheck() && this.iSelect2!=2)
    				{
    					this.iSelect2=2;
    					doget=true;
    				}
    			}
    			if(this.btn_tk.ProcTouch(msg, x, y))
    			{
    				if(this.btn_tk.bCheck() && this.iSelect2!=3)
    				{
    					this.iSelect2=3;
    					doget=true;
    				}
    			}
    			if(this.btn_yd.ProcTouch(msg, x, y))
    			{
    				if(this.btn_yd.bCheck() && this.iSelect2!=4)
    				{
    					this.iSelect2=4;
    					doget=true;
    				}
    			}
    			if(this.btn_xz.ProcTouch(msg, x, y))
    			{
    				if(this.btn_xz.bCheck() && this.iSelect2!=5)
    				{
    					this.iSelect2=5;
    					doget=true;
    				}
    			}
    		}
    		if(this.btn_bwjfb.ProcTouch(msg, x, y))
    		{
    			if(this.btn_bwjfb.bCheck())
    			{
    				this.iSelect1=2;
    				this.iSelect2=0;
    				doget=true;
    			}
    		}
    		if(this.iSelect1==2)
    		{
    			if(this.btn_49z.ProcTouch(msg, x, y))
    			{
    				if(this.btn_49z.bCheck() && this.iSelect2!=0)
    				{
    					this.iSelect2=0;
    					doget=true;
    				}
    			}
    			if(this.btn_69z.ProcTouch(msg, x, y))
    			{
    				if(this.btn_69z.bCheck() && this.iSelect2!=1)
    				{
    					this.iSelect2=1;
    					doget=true;
    				}
    			}
    			if(this.btn_89z.ProcTouch(msg, x, y))
    			{
    				if(this.btn_89z.bCheck() && this.iSelect2!=2)
    				{
    					this.iSelect2=2;
    					doget=true;
    				}
    			}
    		}
    		if(this.btn_qgyh.ProcTouch(msg, x, y))
    		{
    			if(this.btn_qgyh.bCheck())
    			{
    				this.iSelect1=3;
    				this.iSelect2=0;
    				doget=true;
    			}
    		}
    		if(this.iSelect1==3)
    		{
    			if(this.btn_49t.ProcTouch(msg, x, y))
    			{
    				if(this.btn_49t.bCheck() && this.iSelect2!=0)
    				{
    					this.iSelect2=0;
    					doget=true;
    				}
    			}
    			if(this.btn_69t.ProcTouch(msg, x, y))
    			{
    				if(this.btn_69t.bCheck() && this.iSelect2!=1)
    				{
    					this.iSelect2=1;
    					doget=true;
    				}
    			}
    			if(this.btn_89t.ProcTouch(msg, x, y))
    			{
    				if(this.btn_89t.bCheck() && this.iSelect2!=2)
    				{
    					this.iSelect2=2;
    					doget=true;
    				}
    			}
    		}
    		if(this.btn_cfb.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cfb.bCheck())
    			{
    				this.iSelect1=5;
    				this.iSelect2=0;
    				doget=true;
    			}
    		}
    		if(this.iSelect1==5)
    		{
    			if(this.btn_money.ProcTouch(msg, x, y))
    			{
    				if(this.btn_money.bCheck() && this.iSelect2!=0)
    				{
    					this.iSelect2=0;
    					doget=true;
    				}
    			}
    			if(this.btn_ingot.ProcTouch(msg, x, y))
    			{
    				if(this.btn_ingot.bCheck() && this.iSelect2!=1)
    				{
    					this.iSelect2=1;
    					doget=true;
    				}
    			}
    		}
    		if(this.btn_hyb.ProcTouch(msg, x, y))
    		{
    			if(this.btn_hyb.bCheck())
    			{
    				this.iSelect1=6;
    				this.iSelect2=0;
    				doget=true;
    			}
    		}
    		if(this.iSelect1==6)
    		{
    			if(this.btn_thisweek.ProcTouch(msg, x, y))
    			{
    				if(this.btn_thisweek.bCheck() && this.iSelect2!=0)
    				{
    					this.iSelect2=0;
    					doget=true;
    				}
    			}
    			if(this.btn_previousweek.ProcTouch(msg, x, y))
    			{
    				if(this.btn_previousweek.bCheck() && this.iSelect2!=1)
    				{
    					this.iSelect2=1;
    					doget=true;
    				}
    			}
    		}
    		if(doget)
    		{
    			this.iRoleCount=0;
    			this.iPetCount=0;
    			this.iEquipCount=0;
    			GmProtocol$1.gi().s_LeaderBoardFresh(0, this.iSelect1, this.iSelect2);
    			XStat$1.gi().PushStat(XStat$1.GS_LOADING1);
    		}
    		if(XDefine$1.bInRect(x, y, this.iX+40, this.iY+40, 210, this.iH-80))
    		{
    			if(msg==1)this.iLockY=y;
    			if(msg==2)
    			{
    				if(!this.bLocked1)
    				{
    					i=this.iLockY-y;
    					if(i<-15 || i>15)
    					{//取消按键按下状态
    						this.bLocked1=true;
    						this.btn_grsl.SetNormal();//个人实力
    						this.btn_zhpf.SetNormal();//综合评分
    						this.btn_rwpf.SetNormal();//人物评分
    						this.btn_cwpf.SetNormal();//宠物评分
    						this.btn_dj.SetNormal();//等级

    						this.btn_jssb.SetNormal();//绝世神兵
    						this.btn_wq.SetNormal();//武器
    						this.btn_xl.SetNormal();//项链
    						this.btn_yf.SetNormal();//衣服
    						this.btn_tk.SetNormal();//头盔
    						this.btn_yd.SetNormal();//腰带
    						this.btn_xz.SetNormal();//鞋子
    						
    						this.btn_bwjfb.SetNormal();//上届比武积分榜
    						this.btn_49z.SetNormal();
    						this.btn_69z.SetNormal();
    						this.btn_89z.SetNormal();
    						
    						this.btn_qgyh.SetNormal();//七国英豪
    						this.btn_49t.SetNormal();
    						this.btn_69t.SetNormal();
    						this.btn_89t.SetNormal();
    						
    						this.btn_cfb.SetNormal();//财富榜
    						this.btn_money.SetNormal();
    						this.btn_ingot.SetNormal();
    						
    						this.btn_hyb.SetNormal();//活跃榜
    						this.btn_thisweek.SetNormal();
    						this.btn_previousweek.SetNormal();
    					}
    				}
    			}
    		}

    		return false;
    	}


    	_LeaderBoardFresh( pls)
    	{
    		var i,j;
    		var type=pls.GetNextInt();
    		var cs1=pls.GetNextInt();
    		var cs2=pls.GetNextInt();
    		switch(type)
    		{
    		case 0:
    			if(cs1==0)
    			{
    //				GmPlay.sop("cs1="+cs1+",,,,cs2="+cs2);
    //				GmPlay.sop("this.iSelect1="+this.iSelect1+",,,,this.iSelect2="+this.iSelect2);
    				if(this.iSelect2!=2 && this.iSelect2==cs2)
    				{
    					this.iRoleCount=pls.GetNextByte();
    					for(i=0;i<this.iRoleCount;i++)
    					{
    						this.role_list[i].iRid=pls.GetNextInt();
    						this.role_list[i].iInitProc=0;
    					}
    				}
    				else if(this.iSelect2==cs2)
    				{
    					this.iPetCount=pls.GetNextByte();
    					for(i=0;i<this.iPetCount;i++)
    					{
    						this.pet_list[i].iPid=pls.GetNextInt();
    						this.pet_list[i].iInitProc=0;
    					}
    				}
    			}
    			if(cs1==1)
    			{
    				if(this.iSelect1==1 && this.iSelect2==cs2)
    				{
    					this.iEquipCount=pls.GetNextByte();
    					for(i=0;i<this.iEquipCount;i++)
    					{
    						this.equip_list[i].iGid=pls.GetNextInt();
    						this.equip_list[i].iInitProc=0;
    					}
    				}
    			}
    			if(cs1==2)
    			{
    				if(this.iSelect1==cs1 && this.iSelect2==cs2)
    				{
    					this.iRoleCount=pls.GetNextByte();
    					for(i=0;i<this.iRoleCount;i++)
    					{
    						this.role_list[i].iRid=pls.GetNextInt();
    						this.role_list[i].iFlag16=pls.GetNextInt();
    						this.role_list[i].iInitProc=0;
    					}
    				}
    			}
    			if(cs1==3)
    			{
    				if(this.iSelect1==cs1 && this.iSelect2==cs2)
    				{
    					this.iRoleCount=pls.GetNextByte();
    					for(i=0;i<this.iRoleCount;i++)
    					{
    						this.role_list[i].iRid=pls.GetNextInt();
    						this.role_list[i].iInitProc=0;
    					}
    				}
    			}
    			if(cs1==5 || cs1==6)
    			{
    				if(this.iSelect1==cs1 && this.iSelect2==cs2)
    				{
    					this.iRoleCount=pls.GetNextByte();
    					for(i=0;i<this.iRoleCount;i++)
    					{
    						this.role_list[i].iRid=pls.GetNextInt();
    						this.role_list[i].iMoney=pls.GetNextInt();
    						this.role_list[i].iInitProc=0;
    					}
    				}
    			}
    			break;
    		case 1:
    			if(this.iSelect1==1)
    			{
    				for(i=0;i<this.iEquipCount;i++)
    				{
    					if(this.equip_list[i].iInitProc==1 && this.equip_list[i].iGid==cs1)
    					{
    						this.equip_list[i].iTid=pls.GetNextInt();
    						this.equip_list[i].iRid=pls.GetNextInt();
    						this.equip_list[i].iScore=pls.GetNextInt();
    						this.equip_list[i].sOwner=pls.GetNextString();
    						this.equip_list[i].iInitProc=2;
    					}
    				}
    			}
    			break;
    		case 2:
    			if((this.iSelect1==0 && this.iSelect2!=2) || this.iSelect1==2 || this.iSelect1==3 || this.iSelect1==5 || this.iSelect1==6)
    			{
    					for(i=0;i<this.iRoleCount;i++)
    					{
    						if(this.role_list[i].iInitProc==1 && this.role_list[i].iRid==cs1)
    						{
    							this.role_list[i].sName=pls.GetNextString();
    							this.role_list[i].iSchoolId=pls.GetNextInt();
    							this.role_list[i].iComplexScore=pls.GetNextInt();
    							this.role_list[i].iScore=pls.GetNextInt();
    							this.role_list[i].iLev=pls.GetNextInt();
    							this.role_list[i].iInitProc=2;
    						}
    					}
    			}
    			break;
    		case 3:
    			if(this.iSelect1==0)
    			{
    				if(this.iSelect2==2)
    				{
    					for(i=0;i<this.iPetCount;i++)
    					{
    						if(this.pet_list[i].iInitProc==1 && this.pet_list[i].iPid==cs1)
    						{
    							this.pet_list[i].iTid=pls.GetNextInt();
    							this.pet_list[i].iScore=pls.GetNextInt();
    							this.pet_list[i].iRid=pls.GetNextInt();
    							this.pet_list[i].sOwner=pls.GetNextString();
    							this.pet_list[i].iInitProc=2;
    						}
    					}
    				}
    			}
    			break;
    		case 4://获得人物种族性别染色武器，并打开信息界面
    			for(i=0;i<this.iRoleCount;i++)
    			{
    				if(this.role_list[i].iRid==cs1)
    				{
    					var ras=pls.GetNextInt();
    					var color=pls.GetNextInt();
    					var weap=pls.GetNextInt();
    					if(i==0)j=this.role_list[i].iComplexScore-this.role_list[i+1].iComplexScore;
    					else j=this.role_list[i-1].iComplexScore-this.role_list[i].iComplexScore;
    					LeaderBoardRole.Open(this.role_list[i].iRid,this.role_list[i].sName,this.role_list[i].iComplexScore,this.role_list[i].iScore,ras,color,weap,i+1,j);
    					return;
    				}
    			}
    			if(cs1==GmMe$1.me.iRid)
    			{
    				var ras=pls.GetNextInt();
    				var color=pls.GetNextInt();
    				var weap=pls.GetNextInt();
    				LeaderBoardRole.Open(GmMe$1.me.iRid,GmMe$1.me.sName,GmMe$1.me.iComplexScore,GmMe$1.me.iScore,ras,color,weap,0,0);
    			}
    			break;
    		}
    	}
    }
    LeaderBoardFrame.LeaderBoardFresh=function( pls)
    {
    	while(XStat$1.gi().LastStatType(0)==XStat$1.GS_LOADING1)XStat$1.gi().PopStat(1);
    	if(XStat$1.gi().LastStatType(0)==XStat$1.GS_LEADERBOARDFRAME)
    	{
    		var lbf= XStat$1.gi().LastStat(0);
    		lbf._LeaderBoardFresh(pls);
    	}
    };

    class NoviceCheckAnswer extends BaseClass{


    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=400;
    		this.iH=300;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_yes=new XButton(GmPlay$1.xani_ui);
    		this.btn_yes.InitButton("统一中按钮2");
    		this.btn_yes.sName="解决";
    		
    		this.btn_no=new XButton(GmPlay$1.xani_ui);
    		this.btn_no.InitButton("统一中按钮3");
    		this.btn_no.sName="未解决";
    		
    		this.btn_ts=new XButton(GmPlay$1.xani_ui);
    		this.btn_ts.InitButton("统一中按钮2");
    		this.btn_ts.sName="投诉";
    	}

    	Draw()
    	{
    		var offx,offy;
    		
    		FormatString.gi().Format("您提的问题:"+this.sQDetail+"#e#e"+this.sAName+"的回答:"+this.sADetail+"#e#e如果对回答不满意，或者有不和谐文字，点击投诉", this.iW-20, 20);

    		this.iH=FormatString.gi().iH+20+60;
    		DrawMode$1.Frame1_BR(this.iX, this.iY, this.iW, this.iH);
    		
    		FormatString.gi().Draw(this.iX+10, this.iY+10);
    		
    		this.btn_yes.Move(this.iX+10, this.iY+this.iH-50, 70, 40);
    		this.btn_yes.Draw();
    		
    		this.btn_no.Move(this.iX+this.iW/2-50, this.iY+this.iH-50, 100, 40);
    		this.btn_no.Draw();
    		
    		this.btn_ts.Move(this.iX+this.iW-80, this.iY+this.iH-50, 70, 40);
    		this.btn_ts.Draw();
    		
    //		offx=this.iX+10;
    //		offy=this.iY+10;
    //		FormatString.gi().Format("你提的问题："+this.sQDetail, this.iW-20, 20);
    //		FormatString.gi().Draw(offx, offy);
    //		offy+=FormatString.gi().iH+20;
    //		
    //		FormatString.gi().Format(this.sAName+"的回答："+this.sADetail, this.iW-20, 20);
    //		FormatString.gi().Draw(offx, offy);
    //		offy+=FormatString.gi().iH+20;
    		
    		
    	}
    	 ProcTouch( msg, x, y)
    	{
    		if(this.btn_yes.ProcTouch(msg, x, y))
    		{
    			if(this.btn_yes.bCheck())
    			{//解答完成
    				GmProtocol$1.gi().s_NoviceHelp(4, GmMe$1.me.iRid, this.iQSid, "");
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		if(this.btn_no.ProcTouch(msg, x, y))
    		{
    			if(this.btn_no.bCheck())
    			{//重新解答
    				GmProtocol$1.gi().s_NoviceHelp(5, GmMe$1.me.iRid, this.iQSid, "");
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		if(this.btn_ts.ProcTouch(msg, x, y))
    		{
    			if(this.btn_ts.bCheck())
    			{//投诉
    				GmProtocol$1.gi().s_NoviceHelp(6, GmMe$1.me.iRid, this.iQSid, "");
    				XStat$1.gi().PopStat(1);
    			}
    		}
    //		if(msg==3 && !XDefine.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    //		{
    //			XStat.gi().PopStat(1);
    //			return true;
    //		}
    		return false;
    	}
    }
    NoviceCheckAnswer.getanswer=function( pls)
    {
    	if(XStat$1.gi().LastStatType(0)!=XStat$1.GS_NOVICECHECKANSWER)XStat$1.gi().PushStat(XStat$1.GS_NOVICECHECKANSWER);
    	var pnca=(XStat$1.gi().LastStat(0));
    	pnca.iQSid=pls.GetNextInt();
    	pnca.sQDetail=pls.GetNextString();
    	pnca.iARid=pls.GetNextInt();
    	pnca.sAName=pls.GetNextString();
    	pnca.sADetail=pls.GetNextString();
    };

    class NoviceHelp extends BaseClass {


    	constructor( ani) {
    		super();
    		var i, j;
    		this.pani = ani;
    		this.pm3f = ani.pm3f;

    		this.iW = 800;
    		this.iH = 480;
    		this.iX = (GmConfig$1.SCRW - this.iW) / 2;
    		this.iY = (GmConfig$1.SCRH - this.iH) / 2;

    		this.btn_help = new Array(10);//
    		for (i = 0; i < 10; i++) {
    			this.btn_help[i] = new XButton(GmPlay$1.xani_ui3);
    			this.btn_help[i].InitButton("统一按钮2");
    			this.btn_help[i].Move(this.iX + 50, this.iY + 45 + i * 50, 128, 32);
    			this.btn_help[i].iNameSize = 25;
    		}
    		this.btn_help[0].sName = "游戏介绍";
    		this.btn_help[1].sName = "新手玩法";
    		this.btn_help[2].sName = "门派介绍";
    		this.btn_help[3].sName = "日常活动";
    		this.btn_help[4].sName = "游戏公告";
    		this.btn_help[5].sName = "新手提问";
    		this.btn_help[6].sName = "高手解答";

    		this.btn_btns = new Array(2);//
    		for (i = 0; i < 2; i++) {
    			this.btn_btns[i]=new Array(6);
    			for (j = 0; j < 6; j++) {
    				this.btn_btns[i][j] = new XButton(GmPlay$1.xani_ui);
    				this.btn_btns[i][j].Move(this.iX + 20 + i * 130, this.iY + 20 + j * 60, 130,
    						60);
    				this.btn_btns[i][j].bSingleButton = true;
    				// this.btn_btns[i][j].sName="";
    			}
    		}
    		this.btn_btns[0][0].sName = "新手提问";
    		this.btn_btns[1][0].sName = "高手解答";

    		this.btn_btns[0][1].sName = "0~10级";
    		this.btn_btns[1][1].sName = "基本操作";

    		this.btn_btns[0][2].sName = "10~20级";
    		this.btn_btns[1][2].sName = "门派介绍";

    		this.btn_btns[0][3].sName = "20~30级";
    		// this.btn_btns[1][3].sName="基本操作";

    		this.btn_btns[0][4].sName = "30~40级";
    		// this.btn_btns[1][4].sName="基本操作";

    		this.btn_close = new XButtonEx1(GmPlay$1.xani_ui3);
    		this.btn_close.InitButton("统一关闭按钮");
    		this.btn_close.Move(this.iX + 748, this.iY, 60, 60);

    		this.ip1 = 0;
    		this.ip2 = 0;
    		this.btn_rmx = new Array(3);//
    		this.btn_mp = new Array(3);//
    		for (i = 0; i < 3; i++) {
    			this.btn_rmx[i] = new XButtonEx1(GmPlay$1.xani_ui3);
    			this.btn_rmx[i].InitButton("统一按钮3");
    			this.btn_mp[i] = new XButtonEx1(GmPlay$1.xani_ui3);
    			this.btn_mp[i].InitButton("统一按钮3");
    		}
    		this.btn_rmx[0].sName = "人";
    		this.btn_rmx[1].sName = "魔";
    		this.btn_rmx[2].sName = "仙";

    		// NoviceHelp.sDetail="要求接入竖屏论坛，#e即关闭NdCommplatform.getInstance().ndSetScreenOrientation的调用（仅针对91MM计费的产品）";
    		NoviceHelp.sDetail = "";
    	}

    	Draw_0( offy) {// 游戏介绍
    		var x = this.iX + 485;
    		var y = offy + 60;
    		M3DFast$1.gi().DrawText_2(x, y, "~~~ 游戏介绍 ~~~", 0xffffC800, 25, 101, 1,
    				1, 0, -2, -2, 3, 0xff000000);
    		y += 30;
    		M3DFast$1.gi().DrawText_2(x - 21 * 10 + 2 * 20, y, "春秋战国期间，七雄争霸，豪杰雄起。谋臣",
    				0xff000000, 20, 101, 1, 1, 0, 0, -2, 0, 0xff000000);
    		y += 25;
    		M3DFast$1.gi().DrawText_2(x - 21 * 10, y, "运筹帷幄，将士浴血沙场。战争此起彼伏，局势",
    				0xff000000, 20, 101, 1, 1, 0, 0, -2, 0, 0xff000000);
    		y += 25;
    		M3DFast$1.gi().DrawText_2(x - 21 * 10, y, "变化跌宕。时代赋予三界风云人物神圣使命去掌",
    				0xff000000, 20, 101, 1, 1, 0, 0, -2, 0, 0xff000000);
    		y += 25;
    		M3DFast$1.gi().DrawText_2(x - 21 * 10, y, "控国家生死存亡、左右民族荣辱兴衰。人族、魔",
    				0xff000000, 20, 101, 1, 1, 0, 0, -2, 0, 0xff000000);
    		y += 25;
    		M3DFast$1.gi().DrawText_2(x - 21 * 10, y, "族、仙族率领九大门派弟子卷入了这场声势浩大",
    				0xff000000, 20, 101, 1, 1, 0, 0, -2, 0, 0xff000000);
    		y += 25;
    		M3DFast$1.gi().DrawText_2(x - 21 * 10, y, "的征战之中。岁月长河涤荡两千余载，那些璀璨",
    				0xff000000, 20, 101, 1, 1, 0, 0, -2, 0, 0xff000000);
    		y += 25;
    		M3DFast$1.gi().DrawText_2(x - 21 * 10, y, "的智慧和生命依然熠熠发光，依然动人心魄......",
    				0xff000000, 20, 101, 1, 1, 0, 0, -2, 0, 0xff000000);
    	}

    	// 春秋战国期间，七雄争霸，豪杰雄起。谋臣
    	// 运筹帷幄，将士浴血沙场。战争此起彼伏，局势
    	// 变化跌宕。时代赋予三界风云人物神圣使命去掌
    	// 控国家生死存亡、左右民族荣辱兴衰。人族、魔
    	// 族、仙族率领九大门派弟子卷入了这场声势浩大
    	// 征战之中。岁月长河涤荡两千余载，那些璀璨的
    	// 智慧和生命依然熠熠发光，依然动人心魄......
    	Draw_1( offy) {
    		var x = this.iX + 485;
    		var y = offy + 60;
    		M3DFast$1.gi().DrawText_2(x, y, "0级~10级", 0xffffC800, 25, 101, 1, 1, 0,
    				-2, -2, 3, 0xff000000);
    		y += 30;
    		M3DFast$1.gi().DrawText_2(x, y, "打开任务提示，跟随引导剧情可快速升级", 0xff000000, 20,
    				101, 1, 1, 0, -2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "剧情战斗难度较高，建议组队完成", 0xff000000, 20, 101,
    				1, 1, 0, -2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "0~5级可在郊外组队练级", 0xff000000, 20, 101,
    				1, 1, 0, -2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "5~10级可在西阳山道组队练级", 0xff000000, 20, 101,
    				1, 1, 0, -2, -2, 0, 0xff000000);

    		y += 30;
    		M3DFast$1.gi().DrawText_2(x, y, "10级~20级", 0xffffC800, 25, 101, 1, 1, 0,
    				-2, -2, 3, 0xff000000);
    		y += 30;
    		M3DFast$1.gi().DrawText_2(x, y, "西阳城<门派传送人>处传送加入门派,学门派技能", 0xff000000,
    				20, 101, 1, 1, 0, -2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "每天前2轮门派任务可获得双倍奖励", 0xff000000, 20, 101,
    				1, 1, 0, -2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "10~25级之间可拜40级以上玩家为师", 0xff000000, 20,
    				101, 1, 1, 0, -2, -2, 0, 0xff000000);

    		y += 30;
    		M3DFast$1.gi().DrawText_2(x, y, "20级~30级", 0xffffC800, 25, 101, 1, 1, 0,
    				-2, -2, 3, 0xff000000);
    		y += 30;
    		M3DFast$1.gi().DrawText_2(x, y, "郢城<栾千盛>组队进行强盗任务", 0xff000000, 20, 101,
    				1, 1, 0, -2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "郢城<帮派总管>处申请加入帮派", 0xff000000, 20, 101,
    				1, 1, 0, -2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "帮派内可学到打造，强身，炼丹等辅助技能", 0xff000000, 20,
    				101, 1, 1, 0, -2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "临淄<程镖头>可领取押镖任务，有几率得到阵法书", 0xff000000,
    				20, 101, 1, 1, 0, -2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "咸阳<商鞅>处领取材料任务(限30次/天)", 0xff000000, 20,
    				101, 1, 1, 0, -2, -2, 0, 0xff000000);
    		// FrameMessage.fm.Open("#cffffff咸阳坐骑使者领取坐骑剧情#e#cffff00组队完成强盗任务#e#cffffff实力较强可组队挑战妖怪叔叔和山贼，能得到宝石，藏宝图等丰富奖励");
    	}

    	Draw_2( offy) {// 门派介绍
    		var i;
    		for (i = 0; i < 3; i++) {
    			this.btn_rmx[i].Move(this.iX + 280 + i * 160, offy + 40, 110, 40);
    			this.btn_rmx[i].Draw();
    			if (this.ip1 == i)
    				GmPlay$1.xani_ui3.DrawAnima_aa(this.btn_rmx[i].iX, this.btn_rmx[i].iY,
    						"按钮选中框", 0);

    			this.btn_mp[i].Move(this.iX + 280 + i * 160, offy + 40 + 50, 110, 40);
    			this.btn_mp[i].sName = GameData$1.sSchools[this.ip1 * 3 + i + 1];
    			this.btn_mp[i].Draw();
    			if (this.ip2 == i)
    				GmPlay$1.xani_ui3.DrawAnima(this.btn_mp[i].iX, this.btn_mp[i].iY, "按钮选中框",
    						0);
    		}
    		// {"无","剑侠居","茅蓬坞","卢医崖","武安阁","溶洞","鬼谷","封神台","仙人洞","神女峰"};
    		if (this.ip1 == 0) {
    			switch (this.ip2) {
    			case 0:// 剑侠居
    				FormatString.fs
    						.FormatEx(
    								"#cffff00师父：盖聂#e门派特点：物理型，拥有强大的物理攻击技能。#e门派加点：推荐4力1速、3力1体1耐或全力。#e门派技能",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 150);
    				FormatString.fs
    						.FormatEx(
    								"浩然剑气:对目标造成伤害的同时以剑气伤害另外两个敌方单位，消耗25魔法。#e无双剑法：连续攻击目标三次，使用后休息一回合，要求当前气血40%以上，消耗10%当前气血。#e幻影剑法：分身攻击后主体攻击，要求当前气血60%以上，不消耗气血和魔法 。#e凝神聚气：临时增加自身攻击，消耗20魔法。#e虎啸：增加我方士气，消耗20魔法。#e先发制人：对目标造成伤害的同时降低目标速度，消耗20魔法。#e遁地术：非战斗时回到门派。",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 230);
    				break;
    			case 1:// 茅蓬坞
    				FormatString.fs
    						.FormatEx(
    								"#cffff00师父：孙武#e门派特点：辅助型，拥有强大封印技能。#e门派加点：推荐3体2速、2体1耐2速或2体3速。#e门派技能",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 150);
    				FormatString.fs
    						.FormatEx(
    								"奇谋：临时降低目标防御和法防，消耗30魔法。#e陷阱：有几率控制对方，使对方无法攻击和使用技能，消耗20魔法。#e烈焰阵：攻击全体对方气血和魔法，消耗30魔法。#e轮轴术：临时提高己方单人速度，消耗20魔法。#e迷雾：使己方全体有几率躲避物理伤害，消耗40魔法。#e兵诡：持续降低敌方士气，消耗20魔法。#e遁地术：非战斗时回到门派。",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 230);
    				break;
    			case 2:// 卢医崖
    				FormatString.fs
    						.FormatEx(
    								"#cffff00师父：扁鹊#e门派特点：辅助型，拥有强大的加血技能，是七国唯一的奶妈。#e门派加点：推荐3体1法1耐、3体1耐1速或4体1耐。#e门派技能",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 150);
    				FormatString.fs
    						.FormatEx(
    								"推功过血：群体恢复气血，恢复人数随着技能等级增加,作用人数（技能等级+10）/20+1，消耗作用人数*15魔法。#e起死回生：救活死亡的队友并恢复一定气血，消耗50魔法。#e练气化神：转化部分气血为魔法，消耗技能等级*1气血。#e浑圆气功：法术攻击2人，消耗20魔法。#e知己知彼：命中后能看到对方当前剩于气血，消耗20魔法。#e针灸：单人加血，并临时提高目标攻击和法防，消耗20魔法。#e神农本草：增加使用药物的效果。",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 230);
    				break;
    			}
    		} else if (this.ip1 == 1) {
    			switch (this.ip2) {
    			case 0:// 武安阁
    				FormatString.fs
    						.FormatEx(
    								"#cffff00师父：白起#e门派特点：物攻型，拥有强大的物理伤害技能。#e门派加点：推荐4力1体或全力。#e门派技能",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 150);
    				FormatString.fs
    						.FormatEx(
    								"狂暴诀：临时增加自身攻击，减少防御，并进入狂暴状态，无法和定心状态叠加，消耗15魔法。#e连环刀：在狂暴状态下，攻击对方多人。攻击人数=（技能等级+10）/20+1，使用后休息一回合，消耗攻击人数*15魔法。#e乱舞：连续攻击1一3次，狂暴状态下可连续攻击2一4次消耗25魔法。#e定心诀：临时增加防御和法术防御，减少攻击力，并进入定心状态，无法和狂暴状态叠加，消耗15魔法。#e魔甲术：处定心状态下使用，减免受到的法术伤害并有几率躲避对方的法术攻击，消耗20魔法。#e壁垒：使用后受到普通物理攻击时会反击，若处于定心状态则反击伤害加倍消耗25魔法。#e遁地术：非战斗时回到门派。",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 230);
    				break;
    			case 1:// 溶洞
    				FormatString.fs
    						.FormatEx(
    								"#cffff00师父：祝融#e门派特点：法术攻击型，拥有强大的法术伤害技能。#e门派加点：推荐4法1体、3法2体或全法。#e门派技能",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 150);
    				FormatString.fs
    						.FormatEx(
    								"火流星：法术攻击对方多人，攻击人数随着技能等级增加，攻击人数=（技能等级+10）/20+1，，消耗攻击人数*15魔法。#e毒火术：攻击单人并临时降低目标防御，消耗30魔法。#e火牢：有几率控制对方，使目标无法使用普通攻击，消耗25魔法。#e炎爆术：法术攻击对方单人，消耗30魔法。#e火甲术：被物理攻击时，对方受到反震伤害，消耗25魔法。#e火灵诀：临时增加法术暴击率和封系法术抗性，消耗40魔法。#e遁地术：非战斗时回到门派",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 230);
    				break;
    			case 2:// 鬼谷
    				FormatString.fs
    						.FormatEx(
    								"#cffff00师父：鬼谷子#e门派特点：辅助型，拥有强大的封印技能。#e门派加点：推荐3体2速或2体3速。#e门派技能",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 150);
    				FormatString.fs
    						.FormatEx(
    								"飞钳术：有几率控制对方，使对方无法使用普通攻击和法术，消耗20魔法。#e凝神诀：增加飞钳术成功率消耗20魔法。#e鬼谷刀法：连续攻击目标两次，要求当前气血70%以上，消耗25魔法。#e散势法：降低对方士气，消耗20魔法。#e清心咒：解除已方队员封类状态，消耗20魔法。#e鬼符：对中了飞钳术的敌方目标造成固定伤害，并降低法术防御，消耗15魔法。#e遁地术：非战斗时回到门派。",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 230);
    				break;
    			}
    		} else if (this.ip1 == 2) {
    			switch (this.ip2) {
    			case 0:// 封神台
    				FormatString.fs
    						.FormatEx(
    								"#cffff00师父：姜太公#e门派特点：法术型，拥有强大的法术伤害技能。#e门派加点：推荐4法1耐、3法1体1耐或全法。#e门派技能",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 150);
    				FormatString.fs
    						.FormatEx(
    								"呼风：法术攻击对方多人，攻击人数随技能等级增加，攻击人数为技能等级/15+2，消耗攻击人数*15魔法。#e唤雨：攻击对方全体气血和魔法，消耗30魔法。#e天雷封魔：法术攻击对方单人，消耗30魔法。#e仙甲术：临时增加自已防御，消耗25魔法。#e天神助威：提高已方士气，消耗20魔法。#e灵智术：临时增加我方单体灵力，消耗25魔法。#e遁地术：非战斗时回到门派。",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 230);
    				break;
    			case 1:
    				FormatString.fs
    						.FormatEx(
    								"#cffff00师父：风后#e门派特点：辅助攻击型，拥有加血技能与固伤技能。#e门派加点：2体2耐1速、3体1耐1速或3体2耐。#e门派技能",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 150);
    				FormatString.fs
    						.FormatEx(
    								"天阵：提高已方全体物理和法术攻击，使用后休息2回合，消耗50魔法。#e地阵：提高已方全体物理和法术防御，使用后休息2回合，消耗50魔法。#e五行击：固定伤害攻击随机1一5个目标，消耗40魔法。#e五行甲：临时提高目标法术攻击和防御，并持续恢复气血若干回合，消耗25魔法。#e孤虚法：降低对方士气并增加已方士气，消耗20魔法。#e归元法：解除五行甲效果并立即回复目标五行甲剩余治疗效果的气血，消耗20魔法。#e遁地术：非战斗时回到门派。",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 230);
    				break;
    			case 2:
    				FormatString.fs
    						.FormatEx(
    								"#cffff00师父：九天玄女#e门派特点：辅助攻击型，拥有封印、恢复和攻击技能。#e门派加点：推荐2体1耐2速或2体2耐1速。#e门派技能",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 150);
    				FormatString.fs
    						.FormatEx(
    								"穿云箭：加入灵气的箭，伤害受自身灵和攻击的影响，被攻击者降低速度，消耗15魔法。#e定天弓：提高穿云箭伤害，使穿云箭有几率击晕目标，使目标无法进行任何操作。消耗15魔法。#e驱魔符：驱除对方单人状态，并造成一定的伤害，消耗20魔法。#e天地同寿：救活一个队友。#e灵动九天：临时增加己方单体灵力，并持续恢复其魔法，消耗20魔法。#e仙绫缚：有几率束缚目标，使其无法使用技能消耗20魔法。#e遁地术：非战斗时回到门派。",
    								500, 18, 1, 0xff000000, 20);
    				FormatString.gi().Draw(this.iX + 240, this.iY + 230);
    				break;
    			}
    		}
    	}

    	Draw_3( offy) {// 日常活动
    		var x = this.iX + 485;
    		var y = offy + 60;
    		M3DFast$1.gi().DrawText_2(x, y, "~~~ 日常活动 ~~~", 0xffffC800, 25, 101, 1,
    				1, 0, -2, -2, 3, 0xff000000);
    		y += 30;
    		M3DFast$1.gi().DrawText_2(x, y, "1.师门任务", 0xff000000, 20, 101, 1, 1, 0,
    				-2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "2.强盗任务", 0xff000000, 20, 101, 1, 1, 0,
    				-2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "3.师徒任务", 0xff000000, 20, 101, 1, 1, 0,
    				-2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "4.为民除害", 0xff000000, 20, 101, 1, 1, 0,
    				-2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "5.帮派-朱雀任务", 0xff000000, 20, 101, 1, 1,
    				0, -2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "6.帮派-青龙任务", 0xff000000, 20, 101, 1, 1,
    				0, -2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "7.帮派-玄武任务", 0xff000000, 20, 101, 1, 1,
    				0, -2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "8.商鞅-护法任务", 0xff000000, 20, 101, 1, 1,
    				0, -2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "9.商鞅-执法任务", 0xff000000, 20, 101, 1, 1,
    				0, -2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "10.押镖任务", 0xff000000, 20, 101, 1, 1, 0,
    				-2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "11.手艺任务", 0xff000000, 20, 101, 1, 1, 0,
    				-2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "12.周末比武", 0xff000000, 20, 101, 1, 1, 0,
    				-2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "13.准点山贼", 0xff000000, 20, 101, 1, 1, 0,
    				-2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "14.智者答题", 0xff000000, 20, 101, 1, 1, 0,
    				-2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "15.世界抢答", 0xff000000, 20, 101, 1, 1, 0,
    				-2, -2, 0, 0xff000000);
    		y += 23;
    		M3DFast$1.gi().DrawText_2(x, y, "16.副本", 0xff000000, 20, 101, 1, 1, 0,
    				-2, -2, 0, 0xff000000);
    	}

    	Draw() {
    		var i, j;
    		var x, y, w, h;
    		DrawMode$1.ui3_BaseFrame2(this.iX, this.iY, "帮", "助");
    		this.btn_close.Draw();

    		for (i = 0; i < 7; i++) {
    			if (this.iPoint == i) {// 选中的宠物，按钮设为按下状态
    				this.btn_help[i].bMouseIn = true;
    				this.btn_help[i].bMouseDown = true;
    				GmPlay$1.xani_ui3.DrawAnimaEx(this.iX + 40, this.iY + 30 + i * 50 + 10,
    						"选中背景", 0, 101, 0.9, 0.71, 0, 0, 0);// this.iX+50,
    																// this.iY+65+i*45,
    																// 128, 32
    			}
    			this.btn_help[i].Draw();
    		}
    		GmPlay$1.xani_ui3.DrawAnima(this.iX + 190, this.iY, "大框分割线", 0);
    		switch (this.iPoint) {
    		case 0:// 游戏介绍
    			this.Draw_0(this.iY);
    			break;
    		case 1:// 新手玩法
    			this.Draw_1(this.iY);
    			break;
    		case 2:// 门派介绍
    			this.Draw_2(this.iY);
    			break;
    		case 3:// 日常活动
    			this.Draw_3(this.iY);
    			break;
    		case 4:// 游戏公告
    			M3DFast$1.gi().DrawText_2(this.iX + 485, this.iY + 60, NoviceHelp.sTitle, 0xffffC800, 25,
    					101, 1, 1, 0, -2, -2, 3, 0xff000000);

    			FormatString.gi().FormatEx(NoviceHelp.sDetail, 500, 20, 1, 0xff000000, 25);
    			FormatString.gi().Draw(this.iX + 240, this.iY + 100);
    			break;
    		}
    	}

    	ProcTouch( msg,  x,  y) {
    		var i, j;

    		if (this.iPoint == 2) {
    			for (i = 0; i < 3; i++) {
    				if (this.btn_rmx[i].ProcTouch(msg, x, y)) {
    					if (this.btn_rmx[i].bCheck()) {
    						this.ip1 = i;
    					}
    					return true;
    				}
    				if (this.btn_mp[i].ProcTouch(msg, x, y)) {
    					if (this.btn_mp[i].bCheck()) {
    						this.ip2 = i;
    					}
    					return true;
    				}
    			}
    		}

    		for (i = 0; i < 7; i++) {
    			if (this.btn_help[i].ProcTouch(msg, x, y)) {
    				if (this.btn_help[i].bCheck()) {
    					if (i == 5)
    						Send_NoviceAsk.Open();
    					else if (i == 6)
    						NoviceQuestionList.Open();
    					else {
    						if (i == 4 && this.iPoint != i)
    							GmProtocol$1.gi().s_SeverEvent(2, 10, 0, 0, 0);// 获取游戏公告
    						this.iPoint = i;
    					}
    				}
    				return true;
    			}
    		}
    		if (this.btn_close.ProcTouch(msg, x, y)) {
    			if (this.btn_close.bCheck()) {
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		// for(i=0;i<2;i++)
    		// {
    		// for(j=0;j<6;j++)
    		// {
    		// if(this.btn_btns[i][j].ProcTouch(msg, x, y))
    		// {
    		// if(this.btn_btns[i][j].bCheck())
    		// {
    		// if(i==0 && j==0)
    		// {
    		// Send_NoviceAsk.Open();
    		// }
    		// if(i==1 && j==0)
    		// {//高手解答，获取问题列表
    		// NoviceQuestionList.Open();
    		// }
    		// if(i==1 && j==1)
    		// {//基本操作
    		// FrameMessage.fm.Open("#cffffff屏幕左上角打开小地图和世界地图#e#cffff00屏幕右上角打开人物属性页面#e#cffffff左下方公共频道聊天");
    		// }
    		// if(i==1 && j==2)
    		// {//门派介绍
    		// FrameMessage.fm.Open("#cffffff剑侠居(人族,攻击)#e茅棚邬(人族,封)#e庐医崖(人族,辅助)#e#cffff00溶洞(魔族,法术)#e鬼谷(魔族,封)#e武安阁(魔族,攻击)#e#cffffff封神台(仙族,法术)#e仙人洞(仙族,辅助)#e神女峰(仙族,全能)");
    		// }
    		// if(i==0 && j==1)
    		// {//0-10级指引
    		// FrameMessage.fm.Open("#cffffff打开任务提示，跟随引导剧情可快速升级和了解游戏#e#cffff00剧情战斗难度较高，建议组队完成#e#cffffff0~5级可在新手村郊外组队练级#e#cffff005~10级可在西阳山道组队练级");
    		// }
    		// if(i==0 && j==2)
    		// {//10-20级指引
    		// FrameMessage.fm.Open("#cffffff等级到达10级可到西阳城门派传送人处传送加入门派，学习门派技能，每天前2轮门派任务可获得大量经验和金钱#e#cffff0010~20级可拜40级以上玩家为师");
    		// }
    		// if(i==0 && j==3)
    		// {//20-30级指引
    		// FrameMessage.fm.Open("#cffffff郢城帮派总管处申请加入帮派，在帮派可学到打造，强身，炼丹等帮派技能#e#cffff00临淄程镖头可领取押镖任务，有几率得到阵书#e#cffffff咸阳商鞅处领取材料任务(限30次/天)");
    		// }
    		// if(i==0 && j==4)
    		// {//30-40级指引
    		// FrameMessage.fm.Open("#cffffff咸阳坐骑使者领取坐骑剧情#e#cffff00组队完成强盗任务#e#cffffff实力较强可组队挑战妖怪叔叔和山贼，能得到宝石，藏宝图等丰富奖励");
    		// }
    		// }
    		// }
    		// }
    		// }
    		// if(msg==3 && !XDefine.bInRect(x, y, this.iX, this.iY, this.iW,
    		// this.iH))XStat.gi().PopStat(1);
    		return false;
    	}

    }
    NoviceHelp.sDetail;
    NoviceHelp.sTitle;

    class _QUESTION
    {
    /*	public int iRid;
    	public int iSid;
    	public String sName;
    	public String sDetail;*/
    	constructor()
    	{

    	}
    }

    class NoviceQuestionList$1 extends BaseClass{

    	
    	 constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=400;
    		this.iH=320;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.iQuestionCount=0;
    		this.qlist=new Array(10);//
    		for(i=0;i<10;i++)this.qlist[i]=new _QUESTION();
    		this.iPoint=-1;
    		
    		this.btn_answer=new XButton(GmPlay$1.xani_ui);
    		this.btn_answer.InitButton("统一中按钮2");
    		this.btn_answer.sName="回答";
    		
    		this.btn_delete=new XButton(GmPlay$1.xani_ui);
    		this.btn_delete.InitButton("统一中按钮2");
    		this.btn_delete.sName="去除";
    	}

    	Draw()
    	{
    		var i;
    		DrawMode$1.Frame1_BR(this.iX, this.iY, this.iW, this.iH);
    		for(i=0;i<this.iQuestionCount;i++)
    		{
    			M3DFast$1.gi().FillRect_2D(this.iX+10, this.iY+10+i*60, this.iX+this.iW-10, this.iY+10+i*60+60, i%2==0?0x50303030:0x50101010);
    			FormatString.gi().Format(this.qlist[i].sName+":"+this.qlist[i].sDetail, this.iW-40, 20);
    			FormatString.gi().Draw(this.iX+20, this.iY+10+i*60+(60-FormatString.gi().iH)/2);
    //			M3DFast.gi().DrawTextEx(this.iX+10, this.iY+10+i*30, this.qlist[i].sName+":"+this.qlist[i].sDetail, 0xffffffff, 20, 101, 1, 1, 0, 0, 0);
    			
    			if(this.iPoint==i)
    			{
    				this.btn_answer.Move(this.iX+this.iW-20-70, this.iY+10+i*60+10, 70, 40);
    				this.btn_answer.Draw();
    				this.btn_delete.Move(this.iX+this.iW-20-70-80, this.iY+10+i*60+10, 70, 40);
    				this.btn_delete.Draw();
    			}
    		}
    	}
    	RemoveQuestion()
    	{
    		var i;
    		for(i=this.iPoint;i<this.iQuestionCount-1;i++)
    		{
    			this.qlist[i].iRid=this.qlist[i+1].iRid;
    			this.qlist[i].iSid=this.qlist[i+1].iSid;
    			this.qlist[i].sName=this.qlist[i+1].sName;
    			this.qlist[i].sDetail=this.qlist[i+1].sDetail;
    		}
    		this.iQuestionCount--;
    		this.iPoint=-1;
    		if(this.iQuestionCount<=0)XStat$1.gi().PopStat(1);
    	}
    	 ProcTouch( msg, x, y)
    	{
    		var i;
    		if(this.iPoint>=0 && this.iPoint<this.iQuestionCount)
    		{
    			if(this.btn_delete.ProcTouch(msg, x, y))
    			{
    				if(this.btn_delete.bCheck())
    				{
    					GmProtocol$1.gi().s_NoviceHelp(3, this.qlist[this.iPoint].iRid, this.qlist[this.iPoint].iSid, "");
    					this.RemoveQuestion();
    				}
    			}
    			if(this.btn_answer.ProcTouch(msg, x, y))
    			{
    				if(this.btn_answer.bCheck())
    				{
    					Send_AceAnswer.Open();
    				}
    			}
    		}
    		for(i=0;i<this.iQuestionCount;i++)
    		{
    			if(XDefine$1.bInRect(x, y, this.iX+10, this.iY+10+i*60,this.iW-20,60))this.iPoint=i;
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    		}
    		return false;
    	}
    }
    NoviceQuestionList$1.AnswerTheQuestion=function( answer)
    	{
    		if(XStat$1.gi().LastStatType(1)!=XStat$1.GS_NOVICEQUESTIONLIST)return;
    		var pnql=(XStat$1.gi().LastStat(1));
    		GmProtocol$1.gi().s_NoviceHelp(2, pnql.qlist[pnql.iPoint].iRid, pnql.qlist[pnql.iPoint].iSid, answer);
    		pnql.RemoveQuestion();
    	};
    	NoviceQuestionList$1.Open=function()
    	{
    		XStat$1.gi().PushStat(XStat$1.GS_NOVICEQUESTIONLIST);
    		GmProtocol$1.gi().s_NoviceHelp(1, 0, 0, "");
    	};
    	NoviceQuestionList$1.getquestion=function( pls)
    	{
    		if(XStat$1.gi().LastStatType(0)!=XStat$1.GS_NOVICEQUESTIONLIST)XStat$1.gi().PushStat(XStat$1.GS_NOVICEQUESTIONLIST);
    		var pnql=(XStat$1.gi().LastStat(0));
    		
    		var i;
    		pnql.iQuestionCount=pls.GetNextByte();
    		if(pnql.iQuestionCount==0)
    		{
    			XStat$1.gi().PopStat(1);
    			return;
    		}
    		for(i=0;i<pnql.iQuestionCount;i++)
    		{
    			pnql.qlist[i].iRid=pls.GetNextInt();
    			pnql.qlist[i].iSid=pls.GetNextInt();
    			pnql.qlist[i].sName=pls.GetNextString();
    			pnql.qlist[i].sDetail=pls.GetNextString();
    		}
    	};

    class Send_AceAnswer$1 extends BaseClass{

    	
    	constructor( ani)
    	{
    		super();
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=600;
    		this.iH=100;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=0;
    		
    		this.btn_close=new XButton(GmPlay$1.xani_ui);
    		this.btn_close.InitButton("统一关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-60-20, this.iY+20, 60, 60);
    		
    		this.btn_send=new XButton(GmPlay$1.xani_ui);
    		this.btn_send.InitButton("统一大按钮2");
    		this.btn_send.Move(this.iX+this.iW-80-100, this.iY+25, 80, 50);
    		this.btn_send.sName="发送";
    	
    		this.in_speak=new XInput(GmPlay$1.xani_ui);
    		this.in_speak.Move(this.iX+20, this.iY+20, this.iW-220, this.iH-40);
    		this.in_speak.bHideText=true;
    		this.in_speak.OpenInput();
    	}


    	Draw()
    	{
    		DrawMode$1.Frame2_MD(this.iX, this.iY, this.iW, this.iH);
    		
    		DrawMode$1.Frame1_BR(this.iX+20, this.iY+20, this.iW-220, this.iH-40);
    		
    		FormatString.gi().Format(this.in_speak.sDetail, this.in_speak.iW-10, 20);//"#c000000"+
    //		FormatString.gi().iH
    		FormatString.gi().Draw(this.in_speak.iX+10, this.in_speak.iY+10);
    		
    		this.btn_send.Draw();
    		this.btn_close.Draw();

    		this.in_speak.onscr();
    	}
    	 ProcTouch( msg, x, y)
    	{
    		if(this.in_speak.ProcTouch(msg, x, y))
    		{
    		}
    		if(this.btn_send.ProcTouch(msg, x, y))
    		{
    			if(this.btn_send.bCheck())
    			{//发送小喇叭内容
    				if(this.in_speak.sDetail.length<=0)
    				{
    					EasyMessage.easymsg.AddMessage("请先输入内容");
    				}
    				else if(this.in_speak.sDetail.length>=40)
    				{
    					EasyMessage.easymsg.AddMessage("内容过长");
    				}
    				else
    				{
    					NoviceQuestionList.AnswerTheQuestion(this.in_speak.sDetail);
    //					GmProtocol.gi().s_NoviceHelp(0,0,0,this.in_speak.sDetail);
    //					GmProtocol.gi().s_UseGoods(goods.iGid, 1,this.in_speak.sDetail);
    					XStat$1.gi().PopStat(1);
    				}
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }
    Send_AceAnswer$1.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_SENDACEANSWER);
    //		(SmallSpeaker)(XStat.gi().LastStat(0))
    };

    class Send_NoviceAsk$1 extends BaseClass{

    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;

    		this.iW=600;
    		this.iH=100;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;

    		this.btn_close=new XButton(GmPlay$1.xani_ui);
    		this.btn_close.InitButton("统一关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-60-20, this.iY+20, 60, 60);

    		this.btn_send=new XButton(GmPlay$1.xani_ui);
    		this.btn_send.InitButton("统一大按钮2");
    		this.btn_send.Move(this.iX+this.iW-80-100, this.iY+25, 80, 50);
    		this.btn_send.sName="发送";

    		this.in_speak=new XInput(GmPlay$1.xani_ui);
    		this.in_speak.Move(this.iX+20, this.iY+20, this.iW-220, this.iH-40);
    		this.in_speak.bHideText=true;
    		this.in_speak.OpenInput();
    	}


    	Draw()
    	{
    		DrawMode$1.Frame2_MD(this.iX, this.iY, this.iW, this.iH);
    		
    		DrawMode$1.Frame1_BR(this.iX+20, this.iY+20, this.iW-220, this.iH-40);
    		
    		FormatString.gi().Format(this.in_speak.sDetail, this.in_speak.iW-10, 20);//"#c000000"+
    //		FormatString.gi().iH
    		FormatString.gi().Draw(this.in_speak.iX+10, this.in_speak.iY+10);
    		
    		this.btn_send.Draw();
    		this.btn_close.Draw();
    		this.in_speak.onscr();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.in_speak.ProcTouch(msg, x, y))
    		{
    		}
    		if(this.btn_send.ProcTouch(msg, x, y))
    		{
    			if(this.btn_send.bCheck())
    			{//发送小喇叭内容
    				if(this.in_speak.sDetail.length<=0)
    				{
    					EasyMessage.easymsg.AddMessage("请先输入内容");
    				}
    				else if(this.in_speak.sDetail.length>=40)
    				{
    					EasyMessage.easymsg.AddMessage("内容过长");
    				}
    				else
    				{
    					GmProtocol$1.gi().s_NoviceHelp(0,0,0,this.in_speak.sDetail);
    //					GmProtocol.gi().s_UseGoods(goods.iGid, 1,this.in_speak.sDetail);
    					XStat$1.gi().PopStat(1);
    				}
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }
    Send_NoviceAsk$1.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_SENDNOVICEASK);
    //		(SmallSpeaker)(XStat.gi().LastStat(0))
    };

    class ChangeName extends BaseClass{

    	
    	constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=400;
    		this.iH=250;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_change=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_change.InitButton("1号按钮90_60");
    		this.btn_change.Move(this.iX+40, this.iY+this.iH-60-40, 90, 60);
    		this.btn_change.sName="改名";
    		
    		this.btn_cancel=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_cancel.InitButton("1号按钮90_60");
    		this.btn_cancel.Move(this.iX+this.iW-40-90, this.iY+this.iH-60-40, 90, 60);
    		this.btn_cancel.sName="取消";
    		
    		this.in_nick=new XInput(GmPlay$1.xani_frame);
    		this.in_nick.Move(this.iX+140, this.iY+20,this.iW-160,50);
    		this.in_nick.sDetail="";
    		this.in_nick.iTextSize=30;
    	}

    	Draw()
    	{
    		DrawMode$1.frame_type4("7号框52_52", this.iX, this.iY, this.iW, this.iH, 52, 52);
    		
    		M3DFast$1.gi().DrawTextEx(this.iX+40, this.iY+40, "输入新的昵称：", 0xff114e61, 30, 101, 1, 1, 0, 0,0);
    		this.in_nick.Move(this.iX+40, this.iY+80, this.iW-80, 50);
    		DrawMode$1.frame_type4("8号框20_20", this.in_nick.iX, this.in_nick.iY, this.in_nick.iW, 50, 20, 20);
    		
    		this.pm3f.DrawTextEx(this.in_nick.iX + 10, this.in_nick.iY + this.in_nick.iH / 2, this.in_nick.sDetail, 0xff114e61, 20, 101, 1, 1, 0, 0, -2);
    		
    		this.btn_change.Draw();
    		this.btn_cancel.Draw();
    		this.in_nick.onscr();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_change.ProcTouch(msg, x, y))
    		{
    			if(this.btn_change.bCheck())
    			{//确定改名
    				if(!CreateRole.bCheckNick(this.in_nick.sDetail,4,24))
    				{//昵称格式有问题
    					EasyMessage.easymsg.AddMessage("昵称填写有误");
    				}
    				else
    				{//昵称没问题,申请注册
    					GmProtocol$1.gi().s_changenick(this.in_nick.sDetail);
    					XStat$1.gi().PopStat(1);
    //					GmProtocol.gi().s_CreateRole(XRecordFast.iLastSector,
    //							XRecordFast.iLastSever,
    //							this.in_nick.sDetail, iSelectPoint%2, iSelectPoint/2);
    //					XStat.gi().PushStat(XStat.GS_LOADING1);
    //					((Loading1)(XStat.gi().LastStat(0))).sDetail="创建中...";
    				}
    			}
    			return true;
    		}
    		this.in_nick.ProcTouch(msg, x, y);
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		return false;
    	}
    }

    class SetTitle extends BaseClass{

    	
    	constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=240+50;
    		this.iH = 40 * 8 + 50 +60 + 10;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_set=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_set.InitButton("1号按钮90_60");
    		this.btn_set.Move(this.iX + this.iW - 90 - 25, this.iY + this.iH - 60 - 25, 90, 60);
    		this.btn_set.sName="设置";
    		
    		this.btn_shadow=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_shadow.InitButton("1号按钮90_60");
    		this.btn_shadow.Move(this.iX + 25, this.iY + this.iH - 60 - 25, 90, 60);
    		this.btn_shadow.sName="隐藏";
    		
    		this.sTitles=new Array(64);//
    		this.iCount=0;
    		this.bNoTitile=false;
    		
    		this.list_titles=new UIList$1(0,1,this.iW-50,this.iH-50-60-10);
    		this.list_titles.SetTitle(0, "", this.iW-50, false);
    		this.list_titles.iTitleHeight=0;
    	}

    	getlist( pls)
    	{
    		var i;
    		pls.GetNextByte();//type
    		this.iCount=pls.GetNextByte();
    		for(i=0;i<this.iCount;i++)
    		{
    			this.sTitles[i]=pls.GetNextString();
    		}
    		if(this.iCount==0)this.bNoTitile=true;
    	}
    	Draw()
    	{
    		var i;
    		DrawMode$1.frame_type4("10号框20_20", this.iX, this.iY, this.iW, this.iH, 20, 20);
    //		DrawMode.frame_type4("11号框20_20", this.iX+25, this.iY+25, this.iW-50, this.iH-50-70, 20, 20);
    		if(this.bNoTitile)M3DFast$1.gi().DrawTextEx(this.iX+45, this.iY+45+5, "没有可用称谓", 0xff000000, 25, 101, 1, 1, 0, 0, 0);
    		else
    		{
    			this.list_titles.BeginDraw(this.iX+25, this.iY+25);
    			for(i=0;i<this.iCount;i++)
    			{
    				this.list_titles.DrawUnit(0, i, this.sTitles[i]);
    			}
    			this.list_titles.FinishDraw();
    		}
    		this.btn_set.Draw();
    		this.btn_shadow.Draw();
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(!this.bNoTitile)
    		{
    			this.list_titles.ProcTouch(msg, x, y);
    		}
    		if(this.btn_shadow.ProcTouch(msg, x, y))
    		{
    			if(this.btn_shadow.bCheck())
    			{
    				GmMe$1.me.rbs.sTitle="";
    				GmProtocol$1.gi().s_proctitle(99, "");
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(this.btn_set.ProcTouch(msg, x, y))
    		{
    			if(this.btn_set.bCheck())
    			{
    				if(this.list_titles.iLockPoint>=0 && this.list_titles.iLockPoint<this.iCount)
    				{
    					GmMe$1.me.rbs.sTitle=this.sTitles[this.list_titles.iLockPoint];
    					GmProtocol$1.gi().s_proctitle(this.list_titles.iLockPoint, this.sTitles[this.list_titles.iLockPoint]);
    					XStat$1.gi().PopStat(1);
    				}
    			}
    			return true;
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return false;
    	}
    }

    class SelectLS extends BaseClass{


    	 constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=430+60;
    		this.iH=345+60+15+52;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_sel=new XButton(GmPlay$1.xani_nui2);
    		this.btn_sel.InitButton("按钮1_110");
    		this.btn_sel.sName="选择";
    		this.btn_sel.Move(this.iX+this.iW-110-30, this.iY+this.iH-55-30, 110, 52);
    		
    		this.lockgoods=null;
    	}

    	Draw()
    	{
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		
    		GoodsDraw.new_DrawGoods(this.iX+30, this.iY+30, MyGoods.gi().goods[2], null, null);
    		
    		M3DFast$1.gi().DrawTextEx(this.iX+30, this.iY+this.iH-30-52,SelectLS.s1, 0xff000000, 24, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(this.iX+30, this.iY+this.iH-30-26,SelectLS.s2, 0xff000000, 24, 101, 1, 1, 0, 0, 0);

    		if(this.lockgoods!=null)
    		{
    			GoodsDraw.new_DrawRect(this.iX+30, this.iY+30, MyGoods.gi().goods[2], this.lockgoods, 0);
    			this.btn_sel.Draw();
    		}
    //		else M3DFast.gi().DrawTextEx(this.iX+20, this.iY+this.iH-40, "选择烹饪或药品", 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    		
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	 ProcTouch( msg, x, y)
    	{
    		if(this.lockgoods!=null)
    		{
    //			if(this.lockgoods.iTid==154 || this.lockgoods.iTid==155 || this.lockgoods.iTid==156)
    			{
    				if(this.btn_sel.ProcTouch(msg, x, y))
    				{
    					if(this.btn_sel.bCheck())
    					{//上交灵石
    						GmProtocol$1.gi().s_LandOperate(0, SelectLS.iDest, this.lockgoods.iGid, 0);
    //						PublicChat.AddGoods(this.lockgoods);
    						XStat$1.gi().PopStat(1);
    					}
    					return true;
    				}
    			}
    		}
    		this.lockgoods=GoodsDraw.new_LockGoods(x, y, this.iX+30, this.iY+30, MyGoods.gi().goods[2], msg);
    		GoodsDraw.NoMove();
    //		if(this.lockgoods.iTid==154 || this.lockgoods.iTid==155 || this.lockgoods.iTid==156);
    //		else
    		{
    //			this.lockgoods=null;
    		}
    		
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    		}
    		return false;
    	}

    }
    SelectLS.s1,SelectLS.s2;
    SelectLS.iDest;
    SelectLS.Open=function( sa, sb, d)
    {
    	XStat$1.gi().PushStat(XStat$1.GS_SELECTLS);
    	SelectLS.s1=sa;
    	SelectLS.s2=sb;
    	SelectLS.iDest=d;
    };

    class LandFrame extends BaseClass{
    	constructor( a)
    	{
    		super();
    		var i;
    		this.iW=490;
    		this.iH=410;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_give=new Array(5);
    		for(i=0;i<5;i++)
    		{
    			this.btn_give[i]=new XButton(GmPlay$1.xani_ui3);
    			this.btn_give[i].bSingleButton=true;
    //			this.btn_give[i].InitButton("统一按钮1");
    //			this.btn_give[i].Move(this.iX+220, this.iY+20+215, 117, 40);
    //			this.btn_give[i].sName="使用灵石";
    		}
    		this.iWx=new Int32Array(5);
    	}

    	Draw()
    	{
    		var i;
    		DrawMode$1.frame_type4("7号框52_52", this.iX, this.iY, this.iW, this.iH, 52, 52);
    		//植物名称
    		M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20, "土地类型:"+MyLand.sLandName[this.iType], 0xff114e61, 30, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20+40, "风水等级:"+this.iLev, 0xff114e61, 30, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20+80, "风水经验:"+this.iExp, 0xff114e61, 30, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20+120, "五行总灵气:"+(this.iWx[0]+this.iWx[1]+this.iWx[2]+this.iWx[3]+this.iWx[4])+"/"+(100+this.iExp), 0xff114e61, 30, 101, 1, 1, 0, 0, 0);

    		//五行
    		for(i=0;i<5;i++)
    		{
    //			GmPlay.xani_ui4.DrawAnimaEx(this.iX+40+i*90, this.iY+140, GameData.sWuXing[i]+"水晶",0,51+this.iWx[i]/2,1,1,0,0,0);
    			GmPlay$1.xani_ui4.DrawAnimaEx(this.iX+40+i*90, this.iY+180, GameData$1.sWuXing[i]+"水晶",0,101,1,1,0,0,0);
    			M3DFast$1.gi().DrawTextEx(this.iX+40+i*90+25, this.iY+180+160+25, this.iWx[i]+"/100", 0xff114e61, 20, 101, 1, 1, 0, -2, 0);
    			M3DFast$1.gi().DrawTextEx(this.iX+40+i*90+25, this.iY+180+160,GameData$1.sWuXing[i], 0xff114e61, 20, 101, 1, 1, 0, -2, 0);
    			
    			this.btn_give[i].Move(this.iX+40+i*90-10, this.iY+180,50+20, 160);
    //			this.btn_give[i].Draw();
    		}
    		//上交灵石
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		var i;
    		for(i=0;i<5;i++)
    		{
    			if(this.btn_give[i].ProcTouch(msg, x, y))
    			{
    				if(this.btn_give[i].bCheck())
    				{
    //					SelectLS.Open("使用"+GameData.sWXS[i]+"灵石提高灵气","使用"+GameData.sWXK[i]+"灵石降低灵气");
    					SelectLS.Open(GameData$1.sWXS[i]+"生"+GameData$1.sWuXing[i]+"(选择"+GameData$1.sWXS[i]+"灵石)",GameData$1.sWXK[i]+"克"+GameData$1.sWuXing[i]+"(选择"+GameData$1.sWXK[i]+"灵石)",i);
    				}
    				return true;
    			}
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX,this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    			return true;
    		}
    		return false;
    	}
    }
    LandFrame.Open=function( pls)
    {
    	var lf;
    	if(XStat$1.gi().iXStat==XStat$1.GS_LANDFRAME)lf=XStat$1.gi().LastStat(0);
    	else lf=XStat$1.gi().PushStat(XStat$1.GS_LANDFRAME);
    	lf.iLid=pls.GetNextInt();
    	lf.iType=pls.GetNextInt();
    	lf.iLev=pls.GetNextInt();
    	lf.iExp=pls.GetNextInt();
    	lf.iWx[0]=pls.GetNextInt();
    	lf.iWx[1]=pls.GetNextInt();
    	lf.iWx[2]=pls.GetNextInt();
    	lf.iWx[3]=pls.GetNextInt();
    	lf.iWx[4]=pls.GetNextInt();
    };

    class PlantFrame extends BaseClass
    {//植物状态
    	
    	constructor( a)
    	{
    		super();
    		this.iW=400;
    		this.iH=320;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_op=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_op.InitButton("1号按钮90_60");
    		this.btn_op.Move(this.iX+250, this.iY+20+215, 90, 60);
    		this.btn_op.sName="申请";
    		
    		this.btn_pick=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_pick.InitButton("1号按钮90_60");
    		this.btn_pick.Move(this.iX+250, this.iY+20+215, 90, 60);
    		this.btn_pick.sName="采摘";
    		
    		this.btn_clear=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_clear.InitButton("1号按钮90_60");
    		this.btn_clear.Move(this.iX+250, this.iY+20+215, 90, 60);
    		this.btn_clear.sName="清理";

    		 this.sStage=["幼苗期","成长期","采摘期","枯萎","枯萎"];
    	}
    	

    	
    	Draw()
    	{
    		DrawMode$1.frame_type4("7号框52_52", this.iX, this.iY, this.iW, this.iH, 52, 52);
    		//植物名称
    		M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20, "名称:"+GmPlay$1.de_grow.strValue(this.iGType, 0, 1), 0xff114e61, 30, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20+40, "五行:"+GameData$1.sWuXing[this.iWx], 0xff114e61, 30, 101, 1, 1, 0, 0, 0);
    //		M3DFast.gi().DrawText_2(this.iX+20, this.iY+20+40, "等级:"+GmPlay.de_grow.intValue(this.iGType, 0, 2), 0xffffff00, 30, 101, 1, 1, 0, 0, 0,1,0xff000000);
    		M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20+80, "品质:"+this.iQuality, 0xff114e61, 30, 101, 1, 1, 0, 0, 0);
    		if(this.iTime>=3)
    		{//枯萎，去除
    			M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20+120, "成长阶段:"+this.sStage[this.iTime], 0xff114e61, 30, 101, 1, 1, 0, 0, 0);
    			
    			this.btn_clear.Move(this.iX+250, this.iY+20+120-5, 90, 60);
    			this.btn_clear.Draw();
    			return;
    		}
    		if(this.iTime==2)
    		{//采摘
    			this.btn_pick.Move(this.iX+250, this.iY+20+120-5, 90, 60);
    			this.btn_pick.Draw();
    		}
    		M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20+120, "成长阶段:"+this.sStage[this.iTime], 0xff114e61, 30, 101, 1, 1, 0, 0, 0);
    		M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20+160,this.iNextTime+"小时后进入"+this.sStage[this.iTime+1], 0xff114e61, 30, 101, 1, 1, 0, 0, 0);

    		switch(this.iStat)
    		{
    		case 0://正常
    		default://
    			M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20+220, "当前状态:正常", 0xff00ff00, 30, 101, 1, 1, 0, 0, 0);
    			break;
    		case 1://缺水
    			//取水
    			M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20+220, "当前状态:干燥", 0xffff0000, 30, 101, 1, 1, 0, 0, 0);
    			this.btn_op.sName="取水";
    			this.btn_op.Draw();
    			break;
    		case 2://生虫
    			//除虫
    			M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20+220, "当前状态:虫害", 0xffff0000, 30, 101, 1, 1, 0, 0, 0);
    			this.btn_op.sName="驱虫";
    			this.btn_op.Draw();
    			break;
    		case 3://长草
    			//除草
    			M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20+220, "当前状态:杂草", 0xffff0000, 30, 101, 1, 1, 0, 0, 0);
    			this.btn_op.sName="除草";
    			this.btn_op.Draw();
    			break;
    		case 4://
    			M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20+220, "当前状态:已采摘", 0xffc8bfe7, 30, 101, 1, 1, 0, 0, 0);
    			break;
    		case 5://
    			M3DFast$1.gi().DrawTextEx(this.iX+20, this.iY+20+220, "当前状态:可采摘", 0xffc8bfe7, 30, 101, 1, 1, 0, 0, 0);
    			break;
    		}
    	}

    	ProcTouch( msg,  x,  y)
    	{
    		if(this.iStat>0)
    		{
    			if(this.btn_op.ProcTouch(msg, x, y))
    			{
    				if(this.btn_op.bCheck())
    				{
    					switch(this.iStat)
    					{
    					case 1://获得水壶
    						GmProtocol$1.gi().s_LandOperate(1, 0, 0, 0);
    						break;
    					case 2://杀虫战斗
    						GmProtocol$1.gi().s_LandOperate(2, 0, 0, 0);
    						break;
    					case 3://消耗体力
    						GmProtocol$1.gi().s_LandOperate(3, 0, 0, 0);
    						break;
    					}
    					XStat$1.gi().PopStat(1);
    				}
    				return true;
    			}
    		}
    		if(this.iTime>=3)
    		{//枯萎，去除
    			if(this.btn_clear.ProcTouch(msg, x, y))
    			{
    				if(this.btn_clear.bCheck())
    				{//
    					GmProtocol$1.gi().s_LandOperate(5, this.iZid, 0, 0);
    					XStat$1.gi().PopStat(1);
    				}
    				return true;
    			}
    		}
    		if(this.iTime==2)
    		{//采摘
    			if(this.btn_pick.ProcTouch(msg, x, y))
    			{
    				if(this.btn_pick.bCheck())
    				{//采摘
    					GmProtocol$1.gi().s_LandOperate(4, this.iZid, 0, 0);
    					XStat$1.gi().PopStat(1);
    				}
    				return true;
    			}
    		}
    		
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX,this.iY, this.iW, this.iH))
    		{
    			XStat$1.gi().PopStat(1);
    			return true;
    		}
    		return false;
    	}
    }
    PlantFrame.Open=function( pls)
    {
    	var pf;
    	if(XStat$1.gi().iXStat==XStat$1.GS_PLANTFRAME)pf=XStat$1.gi().LastStat(0);
    	else pf=XStat$1.gi().PushStat(XStat$1.GS_PLANTFRAME);
    	pf.iZid=pls.GetNextInt();
    	pf.iGType=pls.GetNextInt();
    	pf.iTime=pls.GetNextInt();//0-3
    	pf.iNextTime=pls.GetNextInt();
    	pf.iQuality=pls.GetNextInt();//0-100
    	pf.iStat=pls.GetNextInt();//当前状态
    	pf.iWx=pls.GetNextInt();//五行
    };

    //回收一些物品
    class MyRecover extends BaseClass{
    	
    	constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=710;
    		this.iH=345+60;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.lockgoods=null;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_recover=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_recover.InitButton("按钮1_110");
    		this.btn_recover.sName="出售";
    		this.btn_recover.Move(this.iX+this.iW-110-30,this.iY+this.iH-52-30,110,52);
    		
    		this.bCanRecover=false;
    	}

    	Draw()
    	{
    		var i,j;
    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    //		this.pm3f.DrawTextEx(this.iX+345, this.iY+25, NpcShop.ns.sShopName, 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    		this.btn_close.Draw();
    		
    		GoodsDraw.new_DrawGoods(this.iX+30, this.iY+30, MyGoods.gi().goods[2], null, null);
    		
    		if(this.lockgoods!=null && this.lockgoods.iGid>0)
    		{
    			GoodsDraw.new_DrawRect(this.iX+30, this.iY+30, MyGoods.gi().goods[2],this.lockgoods, 0);
    			
    			i=GmPlay$1.de_goods.intValue(this.lockgoods.iTid, 0, 9);//穿戴等级限制
    			
    			this.bCanRecover=false;
    			if(i<0 || i>40)this.pm3f.DrawTextEx(this.iX+430+30+20, this.iY+35, "本店不收此物品", 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    			else
    			{
    				this.bCanRecover=true;
    				j=0;
    				if(i==0)j=100/2;
    				else if(i==10)j=1000/2;
    				else if(i==20)j=4000/2;
    				else if(i==30)j=9000/2;
    				else if(i==40)j=14000/2;
    				this.pm3f.DrawTextEx(this.iX+430+30+20, this.iY+35, "回收价格 "+j, 0xff003e57, 30, 101, 1, 1, 0, 0, 0);
    			}
    			this.btn_recover.Draw();
    		}
    		
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(this.lockgoods!=null)
    		{
    			if(this.btn_recover.ProcTouch(msg, x, y))
    			{
    				if(this.btn_recover.bCheck())
    				{//出售物品
    					GmProtocol$1.gi().s_RecoverGoods(this.lockgoods.iGid);
    					this.lockgoods=null;
    					GoodsDraw.new_LockGoods(x,y,this.iX+30, this.iY+30, MyGoods.gi().goods[2],msg);
    					/*
    					if(this.bCanRecover)
    					{
    					}
    					else
    					{
    						EasyMessage.easymsg.AddMessage("本店不收此物品");
    					}*/
    				}
    				return true;
    			}
    		}
    		
    		this.lockgoods=GoodsDraw.new_LockGoods(x,y,this.iX+30, this.iY+30, MyGoods.gi().goods[2],msg);
    		GoodsDraw.NoMove();
    		
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return false;
    	}

    }

    class ShelvesFrame extends BaseClass{//上架


    //	public static ShelvesFrame sf=new ShelvesFrame();
    	constructor( ani)
    	{
    		super();
    		this.iW=360;
    		this.iH=280;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_shelves=new XButtonEx2$1(GmPlay$1.xani_nui3);
    		this.btn_shelves.InitButton("内框按钮");
    		this.btn_shelves.sName="上架";
    		this.btn_shelves.Move(this.iX+20, this.iY+this.iH-55-20, 98, 55);
    		
    		this.btn_cancel=new XButtonEx2$1(GmPlay$1.xani_nui3);
    		this.btn_cancel.InitButton("内框按钮");
    		this.btn_cancel.sName="取消";
    		this.btn_cancel.Move(this.iX+this.iW-98-20, this.iY+this.iH-55-20, 98, 55);
    		
    		this.chk_watch=new XCheckBox(GmPlay$1.xani_nui3);
    		this.chk_watch.InitBox("统一勾选");
    		this.chk_watch.bTrue=false;
    		this.chk_watch.Move(this.iX+10, this.iY+130, 50, 50);
    		
    		this.in_number=new XInputNumber(GmPlay$1.xani_nui3);
    		this.in_number.MinMax(0,99999999);
    	}
    	
    	Draw()
    	{
    		var offy;
    		DrawMode$1.new_framewatch(this.iX, this.iY, this.iW, this.iH);
    		
    		offy=this.iY+20;
    		if(MySell.gi().lockgoods!=null)
    		{
    			M3DFast$1.gi().DrawTextEx(this.iX+20,offy,"物品："+GmPlay$1.de_goods.strValue(MySell.gi().lockgoods.iTid, -1, 4),0xffffffff,30,100,1,1,0,0,0);
    		}
    		else if(MySell.gi().lockpet!=null)
    		{
    			M3DFast$1.gi().DrawTextEx(this.iX+20,offy,"宠物："+MySell.gi().lockpet.sName,0xffffffff,30,100,1,1,0,0,0);
    		}
    		offy+=30+20+10;
    		M3DFast$1.gi().DrawTextEx(this.iX+20, offy, "上架价格:", 0xffffffff, 30, 100, 1, 1, 0, 0, 0);
    		this.in_number.Move(this.iX+20+130, offy-10, this.iW-170);
    		this.in_number.Draw();
    //		DrawMode.new_numberframe(in_price.iX, in_price.iY,in_price.iW, in_price.sDetail);

    		offy+=30+10+20+10;
    		M3DFast$1.gi().DrawTextEx(this.iX+80, offy, "观赏", 0xffffffff, 30, 100, 1, 1, 0, 0, 0);
    		this.chk_watch.Move(this.iX+20, offy-10, 50, 50);
    		this.chk_watch.Draw();
    		
    		this.btn_shelves.Draw();
    		this.btn_cancel.Draw();
    	}
    	
    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_shelves.ProcTouch(msg, x, y))
    		{
    			if(this.btn_shelves.bCheck())
    			{//上架
    				if(this.chk_watch.bTrue)
    				{
    					if(MySell.gi().lockgoods!=null)GmProtocol$1.gi().s_StartSell(1, MySell.gi().lockgoods.iGid, 0,"");//观赏
    					if(MySell.gi().lockpet!=null)GmProtocol$1.gi().s_StartSell(3, MySell.gi().lockpet.iPid, 0,"");//观赏
    					XStat$1.gi().PopStat(1);
    				}
    				else
    				{
    					if(this.in_number.iNumber>0)
    					{
    						if(MySell.gi().lockgoods!=null)GmProtocol$1.gi().s_StartSell(1, MySell.gi().lockgoods.iGid, this.in_number.iNumber,"");
    						if(MySell.gi().lockpet!=null)GmProtocol$1.gi().s_StartSell(3, MySell.gi().lockpet.iPid, this.in_number.iNumber,"");
    						XStat$1.gi().PopStat(1);
    					}
    					else
    					{
    						EasyMessage.easymsg.AddMessage("请先输入上架价格");
    					}
    				}
    			}
    			return true;
    		}
    		if(this.btn_cancel.ProcTouch(msg, x, y))
    		{
    			if(this.btn_cancel.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    //		in_price.ProcTouch(msg, x, y);
    		this.in_number.ProcTouch(msg, x, y);
    		this.chk_watch.ProcTouch(msg, x, y);
    		return false;
    	}
    }

    class shop_PeakFight extends BaseClass{
    	
    	constructor( ani)
    	{
    		super();
    		var i;
    		
    		this.goods=new Array(20);//
    		this.iPrice=new Int32Array(20);//
    		for(i=0;i<20;i++)
    		{
    			this.goods[i]=new Goods();
    			this.iPrice[i]=0;
    		}

    		this.iW=800;
    		this.iH=450;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    //		list_goods=new UIList(0,2,this.iW-100,50+40*7);
    //		list_goods.SetTitle(0, "类型", 200,false);
    //		list_goods.SetTitle(1, "价格", 200,true);
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		
    		this.btn_buy=new XButtonEx2$1(GmPlay$1.xani_button);
    		this.btn_buy.InitButton("普通按钮140_55");
    		this.btn_buy.sName="购买";
    		
    		this.lockgoods=null;
    	}

    	_open( pls)
    	{
    		this.iCount=pls.GetNextInt();
    		if(this.iCount>20)this.iCount=20;
    		for(var i=0;i<20;i++)
    		{//名称，价格
    			if(i<this.iCount)
    			{
    				this.goods[i].iTid=pls.GetNextInt();
    				this.goods[i].iGid=1;
    				this.goods[i].iCount=1;
    				this.iPrice[i]=pls.GetNextInt();
    				GmPlay$1.xani_ngoods.InitAnimaWithName(GmPlay$1.de_goods.strValue(this.goods[i].iTid, 0, 10), this.goods[i].aa);
    			}
    			else
    			{
    				this.goods[i].iGid=-1;
    				this.iPrice[i]=0;
    			}
    			this.goods[i].iPos=i;
    		}
    	}
    	Draw()
    	{
    		DrawMode$1.new_baseframe4(this.iX, this.iY, this.iW,this.iH,"积","分","商","店");
    		this.btn_close.Draw();
    		
    		DrawMode$1.new_framein(this.iX+30, this.iY+30, this.iW-60, this.iH-60);
    		
    		GoodsDraw.new_DrawGoods(this.iX+50, this.iY+50, this.goods, null, null);
    		
    		if(this.lockgoods!=null)
    		{
    			GoodsDraw.new_DrawRect(this.iX+50, this.iY+50, this.goods,this.lockgoods, 0);
    			M3DFast$1.gi().DrawTextEx(this.iX+430+50+15, this.iY+90+50*0, "名称 "+GmPlay$1.de_goods.strValue(this.lockgoods.iTid, 0, 4), 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    			M3DFast$1.gi().DrawTextEx(this.iX+430+50+15, this.iY+90+50*1, "价格 "+this.iPrice[this.lockgoods.iPos]+"积分", 0xff003e57, 25, 101, 1, 1, 0, 0, 0);
    		}
    //		list_goods.BeginDraw(this.iX+30+20, this.iY+30+20);
    //		for(i=0;i<this.iCount;i++)
    //		{
    //			list_goods.DrawUnit(0, i, bls[i].sName);
    //			list_goods.DrawUnit(1, i, bls[i].iPrice+"活动积分");
    //		}
    //		list_goods.FinishDraw();
    		
    		M3DFast$1.gi().DrawTextEx(this.iX+430+50+15, this.iY+90+50*3, "可用积分："+GmMe$1.me.iFlagExt[23], 0xffffff00, 25, 101, 1, 1, 0, 0, -2);
    		this.btn_buy.Move(this.iX+this.iW-30-20-140, this.iY+this.iH-30-20-55, 140, 55);
    		this.btn_buy.Draw();
    		
    		if(GoodsDraw.bShowDetail())
    		{
    			GoodsDraw.new_DrawDetail(null,-1,-1,0);
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(this.btn_buy.ProcTouch(msg, x, y))
    		{
    			if(this.btn_buy.bCheck())
    			{
    				if(this.lockgoods==null)EasyMessage.easymsg.AddMessage("请先选中物品");
    				else if(GmMe$1.me.iFlagExt[23]<this.iPrice[this.lockgoods.iPos])EasyMessage.easymsg.AddMessage("积分不足");
    				else GmProtocol$1.gi().s_SeverEvent(35, 1, this.lockgoods.iPos, this.lockgoods.iTid,this.iPrice[this.lockgoods.iPos]);
    			}
    			return true;
    		}

    		var g;
    		g=GoodsDraw.new_LockGoods(x,y,this.iX+50, this.iY+50, this.goods,msg);
    		GoodsDraw.NoMove();
    		if(msg==3 && g!=null)
    		{//点击物品，选中准备购买
    			this.lockgoods=g;
    		}
    		else if(g==null)this.lockgoods=null;

    //		if(list_goods.ProcTouch(msg, x, y))return true;

    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		return false;
    	}
    }
    shop_PeakFight.Open=function( pls)
    {
    	var spf=XStat$1.gi().FindStat(XStat$1.GS_PEAKFIGHTSHOP);
    	if(spf==null)spf=XStat$1.gi().PushStat(XStat$1.GS_PEAKFIGHTSHOP);
    	spf._open(pls);
    };

    class TeamDest$1 extends BaseClass{
    	

    	constructor( ani)
    	{
    		super();
    		var i;
    		this.iW=630;
    		this.iH=600;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_close=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_close.InitButton("关闭按钮");
    		
    		this.btn_change=new XButtonEx2$1(GmPlay$1.xani_nui2);
    		this.btn_change.InitButton("按钮1");
    		this.btn_change.sName="确定";
    		
    		this.btncs=new Array(16);////组队类型,地图参数,<箭头方向>,最低等级，最高等级
    		this.btn_dest=new Array(16);//
    		for(i=0;i<16;i++)
    		{
    			this.btncs[i]=new Int32Array(5);
    			this.btn_dest[i]=new XButton(GmPlay$1.xani_nui4);
    		}
    		this.iDestPoint=0;
    		this.iOpenPoint=-1;
    		this.iOffH=0;
    		this.iShowH=this.iH-30-30-20-20;
    		this.ResetButton(true);
    		this.bLocked1=false;
    		
    		this.in_lev1=new XInputNumber(GmPlay$1.xani_nui3);
    		this.in_lev1.iNumber=0;
    		this.in_lev1.MinMax(0, 100);
    		
    		this.in_lev2=new XInputNumber(GmPlay$1.xani_nui3);
    		this.in_lev2.iNumber=80;
    		this.in_lev2.MinMax(0, 100);
    		
    		for(i=0;i<this.iDestCount;i++)
    		{
    			if(this.btncs[i][0]==MyTeam.iTeamTarget)
    			{
    				this.iDestPoint=i;
    				this.in_lev1.iNumber=MyTeam.iLev1;
    				this.in_lev2.iNumber=MyTeam.iLev2;
    				
    //				this.in_lev1.MinMax(0, this.in_lev2.iNumber);
    //				this.in_lev2.MinMax(this.in_lev1.iNumber,100);
    			}
    		}
    	}

    	ResetButton( dopen)
    	{
    		var op;
    		this.iDestCount=0;
    		this.btn_dest[this.iDestCount].InitButton("组队类型1");
    		this.btn_dest[this.iDestCount].sName="无目标";
    		this.btncs[this.iDestCount][0]=0;
    		this.btncs[this.iDestCount][1]=0;
    		this.btncs[this.iDestCount][2]=0;//无
    		this.btncs[this.iDestCount][3]=0;
    		this.btncs[this.iDestCount][4]=80;
    		this.iDestCount++;
    		
    		if(GmMe$1.me.rbs.iLev>=10)
    		{
    			this.btn_dest[this.iDestCount].InitButton("组队类型1");
    			this.btn_dest[this.iDestCount].sName="为民除害";
    			this.btncs[this.iDestCount][0]=1;
    			this.btncs[this.iDestCount][1]=0;
    			this.btncs[this.iDestCount][2]=0;
    			this.btncs[this.iDestCount][3]=10;
    			this.btncs[this.iDestCount][4]=80;
    //			if(this.iOpenPoint==1)this.btncs[this.iDestCount][2]=1;//箭头向上
    //			else this.btncs[this.iDestCount][2]=2;//箭头向下
    			this.iDestCount++;
    		}
    		if(GmMe$1.me.rbs.iLev>=20)
    		{
    			this.btn_dest[this.iDestCount].InitButton("组队类型1");
    			this.btn_dest[this.iDestCount].sName="追捕强盗";
    			this.btncs[this.iDestCount][0]=2;
    			this.btncs[this.iDestCount][1]=0;
    			this.btncs[this.iDestCount][2]=0;//无
    			this.btncs[this.iDestCount][3]=20;
    			this.btncs[this.iDestCount][4]=80;
    			this.iDestCount++;
    		}
    		if(GmMe$1.me.rbs.iLev>=30)
    		{
    			this.btn_dest[this.iDestCount].InitButton("组队类型1");
    			this.btn_dest[this.iDestCount].sName="山贼宝图";
    			this.btncs[this.iDestCount][0]=3;
    			this.btncs[this.iDestCount][1]=0;
    			this.btncs[this.iDestCount][2]=0;//无
    			this.btncs[this.iDestCount][3]=30;
    			this.btncs[this.iDestCount][4]=80;
    			this.iDestCount++;
    		}
    		if(GmMe$1.me.rbs.iLev>=40)
    		{
    			this.btn_dest[this.iDestCount].InitButton("组队类型1");
    			this.btn_dest[this.iDestCount].sName="挑战嚣张";
    			this.btncs[this.iDestCount][0]=4;
    			this.btncs[this.iDestCount][1]=0;
    			this.btncs[this.iDestCount][2]=0;//无
    			this.btncs[this.iDestCount][3]=40;
    			this.btncs[this.iDestCount][4]=80;
    			this.iDestCount++;
    		}
    		if(GmMe$1.me.rbs.iLev>=20)
    		{
    			this.btn_dest[this.iDestCount].InitButton("组队类型1");
    			this.btn_dest[this.iDestCount].sName="封印叔叔";
    			this.btncs[this.iDestCount][0]=5;
    			this.btncs[this.iDestCount][1]=0;
    			this.btncs[this.iDestCount][2]=0;//无
    			this.btncs[this.iDestCount][3]=20;
    			this.btncs[this.iDestCount][4]=80;
    			this.iDestCount++;
    		}
    		this.btn_dest[this.iDestCount].InitButton("组队类型1");
    		this.btn_dest[this.iDestCount].sName="定时活动";
    		this.btncs[this.iDestCount][0]=99;
    		this.btncs[this.iDestCount][1]=0;
    		if(dopen)this.iOpenPoint=this.iDestCount;
    		op=this.iDestCount;
    		if(this.iOpenPoint==op)this.btncs[this.iDestCount][2]=1;//箭头向上
    		else this.btncs[this.iDestCount][2]=2;//箭头向下
    		this.btncs[this.iDestCount][3]=20;
    		this.btncs[this.iDestCount][4]=80;
    		this.iDestCount++;
    		
    		if(this.iOpenPoint==op)
    		{//定时活动
    			if(GmMe$1.me.rbs.iLev>=30)
    			{
    				this.btn_dest[this.iDestCount].InitButton("组队类型2");
    				this.btn_dest[this.iDestCount].sName="门派闯关";
    				this.btncs[this.iDestCount][0]=6;
    				this.btncs[this.iDestCount][1]=0;
    				this.btncs[this.iDestCount][2]=0;//无
    				this.btncs[this.iDestCount][3]=30;
    				this.btncs[this.iDestCount][4]=80;
    				this.iDestCount++;
    				
    				this.btn_dest[this.iDestCount].InitButton("组队类型2");
    				this.btn_dest[this.iDestCount].sName="保卫西阳";
    				this.btncs[this.iDestCount][0]=7;
    				this.btncs[this.iDestCount][1]=0;
    				this.btncs[this.iDestCount][2]=0;//无
    				this.btncs[this.iDestCount][3]=30;
    				this.btncs[this.iDestCount][4]=80;
    				this.iDestCount++;
    			}
    		}
    		this.iDestH=this.iDestCount*85-5+40;
    	}
    	Draw()
    	{
    		var i,j;
    		var offx,offy;
    		var offw,offh;
    		DrawMode$1.frame_type4("中等框a52_50", this.iX, this.iY, this.iW, this.iH, 52, 50);
    //		DrawMode.new_bigframe(this.iX, this.iY, this.iW, this.iH);
    		this.btn_close.Move(this.iX+this.iW-35, this.iY-25, 60, 60);
    		this.btn_close.Draw();
    		
    		if(!this.bLocked1)
    		{
    			if(this.iOffH>0)this.iOffH/=2;
    			if(this.iDestH<this.iShowH)i=this.iDestH;
    			else i=this.iShowH;
    			j=this.iDestH+this.iOffH;
    			if(j<i)
    			{
    				this.iOffH+=(i-j)/2;
    			}
    		}

    		offx=this.iX+30;offy=this.iY+30;
    		offw=270;offh=this.iH-60;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		M3DFast$1.gi().SetViewClip(offx+20, offy+20, offx+20+230, offy+20+this.iShowH);
    		for(i=0;i<this.iDestCount;i++)
    		{
    			this.btn_dest[i].Move(offx+20, offy+20+i*85+this.iOffH, 230, 80);
    			if(i==this.iDestPoint)
    			{
    				this.btn_dest[i].bMouseIn=true;
    				this.btn_dest[i].bMouseDown=true;
    			}
    			this.btn_dest[i].Draw();
    			if(this.btncs[i][2]==1)GmPlay$1.xani_nui4.DrawAnima(this.btn_dest[i].iX, this.btn_dest[i].iY, "组队目录开关",1);
    			else if(this.btncs[i][2]==2)GmPlay$1.xani_nui4.DrawAnima(this.btn_dest[i].iX, this.btn_dest[i].iY, "组队目录开关",0);
    		}
    		M3DFast$1.gi().NoClip();
    		
    		offx+=300;
    		DrawMode$1.new_framein(offx,offy,offw,offh);
    		
    		if(this.btncs[this.iDestPoint][0]<90)
    		{
    			M3DFast$1.gi().DrawTextEx(offx+30, offy+100, "等级下限:", 0xffffffff, 30, 101, 1, 1, 0, 0, 0);
    			this.in_lev1.Move(offx+90, offy+100+40, 150);
    			this.in_lev1.Draw();
    			
    			M3DFast$1.gi().DrawTextEx(offx+30, offy+100+120, "等级上限:", 0xffffffff, 30, 101, 1, 1, 0, 0, 0);
    			this.in_lev2.Move(offx+90, offy+100+40+120, 150);
    			this.in_lev2.Draw();
    			
    			this.btn_change.Move(this.iX+this.iW-30-30-161, this.iY+this.iH-30-30-53, 161, 53);
    			this.btn_change.Draw();
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		if(msg==3)
    		{
    			if(this.bLocked1)
    			{
    				this.bLocked1=false;
    				return true;
    			}
    		}
    		
    		var i;
    		var offx,offy;

    		offx=this.iX+30;
    		offy=this.iY+30;
    		if(XDefine$1.bInRect(x, y, offx, offy, 270, 20+this.iShowH))
    		{
    			for(i=0;i<this.iDestCount;i++)
    			{
    				if(this.btn_dest[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_dest[i].bCheck())
    					{//点击任意一个按钮，获取队伍信息
    						this.iDestPoint=i;
    						this.in_lev1.iNumber=this.btncs[i][3];
    						this.in_lev2.iNumber=this.btncs[i][4];
    						if(this.btncs[i][0]==99)
    						{//开关除害地图
    							if(this.iOpenPoint<0)this.iOpenPoint=i;
    							else this.iOpenPoint=-1;
    							this.ResetButton(false);
    						}
    //						GmProtocol.gi().s_TeamOperate(12, this.btncs[this.iDestPoint][0], this.btncs[this.iDestPoint][1]);//获取对应队伍
    					}
    				}
    			}
    			if(msg==1)this.iLockY=y;
    			if(msg==2)
    			{
    				if(!this.bLocked1)
    				{
    					i=this.iLockY-y;
    					if(i<-15 || i>15)
    					{//取消按键按下状态
    						this.bLocked1=true;
    						for(i=0;i<this.iDestCount;i++)this.btn_dest[i].bMouseDown=false;
    					}
    				}
    			}
    		}
    		if(msg==2)
    		{
    			if(this.bLocked1)
    			{
    				i=this.iLockY-y;
    				this.iOffH-=i;
    				this.iLockY=y;
    				return true;
    			}
    		}
    		if(this.btncs[this.iDestPoint][0]<90)
    		{
    			if(this.in_lev2.bShow)
    			{
    				if(this.in_lev2.ProcTouch(msg, x, y))
    				{
    					if(!this.in_lev2.bShow)
    					{
    						if(this.in_lev2.iNumber<this.in_lev1.iNumber)this.in_lev2.iNumber=this.in_lev1.iNumber;
    					}
    					return true;
    				}
    			}
    			else
    			{
    				if(this.in_lev1.ProcTouch(msg, x, y))
    				{
    					if(!this.in_lev1.bShow)
    					{
    						if(this.in_lev1.iNumber>this.in_lev2.iNumber)this.in_lev1.iNumber=this.in_lev2.iNumber;
    					}
    					return true;
    				}
    				if(this.in_lev2.ProcTouch(msg, x, y))return true;
    			}
    			
    			if(this.btn_change.ProcTouch(msg, x, y))
    			{
    				if(this.btn_change.bCheck())
    				{//
    					GmProtocol$1.gi().s_TeamOperateEx(13, this.btncs[this.iDestPoint][0], this.btncs[this.iDestPoint][1],this.in_lev1.iNumber,this.in_lev2.iNumber);
    					XStat$1.gi().PopStat(1);
    				}
    				return true;
    			}
    		}

    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    			return true;
    		}
    		if(msg==3 && !XDefine$1.bInRect(x, y, this.iX, this.iY, this.iW, this.iH))XStat$1.gi().PopStat(1);
    		return false;
    	}
    }
    TeamDest$1.Open=function()
    {
    	if(XStat$1.gi().CheckStat(XStat$1.GS_TEAMDEST))return;
    	XStat$1.gi().PushStat(XStat$1.GS_TEAMDEST);
    };

    class MyTrade {
    	

    	
    	constructor()
    	{
    		var i;
    		MyTrade.bCheckTradeing=false;
    		this.dgs=new Array(3);//
    		this.dgcount=new Int32Array(3);//
    		this.dps=new Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.dgs[i]=new Goods();
    			this.dps[i]=new Pets();
    		}
    		
    		this.mgs=new Array(3);//
    //		mgcount=new Int32Array(3);//
    		this.mps=new Array(3);//
    	}
    	
    	tradestart( pls)
    	{
    		var i;
    		this.iDRid=pls.GetNextInt();
    		this.sDName=pls.GetNextString();
    		for(i=0;i<3;i++)
    		{
    			this.dgs[i].iGid=-1;
    			this.dgcount[i]=1;
    			this.dps[i].iPid=-1;
    			
    			this.mgs[i]=null;
    //			mgcount[i]=1;
    			this.mps[i]=null;
    		}
    		this.dproc=0;
    		this.mproc=0;
    		
    		XStat$1.gi().PushStat(XStat$1.GS_MYTRADEFRAME);
    		MyTrade.bCheckTradeing=true;
    	}
    	tradeready( pls)
    	{//对方准备
    		var i;
    		var type;
    		var gp=0,pp=0;
    		while(true)
    		{
    			type=pls.GetNextByte();
    			switch(type)
    			{
    			case 0://结束准备
    				this.dproc=1;
    				return;
    			case 1://物品
    				this.dgs[gp].iGid=pls.GetNextInt();
    				this.dgs[gp].iTid=pls.GetNextShort();
    				this.dgs[gp].iCount=pls.GetNextByte();
    				for(i=0;i<8;i++)this.dgs[gp].iAtts[i]=pls.GetNextInt();
    				GmPlay$1.xani_ngoods.InitAnimaWithName(GmPlay$1.de_goods.strValue(this.dgs[gp].iTid, -1, 10), this.dgs[gp].aa);
    				gp++;
    				break;
    			case 2://宠物
    				this.dps[pp].iPid=pls.GetNextInt();
    				this.dps[pp].iTid=pls.GetNextShort();
    				this.dps[pp].sName=pls.GetNextString();
    				this.dps[pp].iLev=pls.GetNextShort();
    				this.dps[pp].iExp=pls.GetNextInt();
    				this.dps[pp].iHp=pls.GetNextShort();
    				this.dps[pp].iMp=pls.GetNextShort();
    				this.dps[pp].iLife=pls.GetNextShort();
    				for(i=0;i<5;i++)this.dps[pp].iBaseAtt[i]=pls.GetNextShort();
    				for(i=0;i<5;i++)this.dps[pp].zz[i]=pls.GetNextShort();
    				this.dps[pp].cz=pls.GetNextShort();
    				for(i=0;i<8;i++)this.dps[pp].jn[i]=pls.GetNextShort();
    				this.dps[pp].iAddAtt=pls.GetNextByte();
    				this.dps[pp].iBaobao=pls.GetNextByte();
    				this.dps[pp].iFlag=pls.GetNextShort();
    				
    				this.dps[pp].sName=GmPlay$1.de_pet.strValue(this.dps[pp].iTid, 0, 1);
    				if((this.dps[pp].iBaobao&1)!=0)this.dps[pp].sName=this.dps[pp].sName+"宝宝";
    				if((this.dps[pp].iBaobao&2)!=0)this.dps[pp].sName="变异"+this.dps[pp].sName;
    				
    				pp++;
    				break;
    			case 3://钱
    				this.dmoney=pls.GetNextInt();
    				break;
    			}
    		}
    	}
    }
    MyTrade.bCheckTradeing=false;
    	
    MyTrade.mt=new MyTrade();

    class MyTradeFrame extends BaseClass{

    	constructor( ani)
    	{
    		super();
    		this.maxcount=[999,999,999];
    		var i;
    		this.pani=ani;
    		this.pm3f=ani.pm3f;

    		this.iW=(80*3+20*2+30*2)*2;
    		this.iH=475;
    		this.iX=(GmConfig$1.SCRW-this.iW)/2;
    		this.iY=(GmConfig$1.SCRH-this.iH)/2;
    		
    		this.btn_dgoods=new Array(3);//
    		this.btn_dpet=new Array(3);//
    		this.btn_mgoods=new Array(3);//
    		this.btn_mpet=new Array(3);//
    		this.in_count=new Array(3);//
    		for(i=0;i<3;i++)
    		{
    			this.btn_dgoods[i]=new XButton(GmPlay$1.xani_nui3);
    			this.btn_dgoods[i].InitButton("物品格子");
    			this.btn_mgoods[i]=new XButton(GmPlay$1.xani_nui3);
    			this.btn_mgoods[i].InitButton("物品格子");
    			
    			this.btn_dpet[i]=new XButton(GmPlay$1.xani_nui2);
    			this.btn_dpet[i].InitButton("宠物头像框");
    			this.btn_mpet[i]=new XButton(GmPlay$1.xani_nui2);
    			this.btn_mpet[i].InitButton("宠物头像框");			

    			this.in_count[i]=new XInputNumber(GmPlay$1.xani_nui3);
    			this.in_count[i].iNumber=1;
    		}

    		this.btn_selgp=new Array(8);//
    		for(i=0;i<8;i++)
    		{
    			this.btn_selgp[i]=new XButtonEx2$1(GmPlay$1.xani_button);
    			this.btn_selgp[i].InitButton("3号按钮250_42");
    		}
    		
    		this.bSelectGoods=false;
    		this.lockgoods=null;
    		this.iPetPoint=0;
    		this.iPetSelect=-1;
    		
    		this.iShowDGoodsPoint=-1;
    		
    		this.in_money=new XInputNumber(GmPlay$1.xani_nui3);
    //		this.in_money.Move(this.iX+this.iW/2+60, this.iY+140, 128,50);
    		this.in_money.iNumber=0;
    		this.in_money.MinMax(0, GmMe$1.me.rbs.iMoney);
    		
    		
    		this.btn_ready=new XButton(GmPlay$1.xani_nui3);
    		this.btn_ready.InitButton("内框按钮");
    		this.btn_ready.Move(this.iX+this.iW/2+30, this.iY+this.iH-30-55, 98,55);
    		this.btn_ready.sName="准备";
    		
    		this.btn_trade=new XButton(GmPlay$1.xani_nui3);
    		this.btn_trade.InitButton("内框按钮");
    		this.btn_trade.Move(this.iX+this.iW/2+30, this.iY+this.iH-30-55, 98,55);
    		this.btn_trade.sName="交易";
    		
    		this.btn_close=new XButton(GmPlay$1.xani_nui3);
    		this.btn_close.InitButton("内框按钮");
    		this.btn_close.Move(this.iX+this.iW-98-30, this.iY+this.iH-30-55, 98, 55);
    		this.btn_close.sName="取消";
    	}

    	Draw()
    	{
    		var i,j;

    		DrawMode$1.new_bigframe(this.iX, this.iY, this.iW/2, this.iH);
    		DrawMode$1.new_bigframe(this.iX+this.iW/2, this.iY, this.iW/2, this.iH);
    		
    		var offx,offy;
    		var w,h;
    		//画对方;
    		offx=this.iX+30;
    		offy=this.iY+30;
    		this.pm3f.DrawTextEx(offx, offy, MyTrade.mt.sDName+"("+MyTrade.mt.iDRid+")", 0xff000000, 30, 101, 1, 1, 0, 0, 0);
    		offy+=30+15;
    		for(i=0;i<3;i++)
    		{
    			this.btn_dgoods[i].Move(offx+i*(80+20), offy, 80, 80);
    			this.btn_dgoods[i].Draw();
    			if(MyTrade.mt.dproc>=1)
    			{
    				if(MyTrade.mt.dgs[i].iGid>0)
    				{
    					GoodsDraw.new_DrawOneGoods(this.btn_dgoods[i].iX, this.btn_dgoods[i].iY, MyTrade.mt.dgs[i], null, null);
    					DrawMode$1.new_Text(this.btn_dgoods[i].iX, this.btn_dgoods[i].iY+80+10, 80, ""+MyTrade.mt.dgs[i].iCount);
    				}
    				else DrawMode$1.new_Text(this.btn_dgoods[i].iX, this.btn_dgoods[i].iY+80+10, 80, "");
    			}
    			else DrawMode$1.new_Text(this.btn_dgoods[i].iX, this.btn_dgoods[i].iY+80+10, 80, "");
    		}
    		offy+=80+10+30+20;

    		this.pm3f.DrawTextEx(offx+10, offy+25, "铜币:", 0xff000000, 30, 101, 1, 1, 0, 0, -2);
    		if(MyTrade.mt.dproc==0)DrawMode$1.new_Text(offx+100, offy+10, 180, "");
    		else DrawMode$1.new_Text(offx+100, offy+10, 180, ""+MyTrade.mt.dmoney);
    	//	if(MyTrade.mt.dproc==0)this.pm3f.DrawTextEx(offx, offy+25, "铜币:", 0xff000000, 30, 101, 1, 1, 0, 0, -2);
    //		else this.pm3f.DrawTextEx(offx, offy+25, "铜币:"+MyTrade.mt.dmoney, 0xff000000, 20, 101, 1, 1, 0, 0, -2);

    		offy+=50+15;
    		
    		this.pm3f.DrawTextEx(offx+10, offy+40, "宠物:", 0xff000000, 30, 101, 1, 1, 0, 0, -2);
    		for(i=0;i<2;i++)
    		{
    			this.btn_dpet[i].Move(offx+100+i*(80+20), offy, 80, 80);
    			GmPlay$1.xani_nui2.DrawAnima(this.btn_dpet[i].iX, this.btn_dpet[i].iY, "宠物头像框",0);
    //			this.btn_dpet[i].Draw();
    //			this.pm3f.DrawTextEx(offx, offy+190+i*45, "宠物"+(i+1), 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    			if(MyTrade.mt.dproc>=1)
    			{
    				if(MyTrade.mt.dps[i].iPid>0)GmPlay$1.xani_head.DrawAnima_aa(offx+100+i*(80+20), offy,GmPlay$1.de_pet.strValue(MyTrade.mt.dps[i].iTid, 0, 1),0);//宠物头像
    //				else this.btn_dpet[i].sName="";
    				//头像
    			}
    		}
    		offy+=80+30;
    		if(MyTrade.mt.dproc==0)
    		{
    			this.pm3f.DrawText_2(this.iX+this.iW/4,offy+15,"未准备",0xffff0000,30,101,1,1,0,-2,0,1,0xff000000);
    		}
    		else if(MyTrade.mt.dproc==1)
    		{
    			this.pm3f.DrawText_2(this.iX+this.iW/4,offy+15,"已准备",0xff00ff00,30,101,1,1,0,-2,0,1,0xff000000);
    		}
    		
    		//画己方------------------------------------------------------------------------------
    		offx=this.iX+this.iW/2+30;
    		offy=this.iY+30;
    		offy+=30+15;
    		for(i=0;i<3;i++)
    		{
    			this.btn_mgoods[i].Move(offx+i*(80+20), offy, 80, 80);
    			this.btn_mgoods[i].Draw();
    			if(MyTrade.mt.mgs[i]!=null)
    			{
    ///				GoodsDraw.new_DrawOneGoods(this.btn_mgoods[i].iX, this.btn_mgoods[i].iY, MyTrade.mt.mgs[i],null,null);
    				GoodsDraw.new_DrawOneGoods_ext(this.btn_mgoods[i].iX, this.btn_mgoods[i].iY, MyTrade.mt.mgs[i], this.in_count[i].iNumber);
    			}
    		}
    		for(i=0;i<3;i++)
    		{
    			if(MyTrade.mt.mgs[i]!=null)
    			{//看此物品是否可叠加
    				j=GmPlay$1.de_goods.intValue(MyTrade.mt.mgs[i].iTid, 0, 28);
    				if(j>1)
    				{//可叠加，显示按钮
    //					btn_mgcount[i].sName=""+MyTrade.mt.mgcount[i];
    //					btn_mgcount[i].Draw();
    					this.in_count[i].Move(this.btn_mgoods[i].iX, this.btn_mgoods[i].iY+80,80);
    					this.in_count[i].MinMax(1, MyTrade.mt.mgs[i].iCount);
    					this.in_count[i].Draw();
    				}
    				else
    				{
    					this.in_count[i].iNumber=1;
    				}
    			}
    		}
    		offy+=80+50+10;
    		this.pm3f.DrawTextEx(offx+10, offy+25, "铜币:", 0xff000000, 30, 101, 1, 1, 0, 0, -2);
    		this.in_money.Move(offx+100, offy, 180);
    		this.in_money.Draw();
    //		this.in_money.Move(offx+60, offy+140-25, 155, 50);
    //		DrawMode.DrawTextFrame1(this.in_money.iX, this.in_money.iY,this.in_money.iW);
    //		this.in_money.DrawText();
    		offy+=50+15;
    		
    		this.pm3f.DrawTextEx(offx+10, offy+40, "宠物:", 0xff000000, 30, 101, 1, 1, 0, 0, -2);
    		for(i=0;i<2;i++)
    		{
    			this.btn_mpet[i].Move(offx+100+i*(80+20), offy, 80, 80);
    			GmPlay$1.xani_nui2.DrawAnima(this.btn_mpet[i].iX, this.btn_mpet[i].iY, "宠物头像框",0);
    //			this.btn_mpet[i].Draw();
    //			this.pm3f.DrawTextEx(offx, offy+190+i*45, "宠物"+(i+1), 0xff000000, 20, 101, 1, 1, 0, 0, 0);
    			if(MyTrade.mt.mps[i]!=null)
    			{
    				if(MyTrade.mt.mps[i].iPid>0)GmPlay$1.xani_head.DrawAnima_aa(offx+100+i*(80+20), offy,GmPlay$1.de_pet.strValue(MyTrade.mt.mps[i].iTid, 0, 1),0);//宠物头像
    			}
    //			if(MyTrade.mt.mps[i]==null)this.btn_mpet[i].sName="";
    //			else this.btn_mpet[i].sName=MyTrade.mt.mps[i].sName;
    		}
    		offy+=80+30;
    		
    		if(MyTrade.mt.mproc==0)
    		{
    			this.pm3f.DrawText_2(this.iX+this.iW/2+this.iW/4,offy+15,"未准备",0xffff0000,30,101,1,1,0,-2,0,1,0xff000000);
    			this.btn_ready.Draw();
    		}
    		else if(MyTrade.mt.mproc==1)
    		{
    			this.pm3f.DrawText_2(this.iX+this.iW/2+this.iW/4,offy+15,"已准备",0xff00ff00,30,101,1,1,0,-2,0,1,0xff000000);
    		}
    		else if(MyTrade.mt.mproc==2)
    		{
    			this.pm3f.DrawText_2(this.iX+this.iW/2+30,offy+15,"等待对方交易",0xff00ff00,30,101,1,1,0,0,0,1,0xff000000);
    		}
    		if(MyTrade.mt.mproc==1 && MyTrade.mt.dproc>=1)this.btn_trade.Draw();
    		this.btn_close.Draw();
    		
    		for(i=0;i<3;i++)
    		{
    			if(MyTrade.mt.dproc>=1)
    			{
    				if(MyTrade.mt.dgs[i].iGid>0)
    				{
    					if(this.iShowDGoodsPoint==i)GoodsDraw.new_DrawDetail(MyTrade.mt.dgs[i], this.btn_dgoods[i].iX, this.btn_dgoods[i].iY,0);
    				}
    			}
    		}
    		////选择物品，选择宠物---------------------------------------------------------------------------------------
    		if(this.bSelectGoods)
    		{//320,256
    			w=430+60;
    			h=345+60;//+40;
    			offx=(GmConfig$1.SCRW-w)/2;
    			offy=(GmConfig$1.SCRH-h)/2;
    			this.iGx=offx+30;
    			this.iGy=offy
    			DrawMode$1.new_bigframe(offx, offy, w, h);
    			GoodsDraw.new_DrawGoods(offx+30, offy+30, MyGoods.gi().goods[2], MyTrade.mt.mgs, this.maxcount);
    			
    			if(this.lockgoods!=null)
    			{
    				GoodsDraw.new_DrawRect(offx+30, offy+30, MyGoods.gi().goods[2], this.lockgoods, 0);
    				if(GoodsDraw.bShowDetail())GoodsDraw.new_DrawDetail(this.lockgoods, -1, -1,0);
    			}
    		}
    		if(this.bSelectPet)
    		{
    			w=250+30+30;
    			h=MyPets$1.mp.iPetCount*50+50;
    			offx=(GmConfig$1.SCRW-w)/2;
    			offy=(GmConfig$1.SCRH-h)/2;
    			DrawMode$1.frame_type4("10号框20_20", offx, offy, w, h, 20, 20);
    			for(i=0;i<MyPets$1.mp.iPetCount;i++)
    			{
    				for(j=0;j<2;j++)
    				{
    					if(MyPets$1.mp.pets[i]==MyTrade.mt.mps[j])break;
    				}
    				if(j<2)continue;

    				this.btn_selgp[i].Move(offx+30,offy+30+i*50, 250,42);
    				this.btn_selgp[i].sName=MyPets$1.mp.pets[i].sName;
    				this.btn_selgp[i].Draw();
    			}
    		}
    	}
    	ProcTouch( msg, x, y)
    	{
    		var i,j;
    		var offx,offy,w,h;
    		if(MyTrade.mt.mproc==0)
    		{//我未准备
    			if(this.bSelectPet)
    			{
    				w=250+30+30;
    				h=MyPets$1.mp.iPetCount*50+50;
    				offx=(GmConfig$1.SCRW-w)/2;
    				offy=(GmConfig$1.SCRH-h)/2;
    				
    				for(i=0;i<MyPets$1.mp.iPetCount;i++)
    				{
    					for(j=0;j<2;j++)
    					{
    						if(MyPets$1.mp.pets[i]==MyTrade.mt.mps[j])break;
    					}
    					if(j<2)continue;

    					if(this.btn_selgp[i].ProcTouch(msg, x, y))
    					{
    						if(this.btn_selgp[i].bCheck())
    						{
    							this.iPetSelect=i;
    							if((parseInt(MyPets$1.mp.pets[this.iPetSelect].iFlag/100)%10)==0)
    							{
    								this.bSelectPet=false;
    								MyTrade.mt.mps[this.iPetPoint]=MyPets$1.mp.pets[this.iPetSelect];
    							}
    							else EasyMessage.easymsg.AddMessage("绑定宠物无法交易");
    						}
    					}
    				}

    				if(msg==3 && !XDefine$1.bInRect(x, y, offx, offy, w, h))
    				{
    					this.bSelectPet=false;
    				}
    				return true;
    			}
    			if(this.bSelectGoods)
    			{
    //				if(this.lockgoods!=null)
    //				{
    //					if(this.btn_selgp.ProcTouch(msg, x, y))
    //					{
    //						if(this.btn_selgp.bCheck())
    //						{
    //							for(i=0;i<3;i++)
    //							{
    //								if(MyTrade.mt.mgs[i]==this.lockgoods)return true;
    //							}
    //							MyTrade.mt.mgs[this.iGoodsPoint]=this.lockgoods;
    //							MyTrade.mt.mgcount[this.iGoodsPoint]=1;
    //							this.bSelectGoods=false;
    //							this.lockgoods=null;
    //						}
    //						return true;
    //					}
    //				}
    				this.lockgoods=GoodsDraw.new_LockGoods(x, y, this.iGx, this.iGy, MyGoods.gi().goods[2], msg);
    				if(this.lockgoods!=null)
    				{
    					for(i=0;i<3;i++)
    					{
    						if(MyTrade.mt.mgs[i]==this.lockgoods)
    						{
    							this.lockgoods=null;
    							return true;
    						}
    					}
    					if(GoodsDraw.bCanProc())
    					{
    						MyTrade.mt.mgs[this.iGoodsPoint]=this.lockgoods;
    						//MyTrade.mt.mgcount[this.iGoodsPoint]=1;
    						this.bSelectGoods=false;
    						this.lockgoods=null;
    						this.in_count[this.iGoodsPoint].iNumber=1;
    						return true;
    					}
    				}
    				if(msg==3 && !XDefine$1.bInRect(x, y, this.iGx-30, this.iGy-30, 430+60, 345+60))
    				{
    					this.bSelectGoods=false;
    				}
    				return true;
    			}
    			if(this.in_money.ProcTouch(msg, x,y))return true;
    			for(i=0;i<3;i++)
    			{
    				if(MyTrade.mt.mgs[i]!=null)
    				{
    					j=GmPlay$1.de_goods.intValue(MyTrade.mt.mgs[i].iTid, 0, 28);
    					if(j>1)
    					{//可叠加，显示按钮
    						if(this.in_count[i].ProcTouch(msg, x, y))return true;
    					}
    				}
    			}
    			for(i=0;i<3;i++)
    			{
    				if(this.btn_mgoods[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_mgoods[i].bCheck())
    					{
    						if(MyTrade.mt.mgs[i]==null)
    						{//选择物品放入
    							this.iGoodsPoint=i;
    							this.bSelectGoods=true;
    							this.lockgoods=null;
    						}
    						else MyTrade.mt.mgs[i]=null;
    					}
    				}
    			}
    			
    			for(i=0;i<2;i++)
    			{
    				if(this.btn_mpet[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_mpet[i].bCheck())
    					{
    						if(MyTrade.mt.mps[i]==null)
    						{
    							this.iPetPoint=i;
    							this.iPetSelect=-1;
    							this.bSelectPet=true;
    						}
    						else MyTrade.mt.mps[i]=null;
    					}
    					return true;
    				}
    			}
    			
    			if(this.btn_ready.ProcTouch(msg, x, y))
    			{
    				if(this.btn_ready.bCheck())
    				{
    					var ready=new Int32Array(10);
    					for(i=0;i<10;i++)ready[i]=0;
    					for(i=0;i<3;i++)
    					{
    						if(MyTrade.mt.mgs[i]==null)
    						{
    							ready[i*2]=0;
    						}
    						else
    						{
    							ready[i*2]=MyTrade.mt.mgs[i].iGid;
    							ready[i*2+1]=this.in_count[i].iNumber;
    						}
    						if(MyTrade.mt.mps[i]==null)ready[i+6]=0;
    						else ready[i+6]=MyTrade.mt.mps[i].iPid;
    					}
    					if(this.in_money.iNumber>0 && this.in_money.iNumber<=GmMe$1.me.rbs.iMoney)
    					{
    						ready[9]=this.in_money.iNumber;
    					}
    					GmProtocol$1.gi().s_Trade(1, ready[0],ready[1], ready[2], ready[3], ready[4], ready[5],    ready[6],ready[7],ready[8],ready[9]);
    					MyTrade.mt.mproc=1;//我自己进入准备阶段
    				}
    				return true;
    			}
    		}
    		if(MyTrade.mt.dproc==1)
    		{//对方已准备，点击物品查看，点击宠物查看
    			this.iShowDGoodsPoint=-1;
    			for(i=0;i<3;i++)
    			{
    				if(this.btn_dgoods[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_dgoods[i].bCheck())
    					{
    						if(MyTrade.mt.dgs[i].iGid>0)
    						{
    							this.iShowDGoodsPoint=i;
    						}
    					}
    					return true;
    				}
    			}
    			for(i=0;i<2;i++)
    			{
    				if(this.btn_dpet[i].ProcTouch(msg, x, y))
    				{
    					if(this.btn_dpet[i].bCheck())
    					{
    						if(MyTrade.mt.dps[i].iPid>0)
    						{
    							WatchOn.Init_Pet(MyTrade.mt.dps[i]);
    						}
    					}
    					return true;
    				}
    			}
    		}
    		if(MyTrade.mt.mproc==1 && MyTrade.mt.dproc>=1)
    		{
    			if(this.btn_trade.ProcTouch(msg, x, y))
    			{
    				if(this.btn_trade.bCheck())
    				{//交易
    					GmProtocol$1.gi().s_Trade(2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    					MyTrade.mt.mproc=2;
    				}
    				return true;
    			}
    		}
    		if(this.btn_close.ProcTouch(msg, x, y))
    		{
    			if(this.btn_close.bCheck())
    			{
    				XStat$1.gi().PopStat(1);
    			}
    		}
    		return false;
    	}
    }

    class Tetris$1 extends BaseClass{

    	
    	constructor( ani)
    	{
    		super();
    		this.pani=ani;
    		this.pm3f=ani.pm3f;
    		
    		this.iW=14;this.iH=14;
    		this.matrix=new Array(this.iW);//
    		this.tmpmatrix=new Array(this.iW);//
    		this.frame=new Array(this.iW);//
    		for(var i=0;i<this.iW;i++)
    		{
    			this.matrix[i]=new Int32Array(this.iH);
    			this.tmpmatrix[i]=new Int32Array(this.iH);
    			this.frame[i]=new Int32Array(this.iH);
    		}
    		this.block=new Array(4);//
    		this.tmpblock=new Array(4);//
    		for(var i=0;i<4;i++)
    		{
    			this.block[i]=new Int32Array(4);
    			this.tmpblock[i]=new Int32Array(4);
    		}
    		this.InitMatrix();
    		this.ResetBlock();

    		//32x32
    		//43x43
    		//54x54
    		this.iBW=32;
    		this.iBH=32;
    		this.aa_frame=GmPlay$1.xani_ui.InitAnimaWithName("统一小按钮1", null);
    		this.aa_back=GmPlay$1.xani_ui.InitAnimaWithName("统一小按钮1", null);
    		this.aa_back.iFrame=1;
    		this.aa_block=GmPlay$1.xani_ngoods.InitAnimaWithName("高级经验丹", null);
    		this.aa_block2=GmPlay$1.xani_ngoods.InitAnimaWithName("普通经验丹", null);

    		this._BLOCKS=[
    			[
    				[1,1,0,0],
    				[0,1,0,0],
    				[0,1,0,0],
    				[0,0,0,0]
    			],
    			[
    				[ ],
    				[ ],
    				[ ],
    				[ ]
    			]];
    	}

    	ResetBlock()
    	{
    		var i,j,k;
    		k=XDefine$1.GetRand(0, 0);
    		for(i=0;i<4;i++)
    		{
    			for(j=0;j<4;j++)
    			{
    				this.block[i][j]=this._BLOCKS[k][i][j]+2;
    			}
    		}
    		this.iX=1;
    		this.iY=1;
    	}
    	InitMatrix()
    	{
    		var i,j;
    		for(i=0;i<this.iW;i++)
    		{
    			for(j=0;j<this.iH;j++)
    			{
    				if(i==0 || j==0 || i==this.iW-1 || j==this.iH-1)
    				{//边框
    					this.matrix[i][j]=0;
    				}
    //				else if(j>=this.iH/2 && i<=j-this.iH/2+1)this.matrix[i][j]=1;
    //				else if(i>=this.iW/2 && j<=i-this.iW/2+1)this.matrix[i][j]=1;
    				else this.matrix[i][j]=2;
    				
    				if(i==0 || j==0 || i==this.iW-1 || j==this.iH-1)
    				{//边框
    					this.frame[i][j]=0;
    				}
    				else if(j>=this.iH/2 && i<=j-this.iH/2+1)this.frame[i][j]=1;
    				else if(i>=this.iW/2 && j<=i-this.iW/2+1)this.frame[i][j]=1;
    				else this.frame[i][j]=2;
    			}
    		}
    		this.iDelay=0;
    		this.iFx=0;
    	}
    	 _boom( x, y)
    	{
    		var i,j;
    		for(i=0;i<4;i++)
    		{
    			for(j=0;j<4;j++)
    			{
    				if(this.block[i][j]!=2 && this.matrix[this.iX+i+x][this.iY+j+y]!=2)
    				{
    					return true;
    				}
    			}
    		}
    		return false;
    	}
    	Draw()
    	{
    		var i,j;
    		var boom=false;
    		this.iDelay++;
    		if(this.iDelay%10==0)
    		{
    			if(this.iFx==0)
    			{//左下y++
    				if(this._boom(0,1))
    				{
    					if(this._boom(1,0))
    					{
    						boom=true;
    					}
    					else
    					{
    						this.iX++;
    						this.iFx=1-this.iFx;
    					}
    				}
    				else this.iY++;
    			}
    			else
    			{//右下x++
    				if(this._boom(1,0))
    				{
    					if(this._boom(0,1))
    					{
    						boom=true;
    					}
    					else
    					{
    						this.iY++;
    						this.iFx=1-this.iFx;
    					}
    				}
    				else this.iX++;
    			}
    			this.iFx=1-this.iFx;
    			if(boom)
    			{
    				for(i=0;i<4;i++)
    				{
    					for(j=0;j<4;j++)
    					{
    						if(this.block[i][j]!=2)this.matrix[this.iX+i][this.iY+j]=4;
    					}
    				}
    				this.ResetBlock();
    			}
    		}
    		/////////////////
    		for(i=0;i<this.iW;i++)
    		{
    			for(j=0;j<this.iH;j++)
    			{
    				this.tmpmatrix[i][j]=this.matrix[i][j];
    			}
    		}
    		for(i=0;i<4;i++)
    		{
    			for(j=0;j<4;j++)
    			{
    				if(this.block[i][j]!=2)this.tmpmatrix[this.iX+i][this.iY+j]=this.block[i][j];
    			}
    		}
    		for(i=0;i<this.iW;i++)
    		{
    			for(j=0;j<this.iH;j++)
    			{
    				if(this.frame[i][j]==0)
    				{//边框
    					this.aa_frame.Draw(100+i*this.iBW, 100+j*this.iBH);
    				}
    				else if(this.frame[i][j]==1)
    				{//背景
    					this.aa_back.Draw(100+i*this.iBW, 100+j*this.iBH);
    				}
    //			}
    //		}
    //		for(i=0;i<this.iW;i++)
    //		{
    //			for(j=0;j<this.iH;j++)
    //			{
    //				if(this.tmpmatrix[i][j]==0)
    //				{//边框
    //					this.aa_frame.Draw(100+i*this.iBW, 100+j*this.iBH);
    //				}
    //				else if(this.tmpmatrix[i][j]==1)
    //				{//背景
    //					this.aa_back.Draw(100+i*this.iBW, 100+j*this.iBH);
    //				}
    				if(this.tmpmatrix[i][j]==3)
    				{
    					this.aa_block.Draw(100+i*this.iBW-30+this.iBW/2, 100+j*this.iBH-30+this.iBW/2);
    				}
    				else if(this.tmpmatrix[i][j]==4)
    				{
    					this.aa_block2.Draw(100+i*this.iBW-30+this.iBW/2, 100+j*this.iBH-30+this.iBW/2);
    				}
    			}
    		}
    	}
    	rota()
    	{
    		var i,j;
    		for(i=0;i<4;i++)
    		{
    			for(j=0;j<4;j++)
    			{
    				this.tmpblock[i][j]=this.block[j][3-i];
    			}
    		}
    		for(i=0;i<4;i++)
    		{
    			for(j=0;j<4;j++)
    			{
    				if(this.tmpblock[i][j]!=2 && this.matrix[this.iX+i][this.iY+j]!=2)
    				{//碰撞
    					return;
    				}
    			}
    		}
    		for(i=0;i<4;i++)
    		{
    			for(j=0;j<4;j++)
    			{
    				this.block[i][j]=this.tmpblock[i][j];
    			}
    		}
    	}
    	 ProcTouch( msg, x, y)
    	{
    		if(XDefine$1.bInRect(x, y, 100, 100, this.iW*this.iBW, this.iH*this.iBH))
    		{//旋转
    		}
    		else if(x<GmConfig$1.SCRW/2)
    		{//向左
    		}
    		else
    		{//向右
    		}
    		return false;
    	}
    }
    Tetris$1.Open=function()
    {
    	XStat$1.gi().PushStat(XStat$1.GS_TETRIS);
    };

    class XStat$1 {


        constructor()
        {
            this.MAXSTACKSIZE = 32;
            this.iXStat=-1;
             this.iStatStack = new Int32Array(this.MAXSTACKSIZE);
             this.iPointStack = new Int32Array(this.MAXSTACKSIZE);
             this.iPageStack = new Int32Array(this.MAXSTACKSIZE);
             this.objstack = new Array(this.MAXSTACKSIZE);
            this.oCurrentView=null;
            this.oPreviousView=null;
            this.iStatPoint=0;
            this.iPoint=0;
            this.iPage=0;

    		for (var i = 0; i < this.MAXSTACKSIZE; i++)this.objstack[i] = null;
    		this.ResetStat();
        }
        ResetStat()
        {
          for (var i = 0; i < this.MAXSTACKSIZE; i++)
              this.objstack[i] = null;
          this.iStatPoint = 0;
          this.iStatStack[this.iStatPoint] = 0;
          this.PushStat(0);
      }

    	PopStat( type, p)
    	{
    		if(this.oPreviousView!=null)this.oPreviousView.CallBack(type, p);
    		return this.PopStat(1);
    	}
        PopStat( i) 
        {
    		if (MyTrade.bCheckTradeing && this.iXStat == XStat$1.GS_MYTRADEFRAME) {
    			GmProtocol$1.gi().s_Trade(10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    			MyTrade.bCheckTradeing = false;
    		}
    		if (this.iXStat == XStat$1.GS_SYSTEMOPERATE) {// 系统菜单，更新配置到服务器
    			GmPlay$1.x_record.SaveTo(XDefine$1.RECORDFILENAME);
    			GmProtocol$1.gi().s_UseSkill(100, SystemOperate.iNearRoleCount, 0, 0,
    					0, 0, 0);
    		}
    		if (i > 1)
            this.PopStat(i - 1);
    		if (this.iStatPoint > 1) {
    			this.iPoint = this.iPointStack[this.iStatPoint];
    			this.iPage = this.iPageStack[this.iStatPoint];
    			this.objstack[this.iStatPoint] = null;
    			this.iStatPoint--;
    		}
    		this.iXStat = this.iStatStack[this.iStatPoint];
    		this.oCurrentView = this.objstack[this.iStatPoint];
    		this.oPreviousView = this.objstack[this.iStatPoint - 1];
    		return this.iStatStack[this.iStatPoint];
    	}
    	
        PushXmsStat( i, bc) 
        {
    		if (MyTrade.bCheckTradeing)// && this.iXStat==GS_MYTRADEFRAME)
    		{
    			if (i != XStat$1.GS_WATCHON) {
    				GmProtocol$1.gi().s_Trade(10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    				MyTrade.bCheckTradeing = false;
    			}
    		}
    		if (this.iStatPoint < 0 || this.iStatPoint >= this.MAXSTACKSIZE)
    			return null;
    		this.iStatPoint++;
    		this.iStatStack[this.iStatPoint] = i;
    		this.iPointStack[this.iStatPoint] = this.iPoint;
    		this.iPageStack[this.iStatPoint] = this.iPage;
    		this.iPoint = 0;
    		this.iPage = 0;
    		this.iXStat = i;

    		if (GmConfig$1.bBigUI && i != XStat$1.GS_GAMEING && GmConfig$1.SCRW > GmConfig$1.BUW) {
    //			var j = SystemOperate.iScreenSet;
    //			SystemOperate.SetScreenMode(4);
    			this.objstack[this.iStatPoint] = bc;
    //			SystemOperate.SetScreenMode(j);
    		} else
    			this.objstack[this.iStatPoint] = bc;

    		if (this.objstack[this.iStatPoint] != null)
    			this.objstack[this.iStatPoint].iStatType = i;
    		this.oCurrentView = this.objstack[this.iStatPoint];
    		this.oPreviousView = this.objstack[this.iStatPoint - 1];

    		GoodsDraw.Reset();

    		return this.oCurrentView;
    	}

        PushStat( i)
        {
    		if (MyTrade.bCheckTradeing)// && this.iXStat==GS_MYTRADEFRAME)
    		{
    			if (i != XStat$1.GS_WATCHON) {
    				GmProtocol$1.gi().s_Trade(10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    				MyTrade.bCheckTradeing = false;
    			}
    		}
    		if (this.iStatPoint < 0 || this.iStatPoint >= this.MAXSTACKSIZE)
    			return null;
    		this.iStatPoint++;
    		this.iStatStack[this.iStatPoint] = i;
    		this.iPointStack[this.iStatPoint] = this.iPoint;
    		this.iPageStack[this.iStatPoint] = this.iPage;
    		this.iPoint = 0;
    		this.iPage = 0;
    		this.iXStat = i;

    		if (GmConfig$1.bBigUI && i != XStat$1.GS_GAMEING && GmConfig$1.SCRW > GmConfig$1.BUW) {
    //			var j = SystemOperate.iScreenSet;
    //			SystemOperate.SetScreenMode(4);
    			this.objstack[this.iStatPoint] = this.InitStat();
    //			SystemOperate.SetScreenMode(j);
    		} else
    			this.objstack[this.iStatPoint] = this.InitStat();

    		if (this.objstack[this.iStatPoint] != null)
    			this.objstack[this.iStatPoint].iStatType = i;
    		this.oCurrentView = this.objstack[this.iStatPoint];
    		this.oPreviousView = this.objstack[this.iStatPoint - 1];

    		GoodsDraw.Reset();

    		return this.oCurrentView;
    	}

        bGameing()
        {
    		for (var i = this.iStatPoint; i > 0; i--) {
    			if (this.iStatStack[i] == XStat$1.GS_GAMEING)
    				return true;
    		}
    		return false;
    	}
    	
        bHaveStat( st) 
        {
    		for (var i = this.iStatPoint; i > 0; i--) {
    			if (this.iStatStack[i] == st)
    				return true;
    		}
    		return false;
    	}
    	FindStat( st)
    	{
    //		if(1==1)return null;
    		for (var i = this.iStatPoint; i > 0; i--) {
    			if (this.iStatStack[i] == st)
    				return this.objstack[i];
    		}
    		return null;
    	}

        LastStat( i) 
        {
    		return this.objstack[this.iStatPoint - i];
    	}

    	 CheckStat( st)
    	{
    		if(this.LastStatType(0)==st)return true;
    		return false;
    	}
         LastStatType( i) 
         {
    		return this.iStatStack[this.iStatPoint - i];
    	}



        InitStat()
        {
    		switch (this.iXStat) {
    		case XStat$1.GS_EXITCONFIRM:
    			return new ExitConfirm(GmPlay$1.xani_ui);
    		case XStat$1.GS_KICKOUT:
    			return new KickOut(GmPlay$1.xani_back);
    		case XStat$1.GS_LOADING1:
    			return new Loading1(GmPlay$1.xani_ui);
    		case XStat$1.GS_LOADING2:
    			return new Loading2(GmPlay$1.xani_ui);
    		case XStat$1.GS_MESSAGE1:
    			return new Message1(GmPlay$1.xani_ui);
    		case XStat$1.GS_PROMPTMESSAGE:
    			return new PromptMessage(GmPlay$1.xani_ui);
    		case XStat$1.GS_CONFIRM1:
    			return new Confirm1(GmPlay$1.xani_ui);
    		case XStat$1.GS_CONFIRM2:
    			return new SevConfirm(GmPlay$1.xani_ui);
    		case XStat$1.GS_INNUMBER:
    			return new InNumber(GmPlay$1.xani_ui);
    		case XStat$1.GS_LOGO:
    			return new Logo(GmPlay$1.xani_ui);
    		case XStat$1.GS_LEADPAGE:
    			return new LeadPage();
    		case XStat$1.GS_STARTGAME:
    			return new StartGame();
    		case XStat$1.GS_MAINMENU:
    			return new MainMenu(GmPlay$1.xani_ui);
    		case XStat$1.GS_FASTLOGIN: {// 根据平台，设置登陆页面
    			switch (GameVersion$1.QUDAO) {
    			case 0:
    				return new FastGetin_local();
    			case 1:
    			default:
    				return new StartGame();
    //				return new FastGetin_uc(GmPlay.xani_ui);
    			}
    			// if(GameData.QUDAO==1)return new FastGetin_uc(GmPlay.xani_ui);
    			// else return new FastGetin_local(GmPlay.xani_ui);
    		}
    		case XStat$1.GS_REGIST:
    			return new Regist_local(GmPlay$1.xani_ui);
    		case XStat$1.GS_LOGIN:
    			return new Login_local(GmPlay$1.xani_ui);
    		case XStat$1.GS_SELECTROLE:
    			return new SelectRole(GmPlay$1.xani_ui);
    		case XStat$1.GS_CREATEROLE:
    			return new CreateRole(GmPlay$1.xani_ui);
    		case XStat$1.GS_SELECTSEVER:
    			return new SelectSever(GmPlay$1.xani_ui);
    		case XStat$1.GS_GAMEING:
    			return new Gameing(GmPlay$1.xani_ui);
    		case XStat$1.GS_TEAMOPERATE:
    			return new TeamOperate(GmPlay$1.xani_ui);
    		case XStat$1.GS_TEAMCREATE:
    			return new TeamCreate(GmPlay$1.xani_ui);
    		case XStat$1.GS_TEAMZHEN:
    			return new TeamZhen(GmPlay$1.xani_ui);
    		case XStat$1.GS_TEAMDEST:
    			return new TeamDest$1(GmPlay$1.xani_ui);
    		case XStat$1.GS_SENDPUBLICCHAT:
    			return new PublicChat_Send(GmPlay$1.xani_ui);
    		case XStat$1.GS_SETCHATVALUE:
    			return new SetChatValue(GmPlay$1.xani_ui);
    		case XStat$1.GS_ADDPOINT:
    			return new AddPoint(GmPlay$1.xani_ui);
    		case XStat$1.GS_PRIVATECHAT:
    			return new PrivateChat_Send(GmPlay$1.xani_ui);
    		case XStat$1.GS_GIVEGOODS:
    			return new GiveGoods(GmPlay$1.xani_ui);
    		case XStat$1.GS_LEARNSKILL:
    			return new LearnSkill(GmPlay$1.xani_ui);
    		case XStat$1.GS_BACKTOSCHOOL:
    			return new BackToSchool(GmPlay$1.xani_ui);
    		case XStat$1.GS_MISSIONFRAME:
    			return new MissionFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_SELECTGOODSFORMISSION:
    			return new SelectGoodsForMission(GmPlay$1.xani_ui);
    		case XStat$1.GS_FULLCHATFRAME:
    			return new PublicChat_BigFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_SHOPFRAME:
    			return new NpcShopFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_SHELVESFRAME:
    			return new ShelvesFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_CREATEGOV:
    			return new CreateGov(GmPlay$1.xani_ui);
    		case XStat$1.GS_APPLYFORGOV:
    			return new ApplyForGov(GmPlay$1.xani_ui);
    		case XStat$1.GS_GOVFRAME:
    			return new GovFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_LEARNGOVSKILL:
    			return new LearnGovSkill(GmPlay$1.xani_ui);
    		case XStat$1.GS_GOVXIU:
    			return new GovXiu(GmPlay$1.xani_ui);
    		case XStat$1.GS_SMALLMAP:
    			return new SmallMap(GmPlay$1.xani_ui);
    		case XStat$1.GS_WORLDMAP:
    			return new WorldMap(GmPlay$1.xani_ui);
    		case XStat$1.GS_SYSTEMOPERATE:
    			return new SystemOperate(GmPlay$1.xani_ui);
    		case XStat$1.GS_MYATTFRAME:
    			return new MyAttFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_MEMBERDETAIL:
    			return new MemberDetail(GmPlay$1.xani_ui);
    		case XStat$1.GS_MAKEEQUIP:
    			return new MakeEquip(GmPlay$1.xani_ui);
    		case XStat$1.GS_FASTOPERATE:
    			return new FastOperate(GmPlay$1.xani_ui);
    		case XStat$1.GS_CAMEOOPERATE:
    			return new CameoOperate(GmPlay$1.xani_ui);
    		case XStat$1.GS_PETSFRAME:
    			return new PetsFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_FUSEPET:
    			return new FusePet(GmPlay$1.xani_ui);
    		case XStat$1.GS_APPROVEPET:
    			return new ApprovePet(GmPlay$1.xani_ui);
    		case XStat$1.GS_SELECTMYPET:
    			return new SelectMyPet(GmPlay$1.xani_ui);
    		case XStat$1.GS_INGOTMALL:
    			return new IngotMall(GmPlay$1.xani_ui);
    		case XStat$1.GS_FUBENMALL:
    			return new FubenMall(GmPlay$1.xani_ui);
    		case XStat$1.GS_IMPROVEEQUIP:
    			return new ImproveEquip(GmPlay$1.xani_ui);
    		case XStat$1.GS_REPAIREQUIP:
    			return new RepairEquip(GmPlay$1.xani_ui);
    		case XStat$1.GS_WATCHON:
    			return new WatchOn(GmPlay$1.xani_ui);
    		case XStat$1.GS_FINDFRIEND:
    			return new FindFriend(GmPlay$1.xani_ui);
    		case XStat$1.GS_SMALLSPEAKER:
    			return new SmallSpeaker(GmPlay$1.xani_ui);
    		case XStat$1.GS_SENDNOVICEASK:
    			return new Send_NoviceAsk$1(GmPlay$1.xani_ui);
    		case XStat$1.GS_SENDACEANSWER:
    			return new Send_AceAnswer$1(GmPlay$1.xani_ui);
    		case XStat$1.GS_GETCODEREWARD:
    			return new GetCodeReward(GmPlay$1.xani_ui);
    		case XStat$1.GS_LEARNPETSKILL:
    			return new LearnPetSkill(GmPlay$1.xani_ui);
    		case XStat$1.GS_PETEAT:
    			return new PetEat(GmPlay$1.xani_ui);
    		case XStat$1.GS_WASHPET:
    			return new WashPet(GmPlay$1.xani_ui);
    		case XStat$1.GS_MYRECOVER:
    			return new MyRecover(GmPlay$1.xani_ui);
    		case XStat$1.GS_MYGOODSFRAME:
    			return new MyGoodsFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_EXCHANGEMONEY:
    			return new ExchangeMoney(GmPlay$1.xani_ui);
    		case XStat$1.GS_MYTRADEFRAME:
    			return new MyTradeFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_GOODSSTOREFROME:
    			return new GoodsStoreFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_PETSTOREFRAME:
    			return new PetStoreFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_PRIVATECHATRECORD:
    			return new PrivateChatRecord(GmPlay$1.xani_ui);
    		case XStat$1.GS_LIANDANSHU:
    			return new LianDanShu(GmPlay$1.xani_ui);
    		case XStat$1.GS_SETTITLE:
    			return new SetTitle(GmPlay$1.xani_ui);
    		case XStat$1.GS_PETXIU:
    			return new PetXiu(GmPlay$1.xani_ui);
    		case XStat$1.GS_MOUNTSFRAME:
    			return new MountsFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_FEEDMOUNTS:
    			return new FeedMounts(GmPlay$1.xani_ui);
    		case XStat$1.GS_NOVICEHELP:
    			return new NoviceHelp(GmPlay$1.xani_ui);
    		case XStat$1.GS_NOVICEQUESTIONLIST:
    			return new NoviceQuestionList$1(GmPlay$1.xani_ui);
    		case XStat$1.GS_NOVICECHECKANSWER:
    			return new NoviceCheckAnswer(GmPlay$1.xani_ui);
    		case XStat$1.GS_PROMPTACTIVITY:
    			return new NewActivity(GmPlay$1.xani_ui);
    //			return new PromptActivity(GmPlay.xani_ui);
    		case XStat$1.GS_SHOWACTIVITYDETAIL:
    			return new ShowActivityDetail(GmPlay$1.xani_ui);
    		case XStat$1.GS_WEEKLYACTIVITY:
    			return new WeeklyActivity(GmPlay$1.xani_ui);
    		case XStat$1.GS_DAYATTEND:
    			return new DayAttend(GmPlay$1.xani_ui);
    		case XStat$1.GS_CHANGENAME:
    			return new ChangeName(GmPlay$1.xani_ui);
    		case XStat$1.GS_LOCKOPEN:
    			return new LockOpen(GmPlay$1.xani_ui);
    		case XStat$1.GS_LOCKSET:
    			return new LockSet(GmPlay$1.xani_ui);
    		case XStat$1.GS_LOCKFRAME:
    			return new LockFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_SELECTGOODS:
    			return new SelectGoods(GmPlay$1.xani_ui);
    		case XStat$1.GS_SELECTPET:
    			return new SelectPet(GmPlay$1.xani_ui);
    		case XStat$1.GS_EXTHELP:
    			return new ExtHelp(GmPlay$1.xani_ui);
    		case XStat$1.GS_PLANTFRAME:
    			return new PlantFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_LANDFRAME:
    			return new LandFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_SELECTLS:
    			return new SelectLS(GmPlay$1.xani_ui);
    			
    		case XStat$1.GS_EXTLEARNSKILL:
    			return new ExtLearnSkill(GmPlay$1.xani_ui);
    		case XStat$1.GS_APPLYGOVFIGHT:
    			return new ApplyGovFight(GmPlay$1.xani_ui);
    		case XStat$1.GS_GETINGOV:
    			return new GetInGov(GmPlay$1.xani_ui);
    		case XStat$1.GS_NEWGOVFRAME:
    			return new NewGovFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_MEMBEROPERATE:
    			return new MemberOperate(GmPlay$1.xani_ui);
    		case XStat$1.GS_SETGOVPOWER:
    			return new SetGovPower(GmPlay$1.xani_ui);
    		case XStat$1.GS_CONFIRMAPPLY:
    			return new ConfirmApply(GmPlay$1.xani_ui);
    		case XStat$1.GS_ENTRUSTMISSION:
    			return new EntrustMission(GmPlay$1.xani_ui);
    		case XStat$1.GS_RELEASEGOVMISSION:
    			return new ReleaseGovMission$1(GmPlay$1.xani_ui);
    		case XStat$1.GS_NEWGOVMANAGE:
    			return new NewGovManage(GmPlay$1.xani_ui);
    		case XStat$1.GS_GOV_SETBUILDING:
    			return new Gov_SetBuilding(GmPlay$1.xani_ui);
    		case XStat$1.GS_GOV_SETRESEARCH:
    			return new Gov_SetResearch(GmPlay$1.xani_ui);
    		case XStat$1.GS_GOV_SETMTLEV:
    			return new Gov_SetMtLev(GmPlay$1.xani_ui);
    		case XStat$1.GS_GOV_SETHOSTILITY:
    			return new Gov_SetHostility(GmPlay$1.xani_ui);
    		case XStat$1.GS_GOV_SETNAME:
    			return new Gov_SetName(GmPlay$1.xani_ui);
    		case XStat$1.GS_GOV_SETDETAIL:
    			return new Gov_SetDetail(GmPlay$1.xani_ui);
    		case XStat$1.GS_GOV_REMEDYMERGE:
    			return new RemedyMerge(GmPlay$1.xani_ui);
    		case XStat$1.GS_HIRETRADERWORKER:
    			return new HireTraderWorker(GmPlay$1.xani_ui);
    		case XStat$1.GS_GOVFBTARGET:
    			return new GovFBTarget(GmPlay$1.xani_ui);
    			
    		case XStat$1.GS_CREATEFT:
    			return new CreateFT(GmPlay$1.xani_ui);
    		case XStat$1.GS_FTFRAME:
    			return new FTFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_FTAPPLY:
    			return new FTApply(GmPlay$1.xani_ui);
    		case XStat$1.GS_FTMEMBER:
    			return new FTMember(GmPlay$1.xani_ui);
    		case XStat$1.GS_FTAGREE:
    			return new FTAgree(GmPlay$1.xani_ui);
    		case XStat$1.GS_FTRANK:
    			return new FTRank(GmPlay$1.xani_ui);
    		case XStat$1.GS_FTCHALLENGE:
    			return new FTChallenge(GmPlay$1.xani_ui);
    		case XStat$1.GS_FTPUTIN:
    			return new FTPutIn(GmPlay$1.xani_ui);
    		case XStat$1.GS_FTGETOUT:
    			return new FTGetOut(GmPlay$1.xani_ui);
    		case XStat$1.GS_FTMIJING:
    			return new FTMiJing(GmPlay$1.xani_ui);
    		case XStat$1.GS_JJPET:
    			return new JJPet(GmPlay$1.xani_ui);
    		case XStat$1.GS_MERGEZR:
    			return new MergeZR(GmPlay$1.xani_ui);
    			
    		case XStat$1.GS_CREATESHOP:
    			return new CreateShop(GmPlay$1.xani_ui);
    		case XStat$1.GS_FRIENDTEAM:
    			return new FriendTeam(GmPlay$1.xani_ui);
    		case XStat$1.GS_CHANGECOLOR:
    			return new ChangeColor(GmPlay$1.xani_ui);
    		case XStat$1.GS_SELECTSCHOOL:
    			return new SelectSchool(GmPlay$1.xani_ui);
    		case XStat$1.GS_NEWSHOP:
    			return new NewShop(GmPlay$1.xani_ui);
    		case XStat$1.GS_SELECTNEWPET:
    			return new SelectNewPet(GmPlay$1.xani_ui);
    		case XStat$1.GS_CREATEFUBEN:
    			return new CreateFuBen(GmPlay$1.xani_ui);
    		case XStat$1.GS_APPLYFUBEN:
    			return new ApplyFuBen(GmPlay$1.xani_ui);
    		case XStat$1.GS_MANAGEFUBEN:
    			return new ManageFuBen(GmPlay$1.xani_ui);
    			
    		case XStat$1.GS_AQSTART:///开始
    			return new AQStart(GmPlay$1.xani_ui);
    		case XStat$1.GS_AQDOING://进行中
    			return new AQDoing(GmPlay$1.xani_ui);
    		case XStat$1.GS_MAINHELP:
    			return new MainHelp(GmPlay$1.xani_ui);
    			
    		case XStat$1.GS_TETRIS:
    			return new Tetris$1(GmPlay$1.xani_ui);
    			
    		case XStat$1.GS_DIEPROMPT:
    			return new DiePrompt(GmPlay$1.xani_ui);
    		case XStat$1.GS_MYSELECT:
    			return new MySelect(GmPlay$1.xani_ui);
    		case XStat$1.GS_SHOPBUYDRAWING:
    			return new shop_BuyDrawing(GmPlay$1.xani_ui);
    		case XStat$1.GS_PEAKFIGHT:
    			return new PeakFight(GmPlay$1.xani_ui);
    		case XStat$1.GS_PEAKFIGHTSHOP:
    			return new shop_PeakFight(GmPlay$1.xani_ui);
    		case XStat$1.GS_LEADERBOARDFRAME:
    			return new LeaderBoardFrame(GmPlay$1.xani_ui);
    		case XStat$1.GS_LEADERBOARDROLE:
    			return new LeaderBoardRole(GmPlay$1.xani_ui);
    			
    		default:
    			GmPlay$1.sop("un init stat = " + this.iXStat);
    		}
    		return null;
    	}

         Draw()
          {
    		var i;
    //		GmPlay.sop("----");
    		for (i = 0; i <= this.iStatPoint; i++) {
    			if (this.objstack[i] != null) {
    				if (GmConfig$1.bBigUI && this.objstack[i].iStatType != GS_GAMEING
    						&& GmConfig$1.SCRW > GmConfig$1.BUW) {
    //					var j = SystemOperate.iScreenSet;
    //					SystemOperate.SetScreenMode(4);
    					this.objstack[i].Draw();
    //					SystemOperate.SetScreenMode(j);
    				} else
    					this.objstack[i].Draw();
    	//			GmPlay.sop(""+this.iStatStack[i]);
    			}
    		}
    	}

    	ProcTouch( msg,  x,  y,  sx,  sy) {
    		if (this.objstack[this.iStatPoint] != null) {
    			if (GmConfig$1.bBigUI && this.objstack[this.iStatPoint].iStatType != GS_GAMEING
    					&& GmConfig$1.SCRW > GmConfig$1.BUW) {
    //				var j = SystemOperate.iScreenSet;
    //				SystemOperate.SetScreenMode(4);
    				TouchManager.gi().calcxy(sx, sy);
    				var ret = this.objstack[this.iStatPoint].ProcTouch(msg,
    						TouchManager.gi().cx, TouchManager.gi().cy);
    //				SystemOperate.SetScreenMode(j);
    				return ret;
    			} else
    				return this.objstack[this.iStatPoint].ProcTouch(msg, x, y);
    		}
    		/*
    		 * int i; for(i=this.iStatPoint;i>=0;i--) { if(this.objstack[i]!=null) {
    		 * if(this.objstack[i].ProcTouch(msg, x, y))return true; } }
    		 */
    		return false;
    	}
    }

    XStat$1.GS_EXITCONFIRM = 1;
    XStat$1.GS_KICKOUT = 2;
    XStat$1.GS_LOADING1 = 10;
    XStat$1.GS_LOADING2 = 11;
    XStat$1.GS_MESSAGE1 = 50;
    XStat$1.GS_PROMPTMESSAGE=60;
    XStat$1.GS_CONFIRM1 = 70;
    XStat$1.GS_CONFIRM2 = 71;
    XStat$1.GS_INNUMBER = 80;

    XStat$1.GS_LEADPAGE=101;
    XStat$1.GS_STARTGAME=102;

    XStat$1.GS_LOGO = 100;
    XStat$1.GS_MAINMENU = 200;
    XStat$1.GS_FASTLOGIN = 300;
    XStat$1.GS_REGIST = 400;
    XStat$1.GS_LOGIN = 500;
    XStat$1.GS_SELECTROLE = 600;
    XStat$1.GS_CREATEROLE = 700;
    XStat$1.GS_SELECTSEVER = 800;

    XStat$1.GS_GAMEING = 2000;
    XStat$1.GS_TEAMOPERATE = 2100;
    XStat$1.GS_TEAMCREATE = 2101;
    XStat$1.GS_TEAMZHEN = 2102;
    XStat$1.GS_TEAMDEST=2103;
    XStat$1.GS_SENDPUBLICCHAT = 2200;
    XStat$1.GS_SETCHATVALUE=2202;
    XStat$1.GS_ADDPOINT = 2300;
    XStat$1.GS_PRIVATECHAT = 2400;
    XStat$1.GS_GIVEGOODS = 2500;
    XStat$1.GS_LEARNSKILL = 2600;
    XStat$1.GS_BACKTOSCHOOL=2601;
    XStat$1.GS_MISSIONFRAME = 2700;
    XStat$1.GS_SELECTGOODSFORMISSION=2701;//选择物品完成任务
    XStat$1.GS_FULLCHATFRAME = 2800;
    XStat$1.GS_SHOPFRAME = 2900;
    XStat$1.GS_SHELVESFRAME = 3000;// 上架确认框
    XStat$1.GS_SMALLMAP = 3010;// 小地图
    XStat$1.GS_WORLDMAP = 3011;// 世界地图
    XStat$1.GS_SYSTEMOPERATE = 3020;// 系统
    XStat$1.GS_MYATTFRAME = 3030;// 我的属性框
    XStat$1.GS_FASTOPERATE = 3040;// 快捷操作
    XStat$1.GS_PETSFRAME = 3050;// 我的宠物
    XStat$1.GS_FUSEPET = 3051;// 合成宠物
    XStat$1.GS_APPROVEPET = 3052;// 认证宠物
    XStat$1.GS_SELECTMYPET=3053;//选择宠物
    XStat$1.GS_INGOTMALL = 3060;// 元宝商城
    XStat$1.GS_FUBENMALL=3061;//副本积分商城
    XStat$1.GS_WATCHON = 3070;// 我的摊位
    XStat$1.GS_FINDFRIEND = 3080;// 查找好友
    XStat$1.GS_SMALLSPEAKER = 3090;// 小喇叭
    XStat$1.GS_SENDNOVICEASK = 3091;// 新手提问
    XStat$1.GS_SENDACEANSWER = 3092;// 新手提问
    XStat$1.GS_GETCODEREWARD = 3093;// 用CD-KEY兑换奖品
    XStat$1.GS_LEARNPETSKILL = 3100;// 宠物学技能
    XStat$1.GS_PETEAT = 3101;// 宠物食用物品
    XStat$1.GS_WASHPET = 3110;// 洗宝宝
    XStat$1.GS_MYRECOVER = 3120;// 回收物品
    XStat$1.GS_MYGOODSFRAME = 3130;// 我的物品栏
    XStat$1.GS_EXCHANGEMONEY=3131;//元宝兑换钱
    XStat$1.GS_MYTRADEFRAME = 3140;// 交易
    XStat$1.GS_GOODSSTOREFROME = 3150;// 仓库
    XStat$1.GS_PETSTOREFRAME = 3151;// 宠物仓库
    XStat$1.GS_PRIVATECHATRECORD = 3160;// 私聊记录
    XStat$1.GS_LIANDANSHU = 3170;// 炼丹术
    XStat$1.GS_SETTITLE = 3180;// 称谓设置
    XStat$1.GS_PETXIU = 3190;// 宠物修炼
    XStat$1.GS_MOUNTSFRAME = 3200;// 坐骑窗口
    XStat$1.GS_FEEDMOUNTS = 3210;// 喂养坐骑
    XStat$1.GS_NOVICEHELP = 3220;// 新手帮助
    XStat$1.GS_NOVICEQUESTIONLIST = 3230;// 打开问题列表
    XStat$1.GS_NOVICECHECKANSWER = 3240;// 新手检查问题的答案
    XStat$1.GS_PROMPTACTIVITY = 3250;// 活跃度
    XStat$1.GS_SHOWACTIVITYDETAIL=3251;//活跃度细节弹框
    XStat$1.GS_WEEKLYACTIVITY=3252;//周历
    XStat$1.GS_DAYATTEND = 3260;// 每日报到
    XStat$1.GS_CHANGENAME = 3270;//改名
    XStat$1.GS_LOCKSET=3280;//设置锁
    XStat$1.GS_LOCKOPEN=3290;//解锁
    XStat$1.GS_LOCKFRAME=3300;//锁页面
    XStat$1.GS_SELECTGOODS=3310;//聊天框选择物品
    //	XStat.GS_WATCHSELECT=3320;//选择聊天发送的物品
    XStat$1.GS_SELECTPET=3330;//选择聊天发送的宠物
    XStat$1.GS_EXTHELP=3340;//扩展帮助
    XStat$1.GS_PLANTFRAME=3350;//植物框
    XStat$1.GS_LANDFRAME=3360;//土地属性框
    XStat$1.GS_SELECTLS=3370;//选择灵石

    XStat$1.GS_CREATEGOV = 4000;// 创建帮派页面
    XStat$1.GS_APPLYFORGOV = 4001;// 申请加入帮派--------
    XStat$1.GS_GOVFRAME = 4002;// 帮派页面
    XStat$1.GS_LEARNGOVSKILL = 4003;// 学习帮派技能
    XStat$1.GS_GOVXIU = 4004;// 帮派修炼
    XStat$1.GS_MEMBERDETAIL = 4005;// 帮派成员详细信息
    XStat$1.GS_EXTLEARNSKILL = 4006;// 扩展学习技能到30级
    XStat$1.GS_APPLYGOVFIGHT=4007;//申请帮战
    XStat$1.GS_GETINGOV=4008;//用id进入帮派-----------
    XStat$1.GS_NEWGOVFRAME=4009;//用id进入帮派-------
    XStat$1.GS_MEMBEROPERATE=4010;//成员管理----------
    XStat$1.GS_SETGOVPOWER=4011;//设置权限--------
    XStat$1.GS_CONFIRMAPPLY=4012;//同意拒绝申请-----
    XStat$1.GS_ENTRUSTMISSION=4013;//委托任务---
    XStat$1.GS_RELEASEGOVMISSION=4014;//发布委托页面---
    XStat$1.GS_NEWGOVMANAGE=4015;//帮派管理---
    XStat$1.GS_GOV_SETBUILDING=4016;//建筑设置---
    XStat$1.GS_GOV_SETRESEARCH=4017;//研究设置---
    XStat$1.GS_GOV_SETMTLEV=4018;//维护级别设置---
    XStat$1.GS_GOV_SETHOSTILITY=4019;//设置敌对---
    XStat$1.GS_GOV_SETNAME=4020;//设置敌对---
    XStat$1.GS_GOV_SETDETAIL=4021;//设置帮派宣言---
    XStat$1.GS_GOV_REMEDYMERGE=4022;//丹方合成---
    XStat$1.GS_HIRETRADERWORKER=4023;//雇佣商人和工人
    XStat$1.GS_GOVFBTARGET=4024;//帮派副本进度显示

    XStat$1.GS_CREATEFT=4100;//创建战队
    XStat$1.GS_FTFRAME=4101;//战队属性页面
    XStat$1.GS_FTAPPLY=4102;//战队申请页面
    XStat$1.GS_FTMEMBER=4103;//战队成员列表
    XStat$1.GS_FTAGREE=4104;//同意入队
    XStat$1.GS_FTRANK=4105;//排行
    XStat$1.GS_FTCHALLENGE=4106;//排行
    XStat$1.GS_FTPUTIN=4107;//战队资金注入
    XStat$1.GS_FTGETOUT=4108;//战队资金取出
    XStat$1.GS_FTMIJING=4109;//战队秘境
    XStat$1.GS_JJPET=4110;//进阶宠物
    XStat$1.GS_MERGEZR=4111;//融合自然之力

    XStat$1.GS_CREATESHOP=4200;//创建商店
    XStat$1.GS_FRIENDTEAM=4300;//好友分组
    XStat$1.GS_CHANGECOLOR=4400;//染色
    XStat$1.GS_SELECTSCHOOL=4500;//选择门派
    XStat$1.GS_NEWSHOP=4600;//新商店
    XStat$1.GS_SELECTNEWPET=4700;//选择新宠物

    XStat$1.GS_MAKEEQUIP = 5000;// 装备制造
    XStat$1.GS_CAMEOOPERATE = 5010;// 宝石合成镶嵌
    XStat$1.GS_IMPROVEEQUIP = 5020;// 强化装备
    XStat$1.GS_REPAIREQUIP=5030;//修理装备

    XStat$1.GS_CREATEFUBEN = 6000;// 创建副本
    XStat$1.GS_APPLYFUBEN = 6010;// 申请副本
    XStat$1.GS_MANAGEFUBEN = 6020;// 管理副本

    XStat$1.GS_AQSTART=6500;//中午答题活动
    XStat$1.GS_AQDOING=6501;
    XStat$1.GS_MAINHELP=6502;//资料库

    XStat$1.GS_DIEPROMPT=7000;//死亡提示
    XStat$1.GS_MYSELECT=7001;//选择
    XStat$1.GS_SHOPBUYDRAWING=7002;//图纸商店
    XStat$1.GS_PEAKFIGHT=7003;//巅峰之战
    XStat$1.GS_PEAKFIGHTSHOP=7004;//巅峰之战商店

    XStat$1.GS_LEADERBOARDFRAME=7005;//排行榜
    XStat$1.GS_LEADERBOARDROLE=7006;//排行榜人物

    XStat$1.GS_TETRIS=10000;//

    XStat$1.x_stat = null;
    XStat$1.gi=function()
    {
    	if(XStat$1.x_stat==null)XStat$1.x_stat=new XStat$1();
    	return XStat$1.x_stat;
    };

    class XDefine$1
    {
        constructor()
        {

        }
    }

    XDefine$1.RECORDFILENAME="record.dat";
    XDefine$1.PRIVATECHATRECORD="chatrecord.dat";

    XDefine$1.bInRect=function( x , y, rx, ry, rw, rh)
    	{
    		if(x<=rx)return false;
    		if(y<=ry)return false;
    		if(x>=rx+rw)return false;
    		if(y>=ry+rh)return false;
    		return true;
    	};
        XDefine$1.bInLX=function( x, y, lx, ly, lw, lh)
    	{//点是否在菱形内
    		if(x<lx-lw/2)return false;
    		if(x>lx+lw/2)return false;
    		if(y<ly-lh/2)return false;
    		if(y>ly+lh/2)return false;
    		x=lx>x?lx-x:x-lx;
    		y=ly>y?ly-y:y-ly;
    		y=y*lw/lh;
    		if(x+y>lw/2)return false;
    		
    		return true;
    	};
    	XDefine$1.bOnRect=function( x , y, rx, ry, rw, rh)
    	{
    		if(x<rx)return false;
    		if(y<ry)return false;
    		if(x>rx+rw)return false;
    		if(y>ry+rh)return false;
    		return true;
    	};
    	XDefine$1.llength=function( x1, y1, x2, y2)
    	{
    		return parseInt(Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)));
    	};
    	XDefine$1.CalcRate=function( a, b, m)
    	{
    		return parseInt(1.0*a*m/b);
    	};
    	XDefine$1.PI=3.1415926;
    	XDefine$1.GetAngleXY=function( dx, dy, ox, oy)
    	{//角度
    		var tx,ty,tjd;
    		
    		tx=dx-ox;
    		ty=dy-oy;
    		if(tx==0)tx=(0.0000001);
    		tjd=(Math.atan(ty/tx));
    		if(tx<0)tjd+=(XDefine$1.PI);

    		return  parseInt(tjd*180/XDefine$1.PI);
    	};
    	XDefine$1.GetAngleXY_ext=function( dx, dy, ox, oy)
    	{//弧度
    		var tx,ty,tjd;
    		
    		tx=dx-ox;
    		ty=dy-oy;
    		if(tx==0)tx=(0.0000001);
    		tjd=Math.atan(ty/tx);
    		if(tx<0)tjd+=XDefine$1.PI;

    		return tjd;
    	};
    	
    	XDefine$1.ShowFM=function()
    	{/*
    		ActivityManager att=(ActivityManager)PublicInterface.mMain.getSystemService(Context.ACTIVITY_SERVICE);
    		ActivityManager.MemoryInfo mi=new ActivityManager.MemoryInfo();
    		att.getMemoryInfo(mi);
    //		M3DFast.gi().DrawText_2(0, 60, "[FM:"+(mi.availMem/1024/1024)+"M]", 0xffffffff);
    		M3DFast.gi().DrawText_2(0, 60, "[FM:"+(mi.availMem/1024/1024)+"M]", 0xffffffff, 30, 101, 1, 1, 0, 0, 0, 2, 0xff000000);
    		GmPlay.sop1("[FM:"+(mi.availMem/1024/1024)+"M]");*/
    	};

    	XDefine$1.getFileMD5=function(file) 
    	{
    		  return "";
    	};
    	XDefine$1.SecondToTime=function( sec)
    	{
    		var i;
    		var ret="";
    		i=sec/3600;
    		if(i==0)ret=ret+"00";
    		else if(i<10)ret=ret+"0"+i;
    		else ret=ret+i;
    		ret+=":";
    		i=sec/60%60;
    		if(i==0)ret=ret+"00";
    		else if(i<10)ret=ret+"0"+i;
    		else ret=ret+i;
    		ret+=":";
    		i=sec%60;
    		if(i==0)ret=ret+"00";
    		else if(i<10)ret=ret+"0"+i;
    		else ret=ret+i;
    		return ret;
    	};
    	
    	XDefine$1.HEX_DIGITS = [ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',  'a', 'b', 'c', 'd', 'e', 'f' ];
    	XDefine$1.toHexString=function(b)
    	{
            var s=""; 
    	    for (var i = 0; i < b.length; i++)
    	    {
                s+=HEX_DIGITS[(b[i] & 0xf0) >> 4];
                s+=HEX_DIGITS[b[i] & 0x0f];
    	    }
    	    return s;
    	};
    	
        XDefine$1.grnd=function(min,max)
        {
            if(min>=max)return min;
            return Math.floor(Math.random()*(max-min+1))+min;
    	};
    	XDefine$1.GetRand=function(min,max)
        {
            if(min>=max)return min;
            return Math.floor(Math.random()*(max-min+1))+min;
    	};

    	/**
    	 * 地图资源加载蒙版
    	 * @param {number} state 加载状态 （1加载中 2加载完成）
    	 */
    	XDefine$1.addLoadMask = function(state){
    		switch (state) {
    			case 1:
    				clearTimeout(this.id);
    				if(!XStat$1.gi().CheckStat(XStat$1.GS_LOADING2)){
    					XStat$1.gi().PushStat(XStat$1.GS_LOADING2);
    				}
    				break;
    			case 2:
    				this.id = setTimeout(()=>{
    					if (XStat$1.gi().LastStatType(0) != XStat$1.GS_GAMEING){
    						XStat$1.gi().PopStat(1);
    					}
    				},2000);
    				break;
    		}
    	};

        XDefine$1.get_ms=function()
        {
            return Date.now();
        };

        XDefine$1._debuglist=null;
        XDefine$1.sop=function(s)
        {
    		// if(s=="\"res/datapackage/uis/nui1/res9.png\",")
            // {
            //     var a=1;
            // }
            if(XDefine$1._debuglist==null)XDefine$1._debuglist=new Array(20);
        
            for(var i=20;i>0;i--)
            {
                XDefine$1._debuglist[i]=XDefine$1._debuglist[i-1];
            }
            XDefine$1._debuglist[0]=s;
            console.log(s);
        //    if(BridgeInterface.pp!=null)BridgeInterface.pp.SendMessage("log",s);
    	};
    	
    XDefine$1.arraycopy=function(fromb, fromo, tod, too, len)
    {
    	for(var i=0;i<len;i++)
    	{
    		tod[too+i]=fromb[fromo+i];
    	}
    };

    XDefine$1.BASE_URL="https://xiazai.qi-guo.cn/qiguo/xiaoyouxi/7g/";
    //XDefine.BASE_URL="https://xiazai.qi-guo.cn/QiGuo_H5Res/";
    //XDefine.BASE_URL="http://ccnto.f3322.net:5050/7g/";
    // XDefine.BASE_URL="http://syno10c898ec20dc.qicp.vip:5050/7g/";
    // XDefine.BASE_URL="http://139.129.160.118:9999/";

    class WavFast
    {
        constructor(){
            this.bMusicEnabled=true;
            this.bPause=false;
        }
        StartWav(s,bLoop)
        {
            if(SystemOperate.iSound==0)return;
    		if(this.bPause)return;
    		// if(GmPlay.m_vi.bRecording || GmPlay.m_vi.bPlaying)return;
            for(var i=0;i<WavFast._d2.length;i++)
            {
                if(WavFast._d2[i]==s)
                {
                    Laya.SoundManager.playSound(XDefine$1.BASE_URL+"res/datapackage/sound/sound/"+WavFast._d2[i]+".xxx");
                }
            }
        }
        StartWav_Pet(tid,type){
            if(SystemOperate.iSound==0)return;
    		if(this.bPause)return;
    		// if(GmPlay.m_vi.bRecording || GmPlay.m_vi.bPlaying)return;
    		if(tid<=0 || tid>=20 || tid==17 || type<0 || type>=4)return;
            Laya.SoundManager.playSound(XDefine$1.BASE_URL+"res/datapackage/sound/sound/pets/"+parseInt(tid/10)+(tid%10)+"/"+WavFast._d1[type]+".xxx");
        }
        StartBackMusic( fn, bIsLoop){
            if (this.bMusicEnabled){
                this.StopBackMusic();
                console.log('音乐id:',fn);
                XDefine$1.sop(XDefine$1.BASE_URL+"res/datapackage/sound/music/"+fn+".xxx");
                WavFast._music_channel = Laya.SoundManager.playMusic(XDefine$1.BASE_URL+"res/datapackage/sound/music/"+fn+".xxx");
    		}
    	}
    	StopBackMusic()
    	{
            if(WavFast._music_channel!=null){
        		WavFast._music_channel.stop();
            }
        }
    }
    WavFast._d1=["attack","magic","hurt","die"];
    WavFast._d2=["defence",
    "escape",
    "role0_attack",
    "role0_magic",
    "role0_hurt",
    "role0_die",
    "role1_attack",
    "role1_magic",
    "role1_hurt",
    "role1_die",
    ""];
    WavFast._music_channel=null;
    WavFast.MusicContinue=function()
    {
        if(WavFast._music_channel==null)return;
        WavFast._music_channel.play();
    };

    //import android.os.Message;

    class PublicInterface {

    	constructor(){
    		//  this.bShowFloatButton=false;
    		//  this.bAtLeft,this.bLockFB,this.bOutSide;
    		//  this.iFBOffY;
    		//  this.iFBOffX;
    		//  this.iOldX,this.iOldY;
    		//  this.iLockX,this.iLockY;
    		this.iStat=0;
    		this.iBx=-1;
    		this.iLHX=-1;
    		if(PublicInterface.QUDAO == 1){//微信胶囊位置
    			setTimeout(()=>{
    				var dd = wx.getMenuButtonBoundingClientRect();
    				console.log('菜单按键宽度：',dd.width);
    				console.log('菜单按键高度：',dd.height);
    				console.log('菜单按键上边界坐标：',dd.top);
    				console.log('菜单按键右边界坐标：',dd.right);
    				console.log('菜单按键下边界坐标：',dd.bottom);
    				console.log('菜单按键左边界坐标：',dd.left);
    				var info=wx.getSystemInfoSync();

    				this.iScreenW = info.windowWidth;
    				this.iScreenH = info.windowHeight;
    				
    				this.iBx = dd.left*Laya.stage.width/this.iScreenW;
    				this.iBy = dd.top*Laya.stage.height/this.iScreenH;
    				this.iBw = dd.width*Laya.stage.width/this.iScreenW;
    				this.iBh = dd.height*Laya.stage.height/this.iScreenH;

    				var safeArea=info.safeArea;
    				this.iLHX=safeArea.left;
    			},5000);

    			wx.onKeyboardComplete(()=>{
    				console.log('键盘收起');
    				eventMgr.dispatchEvent('onKeyboardComplete');
    			});
    		}else{
    			
    		}
    		// this.iBx=Laya.stage.width-200;
    		// this.iBy=100;
    		// this.iBw=100;
    		// this.iBh=50;
    	}
    	bInBound(x,y,w,h)
    	{
    		if(this.iBx<0)return false;
    		if(x+w<this.iBx)return false;
    		if(this.iBx+this.iBw<x)return false;
    		if(y+h<this.iBy)return false;
    		if(this.iBy+this.iBh<y)return false;
    		return true;
    	}
    	DrawBoundRect()
    	{
    		// if(this.iBx<0)return;
    		// M3DFast.gi().FillRect(this.iBx,this.iBy,this.iBw,this.iBh,0xff0000,1,100);
    	}
    	Logic()
    	{
    		if(!GmPlay$1.bConnected)return;
    		if(GmPlay$1.gi().iLoadStat<7)return;
    		if(PublicInterface.QUDAO==1)this.Logic_wx();
    	}
    	Logic_wx()
    	{
    		switch(this.iStat)
            {
                case 0:
                    wx.onShow(function()
    				{//回到界面继续播放背景音乐
    					WavFast.MusicContinue();
    				});
    				wx.setKeepScreenOn({
    					keepScreenOn: true,
    					success() {
    						console.log('常亮打开成功');
    					},
    					fail(err) {
    						console.log(err, '常亮打开失败');
    					}
    				});
                    wx.login({
                        success(res){
                            if (res.code){// 发起网络请求
    							XDefine$1.sop("wx login success");
    							GmProtocol$1.gi().s_Login_xyx(PublicInterface.QUDAO,res.code,"");
                            }
                            else XDefine$1.sop("登录失败！"+res.errMsg);
                        }
                    });
                    this.iStat=1;
                    this.iTimeOut=0;
                    break;
                case 1:
                    this.iTimeOut++;
                    if(this.iTimeOut>=3*30)this.iStat=0;
                    break;
            }
    	}
    	Init()
    	{
    		// uc_interface.uc.Init();
    	}
    	Pause()
    	{
    	}
    	_Login()
    	{
    		// uc_interface.uc._Login();
    	}
    	Pay( price)
    	{
    		// uc_interface.uc.Pay(price);
    	}
    	_Exit()
    	{
    		// GmPlay.bCheckRes=false;//改成下次登录需要更新，如果中间异常退出，就自动检测客户顿
    		// GmPlay.x_record.SaveTo(XDefine.RECORDFILENAME);

    		// uc_interface.Exit();
    	}
    	Exit()
    	{
    /*		Message message=new Message();
    		message.what=MESSAGE_EXIT;
    		message.obj=this;
    		main.mMain.mHandler.sendMessage(message);*/
    	}
    	Login()
    	{
    /*		Message message=new Message();
    		message.what=MESSAGE_LOGIN;
    		message.obj=this;
    		main.mMain.mHandler.sendMessage(message);*/
    	}
    	OnReceive( pls)
    	{
    	}
    	mta_record( type, cs, detail)
    	{//
    		switch(type)
    		{
    		case 0://游戏启动和关闭
    			break;
    		case 1://统计玩家账户,rid,name-
    			break;
    		case 2://lev,sever-
    			break;
    		case 3://追踪玩家充值
    			break;
    		case 4://跟踪获赠虚拟币
    			break;
    		case 5://跟踪游戏消费点-
    			break;
    		}
    	}

    	InitFloatButton()
    	{
    		// this.bShowFloatButton=true;
    		// this.bAtLeft=true;
    		// this.bLockFB=false;
    		// this.iFBOffY=GmConfig.SCRH/2-30;
    	}
    	Draw()
    	{
    		// if(this.bShowFloatButton)
    		// {
    		// 	if(!this.bLockFB)
    		// 	{
    		// 		if(this.bAtLeft)this.iFBOffX=0;
    		// 		else this.iFBOffX=GmConfig.SCRW-60;
    		// 	}
    		// 	M3DFast.gi().FillRect_2D_ex(this.iFBOffX, this.iFBOffY, this.iFBOffX+60, this.iFBOffY+60, 0xff000000, 0xffff0000, 0xff00ff00, 0xff0000ff);
    		// }
    	}
    	ProcTouch( msg, x, y)
    	{
    // 		if(this.bShowFloatButton)
    // 		{
    // 			if(XDefine.bInRect(x, y, this.iFBOffX, this.iFBOffY, 60, 60) && msg==1)
    // 			{
    // 				this.iOldX=this.iFBOffX;
    // 				this.iOldY=this.iFBOffY;
    // 				this.iLockX=x;
    // 				this.iLockY=y;
    // 				this.bLockFB=true;
    // 				this.bOutSide=false;
    // 			}
    // 			if(this.bLockFB)
    // 			{
    // 				if(x<GmConfig.SCRW/2)this.bAtLeft=true;
    // 				else this.bAtLeft=false;
    // 				this.iFBOffY=this.iOldY+y-this.iLockY;
    // 				if(XDefine.llength(x, y, this.iLockX, this.iLockY)>30)
    // 				{//拖动距离超过50个像素
    // 					this.iFBOffX=this.iOldX+x-this.iLockX;
    // 					this.bOutSide=true;//离开过区域范围，回去也不触发
    // 				}
    // 				else
    // 				{
    // 					this.iFBOffX=this.iOldX;
    // 					if(msg==3 && !this.bOutSide)
    // 					{//放开时，触发打开页面\
    // //						mmy_interface.mmy.usercenter.go2Ucenter();
    // 					}
    // 				}
    				
    // 				if(this.iFBOffY<0)this.iFBOffY=0;
    // 				else if(this.iFBOffY+60>GmConfig.SCRH)this.iFBOffY=GmConfig.SCRH-60;
    // 				if(msg==3)this.bLockFB=false;
    // 				return true;
    // 			}
    // 		}
    // 		return false;
    	}
    	QUDAO()
    	{
    		return GameVersion.QUDAO;
    	}
    }

    PublicInterface.pp=null;
    PublicInterface.gi=function()
    {
    	if(PublicInterface.pp==null)PublicInterface.pp=new PublicInterface();
    	return PublicInterface.pp;
    };

    PublicInterface.QUDAO=0;
    if("undefined" != typeof wx)
    {//微信平台
    	PublicInterface.QUDAO=1;
    }

    class E_VALUE
    {
    //	public int iVid;
    //	public String sValue;
    	constructor()
    	{
    		this.sValue="";
    	}
    }

    class DataEngine {
    	GetData(pde,filepath,retry_time,data)
        {
    		if(data==null)
    		{
    			if(retry_time>0)XDefine$1.sop("retry "+retry_time+","+filepath);
    			Laya.loader.load(filepath,Laya.Handler.create(pde, pde.GetData,[pde,filepath,retry_time+1]),null,Laya.Loader.BUFFER);
    			return;
    		}
            var pls=PackageTools.gi();
            pls.GetData3(data);

    		pde._LoadData(pls);
    		this.bLoadSuccess=true;
        }
    	constructor( pls, fn, blocal)//"data/mission.dat"
    	{
    		if(blocal)
    		{
    			this.GetData(this,XDefine$1.BASE_URL+"res/datapackage/"+fn,0);
    			// var pls=XOLE.gi().get_file_data("res/datapackage/"+fn);
    			// this.bLoadSuccess=true;
    			// this._LoadData(pls);
    		}
    		this.bLoadSuccess=false;
    	}
    	_LoadData(pls)
    	{
    		var i,j,k;
    		this.iValueIndex=new Int32Array(DataEngine.MAXVALUEINDEX);//
    		for(i=0;i<DataEngine.MAXVALUEINDEX;i++)this.iValueIndex[i]=-1;
    		pls.GetNextByte();
    		this.iDataCount=pls.GetNextInt();
    		this.datas=new Array(this.iDataCount);//
    		for(i=0;i<this.iDataCount;i++)
    		{
    			this.datas[i]=new E_DATA();
    			this.datas[i].iDid=pls.GetNextInt();
    			this.iValueIndex[this.datas[i].iDid]=i;
    			this.datas[i].iItemCount=pls.GetNextInt();
    			this.datas[i].items=new Array(this.datas[i].iItemCount);
    			for(j=0;j<this.datas[i].iItemCount;j++)
    			{
    				this.datas[i].items[j]=new E_ITEM();
    				this.datas[i].items[j].iItemId=pls.GetNextInt();
    				this.datas[i].items[j].iType=pls.GetNextInt();
    				this.datas[i].items[j].iValueCount=pls.GetNextInt();
    				this.datas[i].items[j].values=new Array(this.datas[i].items[j].iValueCount);
    				for(k=0;k<this.datas[i].items[j].iValueCount;k++)
    				{
    					this.datas[i].items[j].values[k]=new E_VALUE();
    					this.datas[i].items[j].values[k].iVid=pls.GetNextInt();
    					this.datas[i].items[j].values[k].sValue=pls.GetNextString();
    				}
    			}
    		}
    	}
    	fdata( did)
    	{
    		if(did>=DataEngine.MAXVALUEINDEX)
    		{
    			return null;
    		}
    		var i=this.iValueIndex[did];
    		if(i==-1)return null;
    		return this.datas[i];
    	}
    	intValue( did, number, vid)
    	{
    		return parseInt(this.strValue(did,number,vid));
    	}
    	strValue( did, number, vid)
    	{
    		var i,j,k,n;
    		if(did<0 || did>=DataEngine.MAXVALUEINDEX)
    		{
    			this.sResult="-1";
    			return this.sResult;
    		}
    		i=this.iValueIndex[did];
    		n=0;
    //		for(i=0;i<this.iDataCount;i++)
    		if(i!=-1)
    		{
    			if(this.datas[i].iDid==did)
    			{
    				for(j=0;j<this.datas[i].iItemCount;j++)
    				{
    //					if(itemid==-1 || this.datas[i].items[j].iItemId==itemid)
    //					{
    						for(k=0;k<this.datas[i].items[j].iValueCount;k++)
    						{
    							if(this.datas[i].items[j].values[k].iVid==vid)
    							{
    								if(n>=number)
    								{
    									this.sResult=this.datas[i].items[j].values[k].sValue;
    		//							GmPlay.sop(","+i+","+j+","+k+","+this.datas[i].items[j].values[k].sValue);
    									if(this.sResult.length<=0)this.sResult="-1";
    									return this.sResult;
    								}
    								else
    								{
    									n++;
    									break;
    								}
    							}
    						}
    //					}
    				}
    			}
    		}
    		return "-1";
    	}
    }
    DataEngine.MAXVALUEINDEX=1024;

    class FuYuan {

    	FuYuan()
    	{
    		this.bInited=false;
    		this.bShow=false;
    		this.bShowEffect=true;
    		this.bShowFrame=false;
    	}
    	
    	Draw()
    	{
    		//icon
    		if(MapManager.gi().vbk.mapdialog.bHideUI() || JQMode.jq.bJQLock())return;
    		if(!this.bShow)return;
    		var offx=Gameing.iTopIconOffX;
    		if(!this.bInited)
    		{
    			this.btn_open=new XButtonEx2$1(GmPlay$1.xani_nui6);
    			this.btn_open.InitButton("首充图标");
    			
    			this.aa_effect=GmPlay$1.xani_nui6.InitAnimaWithName("转圈效果", null);
    			
    			this.bInited=true;
    		}
    		this.btn_open.Move(offx, 0, 80, 80);
    		this.btn_open.Draw();
    		if(this.bShowEffect)
    		{
    			this.aa_effect.Draw(offx+40, 0+40);
    			this.aa_effect.NextFrame();
    		}
    		//框体
    		if(this.bShowFrame)
    		{
    		}
    		Gameing.iTopIconOffX+=90;
    	}
    	ProcTouch( msg, x, y)
    	{
    		//框体操作
    		
    		//点击icon
    		return false;
    	}
    }
    FuYuan.fy=new FuYuan();

    class VoiceInterface {
    	constructor()
    	{

    	}
    	Init()
    	{
    		return;
    		var ret;
    		com.yunva.im.sdk.lib.YvLoginInit.context=PublicInterface.mMain; 
    		ret=com.yunva.im.sdk.lib.YvLoginInit.initApplicationOnCreate(PublicInterface.mMain.getApplication(), "1000242");
    		GmPlay.sop("init voice 1 = "+ret);
    		
    		ret=YunvaImSdk.getInstance().init(PublicInterface.mMain, "1000242",  GameData$1.sSDTo+"yy_voice",false);
    		GmPlay.sop("init voice 2 = "+ret);
    		
    		MessageEventSource.getSingleton().addLinstener(MessageType.IM_RECORD_STOP_RESP, this);
    		MessageEventSource.getSingleton().addLinstener(MessageType.IM_RECORD_FINISHPLAY_RESP, this);
    		MessageEventSource.getSingleton().addLinstener(MessageType.IM_UPLOAD_FILE_RESP, this);
    		MessageEventSource.getSingleton().addLinstener(MessageType.IM_RECORD_VOLUME_NOTIFY, this);
    		MessageEventSource.getSingleton().addLinstener(MessageType.IM_SPEECH_STOP_RESP, this);
    		
    //		YunvaImSdk.getInstance().setAppVesion("1.0.0");
    		YunvaImSdk.getInstance().setRecordConfig(20,true, 2);
    		
    		YunvaImSdk.getInstance().setSpeech_language(1,0);//中文，简体
    		
    		this.CleanVoiceFile();
    		//MessageEventSource.getSingleton().removeLinstener(this);
    	}
    	
    	CleanVoiceFile()
    	{
    		return;
    		var dir,f;
    		dir=new File(GameData$1.sSDTo+"yy_voice");
    		var children = dir.list();
    		for (var i=0; i<children.length; i++)
    		{
    			if(children[i].indexOf(".amr")>0)
    			{
    				f=new File(dir, children[i]);
    				f.delete();
    			}
            }
    	}
    	Login( aid, rid)
    	{
    		return;
    		/*
    		List<String> channelList ;
    		channelList  =new ArrayList<String>();
    		//添加世界频道
    		channelList.add("0x001");

    		String tt="{\"uid\":\""+aid+"\",\"nickname\":\""+rid+"\"}";
    		GmPlay.sop(tt);
    		boolean ret=YunvaImSdk.getInstance().Binding(tt,"1",channelList);
    		GmPlay.sop("Binding="+ret);*/
    	}
    	StartRecord()
    	{
    		return;
    		/*
    		String fn="v"+GmMe.me.iRid+"t"+XDefine.get_ms()+".amr";
    		this.sRecordName=GameData.sSDTo+"yy_voice/"+fn;
    		boolean ret=YunvaImSdk.getInstance().startAudioRecord(this.sRecordName,"123");
    		GmPlay.sop("---------StartRecord------------"+ret);
    		if(ret)
    		{
    			this.bRecording=true;
    			GmPlay.x_wav.PauseAll();
    		}
    		return ret;*/
    	}
    	sGetRecordName()
    	{
    		return this.sRecordName;
    	}

    	StopRecord()
    	{
    		return;
    		this.bRecording=false;
    		this.sRecordName="empty";
    		GmPlay.sop("----------StopRecord-----------"+YunvaImSdk.getInstance().stopAudioRecord());
    		GmPlay.x_wav.ResumeAll();
    	}
    	PlayVoice()
    	{
    		return;
    		GmPlay.x_wav.PauseAll();
    		GmPlay.sop("----------PlayVoice-----------"+YunvaImSdk.getInstance().playAudio("", this.sRecordName, "123"));
    	}
    //	StopPlay()
    //	{
    //		YunvaImSdk.getInstance().stopPlayAudio();
    //	}
    	UpLoad()
    	{
    		return;
    		this.sUrlName="empty";
    		GmPlay.sop("----------UpLoad-----------"+YunvaImSdk.getInstance().uploadFile(this.sRecordName, "123456"));
    	}
    	PlayUrlVoice( url)
    	{
    		return;
    		if(this.bPlaying)
    		{
    			if(this.sPlayingUrl==url)
    			{//正在播放相同语音时，先停止播放
    				YunvaImSdk.getInstance().stopPlayAudio();
    				return;
    			}
    			GmPlay.sop("----------");
    //			return;
    		}
    		GmPlay.x_wav.PauseAll();
    		var ret=YunvaImSdk.getInstance().playAudio(url, "", "123");
    		this.sPlayingUrl=url;
    		GmPlay.sop("----------PlayUrlVoice-----------"+ret);		
    		if(ret)this.bPlaying=true;
    	}
    	StartRecognize()
    	{
    		return;
    		this.sRecognizeResult="empty";
    		YunvaImSdk.getInstance().startAudioRecognize(this.sRecordName,"123");
    	}
    	
    	handleMessageEvent( event) 
    	{
    		return;
    		var msg=event.getMessage();
    		GmPlay.sop("message--------------"+event.getbCode());
    		switch (event.getbCode()) 
    		{ 
    		case MessageType.IM_RECORD_STOP_RESP://录音结束
    			var iarp=msg.getResultBody();
    			if(iarp.getExt().equals("123"))
    			{
    				this.sRecordName=iarp.getStrfilepath();
    				this.iRecordTime=iarp.getTime();
    				GmPlay.sop("----------record finish-----------"+this.sRecordName+",,,"+this.iRecordTime);
    			}
    			this.bRecording=false;
    			break;
    		case MessageType.IM_RECORD_FINISHPLAY_RESP://播放结束
    			var iapr=msg.getResultBody();
    			if(iapr.getExt().equals("123"))
    			{
    				GmPlay.sop("-----------play finish----------"+iapr.getResult()+","+iapr.getDescribe());
    				this.bPlaying=false;
    			}
    			GmPlay.x_wav.ResumeAll();
    			break;
    			
    		case MessageType.IM_UPLOAD_FILE_RESP://上传结束
    			var iufr=msg.getResultBody();
    			if(iufr.getFileId().equals("123456"))
    			{
    				GmPlay.sop("---------------------"+iufr.getResult()+","+iufr.getMsg()+","+iufr.getFileUrl()+","+iufr.getPercent()+"%");
    				this.sUrlName=iufr.getFileUrl();
    			}
    			break;
    		case MessageType.IM_RECORD_VOLUME_NOTIFY://声音大小通知
    			var rvn=msg.getResultBody();
    			GmPlay.sop("---------------------"+rvn.getExt()+","+rvn.getVolume());
    			break;
    		case MessageType.IM_SPEECH_STOP_RESP://语音识别结束
    			var iarr=msg.getResultBody();
    			this.sRecognizeResult=iarr.getResultInfo();
    			GmPlay.sop("-------------------"+this.sRecognizeResult);
    			break;
    		}
    	}
    }

    class GmPlay$1 {
      constructor() {
        this.bTimerOnce = false;
        this.sCheckError = "验证错误，强制退出游戏";
        this.btn_checkok = null;
        this.btn_checkreset = null;
        GmPlay$1.iNowMillis = XDefine$1.get_ms();

        GmPlay$1.gp = this;

        GmMe$1.me = new GmMe$1();
        MyLand.ml = new MyLand();

        this.bCheck = false;
        this.iCheckFace = new Int32Array(4); //
        this.iCheckRot = new Int32Array(4); //
        this.iCheckAnima = new Int32Array(4); //

        this.mapChanging = { changed: false, type: 0, dest: 0 };

        this.bCheck2 = false;
        this.sCheckWord = new Array(4); //
        this.iCheckValue = new Array(4); //cx_arr_flag
        this.iCheckResult = new Int32Array(4); //cx_arr_flag
        this.iResultValue = new Array(4); //cx_arr_flag
        for (var i = 0; i < 4; i++) {
          this.iCheckValue[i] = new Int32Array(9);
          this.iResultValue[i] = new Int32Array(9);
        }
        // for(i=0;i<100;i++)
        // {
        // if(MapData.llcollision_ai(352,224,352,260,87,138,352,237))sop("bbbbbb");
        // else sop("nnnnnnnnnnnnn");
        // }
        // for(i=0;i<100;i++)
        // {
        // if(MapData.llcollision(352,224,352,260,87,138,352,237))sop("bbbbbb");
        // else sop("nnnnnnnnnnnnn");
        // }
        // downloadfile();
        // GmPlay.xntf=new NetFast("192.168.1.101",8002);
        // GmPlay.xntf=new NetFast("222.73.182.166",8002);
        this.pls = new PackageTools();
        GmPlay$1.iDelay = 0;

        GmPlay$1.x_record = new XRecordFast(this.pls);
        GmPlay$1.x_record.ReadFrom(XDefine$1.RECORDFILENAME);

        // for(int
        // i=0;i<100;i++)EasyMessage.easymsg.AddMessage(de_mission.strValue(2,
        // 3, 16));
        /*
         * byte tmp[]; String hello="好"; try { tmp=hello.getBytes("GBK");
         * sop(""+tmp[0]); } catch (UnsupportedEncodingException e) { // TODO
         * Auto-generated catch block e.printStackTrace(); }
         */
        this.xm3f = M3DFast$1.gi();

        GmPlay$1.xani_local = new XAnima();
        GmPlay$1.xani_local.LoadAnima_fullpath(
          "res/localres/anima",
          this.pls,
          true,
          this._LoadFinish
        );
        this.iLoadStat = 0;
      }
      _LoadFinish() {
        XStat$1.gi().PushStat(XStat$1.GS_LEADPAGE);
      }
      init_data(blocal) {
        MyMission.de_mission = new DataEngine(this.pls, "data/mission.dat", blocal);
        GmPlay$1.de_goods = new DataEngine(this.pls, "data/goods.dat", blocal);
        GmPlay$1.de_pet = new DataEngine(this.pls, "data/pet.dat", blocal);
        GmPlay$1.de_map = new DataEngine(this.pls, "data/map.dat", blocal);
        GmPlay$1.de_skill = new DataEngine(this.pls, "data/skill.dat", blocal);
        GmPlay$1.de_npc = new DataEngine(this.pls, "data/npc.dat", blocal);
        GmPlay$1.de_mounts = new DataEngine(this.pls, "data/mounts.dat", blocal);
        GmPlay$1.de_fuben = new DataEngine(this.pls, "data/fuben.dat", blocal);
        GmPlay$1.de_chuan_song = new DataEngine(
          this.pls,
          "data/chuan_song.dat",
          blocal
        );
        GmPlay$1.de_grow = new DataEngine(this.pls, "data/grow.dat", blocal);
      }
      init_data_finished() {
        if (
          MyMission.de_mission.bLoadSuccess &&
          GmPlay$1.de_goods.bLoadSuccess &&
          GmPlay$1.de_pet.bLoadSuccess &&
          GmPlay$1.de_map.bLoadSuccess &&
          GmPlay$1.de_skill.bLoadSuccess &&
          GmPlay$1.de_npc.bLoadSuccess &&
          GmPlay$1.de_mounts.bLoadSuccess &&
          GmPlay$1.de_fuben.bLoadSuccess &&
          GmPlay$1.de_chuan_song.bLoadSuccess &&
          GmPlay$1.de_grow.bLoadSuccess
        )
          return true;
        return false;
      }
      init_anima1(blocal) {
        console.log("初始化动画");
        var ss = "res/datapackage/";
        var pls = this.pls;
        GmPlay$1.xani_ui = new XAnima(this.xm3f);
        GmPlay$1.xani_ui.LoadAnima_fullpath(ss + "ui", pls, blocal);
        GmPlay$1.xani_ui2 = new XAnima(this.xm3f);
        GmPlay$1.xani_ui2.LoadAnima_fullpath(ss + "ui2", pls, blocal);
        GmPlay$1.xani_ui3 = new XAnima(this.xm3f);
        GmPlay$1.xani_ui3.LoadAnima_fullpath(ss + "ui3", pls, blocal);
        GmPlay$1.xani_ui4 = new XAnima(this.xm3f);
        GmPlay$1.xani_ui4.LoadAnima_fullpath(ss + "ui4", pls, blocal);
        // GmPlay.xani_ui3.LoadAnima_fullpath("ui3", pls,GameData.bFromSD);
        GmPlay$1.xani_nui1 = new XAnima(this.xm3f);
        GmPlay$1.xani_nui1.LoadAnima_fullpath(ss + "uis/nui1", pls, blocal);

        GmPlay$1.xani_nui2 = new XAnima(this.xm3f);
        GmPlay$1.xani_nui2.LoadAnima_fullpath(ss + "uis/nui2", pls, blocal);

        GmPlay$1.xani_nui3 = new XAnima(this.xm3f);
        // GmPlay.xani_nui3.LoadAnima_fullpath("uis/nui3", pls, GameData.bFromSD);
        GmPlay$1.xani_nui3.LoadAnima_fullpath(ss + "uis/nui3", pls, blocal);

        GmPlay$1.xani_nui4 = new XAnima(this.xm3f);
        GmPlay$1.xani_nui4.LoadAnima_fullpath(ss + "uis/nui4", pls, blocal);

        GmPlay$1.xani_nui5 = new XAnima(this.xm3f);
        GmPlay$1.xani_nui5.LoadAnima_fullpath(ss + "uis/nui5", pls, blocal);

        GmPlay$1.xani_nui6 = new XAnima(this.xm3f);
        GmPlay$1.xani_nui6.LoadAnima_fullpath(ss + "uis/nui6", pls, blocal);

        GmPlay$1.xani_nicon = new XAnima(this.xm3f);
        GmPlay$1.xani_nicon.LoadAnima_fullpath(ss + "skills/nicon", pls, blocal);

        GmPlay$1.xani_aura = new XAnima(this.xm3f);
        GmPlay$1.xani_aura.LoadAnima_fullpath(ss + "anima/aura", pls, blocal);

        GmPlay$1.xani_frame = new XAnima(this.xm3f);
        GmPlay$1.xani_frame.LoadAnima_fullpath(ss + "uis/ui_frame", pls, blocal);
        GmPlay$1.xani_button = new XAnima(this.xm3f);
        GmPlay$1.xani_button.LoadAnima_fullpath(ss + "uis/ui_button", pls, blocal);
        GmPlay$1.xani_icon = new XAnima(this.xm3f);
        GmPlay$1.xani_icon.LoadAnima_fullpath(ss + "uis/ui_icon", pls, blocal);
        GmPlay$1.xani_other = new XAnima(this.xm3f);
        GmPlay$1.xani_other.LoadAnima_fullpath(ss + "uis/ui_other", pls, blocal);

        GmPlay$1.xani_newrole = new Array(6); //
        GmPlay$1.xani_weap = new Array(6); //
        GmPlay$1.xani_color = new Array(6); //
        for (var i = 0; i < 6; i++) {
          GmPlay$1.xani_newrole[i] = new XAnima(this.xm3f);
          GmPlay$1.xani_newrole[i].LoadAnima_fullpath(
            ss + "nroles/role" + i,
            pls,
            blocal
          );

          GmPlay$1.xani_weap[i] = new Array(10);
          for (var j = 0; j < 10; j++) {
            GmPlay$1.xani_weap[i][j] = new XAnima(this.xm3f);
            GmPlay$1.xani_weap[i][j].LoadAnima_fullpath(
              ss + "nroles/role" + i + "/weap_" + i + "_" + j,
              pls,
              blocal
            );
          }
          GmPlay$1.xani_color[i] = new Array(5);
          for (var j = 0; j < 5; j++) {
            GmPlay$1.xani_color[i][j] = new XAnima(this.xm3f);
            GmPlay$1.xani_color[i][j].LoadAnima_fullpath(
              ss + "nroles/role" + i + "/c" + j,
              pls,
              blocal
            );
          }
        }
        GmPlay$1.xani_ngoods = new XAnima(this.xm3f);
        GmPlay$1.xani_ngoods.LoadAnima_fullpath(ss + "anima/ngoods", pls, blocal);

        GmPlay$1.xani_stand = new Array(5); //
        GmPlay$1.xani_shot = new Array(5); //
        for (i = 0; i < 5; i++) {
          GmPlay$1.xani_stand[i] = new XAnima(this.xm3f);
          GmPlay$1.xani_shot[i] = new XAnima(this.xm3f);
        }
        GmPlay$1.xani_shot[0].LoadAnima_fullpath(ss + "anima/shot0", pls, blocal);
        GmPlay$1.xani_shot[1].LoadAnima_fullpath(ss + "anima/shot1", pls, blocal);
        GmPlay$1.xani_stand[0].LoadAnima_fullpath(ss + "anima/stand0", pls, blocal);
        GmPlay$1.xani_stand[1].LoadAnima_fullpath(ss + "anima/stand1", pls, blocal);
        GmPlay$1.xani_stand[2].LoadAnima_fullpath(ss + "anima/stand2", pls, blocal);

        ///////////////////////
        GmPlay$1.xani_face = new XAnima(this.xm3f);
        GmPlay$1.xani_face.LoadAnima_fullpath(ss + "anima/face", pls, blocal);

        GmPlay$1.xani_head = new XAnima(this.xm3f);
        GmPlay$1.xani_head.LoadAnima_fullpath(ss + "anima/head", pls, blocal);

        GmPlay$1.xani_skill = new XAnima(this.xm3f);
        GmPlay$1.xani_skill.LoadAnima_fullpath(ss + "skill", pls, blocal);

        GmPlay$1.xani_skills = new Array(13);
        var skill_anima_name = [
          "other",
          "sc1",
          "sc2",
          "sc3",
          "sc4",
          "sc5",
          "sc6",
          "sc7",
          "sc8",
          "sc9",
          "equip",
          "pet",
          "equip2",
        ];
        for (var i = 0; i < 13; i++) {
          GmPlay$1.xani_skills[i] = new XAnima(this.xm3f);
          GmPlay$1.xani_skills[i].LoadAnima_fullpath(
            ss + "skills/" + skill_anima_name[i],
            pls,
            blocal
          ); // 其他
        }

        GmPlay$1.xani_effect = new XAnima(this.xm3f);
        GmPlay$1.xani_effect.LoadAnima_fullpath(ss + "effect", pls, blocal);

        GmPlay$1.xani_grow = new XAnima(this.xm3f);
        GmPlay$1.xani_grow.LoadAnima_fullpath(ss + "grow", pls, blocal);

        GmPlay$1.xani_pets = new Array(40); //
        for (var i = 0; i < 40; i++) {
          GmPlay$1.xani_pets[i] = new XAnima(this.xm3f);
          var j = GmPlay$1.de_pet.intValue(i, 0, 2);
          if (j == -1)
            GmPlay$1.xani_pets[i].LoadAnima_fullpath(ss + "pet/1", pls, blocal);
          else GmPlay$1.xani_pets[i].LoadAnima_fullpath(ss + "pet/" + i, pls, blocal);
          // GmPlay.sop("--------------pets="+j+":"+i);
        }

        GmPlay$1.xani_nmounts = new Array(3); //
        for (var i = 0; i < 3; i++) {
          GmPlay$1.xani_nmounts[i] = new Array(3);
          // s = GmPlay.de_mounts.strValue(i+1, 0, 1);// 名称
          for (var j = 0; j < 3; j++) {
            GmPlay$1.xani_nmounts[i][j] = new XAnima(this.xm3f);

            // if (s.length > 0 && s.compareTo("-1") != 0)
            {
              // 载入动画
              GmPlay$1.xani_nmounts[i][j].LoadAnima_fullpath(
                ss + "anima/nmounts/" + (i + 1) + "/" + (j + 1),
                pls,
                blocal
              );
              // GmPlay.xani_nmounts[i].LoadAnima_fullpath("anima/nmounts/" + (i+1),
              // pls,blocal);
            }
          }
        }
      }
      init_anima1_finished() {
        if (!GmPlay$1.xani_ui.bLoadSuccess) return false;
        if (!GmPlay$1.xani_ui2.bLoadSuccess) return false;
        if (!GmPlay$1.xani_ui3.bLoadSuccess) return false;
        if (!GmPlay$1.xani_ui4.bLoadSuccess) return false;
        // GmPlay.xani_ui3.LoadAnima_fullpath("ui3", pls,GameData.bFromSD);
        if (!GmPlay$1.xani_nui1.bLoadSuccess) return false;
        if (!GmPlay$1.xani_nui2.bLoadSuccess) return false;
        if (!GmPlay$1.xani_nui3.bLoadSuccess) return false;
        if (!GmPlay$1.xani_nui4.bLoadSuccess) return false;
        if (!GmPlay$1.xani_nui5.bLoadSuccess) return false;
        if (!GmPlay$1.xani_nui6.bLoadSuccess) return false;
        if (!GmPlay$1.xani_nicon.bLoadSuccess) return false;
        if (!GmPlay$1.xani_aura.bLoadSuccess) return false;
        if (!GmPlay$1.xani_frame.bLoadSuccess) return false;
        if (!GmPlay$1.xani_button.bLoadSuccess) return false;
        if (!GmPlay$1.xani_icon.bLoadSuccess) return false;
        if (!GmPlay$1.xani_other.bLoadSuccess) return false;

        for (var i = 0; i < 6; i++) {
          if (!GmPlay$1.xani_newrole[i].bLoadSuccess) return false;

          for (var j = 0; j < 10; j++) {
            if (!GmPlay$1.xani_weap[i][j].bLoadSuccess) return false;
          }
          for (var j = 0; j < 5; j++) {
            if (!GmPlay$1.xani_color[i][j].bLoadSuccess) return false;
          }
        }

        if (!GmPlay$1.xani_ngoods.bLoadSuccess) return false;

        if (!GmPlay$1.xani_shot[0].bLoadSuccess) return false;
        if (!GmPlay$1.xani_shot[1].bLoadSuccess) return false;
        if (!GmPlay$1.xani_stand[0].bLoadSuccess) return false;
        if (!GmPlay$1.xani_stand[1].bLoadSuccess) return false;
        if (!GmPlay$1.xani_stand[2].bLoadSuccess) return false;
        ///////////////
        if (!GmPlay$1.xani_face.bLoadSuccess) return false;

        if (!GmPlay$1.xani_head.bLoadSuccess) return false;

        if (!GmPlay$1.xani_skill.bLoadSuccess) return false;

        for (var i = 0; i < 13; i++) {
          if (!GmPlay$1.xani_skills[i].bLoadSuccess) return false;
        }

        if (!GmPlay$1.xani_effect.bLoadSuccess) return false;

        if (!GmPlay$1.xani_grow.bLoadSuccess) return false;

        for (var i = 0; i < 40; i++) {
          if (!GmPlay$1.xani_pets[i].bLoadSuccess) return false;
          // GmPlay.sop("--------------pets="+j+":"+i);
        }

        for (var i = 0; i < 3; i++) {
          for (var j = 0; j < 3; j++) {
            if (!GmPlay$1.xani_nmounts[i][j].bLoadSuccess) return false;
          }
        }
        return true;
      }
      InitAnimaAndData() {
        switch (this.iLoadStat) {
          case 0:
            // if (GameVersion.bDebugMode)	GmPlay.xntf = new NetFast("121.40.40.172", 8002);//127.0.0.1,,121.40.40.172
            // else GmPlay.xntf = new NetFast(GmPlay.sLoginIp, GmPlay.iLoginPort);
            GmPlay$1.xntf = new NetFast("ws://121.40.40.172:11000/login");
            // GmPlay.xntf = new NetFast("wss://login.qi-guo.cn/login");
            //cxunmzhttps://121.40.40.172:11000/
            this.init_data(true);
            this.iLoadStat = 1;
            break;
          case 1:
            if (this.init_data_finished()) this.iLoadStat = 2;
            break;
          case 2:
            MyAI.gi().InitLink();
            this.iLoadStat = 3;
            break;
          case 3:
            this.init_anima1(true);
            this.iLoadStat = 4;
            break;
          case 4:
            if (this.init_anima1_finished()) this.iLoadStat = 5;
            break;
          case 5:
            GmPlay$1.aa_auras = new Array(128); //
            for (var i = 0; i < 128; i++) {
              GmPlay$1.aa_auras[i] = new AnimaAction();
              if (i < 2)
                GmPlay$1.xani_aura.InitAnimaWithName("aura" + i, GmPlay$1.aa_auras[i]);
            }

            GmPlay$1.aa_fightready = new AnimaAction();
            GmPlay$1.xani_skills[0].InitAnimaWithName("准备中", GmPlay$1.aa_fightready);
            this.iLoadStat = 6;
            break;
          case 6:
            if (MapManager.gi().LoadLogic()) {
              GmMe$1.me.Init();
              GmPlay$1.m_vi = new VoiceInterface();
              GmPlay$1.m_vi.Init();
              GmPlay$1.pxe = new XmsEngine();
              GmPlay$1.x_wav = new WavFast();
              this.iLoadStat = 7;
            }
            break;
          case 7:
            return true;
            break;
        }
        return false;
        // TODO Auto-generated method stub

        //honglajiao-qiguo.cn

        this.gmprotocol = GmProtocol$1.gi();

        GmPlay$1.bCheckRes = true; // 改成下次登录需要更新，如果中间异常退出，就自动检测客户顿
        GmPlay$1.x_record.SaveTo(XDefine$1.RECORDFILENAME);
        LeadPage.iProcDest = 80;

        // GmPlay.x_wav.StartBackMusic("start", true);

        // LeadPage.iProcDest=100;

        GmPlay$1.bInited = true;
        LeadPage.iProcDest = 100;
      }

      GmTimer() {
        //ExtHelp.Open();
        GmPlay$1.iNowMillis = XDefine$1.get_ms();
        GmPlay$1.ResetSound();
        var i, j;
        //XDefine.sop("timer"+Laya.stage.width+","+Laya.stage.height);
        if (MapManager.gi().iMapChangeing == 0) {
          // && !ProgressBar.gi().bShow)
          this.ProcTouch();
        } else {
          TouchManager.gi().clear();
          SteeringWheel.sw.bLocked = false;
        }
        //M3DFast.pm3f.FillRect(100,100,50,50,0xffffff,1,50);
        XStat$1.gi().Draw();

        if (XStat$1.gi().bGameing()) {
          FastGoods.gi().Draw();
        }
        MyAI.gi().AILogic();

        PublicChat_SmallFrame.gi().DrawSpeaker(); // 小喇叭
        BeginersGuide.gi().Draw();
        ProgressBar.gi().Draw();

        if (MapManager.gi().iMapChangeing > 0) {
          i = MapManager.gi().iMapChangeing % 100;
          i = (i * 29) << 24;
          this.xm3f.FillRect_2D(0, 0, GmConfig$1.SCRW, GmConfig$1.SCRH, i);
          // sop("ccc"+i);
          if (MapManager.gi().iMapChangeing >= 100) {
            if (MapManager.gi().iMapChangeing < 108)
              MapManager.gi().iMapChangeing++;
          } else {
            MapManager.gi().iMapChangeing--;
          }
        }

        if (GmPlay$1.xntf != null) {
          GmPlay$1.xntf.NetLogic();
          /*
    				if (GmPlay.xntf.bAllow)
    				{
    					
    					// sop("stat"+GmPlay.xntf.iConnectingStat+" ,delay"+GmPlay.xntf.iLastConnectDelay);
    					GmPlay.xntf.iLastConnectDelay++;
    					if (GmPlay.xntf.iLastConnectDelay > 300) {
    						GmPlay.xntf.CloseClient();
    						GmPlay.xntf.bReconnect = true;
    						GmPlay.xntf.iLastConnectDelay = 0;
    						EasyMessage.easymsg.AddMessage("断线重连");

    						// FrameMessage.fm.Open("10秒断线重连");
    					}
    				}
    				if (GmPlay.xntf.iLastConnectDelay > GmPlay.xntf.iMaxConnectDelay)	GmPlay.xntf.iMaxConnectDelay = GmPlay.xntf.iLastConnectDelay;
    				*/
        }
        /*			if (GmConfig.bDebug) {
    				for (i = 0; i < XStat.gi().iStatPoint + 1; i++) {
    					this.xm3f.DrawTextEx(GmConfig.SCRW, 100 + i * 30, ""
    							+ XStat.gi().iStatStack[i] + "[" + i + "]",
    							0xffffffff, 30, 50, 1, 1, 0, -3, -1);
    				}
    				// this.xm3f.DrawTextEx(GmConfig.SCRW,GmConfig.SCRH-30,"["+GmPlay.xntf.iConnectingStat+"]"+GmPlay.xntf.iLastConnectDelay+"/"+GmPlay.xntf.iMaxConnectDelay,0xffffffff,30,50,1,1,0,-3,-1);

    				// GmPlay.xani_pets[0].DrawAnima(200, 200, "战斗站立_左", 0);
    				XDefine.ShowFM();
    			}
    			// XDefine.ShowFM();
    			// XDefine.ShowFM();
    			//
    			// M3DFast.xm3f.DrawTextEx(0, 0,
    			// "NativeHeapSizeTotal:"+Debug.getNativeHeapSize()/1024,
    			// 0xffffff00, 30, 101, 1, 1, 0, 0, 0);
    			// M3DFast.xm3f.DrawTextEx(0, 30,
    			// "NativeAllocatedHeapSize:"+Debug.getNativeHeapAllocatedSize()/1024,
    			// 0xffffff00, 30, 101, 1, 1, 0, 0, 0);
    			// M3DFast.xm3f.DrawTextEx(0, 60,
    			// "NativeAllocatedFree:"+Debug.getNativeHeapFreeSize()/1024,
    			// 0xffffff00, 30, 101, 1, 1, 0, 0, 0);
    			// GmPlay.sop("NativeHeapSizeTotal:"+(Debug.getNativeHeapSize()>>10));
    			// GmPlay.sop("NativeAllocatedHeapSize:"+(Debug.getNativeHeapAllocatedSize()>>10));
    			// GmPlay.sop("NativeAllocatedFree:"+(Debug.getNativeHeapFreeSize()>>10));
    */ this.OnReceive();
        GmPlay$1.iDelay++;
        // if(1==1)return;

        FrameMessageEx.fm.Draw();
        FrameMessage.fm.Draw();
        EasyMessage.easymsg.Draw();
        // this.xm3f.DrawText(100, 100, "ookk="+this.gi().SCRW+","+this.gi().SCRH,
        // 0xffffff00);

        BeginersGuide.gi().InitGuide();

        if (this.bCheck) {
          // 画头像
          var x, y, w, h;
          w = 150 * 4;
          h = 200;
          x = (GmConfig$1.SCRW - w) / 2;
          y = (GmConfig$1.SCRH - h) / 2;

          // j=GmPlay.iDelay%120;
          // if(j>60)j=120-j;
          // if(j<60)j+=20;
          // else j=(120-j)+20;
          // this.xm3f.FillRect_2D(x, y, x+w, y+h, j<<24);
          this.xm3f.FillRect_2D(x, y, x + w, y + h, 0x80000000);

          for (i = 0; i < 4; i++) {
            // j=(GmPlay.iDelay*6+i*30)%160;
            // if(j>80)j=160-j;
            j = 60;
            if (this.iCheckFace[i] == 0)
              GmPlay$1.xani_newrole[this.iCheckAnima[i]].InitAnimaWithName(
                "站立_下",
                GmPlay$1.aaa
              );
            else if (this.iCheckFace[i] == 1)
              GmPlay$1.xani_newrole[this.iCheckAnima[i]].InitAnimaWithName(
                "站立_上",
                GmPlay$1.aaa
              );
            else if (this.iCheckFace[i] == 2)
              GmPlay$1.xani_newrole[this.iCheckAnima[i]].InitAnimaWithName(
                "站立_左",
                GmPlay$1.aaa
              );
            else if (this.iCheckFace[i] == 3)
              GmPlay$1.xani_newrole[this.iCheckAnima[i]].InitAnimaWithName(
                "站立_右",
                GmPlay$1.aaa
              );
            else break;
            GmPlay$1.aaa.SetFrame(GmPlay$1.iDelay);
            if (this.iCheckRot[i] < 0)
              GmPlay$1.aaa.DrawEx(
                x + i * 150 + 150 / 2,
                y + 130,
                j,
                1,
                1,
                360 + this.iCheckRot[i],
                -1,
                -1
              );
            else
              GmPlay$1.aaa.DrawEx(
                x + i * 150 + 150 / 2,
                y + 130,
                j,
                1,
                1,
                this.iCheckRot[i],
                -1,
                -1
              );
          }
          if (this.iCheckLast > 0) {
            this.iCheckLast--;
            this.xm3f.DrawTextEx(
              x + 150 * 2,
              y + h - 30,
              "等待" + parseInt(this.iCheckLast / 15),
              0xffffffff,
              30,
              101,
              1,
              1,
              0,
              -2,
              -2
            );
          } else {
            if ((GmPlay$1.iDelay / 5) % 2 == 0)
              this.xm3f.DrawTextEx(
                x + 150 * 2,
                y + h - 30,
                "选择一个面向你的角色",
                0xffffffff,
                30,
                101,
                1,
                1,
                0,
                -2,
                -2
              );
          }
        }
        if (this.bCheck2) {
          // 成语验证
          this.xm3f.FillRect_2D(
            this.C2X,
            this.C2Y,
            this.C2X + this.C2W + 100,
            this.C2Y + this.C2H + 100,
            0x80000000
          );
          for (i = 0; i < 4; i++) {
            // 大小，方向，压扁w，h，颜色，x，y
            // this.xm3f.DrawTextEx(this.C2X+this.iCheckValue[i][5],this.C2Y+this.iCheckValue[i][6],
            // this.sCheckWord[i], this.iCheckValue[i][4],
            // this.iCheckValue[i][0], 101,
            // 0.01f*this.iCheckValue[i][2],
            // 0.01f*this.iCheckValue[i][3],
            // this.iCheckValue[i][1], -2, -2);
            this.xm3f.DrawTextEx(
              this.C2X + this.iCheckValue[i][5],
              this.C2Y + this.iCheckValue[i][6],
              this.sCheckWord[i],
              this.iCheckValue[i][4],
              this.iCheckValue[i][0],
              101,
              0.01 * this.iCheckValue[i][2],
              0.01 * this.iCheckValue[i][3],
              this.iCheckValue[i][1],
              this.C2X +
                this.iCheckValue[i][5] +
                0.005 * this.iCheckValue[i][2] * this.iCheckValue[i][0],
              this.C2Y +
                this.iCheckValue[i][6] +
                0.005 * this.iCheckValue[i][3] * this.iCheckValue[i][0]
            );
            this.iCheckValue[i][5] += this.iCheckValue[i][7];
            this.iCheckValue[i][6] += this.iCheckValue[i][8];
            if (this.iCheckValue[i][5] < 0) {
              if (this.iCheckValue[i][7] < 0)
                this.iCheckValue[i][7] = -this.iCheckValue[i][7];
            }
            if (this.iCheckValue[i][5] > this.C2W - this.iCheckValue[i][0]) {
              if (this.iCheckValue[i][7] > 0)
                this.iCheckValue[i][7] = -this.iCheckValue[i][7];
            }
            if (this.iCheckValue[i][6] < 0) {
              if (this.iCheckValue[i][8] < 0)
                this.iCheckValue[i][8] = -this.iCheckValue[i][8];
            }
            if (this.iCheckValue[i][6] > this.C2H - this.iCheckValue[i][0]) {
              if (this.iCheckValue[i][8] > 0)
                this.iCheckValue[i][8] = -this.iCheckValue[i][8];
            }
          }
          this.xm3f.DrawTextEx(
            this.C2X + 20,
            this.C2Y + this.C2H,
            "请按顺序点击文字组成成语",
            0xffffffff,
            30,
            101,
            1,
            1,
            0,
            0,
            0
          );
          for (i = 0; i < this.iCRP; i++) {
            j = this.iCheckResult[i];
            this.xm3f.DrawTextEx(
              this.C2X + 20 + 80 * i,
              this.C2Y + this.C2H + 40,
              this.sCheckWord[j],
              this.iResultValue[i][4],
              this.iResultValue[i][0],
              101,
              0.01 * this.iResultValue[i][2],
              0.01 * this.iResultValue[i][3],
              this.iResultValue[i][1],
              this.C2X +
                20 +
                80 * i +
                0.005 * this.iResultValue[i][2] * this.iResultValue[i][0],
              this.C2Y +
                this.C2H +
                10 +
                0.005 * this.iResultValue[i][3] * this.iResultValue[i][0]
            );
          }
          this.btn_checkreset.Draw();
          this.btn_checkok.Draw();
        }

        PublicInterface.gi().Draw();
      }
      ProcTouch() {
        var msg, x, y;
        while (TouchManager.gi().poptouch()) {
          msg = TouchManager.gi().procing.iTouchStat;
          x = TouchManager.gi().procing.iX;
          y = TouchManager.gi().procing.iY;
          //XDefine.sop("p  x="+x+",y="+y);
          if (
            PublicInterface.gi().ProcTouch(
              TouchManager.gi().procing.iTouchStat,
              TouchManager.gi().procing.iX,
              TouchManager.gi().procing.iY
            )
          )
            continue;
          if (this.bCheck2) {
            var i, j;
            if (this.btn_checkok.ProcTouch(msg, x, y)) {
              if (this.btn_checkok.bCheck()) {
                // 提交结果
                this.bCheck2 = false;
                GmProtocol$1.gi().s_Check2Reply(
                  this.iCheckResult[0] * 1000 +
                    this.iCheckResult[1] * 100 +
                    this.iCheckResult[2] * 10 +
                    this.iCheckResult[3]
                );
              }
              return true;
            }
            if (this.btn_checkreset.ProcTouch(msg, x, y)) {
              if (this.btn_checkreset.bCheck()) {
                // 重新点击
                this.iCRP = 0;
                this.iCheckResult[0] = 0;
                this.iCheckResult[1] = 0;
                this.iCheckResult[2] = 0;
                this.iCheckResult[3] = 0;
              }
              return true;
            }
            if (TouchManager.gi().procing.iTouchStat == 1) {
              for (i = 0; i < 4; i++) {
                if (
                  XDefine$1.bInRect(
                    TouchManager.gi().procing.iX,
                    TouchManager.gi().procing.iY,
                    this.C2X + this.iCheckValue[i][5],
                    this.C2Y + this.iCheckValue[i][6],
                    80,
                    80
                  )
                ) {
                  if (this.iCRP < 4) {
                    this.iCheckResult[this.iCRP] = i;
                    for (j = 0; j < 7; j++)
                      this.iResultValue[this.iCRP][j] = this.iCheckValue[i][j];
                    this.iCRP++;
                    // 记录文字，改变所有
                    this.ResetCheckValue();
                  }
                }
              }
            }
            return true;
          }
          if (this.bCheck) {
            var i, xx, yy, w, h;
            w = 150 * 4;
            h = 200;
            xx = (GmConfig$1.SCRW - w) / 2;
            yy = (GmConfig$1.SCRH - h) / 2;
            for (i = 0; i < 4; i++) {
              if (this.iCheckLast > 0) break;
              if (TouchManager.gi().procing.iTouchStat == 3) {
                if (
                  XDefine$1.bInRect(
                    TouchManager.gi().procing.iX,
                    TouchManager.gi().procing.iY,
                    xx + i * 150,
                    yy,
                    150,
                    200
                  )
                ) {
                  if (this.iCheckFace[i] == 0) {
                    this.bCheck = false;
                    GmProtocol$1.gi().s_CheckReply(i);
                  } else {
                    GmPlay$1.xntf.bAllow = false;
                    if (XStat$1.gi().iXStat != XStat$1.GS_KICKOUT)
                      XStat$1.gi().PushStat(XStat$1.GS_KICKOUT);
                    XStat$1.gi().LastStat(0).sDetail = this.sCheckError;
                    this.bCheck = false;
                    // XDefine.Exit();
                  }
                }
              }
            }

            return true;
          }
          if (
            BeginersGuide.gi().ProcTouch(
              TouchManager.gi().procing.iTouchStat,
              TouchManager.gi().procing.iX,
              TouchManager.gi().procing.iY
            )
          )
            continue;

          if (
            FrameMessage.fm.ProcTouch(
              TouchManager.gi().procing.iTouchStat,
              TouchManager.gi().procing.iX,
              TouchManager.gi().procing.iY
            )
          )
            continue;
          if (
            FrameMessageEx.fm.ProcTouch(
              TouchManager.gi().procing.iTouchStat,
              TouchManager.gi().procing.iX,
              TouchManager.gi().procing.iY
            )
          )
            continue;
          XStat$1.gi().ProcTouch(
            TouchManager.gi().procing.iTouchStat,
            TouchManager.gi().procing.iX,
            TouchManager.gi().procing.iY,
            TouchManager.gi().procing.iSourceX,
            TouchManager.gi().procing.iSourceY
          );
        }
        return false;
      }
      ResetCheckValue() {
        var i;
        for (i = 0; i < 4; i++) {
          this.iCheckValue[i][0] = XDefine$1.GetRand(60, 80); // 大小
          if (XDefine$1.GetRand(0, 1) == 0)
            this.iCheckValue[i][1] = XDefine$1.GetRand(0, 30);
          else this.iCheckValue[i][1] = XDefine$1.GetRand(330, 360);
          this.iCheckValue[i][2] = XDefine$1.GetRand(50, 100); // w缩放
          this.iCheckValue[i][3] = XDefine$1.GetRand(50, 100); // h缩放
          this.iCheckValue[i][4] =
            0xff000000 |
            (XDefine$1.GetRand(128, 255) << 16) |
            (XDefine$1.GetRand(128, 255) << 8) |
            XDefine$1.GetRand(128, 255); // 颜色
          this.iCheckValue[i][5] = XDefine$1.GetRand(0, this.C2W);
          this.iCheckValue[i][6] = XDefine$1.GetRand(0, this.C2H);
          this.iCheckValue[i][7] = XDefine$1.GetRand(2, 4);
          this.iCheckValue[i][8] = 6 - this.iCheckValue[i][7];
          if (XDefine$1.GetRand(0, 1) == 0)
            this.iCheckValue[i][7] = -this.iCheckValue[i][7];
          if (XDefine$1.GetRand(0, 1) == 0)
            this.iCheckValue[i][8] = -this.iCheckValue[i][8];
        }
      }
      OnReceive() {
        if (GmPlay$1.xntf == null) return;
        var iid = 0;
        var pls = this.pls;
        while (GmPlay$1.xntf.GetQueue()) {
          XDefine$1.arraycopy(
            GmPlay$1.xntf.msg.recvout.data,
            0,
            pls.databuf,
            0,
            GmPlay$1.xntf.msg.recvout.iSize
          );
          pls.iOffset = 0;
          pls.iLength = GmPlay$1.xntf.msg.recvout.iSize;
          //this.pls.SetDataAndOffset(GmPlay.xntf.msg.recvout.data, 0,GmPlay.xntf.msg.recvout.iSize);
          iid = pls.GetNextShort();

          // sop1("iid="+iid+"="+GmPlay.xntf.msg.recvout.iSize);
          //				 sop("-----------------------------------Recv msg : "+iid);
          if (iid != 503 && iid != 2032)
            XDefine$1.sop("------------------Recv msg : " + iid);
          this.OnReceiveOrder(iid);
        }
      }

      /**
       *
       * @param {number} id
       * @returns
       */
      OnReceiveOrder(id) {
        var i, j, k, m, n, o, p, q;
        var ts1, ts2;
        var pls = this.pls;
        switch (id) {
          case 500: // 得到基本的Aid,session,pid
            GmProtocol$1.gi().GetBase(pls);
            GmPlay$1.bConnected = true;
            GmProtocol$1.gi().s_CheckVersion();
            break;
          case 502: // 同步心跳,游戏开始后提交自己当前位置和前行路径
            // if(XStat.gi().bGameing())GmProtocol.gi().s_UploadMyPos();
            break;
          case 503:
            GmProtocol$1.gi().iEchoId = pls.GetNextByte();
            GmPlay$1.xntf.msg.startmessage.data[
              GmPlay$1.xntf.msg.startmessage.iSize - 1
            ] = GmProtocol$1.gi().iEchoId;
            //	GmPlay.sop("eid"+GmProtocol.gi().iEchoId);
            break;
          case 510: // 版本号检测回复
            console.log("下线510");
            i = pls.GetNextByte();
            XRecordFast.iClientID = pls.GetNextInt();
            // GmPlay.sop("XRecordFast.iClientID="+XRecordFast.iClientID);
            if (i == 0) {
              // 客户端版本号不符
              GmPlay$1.xntf.bAllow = false;
              XStat$1.gi().PushStat(XStat$1.GS_KICKOUT);
              XStat$1.gi().LastStat(0).sDetail =
                "当前游戏版本号过低，请下载最新版本的游戏后重新登录，点击确定按钮退出游戏";
            }
            break;
          case 511: // 顶号，掉线，被踢
            this.bCheck = false;
            this.bCheck2 = false;
            GmPlay$1.xntf.bAllow = false;
            if (XStat$1.gi().iXStat == XStat$1.GS_KICKOUT) break;
            XStat$1.gi().PushStat(XStat$1.GS_KICKOUT);
            XStat$1.gi().LastStat(0).sDetail = pls.GetNextString();
            // FrameMessage.fm.Open(pls.GetNextString());
            break;
          case 512: // 客户端弹框验证
            for (i = 0; i < 4; i++) {
              this.iCheckFace[i] = XDefine$1.GetRand(1, 3);
              this.iCheckAnima[i] = XDefine$1.GetRand(0, 5);
              this.iCheckRot[i] = XDefine$1.GetRand(0, 60) - 30;
            }
            this.iCheckFace[pls.GetNextByte()] = 0;
            this.iCheckLast = 80;
            this.bCheck = true;
            break;
          case 513: // 改变IP，端口
            ts1 = pls.GetNextString();
            m = pls.GetNextInt();
            GmPlay$1.xntf.ResetSever(ts1, m);
            break;
          case 514: // 成语验证
            this.C2W = GmConfig$1.SCRW / 2;
            this.C2H = GmConfig$1.SCRH / 2;
            this.C2X = (GmConfig$1.SCRW - this.C2W) / 2;
            this.C2Y = (GmConfig$1.SCRH - this.C2H) / 2;
            this.iCRP = 0;
            for (i = 0; i < 4; i++) {
              this.sCheckWord[i] = pls.GetNextString();
              this.iCheckResult[i] = 0;
            }
            this.ResetCheckValue();
            if (this.btn_checkok == null) {
              // 初始化两个按钮
              this.btn_checkok = new XButton(GmPlay$1.xani_ui);
              this.btn_checkok.InitButton("统一大按钮2");
              this.btn_checkok.sName = "确定";

              this.btn_checkreset = new XButton(GmPlay$1.xani_ui);
              this.btn_checkreset.InitButton("统一大按钮2");
              this.btn_checkreset.sName = "重置";
            }
            // this.btn_checkok.Move(this.C2X+this.C2W-20-80, this.C2Y+this.C2H+20, 80, 50);
            // this.btn_checkreset.Move(this.C2X+this.C2W-20-80-20-80, this.C2Y+this.C2H+20, 80,
            // 50);
            this.btn_checkok.Move(
              this.C2X + this.C2W,
              this.C2Y + this.C2H - 20 - 50,
              80,
              50
            );
            this.btn_checkreset.Move(this.C2X + this.C2W, this.C2Y + 20, 80, 50);

            this.bCheck2 = true;
            break;
          case 515: // 路障
            GmPlay$1.iTraverse = pls.GetNextInt(); // 障碍
            if (GmPlay$1.iTraverse == 1) {
              // 去除障碍
              MapManager.gi().RemoveTraverse(0);
            }
            break;
          case 1000: // regist
            if (
              XStat$1.gi().LastStatType(0) != XStat$1.GS_LOADING1 ||
              XStat$1.gi().LastStatType(1) != XStat$1.GS_REGIST
            )
              break;
            i = pls.GetNextByte();
            if (i == 1) {
              // 注册成功,转为登录页面
              ts1 = XStat$1.gi().LastStat(1).in_user.sDetail;
              ts2 = XStat$1.gi().LastStat(1).in_pass.sDetail;
              XStat$1.gi().PopStat(2);
              XStat$1.gi().PushStat(XStat$1.GS_LOGIN);
              XStat$1.gi().PushStat(XStat$1.GS_MESSAGE1);
              XStat$1.gi().LastStat(1).in_user.sDetail = ts1;
              XStat$1.gi().LastStat(1).in_pass.sDetail = ts2;
              XStat$1.gi().LastStat(0).sDetail = "注册成功，进入登录页面";
            } else {
              // 注册失败
              XStat$1.gi().PopStat(1);
              XStat$1.gi().PushStat(XStat$1.GS_MESSAGE1);
              XStat$1.gi().LastStat(0).sDetail = pls.GetNextString();
            }
            break;
          case 1001: // 登录
            i = pls.GetNextByte();
            if (i == 1) {
              // 登录成功,转为选择角色页面
              if (GameVersion$1.QUDAO == 31)
                PublicInterface.gi().proc_extend(
                  "uc_get_acid",
                  0,
                  pls.GetNextString()
                );
              if (XRecordFast.iHaveSeverRecord == 0) {
                // 没有服务器记录,打开选择服务器列表
                GmProtocol$1.gi().s_GetSeverList(100);
              } else {
                // 有服务器记录，根据记录获得区服下的玩家列表
                GmProtocol$1.gi().s_GetRoleList(
                  XRecordFast.iLastSector,
                  XRecordFast.iLastSever
                );
                // XStat.gi().PopStat(1);
                // XStat.gi().PushStat(XStat.GS_SELECTROLE);
              }
              PublicInterface.gi().iStat = 10;
              XDefine$1.sop("登陆成功");
            } else {
              // 登录失败
              XStat$1.gi().PopStat(1);
              Message1.Open(pls.GetNextString());
            }
            break;
          case 1006: // 接收到角色列表
            GmMe$1.me.iRid = 0;
            SelectRole.Open(pls);
            break;
          case 1003: // 接收到服务器列表
            // sop("1003");
            // SelectSever.Open(pls);
            break;
          case 1002: // 新的服务器列表
            // sop("1002");
            SelectSever.Open(pls);
            // PublicInterface.gi().Exit();
            break;
          case 1004: // 接收到创建角色回复
            if (
              XStat$1.gi().LastStatType(0) != XStat$1.GS_LOADING1 ||
              XStat$1.gi().LastStatType(1) != XStat$1.GS_CREATEROLE
            )
              break;
            j = pls.GetNextByte();
            // sop("1004 result = "+j+","+pls.GetNextString());
            if (j == 0) {
              // 创建角色成功，重新获得角色列表，返回选择角色登录页面
              pls.GetNextString();
              GmProtocol$1.gi().s_StartGame(pls.GetNextInt()); // rid
              // GmProtocol.gi().s_getrolelist();
              // XStat.gi().PopStat(3);
              // XStat.gi().PushStat(XStat.GS_LOADING1);
            } else {
              // 创建角色失败
              EasyMessage.easymsg.AddMessage(pls.GetNextString());
              XStat$1.gi().PopStat(1);
              // FrameMessage.fm.Open(pls.GetNextString());
            }
            break;
          case 1005: // 进入游戏回复
            // if(XStat.gi().LastStatType(0)!=XStat.GS_LOADING1 ||
            // XStat.gi().LastStatType(1)!=XStat.GS_SELECTROLE)break;
            console.log("进入游戏:", GmMe$1.me.iRace, GmMe$1.me.iSex);
            j = pls.GetNextByte();
            if (j == 0) {
              // 登录成功,重置服务器
              GmProtocol$1.gi().iUid = pls.GetNextInt(); // rid
              GmProtocol$1.gi().iPid = pls.GetNextInt();

              ts1 = pls.GetNextString();
              m = pls.GetNextInt();

              GmProtocol$1.gi().iEchoId = 0;
              GmProtocol$1.gi().set_Head();

              console.log("重置链接：", PublicInterface.QUDAO);
              if (PublicInterface.QUDAO == 0) {
                GmPlay$1.xntf.ResetSever("ws://" + ts1 + ":" + m);
                GmPlay$1.xntf.onClose();
              } else {
                const url = "wss://login.qi-guo.cn/game" + m;
                GmPlay$1.xntf.ResetSever(url);
                console.log("server:", url);
              }
              // GmPlay.xntf.ResetSever("ws://121.40.40.172:11000/game" + m);

              //GmPlay.xntf.ResetSever("ws://"+ts1+":"+m);
              // sop1("ip="+tip+",,,port="+tport);
              XStat$1.gi().ResetStat();
              XStat$1.gi().PushStat(XStat$1.GS_GAMEING);
              XStat$1.gi().PushStat(XStat$1.GS_LOADING2);

              // if(XRecordFast.iExtHelp==0)ExtHelp.Init("欢迎来到七国，我是琴清，下面我将带您熟悉游戏#e(老玩家可在系统设置关闭引导)",
              // 0, 1, "普通引导", 0, 2, "语音引导", 1,3 , "跳过引导");
              if (XRecordFast.iQQSay == 0) {
                ExtHelp.Initex(
                  "欢迎来到七国，我是琴清，下面我将带您熟悉游戏#e#cff0000老玩家可在系统设置关闭引导",
                  0,
                  1,
                  "普通引导",
                  0,
                  2,
                  "语音引导",
                  1,
                  1,
                  "确定"
                );
                XRecordFast.iQQSay++;
              }

              //						if (XRecordFast.iFirstOpen)
              {
                if (GmConfig$1.SYSW >= 1280) {
                  //SystemOperate.iScreenLS=400;//最大缩放，高清
                  SystemOperate.iScreenLS =
                    ((1280 - 800) * 400) / (GmConfig$1.SYSW - 800);
                } else {
                  SystemOperate.iScreenLS =
                    ((GmConfig$1.SYSW - 800) * 400) / (1280 - 800);
                }
                SystemOperate.iSameRate = 0;
              }
              console.log("登录成功");
              // 发送本地设置到服务器
              GmProtocol$1.gi().s_UseSkill(
                100,
                SystemOperate.iNearRoleCount,
                0,
                0,
                0,
                0,
                0
              );
            } else if (j == 5) {
              // 失败
              console.log("登录失败");
              XStat$1.gi().PopStat(1);
              XStat$1.gi().PushStat(XStat$1.GS_MESSAGE1);
              XStat$1.gi().objstack[XStat$1.gi().iStatPoint].sDetail =
                "进入失败，联系GM";
            }
            break;
          case 1007: // 获得随机名字
            CreateRole.GetRandName(pls);
            break;
          case 1100: // 渠道返回的信息
            PublicInterface.gi().OnReceive(pls);
            break;
          // //////////////
          case 2000: // 角色所在位置更新
            i = pls.GetNextInt(); // mapid
            j = pls.GetNextInt();
            // GmPlay.sop("Map ChangeTo:"+i+Gameing.gameing.m_map.IdToName(i));
            GmMe$1.me.iX = pls.GetNextInt();
            GmMe$1.me.iY = pls.GetNextInt();
            GmMe$1.me.iDx = GmMe$1.me.iX;
            GmMe$1.me.iDy = GmMe$1.me.iY;

            //MapManager.gi().vbk.ClearVisual();
            Gameing.gameing.m_map.LoadMap(
              i,
              j,
              Gameing.gameing.me.iX,
              Gameing.gameing.me.iY
            );
            MapManager.gi().mapdata.sMapDetail = pls.GetNextString();
            MapManager.gi().iKeepDetialAsMapId = i;
            MapManager.gi().mapdata.iMapFlag = pls.GetNextInt();
            if ((MapManager.gi().mapdata.iMapFlag & 1) != 0)
              MapManager.gi().vbk.ClearVisual();
            Gameing.gameing.me.ChangeStat("站立");
            // for(j=0;j<100;j++)sop("2000"+i+Gameing.gameing.m_map.IdToName(i));
            for (i = 0; i < GmMe$1.MAXMARK; i++) {
              Gameing.gameing.me.iMarks[i][0] = Gameing.gameing.me.iX;
              Gameing.gameing.me.iMarks[i][1] = Gameing.gameing.me.iY;
              Gameing.gameing.me.iMarks[i][2] = Gameing.gameing.me.iFace8;
            }
            // GmProtocol.gi().pat=pls.GetNextInt();
            // GmProtocol.gi().pos1=XDefine.get_ms();
            break;
          case 2001: // 角色基本信息更新，不可变的
            console.log("角色信息更新");
            GmMe$1.me.getinit(pls);
            GmProtocol$1.gi().s_CheckVersion();
            PublicInterface.gi().mta_record(6, 0, "");
            break;
          case 2002: // 可能改变的
            GmMe$1.me.GetBaseAtt(pls);
            break;
          case 2003: // 门派技能等级
            GmMe$1.me.getschoolskill(pls);
            break;
          case 2004: // 帮派技能等级
            GmMe$1.me.getgovskill(pls);
            break;
          case 2005: // 帮派修炼等级
            GmMe$1.me.getgovxiu(pls);
            break;
          case 2006: // getflag
            GmMe$1.me.getflag(pls);
            break;
          case 2007: // 称谓
            if (XStat$1.gi().LastStatType(0) == XStat$1.GS_SETTITLE) {
              XStat$1.gi().LastStat(0).getlist(pls);
            }
            break;
          case 2008: // 改名成功
            GmMe$1.me.sName = pls.GetNextString();
            break;
          case 2009: // retext
            GmMe$1.me.GetExt(pls);
            break;
          case 2020: // 公聊
            PublicChat_SmallFrame.gi().GetMessage(pls);
            break;
          case 2021: // 取得好友列表
            FriendList$1.gi().GetFriends(pls);
            break;
          case 2022:
            //					i=pls.iOffset;
            //					for(j=0;j<50;j++)
            {
              //						pls.iOffset=i;
              PrivateChatWatch.gi().GetPrivateMessage(pls);
            }
            break;
          case 2030: // 切换地图(强制)
            //XStat.gi().PushStat(XStat.GS_LOADING2);
            i = pls.GetNextInt(); // mapid
            j = pls.GetNextInt(); // visualmapid
            GmMe$1.me.iX = pls.GetNextInt();
            GmMe$1.me.iY = pls.GetNextInt();
            if (MapManager.gi().iCurrentMapId != i) {
              MapManager.gi().vbk.ClearVisual();
            } else {
              if (MapManager.gi().iMapChangeing >= 100)
                MapManager.gi().iMapChangeing -= 100; // 变亮
              return;
            }

            console.log("地图传送:", this.getTime());

            MapManager.gi().LoadMap(i, j, GmMe$1.me.iX, GmMe$1.me.iY);
            MapManager.gi().mapdata.sMapDetail = pls.GetNextString();
            MapManager.gi().iKeepDetialAsMapId = i;
            MapManager.gi().mapdata.iMapFlag = pls.GetNextInt();
            //console.log('MapManager.gi().mapdata.iMapFlag:',MapManager.gi().mapdata.iMapFlag)
            if ((MapManager.gi().mapdata.iMapFlag & 1) != 0)
              MapManager.gi().vbk.ClearVisual();

            GmMe$1.me.ChangeStat("站立");
            // EasyMessage.easymsg.AddMessage("map change to "+i);
            for (i = 0; i < GmMe$1.MAXMARK; i++) {
              Gameing.gameing.me.iMarks[i][0] = Gameing.gameing.me.iX;
              Gameing.gameing.me.iMarks[i][1] = Gameing.gameing.me.iY;
              Gameing.gameing.me.iMarks[i][2] = Gameing.gameing.me.iFace8;
            }
            // 清空附近玩家列表
            i = 0;
            for (j = 0; j < Gameing.iNearMax; j++) {
              Gameing.gameing.nrs[j].bUseing = false;
            }
            if (MapManager.gi().iMapChangeing >= 100)
              MapManager.gi().iMapChangeing -= 100; // 变亮
            // if(XStat.gi().LastStatType(0)!=XStat.GS_GAMEING)XStat.gi().PopStat(1);

            // setTimeout(()=>{
            // 	if (XStat.gi().LastStatType(0) != XStat.GS_GAMEING)
            // 		XStat.gi().PopStat(1);
            // 	},1500)
            break;
          case 2031: // 在队伍中被迫更新目标
            i = pls.GetNextInt();
            j = pls.GetNextInt();
            if (i != GmMe$1.me.iX || j != GmMe$1.me.iY) {
              MapManager.gi().mfy.iPath[0][0] = GmMe$1.me.iX;
              MapManager.gi().mfy.iPath[0][1] = GmMe$1.me.iY;
              MapManager.gi().mfy.iPath[1][0] = i;
              MapManager.gi().mfy.iPath[1][1] = j;
              MapManager.gi().mfy.iPathDeep = 2;
              MapManager.gi().vbk.iGoToNpcFlag = -1;
              MapManager.gi().vbk.iGoToNpcId = -1;
              GmMe$1.me.start(
                MapManager.gi().mfy.iPath,
                MapManager.gi().mfy.iPathDeep
              );
            }
            break;
          case 2032: // 附近玩家更新
            // m=pls.GetNextInt();
            // if(m!=MapManager.gi().iCurrentMapId)break;
            m = 0;
            var pnr;
            var bNew;
            i = pls.GetNextInt();
            while (i > 0) {
              // 有附近玩家数据更新
              bNew = false;
              for (j = 0; j < Gameing.iNearMax; j++) {
                if (
                  Gameing.gameing.nrs[j].bUseing &&
                  Gameing.gameing.nrs[j].iRid == i
                )
                  break;
              }
              if (j >= Gameing.iNearMax) {
                // 没找到，新放入
                for (j = 0; j < Gameing.iNearMax; j++) {
                  if (!Gameing.gameing.nrs[j].bUseing) break;
                }
                if (j >= Gameing.iNearMax) {
                  // 没找到空闲的!!!
                  j = 0;
                }
                bNew = true;
                Gameing.gameing.nrs[j].bUseing = true;
                Gameing.gameing.nrs[j].iRid = i;
                Gameing.gameing.nrs[j].iPopoDelay = 0;
                Gameing.gameing.nrs[j].sTitle = "";
                Gameing.gameing.nrs[j].iFollowPid = 0;
                Gameing.gameing.nrs[j].iFollowTid = 10000;
              }
              pnr = Gameing.gameing.nrs[j];

              j = pls.GetNextByte();
              if ((j & 1) != 0) {
                pnr.iDx = pls.GetNextShort();
                pnr.iDy = pls.GetNextShort();
                // sop("xx="+pnr.iDx+"yy="+pnr.iDy);
              }
              if ((j & 2) != 0) {
                pnr.iFighting = pls.GetNextByte();
              }
              if ((j & 4) != 0) pnr.iIsLeader = pls.GetNextByte();
              if ((j & 8) != 0) {
                pnr.sName = pls.GetNextString();
                k = pls.GetNextByte();
                pnr.iSex = parseInt(k / 10);
                pnr.iRace = k % 10;
                pnr.bsc = true;
              }
              if ((j & 16) != 0) pnr.iDFaceTo = pls.GetNextByte();
              if ((j & 32) != 0) {
                k = pls.GetNextByte();
                if ((k & 1) == 0) pnr.iIsSelling = 0;
                else {
                  pnr.iIsSelling = 1;
                  pnr.sSellName = pls.GetNextString();
                }
                if ((k & 2) == 0) pnr.iIsVip = 0;
                else pnr.iIsVip = 1;
                if ((k & 4) == 0) pnr.iDChangeType = 0; // 变身状态
                else pnr.iDChangeType = pls.GetNextShort();
                if ((k & 8) == 0) {
                  pnr.iColor[0] = 0; //无染色
                  pnr.iColor[1] = 0;
                  pnr.iColor[2] = 0;
                  pnr.iColor[3] = 0;
                  pnr.iColor[4] = 0;
                  pnr.iColor[5] = 0;
                } else {
                  //分解各部位颜色
                  n = pls.GetNextShort(); //染色
                  pnr.iColor[0] = n & 7;
                  pnr.iColor[1] = (n >> 3) & 7;
                  pnr.iColor[2] = (n >> 6) & 7;
                  pnr.iColor[3] = (n >> 9) & 7;
                  pnr.iColor[4] = (n >> 12) & 7;
                }
                if ((k & 16) == 0) pnr.iAura = 0; // 光环
                else pnr.iAura = pls.GetNextShort();
              }
              if ((j & 64) != 0) {
                // 坐骑id*10000+武器id
                pnr.iDMountsTid = pls.GetNextShort();
                k = pls.GetNextInt();
                pnr.iDWeapTid = k % 10000;
                pnr.bwc = true;
                k = pls.GetNextShort();
                pnr.iSchoolId = parseInt(k / 1000);
                pnr.iLev = k % 1000;
                pnr.sTitle = pls.GetNextString();

                pnr.iFollowPid = pls.GetNextInt();
                pnr.iFollowTid = pls.GetNextShort();
                pnr.sFollowName = pls.GetNextString();
              }
              if (bNew) {
                pnr.iX = pnr.iDx;
                pnr.iY = pnr.iDy;
                pnr.SetMarks();
                pnr.iFaceTo = pnr.iDFaceTo;
                pnr.bfc8 = true;
                // GmPlay.sop(pnr.sName+pnr.iDFaceTo);
                // EasyMessage.easymsg.AddMessage("新入坐标:"+pnr.sName+","+pnr.iX+","+pnr.iY);
                // EasyMessage.easymsg.AddMessage(""+m+","+MapManager.gi().iCurrentMapId);
              }
              // else
              // EasyMessage.easymsg.AddMessage("更新坐标"+pnr.iDx+","+pnr.iDy);
              if ((j & 128) != 0) {
                pnr.bUseing = false;
                m++;
                if (bNew) GmPlay$1.sop1("m error");
              }

              i = pls.GetNextInt();
            }
            // GmPlay.sop1("release count : "+m+"  ,, "+GmPlay.xntf.msg.recvout.iSize);
            break;
          case 2033: //
            i = pls.GetNextByte();
            if (i == 3) TeamCreate.teamlist(pls); // 得到附近队伍列表
            else if (i == 1) TeamOperate.rolelist(pls); // 得到附近玩家列表
            else if (i == 2) TeamOperate.sZz = pls.GetNextString();
            else if (i == 4) {
              //创建队伍成功，打开队伍界面
              XStat$1.gi().PushStat(XStat$1.GS_TEAMOPERATE);
              //发送请求，获取附近玩家和申请列表
              GmProtocol$1.gi().s_TeamOperate(10, 0, 0);
            } else if (i == 5) {
              if (pls.GetNextByte() == 1) MyTeam$1.bSingleAutoTeaming = true;
              else MyTeam$1.bSingleAutoTeaming = false;
            }
            break;
          case 2034: // 直接改变坐标回去
            i = pls.GetNextInt();
            j = pls.GetNextInt();
            GmMe$1.me.iX = i;
            GmMe$1.me.iY = j;
            MapManager.gi().mfy.iPath[0][0] = GmMe$1.me.iX;
            MapManager.gi().mfy.iPath[0][1] = GmMe$1.me.iY;
            MapManager.gi().mfy.iPath[1][0] = GmMe$1.me.iX;
            MapManager.gi().mfy.iPath[1][1] = GmMe$1.me.iY;
            MapManager.gi().mfy.iPathDeep = 1;
            GmMe$1.me.ChangeStat("站立");
            break;
          case 2035: // 队伍成员id更新
            MyTeam$1.iTeamRid[0] = pls.GetNextInt();
            if (MyTeam$1.iTeamRid[0] == 0) MyTeam$1.iTmpTeamRid[0] = 0;
            else {
              for (i = 0; i < GmMe$1.MAXTEAMOLE; i++) {
                if (i > 0) MyTeam$1.iTeamRid[i] = pls.GetNextInt();
                MyTeam$1.iTmpTeamRid[i] = pls.GetNextInt();
                if (MyTeam$1.iTmpTeamRid[i] == 0) continue;

                MyTeam$1.sName[i] = pls.GetNextString();
                MyTeam$1.iRas[i] = pls.GetNextByte();
                MyTeam$1.iSchoolId[i] = pls.GetNextByte();
                MyTeam$1.iLev[i] = pls.GetNextShort();
                n = pls.GetNextShort(); //染色
                MyTeam$1.iColor[i][0] = n & 7;
                MyTeam$1.iColor[i][1] = (n >> 3) & 7;
                MyTeam$1.iColor[i][2] = (n >> 6) & 7;
                MyTeam$1.iColor[i][3] = (n >> 9) & 7;
                MyTeam$1.iColor[i][4] = (n >> 12) & 7;
                MyTeam$1.iWeapTid[i] = pls.GetNextShort();
                MyTeam$1.sMapName[i] = pls.GetNextString();
              }
              GmMe$1.iTeamZhen = pls.GetNextByte();
              MyTeam$1.iTeamTarget = pls.GetNextByte();
              GmMe$1.iTeamMap = pls.GetNextShort();
              MyTeam$1.iLev1 = pls.GetNextShort();
              MyTeam$1.iLev2 = pls.GetNextShort();
              if (pls.GetNextByte() == 1) MyTeam$1.bLeaderAutoTeaming = true;
              else MyTeam$1.bLeaderAutoTeaming = false;
              //						sop(",,,,,,,,,,,,,,"+GmMe.iTeamTarget+",,,,,,,,,,,,,"+GmMe.iTeamTarget);
            }
            // 如果当前状态时队伍页面，关闭后重新打开
            TeamOperate.CleanAnima();
            TeamZhen.CleanAnima();
            if (XStat$1.gi().LastStatType(0) == XStat$1.GS_TEAMCREATE)
              XStat$1.gi().PopStat(1);
            // if(XStat.gi().LastStatType(0)==XStat.GS_TEAMOPERATE)
            // {
            // XStat.gi().PopStat(1);
            // XStat.gi().PushStat(XStat.GS_TEAMOPERATE);
            // }
            break;
          case 2036: // 申请/邀请入队,
            i = pls.GetNextByte();
            if (i == 0) {
              // 有人申请入队
              TeamOperate.AddTeamRequest(pls);
              // GmMe.me.AddTeamRequest(pls.GetNextInt());
            } else if (i == 1) {
              // 有人邀请我入队
              GmMe$1.me.BeInvite(pls);
            }
            break;
          case 2040: // 更新所有物品
            MyGoods.gi().GetGoods(pls);
            break;
          case 2041: // 获得一个物品更新
            MyGoods.gi().UpdateOneGoods(pls);
            break;
          case 2043: // 初始化我的摆摊
            MySell.gi().InitSell(pls);
            break;
          case 2044: // 我的摊位物品索引
            MySell.gi().IndexSell(pls);
            break;
          case 2045: // 初始化购买索引
            MyBuy.gi().IndexBuy(pls);
            break;
          case 2046: // 临时背包
            TmpGoods.getgoods(pls);
            break;
          case 2047: // 销售记录
            MySell.gi().AddSellRecord(pls);
            break;
          case 2048:
            FastGoods.gi().PushGoods(pls);
            break;
          case 2049: //新物品
            NewShop.Open(pls);
            break;
          case 2050: // 更新所有宠物
            MyPets$1.mp.GetPets(pls);
            break;
          case 2051: // 更新一个宠物
            MyPets$1.mp.UpdateOnePet(pls);
            break;
          case 2052: // 更新宠物base
            MyPets$1.mp.GetPetBaseAtt(pls);
            break;
          case 2056: // 打开宠物仓库
            PetStoreFrame.Open(pls);
            break;
          case 2060: // 刷新地图上的npc
            MapManager.gi().vbk.getnpc(pls);
            break;
          case 2061: // 打开选择框
            MySelect.Open(pls);
            break;
          case 2062: // npc talk
            MapManager.gi().vbk.npctalk(pls);
            break;
          case 2063: // 清除一个npc
            MapManager.gi().vbk.clearnpc(pls);
            break;
          case 2064: // npc商店
            NpcShop.ns.FreshGoods(pls);
            break;
          case 2065: // npc move
            MapManager.gi().vbk.npcmove(pls);
            break;
          case 2066: // 元宝商城
            IngotMall.OPEN(pls);
            break;
          case 2067: //npc详细对话
            MapManager.gi().vbk.getnpctalkext(pls);
            break;
          case 2068: //服务器二次确认
            SevConfirm.Open(pls);
            break;
          case 2069: // 放烟花
            i = pls.GetNextInt();
            j = pls.GetNextInt();
            k = pls.GetNextByte();
            ts1 = pls.GetNextString();
            m = pls.GetNextInt();
            n = pls.GetNextInt();
            o = pls.GetNextByte();
            p = pls.GetNextInt();
            q = pls.GetNextInt();
            FireworksEffect.fe.AddFireworks(i, j, k, ts1, m, n, o, p, q);
            break;
          case 2070: // 任务索引
            MyMission.m.getmissionindex(pls);
            break;
          case 2071: // 任务详细
            MyMission.m.getmissiondetail(pls);
            MissionLead.gi().FreshMission();
            break;
          case 2072: // 删除一个任务
            MyMission.m.cleanclientmission(pls);
            MissionLead.gi().FreshMission();
            break;
          case 2080: // 帮派基本数据
            MyGov.mg.initmygov(pls);
            break;
          case 2081: // 打开申请入帮列表
            //					if (XStat.gi().iXStat != XStat.GS_APPLYFORGOV)
            //						XStat.gi().PushStat(XStat.GS_APPLYFORGOV);
            //
            //					ApplyForGov afg = (ApplyForGov) XStat.gi().LastStat(0);
            //					afg.ResetList(pls);
            break;
          case 2083: // 帮派数据返回
            if (XStat$1.gi().iXStat == XStat$1.GS_GOVFRAME) {
              var gf = XStat$1.gi().LastStat(0);
              gf.getgovdata(pls);
            } else if (XStat$1.gi().LastStatType(0) == XStat$1.GS_MEMBERDETAIL) {
              var md = XStat$1.x_stat.LastStat(0);
              md.getgovdata(pls);
            }
            break;
          case 2085: // 进入帮派地图特殊数据
            MapManager.gi().mapdata.sMapDetail = pls.GetNextString();
            MapManager.gi().iKeepDetialAsMapId = i;
            break;
          case 2088: // 打开帮派相关窗口
            MyGov.mg.govoperateframe(pls);
            // for(int zz=0;zz<100;zz++)GmPlay.sop("flagflagflag");
            break;
          case 2090: // 打开学习野外技能页面
            ExtLearnSkill.Open(pls);
            break;
          case 2093: // watchon
            if (XStat$1.gi().LastStatType(0) == XStat$1.GS_LOADING1)
              XStat$1.gi().PopStat(1);
            if (XStat$1.gi().LastStatType(0) == XStat$1.GS_FINDFRIEND)
              XStat$1.gi().PopStat(1);
            if (XStat$1.gi().LastStatType(0) != XStat$1.GS_WATCHON)
              XStat$1.gi().PushStat(XStat$1.GS_WATCHON);
            XStat$1.gi().LastStat(0).InitData(pls);
            break;
          case 2094:
            NoviceHelp.sDetail = pls.GetNextString();
            NoviceHelp.sTitle = pls.GetNextString();
            pls.GetNextData();
            NoviceHelp.sDetail = pls.DataToString();
            break;
          case 2095: //新帮派操作
            j = pls.GetNextByte();
            if (j == 0) ApplyForGov.Open(pls);
            else if (j == 1) ApplyForGov.Get(pls);
            else if (j == 2) ApplyForGov.Applyed(pls);
            else if (j == 3) NewGovFrame.Open(pls);
            else if (j == 5) NewGovFrame.InitMemberList(pls);
            else if (j == 6) NewGovFrame.InitMemberDetail(pls);
            else if (j == 7) NewGovFrame.ChangeJob(pls);
            else if (j == 9) NewGovFrame.ApplyList(pls);
            else if (j == 10) NewGovFrame.ApplyDetail(pls);
            else if (j == 11) NewGovFrame.ApplyCheck(pls);
            else if (j == 12) NewGovFrame.InitGovEvent(pls);
            else if (j == 13) NewGovFrame.InitEventDetail(pls);
            else if (j == 14) EntrustMission.GetMyMission(pls);
            else if (j == 15) EntrustMission.GetMyDetail(pls);
            else if (j == 17) EntrustMission.CancelEntrust(pls);
            else if (j == 18) NewGovManage.GetSet(pls);
            else if (j == 19) NewGovFrame.UpdateDetail(pls);
            else if (j == 21) HireTraderWorker.Open(pls);
            else if (j == 22) GovFBTarget.GetData(pls);
            break;
          case 2096: //获得2个点，巡逻路径
            MyAI.gi().getlogicpath(pls);
            break;
          case 2097: //特殊处理
            j = pls.GetNextByte();
            if (j == 0) MissionLead.gi().special_doyb();
            else if (j == 1) FuYuan.fy.bShow = true; //显示福源图标
            break;
          case 2010: // 开始交易
            MyTrade.mt.tradestart(pls);
            break;
          case 2011: // 关闭交易
            if (XStat$1.gi().iXStat == XStat$1.GS_MYTRADEFRAME) XStat$1.gi().PopStat(1);
            MyTrade.bCheckTradeing = false;
            break;
          case 2012: // 对方准备
            if (XStat$1.gi().iXStat == XStat$1.GS_MYTRADEFRAME)
              MyTrade.mt.tradeready(pls);
            break;
          case 2900: //
            i = pls.GetNextByte();
            if (i == 0) shop_BuyDrawing.Open(pls);
            else if (i == 1) shop_PeakFight.Open(pls);
            break;
          case 2100: // 更新本地坐骑
            MyMounts.mm.UpdateOneMounts(pls);
            break;
          case 2150: // land属性，耕地
            MyLand.ml.Init(pls);
            break;
          case 2151:
            MyLand.bShowBlock = true;
            break;
          case 2152: // 打开植物状态
            PlantFrame.Open(pls);
            break;
          case 2153: // 打开土地状态
            LandFrame.Open(pls);
            break;
          case 2205: // 初始化进入战斗
            while (
              XStat$1.gi().iXStat != XStat$1.GS_GAMEING &&
              XStat$1.gi().iXStat != XStat$1.GS_PRIVATECHAT &&
              XStat$1.gi().iXStat != XStat$1.GS_SENDPUBLICCHAT
            ) {
              XStat$1.gi().PopStat(1);
            }
            MapManager.gi().iMapChangeing = 0;
            MapManager.gi().mfy.iPathDeep = 0;
            GmMe$1.me.ChangeStat("站立");
            SystemOperate.SetScreenMode(10);
            XFight.gi().InitFight(pls);
            SystemOperate.SetScreenMode(11);
            SteeringWheel.sw.bLocked = false;
            break;
          case 2206: // 更新一个fat(召唤宠物)
            XFight.gi().updatefat(pls);
            break;
          case 2207: // 设置当前已召唤宠物和出战宠物
            XFight.gi().setpetused(pls);
            break;
          case 2202: // 战斗过程动画数据
            XFight.gi().getfightdata(pls); // 战斗数据
            break;
          case 2203: // 战斗结束
            XFight.gi().bFightFinished = true;
            break;
          case 2204: // 战斗标记，看是否已出手
            XFight.gi().getfightflag(pls);
            break;
          case 2208: //死亡提示
            DiePrompt.bOpen = true;
            pls.GetNextByte();
            DiePrompt.iLostExp = pls.GetNextInt();
            DiePrompt.iLostMoney = pls.GetNextInt();
            DiePrompt.sDetail = pls.GetNextString();
            break;
          case 2209: //更新装备耐久值
            for (m = 0; m < 6; m++) {
              i = pls.GetNextByte();
              if (i >= 64) break;
              j = pls.GetNextInt();
              k = pls.GetNextInt();
              if (MyGoods.gi().goods[1][i].iGid == j)
                MyGoods.gi().goods[1][i].iAtts[5] = k;
            }
            break;
          case 2301: // 新手问题列表
            NoviceQuestionList$1.getquestion(pls);
            break;
          case 2302: // 推送高手回答的问题
            NoviceCheckAnswer.getanswer(pls);
            break;
          case 2303: // 活跃度
            //PromptActivity.Open(pls);
            NewActivity.Open(pls);
            break;
          case 2304: // 累计签到
            DayAttend.Open(pls);
            break;
          case 2305: // 服务器要求打开客户端的引导
            BeginersGuide.gi().InitGuideFromSever(pls);
            break;
          case 2306: // 打开扩展提示
            ExtHelp.Init(pls);
            break;
          case 2307: //打开回师门确认页面
            BackToSchool.Open(pls);
            break;
          case 2400: // 打开副本创建界面
            //					MyFuBen.OpenCreate(pls);
            break;
          case 2401: // 管理副本页面
            MyFuBen.OpenManage(pls);
            break;
          case 2402: // 申请加入副本
            MyFuBen.OpenApply(pls);
            break;
          case 2403: // 我的副本状态
            MyFuBen.GetStat(pls);
            GmPlay$1.bInitFinished = true;
            break;
          case 2404: // 当前副本目标
            MyFuBen.GetTarget(pls);
            break;
          case 2408: // 获得副本积分商城的物品列表
            FubenMall.OPEN(pls);
            break;
          case 2500: // 战队相关
            MyFT.mft.iFTid = pls.GetNextInt();
            MyFT.mft.iFTJob = pls.GetNextInt();
            break;
          case 2501: // 战队属性页面
            FTFrame.Open(pls);
            break;
          case 2502: // 申请加入战队
            FTApply.Open(pls);
            break;
          case 2503: // 战队成员列表
            FTMember.Open(pls);
            break;
          case 2504: // 战队系统
            FTAgree.Open(pls);
            break;
          case 2505: // 战队排行，挑战
            FTRank.Open(pls);
          case 2506: // 挑战状态
            FTRank._2506c(pls);
            break;
          case 2600: // easymessage
            EasyMessage.easymsg.AddMessage(pls.GetNextString());
            if (XStat$1.gi().iXStat == XStat$1.GS_LOADING1) XStat$1.gi().PopStat(1);
            MapManager.gi().iMapChangeing = 0;
            break;
          case 2601: // framemessage;
            FrameMessage.fm.Open(pls.GetNextString());
            if (XStat$1.gi().iXStat == XStat$1.GS_LOADING1) XStat$1.gi().PopStat(1);
            MapManager.gi().iMapChangeing = 0;
            break;
          case 2602: //进度条设置
            ProgressBar.gi().InitProgress(pls);
            break;
          case 2700: //中午答题活动
            j = pls.GetNextByte();
            if (j == 1) {
              AQStart.bShow = true;
              AQStart.Open();
            } else AQStart.bShow = false;
            break;
          case 2701: //
            AQDoing.Open(pls);
            break;
          case 2800: //添加扩展按钮
            ExtendButton.peb.SetIcon(pls);
            break;
          case 2801: //runcmd
            this.RunCommand(pls);
            break;
          case 2802: //
            FrameMessageEx.fm.Open(pls.GetNextString());
            if (XStat$1.gi().iXStat == XStat$1.GS_LOADING1) XStat$1.gi().PopStat(1);
            MapManager.gi().iMapChangeing = 0;
            break;
          case 2910: //排行榜
            LeaderBoardFrame.LeaderBoardFresh(pls);
            break;
          case 2901: //巅峰决战集合
            i = pls.GetNextByte();
            if (i == 0) PeakFight.Open(pls);
            break;
          case 5000: //xms_rundirect
            GmPlay$1.pxe.RunByPls(pls);
            break;
        }
      }

      getTime() {
        let now = new Date(Date.now()),
          y = now.getFullYear(),
          m = now.getMonth() + 1,
          d = now.getDate();
        return (
          y +
          "-" +
          (m < 10 ? "0" + m : m) +
          "-" +
          (d < 10 ? "0" + d : d) +
          " " +
          now.toTimeString().substr(0, 8)
        );
      }

      RunCommand(pls) {
        var cmd = pls.GetNextString();
        var cs1 = pls.GetNextInt();
        var cs2 = pls.GetNextString();
        if (cmd == "首次登陆黑屏提示语") {
          JQMode.jq.StartJQ(2);
        } else if (cmd == "升级效果") {
          UpgradeEffect.ue.Init();
        } else if (cmd == "活跃抽奖结果") {
          if (XStat$1.gi().iXStat == XStat$1.GS_PROMPTACTIVITY) {
            XStat$1.gi().LastStat(0).lottery_startround(cs1);
          }
        } else if (cmd == "帮派副本进度查询") {
          GovFBTarget.Open();
        } else if (cmd == "升级") {
          PublicInterface.gi().mta_record(10, 0, "");
        } else if (cmd == "uc_get_sign") {
          PublicInterface.gi().proc_extend(cmd, cs1, cs2);
        }
      }
    }
    GmPlay$1.iPlayingId = -1;
    GmPlay$1.ResetSound = function () {
      if (GmPlay$1.x_wav == null) return;
      if (SystemOperate.iMusic == 0 || WavFast.bPause) {
        // 停止
        GmPlay$1.x_wav.StopBackMusic();
        GmPlay$1.iPlayingId = -1;
        return;
      }
      var pid = -1; // 1 fight
      if (!XStat$1.gi().bGameing()) pid = 0;
      else if (XFight.bFighting)
        pid = 1; //GmPlay.x_wav.StartBackMusic("fight", true);
      else {
        if (
          MapManager.gi().iCurrentMapId == 1 ||
          MapManager.gi().iCurrentMapId == 3 ||
          MapManager.gi().iCurrentMapId == 14 ||
          MapManager.gi().iCurrentMapId == 15 ||
          MapManager.gi().iCurrentMapId == 16
        )
          pid = 2;
        else pid = 3;
      }
      // GmPlay.sop(""+pid);
      if (pid == GmPlay$1.iPlayingId) return;
      GmPlay$1.iPlayingId = pid;
      switch (pid) {
        case 0:
          GmPlay$1.x_wav.StartBackMusic("start", true);
          break;
        case 1:
          GmPlay$1.x_wav.StartBackMusic("fight", true);
          break;
        case 2:
          GmPlay$1.x_wav.StartBackMusic("city", true);
          break;
        case 3:
          GmPlay$1.x_wav.StartBackMusic("site", true);
          break;
      }
    };

    GmPlay$1.bInitFinished = false;
    GmPlay$1.sop = function (s) {
      //	if (GameVersion.QUDAO == 0)
      //		Log.e("SOP", s);
    };

    GmPlay$1.sop1 = function (s) {
      //	Log.e("SOP1", s);
    };

    GmPlay$1.sop2 = function (s) {
      // Log.e("SOP2",s);
    };
    GmPlay$1.pp = null;
    GmPlay$1.gi = function () {
      if (GmPlay$1.pp == null) GmPlay$1.pp = new GmPlay$1();
      return GmPlay$1.pp;
    };

    GmPlay$1.iDelay;

    GmPlay$1.aaa = new AnimaAction();

    GmPlay$1.aa_auras;
    GmPlay$1.aa_fightready;

    GmPlay$1.xntf;

    GmPlay$1.x_record;
    GmPlay$1.x_wav = null;

    GmPlay$1.xani_local;
    GmPlay$1.xani_nui1; // 主菜单
    GmPlay$1.xani_nui2; // 漫游界面
    GmPlay$1.xani_nui3; //
    GmPlay$1.xani_nui4; //战斗界面
    GmPlay$1.xani_nui5; //帮助页面
    GmPlay$1.xani_nui6; //五日礼包
    GmPlay$1.xani_aura; //光环
    GmPlay$1.xani_nicon;
    GmPlay$1.xani_ngoods;
    GmPlay$1.xani_stand, GmPlay$1.xani_shot;

    GmPlay$1.xani_frame, GmPlay$1.xani_button, GmPlay$1.xani_icon, GmPlay$1.xani_other;

    GmPlay$1.xani_back;

    GmPlay$1.xani_color;
    GmPlay$1.xani_newrole;
    GmPlay$1.xani_weap;
    GmPlay$1.xani_nmounts;

    GmPlay$1.xani_ui, GmPlay$1.xani_ui2, GmPlay$1.xani_ui3, GmPlay$1.xani_ui4;
    GmPlay$1.xani_face, GmPlay$1.xani_head;
    GmPlay$1.xani_skill, GmPlay$1.xani_effect;
    GmPlay$1.xani_skills;
    GmPlay$1.xani_grow;

    GmPlay$1.xani_pets;

    GmPlay$1.de_goods;
    GmPlay$1.de_pet;
    GmPlay$1.de_map;
    GmPlay$1.de_skill;
    GmPlay$1.de_npc;
    GmPlay$1.de_mounts;
    GmPlay$1.de_fuben;
    GmPlay$1.de_chuan_song;
    GmPlay$1.de_grow;

    GmPlay$1.pxe;

    GmPlay$1.gp;

    GmPlay$1.bCheckRes = false;

    GmPlay$1.iTraverse = 0; // 西阳城障碍0有障碍，1无障碍

    GmPlay$1.m_vi;

    GmPlay$1.sLoginIp = GameData$1.sLGURL;
    GmPlay$1.iLoginPort = 8002;

    GmPlay$1.bInited = false;
    GmPlay$1.bConnected = false;

    GmPlay$1.iNowMillis;

    GmPlay$1.xntf = null;

    class Main {
    	constructor() {
    		//根据IDE设置初始化引擎
    		if (window["Laya3D"]) Laya3D.init(GameConfig.width, GameConfig.height);
    		else Laya.init(GameConfig.width, GameConfig.height, Laya["WebGL"]);
    		Laya["Physics"] && Laya["Physics"].enable();
    		Laya["DebugPanel"] && Laya["DebugPanel"].enable();
    	
    		Laya.stage.scaleMode = GameConfig.scaleMode;
    		Laya.stage.screenMode = GameConfig.screenMode;
    		Laya.stage.alignV = GameConfig.alignV;
    		Laya.stage.alignH = GameConfig.alignH;
    		Laya.stage.frameRate="fast";

    		// Laya.MiniAdpter.autoCacheFile = true;
    		// Laya.MiniAdpter.AutoCacheDownFile = true;

    		// Laya.stage.alignH = "center";
    		// Laya.stage.alignV = "middle";
    		// Laya.stage.scaleMode = "showall";

    		//兼容微信不支持加载scene后缀场景
    		Laya.URL.exportSceneToJson = GameConfig.exportSceneToJson;

    		//打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
    		if (GameConfig.debug || Laya.Utils.getQueryString("debug") == "true") Laya.enableDebugPanel();
    		if (GameConfig.physicsDebug && Laya["PhysicsDebugDraw"]) Laya["PhysicsDebugDraw"].enable();
    		if (GameConfig.stat) Laya.Stat.show(0,50);
    		Laya.alertGlobalError = true;

    		console.log('引入游戏');
    		//激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
    		// Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    		XOLE.gi().Init();
    	}

    	onVersionLoaded() {
    		//激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
    		// Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    	}

    	onConfigLoaded() {
    		//加载IDE指定的场景
    		// GameConfig.startScene && Laya.Scene.open(GameConfig.startScene);
    		
    		//GmPlay.gi().GmTimer();
    		
    	}
    }
    //激活启动类
    new Main();

}());
//# sourceMappingURL=bundle.js.map
